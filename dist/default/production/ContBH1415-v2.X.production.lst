

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Wed Aug 07 02:15:29 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	18F452
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	eeprom_data,global,class=EEDATA,delta=1,noexec
     6                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     8                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    16                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    17                           	psect	text0,global,reloc=2,class=CODE,delta=1
    18                           	psect	text1,global,reloc=2,class=CODE,delta=1
    19                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=2
    20                           	psect	text3,global,reloc=2,class=CODE,delta=1
    21                           	psect	text4,global,reloc=2,class=CODE,delta=1
    22                           	psect	text5,global,reloc=2,class=CODE,delta=1
    23                           	psect	text6,global,reloc=2,class=CODE,delta=1
    24                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=2
    25                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=2
    26                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=2
    27                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=2
    28                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    29                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=1
    30                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=1
    31                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=2
    32                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=2
    33                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=2
    34                           	psect	text17,global,reloc=2,class=CODE,delta=1
    35                           	psect	text18,global,reloc=2,class=CODE,delta=1
    36                           	psect	text19,global,reloc=2,class=CODE,delta=1
    37                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=1
    38                           	psect	text21,global,reloc=2,class=CODE,delta=1
    39                           	psect	text22,global,reloc=2,class=CODE,delta=1
    40                           	psect	text23,global,reloc=2,class=CODE,delta=1
    41                           	psect	text24,global,reloc=2,class=CODE,delta=1
    42                           	psect	text25,global,reloc=2,class=CODE,delta=1
    43                           	psect	text26,global,reloc=2,class=CODE,delta=1
    44                           	psect	text27,global,reloc=2,class=CODE,delta=1
    45                           	psect	text28,global,reloc=2,class=CODE,delta=1
    46                           	psect	text29,global,reloc=2,class=CODE,delta=1
    47                           	psect	text30,global,reloc=2,class=CODE,delta=1
    48                           	psect	text31,global,reloc=2,class=CODE,delta=1
    49                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    50                           	psect	text33,global,reloc=2,class=CODE,delta=1
    51                           	psect	text34,global,reloc=2,class=CODE,delta=1
    52                           	psect	text35,global,reloc=2,class=CODE,delta=1
    53                           	psect	text36,global,reloc=2,class=CODE,delta=1
    54                           	psect	text37,global,reloc=2,class=CODE,delta=1
    55                           	psect	text38,global,reloc=2,class=CODE,delta=1
    56                           	psect	text39,global,reloc=2,class=CODE,delta=1
    57                           	psect	text40,global,reloc=2,class=CODE,delta=1
    58                           	psect	text41,global,reloc=2,class=CODE,delta=1
    59                           	psect	text42,global,reloc=2,class=CODE,delta=1
    60                           	psect	text43,global,reloc=2,class=CODE,delta=1
    61                           	psect	text44,global,reloc=2,class=CODE,delta=1
    62                           	psect	text45,global,reloc=2,class=CODE,delta=1
    63                           	psect	text46,global,reloc=2,class=CODE,delta=1
    64                           	psect	text47,global,reloc=2,class=CODE,delta=1
    65                           	psect	text48,global,reloc=2,class=CODE,delta=1
    66                           	psect	text49,global,reloc=2,class=CODE,delta=1
    67                           	psect	text50,global,reloc=2,class=CODE,delta=1
    68                           	psect	text51,global,reloc=2,class=CODE,delta=1
    69                           	psect	text52,global,reloc=2,class=CODE,delta=1
    70                           	psect	text53,global,reloc=2,class=CODE,delta=1
    71                           	psect	text54,global,reloc=2,class=CODE,delta=1
    72                           	psect	text55,global,reloc=2,class=CODE,delta=1
    73                           	psect	text56,global,reloc=2,class=CODE,delta=1,group=1
    74                           	psect	text57,global,reloc=2,class=CODE,delta=1,group=1
    75                           	psect	text58,global,reloc=2,class=CODE,delta=1
    76                           	psect	text59,global,reloc=2,class=CODE,delta=1
    77                           	psect	text60,global,reloc=2,class=CODE,delta=1
    78                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    79                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    80                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    81  0000                     
    82                           ; Version 2.05
    83                           ; Generated 20/12/2018 GMT
    84                           ; 
    85                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    86                           ; All rights reserved.
    87                           ; 
    88                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    89                           ; 
    90                           ; Redistribution and use in source and binary forms, with or without modification, are
    91                           ; permitted provided that the following conditions are met:
    92                           ; 
    93                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    94                           ;        conditions and the following disclaimer.
    95                           ; 
    96                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    97                           ;        of conditions and the following disclaimer in the documentation and/or other
    98                           ;        materials provided with the distribution.
    99                           ; 
   100                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   101                           ;        software without specific prior written permission.
   102                           ; 
   103                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   104                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   105                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   106                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   107                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   108                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   109                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   110                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   111                           ; 
   112                           ; 
   113                           ; Code-generator required, PIC18F452 Definitions
   114                           ; 
   115                           ; SFR Addresses
   116  0000                     
   117                           	psect	eeprom_data
   118  F00000  7E 03 00 00 00 00 01 00 	db	126,3,0,0,0,0,1,0	;# 
   119  F00008  7E 03 00 00 00 00 01 00 	db	126,3,0,0,0,0,1,0	;# 
   120  F00010  7E 03 00 00 00 00 01 00 	db	126,3,0,0,0,0,1,0	;# 
   121  F00018  7E 03 00 00 00 00 01 00 	db	126,3,0,0,0,0,1,0	;# 
   122  F00020  7E 03 00 00 00 00 01 00 	db	126,3,0,0,0,0,1,0	;# 
   123                           
   124                           	psect	idataCOMRAM
   125  002993                     __pidataCOMRAM:
   126                           	opt callstack 0
   127                           
   128                           ;initializer for _prTmr0H
   129  002993  6D                 	db	109
   130                           
   131                           ;initializer for _prTmr0L
   132  002994  84                 	db	132
   133                           
   134                           ;initializer for _prTmr1H
   135  002995  6D                 	db	109
   136                           
   137                           ;initializer for _prTmr1L
   138  002996  84                 	db	132
   139                           
   140                           	psect	idataBANK0
   141  00298E                     __pidataBANK0:
   142                           	opt callstack 0
   143                           
   144                           ;initializer for _stereoEnable
   145  00298E  01                 	db	1
   146                           
   147                           ;initializer for _minutes
   148  00298F  0F                 	db	15
   149                           
   150                           ;initializer for _hours
   151  002990  16                 	db	22
   152                           
   153                           ;initializer for _days
   154  002991  13                 	db	19
   155                           
   156                           ;initializer for _months
   157  002992  03                 	db	3
   158                           
   159                           	psect	smallconst
   160  000600                     __psmallconst:
   161                           	opt callstack 0
   162  000600  00                 	db	0
   163  000601  0D                 	db	13
   164  000602                     __end_of_FINAL_DAY:
   165                           	opt callstack 0
   166  000602  06                 	db	6
   167  000603                     __end_of_FINAL_MONTH:
   168                           	opt callstack 0
   169  000603  01                 	db	1
   170  000604                     __end_of_UN_BLOCKED:
   171                           	opt callstack 0
   172  000604  00                 	db	0
   173  000605                     __end_of_BLOCKED:
   174                           	opt callstack 0
   175  0000                     _PORTEbits	set	3972
   176  0000                     _TRISDbits	set	3989
   177  0000                     _PORTD	set	3971
   178  0000                     _PORTDbits	set	3971
   179  0000                     _PORTB	set	3969
   180  0000                     _ADRESH	set	4036
   181  0000                     _TMR0L	set	4054
   182  0000                     _TMR0H	set	4055
   183  0000                     _TMR1L	set	4046
   184  0000                     _TMR1H	set	4047
   185  0000                     _PIR1bits	set	3998
   186  0000                     _T1CONbits	set	4045
   187  0000                     _ADCON0bits	set	4034
   188  0000                     _ADCON1	set	4033
   189  0000                     _ADCON0	set	4034
   190  0000                     _T0CON	set	4053
   191  0000                     _T1CON	set	4045
   192  0000                     _TRISE	set	3990
   193  0000                     _TRISD	set	3989
   194  0000                     _TRISC	set	3988
   195  0000                     _TRISB	set	3987
   196  0000                     _TRISA	set	3986
   197  0000                     _PIE1	set	3997
   198  0000                     _INTCON	set	4082
   199  0000                     _OSCCON	set	4051
   200  0000                     _PORTCbits	set	3970
   201  0000                     _PORTAbits	set	3968
   202  0000                     _PIR2bits	set	4001
   203  0000                     _EECON2	set	4007
   204  0000                     _INTCONbits	set	4082
   205  0000                     _EEDATA	set	4008
   206  0000                     _EECON1bits	set	4006
   207  0000                     _EEADR	set	4009
   208  000605                     STR_4:
   209  000605  46                 	db	70	;'F'
   210  000606  63                 	db	99	;'c'
   211  000607  69                 	db	105	;'i'
   212  000608  61                 	db	97	;'a'
   213  000609  2E                 	db	46
   214  00060A  20                 	db	32
   215  00060B  20                 	db	32
   216  00060C  25                 	db	37
   217  00060D  33                 	db	51	;'3'
   218  00060E  64                 	db	100	;'d'
   219  00060F  2E                 	db	46
   220  000610  25                 	db	37
   221  000611  64                 	db	100	;'d'
   222  000612  20                 	db	32
   223  000613  4D                 	db	77	;'M'
   224  000614  48                 	db	72	;'H'
   225  000615  7A                 	db	122	;'z'
   226  000616  00                 	db	0
   227  000617                     STR_1:
   228  000617  46                 	db	70	;'F'
   229  000618  69                 	db	105	;'i'
   230  000619  6A                 	db	106	;'j'
   231  00061A  61                 	db	97	;'a'
   232  00061B  6E                 	db	110	;'n'
   233  00061C  64                 	db	100	;'d'
   234  00061D  6F                 	db	111	;'o'
   235  00061E  20                 	db	32
   236  00061F  46                 	db	70	;'F'
   237  000620  63                 	db	99	;'c'
   238  000621  69                 	db	105	;'i'
   239  000622  61                 	db	97	;'a'
   240  000623  2E                 	db	46
   241  000624  20                 	db	32
   242  000625  20                 	db	32
   243  000626  20                 	db	32
   244  000627  00                 	db	0
   245  000628                     STR_3:
   246  000628  53                 	db	83	;'S'
   247  000629  65                 	db	101	;'e'
   248  00062A  6C                 	db	108	;'l'
   249  00062B  65                 	db	101	;'e'
   250  00062C  63                 	db	99	;'c'
   251  00062D  63                 	db	99	;'c'
   252  00062E  69                 	db	105	;'i'
   253  00062F  6F                 	db	111	;'o'
   254  000630  6E                 	db	110	;'n'
   255  000631  65                 	db	101	;'e'
   256  000632  20                 	db	32
   257  000633  46                 	db	70	;'F'
   258  000634  63                 	db	99	;'c'
   259  000635  69                 	db	105	;'i'
   260  000636  61                 	db	97	;'a'
   261  000637  2E                 	db	46
   262  000638  00                 	db	0
   263  000639                     STR_2:
   264  000639  41                 	db	65	;'A'
   265  00063A  4D                 	db	77	;'M'
   266  00063B  50                 	db	80	;'P'
   267  00063C  52                 	db	82	;'R'
   268  00063D  4F                 	db	79	;'O'
   269  00063E  20                 	db	32
   270  00063F  20                 	db	32
   271  000640  20                 	db	32
   272  000641  20                 	db	32
   273  000642  20                 	db	32
   274  000643  20                 	db	32
   275  000644  45                 	db	69	;'E'
   276  000645  58                 	db	88	;'X'
   277  000646  2D                 	db	45
   278  000647  46                 	db	70	;'F'
   279  000648  4D                 	db	77	;'M'
   280  000649  00                 	db	0
   281                           
   282                           ; #config settings
   283  00064A  00                 	db	0	; dummy byte at the end
   284  0000                     
   285                           	psect	cinit
   286  002116                     __pcinit:
   287                           	opt callstack 0
   288  002116                     start_initialization:
   289                           	opt callstack 0
   290  002116                     __initialization:
   291                           	opt callstack 0
   292                           
   293                           ; Initialize objects allocated to BANK0 (5 bytes)
   294                           ; load TBLPTR registers with __pidataBANK0
   295  002116  0E8E               	movlw	low __pidataBANK0
   296  002118  6EF6               	movwf	tblptrl,c
   297  00211A  0E29               	movlw	high __pidataBANK0
   298  00211C  6EF7               	movwf	tblptrh,c
   299  00211E  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   300  002120  6EF8               	movwf	tblptru,c
   301  002122  EE00  F0FB         	lfsr	0,__pdataBANK0
   302  002126  EE10 F005          	lfsr	1,5
   303  00212A                     copy_data0:
   304  00212A  0009               	tblrd		*+
   305  00212C  CFF5 FFEE          	movff	tablat,postinc0
   306  002130  50E5               	movf	postdec1,w,c
   307  002132  50E1               	movf	fsr1l,w,c
   308  002134  E1FA               	bnz	copy_data0
   309                           
   310                           ; Initialize objects allocated to COMRAM (4 bytes)
   311                           ; load TBLPTR registers with __pidataCOMRAM
   312  002136  0E93               	movlw	low __pidataCOMRAM
   313  002138  6EF6               	movwf	tblptrl,c
   314  00213A  0E29               	movlw	high __pidataCOMRAM
   315  00213C  6EF7               	movwf	tblptrh,c
   316  00213E  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   317  002140  6EF8               	movwf	tblptru,c
   318  002142  EE00  F07A         	lfsr	0,__pdataCOMRAM
   319  002146  EE10 F004          	lfsr	1,4
   320  00214A                     copy_data1:
   321  00214A  0009               	tblrd		*+
   322  00214C  CFF5 FFEE          	movff	tablat,postinc0
   323  002150  50E5               	movf	postdec1,w,c
   324  002152  50E1               	movf	fsr1l,w,c
   325  002154  E1FA               	bnz	copy_data1
   326                           
   327                           ; Clear objects allocated to BANK1 (66 bytes)
   328  002156  EE01  F000         	lfsr	0,__pbssBANK1
   329  00215A  0E42               	movlw	66
   330  00215C                     clear_0:
   331  00215C  6AEE               	clrf	postinc0,c
   332  00215E  06E8               	decf	wreg,f,c
   333  002160  E1FD               	bnz	clear_0
   334                           
   335                           ; Clear objects allocated to BANK0 (13 bytes)
   336  002162  EE00  F0EE         	lfsr	0,__pbssBANK0
   337  002166  0E0D               	movlw	13
   338  002168                     clear_1:
   339  002168  6AEE               	clrf	postinc0,c
   340  00216A  06E8               	decf	wreg,f,c
   341  00216C  E1FD               	bnz	clear_1
   342                           
   343                           ; Clear objects allocated to COMRAM (1 bytes)
   344  00216E  6A7E               	clrf	__pbssCOMRAM& (0+255),c
   345  002170                     end_of_initialization:
   346                           	opt callstack 0
   347  002170                     __end_of__initialization:
   348                           	opt callstack 0
   349  002170  907F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   350  002172  927F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   351  002174  0E00               	movlw	low (__Lmediumconst shr (0+16))
   352  002176  6EF8               	movwf	tblptru,c
   353  002178  0100               	movlb	0
   354  00217A  EF64  F00D         	goto	_main	;jump to C main() function
   355                           
   356                           	psect	bssCOMRAM
   357  00007E                     __pbssCOMRAM:
   358                           	opt callstack 0
   359  00007E                     _cntTmr1:
   360                           	opt callstack 0
   361  00007E                     	ds	1
   362                           
   363                           	psect	dataCOMRAM
   364  00007A                     __pdataCOMRAM:
   365                           	opt callstack 0
   366  00007A                     _prTmr0H:
   367                           	opt callstack 0
   368  00007A                     	ds	1
   369  00007B                     _prTmr0L:
   370                           	opt callstack 0
   371  00007B                     	ds	1
   372  00007C                     _prTmr1H:
   373                           	opt callstack 0
   374  00007C                     	ds	1
   375  00007D                     _prTmr1L:
   376                           	opt callstack 0
   377  00007D                     	ds	1
   378                           
   379                           	psect	bssBANK0
   380  0000EE                     __pbssBANK0:
   381                           	opt callstack 0
   382  0000EE                     _nout:
   383                           	opt callstack 0
   384  0000EE                     	ds	2
   385  0000F0                     _width:
   386                           	opt callstack 0
   387  0000F0                     	ds	2
   388  0000F2                     _prec:
   389                           	opt callstack 0
   390  0000F2                     	ds	2
   391  0000F4                     _flags:
   392                           	opt callstack 0
   393  0000F4                     	ds	2
   394  0000F6                     _frequency:
   395                           	opt callstack 0
   396  0000F6                     	ds	2
   397  0000F8                     _functionalStat:
   398                           	opt callstack 0
   399  0000F8                     	ds	1
   400  0000F9                     _hundredMiliSeconds:
   401                           	opt callstack 0
   402  0000F9                     	ds	1
   403  0000FA                     _seconds:
   404                           	opt callstack 0
   405  0000FA                     	ds	1
   406                           
   407                           	psect	dataBANK0
   408  0000FB                     __pdataBANK0:
   409                           	opt callstack 0
   410  0000FB                     _stereoEnable:
   411                           	opt callstack 0
   412  0000FB                     	ds	1
   413  0000FC                     _minutes:
   414                           	opt callstack 0
   415  0000FC                     	ds	1
   416  0000FD                     _hours:
   417                           	opt callstack 0
   418  0000FD                     	ds	1
   419  0000FE                     _days:
   420                           	opt callstack 0
   421  0000FE                     	ds	1
   422  0000FF                     _months:
   423                           	opt callstack 0
   424  0000FF                     	ds	1
   425                           
   426                           	psect	bssBANK1
   427  000100                     __pbssBANK1:
   428                           	opt callstack 0
   429  000100                     _dbuf:
   430                           	opt callstack 0
   431  000100                     	ds	32
   432  000120                     _lineTwo:
   433                           	opt callstack 0
   434  000120                     	ds	17
   435  000131                     _lineOne:
   436                           	opt callstack 0
   437  000131                     	ds	17
   438                           
   439                           	psect	cstackBANK0
   440  000080                     __pcstackBANK0:
   441                           	opt callstack 0
   442  000080                     ??_BusyXLCD:
   443  000080                     ??_DelayPORXLCD:
   444  000080                     ?_strlen:
   445                           	opt callstack 0
   446  000080                     ?_isdigit:
   447                           	opt callstack 0
   448  000080                     ?_isspace:
   449                           	opt callstack 0
   450  000080                     ?___wmul:
   451                           	opt callstack 0
   452  000080                     ?___aodiv:
   453                           	opt callstack 0
   454  000080                     ?___aomod:
   455                           	opt callstack 0
   456  000080                     readEEPROM@address:
   457                           	opt callstack 0
   458  000080                     writeEEPROM@address:
   459                           	opt callstack 0
   460  000080                     WriteCmdXLCD@cmd:
   461                           	opt callstack 0
   462  000080                     SetDDRamAddr@DDaddr:
   463                           	opt callstack 0
   464  000080                     ___wmul@multiplier:
   465                           	opt callstack 0
   466  000080                     isdigit@c:
   467                           	opt callstack 0
   468  000080                     isspace@c:
   469                           	opt callstack 0
   470  000080                     fputc@c:
   471                           	opt callstack 0
   472  000080                     strlen@s:
   473                           	opt callstack 0
   474  000080                     ___aodiv@dividend:
   475                           	opt callstack 0
   476  000080                     ___aomod@dividend:
   477                           	opt callstack 0
   478                           
   479                           ; 8 bytes @ 0x0
   480  000080                     	ds	1
   481  000081                     ??_getData:
   482  000081                     ??_OpenXLCD:
   483  000081                     writeEEPROM@data:
   484                           	opt callstack 0
   485  000081                     SendCMDLCD@CMD:
   486                           	opt callstack 0
   487                           
   488                           ; 1 bytes @ 0x1
   489  000081                     	ds	1
   490  000082                     ??_isdigit:
   491  000082                     ??_isspace:
   492  000082                     setData@data0:
   493                           	opt callstack 0
   494  000082                     OpenXLCD@lcdtype:
   495                           	opt callstack 0
   496  000082                     ___wmul@multiplicand:
   497                           	opt callstack 0
   498  000082                     fputc@fp:
   499                           	opt callstack 0
   500  000082                     strlen@a:
   501                           	opt callstack 0
   502                           
   503                           ; 2 bytes @ 0x2
   504  000082                     	ds	1
   505  000083                     ??_initLCD:
   506  000083                     getData@aux0:
   507                           	opt callstack 0
   508  000083                     setData@data1:
   509                           	opt callstack 0
   510                           
   511                           ; 1 bytes @ 0x3
   512  000083                     	ds	1
   513  000084                     ??_fputc:
   514  000084                     getData@aux1:
   515                           	opt callstack 0
   516  000084                     setData@full:
   517                           	opt callstack 0
   518  000084                     ___wmul@product:
   519                           	opt callstack 0
   520                           
   521                           ; 2 bytes @ 0x4
   522  000084                     	ds	1
   523  000085                     
   524                           ; 1 bytes @ 0x5
   525  000085                     	ds	1
   526  000086                     _isspace$1512:
   527                           	opt callstack 0
   528  000086                     beep@ms:
   529                           	opt callstack 0
   530                           
   531                           ; 2 bytes @ 0x6
   532  000086                     	ds	1
   533  000087                     ?_atoi:
   534                           	opt callstack 0
   535  000087                     atoi@s:
   536                           	opt callstack 0
   537                           
   538                           ; 2 bytes @ 0x7
   539  000087                     	ds	1
   540  000088                     ___aodiv@divisor:
   541                           	opt callstack 0
   542  000088                     ___aomod@divisor:
   543                           	opt callstack 0
   544                           
   545                           ; 8 bytes @ 0x8
   546  000088                     	ds	1
   547  000089                     ??_atoi:
   548  000089                     fputs@s:
   549                           	opt callstack 0
   550                           
   551                           ; 2 bytes @ 0x9
   552  000089                     	ds	2
   553  00008B                     fputs@fp:
   554                           	opt callstack 0
   555                           
   556                           ; 2 bytes @ 0xB
   557  00008B                     	ds	2
   558  00008D                     fputs@c:
   559                           	opt callstack 0
   560  00008D                     atoi@neg:
   561                           	opt callstack 0
   562                           
   563                           ; 2 bytes @ 0xD
   564  00008D                     	ds	1
   565  00008E                     fputs@i:
   566                           	opt callstack 0
   567                           
   568                           ; 2 bytes @ 0xE
   569  00008E                     	ds	1
   570  00008F                     _atoi$1494:
   571                           	opt callstack 0
   572                           
   573                           ; 2 bytes @ 0xF
   574  00008F                     	ds	1
   575  000090                     ?_pad:
   576                           	opt callstack 0
   577  000090                     ___aodiv@counter:
   578                           	opt callstack 0
   579  000090                     ___aomod@counter:
   580                           	opt callstack 0
   581  000090                     pad@fp:
   582                           	opt callstack 0
   583                           
   584                           ; 2 bytes @ 0x10
   585  000090                     	ds	1
   586  000091                     ___aodiv@sign:
   587                           	opt callstack 0
   588  000091                     ___aomod@sign:
   589                           	opt callstack 0
   590  000091                     _atoi$1496:
   591                           	opt callstack 0
   592                           
   593                           ; 2 bytes @ 0x11
   594  000091                     	ds	1
   595  000092                     ?_abs:
   596                           	opt callstack 0
   597  000092                     pad@buf:
   598                           	opt callstack 0
   599  000092                     abs@a:
   600                           	opt callstack 0
   601  000092                     ___aodiv@quotient:
   602                           	opt callstack 0
   603                           
   604                           ; 8 bytes @ 0x12
   605  000092                     	ds	1
   606  000093                     _atoi$1495:
   607                           	opt callstack 0
   608                           
   609                           ; 1 bytes @ 0x13
   610  000093                     	ds	1
   611  000094                     ??_abs:
   612  000094                     pad@p:
   613                           	opt callstack 0
   614  000094                     atoi@n:
   615                           	opt callstack 0
   616                           
   617                           ; 2 bytes @ 0x14
   618  000094                     	ds	2
   619  000096                     ??_pad:
   620                           
   621                           ; 1 bytes @ 0x16
   622  000096                     	ds	1
   623  000097                     pad@i:
   624                           	opt callstack 0
   625                           
   626                           ; 2 bytes @ 0x17
   627  000097                     	ds	2
   628  000099                     pad@w:
   629                           	opt callstack 0
   630                           
   631                           ; 2 bytes @ 0x19
   632  000099                     	ds	2
   633  00009B                     ?_dtoa:
   634                           	opt callstack 0
   635  00009B                     dtoa@fp:
   636                           	opt callstack 0
   637                           
   638                           ; 2 bytes @ 0x1B
   639  00009B                     	ds	2
   640  00009D                     dtoa@d:
   641                           	opt callstack 0
   642                           
   643                           ; 8 bytes @ 0x1D
   644  00009D                     	ds	8
   645  0000A5                     ??_dtoa:
   646                           
   647                           ; 1 bytes @ 0x25
   648  0000A5                     	ds	8
   649  0000AD                     _dtoa$1022:
   650                           	opt callstack 0
   651                           
   652                           ; 2 bytes @ 0x2D
   653  0000AD                     	ds	2
   654  0000AF                     dtoa@p:
   655                           	opt callstack 0
   656                           
   657                           ; 2 bytes @ 0x2F
   658  0000AF                     	ds	2
   659  0000B1                     dtoa@w:
   660                           	opt callstack 0
   661                           
   662                           ; 2 bytes @ 0x31
   663  0000B1                     	ds	2
   664  0000B3                     dtoa@s:
   665                           	opt callstack 0
   666                           
   667                           ; 2 bytes @ 0x33
   668  0000B3                     	ds	2
   669  0000B5                     dtoa@n:
   670                           	opt callstack 0
   671                           
   672                           ; 8 bytes @ 0x35
   673  0000B5                     	ds	8
   674  0000BD                     dtoa@i:
   675                           	opt callstack 0
   676                           
   677                           ; 2 bytes @ 0x3D
   678  0000BD                     	ds	2
   679  0000BF                     ?_vfpfcnvrt:
   680                           	opt callstack 0
   681  0000BF                     vfpfcnvrt@fp:
   682                           	opt callstack 0
   683                           
   684                           ; 2 bytes @ 0x3F
   685  0000BF                     	ds	2
   686  0000C1                     vfpfcnvrt@fmt:
   687                           	opt callstack 0
   688                           
   689                           ; 2 bytes @ 0x41
   690  0000C1                     	ds	2
   691  0000C3                     vfpfcnvrt@ap:
   692                           	opt callstack 0
   693                           
   694                           ; 2 bytes @ 0x43
   695  0000C3                     	ds	2
   696  0000C5                     ??_vfpfcnvrt:
   697                           
   698                           ; 1 bytes @ 0x45
   699  0000C5                     	ds	4
   700  0000C9                     vfpfcnvrt@ll:
   701                           	opt callstack 0
   702                           
   703                           ; 8 bytes @ 0x49
   704  0000C9                     	ds	8
   705  0000D1                     _vfpfcnvrt$1037:
   706                           	opt callstack 0
   707                           
   708                           ; 2 bytes @ 0x51
   709  0000D1                     	ds	2
   710  0000D3                     ?_vfprintf:
   711                           	opt callstack 0
   712  0000D3                     vfprintf@fp:
   713                           	opt callstack 0
   714                           
   715                           ; 2 bytes @ 0x53
   716  0000D3                     	ds	2
   717  0000D5                     vfprintf@fmt:
   718                           	opt callstack 0
   719                           
   720                           ; 2 bytes @ 0x55
   721  0000D5                     	ds	2
   722  0000D7                     vfprintf@ap:
   723                           	opt callstack 0
   724                           
   725                           ; 2 bytes @ 0x57
   726  0000D7                     	ds	2
   727  0000D9                     vfprintf@cfmt:
   728                           	opt callstack 0
   729                           
   730                           ; 2 bytes @ 0x59
   731  0000D9                     	ds	2
   732  0000DB                     ?_sprintf:
   733                           	opt callstack 0
   734  0000DB                     sprintf@s:
   735                           	opt callstack 0
   736                           
   737                           ; 2 bytes @ 0x5B
   738  0000DB                     	ds	2
   739  0000DD                     sprintf@fmt:
   740                           	opt callstack 0
   741                           
   742                           ; 2 bytes @ 0x5D
   743  0000DD                     	ds	2
   744  0000DF                     
   745                           ; 1 bytes @ 0x5F
   746  0000DF                     	ds	2
   747  0000E1                     sprintf@ap:
   748                           	opt callstack 0
   749                           
   750                           ; 2 bytes @ 0x61
   751  0000E1                     	ds	2
   752  0000E3                     sprintf@f:
   753                           	opt callstack 0
   754                           
   755                           ; 6 bytes @ 0x63
   756  0000E3                     	ds	6
   757  0000E9                     ??_setFrequency:
   758                           
   759                           ; 1 bytes @ 0x69
   760  0000E9                     	ds	2
   761  0000EB                     ??_main:
   762                           
   763                           ; 1 bytes @ 0x6B
   764  0000EB                     	ds	2
   765  0000ED                     main@i:
   766                           	opt callstack 0
   767                           
   768                           ; 1 bytes @ 0x6D
   769  0000ED                     	ds	1
   770                           
   771                           	psect	cstackCOMRAM
   772  000001                     __pcstackCOMRAM:
   773                           	opt callstack 0
   774  000001                     ??_vumeter:
   775  000001                     ??i2_BusyXLCD:
   776  000001                     ?___lwdiv:
   777                           	opt callstack 0
   778  000001                     ?___lwmod:
   779                           	opt callstack 0
   780  000001                     ?i2___wmul:
   781                           	opt callstack 0
   782  000001                     ?i2_isdigit:
   783                           	opt callstack 0
   784  000001                     ?i2_isspace:
   785                           	opt callstack 0
   786  000001                     ?i2_strlen:
   787                           	opt callstack 0
   788  000001                     ?i2___aodiv:
   789                           	opt callstack 0
   790  000001                     ?i2___aomod:
   791                           	opt callstack 0
   792  000001                     WriteDataXLCD@data:
   793                           	opt callstack 0
   794  000001                     i2writeEEPROM@address:
   795                           	opt callstack 0
   796  000001                     i2SetDDRamAddr@DDaddr:
   797                           	opt callstack 0
   798  000001                     ___lwdiv@dividend:
   799                           	opt callstack 0
   800  000001                     ___lwmod@dividend:
   801                           	opt callstack 0
   802  000001                     i2___wmul@multiplier:
   803                           	opt callstack 0
   804  000001                     i2isdigit@c:
   805                           	opt callstack 0
   806  000001                     i2isspace@c:
   807                           	opt callstack 0
   808  000001                     i2fputc@c:
   809                           	opt callstack 0
   810  000001                     i2strlen@s:
   811                           	opt callstack 0
   812  000001                     i2___aodiv@dividend:
   813                           	opt callstack 0
   814  000001                     i2___aomod@dividend:
   815                           	opt callstack 0
   816                           
   817                           ; 8 bytes @ 0x0
   818  000001                     	ds	1
   819  000002                     i2writeEEPROM@data:
   820                           	opt callstack 0
   821  000002                     putsXLCD@buffer:
   822                           	opt callstack 0
   823                           
   824                           ; 2 bytes @ 0x1
   825  000002                     	ds	1
   826  000003                     ??i2_isdigit:
   827  000003                     ??i2_isspace:
   828  000003                     i2setData@data0:
   829                           	opt callstack 0
   830  000003                     ___lwdiv@divisor:
   831                           	opt callstack 0
   832  000003                     ___lwmod@divisor:
   833                           	opt callstack 0
   834  000003                     i2___wmul@multiplicand:
   835                           	opt callstack 0
   836  000003                     i2fputc@fp:
   837                           	opt callstack 0
   838  000003                     i2strlen@a:
   839                           	opt callstack 0
   840                           
   841                           ; 2 bytes @ 0x2
   842  000003                     	ds	1
   843  000004                     vumeter@level:
   844                           	opt callstack 0
   845  000004                     i2setData@data1:
   846                           	opt callstack 0
   847                           
   848                           ; 1 bytes @ 0x3
   849  000004                     	ds	1
   850  000005                     ??i2_fputc:
   851  000005                     vumeter@vumLevel:
   852                           	opt callstack 0
   853  000005                     ___lwmod@counter:
   854                           	opt callstack 0
   855  000005                     i2setData@full:
   856                           	opt callstack 0
   857  000005                     ___lwdiv@quotient:
   858                           	opt callstack 0
   859  000005                     i2___wmul@product:
   860                           	opt callstack 0
   861                           
   862                           ; 2 bytes @ 0x4
   863  000005                     	ds	1
   864  000006                     
   865                           ; 1 bytes @ 0x5
   866  000006                     	ds	1
   867  000007                     ___lwdiv@counter:
   868                           	opt callstack 0
   869  000007                     i2_isspace$1512:
   870                           	opt callstack 0
   871                           
   872                           ; 1 bytes @ 0x6
   873  000007                     	ds	1
   874  000008                     ?i2_atoi:
   875                           	opt callstack 0
   876  000008                     i2atoi@s:
   877                           	opt callstack 0
   878                           
   879                           ; 2 bytes @ 0x7
   880  000008                     	ds	1
   881  000009                     i2___aodiv@divisor:
   882                           	opt callstack 0
   883  000009                     i2___aomod@divisor:
   884                           	opt callstack 0
   885                           
   886                           ; 8 bytes @ 0x8
   887  000009                     	ds	1
   888  00000A                     ??i2_atoi:
   889  00000A                     i2fputs@s:
   890                           	opt callstack 0
   891                           
   892                           ; 2 bytes @ 0x9
   893  00000A                     	ds	2
   894  00000C                     i2fputs@fp:
   895                           	opt callstack 0
   896                           
   897                           ; 2 bytes @ 0xB
   898  00000C                     	ds	2
   899  00000E                     i2fputs@c:
   900                           	opt callstack 0
   901  00000E                     i2atoi@neg:
   902                           	opt callstack 0
   903                           
   904                           ; 2 bytes @ 0xD
   905  00000E                     	ds	1
   906  00000F                     i2fputs@i:
   907                           	opt callstack 0
   908                           
   909                           ; 2 bytes @ 0xE
   910  00000F                     	ds	1
   911  000010                     i2_atoi$1494:
   912                           	opt callstack 0
   913                           
   914                           ; 2 bytes @ 0xF
   915  000010                     	ds	1
   916  000011                     ?i2_pad:
   917                           	opt callstack 0
   918  000011                     i2___aodiv@counter:
   919                           	opt callstack 0
   920  000011                     i2___aomod@counter:
   921                           	opt callstack 0
   922  000011                     i2pad@fp:
   923                           	opt callstack 0
   924                           
   925                           ; 2 bytes @ 0x10
   926  000011                     	ds	1
   927  000012                     i2___aodiv@sign:
   928                           	opt callstack 0
   929  000012                     i2___aomod@sign:
   930                           	opt callstack 0
   931  000012                     i2_atoi$1496:
   932                           	opt callstack 0
   933                           
   934                           ; 2 bytes @ 0x11
   935  000012                     	ds	1
   936  000013                     ?i2_abs:
   937                           	opt callstack 0
   938  000013                     i2pad@buf:
   939                           	opt callstack 0
   940  000013                     i2abs@a:
   941                           	opt callstack 0
   942  000013                     i2___aodiv@quotient:
   943                           	opt callstack 0
   944                           
   945                           ; 8 bytes @ 0x12
   946  000013                     	ds	1
   947  000014                     i2_atoi$1495:
   948                           	opt callstack 0
   949                           
   950                           ; 1 bytes @ 0x13
   951  000014                     	ds	1
   952  000015                     ??i2_abs:
   953  000015                     i2pad@p:
   954                           	opt callstack 0
   955  000015                     i2atoi@n:
   956                           	opt callstack 0
   957                           
   958                           ; 2 bytes @ 0x14
   959  000015                     	ds	2
   960  000017                     ??i2_pad:
   961                           
   962                           ; 1 bytes @ 0x16
   963  000017                     	ds	1
   964  000018                     i2pad@i:
   965                           	opt callstack 0
   966                           
   967                           ; 2 bytes @ 0x17
   968  000018                     	ds	2
   969  00001A                     i2pad@w:
   970                           	opt callstack 0
   971                           
   972                           ; 2 bytes @ 0x19
   973  00001A                     	ds	2
   974  00001C                     ?i2_dtoa:
   975                           	opt callstack 0
   976  00001C                     i2dtoa@fp:
   977                           	opt callstack 0
   978                           
   979                           ; 2 bytes @ 0x1B
   980  00001C                     	ds	2
   981  00001E                     i2dtoa@d:
   982                           	opt callstack 0
   983                           
   984                           ; 8 bytes @ 0x1D
   985  00001E                     	ds	8
   986  000026                     ??i2_dtoa:
   987                           
   988                           ; 1 bytes @ 0x25
   989  000026                     	ds	8
   990  00002E                     i2_dtoa$1022:
   991                           	opt callstack 0
   992                           
   993                           ; 2 bytes @ 0x2D
   994  00002E                     	ds	2
   995  000030                     i2dtoa@p:
   996                           	opt callstack 0
   997                           
   998                           ; 2 bytes @ 0x2F
   999  000030                     	ds	2
  1000  000032                     i2dtoa@w:
  1001                           	opt callstack 0
  1002                           
  1003                           ; 2 bytes @ 0x31
  1004  000032                     	ds	2
  1005  000034                     i2dtoa@s:
  1006                           	opt callstack 0
  1007                           
  1008                           ; 2 bytes @ 0x33
  1009  000034                     	ds	2
  1010  000036                     i2dtoa@n:
  1011                           	opt callstack 0
  1012                           
  1013                           ; 8 bytes @ 0x35
  1014  000036                     	ds	8
  1015  00003E                     i2dtoa@i:
  1016                           	opt callstack 0
  1017                           
  1018                           ; 2 bytes @ 0x3D
  1019  00003E                     	ds	2
  1020  000040                     ?i2_vfpfcnvrt:
  1021                           	opt callstack 0
  1022  000040                     i2vfpfcnvrt@fp:
  1023                           	opt callstack 0
  1024                           
  1025                           ; 2 bytes @ 0x3F
  1026  000040                     	ds	2
  1027  000042                     i2vfpfcnvrt@fmt:
  1028                           	opt callstack 0
  1029                           
  1030                           ; 2 bytes @ 0x41
  1031  000042                     	ds	2
  1032  000044                     i2vfpfcnvrt@ap:
  1033                           	opt callstack 0
  1034                           
  1035                           ; 2 bytes @ 0x43
  1036  000044                     	ds	2
  1037  000046                     ??i2_vfpfcnvrt:
  1038                           
  1039                           ; 1 bytes @ 0x45
  1040  000046                     	ds	4
  1041  00004A                     i2vfpfcnvrt@ll:
  1042                           	opt callstack 0
  1043                           
  1044                           ; 8 bytes @ 0x49
  1045  00004A                     	ds	8
  1046  000052                     i2_vfpfcnvrt$1037:
  1047                           	opt callstack 0
  1048                           
  1049                           ; 2 bytes @ 0x51
  1050  000052                     	ds	2
  1051  000054                     ?i2_vfprintf:
  1052                           	opt callstack 0
  1053  000054                     i2vfprintf@fp:
  1054                           	opt callstack 0
  1055                           
  1056                           ; 2 bytes @ 0x53
  1057  000054                     	ds	2
  1058  000056                     i2vfprintf@fmt:
  1059                           	opt callstack 0
  1060                           
  1061                           ; 2 bytes @ 0x55
  1062  000056                     	ds	2
  1063  000058                     i2vfprintf@ap:
  1064                           	opt callstack 0
  1065                           
  1066                           ; 2 bytes @ 0x57
  1067  000058                     	ds	2
  1068  00005A                     i2vfprintf@cfmt:
  1069                           	opt callstack 0
  1070                           
  1071                           ; 2 bytes @ 0x59
  1072  00005A                     	ds	2
  1073  00005C                     ?i2_sprintf:
  1074                           	opt callstack 0
  1075  00005C                     i2sprintf@s:
  1076                           	opt callstack 0
  1077                           
  1078                           ; 2 bytes @ 0x5B
  1079  00005C                     	ds	2
  1080  00005E                     i2sprintf@fmt:
  1081                           	opt callstack 0
  1082                           
  1083                           ; 2 bytes @ 0x5D
  1084  00005E                     	ds	6
  1085  000064                     
  1086                           ; 1 bytes @ 0x63
  1087  000064                     	ds	2
  1088  000066                     i2sprintf@ap:
  1089                           	opt callstack 0
  1090                           
  1091                           ; 2 bytes @ 0x65
  1092  000066                     	ds	2
  1093  000068                     i2sprintf@f:
  1094                           	opt callstack 0
  1095                           
  1096                           ; 6 bytes @ 0x67
  1097  000068                     	ds	6
  1098  00006E                     updateLCD@integ:
  1099                           	opt callstack 0
  1100                           
  1101                           ; 1 bytes @ 0x6D
  1102  00006E                     	ds	1
  1103  00006F                     updateLCD@decim:
  1104                           	opt callstack 0
  1105                           
  1106                           ; 1 bytes @ 0x6E
  1107  00006F                     	ds	1
  1108  000070                     ??_inter:
  1109                           
  1110                           ; 1 bytes @ 0x6F
  1111  000070                     	ds	10
  1112                           
  1113 ;;
  1114 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1115 ;;
  1116 ;; *************** function _main *****************
  1117 ;; Defined at:
  1118 ;;		line 5 in file "main.c"
  1119 ;; Parameters:    Size  Location     Type
  1120 ;;		None
  1121 ;; Auto vars:     Size  Location     Type
  1122 ;;  i               1  109[BANK0 ] unsigned char 
  1123 ;; Return value:  Size  Location     Type
  1124 ;;                  1    wreg      void 
  1125 ;; Registers used:
  1126 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1127 ;; Tracked objects:
  1128 ;;		On entry : 0/0
  1129 ;;		On exit  : 0/0
  1130 ;;		Unchanged: 0/0
  1131 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1132 ;;      Params:         0       0       0       0       0       0       0
  1133 ;;      Locals:         0       1       0       0       0       0       0
  1134 ;;      Temps:          0       2       0       0       0       0       0
  1135 ;;      Totals:         0       3       0       0       0       0       0
  1136 ;;Total ram usage:        3 bytes
  1137 ;; Hardware stack levels required when called:   19
  1138 ;; This function calls:
  1139 ;;		_beep
  1140 ;;		_config
  1141 ;;		_getData
  1142 ;;		_setFrequency
  1143 ;;		_sprintf
  1144 ;; This function is called by:
  1145 ;;		Startup code after reset
  1146 ;; This function uses a non-reentrant model
  1147 ;;
  1148                           
  1149                           	psect	text0
  1150  001AC8                     __ptext0:
  1151                           	opt callstack 0
  1152  001AC8                     _main:
  1153                           	opt callstack 0
  1154  001AC8  FFFF               	dw	65535	; assembler added errata NOP
  1155                           
  1156                           ;main.c: 6:     char i = 0;
  1157                           
  1158                           ;incstack = 0
  1159  001ACA  0E00               	movlw	0
  1160  001ACC  0100               	movlb	0	; () banked
  1161  001ACE  6FED               	movwf	main@i& (0+255),b
  1162                           
  1163                           ; BSR set to: 0
  1164                           ;main.c: 7:     PORTAbits.RA5 = 0;
  1165  001AD0  9A80               	bcf	3968,5,c	;volatile
  1166                           
  1167                           ; BSR set to: 0
  1168                           ;main.c: 8:     _delay((unsigned long)((100)*(12000000/4000.0)));
  1169  001AD2  0E02               	movlw	2
  1170  001AD4  0100               	movlb	0	; () banked
  1171  001AD6  6FEC               	movwf	(??_main+1)& (0+255),b
  1172  001AD8  0E25               	movlw	37
  1173  001ADA  6FEB               	movwf	??_main& (0+255),b
  1174  001ADC  0E63               	movlw	99
  1175  001ADE                     u3707:
  1176  001ADE  FFFF               	dw	65535	; errata NOP
  1177  001AE0  2EE8               	decfsz	wreg,f,c
  1178  001AE2  D7FD               	bra	u3707
  1179  001AE4  2FEB               	decfsz	??_main& (0+255),f,b
  1180  001AE6  D7FB               	bra	u3707
  1181  001AE8  2FEC               	decfsz	(??_main+1)& (0+255),f,b
  1182  001AEA  D7F9               	bra	u3707
  1183  001AEC  F000               	nop	
  1184                           
  1185                           ;main.c: 9:     config();
  1186  001AEE  EC50  F013         	call	_config	;wreg free
  1187                           
  1188                           ;main.c: 10:     getData();
  1189  001AF2  EC56  F010         	call	_getData	;wreg free
  1190                           
  1191                           ;main.c: 11:     beep(10);
  1192  001AF6  0E00               	movlw	0
  1193  001AF8  0100               	movlb	0	; () banked
  1194  001AFA  6F87               	movwf	(beep@ms+1)& (0+255),b
  1195  001AFC  0E0A               	movlw	10
  1196  001AFE  6F86               	movwf	beep@ms& (0+255),b
  1197  001B00  EC4F  F011         	call	_beep	;wreg free
  1198                           
  1199                           ;main.c: 12:     if(!PORTCbits.RC0){
  1200  001B04  B082               	btfsc	3970,0,c	;volatile
  1201  001B06  D00D               	goto	l3998
  1202                           
  1203                           ;main.c: 13:         _delay((unsigned long)((25)*(12000000/4000.0)));
  1204  001B08  0E4A               	movlw	74
  1205  001B0A  0100               	movlb	0	; () banked
  1206  001B0C  6FEB               	movwf	??_main& (0+255),b
  1207  001B0E  0E18               	movlw	24
  1208  001B10                     u3717:
  1209  001B10  FFFF               	dw	65535	; errata NOP
  1210  001B12  2EE8               	decfsz	wreg,f,c
  1211  001B14  D7FD               	bra	u3717
  1212  001B16  2FEB               	decfsz	??_main& (0+255),f,b
  1213  001B18  D7FB               	bra	u3717
  1214  001B1A  F000               	nop	
  1215                           
  1216                           ;main.c: 14:         if(!PORTCbits.RC0) setFrequency();
  1217  001B1C  A082               	btfss	3970,0,c	;volatile
  1218  001B1E  EC15  F008         	call	_setFrequency	;wreg free
  1219  001B22                     l3998:
  1220  001B22  FFFF               	dw	65535	; assembler added errata NOP
  1221                           
  1222                           ;main.c: 16:     beep(100);
  1223  001B24  0E00               	movlw	0
  1224  001B26  0100               	movlb	0	; () banked
  1225  001B28  6F87               	movwf	(beep@ms+1)& (0+255),b
  1226  001B2A  0E64               	movlw	100
  1227  001B2C  6F86               	movwf	beep@ms& (0+255),b
  1228  001B2E  EC4F  F011         	call	_beep	;wreg free
  1229  001B32                     l4004:
  1230  001B32  FFFF               	dw	65535	; assembler added errata NOP
  1231                           
  1232                           ;main.c: 18:         sprintf(lineOne,"Fijando Fcia.   ");
  1233  001B34  0E31               	movlw	low _lineOne
  1234  001B36  0100               	movlb	0	; () banked
  1235  001B38  6FDB               	movwf	sprintf@s& (0+255),b
  1236  001B3A  0E01               	movlw	high _lineOne
  1237  001B3C  6FDC               	movwf	(sprintf@s+1)& (0+255),b
  1238  001B3E  0E17               	movlw	low STR_1
  1239  001B40  6FDD               	movwf	sprintf@fmt& (0+255),b
  1240  001B42  0E06               	movlw	high STR_1
  1241  001B44  6FDE               	movwf	(sprintf@fmt+1)& (0+255),b
  1242  001B46  EC7B  F011         	call	_sprintf	;wreg free
  1243                           
  1244                           ;main.c: 19:         _delay((unsigned long)((90)*(12000000/4000.0)));
  1245  001B4A  0E02               	movlw	2
  1246  001B4C  0100               	movlb	0	; () banked
  1247  001B4E  6FEC               	movwf	(??_main+1)& (0+255),b
  1248  001B50  0E08               	movlw	8
  1249  001B52  6FEB               	movwf	??_main& (0+255),b
  1250  001B54  0E25               	movlw	37
  1251  001B56                     u3727:
  1252  001B56  FFFF               	dw	65535	; errata NOP
  1253  001B58  2EE8               	decfsz	wreg,f,c
  1254  001B5A  D7FD               	bra	u3727
  1255  001B5C  2FEB               	decfsz	??_main& (0+255),f,b
  1256  001B5E  D7FB               	bra	u3727
  1257  001B60  2FEC               	decfsz	(??_main+1)& (0+255),f,b
  1258  001B62  D7F9               	bra	u3727
  1259  001B64  D000               	nop2	
  1260  001B66  F000               	nop	
  1261                           
  1262                           ;main.c: 20:     }
  1263  001B68  0100               	movlb	0	; () banked
  1264  001B6A  2BED               	incf	main@i& (0+255),f,b
  1265                           
  1266                           ; BSR set to: 0
  1267  001B6C  0E1D               	movlw	29
  1268  001B6E  65ED               	cpfsgt	main@i& (0+255),b
  1269  001B70  D7E0               	goto	l4004
  1270                           
  1271                           ; BSR set to: 0
  1272                           ;main.c: 22:     sprintf(lineOne,"AMPRO      EX-FM");
  1273  001B72  0E31               	movlw	low _lineOne
  1274  001B74  6FDB               	movwf	sprintf@s& (0+255),b
  1275  001B76  0E01               	movlw	high _lineOne
  1276  001B78  6FDC               	movwf	(sprintf@s+1)& (0+255),b
  1277  001B7A  0E39               	movlw	low STR_2
  1278  001B7C  6FDD               	movwf	sprintf@fmt& (0+255),b
  1279  001B7E  0E06               	movlw	high STR_2
  1280  001B80  6FDE               	movwf	(sprintf@fmt+1)& (0+255),b
  1281  001B82  EC7B  F011         	call	_sprintf	;wreg free
  1282  001B86                     l4014:
  1283  001B86  FFFF               	dw	65535	; assembler added errata NOP
  1284  001B88  0100               	movlb	0	; () banked
  1285  001B8A  05F8               	decf	_functionalStat& (0+255),w,b
  1286  001B8C  A4D8               	btfss	status,2,c
  1287  001B8E  D002               	goto	l191
  1288                           
  1289                           ; BSR set to: 0
  1290                           ;main.c: 25:             PORTAbits.RA5 = 1;
  1291  001B90  8A80               	bsf	3968,5,c	;volatile
  1292                           
  1293                           ;main.c: 26:         }else{
  1294  001B92  D7F9               	goto	l4014
  1295  001B94                     l191:
  1296  001B94  FFFF               	dw	65535	; assembler added errata NOP
  1297                           
  1298                           ; BSR set to: 0
  1299                           ;main.c: 27:             PORTAbits.RA5 = 0;
  1300  001B96  9A80               	bcf	3968,5,c	;volatile
  1301  001B98  D7F6               	goto	l4014
  1302  001B9A                     __end_of_main:
  1303                           	opt callstack 0
  1304                           
  1305 ;; *************** function _setFrequency *****************
  1306 ;; Defined at:
  1307 ;;		line 145 in file "main.c"
  1308 ;; Parameters:    Size  Location     Type
  1309 ;;		None
  1310 ;; Auto vars:     Size  Location     Type
  1311 ;;		None
  1312 ;; Return value:  Size  Location     Type
  1313 ;;                  1    wreg      void 
  1314 ;; Registers used:
  1315 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1316 ;; Tracked objects:
  1317 ;;		On entry : 0/0
  1318 ;;		On exit  : 0/0
  1319 ;;		Unchanged: 0/0
  1320 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1321 ;;      Params:         0       0       0       0       0       0       0
  1322 ;;      Locals:         0       0       0       0       0       0       0
  1323 ;;      Temps:          0       2       0       0       0       0       0
  1324 ;;      Totals:         0       2       0       0       0       0       0
  1325 ;;Total ram usage:        2 bytes
  1326 ;; Hardware stack levels used:    1
  1327 ;; Hardware stack levels required when called:   18
  1328 ;; This function calls:
  1329 ;;		_beep
  1330 ;;		_setData
  1331 ;;		_sprintf
  1332 ;; This function is called by:
  1333 ;;		_main
  1334 ;; This function uses a non-reentrant model
  1335 ;;
  1336                           
  1337                           	psect	text1
  1338  00102A                     __ptext1:
  1339                           	opt callstack 0
  1340  00102A                     _setFrequency:
  1341                           	opt callstack 0
  1342  00102A  FFFF               	dw	65535	; assembler added errata NOP
  1343                           
  1344                           ;main.c: 146:     sprintf(lineOne,"Seleccione Fcia.");
  1345                           
  1346                           ; BSR set to: 0
  1347                           ;incstack = 0
  1348  00102C  0E31               	movlw	low _lineOne
  1349  00102E  0100               	movlb	0	; () banked
  1350  001030  6FDB               	movwf	sprintf@s& (0+255),b
  1351  001032  0E01               	movlw	high _lineOne
  1352  001034  6FDC               	movwf	(sprintf@s+1)& (0+255),b
  1353  001036  0E28               	movlw	low STR_3
  1354  001038  6FDD               	movwf	sprintf@fmt& (0+255),b
  1355  00103A  0E06               	movlw	high STR_3
  1356  00103C  6FDE               	movwf	(sprintf@fmt+1)& (0+255),b
  1357  00103E  EC7B  F011         	call	_sprintf	;wreg free
  1358                           
  1359                           ;main.c: 147:     beep(200);
  1360  001042  0E00               	movlw	0
  1361  001044  0100               	movlb	0	; () banked
  1362  001046  6F87               	movwf	(beep@ms+1)& (0+255),b
  1363  001048  0EC8               	movlw	200
  1364  00104A  6F86               	movwf	beep@ms& (0+255),b
  1365  00104C  EC4F  F011         	call	_beep	;wreg free
  1366  001050                     l242:
  1367  001050  FFFF               	dw	65535	; assembler added errata NOP
  1368  001052  A082               	btfss	3970,0,c	;volatile
  1369  001054  D7FD               	goto	l242
  1370  001056                     u3360:
  1371  001056  FFFF               	dw	65535	; assembler added errata NOP
  1372                           
  1373                           ;main.c: 151:         if(!PORTCbits.RC1){
  1374                           
  1375                           ;main.c: 150:     while(1){
  1376  001058  B282               	btfsc	3970,1,c	;volatile
  1377  00105A  D04A               	goto	u3420
  1378                           
  1379                           ;main.c: 152:             if(frequency < 1080)frequency++;
  1380  00105C  0E38               	movlw	56
  1381  00105E  0100               	movlb	0	; () banked
  1382  001060  5DF6               	subwf	_frequency& (0+255),w,b
  1383  001062  0E04               	movlw	4
  1384  001064  59F7               	subwfb	(_frequency+1)& (0+255),w,b
  1385  001066  B0D8               	btfsc	status,0,c
  1386  001068  D002               	goto	l3862
  1387                           
  1388                           ; BSR set to: 0
  1389  00106A  4BF6               	infsnz	_frequency& (0+255),f,b
  1390  00106C  2BF7               	incf	(_frequency+1)& (0+255),f,b
  1391  00106E                     l3862:
  1392  00106E  FFFF               	dw	65535	; assembler added errata NOP
  1393                           
  1394                           ; BSR set to: 0
  1395                           ;main.c: 153:             if(frequency > 1080)frequency = 1080;
  1396  001070  0E39               	movlw	57
  1397  001072  5DF6               	subwf	_frequency& (0+255),w,b
  1398  001074  0E04               	movlw	4
  1399  001076  59F7               	subwfb	(_frequency+1)& (0+255),w,b
  1400  001078  A0D8               	btfss	status,0,c
  1401  00107A  D004               	goto	l3866
  1402                           
  1403                           ; BSR set to: 0
  1404  00107C  0E04               	movlw	4
  1405  00107E  6FF7               	movwf	(_frequency+1)& (0+255),b
  1406  001080  0E38               	movlw	56
  1407  001082  6FF6               	movwf	_frequency& (0+255),b
  1408  001084                     l3866:
  1409  001084  FFFF               	dw	65535	; assembler added errata NOP
  1410                           
  1411                           ; BSR set to: 0
  1412                           ;main.c: 154:             beep(100);
  1413  001086  0E00               	movlw	0
  1414  001088  6F87               	movwf	(beep@ms+1)& (0+255),b
  1415  00108A  0E64               	movlw	100
  1416  00108C  6F86               	movwf	beep@ms& (0+255),b
  1417  00108E  EC4F  F011         	call	_beep	;wreg free
  1418                           
  1419                           ;main.c: 155:             _delay((unsigned long)((500)*(12000000/4000.0)));
  1420  001092  0E06               	movlw	6
  1421  001094  0100               	movlb	0	; () banked
  1422  001096  6FEA               	movwf	(??_setFrequency+1)& (0+255),b
  1423  001098  0EB6               	movlw	182
  1424  00109A  6FE9               	movwf	??_setFrequency& (0+255),b
  1425  00109C  0EF8               	movlw	248
  1426  00109E                     u3737:
  1427  00109E  FFFF               	dw	65535	; errata NOP
  1428  0010A0  2EE8               	decfsz	wreg,f,c
  1429  0010A2  D7FD               	bra	u3737
  1430  0010A4  2FE9               	decfsz	??_setFrequency& (0+255),f,b
  1431  0010A6  D7FB               	bra	u3737
  1432  0010A8  2FEA               	decfsz	(??_setFrequency+1)& (0+255),f,b
  1433  0010AA  D7F9               	bra	u3737
  1434  0010AC  D000               	nop2	
  1435  0010AE  F000               	nop	
  1436                           
  1437                           ;main.c: 156:             while(!PORTCbits.RC1){
  1438  0010B0  D01C               	goto	l3880
  1439  0010B2                     l3870:
  1440  0010B2  FFFF               	dw	65535	; assembler added errata NOP
  1441                           
  1442                           ;main.c: 157:                 if(frequency < 1080)frequency++;
  1443  0010B4  0E38               	movlw	56
  1444  0010B6  0100               	movlb	0	; () banked
  1445  0010B8  5DF6               	subwf	_frequency& (0+255),w,b
  1446  0010BA  0E04               	movlw	4
  1447  0010BC  59F7               	subwfb	(_frequency+1)& (0+255),w,b
  1448  0010BE  B0D8               	btfsc	status,0,c
  1449  0010C0  D002               	goto	l3874
  1450                           
  1451                           ; BSR set to: 0
  1452  0010C2  4BF6               	infsnz	_frequency& (0+255),f,b
  1453  0010C4  2BF7               	incf	(_frequency+1)& (0+255),f,b
  1454  0010C6                     l3874:
  1455  0010C6  FFFF               	dw	65535	; assembler added errata NOP
  1456                           
  1457                           ; BSR set to: 0
  1458                           ;main.c: 158:                 if(frequency > 1080)frequency = 1080;
  1459  0010C8  0E39               	movlw	57
  1460  0010CA  5DF6               	subwf	_frequency& (0+255),w,b
  1461  0010CC  0E04               	movlw	4
  1462  0010CE  59F7               	subwfb	(_frequency+1)& (0+255),w,b
  1463  0010D0  A0D8               	btfss	status,0,c
  1464  0010D2  D004               	goto	l3878
  1465                           
  1466                           ; BSR set to: 0
  1467  0010D4  0E04               	movlw	4
  1468  0010D6  6FF7               	movwf	(_frequency+1)& (0+255),b
  1469  0010D8  0E38               	movlw	56
  1470  0010DA  6FF6               	movwf	_frequency& (0+255),b
  1471  0010DC                     l3878:
  1472  0010DC  FFFF               	dw	65535	; assembler added errata NOP
  1473                           
  1474                           ; BSR set to: 0
  1475                           ;main.c: 159:                 beep(100);
  1476  0010DE  0E00               	movlw	0
  1477  0010E0  6F87               	movwf	(beep@ms+1)& (0+255),b
  1478  0010E2  0E64               	movlw	100
  1479  0010E4  6F86               	movwf	beep@ms& (0+255),b
  1480  0010E6  EC4F  F011         	call	_beep	;wreg free
  1481  0010EA                     l3880:
  1482  0010EA  FFFF               	dw	65535	; assembler added errata NOP
  1483                           
  1484                           ;main.c: 156:             while(!PORTCbits.RC1){
  1485  0010EC  A282               	btfss	3970,1,c	;volatile
  1486  0010EE  D7E1               	goto	l3870
  1487  0010F0                     u3420:
  1488  0010F0  FFFF               	dw	65535	; assembler added errata NOP
  1489                           
  1490                           ;main.c: 163:         if(!PORTCbits.RC2){
  1491                           
  1492                           ;main.c: 161:         }
  1493  0010F2  B482               	btfsc	3970,2,c	;volatile
  1494  0010F4  D04C               	goto	u3480
  1495                           
  1496                           ;main.c: 164:             if(frequency > 880)frequency--;
  1497  0010F6  0E71               	movlw	113
  1498  0010F8  0100               	movlb	0	; () banked
  1499  0010FA  5DF6               	subwf	_frequency& (0+255),w,b
  1500  0010FC  0E03               	movlw	3
  1501  0010FE  59F7               	subwfb	(_frequency+1)& (0+255),w,b
  1502  001100  A0D8               	btfss	status,0,c
  1503  001102  D003               	goto	l3886
  1504                           
  1505                           ; BSR set to: 0
  1506  001104  07F6               	decf	_frequency& (0+255),f,b
  1507  001106  A0D8               	btfss	status,0,c
  1508  001108  07F7               	decf	(_frequency+1)& (0+255),f,b
  1509  00110A                     l3886:
  1510  00110A  FFFF               	dw	65535	; assembler added errata NOP
  1511                           
  1512                           ; BSR set to: 0
  1513                           ;main.c: 165:             if(frequency < 880)frequency = 880;
  1514  00110C  0E70               	movlw	112
  1515  00110E  5DF6               	subwf	_frequency& (0+255),w,b
  1516  001110  0E03               	movlw	3
  1517  001112  59F7               	subwfb	(_frequency+1)& (0+255),w,b
  1518  001114  B0D8               	btfsc	status,0,c
  1519  001116  D004               	goto	l3890
  1520                           
  1521                           ; BSR set to: 0
  1522  001118  0E03               	movlw	3
  1523  00111A  6FF7               	movwf	(_frequency+1)& (0+255),b
  1524  00111C  0E70               	movlw	112
  1525  00111E  6FF6               	movwf	_frequency& (0+255),b
  1526  001120                     l3890:
  1527  001120  FFFF               	dw	65535	; assembler added errata NOP
  1528                           
  1529                           ; BSR set to: 0
  1530                           ;main.c: 166:             beep(100);
  1531  001122  0E00               	movlw	0
  1532  001124  6F87               	movwf	(beep@ms+1)& (0+255),b
  1533  001126  0E64               	movlw	100
  1534  001128  6F86               	movwf	beep@ms& (0+255),b
  1535  00112A  EC4F  F011         	call	_beep	;wreg free
  1536                           
  1537                           ;main.c: 167:             _delay((unsigned long)((500)*(12000000/4000.0)));
  1538  00112E  0E06               	movlw	6
  1539  001130  0100               	movlb	0	; () banked
  1540  001132  6FEA               	movwf	(??_setFrequency+1)& (0+255),b
  1541  001134  0EB6               	movlw	182
  1542  001136  6FE9               	movwf	??_setFrequency& (0+255),b
  1543  001138  0EF8               	movlw	248
  1544  00113A                     u3747:
  1545  00113A  FFFF               	dw	65535	; errata NOP
  1546  00113C  2EE8               	decfsz	wreg,f,c
  1547  00113E  D7FD               	bra	u3747
  1548  001140  2FE9               	decfsz	??_setFrequency& (0+255),f,b
  1549  001142  D7FB               	bra	u3747
  1550  001144  2FEA               	decfsz	(??_setFrequency+1)& (0+255),f,b
  1551  001146  D7F9               	bra	u3747
  1552  001148  D000               	nop2	
  1553  00114A  F000               	nop	
  1554                           
  1555                           ;main.c: 168:             while(!PORTCbits.RC2){
  1556  00114C  D01D               	goto	l3904
  1557  00114E                     l3894:
  1558  00114E  FFFF               	dw	65535	; assembler added errata NOP
  1559                           
  1560                           ;main.c: 169:                 if(frequency > 880)frequency--;
  1561  001150  0E71               	movlw	113
  1562  001152  0100               	movlb	0	; () banked
  1563  001154  5DF6               	subwf	_frequency& (0+255),w,b
  1564  001156  0E03               	movlw	3
  1565  001158  59F7               	subwfb	(_frequency+1)& (0+255),w,b
  1566  00115A  A0D8               	btfss	status,0,c
  1567  00115C  D003               	goto	l3898
  1568                           
  1569                           ; BSR set to: 0
  1570  00115E  07F6               	decf	_frequency& (0+255),f,b
  1571  001160  A0D8               	btfss	status,0,c
  1572  001162  07F7               	decf	(_frequency+1)& (0+255),f,b
  1573  001164                     l3898:
  1574  001164  FFFF               	dw	65535	; assembler added errata NOP
  1575                           
  1576                           ; BSR set to: 0
  1577                           ;main.c: 170:                 if(frequency < 880)frequency = 880;
  1578  001166  0E70               	movlw	112
  1579  001168  5DF6               	subwf	_frequency& (0+255),w,b
  1580  00116A  0E03               	movlw	3
  1581  00116C  59F7               	subwfb	(_frequency+1)& (0+255),w,b
  1582  00116E  B0D8               	btfsc	status,0,c
  1583  001170  D004               	goto	l3902
  1584                           
  1585                           ; BSR set to: 0
  1586  001172  0E03               	movlw	3
  1587  001174  6FF7               	movwf	(_frequency+1)& (0+255),b
  1588  001176  0E70               	movlw	112
  1589  001178  6FF6               	movwf	_frequency& (0+255),b
  1590  00117A                     l3902:
  1591  00117A  FFFF               	dw	65535	; assembler added errata NOP
  1592                           
  1593                           ; BSR set to: 0
  1594                           ;main.c: 171:                 beep(100);
  1595  00117C  0E00               	movlw	0
  1596  00117E  6F87               	movwf	(beep@ms+1)& (0+255),b
  1597  001180  0E64               	movlw	100
  1598  001182  6F86               	movwf	beep@ms& (0+255),b
  1599  001184  EC4F  F011         	call	_beep	;wreg free
  1600  001188                     l3904:
  1601  001188  FFFF               	dw	65535	; assembler added errata NOP
  1602                           
  1603                           ;main.c: 168:             while(!PORTCbits.RC2){
  1604  00118A  A482               	btfss	3970,2,c	;volatile
  1605  00118C  D7E0               	goto	l3894
  1606  00118E                     u3480:
  1607  00118E  FFFF               	dw	65535	; assembler added errata NOP
  1608                           
  1609                           ;main.c: 175:         if(!PORTCbits.RC0){
  1610                           
  1611                           ;main.c: 173:         }
  1612  001190  B082               	btfsc	3970,0,c	;volatile
  1613  001192  D761               	goto	u3360
  1614                           
  1615                           ;main.c: 176:             _delay((unsigned long)((500)*(12000000/4000.0)));
  1616  001194  0E06               	movlw	6
  1617  001196  0100               	movlb	0	; () banked
  1618  001198  6FEA               	movwf	(??_setFrequency+1)& (0+255),b
  1619  00119A  0EB6               	movlw	182
  1620  00119C  6FE9               	movwf	??_setFrequency& (0+255),b
  1621  00119E  0EF8               	movlw	248
  1622  0011A0                     u3757:
  1623  0011A0  FFFF               	dw	65535	; errata NOP
  1624  0011A2  2EE8               	decfsz	wreg,f,c
  1625  0011A4  D7FD               	bra	u3757
  1626  0011A6  2FE9               	decfsz	??_setFrequency& (0+255),f,b
  1627  0011A8  D7FB               	bra	u3757
  1628  0011AA  2FEA               	decfsz	(??_setFrequency+1)& (0+255),f,b
  1629  0011AC  D7F9               	bra	u3757
  1630  0011AE  D000               	nop2	
  1631  0011B0  F000               	nop	
  1632                           
  1633                           ;main.c: 177:             if(!PORTCbits.RC0){
  1634  0011B2  B082               	btfsc	3970,0,c	;volatile
  1635  0011B4  D750               	goto	u3360
  1636                           
  1637                           ;main.c: 178:                 setData(1);
  1638  0011B6  0E01               	movlw	1
  1639  0011B8  ECAB  F00F         	call	_setData
  1640                           
  1641                           ;main.c: 179:                 beep(1000);
  1642  0011BC  0E03               	movlw	3
  1643  0011BE  0100               	movlb	0	; () banked
  1644  0011C0  6F87               	movwf	(beep@ms+1)& (0+255),b
  1645  0011C2  0EE8               	movlw	232
  1646  0011C4  6F86               	movwf	beep@ms& (0+255),b
  1647  0011C6  EC4F  F011         	call	_beep	;wreg free
  1648                           
  1649                           ;main.c: 180:                 break;
  1650  0011CA  0012               	return		;funcret
  1651  0011CC  FFFF               	dw	65535	; errata NOP
  1652  0011CE                     __end_of_setFrequency:
  1653                           	opt callstack 0
  1654                           
  1655 ;; *************** function _sprintf *****************
  1656 ;; Defined at:
  1657 ;;		line 9 in file "C:\Developments\Microchip\xc8\v2.05\pic\sources\c99\common\nf_sprintf.c"
  1658 ;; Parameters:    Size  Location     Type
  1659 ;;  s               2   91[BANK0 ] PTR unsigned char 
  1660 ;;		 -> lineTwo(17), lineOne(17), 
  1661 ;;  fmt             2   93[BANK0 ] PTR const unsigned char 
  1662 ;;		 -> STR_4(18), STR_3(17), STR_2(17), STR_1(17), 
  1663 ;; Auto vars:     Size  Location     Type
  1664 ;;  f               6   99[BANK0 ] struct _IO_FILE
  1665 ;;  ap              2   97[BANK0 ] PTR void [1]
  1666 ;;		 -> ?_sprintf(2), 
  1667 ;;  ret             2    0        int 
  1668 ;; Return value:  Size  Location     Type
  1669 ;;                  2   91[BANK0 ] int 
  1670 ;; Registers used:
  1671 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1672 ;; Tracked objects:
  1673 ;;		On entry : 0/0
  1674 ;;		On exit  : 0/0
  1675 ;;		Unchanged: 0/0
  1676 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1677 ;;      Params:         0       4       0       0       0       0       0
  1678 ;;      Locals:         0      10       0       0       0       0       0
  1679 ;;      Temps:          0       0       0       0       0       0       0
  1680 ;;      Totals:         0      14       0       0       0       0       0
  1681 ;;Total ram usage:       14 bytes
  1682 ;; Hardware stack levels used:    1
  1683 ;; Hardware stack levels required when called:   17
  1684 ;; This function calls:
  1685 ;;		_vfprintf
  1686 ;; This function is called by:
  1687 ;;		_main
  1688 ;;		_setFrequency
  1689 ;; This function uses a non-reentrant model
  1690 ;;
  1691                           
  1692                           	psect	text2
  1693  0022F6                     __ptext2:
  1694                           	opt callstack 0
  1695  0022F6                     _sprintf:
  1696                           	opt callstack 0
  1697  0022F6  FFFF               	dw	65535	; assembler added errata NOP
  1698                           
  1699                           ;incstack = 0
  1700  0022F8  0EDF               	movlw	low (?_sprintf+4)
  1701  0022FA  0100               	movlb	0	; () banked
  1702  0022FC  6FE1               	movwf	sprintf@ap& (0+255),b
  1703  0022FE  0E00               	movlw	high (?_sprintf+4)
  1704  002300  6FE2               	movwf	(sprintf@ap+1)& (0+255),b
  1705  002302  C0DB  F0E3         	movff	sprintf@s,sprintf@f
  1706  002306  C0DC  F0E4         	movff	sprintf@s+1,sprintf@f+1
  1707                           
  1708                           ; BSR set to: 0
  1709  00230A  0E00               	movlw	0
  1710  00230C  6FE6               	movwf	(sprintf@f+3)& (0+255),b
  1711  00230E  0E00               	movlw	0
  1712  002310  6FE5               	movwf	(sprintf@f+2)& (0+255),b
  1713                           
  1714                           ; BSR set to: 0
  1715  002312  0E00               	movlw	0
  1716  002314  6FE8               	movwf	(sprintf@f+5)& (0+255),b
  1717  002316  0E00               	movlw	0
  1718  002318  6FE7               	movwf	(sprintf@f+4)& (0+255),b
  1719                           
  1720                           ; BSR set to: 0
  1721  00231A  0EE3               	movlw	low sprintf@f
  1722  00231C  6FD3               	movwf	vfprintf@fp& (0+255),b
  1723  00231E  0E00               	movlw	high sprintf@f
  1724  002320  6FD4               	movwf	(vfprintf@fp+1)& (0+255),b
  1725  002322  C0DD  F0D5         	movff	sprintf@fmt,vfprintf@fmt
  1726  002326  C0DE  F0D6         	movff	sprintf@fmt+1,vfprintf@fmt+1
  1727  00232A  0EE1               	movlw	low sprintf@ap
  1728  00232C  6FD7               	movwf	vfprintf@ap& (0+255),b
  1729  00232E  0E00               	movlw	high sprintf@ap
  1730  002330  6FD8               	movwf	(vfprintf@ap+1)& (0+255),b
  1731  002332  ECBF  F010         	call	_vfprintf	;wreg free
  1732  002336  0100               	movlb	0	; () banked
  1733  002338  51E5               	movf	(sprintf@f+2)& (0+255),w,b
  1734  00233A  25DB               	addwf	sprintf@s& (0+255),w,b
  1735  00233C  6ED9               	movwf	fsr2l,c
  1736  00233E  51E6               	movf	(sprintf@f+3)& (0+255),w,b
  1737  002340  21DC               	addwfc	(sprintf@s+1)& (0+255),w,b
  1738  002342  6EDA               	movwf	fsr2h,c
  1739  002344  0E00               	movlw	0
  1740  002346  6EDF               	movwf	indf2,c
  1741                           
  1742                           ; BSR set to: 0
  1743  002348  0012               	return		;funcret
  1744  00234A  FFFF               	dw	65535	; errata NOP
  1745  00234C                     __end_of_sprintf:
  1746                           	opt callstack 0
  1747                           
  1748 ;; *************** function _vfprintf *****************
  1749 ;; Defined at:
  1750 ;;		line 1368 in file "C:\Developments\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  1751 ;; Parameters:    Size  Location     Type
  1752 ;;  fp              2   83[BANK0 ] PTR struct _IO_FILE
  1753 ;;		 -> sprintf@f(6), 
  1754 ;;  fmt             2   85[BANK0 ] PTR const unsigned char 
  1755 ;;		 -> STR_4(18), STR_3(17), STR_2(17), STR_1(17), 
  1756 ;;  ap              2   87[BANK0 ] PTR PTR void 
  1757 ;;		 -> sprintf@ap(2), 
  1758 ;; Auto vars:     Size  Location     Type
  1759 ;;  cfmt            2   89[BANK0 ] PTR unsigned char 
  1760 ;;		 -> STR_4(18), STR_3(17), STR_2(17), STR_1(17), 
  1761 ;; Return value:  Size  Location     Type
  1762 ;;                  2   83[BANK0 ] int 
  1763 ;; Registers used:
  1764 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1765 ;; Tracked objects:
  1766 ;;		On entry : 0/0
  1767 ;;		On exit  : 0/0
  1768 ;;		Unchanged: 0/0
  1769 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1770 ;;      Params:         0       6       0       0       0       0       0
  1771 ;;      Locals:         0       2       0       0       0       0       0
  1772 ;;      Temps:          0       0       0       0       0       0       0
  1773 ;;      Totals:         0       8       0       0       0       0       0
  1774 ;;Total ram usage:        8 bytes
  1775 ;; Hardware stack levels used:    1
  1776 ;; Hardware stack levels required when called:   16
  1777 ;; This function calls:
  1778 ;;		_vfpfcnvrt
  1779 ;; This function is called by:
  1780 ;;		_sprintf
  1781 ;; This function uses a non-reentrant model
  1782 ;;
  1783                           
  1784                           	psect	text3
  1785  00217E                     __ptext3:
  1786                           	opt callstack 0
  1787  00217E                     _vfprintf:
  1788                           	opt callstack 0
  1789  00217E  FFFF               	dw	65535	; assembler added errata NOP
  1790                           
  1791                           ;C:\Developments\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1368: int vfprintf
      +                          (FILE *fp, const char *fmt, va_list ap);C:\Developments\Microchip\xc8\v2.05\pic\sources\
      +                          c99\common\doprnt.c: 1369: {;C:\Developments\Microchip\xc8\v2.05\pic\sources\c99\common\
      +                          doprnt.c: 1371:     char *cfmt;;C:\Developments\Microchip\xc8\v2.05\pic\sources\c99\comm
      +                          on\doprnt.c: 1373:     cfmt = (char *)fmt;
  1792                           
  1793                           ; BSR set to: 0
  1794                           ;incstack = 0
  1795  002180  C0D5  F0D9         	movff	vfprintf@fmt,vfprintf@cfmt
  1796  002184  C0D6  F0DA         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  1797                           
  1798                           ;C:\Developments\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1374:     nout = 0
      +                          ;
  1799  002188  0E00               	movlw	0
  1800  00218A  0100               	movlb	0	; () banked
  1801  00218C  6FEF               	movwf	(_nout+1)& (0+255),b
  1802  00218E  0E00               	movlw	0
  1803  002190  6FEE               	movwf	_nout& (0+255),b
  1804                           
  1805                           ;C:\Developments\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1375:     while (*
      +                          cfmt) {
  1806  002192  D014               	goto	l3628
  1807  002194                     l3626:
  1808  002194  FFFF               	dw	65535	; assembler added errata NOP
  1809                           
  1810                           ; BSR set to: 0
  1811                           ;C:\Developments\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1376:         nout
      +                           += vfpfcnvrt(fp, &cfmt, ap);
  1812  002196  C0D3  F0BF         	movff	vfprintf@fp,vfpfcnvrt@fp
  1813  00219A  C0D4  F0C0         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  1814  00219E  0ED9               	movlw	low vfprintf@cfmt
  1815  0021A0  6FC1               	movwf	vfpfcnvrt@fmt& (0+255),b
  1816  0021A2  0E00               	movlw	high vfprintf@cfmt
  1817  0021A4  6FC2               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
  1818  0021A6  C0D7  F0C3         	movff	vfprintf@ap,vfpfcnvrt@ap
  1819  0021AA  C0D8  F0C4         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  1820  0021AE  EC26  F003         	call	_vfpfcnvrt	;wreg free
  1821  0021B2  0100               	movlb	0	; () banked
  1822  0021B4  51BF               	movf	?_vfpfcnvrt& (0+255),w,b
  1823  0021B6  27EE               	addwf	_nout& (0+255),f,b
  1824  0021B8  51C0               	movf	(?_vfpfcnvrt+1)& (0+255),w,b
  1825  0021BA  23EF               	addwfc	(_nout+1)& (0+255),f,b
  1826  0021BC                     l3628:
  1827  0021BC  FFFF               	dw	65535	; assembler added errata NOP
  1828                           
  1829                           ; BSR set to: 0
  1830                           ;C:\Developments\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1375:     while (*
      +                          cfmt) {
  1831  0021BE  C0D9  FFF6         	movff	vfprintf@cfmt,tblptrl
  1832  0021C2  C0DA  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  1833  0021C6                     	if	0	;tblptru may be non-zero
  1834  0021C6                     	endif
  1835  0021C6                     	if	0	;tblptru may be non-zero
  1836  0021C6                     	endif
  1837  0021C6  0008               	tblrd		*
  1838  0021C8  FFFF               	dw	65535	; errata NOP
  1839  0021CA  50F5               	movf	tablat,w,c
  1840  0021CC  0900               	iorlw	0
  1841  0021CE  A4D8               	btfss	status,2,c
  1842  0021D0  D7E1               	goto	l3626
  1843                           
  1844                           ; BSR set to: 0
  1845                           ;C:\Developments\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1378:     return n
      +                          out;
  1846  0021D2  C0EE  F0D3         	movff	_nout,?_vfprintf
  1847  0021D6  C0EF  F0D4         	movff	_nout+1,?_vfprintf+1
  1848                           
  1849                           ; BSR set to: 0
  1850  0021DA  0012               	return		;funcret
  1851  0021DC  FFFF               	dw	65535	; errata NOP
  1852  0021DE                     __end_of_vfprintf:
  1853                           	opt callstack 0
  1854                           
  1855 ;; *************** function _vfpfcnvrt *****************
  1856 ;; Defined at:
  1857 ;;		line 670 in file "C:\Developments\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  1858 ;; Parameters:    Size  Location     Type
  1859 ;;  fp              2   63[BANK0 ] PTR struct _IO_FILE
  1860 ;;		 -> sprintf@f(6), 
  1861 ;;  fmt             2   65[BANK0 ] PTR PTR unsigned char 
  1862 ;;		 -> vfprintf@cfmt(2), 
  1863 ;;  ap              2   67[BANK0 ] PTR PTR void 
  1864 ;;		 -> sprintf@ap(2), 
  1865 ;; Auto vars:     Size  Location     Type
  1866 ;;  ll              8   73[BANK0 ] long long 
  1867 ;;  llu             8    0        unsigned long long 
  1868 ;;  f               4    0        unsigned long long 
  1869 ;;  vp              3    0        PTR void 
  1870 ;;  ct              3    0        unsigned char [3]
  1871 ;;  cp              3    0        PTR unsigned char 
  1872 ;;  i               2    0        int 
  1873 ;;  done            2    0        int 
  1874 ;;  c               1    0        unsigned char 
  1875 ;; Return value:  Size  Location     Type
  1876 ;;                  2   63[BANK0 ] int 
  1877 ;; Registers used:
  1878 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1879 ;; Tracked objects:
  1880 ;;		On entry : 0/0
  1881 ;;		On exit  : 0/0
  1882 ;;		Unchanged: 0/0
  1883 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1884 ;;      Params:         0       6       0       0       0       0       0
  1885 ;;      Locals:         0      10       0       0       0       0       0
  1886 ;;      Temps:          0       4       0       0       0       0       0
  1887 ;;      Totals:         0      20       0       0       0       0       0
  1888 ;;Total ram usage:       20 bytes
  1889 ;; Hardware stack levels used:    1
  1890 ;; Hardware stack levels required when called:   15
  1891 ;; This function calls:
  1892 ;;		_atoi
  1893 ;;		_dtoa
  1894 ;;		_fputc
  1895 ;;		_isdigit
  1896 ;; This function is called by:
  1897 ;;		_vfprintf
  1898 ;; This function uses a non-reentrant model
  1899 ;;
  1900                           
  1901                           	psect	text4
  1902  00064C                     __ptext4:
  1903                           	opt callstack 0
  1904  00064C                     _vfpfcnvrt:
  1905                           	opt callstack 0
  1906  00064C  FFFF               	dw	65535	; assembler added errata NOP
  1907                           
  1908                           ;C:\Developments\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 670: static int vf
      +                          pfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Developments\Microchip\xc8\v2.05\pic\sourc
      +                          es\c99\common\doprnt.c: 671: {;C:\Developments\Microchip\xc8\v2.05\pic\sources\c99\commo
      +                          n\doprnt.c: 672:     char c, *cp, ct[3];;C:\Developments\Microchip\xc8\v2.05\pic\sources
      +                          \c99\common\doprnt.c: 673:     int done, i;;C:\Developments\Microchip\xc8\v2.05\pic\sour
      +                          ces\c99\common\doprnt.c: 674:     long long ll;;C:\Developments\Microchip\xc8\v2.05\pic\
      +                          sources\c99\common\doprnt.c: 675:     unsigned long long llu;
  1909                           
  1910                           ; BSR set to: 0
  1911                           ;incstack = 0
  1912  00064E  C0C1  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1913  000652  C0C2  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1914  000656  CFDE FFF6          	movff	postinc2,tblptrl
  1915  00065A  CFDD FFF7          	movff	postdec2,tblptrh
  1916  00065E                     	if	0	;tblptru may be non-zero
  1917  00065E                     	endif
  1918  00065E                     	if	0	;tblptru may be non-zero
  1919  00065E                     	endif
  1920  00065E  0008               	tblrd		*
  1921  000660  FFFF               	dw	65535	; errata NOP
  1922  000662  50F5               	movf	tablat,w,c
  1923  000664  0A25               	xorlw	37
  1924  000666  A4D8               	btfss	status,2,c
  1925  000668  D114               	goto	l3444
  1926                           
  1927                           ;C:\Developments\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 681:         ++*fm
      +                          t;
  1928  00066A  C0C1  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1929  00066E  C0C2  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1930  000672  2ADE               	incf	postinc2,f,c
  1931  000674  0E00               	movlw	0
  1932  000676  22DD               	addwfc	postdec2,f,c
  1933                           
  1934                           ;C:\Developments\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 683:         flags
      +                           = width = 0;
  1935  000678  0E00               	movlw	0
  1936  00067A  0100               	movlb	0	; () banked
  1937  00067C  6FF1               	movwf	(_width+1)& (0+255),b
  1938  00067E  0E00               	movlw	0
  1939  000680  6FF0               	movwf	_width& (0+255),b
  1940  000682  C0F0  F0F4         	movff	_width,_flags
  1941  000686  C0F1  F0F5         	movff	_width+1,_flags+1
  1942                           
  1943                           ; BSR set to: 0
  1944                           ;C:\Developments\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 684:         prec 
      +                          = -1;
  1945  00068A  69F2               	setf	_prec& (0+255),b
  1946  00068C  69F3               	setf	(_prec+1)& (0+255),b
  1947                           
  1948                           ; BSR set to: 0
  1949                           ;C:\Developments\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 723:         if ((
      +                          *fmt)[0] == '*') {
  1950  00068E  C0C1  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1951  000692  C0C2  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1952  000696  CFDE FFF6          	movff	postinc2,tblptrl
  1953  00069A  CFDD FFF7          	movff	postdec2,tblptrh
  1954  00069E                     	if	0	;tblptru may be non-zero
  1955  00069E                     	endif
  1956  00069E                     	if	0	;tblptru may be non-zero
  1957  00069E                     	endif
  1958  00069E  0008               	tblrd		*
  1959  0006A0  FFFF               	dw	65535	; errata NOP
  1960  0006A2  50F5               	movf	tablat,w,c
  1961  0006A4  0A2A               	xorlw	42
  1962  0006A6  A4D8               	btfss	status,2,c
  1963  0006A8  D023               	goto	l3408
  1964                           
  1965                           ; BSR set to: 0
  1966                           ;C:\Developments\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 724:             +
      +                          +*fmt;
  1967  0006AA  C0C1  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1968  0006AE  C0C2  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1969  0006B2  2ADE               	incf	postinc2,f,c
  1970  0006B4  0E00               	movlw	0
  1971  0006B6  22DD               	addwfc	postdec2,f,c
  1972                           
  1973                           ;C:\Developments\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 725:             w
      +                          idth = (*(int *)__va_arg(*(int **)ap, (int)0));
  1974  0006B8  C0C3  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1975  0006BC  C0C4  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1976  0006C0  CFDF F0C5          	movff	indf2,??_vfpfcnvrt
  1977  0006C4  0E02               	movlw	2
  1978  0006C6  26DE               	addwf	postinc2,f,c
  1979  0006C8  CFDF F0C6          	movff	indf2,??_vfpfcnvrt+1
  1980  0006CC  0E00               	movlw	0
  1981  0006CE  22DD               	addwfc	postdec2,f,c
  1982  0006D0  C0C5  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1983  0006D4  C0C6  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1984  0006D8  CFDE F0F0          	movff	postinc2,_width
  1985  0006DC  CFDD F0F1          	movff	postdec2,_width+1
  1986                           
  1987                           ; BSR set to: 0
  1988                           ;C:\Developments\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 726:             i
      +                          f (width < 0) {
  1989  0006E0  AFF1               	btfss	(_width+1)& (0+255),7,b
  1990  0006E2  D046               	goto	u2950
  1991                           
  1992                           ; BSR set to: 0
  1993                           ;C:\Developments\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 727:              
      +                             flags |= (1 << 0);
  1994  0006E4  81F4               	bsf	_flags& (0+255),0,b
  1995                           
  1996                           ;C:\Developments\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 728:              
      +                             width = -width;
  1997  0006E6  6DF0               	negf	_width& (0+255),b
  1998  0006E8  1FF1               	comf	(_width+1)& (0+255),f,b
  1999  0006EA  B0D8               	btfsc	status,0,c
  2000  0006EC  2BF1               	incf	(_width+1)& (0+255),f,b
  2001  0006EE  D040               	goto	u2950
  2002  0006F0                     l3408:
  2003  0006F0  FFFF               	dw	65535	; assembler added errata NOP
  2004                           
  2005                           ; BSR set to: 0
  2006                           ;C:\Developments\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 731:             w
      +                          idth = atoi(*fmt);
  2007  0006F2  C0C1  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2008  0006F6  C0C2  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2009  0006FA  CFDE F087          	movff	postinc2,atoi@s
  2010  0006FE  CFDD F088          	movff	postdec2,atoi@s+1
  2011  000702  ECE7  F008         	call	_atoi	;wreg free
  2012  000706  C087  F0F0         	movff	?_atoi,_width
  2013  00070A  C088  F0F1         	movff	?_atoi+1,_width+1
  2014                           
  2015                           ;C:\Developments\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 732:             w
      +                          hile ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  2016  00070E  D008               	goto	l3412
  2017  000710                     l3410:
  2018  000710  FFFF               	dw	65535	; assembler added errata NOP
  2019                           
  2020                           ; BSR set to: 0
  2021                           ;C:\Developments\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 733:              
      +                             ++*fmt;
  2022  000712  C0C1  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2023  000716  C0C2  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2024  00071A  2ADE               	incf	postinc2,f,c
  2025  00071C  0E00               	movlw	0
  2026  00071E  22DD               	addwfc	postdec2,f,c
  2027  000720                     l3412:
  2028  000720  FFFF               	dw	65535	; assembler added errata NOP
  2029  000722  0ED0               	movlw	208
  2030  000724  0100               	movlb	0	; () banked
  2031  000726  6FC5               	movwf	??_vfpfcnvrt& (0+255),b
  2032  000728  0EFF               	movlw	255
  2033  00072A  6FC6               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  2034  00072C  C0C1  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2035  000730  C0C2  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2036  000734  CFDE FFF6          	movff	postinc2,tblptrl
  2037  000738  CFDD FFF7          	movff	postdec2,tblptrh
  2038  00073C                     	if	0	;tblptru may be non-zero
  2039  00073C                     	endif
  2040  00073C                     	if	0	;tblptru may be non-zero
  2041  00073C                     	endif
  2042  00073C  0008               	tblrd		*
  2043  00073E  FFFF               	dw	65535	; errata NOP
  2044  000740  50F5               	movf	tablat,w,c
  2045  000742  6FC7               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  2046  000744  6BC8               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  2047  000746  51C5               	movf	??_vfpfcnvrt& (0+255),w,b
  2048  000748  27C7               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  2049  00074A  51C6               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  2050  00074C  23C8               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  2051  00074E  51C8               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  2052  000750  E106               	bnz	u2930
  2053  000752  0E0A               	movlw	10
  2054  000754  5DC7               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  2055  000756  B0D8               	btfsc	status,0,c
  2056  000758  D002               	goto	u2930
  2057  00075A  0E01               	movlw	1
  2058  00075C  D002               	goto	u2940
  2059  00075E                     u2930:
  2060  00075E  FFFF               	dw	65535	; assembler added errata NOP
  2061  000760  0E00               	movlw	0
  2062  000762                     u2940:
  2063  000762  FFFF               	dw	65535	; assembler added errata NOP
  2064  000764  6FD1               	movwf	_vfpfcnvrt$1037& (0+255),b
  2065  000766  6BD2               	clrf	(_vfpfcnvrt$1037+1)& (0+255),b
  2066                           
  2067                           ; BSR set to: 0
  2068  000768  51D1               	movf	_vfpfcnvrt$1037& (0+255),w,b
  2069  00076A  11D2               	iorwf	(_vfpfcnvrt$1037+1)& (0+255),w,b
  2070  00076C  A4D8               	btfss	status,2,c
  2071  00076E  D7D0               	goto	l3410
  2072  000770                     u2950:
  2073  000770  FFFF               	dw	65535	; assembler added errata NOP
  2074                           
  2075                           ; BSR set to: 0
  2076                           ;C:\Developments\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 825:         if ((
      +                          *fmt[0] == 'd') || (*fmt[0] == 'i')) {
  2077  000772  C0C1  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2078  000776  C0C2  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2079  00077A  CFDE FFF6          	movff	postinc2,tblptrl
  2080  00077E  CFDD FFF7          	movff	postdec2,tblptrh
  2081  000782                     	if	0	;tblptru may be non-zero
  2082  000782                     	endif
  2083  000782                     	if	0	;tblptru may be non-zero
  2084  000782                     	endif
  2085  000782  0008               	tblrd		*
  2086  000784  FFFF               	dw	65535	; errata NOP
  2087  000786  50F5               	movf	tablat,w,c
  2088  000788  0A64               	xorlw	100
  2089  00078A  B4D8               	btfsc	status,2,c
  2090  00078C  D00E               	goto	u2970
  2091                           
  2092                           ; BSR set to: 0
  2093  00078E  C0C1  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2094  000792  C0C2  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2095  000796  CFDE FFF6          	movff	postinc2,tblptrl
  2096  00079A  CFDD FFF7          	movff	postdec2,tblptrh
  2097  00079E                     	if	0	;tblptru may be non-zero
  2098  00079E                     	endif
  2099  00079E                     	if	0	;tblptru may be non-zero
  2100  00079E                     	endif
  2101  00079E  0008               	tblrd		*
  2102  0007A0  FFFF               	dw	65535	; errata NOP
  2103  0007A2  50F5               	movf	tablat,w,c
  2104  0007A4  0A69               	xorlw	105
  2105  0007A6  A4D8               	btfss	status,2,c
  2106  0007A8  D040               	goto	l3428
  2107  0007AA                     u2970:
  2108  0007AA  FFFF               	dw	65535	; assembler added errata NOP
  2109                           
  2110                           ; BSR set to: 0
  2111                           ;C:\Developments\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 827:             +
      +                          +*fmt;
  2112  0007AC  C0C1  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2113  0007B0  C0C2  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2114  0007B4  2ADE               	incf	postinc2,f,c
  2115  0007B6  0E00               	movlw	0
  2116  0007B8  22DD               	addwfc	postdec2,f,c
  2117                           
  2118                           ;C:\Developments\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 828:             l
      +                          l = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  2119  0007BA  C0C3  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2120  0007BE  C0C4  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2121  0007C2  CFDF F0C5          	movff	indf2,??_vfpfcnvrt
  2122  0007C6  0E02               	movlw	2
  2123  0007C8  26DE               	addwf	postinc2,f,c
  2124  0007CA  CFDF F0C6          	movff	indf2,??_vfpfcnvrt+1
  2125  0007CE  0E00               	movlw	0
  2126  0007D0  22DD               	addwfc	postdec2,f,c
  2127  0007D2  C0C5  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2128  0007D6  C0C6  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2129  0007DA  CFDE F0C9          	movff	postinc2,vfpfcnvrt@ll
  2130  0007DE  CFDD F0CA          	movff	postdec2,vfpfcnvrt@ll+1
  2131  0007E2  0E00               	movlw	0
  2132  0007E4  BFCA               	btfsc	(vfpfcnvrt@ll+1)& (0+255),7,b
  2133  0007E6  0EFF               	movlw	-1
  2134  0007E8  6FCB               	movwf	(vfpfcnvrt@ll+2)& (0+255),b
  2135  0007EA  6FCC               	movwf	(vfpfcnvrt@ll+3)& (0+255),b
  2136  0007EC  6FCD               	movwf	(vfpfcnvrt@ll+4)& (0+255),b
  2137  0007EE  6FCE               	movwf	(vfpfcnvrt@ll+5)& (0+255),b
  2138  0007F0  6FCF               	movwf	(vfpfcnvrt@ll+6)& (0+255),b
  2139  0007F2  6FD0               	movwf	(vfpfcnvrt@ll+7)& (0+255),b
  2140                           
  2141                           ; BSR set to: 0
  2142                           ;C:\Developments\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 830:             r
      +                          eturn dtoa(fp, ll);
  2143  0007F4  C0BF  F09B         	movff	vfpfcnvrt@fp,dtoa@fp
  2144  0007F8  C0C0  F09C         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  2145  0007FC  C0C9  F09D         	movff	vfpfcnvrt@ll,dtoa@d
  2146  000800  C0CA  F09E         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  2147  000804  C0CB  F09F         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  2148  000808  C0CC  F0A0         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  2149  00080C  C0CD  F0A1         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  2150  000810  C0CE  F0A2         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  2151  000814  C0CF  F0A3         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  2152  000818  C0D0  F0A4         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  2153  00081C  ECA9  F005         	call	_dtoa	;wreg free
  2154  000820  C09B  F0BF         	movff	?_dtoa,?_vfpfcnvrt
  2155  000824  C09C  F0C0         	movff	?_dtoa+1,?_vfpfcnvrt+1
  2156  000828  D051               	goto	l603
  2157  00082A                     l3428:
  2158  00082A  FFFF               	dw	65535	; assembler added errata NOP
  2159                           
  2160                           ; BSR set to: 0
  2161                           ;C:\Developments\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1350:         if (
      +                          (*fmt)[0] == '%') {
  2162  00082C  C0C1  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2163  000830  C0C2  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2164  000834  CFDE FFF6          	movff	postinc2,tblptrl
  2165  000838  CFDD FFF7          	movff	postdec2,tblptrh
  2166  00083C                     	if	0	;tblptru may be non-zero
  2167  00083C                     	endif
  2168  00083C                     	if	0	;tblptru may be non-zero
  2169  00083C                     	endif
  2170  00083C  0008               	tblrd		*
  2171  00083E  FFFF               	dw	65535	; errata NOP
  2172  000840  50F5               	movf	tablat,w,c
  2173  000842  0A25               	xorlw	37
  2174  000844  A4D8               	btfss	status,2,c
  2175  000846  D017               	goto	l3438
  2176                           
  2177                           ; BSR set to: 0
  2178                           ;C:\Developments\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1351:             
      +                          ++*fmt;
  2179  000848  C0C1  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2180  00084C  C0C2  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2181  000850  2ADE               	incf	postinc2,f,c
  2182  000852  0E00               	movlw	0
  2183  000854  22DD               	addwfc	postdec2,f,c
  2184                           
  2185                           ; BSR set to: 0
  2186                           ;C:\Developments\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1352:             
      +                          fputc((int)'%', fp);
  2187  000856  0E00               	movlw	0
  2188  000858  6F81               	movwf	(fputc@c+1)& (0+255),b
  2189  00085A  0E25               	movlw	37
  2190  00085C  6F80               	movwf	fputc@c& (0+255),b
  2191  00085E  C0BF  F082         	movff	vfpfcnvrt@fp,fputc@fp
  2192  000862  C0C0  F083         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2193  000866  EC24  F00E         	call	_fputc	;wreg free
  2194  00086A                     l3434:
  2195  00086A  FFFF               	dw	65535	; assembler added errata NOP
  2196                           
  2197                           ;C:\Developments\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1353:             
      +                          return 1;
  2198  00086C  0E00               	movlw	0
  2199  00086E  0100               	movlb	0	; () banked
  2200  000870  6FC0               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  2201  000872  0E01               	movlw	1
  2202  000874  D00B               	goto	L1
  2203  000876                     l3438:
  2204  000876  FFFF               	dw	65535	; assembler added errata NOP
  2205                           
  2206                           ; BSR set to: 0
  2207                           ;C:\Developments\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1357:         ++*f
      +                          mt;
  2208  000878  C0C1  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2209  00087C  C0C2  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2210  000880  2ADE               	incf	postinc2,f,c
  2211  000882  0E00               	movlw	0
  2212  000884  22DD               	addwfc	postdec2,f,c
  2213                           
  2214                           ; BSR set to: 0
  2215                           ;C:\Developments\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1358:         retu
      +                          rn 0;
  2216  000886  0E00               	movlw	0
  2217  000888  6FC0               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  2218  00088A  0E00               	movlw	0
  2219  00088C                     L1:
  2220  00088C  FFFF               	dw	65535	; assembler added errata NOP
  2221  00088E  6FBF               	movwf	?_vfpfcnvrt& (0+255),b
  2222  000890  D01D               	goto	l603
  2223  000892                     l3444:
  2224  000892  FFFF               	dw	65535	; assembler added errata NOP
  2225                           
  2226                           ;C:\Developments\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1362:     fputc((i
      +                          nt)(*fmt)[0], fp);
  2227  000894  C0C1  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2228  000898  C0C2  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2229  00089C  CFDE FFF6          	movff	postinc2,tblptrl
  2230  0008A0  CFDD FFF7          	movff	postdec2,tblptrh
  2231  0008A4                     	if	0	;tblptru may be non-zero
  2232  0008A4                     	endif
  2233  0008A4                     	if	0	;tblptru may be non-zero
  2234  0008A4                     	endif
  2235  0008A4  0008               	tblrd		*
  2236  0008A6  FFFF               	dw	65535	; errata NOP
  2237  0008A8  50F5               	movf	tablat,w,c
  2238  0008AA  0100               	movlb	0	; () banked
  2239  0008AC  6F80               	movwf	fputc@c& (0+255),b
  2240  0008AE  6B81               	clrf	(fputc@c+1)& (0+255),b
  2241  0008B0  C0BF  F082         	movff	vfpfcnvrt@fp,fputc@fp
  2242  0008B4  C0C0  F083         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2243  0008B8  EC24  F00E         	call	_fputc	;wreg free
  2244                           
  2245                           ;C:\Developments\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1363:     ++*fmt;
  2246  0008BC  C0C1  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2247  0008C0  C0C2  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2248  0008C4  2ADE               	incf	postinc2,f,c
  2249  0008C6  0E00               	movlw	0
  2250  0008C8  22DD               	addwfc	postdec2,f,c
  2251  0008CA  D7CF               	goto	l3434
  2252  0008CC                     l603:
  2253  0008CC  FFFF               	dw	65535	; assembler added errata NOP
  2254  0008CE  0012               	return		;funcret
  2255  0008D0  FFFF               	dw	65535	; errata NOP
  2256  0008D2                     __end_of_vfpfcnvrt:
  2257                           	opt callstack 0
  2258                           
  2259 ;; *************** function _dtoa *****************
  2260 ;; Defined at:
  2261 ;;		line 274 in file "C:\Developments\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  2262 ;; Parameters:    Size  Location     Type
  2263 ;;  fp              2   27[BANK0 ] PTR struct _IO_FILE
  2264 ;;		 -> sprintf@f(6), 
  2265 ;;  d               8   29[BANK0 ] long long 
  2266 ;; Auto vars:     Size  Location     Type
  2267 ;;  n               8   53[BANK0 ] long long 
  2268 ;;  i               2   61[BANK0 ] int 
  2269 ;;  s               2   51[BANK0 ] int 
  2270 ;;  w               2   49[BANK0 ] int 
  2271 ;;  p               2   47[BANK0 ] int 
  2272 ;; Return value:  Size  Location     Type
  2273 ;;                  2   27[BANK0 ] int 
  2274 ;; Registers used:
  2275 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2276 ;; Tracked objects:
  2277 ;;		On entry : 0/0
  2278 ;;		On exit  : 0/0
  2279 ;;		Unchanged: 0/0
  2280 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2281 ;;      Params:         0      10       0       0       0       0       0
  2282 ;;      Locals:         0      18       0       0       0       0       0
  2283 ;;      Temps:          0       8       0       0       0       0       0
  2284 ;;      Totals:         0      36       0       0       0       0       0
  2285 ;;Total ram usage:       36 bytes
  2286 ;; Hardware stack levels used:    1
  2287 ;; Hardware stack levels required when called:   14
  2288 ;; This function calls:
  2289 ;;		___aodiv
  2290 ;;		___aomod
  2291 ;;		_abs
  2292 ;;		_pad
  2293 ;; This function is called by:
  2294 ;;		_vfpfcnvrt
  2295 ;; This function uses a non-reentrant model
  2296 ;;
  2297                           
  2298                           	psect	text5
  2299  000B52                     __ptext5:
  2300                           	opt callstack 0
  2301  000B52                     _dtoa:
  2302                           	opt callstack 0
  2303  000B52  FFFF               	dw	65535	; assembler added errata NOP
  2304                           
  2305                           ;C:\Developments\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 274: static int dt
      +                          oa(FILE *fp, long long d);C:\Developments\Microchip\xc8\v2.05\pic\sources\c99\common\dop
      +                          rnt.c: 275: {;C:\Developments\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 276: 
      +                              int i, p, s, w;;C:\Developments\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c:
      +                           277:     long long n;;C:\Developments\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt
      +                          .c: 280:     n = d;
  2306                           
  2307                           ;incstack = 0
  2308  000B54  C09D  F0B5         	movff	dtoa@d,dtoa@n
  2309  000B58  C09E  F0B6         	movff	dtoa@d+1,dtoa@n+1
  2310  000B5C  C09F  F0B7         	movff	dtoa@d+2,dtoa@n+2
  2311  000B60  C0A0  F0B8         	movff	dtoa@d+3,dtoa@n+3
  2312  000B64  C0A1  F0B9         	movff	dtoa@d+4,dtoa@n+4
  2313  000B68  C0A2  F0BA         	movff	dtoa@d+5,dtoa@n+5
  2314  000B6C  C0A3  F0BB         	movff	dtoa@d+6,dtoa@n+6
  2315  000B70  C0A4  F0BC         	movff	dtoa@d+7,dtoa@n+7
  2316                           
  2317                           ;C:\Developments\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 281:     s = n < 0
      +                           ? 1 : 0;
  2318  000B74  0100               	movlb	0	; () banked
  2319  000B76  AFBC               	btfss	(dtoa@n+7)& (0+255),7,b
  2320  000B78  D002               	goto	u2460
  2321  000B7A  0E01               	movlw	1
  2322  000B7C  D002               	goto	u2470
  2323  000B7E                     u2460:
  2324  000B7E  FFFF               	dw	65535	; assembler added errata NOP
  2325  000B80  0E00               	movlw	0
  2326  000B82                     u2470:
  2327  000B82  FFFF               	dw	65535	; assembler added errata NOP
  2328  000B84  6FB3               	movwf	dtoa@s& (0+255),b
  2329  000B86  6BB4               	clrf	(dtoa@s+1)& (0+255),b
  2330                           
  2331                           ;C:\Developments\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 282:     if (s) {
  2332  000B88  51B3               	movf	dtoa@s& (0+255),w,b
  2333  000B8A  11B4               	iorwf	(dtoa@s+1)& (0+255),w,b
  2334  000B8C  B4D8               	btfsc	status,2,c
  2335  000B8E  D010               	goto	l3136
  2336                           
  2337                           ; BSR set to: 0
  2338                           ;C:\Developments\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 283:         n = -
      +                          n;
  2339  000B90  1FBC               	comf	(dtoa@n+7)& (0+255),f,b
  2340  000B92  1FBB               	comf	(dtoa@n+6)& (0+255),f,b
  2341  000B94  1FBA               	comf	(dtoa@n+5)& (0+255),f,b
  2342  000B96  1FB9               	comf	(dtoa@n+4)& (0+255),f,b
  2343  000B98  1FB8               	comf	(dtoa@n+3)& (0+255),f,b
  2344  000B9A  1FB7               	comf	(dtoa@n+2)& (0+255),f,b
  2345  000B9C  1FB6               	comf	(dtoa@n+1)& (0+255),f,b
  2346  000B9E  6DB5               	negf	dtoa@n& (0+255),b
  2347  000BA0  0E00               	movlw	0
  2348  000BA2  23B6               	addwfc	(dtoa@n+1)& (0+255),f,b
  2349  000BA4  23B7               	addwfc	(dtoa@n+2)& (0+255),f,b
  2350  000BA6  23B8               	addwfc	(dtoa@n+3)& (0+255),f,b
  2351  000BA8  23B9               	addwfc	(dtoa@n+4)& (0+255),f,b
  2352  000BAA  23BA               	addwfc	(dtoa@n+5)& (0+255),f,b
  2353  000BAC  23BB               	addwfc	(dtoa@n+6)& (0+255),f,b
  2354  000BAE  23BC               	addwfc	(dtoa@n+7)& (0+255),f,b
  2355  000BB0                     l3136:
  2356  000BB0  FFFF               	dw	65535	; assembler added errata NOP
  2357                           
  2358                           ; BSR set to: 0
  2359                           ;C:\Developments\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 287:     if (!(pre
      +                          c < 0)) {
  2360  000BB2  AFF3               	btfss	(_prec+1)& (0+255),7,b
  2361                           
  2362                           ; BSR set to: 0
  2363                           ;C:\Developments\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 288:         flags
      +                           &= ~(1 << 1);
  2364  000BB4  93F4               	bcf	_flags& (0+255),1,b
  2365                           
  2366                           ; BSR set to: 0
  2367                           ;C:\Developments\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 290:     p = (0 < 
      +                          prec) ? prec : 1;
  2368  000BB6  BFF3               	btfsc	(_prec+1)& (0+255),7,b
  2369  000BB8  D005               	goto	u2500
  2370  000BBA  51F3               	movf	(_prec+1)& (0+255),w,b
  2371  000BBC  E109               	bnz	l566
  2372  000BBE  05F2               	decf	_prec& (0+255),w,b
  2373  000BC0  B0D8               	btfsc	status,0,c
  2374  000BC2  D006               	goto	l566
  2375  000BC4                     u2500:
  2376  000BC4  FFFF               	dw	65535	; assembler added errata NOP
  2377                           
  2378                           ; BSR set to: 0
  2379  000BC6  0E00               	movlw	0
  2380  000BC8  6FB0               	movwf	(dtoa@p+1)& (0+255),b
  2381  000BCA  0E01               	movlw	1
  2382  000BCC  6FAF               	movwf	dtoa@p& (0+255),b
  2383  000BCE  D005               	goto	l568
  2384  000BD0                     l566:
  2385  000BD0  FFFF               	dw	65535	; assembler added errata NOP
  2386                           
  2387                           ; BSR set to: 0
  2388  000BD2  C0F2  F0AF         	movff	_prec,dtoa@p
  2389  000BD6  C0F3  F0B0         	movff	_prec+1,dtoa@p+1
  2390  000BDA                     l568:
  2391  000BDA  FFFF               	dw	65535	; assembler added errata NOP
  2392                           
  2393                           ; BSR set to: 0
  2394                           ;C:\Developments\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 291:     w = width
      +                          ;
  2395  000BDC  C0F0  F0B1         	movff	_width,dtoa@w
  2396  000BE0  C0F1  F0B2         	movff	_width+1,dtoa@w+1
  2397                           
  2398                           ; BSR set to: 0
  2399                           ;C:\Developments\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 292:     if (s || 
      +                          (flags & (1 << 2))) {
  2400  000BE4  51B3               	movf	dtoa@s& (0+255),w,b
  2401  000BE6  11B4               	iorwf	(dtoa@s+1)& (0+255),w,b
  2402  000BE8  A4D8               	btfss	status,2,c
  2403  000BEA  D002               	goto	u2520
  2404                           
  2405                           ; BSR set to: 0
  2406  000BEC  A5F4               	btfss	_flags& (0+255),2,b
  2407  000BEE  D004               	goto	l3150
  2408  000BF0                     u2520:
  2409  000BF0  FFFF               	dw	65535	; assembler added errata NOP
  2410                           
  2411                           ; BSR set to: 0
  2412                           ;C:\Developments\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 293:         --w;
  2413  000BF2  07B1               	decf	dtoa@w& (0+255),f,b
  2414  000BF4  A0D8               	btfss	status,0,c
  2415  000BF6  07B2               	decf	(dtoa@w+1)& (0+255),f,b
  2416  000BF8                     l3150:
  2417  000BF8  FFFF               	dw	65535	; assembler added errata NOP
  2418                           
  2419                           ; BSR set to: 0
  2420                           ;C:\Developments\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 297:     i = sizeo
      +                          f(dbuf) - 1;
  2421  000BFA  0E00               	movlw	0
  2422  000BFC  6FBE               	movwf	(dtoa@i+1)& (0+255),b
  2423  000BFE  0E1F               	movlw	31
  2424  000C00  6FBD               	movwf	dtoa@i& (0+255),b
  2425                           
  2426                           ; BSR set to: 0
  2427                           ;C:\Developments\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 298:     dbuf[i] =
      +                           '\0';
  2428  000C02  0E00               	movlw	0
  2429  000C04  0101               	movlb	1	; () banked
  2430  000C06  6F1F               	movwf	(_dbuf+31)& (0+255),b
  2431                           
  2432                           ;C:\Developments\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 299:     while (!(
      +                          i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  2433  000C08  D07E               	goto	l3164
  2434  000C0A                     l3154:
  2435  000C0A  FFFF               	dw	65535	; assembler added errata NOP
  2436                           
  2437                           ; BSR set to: 0
  2438                           ;C:\Developments\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 300:         --i;
  2439  000C0C  07BD               	decf	dtoa@i& (0+255),f,b
  2440  000C0E  A0D8               	btfss	status,0,c
  2441  000C10  07BE               	decf	(dtoa@i+1)& (0+255),f,b
  2442                           
  2443                           ; BSR set to: 0
  2444                           ;C:\Developments\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 301:         dbuf[
      +                          i] = '0' + abs(n % 10);
  2445  000C12  0E00               	movlw	low _dbuf
  2446  000C14  25BD               	addwf	dtoa@i& (0+255),w,b
  2447  000C16  6ED9               	movwf	fsr2l,c
  2448  000C18  0E01               	movlw	high _dbuf
  2449  000C1A  21BE               	addwfc	(dtoa@i+1)& (0+255),w,b
  2450  000C1C  6EDA               	movwf	fsr2h,c
  2451  000C1E  C0B5  F080         	movff	dtoa@n,___aomod@dividend
  2452  000C22  C0B6  F081         	movff	dtoa@n+1,___aomod@dividend+1
  2453  000C26  C0B7  F082         	movff	dtoa@n+2,___aomod@dividend+2
  2454  000C2A  C0B8  F083         	movff	dtoa@n+3,___aomod@dividend+3
  2455  000C2E  C0B9  F084         	movff	dtoa@n+4,___aomod@dividend+4
  2456  000C32  C0BA  F085         	movff	dtoa@n+5,___aomod@dividend+5
  2457  000C36  C0BB  F086         	movff	dtoa@n+6,___aomod@dividend+6
  2458  000C3A  C0BC  F087         	movff	dtoa@n+7,___aomod@dividend+7
  2459  000C3E  0E0A               	movlw	10
  2460  000C40  6F88               	movwf	___aomod@divisor& (0+255),b
  2461  000C42  0E00               	movlw	0
  2462  000C44  6F89               	movwf	(___aomod@divisor+1)& (0+255),b
  2463  000C46  0E00               	movlw	0
  2464  000C48  6F8A               	movwf	(___aomod@divisor+2)& (0+255),b
  2465  000C4A  0E00               	movlw	0
  2466  000C4C  6F8B               	movwf	(___aomod@divisor+3)& (0+255),b
  2467  000C4E  0E00               	movlw	0
  2468  000C50  6F8C               	movwf	(___aomod@divisor+4)& (0+255),b
  2469  000C52  0E00               	movlw	0
  2470  000C54  6F8D               	movwf	(___aomod@divisor+5)& (0+255),b
  2471  000C56  0E00               	movlw	0
  2472  000C58  6F8E               	movwf	(___aomod@divisor+6)& (0+255),b
  2473  000C5A  0E00               	movlw	0
  2474  000C5C  6F8F               	movwf	(___aomod@divisor+7)& (0+255),b
  2475  000C5E  ECAC  F00B         	call	___aomod	;wreg free
  2476  000C62  C080  F0A5         	movff	?___aomod,??_dtoa
  2477  000C66  C081  F0A6         	movff	?___aomod+1,??_dtoa+1
  2478  000C6A  C082  F0A7         	movff	?___aomod+2,??_dtoa+2
  2479  000C6E  C083  F0A8         	movff	?___aomod+3,??_dtoa+3
  2480  000C72  C084  F0A9         	movff	?___aomod+4,??_dtoa+4
  2481  000C76  C085  F0AA         	movff	?___aomod+5,??_dtoa+5
  2482  000C7A  C086  F0AB         	movff	?___aomod+6,??_dtoa+6
  2483  000C7E  C087  F0AC         	movff	?___aomod+7,??_dtoa+7
  2484  000C82  C0A5  F092         	movff	??_dtoa,abs@a
  2485  000C86  C0A7  F093         	movff	??_dtoa+2,abs@a+1
  2486  000C8A  EC31  F013         	call	_abs	;wreg free
  2487  000C8E  0100               	movlb	0	; () banked
  2488  000C90  5192               	movf	?_abs& (0+255),w,b
  2489  000C92  0F30               	addlw	48
  2490  000C94  6EDF               	movwf	indf2,c
  2491                           
  2492                           ; BSR set to: 0
  2493                           ;C:\Developments\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 302:         --p;
  2494  000C96  07AF               	decf	dtoa@p& (0+255),f,b
  2495  000C98  A0D8               	btfss	status,0,c
  2496  000C9A  07B0               	decf	(dtoa@p+1)& (0+255),f,b
  2497                           
  2498                           ; BSR set to: 0
  2499                           ;C:\Developments\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 303:         --w;
  2500  000C9C  07B1               	decf	dtoa@w& (0+255),f,b
  2501  000C9E  A0D8               	btfss	status,0,c
  2502  000CA0  07B2               	decf	(dtoa@w+1)& (0+255),f,b
  2503                           
  2504                           ; BSR set to: 0
  2505                           ;C:\Developments\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 304:         n = n
      +                           / 10;
  2506  000CA2  C0B5  F080         	movff	dtoa@n,___aodiv@dividend
  2507  000CA6  C0B6  F081         	movff	dtoa@n+1,___aodiv@dividend+1
  2508  000CAA  C0B7  F082         	movff	dtoa@n+2,___aodiv@dividend+2
  2509  000CAE  C0B8  F083         	movff	dtoa@n+3,___aodiv@dividend+3
  2510  000CB2  C0B9  F084         	movff	dtoa@n+4,___aodiv@dividend+4
  2511  000CB6  C0BA  F085         	movff	dtoa@n+5,___aodiv@dividend+5
  2512  000CBA  C0BB  F086         	movff	dtoa@n+6,___aodiv@dividend+6
  2513  000CBE  C0BC  F087         	movff	dtoa@n+7,___aodiv@dividend+7
  2514  000CC2  0E0A               	movlw	10
  2515  000CC4  6F88               	movwf	___aodiv@divisor& (0+255),b
  2516  000CC6  0E00               	movlw	0
  2517  000CC8  6F89               	movwf	(___aodiv@divisor+1)& (0+255),b
  2518  000CCA  0E00               	movlw	0
  2519  000CCC  6F8A               	movwf	(___aodiv@divisor+2)& (0+255),b
  2520  000CCE  0E00               	movlw	0
  2521  000CD0  6F8B               	movwf	(___aodiv@divisor+3)& (0+255),b
  2522  000CD2  0E00               	movlw	0
  2523  000CD4  6F8C               	movwf	(___aodiv@divisor+4)& (0+255),b
  2524  000CD6  0E00               	movlw	0
  2525  000CD8  6F8D               	movwf	(___aodiv@divisor+5)& (0+255),b
  2526  000CDA  0E00               	movlw	0
  2527  000CDC  6F8E               	movwf	(___aodiv@divisor+6)& (0+255),b
  2528  000CDE  0E00               	movlw	0
  2529  000CE0  6F8F               	movwf	(___aodiv@divisor+7)& (0+255),b
  2530  000CE2  EC4F  F00A         	call	___aodiv	;wreg free
  2531  000CE6  C080  F0B5         	movff	?___aodiv,dtoa@n
  2532  000CEA  C081  F0B6         	movff	?___aodiv+1,dtoa@n+1
  2533  000CEE  C082  F0B7         	movff	?___aodiv+2,dtoa@n+2
  2534  000CF2  C083  F0B8         	movff	?___aodiv+3,dtoa@n+3
  2535  000CF6  C084  F0B9         	movff	?___aodiv+4,dtoa@n+4
  2536  000CFA  C085  F0BA         	movff	?___aodiv+5,dtoa@n+5
  2537  000CFE  C086  F0BB         	movff	?___aodiv+6,dtoa@n+6
  2538  000D02  C087  F0BC         	movff	?___aodiv+7,dtoa@n+7
  2539  000D06                     l3164:
  2540  000D06  FFFF               	dw	65535	; assembler added errata NOP
  2541                           
  2542                           ;C:\Developments\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 299:     while (!(
      +                          i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  2543  000D08  0100               	movlb	0	; () banked
  2544  000D0A  BFBE               	btfsc	(dtoa@i+1)& (0+255),7,b
  2545  000D0C  D020               	goto	u2570
  2546  000D0E  51BE               	movf	(dtoa@i+1)& (0+255),w,b
  2547  000D10  E103               	bnz	u2530
  2548  000D12  05BD               	decf	dtoa@i& (0+255),w,b
  2549  000D14  A0D8               	btfss	status,0,c
  2550  000D16  D01B               	goto	u2570
  2551  000D18                     u2530:
  2552                           
  2553                           ; BSR set to: 0
  2554  000D18  51B5               	movf	dtoa@n& (0+255),w,b
  2555  000D1A  11B6               	iorwf	(dtoa@n+1)& (0+255),w,b
  2556  000D1C  11B7               	iorwf	(dtoa@n+2)& (0+255),w,b
  2557  000D1E  11B8               	iorwf	(dtoa@n+3)& (0+255),w,b
  2558  000D20  11B9               	iorwf	(dtoa@n+4)& (0+255),w,b
  2559  000D22  11BA               	iorwf	(dtoa@n+5)& (0+255),w,b
  2560  000D24  11BB               	iorwf	(dtoa@n+6)& (0+255),w,b
  2561  000D26  11BC               	iorwf	(dtoa@n+7)& (0+255),w,b
  2562  000D28  A4D8               	btfss	status,2,c
  2563  000D2A  D76F               	goto	l3154
  2564                           
  2565                           ; BSR set to: 0
  2566  000D2C  BFB0               	btfsc	(dtoa@p+1)& (0+255),7,b
  2567  000D2E  D005               	goto	u2550
  2568  000D30  51B0               	movf	(dtoa@p+1)& (0+255),w,b
  2569  000D32  E102               	bnz	u2551
  2570  000D34  05AF               	decf	dtoa@p& (0+255),w,b
  2571  000D36  B0D8               	btfsc	status,0,c
  2572  000D38                     u2551:
  2573  000D38  D768               	goto	l3154
  2574  000D3A                     u2550:
  2575  000D3A  FFFF               	dw	65535	; assembler added errata NOP
  2576                           
  2577                           ; BSR set to: 0
  2578  000D3C  BFB2               	btfsc	(dtoa@w+1)& (0+255),7,b
  2579  000D3E  D007               	goto	u2570
  2580  000D40  51B2               	movf	(dtoa@w+1)& (0+255),w,b
  2581  000D42  E103               	bnz	u2560
  2582  000D44  05B1               	decf	dtoa@w& (0+255),w,b
  2583  000D46  A0D8               	btfss	status,0,c
  2584  000D48  D002               	goto	u2570
  2585  000D4A                     u2560:
  2586                           
  2587                           ; BSR set to: 0
  2588  000D4A  B3F4               	btfsc	_flags& (0+255),1,b
  2589  000D4C  D75E               	goto	l3154
  2590  000D4E                     u2570:
  2591  000D4E  FFFF               	dw	65535	; assembler added errata NOP
  2592                           
  2593                           ; BSR set to: 0
  2594                           ;C:\Developments\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 308:     if (s || 
      +                          (flags & (1 << 2))) {
  2595  000D50  51B3               	movf	dtoa@s& (0+255),w,b
  2596  000D52  11B4               	iorwf	(dtoa@s+1)& (0+255),w,b
  2597  000D54  A4D8               	btfss	status,2,c
  2598  000D56  D002               	goto	u2590
  2599                           
  2600                           ; BSR set to: 0
  2601  000D58  A5F4               	btfss	_flags& (0+255),2,b
  2602  000D5A  D01A               	goto	l3188
  2603  000D5C                     u2590:
  2604  000D5C  FFFF               	dw	65535	; assembler added errata NOP
  2605                           
  2606                           ; BSR set to: 0
  2607                           ;C:\Developments\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 309:         --i;
  2608  000D5E  07BD               	decf	dtoa@i& (0+255),f,b
  2609  000D60  A0D8               	btfss	status,0,c
  2610  000D62  07BE               	decf	(dtoa@i+1)& (0+255),f,b
  2611                           
  2612                           ; BSR set to: 0
  2613                           ;C:\Developments\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 310:         dbuf[
      +                          i] = s ? '-' : '+';
  2614  000D64  51B3               	movf	dtoa@s& (0+255),w,b
  2615  000D66  11B4               	iorwf	(dtoa@s+1)& (0+255),w,b
  2616  000D68  A4D8               	btfss	status,2,c
  2617  000D6A  D004               	goto	l3184
  2618                           
  2619                           ; BSR set to: 0
  2620  000D6C  0E00               	movlw	0
  2621  000D6E  6FAE               	movwf	(_dtoa$1022+1)& (0+255),b
  2622  000D70  0E2B               	movlw	43
  2623  000D72  D004               	goto	L2
  2624  000D74                     l3184:
  2625  000D74  FFFF               	dw	65535	; assembler added errata NOP
  2626                           
  2627                           ; BSR set to: 0
  2628  000D76  0E00               	movlw	0
  2629  000D78  6FAE               	movwf	(_dtoa$1022+1)& (0+255),b
  2630  000D7A  0E2D               	movlw	45
  2631  000D7C                     L2:
  2632  000D7C  FFFF               	dw	65535	; assembler added errata NOP
  2633  000D7E  6FAD               	movwf	_dtoa$1022& (0+255),b
  2634                           
  2635                           ; BSR set to: 0
  2636  000D80  0E00               	movlw	low _dbuf
  2637  000D82  25BD               	addwf	dtoa@i& (0+255),w,b
  2638  000D84  6ED9               	movwf	fsr2l,c
  2639  000D86  0E01               	movlw	high _dbuf
  2640  000D88  21BE               	addwfc	(dtoa@i+1)& (0+255),w,b
  2641  000D8A  6EDA               	movwf	fsr2h,c
  2642  000D8C  C0AD  FFDF         	movff	_dtoa$1022,indf2
  2643  000D90                     l3188:
  2644  000D90  FFFF               	dw	65535	; assembler added errata NOP
  2645                           
  2646                           ; BSR set to: 0
  2647                           ;C:\Developments\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 314:     return pa
      +                          d(fp, &dbuf[i], w);
  2648  000D92  C09B  F090         	movff	dtoa@fp,pad@fp
  2649  000D96  C09C  F091         	movff	dtoa@fp+1,pad@fp+1
  2650  000D9A  0E00               	movlw	low _dbuf
  2651  000D9C  25BD               	addwf	dtoa@i& (0+255),w,b
  2652  000D9E  6F92               	movwf	pad@buf& (0+255),b
  2653  000DA0  0E01               	movlw	high _dbuf
  2654  000DA2  21BE               	addwfc	(dtoa@i+1)& (0+255),w,b
  2655  000DA4  6F93               	movwf	(pad@buf+1)& (0+255),b
  2656  000DA6  C0B1  F094         	movff	dtoa@w,pad@p
  2657  000DAA  C0B2  F095         	movff	dtoa@w+1,pad@p+1
  2658  000DAE  ECCD  F00D         	call	_pad	;wreg free
  2659  000DB2  C090  F09B         	movff	?_pad,?_dtoa
  2660  000DB6  C091  F09C         	movff	?_pad+1,?_dtoa+1
  2661  000DBA  0012               	return		;funcret
  2662  000DBC  FFFF               	dw	65535	; errata NOP
  2663  000DBE                     __end_of_dtoa:
  2664                           	opt callstack 0
  2665                           
  2666 ;; *************** function _pad *****************
  2667 ;; Defined at:
  2668 ;;		line 72 in file "C:\Developments\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  2669 ;; Parameters:    Size  Location     Type
  2670 ;;  fp              2   16[BANK0 ] PTR struct _IO_FILE
  2671 ;;		 -> sprintf@f(6), 
  2672 ;;  buf             2   18[BANK0 ] PTR unsigned char 
  2673 ;;		 -> dbuf(32), 
  2674 ;;  p               2   20[BANK0 ] int 
  2675 ;; Auto vars:     Size  Location     Type
  2676 ;;  w               2   25[BANK0 ] int 
  2677 ;;  i               2   23[BANK0 ] int 
  2678 ;; Return value:  Size  Location     Type
  2679 ;;                  2   16[BANK0 ] int 
  2680 ;; Registers used:
  2681 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2682 ;; Tracked objects:
  2683 ;;		On entry : 0/0
  2684 ;;		On exit  : 0/0
  2685 ;;		Unchanged: 0/0
  2686 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2687 ;;      Params:         0       6       0       0       0       0       0
  2688 ;;      Locals:         0       4       0       0       0       0       0
  2689 ;;      Temps:          0       1       0       0       0       0       0
  2690 ;;      Totals:         0      11       0       0       0       0       0
  2691 ;;Total ram usage:       11 bytes
  2692 ;; Hardware stack levels used:    1
  2693 ;; Hardware stack levels required when called:   13
  2694 ;; This function calls:
  2695 ;;		_fputc
  2696 ;;		_fputs
  2697 ;;		_strlen
  2698 ;; This function is called by:
  2699 ;;		_dtoa
  2700 ;; This function uses a non-reentrant model
  2701 ;;
  2702                           
  2703                           	psect	text6
  2704  001B9A                     __ptext6:
  2705                           	opt callstack 0
  2706  001B9A                     _pad:
  2707                           	opt callstack 0
  2708  001B9A  FFFF               	dw	65535	; assembler added errata NOP
  2709                           
  2710                           ;C:\Developments\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 72: static int pad
      +                          (FILE *fp, char *buf, int p);C:\Developments\Microchip\xc8\v2.05\pic\sources\c99\common\
      +                          doprnt.c: 73: {;C:\Developments\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 74:
      +                               int i, w;;C:\Developments\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 77: 
      +                              if (flags & (1 << 0)) {
  2711                           
  2712                           ;incstack = 0
  2713  001B9C  0100               	movlb	0	; () banked
  2714  001B9E  A1F4               	btfss	_flags& (0+255),0,b
  2715  001BA0  D00A               	goto	l2876
  2716                           
  2717                           ; BSR set to: 0
  2718                           ;C:\Developments\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 78:         fputs(
      +                          (const char *)buf, fp);
  2719  001BA2  C092  F089         	movff	pad@buf,fputs@s
  2720  001BA6  C093  F08A         	movff	pad@buf+1,fputs@s+1
  2721  001BAA  C090  F08B         	movff	pad@fp,fputs@fp
  2722  001BAE  C091  F08C         	movff	pad@fp+1,fputs@fp+1
  2723  001BB2  EC65  F012         	call	_fputs	;wreg free
  2724  001BB6                     l2876:
  2725  001BB6  FFFF               	dw	65535	; assembler added errata NOP
  2726                           
  2727                           ;C:\Developments\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 82:     w = (p < 0
      +                          ) ? 0 : p;
  2728  001BB8  0100               	movlb	0	; () banked
  2729  001BBA  BF95               	btfsc	(pad@p+1)& (0+255),7,b
  2730  001BBC  D005               	goto	l2880
  2731                           
  2732                           ; BSR set to: 0
  2733  001BBE  C094  F099         	movff	pad@p,pad@w
  2734  001BC2  C095  F09A         	movff	pad@p+1,pad@w+1
  2735  001BC6  D005               	goto	l555
  2736  001BC8                     l2880:
  2737  001BC8  FFFF               	dw	65535	; assembler added errata NOP
  2738                           
  2739                           ; BSR set to: 0
  2740  001BCA  0E00               	movlw	0
  2741  001BCC  6F9A               	movwf	(pad@w+1)& (0+255),b
  2742  001BCE  0E00               	movlw	0
  2743  001BD0  6F99               	movwf	pad@w& (0+255),b
  2744  001BD2                     l555:
  2745  001BD2  FFFF               	dw	65535	; assembler added errata NOP
  2746                           
  2747                           ; BSR set to: 0
  2748                           ;C:\Developments\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  2749  001BD4  0E00               	movlw	0
  2750  001BD6  6F98               	movwf	(pad@i+1)& (0+255),b
  2751  001BD8  0E00               	movlw	0
  2752  001BDA  6F97               	movwf	pad@i& (0+255),b
  2753                           
  2754                           ;C:\Developments\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 84:     while (i <
      +                           w) {
  2755  001BDC  D00E               	goto	l2886
  2756  001BDE                     l2882:
  2757  001BDE  FFFF               	dw	65535	; assembler added errata NOP
  2758                           
  2759                           ; BSR set to: 0
  2760                           ;C:\Developments\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 85:         fputc(
      +                          ' ', fp);
  2761  001BE0  0E00               	movlw	0
  2762  001BE2  6F81               	movwf	(fputc@c+1)& (0+255),b
  2763  001BE4  0E20               	movlw	32
  2764  001BE6  6F80               	movwf	fputc@c& (0+255),b
  2765  001BE8  C090  F082         	movff	pad@fp,fputc@fp
  2766  001BEC  C091  F083         	movff	pad@fp+1,fputc@fp+1
  2767  001BF0  EC24  F00E         	call	_fputc	;wreg free
  2768                           
  2769                           ;C:\Developments\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 86:         ++i;
  2770  001BF4  0100               	movlb	0	; () banked
  2771  001BF6  4B97               	infsnz	pad@i& (0+255),f,b
  2772  001BF8  2B98               	incf	(pad@i+1)& (0+255),f,b
  2773  001BFA                     l2886:
  2774  001BFA  FFFF               	dw	65535	; assembler added errata NOP
  2775                           
  2776                           ; BSR set to: 0
  2777                           ;C:\Developments\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 84:     while (i <
      +                           w) {
  2778  001BFC  5199               	movf	pad@w& (0+255),w,b
  2779  001BFE  5D97               	subwf	pad@i& (0+255),w,b
  2780  001C00  5198               	movf	(pad@i+1)& (0+255),w,b
  2781  001C02  0A80               	xorlw	128
  2782  001C04  6F96               	movwf	??_pad& (0+255),b
  2783  001C06  519A               	movf	(pad@w+1)& (0+255),w,b
  2784  001C08  0A80               	xorlw	128
  2785  001C0A  5996               	subwfb	??_pad& (0+255),w,b
  2786  001C0C  A0D8               	btfss	status,0,c
  2787  001C0E  D7E7               	goto	l2882
  2788                           
  2789                           ; BSR set to: 0
  2790                           ;C:\Developments\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 90:     if (!(flag
      +                          s & (1 << 0))) {
  2791  001C10  B1F4               	btfsc	_flags& (0+255),0,b
  2792  001C12  D00A               	goto	l2890
  2793                           
  2794                           ; BSR set to: 0
  2795                           ;C:\Developments\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 91:         fputs(
      +                          (const char *)buf, fp);
  2796  001C14  C092  F089         	movff	pad@buf,fputs@s
  2797  001C18  C093  F08A         	movff	pad@buf+1,fputs@s+1
  2798  001C1C  C090  F08B         	movff	pad@fp,fputs@fp
  2799  001C20  C091  F08C         	movff	pad@fp+1,fputs@fp+1
  2800  001C24  EC65  F012         	call	_fputs	;wreg free
  2801  001C28                     l2890:
  2802  001C28  FFFF               	dw	65535	; assembler added errata NOP
  2803                           
  2804                           ;C:\Developments\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 94:     return str
      +                          len(buf) + w;
  2805  001C2A  C092  F080         	movff	pad@buf,strlen@s
  2806  001C2E  C093  F081         	movff	pad@buf+1,strlen@s+1
  2807  001C32  ECE2  F013         	call	_strlen	;wreg free
  2808  001C36  0100               	movlb	0	; () banked
  2809  001C38  5199               	movf	pad@w& (0+255),w,b
  2810  001C3A  2580               	addwf	?_strlen& (0+255),w,b
  2811  001C3C  6F90               	movwf	?_pad& (0+255),b
  2812  001C3E  519A               	movf	(pad@w+1)& (0+255),w,b
  2813  001C40  2181               	addwfc	(?_strlen+1)& (0+255),w,b
  2814  001C42  6F91               	movwf	(?_pad+1)& (0+255),b
  2815                           
  2816                           ; BSR set to: 0
  2817  001C44  0012               	return		;funcret
  2818  001C46  FFFF               	dw	65535	; errata NOP
  2819  001C48                     __end_of_pad:
  2820                           	opt callstack 0
  2821                           
  2822 ;; *************** function _strlen *****************
  2823 ;; Defined at:
  2824 ;;		line 12 in file "C:\Developments\Microchip\xc8\v2.05\pic\sources\c99\common\strlen.c"
  2825 ;; Parameters:    Size  Location     Type
  2826 ;;  s               2    0[BANK0 ] PTR const unsigned char 
  2827 ;;		 -> dbuf(32), 
  2828 ;; Auto vars:     Size  Location     Type
  2829 ;;  a               2    2[BANK0 ] PTR const unsigned char 
  2830 ;;		 -> dbuf(32), 
  2831 ;; Return value:  Size  Location     Type
  2832 ;;                  2    0[BANK0 ] unsigned int 
  2833 ;; Registers used:
  2834 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2835 ;; Tracked objects:
  2836 ;;		On entry : 0/0
  2837 ;;		On exit  : 0/0
  2838 ;;		Unchanged: 0/0
  2839 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2840 ;;      Params:         0       2       0       0       0       0       0
  2841 ;;      Locals:         0       2       0       0       0       0       0
  2842 ;;      Temps:          0       0       0       0       0       0       0
  2843 ;;      Totals:         0       4       0       0       0       0       0
  2844 ;;Total ram usage:        4 bytes
  2845 ;; Hardware stack levels used:    1
  2846 ;; Hardware stack levels required when called:   10
  2847 ;; This function calls:
  2848 ;;		Nothing
  2849 ;; This function is called by:
  2850 ;;		_pad
  2851 ;; This function uses a non-reentrant model
  2852 ;;
  2853                           
  2854                           	psect	text7
  2855  0027C4                     __ptext7:
  2856                           	opt callstack 0
  2857  0027C4                     _strlen:
  2858                           	opt callstack 0
  2859  0027C4  FFFF               	dw	65535	; assembler added errata NOP
  2860                           
  2861                           ; BSR set to: 0
  2862                           ;incstack = 0
  2863  0027C6  C080  F082         	movff	strlen@s,strlen@a
  2864  0027CA  C081  F083         	movff	strlen@s+1,strlen@a+1
  2865  0027CE  D004               	goto	l2848
  2866  0027D0                     l2846:
  2867  0027D0  FFFF               	dw	65535	; assembler added errata NOP
  2868  0027D2  0100               	movlb	0	; () banked
  2869  0027D4  4B80               	infsnz	strlen@s& (0+255),f,b
  2870  0027D6  2B81               	incf	(strlen@s+1)& (0+255),f,b
  2871  0027D8                     l2848:
  2872  0027D8  FFFF               	dw	65535	; assembler added errata NOP
  2873  0027DA  C080  FFD9         	movff	strlen@s,fsr2l
  2874  0027DE  C081  FFDA         	movff	strlen@s+1,fsr2h
  2875  0027E2  50DF               	movf	indf2,w,c
  2876  0027E4  A4D8               	btfss	status,2,c
  2877  0027E6  D7F4               	goto	l2846
  2878  0027E8  0100               	movlb	0	; () banked
  2879  0027EA  5182               	movf	strlen@a& (0+255),w,b
  2880  0027EC  5D80               	subwf	strlen@s& (0+255),w,b
  2881  0027EE  6F80               	movwf	?_strlen& (0+255),b
  2882  0027F0  5183               	movf	(strlen@a+1)& (0+255),w,b
  2883  0027F2  5981               	subwfb	(strlen@s+1)& (0+255),w,b
  2884  0027F4  6F81               	movwf	(?_strlen+1)& (0+255),b
  2885                           
  2886                           ; BSR set to: 0
  2887  0027F6  0012               	return		;funcret
  2888  0027F8  FFFF               	dw	65535	; errata NOP
  2889  0027FA                     __end_of_strlen:
  2890                           	opt callstack 0
  2891                           
  2892 ;; *************** function _fputs *****************
  2893 ;; Defined at:
  2894 ;;		line 8 in file "C:\Developments\Microchip\xc8\v2.05\pic\sources\c99\common\nf_fputs.c"
  2895 ;; Parameters:    Size  Location     Type
  2896 ;;  s               2    9[BANK0 ] PTR const unsigned char 
  2897 ;;		 -> dbuf(32), 
  2898 ;;  fp              2   11[BANK0 ] PTR struct _IO_FILE
  2899 ;;		 -> sprintf@f(6), 
  2900 ;; Auto vars:     Size  Location     Type
  2901 ;;  i               2   14[BANK0 ] int 
  2902 ;;  c               1   13[BANK0 ] unsigned char 
  2903 ;; Return value:  Size  Location     Type
  2904 ;;                  2    9[BANK0 ] int 
  2905 ;; Registers used:
  2906 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2907 ;; Tracked objects:
  2908 ;;		On entry : 0/0
  2909 ;;		On exit  : 0/0
  2910 ;;		Unchanged: 0/0
  2911 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2912 ;;      Params:         0       4       0       0       0       0       0
  2913 ;;      Locals:         0       3       0       0       0       0       0
  2914 ;;      Temps:          0       0       0       0       0       0       0
  2915 ;;      Totals:         0       7       0       0       0       0       0
  2916 ;;Total ram usage:        7 bytes
  2917 ;; Hardware stack levels used:    1
  2918 ;; Hardware stack levels required when called:   12
  2919 ;; This function calls:
  2920 ;;		_fputc
  2921 ;; This function is called by:
  2922 ;;		_pad
  2923 ;; This function uses a non-reentrant model
  2924 ;;
  2925                           
  2926                           	psect	text8
  2927  0024CA                     __ptext8:
  2928                           	opt callstack 0
  2929  0024CA                     _fputs:
  2930                           	opt callstack 0
  2931  0024CA  FFFF               	dw	65535	; assembler added errata NOP
  2932                           
  2933                           ; BSR set to: 0
  2934                           ;incstack = 0
  2935  0024CC  0E00               	movlw	0
  2936  0024CE  0100               	movlb	0	; () banked
  2937  0024D0  6F8F               	movwf	(fputs@i+1)& (0+255),b
  2938  0024D2  0E00               	movlw	0
  2939  0024D4  6F8E               	movwf	fputs@i& (0+255),b
  2940  0024D6  D00D               	goto	l2842
  2941  0024D8                     l2838:
  2942  0024D8  FFFF               	dw	65535	; assembler added errata NOP
  2943                           
  2944                           ; BSR set to: 0
  2945  0024DA  C08D  F080         	movff	fputs@c,fputc@c
  2946  0024DE  6B81               	clrf	(fputc@c+1)& (0+255),b
  2947  0024E0  C08B  F082         	movff	fputs@fp,fputc@fp
  2948  0024E4  C08C  F083         	movff	fputs@fp+1,fputc@fp+1
  2949  0024E8  EC24  F00E         	call	_fputc	;wreg free
  2950  0024EC  0100               	movlb	0	; () banked
  2951  0024EE  4B8E               	infsnz	fputs@i& (0+255),f,b
  2952  0024F0  2B8F               	incf	(fputs@i+1)& (0+255),f,b
  2953  0024F2                     l2842:
  2954  0024F2  FFFF               	dw	65535	; assembler added errata NOP
  2955                           
  2956                           ; BSR set to: 0
  2957  0024F4  518E               	movf	fputs@i& (0+255),w,b
  2958  0024F6  2589               	addwf	fputs@s& (0+255),w,b
  2959  0024F8  6ED9               	movwf	fsr2l,c
  2960  0024FA  518F               	movf	(fputs@i+1)& (0+255),w,b
  2961  0024FC  218A               	addwfc	(fputs@s+1)& (0+255),w,b
  2962  0024FE  6EDA               	movwf	fsr2h,c
  2963  002500  50DF               	movf	indf2,w,c
  2964  002502  6F8D               	movwf	fputs@c& (0+255),b
  2965  002504  518D               	movf	fputs@c& (0+255),w,b
  2966  002506  B4D8               	btfsc	status,2,c
  2967                           
  2968                           ; BSR set to: 0
  2969  002508  0012               	return		;funcret
  2970  00250A  FFFF               	dw	65535	; assembler added errata NOP
  2971  00250C  D7E5               	goto	l2838
  2972  00250E  FFFF               	dw	65535	; errata NOP
  2973  002510                     __end_of_fputs:
  2974                           	opt callstack 0
  2975                           
  2976 ;; *************** function _fputc *****************
  2977 ;; Defined at:
  2978 ;;		line 8 in file "C:\Developments\Microchip\xc8\v2.05\pic\sources\c99\common\nf_fputc.c"
  2979 ;; Parameters:    Size  Location     Type
  2980 ;;  c               2    0[BANK0 ] int 
  2981 ;;  fp              2    2[BANK0 ] PTR struct _IO_FILE
  2982 ;;		 -> sprintf@f(6), 
  2983 ;; Auto vars:     Size  Location     Type
  2984 ;;		None
  2985 ;; Return value:  Size  Location     Type
  2986 ;;                  2    0[BANK0 ] int 
  2987 ;; Registers used:
  2988 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2989 ;; Tracked objects:
  2990 ;;		On entry : 0/0
  2991 ;;		On exit  : 0/0
  2992 ;;		Unchanged: 0/0
  2993 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2994 ;;      Params:         0       4       0       0       0       0       0
  2995 ;;      Locals:         0       0       0       0       0       0       0
  2996 ;;      Temps:          0       5       0       0       0       0       0
  2997 ;;      Totals:         0       9       0       0       0       0       0
  2998 ;;Total ram usage:        9 bytes
  2999 ;; Hardware stack levels used:    1
  3000 ;; Hardware stack levels required when called:   11
  3001 ;; This function calls:
  3002 ;;		_putch
  3003 ;; This function is called by:
  3004 ;;		_pad
  3005 ;;		_vfpfcnvrt
  3006 ;;		_fputs
  3007 ;; This function uses a non-reentrant model
  3008 ;;
  3009                           
  3010                           	psect	text9
  3011  001C48                     __ptext9:
  3012                           	opt callstack 0
  3013  001C48                     _fputc:
  3014                           	opt callstack 0
  3015  001C48  FFFF               	dw	65535	; assembler added errata NOP
  3016                           
  3017                           ; BSR set to: 0
  3018                           ;incstack = 0
  3019  001C4A  0100               	movlb	0	; () banked
  3020  001C4C  5182               	movf	fputc@fp& (0+255),w,b
  3021  001C4E  1183               	iorwf	(fputc@fp+1)& (0+255),w,b
  3022  001C50  B4D8               	btfsc	status,2,c
  3023  001C52  D004               	goto	u1910
  3024                           
  3025                           ; BSR set to: 0
  3026  001C54  5182               	movf	fputc@fp& (0+255),w,b
  3027  001C56  1183               	iorwf	(fputc@fp+1)& (0+255),w,b
  3028  001C58  A4D8               	btfss	status,2,c
  3029  001C5A  D005               	goto	l2814
  3030  001C5C                     u1910:
  3031  001C5C  FFFF               	dw	65535	; assembler added errata NOP
  3032                           
  3033                           ; BSR set to: 0
  3034  001C5E  5180               	movf	fputc@c& (0+255),w,b
  3035  001C60  ECC1  F014         	call	_putch
  3036  001C64  D045               	goto	l1348
  3037  001C66                     l2814:
  3038  001C66  FFFF               	dw	65535	; assembler added errata NOP
  3039                           
  3040                           ; BSR set to: 0
  3041  001C68  EE20 F004          	lfsr	2,4
  3042  001C6C  5182               	movf	fputc@fp& (0+255),w,b
  3043  001C6E  26D9               	addwf	fsr2l,f,c
  3044  001C70  5183               	movf	(fputc@fp+1)& (0+255),w,b
  3045  001C72  22DA               	addwfc	fsr2h,f,c
  3046  001C74  50DE               	movf	postinc2,w,c
  3047  001C76  10DE               	iorwf	postinc2,w,c
  3048  001C78  B4D8               	btfsc	status,2,c
  3049  001C7A  D016               	goto	u1930
  3050                           
  3051                           ; BSR set to: 0
  3052  001C7C  EE20 F004          	lfsr	2,4
  3053  001C80  5182               	movf	fputc@fp& (0+255),w,b
  3054  001C82  26D9               	addwf	fsr2l,f,c
  3055  001C84  5183               	movf	(fputc@fp+1)& (0+255),w,b
  3056  001C86  22DA               	addwfc	fsr2h,f,c
  3057  001C88  EE10 F002          	lfsr	1,2
  3058  001C8C  5182               	movf	fputc@fp& (0+255),w,b
  3059  001C8E  26E1               	addwf	fsr1l,f,c
  3060  001C90  5183               	movf	(fputc@fp+1)& (0+255),w,b
  3061  001C92  22E2               	addwfc	fsr1h,f,c
  3062  001C94  50DE               	movf	postinc2,w,c
  3063  001C96  5CE6               	subwf	postinc1,w,c
  3064  001C98  50E6               	movf	postinc1,w,c
  3065  001C9A  0A80               	xorlw	128
  3066  001C9C  6F88               	movwf	(??_fputc+4)& (0+255),b
  3067  001C9E  50DE               	movf	postinc2,w,c
  3068  001CA0  0A80               	xorlw	128
  3069  001CA2  5988               	subwfb	(??_fputc+4)& (0+255),w,b
  3070  001CA4  B0D8               	btfsc	status,0,c
  3071  001CA6  D024               	goto	l1348
  3072  001CA8                     u1930:
  3073  001CA8  FFFF               	dw	65535	; assembler added errata NOP
  3074                           
  3075                           ; BSR set to: 0
  3076  001CAA  EE20 F002          	lfsr	2,2
  3077  001CAE  5182               	movf	fputc@fp& (0+255),w,b
  3078  001CB0  26D9               	addwf	fsr2l,f,c
  3079  001CB2  5183               	movf	(fputc@fp+1)& (0+255),w,b
  3080  001CB4  22DA               	addwfc	fsr2h,f,c
  3081  001CB6  CFDE F084          	movff	postinc2,??_fputc
  3082  001CBA  CFDD F085          	movff	postdec2,??_fputc+1
  3083  001CBE  C082  FFD9         	movff	fputc@fp,fsr2l
  3084  001CC2  C083  FFDA         	movff	fputc@fp+1,fsr2h
  3085  001CC6  CFDE F086          	movff	postinc2,??_fputc+2
  3086  001CCA  CFDD F087          	movff	postdec2,??_fputc+3
  3087  001CCE  5184               	movf	??_fputc& (0+255),w,b
  3088  001CD0  2586               	addwf	(??_fputc+2)& (0+255),w,b
  3089  001CD2  6ED9               	movwf	fsr2l,c
  3090  001CD4  5185               	movf	(??_fputc+1)& (0+255),w,b
  3091  001CD6  2187               	addwfc	(??_fputc+3)& (0+255),w,b
  3092  001CD8  6EDA               	movwf	fsr2h,c
  3093  001CDA  C080  FFDF         	movff	fputc@c,indf2
  3094  001CDE  EE20 F002          	lfsr	2,2
  3095  001CE2  5182               	movf	fputc@fp& (0+255),w,b
  3096  001CE4  26D9               	addwf	fsr2l,f,c
  3097  001CE6  5183               	movf	(fputc@fp+1)& (0+255),w,b
  3098  001CE8  22DA               	addwfc	fsr2h,f,c
  3099  001CEA  2ADE               	incf	postinc2,f,c
  3100  001CEC  0E00               	movlw	0
  3101  001CEE  22DD               	addwfc	postdec2,f,c
  3102  001CF0                     l1348:
  3103  001CF0  FFFF               	dw	65535	; assembler added errata NOP
  3104  001CF2  0012               	return		;funcret
  3105  001CF4  FFFF               	dw	65535	; errata NOP
  3106  001CF6                     __end_of_fputc:
  3107                           	opt callstack 0
  3108                           
  3109 ;; *************** function _putch *****************
  3110 ;; Defined at:
  3111 ;;		line 7 in file "C:\Developments\Microchip\xc8\v2.05\pic\sources\c99\common\putch.c"
  3112 ;; Parameters:    Size  Location     Type
  3113 ;;  c               1    wreg     unsigned char 
  3114 ;; Auto vars:     Size  Location     Type
  3115 ;;  c               1    0[COMRAM] unsigned char 
  3116 ;; Return value:  Size  Location     Type
  3117 ;;                  1    wreg      void 
  3118 ;; Registers used:
  3119 ;;		wreg
  3120 ;; Tracked objects:
  3121 ;;		On entry : 0/0
  3122 ;;		On exit  : 0/0
  3123 ;;		Unchanged: 0/0
  3124 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3125 ;;      Params:         0       0       0       0       0       0       0
  3126 ;;      Locals:         0       0       0       0       0       0       0
  3127 ;;      Temps:          0       0       0       0       0       0       0
  3128 ;;      Totals:         0       0       0       0       0       0       0
  3129 ;;Total ram usage:        0 bytes
  3130 ;; Hardware stack levels used:    1
  3131 ;; Hardware stack levels required when called:   10
  3132 ;; This function calls:
  3133 ;;		Nothing
  3134 ;; This function is called by:
  3135 ;;		_fputc
  3136 ;; This function uses a non-reentrant model
  3137 ;;
  3138                           
  3139                           	psect	text10
  3140  002982                     __ptext10:
  3141                           	opt callstack 0
  3142  002982                     _putch:
  3143                           	opt callstack 0
  3144  002982  FFFF               	dw	65535	; assembler added errata NOP
  3145                           
  3146                           ;incstack = 0
  3147  002984  0012               	return		;funcret
  3148  002986  FFFF               	dw	65535	; errata NOP
  3149  002988                     __end_of_putch:
  3150                           	opt callstack 0
  3151                           
  3152 ;; *************** function _abs *****************
  3153 ;; Defined at:
  3154 ;;		line 1 in file "C:\Developments\Microchip\xc8\v2.05\pic\sources\c99\common\abs.c"
  3155 ;; Parameters:    Size  Location     Type
  3156 ;;  a               2   18[BANK0 ] int 
  3157 ;; Auto vars:     Size  Location     Type
  3158 ;;		None
  3159 ;; Return value:  Size  Location     Type
  3160 ;;                  2   18[BANK0 ] int 
  3161 ;; Registers used:
  3162 ;;		wreg, status,2, status,0
  3163 ;; Tracked objects:
  3164 ;;		On entry : 0/0
  3165 ;;		On exit  : 0/0
  3166 ;;		Unchanged: 0/0
  3167 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3168 ;;      Params:         0       2       0       0       0       0       0
  3169 ;;      Locals:         0       0       0       0       0       0       0
  3170 ;;      Temps:          0       2       0       0       0       0       0
  3171 ;;      Totals:         0       4       0       0       0       0       0
  3172 ;;Total ram usage:        4 bytes
  3173 ;; Hardware stack levels used:    1
  3174 ;; Hardware stack levels required when called:   10
  3175 ;; This function calls:
  3176 ;;		Nothing
  3177 ;; This function is called by:
  3178 ;;		_dtoa
  3179 ;; This function uses a non-reentrant model
  3180 ;;
  3181                           
  3182                           	psect	text11
  3183  002662                     __ptext11:
  3184                           	opt callstack 0
  3185  002662                     _abs:
  3186                           	opt callstack 0
  3187  002662  FFFF               	dw	65535	; assembler added errata NOP
  3188                           
  3189                           ;incstack = 0
  3190  002664  0100               	movlb	0	; () banked
  3191  002666  BF93               	btfsc	(abs@a+1)& (0+255),7,b
  3192  002668  D005               	goto	u2060
  3193  00266A  5193               	movf	(abs@a+1)& (0+255),w,b
  3194  00266C  E111               	bnz	l1288
  3195  00266E  0592               	decf	abs@a& (0+255),w,b
  3196  002670  B0D8               	btfsc	status,0,c
  3197  002672  D00E               	goto	l1288
  3198  002674                     u2060:
  3199  002674  FFFF               	dw	65535	; assembler added errata NOP
  3200                           
  3201                           ; BSR set to: 0
  3202  002676  C092  F094         	movff	abs@a,??_abs
  3203  00267A  C093  F095         	movff	abs@a+1,??_abs+1
  3204  00267E  1F94               	comf	??_abs& (0+255),f,b
  3205  002680  1F95               	comf	(??_abs+1)& (0+255),f,b
  3206  002682  4B94               	infsnz	??_abs& (0+255),f,b
  3207  002684  2B95               	incf	(??_abs+1)& (0+255),f,b
  3208  002686  C094  F092         	movff	??_abs,?_abs
  3209  00268A  C095  F093         	movff	??_abs+1,?_abs+1
  3210  00268E  D005               	goto	l1291
  3211  002690                     l1288:
  3212  002690  FFFF               	dw	65535	; assembler added errata NOP
  3213                           
  3214                           ; BSR set to: 0
  3215  002692  C092  F092         	movff	abs@a,?_abs
  3216  002696  C093  F093         	movff	abs@a+1,?_abs+1
  3217  00269A                     l1291:
  3218  00269A  FFFF               	dw	65535	; assembler added errata NOP
  3219                           
  3220                           ; BSR set to: 0
  3221  00269C  0012               	return		;funcret
  3222  00269E  FFFF               	dw	65535	; errata NOP
  3223  0026A0                     __end_of_abs:
  3224                           	opt callstack 0
  3225                           
  3226 ;; *************** function ___aomod *****************
  3227 ;; Defined at:
  3228 ;;		line 9 in file "C:\Developments\Microchip\xc8\v2.05\pic\sources\c99\common\aomod.c"
  3229 ;; Parameters:    Size  Location     Type
  3230 ;;  dividend        8    0[BANK0 ] long long 
  3231 ;;  divisor         8    8[BANK0 ] long long 
  3232 ;; Auto vars:     Size  Location     Type
  3233 ;;  sign            1   17[BANK0 ] unsigned char 
  3234 ;;  counter         1   16[BANK0 ] unsigned char 
  3235 ;; Return value:  Size  Location     Type
  3236 ;;                  8    0[BANK0 ] long long 
  3237 ;; Registers used:
  3238 ;;		wreg, status,2, status,0
  3239 ;; Tracked objects:
  3240 ;;		On entry : 0/0
  3241 ;;		On exit  : 0/0
  3242 ;;		Unchanged: 0/0
  3243 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3244 ;;      Params:         0      16       0       0       0       0       0
  3245 ;;      Locals:         0       2       0       0       0       0       0
  3246 ;;      Temps:          0       0       0       0       0       0       0
  3247 ;;      Totals:         0      18       0       0       0       0       0
  3248 ;;Total ram usage:       18 bytes
  3249 ;; Hardware stack levels used:    1
  3250 ;; Hardware stack levels required when called:   10
  3251 ;; This function calls:
  3252 ;;		Nothing
  3253 ;; This function is called by:
  3254 ;;		_dtoa
  3255 ;; This function uses a non-reentrant model
  3256 ;;
  3257                           
  3258                           	psect	text12
  3259  001758                     __ptext12:
  3260                           	opt callstack 0
  3261  001758                     ___aomod:
  3262                           	opt callstack 0
  3263  001758  FFFF               	dw	65535	; assembler added errata NOP
  3264                           
  3265                           ; BSR set to: 0
  3266                           ;incstack = 0
  3267  00175A  0E00               	movlw	0
  3268  00175C  0100               	movlb	0	; () banked
  3269  00175E  6F91               	movwf	___aomod@sign& (0+255),b
  3270                           
  3271                           ; BSR set to: 0
  3272  001760  AF87               	btfss	(___aomod@dividend+7)& (0+255),7,b
  3273  001762  D012               	goto	l2960
  3274                           
  3275                           ; BSR set to: 0
  3276  001764  1F87               	comf	(___aomod@dividend+7)& (0+255),f,b
  3277  001766  1F86               	comf	(___aomod@dividend+6)& (0+255),f,b
  3278  001768  1F85               	comf	(___aomod@dividend+5)& (0+255),f,b
  3279  00176A  1F84               	comf	(___aomod@dividend+4)& (0+255),f,b
  3280  00176C  1F83               	comf	(___aomod@dividend+3)& (0+255),f,b
  3281  00176E  1F82               	comf	(___aomod@dividend+2)& (0+255),f,b
  3282  001770  1F81               	comf	(___aomod@dividend+1)& (0+255),f,b
  3283  001772  6D80               	negf	___aomod@dividend& (0+255),b
  3284  001774  0E00               	movlw	0
  3285  001776  2381               	addwfc	(___aomod@dividend+1)& (0+255),f,b
  3286  001778  2382               	addwfc	(___aomod@dividend+2)& (0+255),f,b
  3287  00177A  2383               	addwfc	(___aomod@dividend+3)& (0+255),f,b
  3288  00177C  2384               	addwfc	(___aomod@dividend+4)& (0+255),f,b
  3289  00177E  2385               	addwfc	(___aomod@dividend+5)& (0+255),f,b
  3290  001780  2386               	addwfc	(___aomod@dividend+6)& (0+255),f,b
  3291  001782  2387               	addwfc	(___aomod@dividend+7)& (0+255),f,b
  3292                           
  3293                           ; BSR set to: 0
  3294  001784  0E01               	movlw	1
  3295  001786  6F91               	movwf	___aomod@sign& (0+255),b
  3296  001788                     l2960:
  3297  001788  FFFF               	dw	65535	; assembler added errata NOP
  3298                           
  3299                           ; BSR set to: 0
  3300  00178A  AF8F               	btfss	(___aomod@divisor+7)& (0+255),7,b
  3301  00178C  D010               	goto	l2964
  3302                           
  3303                           ; BSR set to: 0
  3304  00178E  1F8F               	comf	(___aomod@divisor+7)& (0+255),f,b
  3305  001790  1F8E               	comf	(___aomod@divisor+6)& (0+255),f,b
  3306  001792  1F8D               	comf	(___aomod@divisor+5)& (0+255),f,b
  3307  001794  1F8C               	comf	(___aomod@divisor+4)& (0+255),f,b
  3308  001796  1F8B               	comf	(___aomod@divisor+3)& (0+255),f,b
  3309  001798  1F8A               	comf	(___aomod@divisor+2)& (0+255),f,b
  3310  00179A  1F89               	comf	(___aomod@divisor+1)& (0+255),f,b
  3311  00179C  6D88               	negf	___aomod@divisor& (0+255),b
  3312  00179E  0E00               	movlw	0
  3313  0017A0  2389               	addwfc	(___aomod@divisor+1)& (0+255),f,b
  3314  0017A2  238A               	addwfc	(___aomod@divisor+2)& (0+255),f,b
  3315  0017A4  238B               	addwfc	(___aomod@divisor+3)& (0+255),f,b
  3316  0017A6  238C               	addwfc	(___aomod@divisor+4)& (0+255),f,b
  3317  0017A8  238D               	addwfc	(___aomod@divisor+5)& (0+255),f,b
  3318  0017AA  238E               	addwfc	(___aomod@divisor+6)& (0+255),f,b
  3319  0017AC  238F               	addwfc	(___aomod@divisor+7)& (0+255),f,b
  3320  0017AE                     l2964:
  3321  0017AE  FFFF               	dw	65535	; assembler added errata NOP
  3322                           
  3323                           ; BSR set to: 0
  3324  0017B0  5188               	movf	___aomod@divisor& (0+255),w,b
  3325  0017B2  1189               	iorwf	(___aomod@divisor+1)& (0+255),w,b
  3326  0017B4  118A               	iorwf	(___aomod@divisor+2)& (0+255),w,b
  3327  0017B6  118B               	iorwf	(___aomod@divisor+3)& (0+255),w,b
  3328  0017B8  118C               	iorwf	(___aomod@divisor+4)& (0+255),w,b
  3329  0017BA  118D               	iorwf	(___aomod@divisor+5)& (0+255),w,b
  3330  0017BC  118E               	iorwf	(___aomod@divisor+6)& (0+255),w,b
  3331  0017BE  118F               	iorwf	(___aomod@divisor+7)& (0+255),w,b
  3332  0017C0  B4D8               	btfsc	status,2,c
  3333  0017C2  D040               	goto	l2980
  3334                           
  3335                           ; BSR set to: 0
  3336  0017C4  0E01               	movlw	1
  3337  0017C6  6F90               	movwf	___aomod@counter& (0+255),b
  3338  0017C8  D00B               	goto	l2970
  3339  0017CA                     l2968:
  3340  0017CA  FFFF               	dw	65535	; assembler added errata NOP
  3341                           
  3342                           ; BSR set to: 0
  3343  0017CC  90D8               	bcf	status,0,c
  3344  0017CE  3788               	rlcf	___aomod@divisor& (0+255),f,b
  3345  0017D0  3789               	rlcf	(___aomod@divisor+1)& (0+255),f,b
  3346  0017D2  378A               	rlcf	(___aomod@divisor+2)& (0+255),f,b
  3347  0017D4  378B               	rlcf	(___aomod@divisor+3)& (0+255),f,b
  3348  0017D6  378C               	rlcf	(___aomod@divisor+4)& (0+255),f,b
  3349  0017D8  378D               	rlcf	(___aomod@divisor+5)& (0+255),f,b
  3350  0017DA  378E               	rlcf	(___aomod@divisor+6)& (0+255),f,b
  3351  0017DC  378F               	rlcf	(___aomod@divisor+7)& (0+255),f,b
  3352  0017DE  2B90               	incf	___aomod@counter& (0+255),f,b
  3353  0017E0                     l2970:
  3354  0017E0  FFFF               	dw	65535	; assembler added errata NOP
  3355                           
  3356                           ; BSR set to: 0
  3357  0017E2  AF8F               	btfss	(___aomod@divisor+7)& (0+255),7,b
  3358  0017E4  D7F2               	goto	l2968
  3359  0017E6                     u2190:
  3360  0017E6  FFFF               	dw	65535	; assembler added errata NOP
  3361                           
  3362                           ; BSR set to: 0
  3363  0017E8  5188               	movf	___aomod@divisor& (0+255),w,b
  3364  0017EA  5D80               	subwf	___aomod@dividend& (0+255),w,b
  3365  0017EC  5189               	movf	(___aomod@divisor+1)& (0+255),w,b
  3366  0017EE  5981               	subwfb	(___aomod@dividend+1)& (0+255),w,b
  3367  0017F0  518A               	movf	(___aomod@divisor+2)& (0+255),w,b
  3368  0017F2  5982               	subwfb	(___aomod@dividend+2)& (0+255),w,b
  3369  0017F4  518B               	movf	(___aomod@divisor+3)& (0+255),w,b
  3370  0017F6  5983               	subwfb	(___aomod@dividend+3)& (0+255),w,b
  3371  0017F8  518C               	movf	(___aomod@divisor+4)& (0+255),w,b
  3372  0017FA  5984               	subwfb	(___aomod@dividend+4)& (0+255),w,b
  3373  0017FC  518D               	movf	(___aomod@divisor+5)& (0+255),w,b
  3374  0017FE  5985               	subwfb	(___aomod@dividend+5)& (0+255),w,b
  3375  001800  518E               	movf	(___aomod@divisor+6)& (0+255),w,b
  3376  001802  5986               	subwfb	(___aomod@dividend+6)& (0+255),w,b
  3377  001804  518F               	movf	(___aomod@divisor+7)& (0+255),w,b
  3378  001806  5987               	subwfb	(___aomod@dividend+7)& (0+255),w,b
  3379  001808  A0D8               	btfss	status,0,c
  3380  00180A  D010               	goto	l2976
  3381                           
  3382                           ; BSR set to: 0
  3383  00180C  5188               	movf	___aomod@divisor& (0+255),w,b
  3384  00180E  5F80               	subwf	___aomod@dividend& (0+255),f,b
  3385  001810  5189               	movf	(___aomod@divisor+1)& (0+255),w,b
  3386  001812  5B81               	subwfb	(___aomod@dividend+1)& (0+255),f,b
  3387  001814  518A               	movf	(___aomod@divisor+2)& (0+255),w,b
  3388  001816  5B82               	subwfb	(___aomod@dividend+2)& (0+255),f,b
  3389  001818  518B               	movf	(___aomod@divisor+3)& (0+255),w,b
  3390  00181A  5B83               	subwfb	(___aomod@dividend+3)& (0+255),f,b
  3391  00181C  518C               	movf	(___aomod@divisor+4)& (0+255),w,b
  3392  00181E  5B84               	subwfb	(___aomod@dividend+4)& (0+255),f,b
  3393  001820  518D               	movf	(___aomod@divisor+5)& (0+255),w,b
  3394  001822  5B85               	subwfb	(___aomod@dividend+5)& (0+255),f,b
  3395  001824  518E               	movf	(___aomod@divisor+6)& (0+255),w,b
  3396  001826  5B86               	subwfb	(___aomod@dividend+6)& (0+255),f,b
  3397  001828  518F               	movf	(___aomod@divisor+7)& (0+255),w,b
  3398  00182A  5B87               	subwfb	(___aomod@dividend+7)& (0+255),f,b
  3399  00182C                     l2976:
  3400  00182C  FFFF               	dw	65535	; assembler added errata NOP
  3401                           
  3402                           ; BSR set to: 0
  3403  00182E  90D8               	bcf	status,0,c
  3404  001830  338F               	rrcf	(___aomod@divisor+7)& (0+255),f,b
  3405  001832  338E               	rrcf	(___aomod@divisor+6)& (0+255),f,b
  3406  001834  338D               	rrcf	(___aomod@divisor+5)& (0+255),f,b
  3407  001836  338C               	rrcf	(___aomod@divisor+4)& (0+255),f,b
  3408  001838  338B               	rrcf	(___aomod@divisor+3)& (0+255),f,b
  3409  00183A  338A               	rrcf	(___aomod@divisor+2)& (0+255),f,b
  3410  00183C  3389               	rrcf	(___aomod@divisor+1)& (0+255),f,b
  3411  00183E  3388               	rrcf	___aomod@divisor& (0+255),f,b
  3412                           
  3413                           ; BSR set to: 0
  3414  001840  2F90               	decfsz	___aomod@counter& (0+255),f,b
  3415  001842  D7D1               	goto	u2190
  3416  001844                     l2980:
  3417  001844  FFFF               	dw	65535	; assembler added errata NOP
  3418                           
  3419                           ; BSR set to: 0
  3420  001846  5191               	movf	___aomod@sign& (0+255),w,b
  3421  001848  B4D8               	btfsc	status,2,c
  3422  00184A  D010               	goto	l2984
  3423                           
  3424                           ; BSR set to: 0
  3425  00184C  1F87               	comf	(___aomod@dividend+7)& (0+255),f,b
  3426  00184E  1F86               	comf	(___aomod@dividend+6)& (0+255),f,b
  3427  001850  1F85               	comf	(___aomod@dividend+5)& (0+255),f,b
  3428  001852  1F84               	comf	(___aomod@dividend+4)& (0+255),f,b
  3429  001854  1F83               	comf	(___aomod@dividend+3)& (0+255),f,b
  3430  001856  1F82               	comf	(___aomod@dividend+2)& (0+255),f,b
  3431  001858  1F81               	comf	(___aomod@dividend+1)& (0+255),f,b
  3432  00185A  6D80               	negf	___aomod@dividend& (0+255),b
  3433  00185C  0E00               	movlw	0
  3434  00185E  2381               	addwfc	(___aomod@dividend+1)& (0+255),f,b
  3435  001860  2382               	addwfc	(___aomod@dividend+2)& (0+255),f,b
  3436  001862  2383               	addwfc	(___aomod@dividend+3)& (0+255),f,b
  3437  001864  2384               	addwfc	(___aomod@dividend+4)& (0+255),f,b
  3438  001866  2385               	addwfc	(___aomod@dividend+5)& (0+255),f,b
  3439  001868  2386               	addwfc	(___aomod@dividend+6)& (0+255),f,b
  3440  00186A  2387               	addwfc	(___aomod@dividend+7)& (0+255),f,b
  3441  00186C                     l2984:
  3442  00186C  FFFF               	dw	65535	; assembler added errata NOP
  3443                           
  3444                           ; BSR set to: 0
  3445  00186E  C080  F080         	movff	___aomod@dividend,?___aomod
  3446  001872  C081  F081         	movff	___aomod@dividend+1,?___aomod+1
  3447  001876  C082  F082         	movff	___aomod@dividend+2,?___aomod+2
  3448  00187A  C083  F083         	movff	___aomod@dividend+3,?___aomod+3
  3449  00187E  C084  F084         	movff	___aomod@dividend+4,?___aomod+4
  3450  001882  C085  F085         	movff	___aomod@dividend+5,?___aomod+5
  3451  001886  C086  F086         	movff	___aomod@dividend+6,?___aomod+6
  3452  00188A  C087  F087         	movff	___aomod@dividend+7,?___aomod+7
  3453                           
  3454                           ; BSR set to: 0
  3455  00188E  0012               	return		;funcret
  3456  001890  FFFF               	dw	65535	; errata NOP
  3457  001892                     __end_of___aomod:
  3458                           	opt callstack 0
  3459                           
  3460 ;; *************** function ___aodiv *****************
  3461 ;; Defined at:
  3462 ;;		line 9 in file "C:\Developments\Microchip\xc8\v2.05\pic\sources\c99\common\aodiv.c"
  3463 ;; Parameters:    Size  Location     Type
  3464 ;;  dividend        8    0[BANK0 ] long long 
  3465 ;;  divisor         8    8[BANK0 ] long long 
  3466 ;; Auto vars:     Size  Location     Type
  3467 ;;  quotient        8   18[BANK0 ] long long 
  3468 ;;  sign            1   17[BANK0 ] unsigned char 
  3469 ;;  counter         1   16[BANK0 ] unsigned char 
  3470 ;; Return value:  Size  Location     Type
  3471 ;;                  8    0[BANK0 ] long long 
  3472 ;; Registers used:
  3473 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3474 ;; Tracked objects:
  3475 ;;		On entry : 0/0
  3476 ;;		On exit  : 0/0
  3477 ;;		Unchanged: 0/0
  3478 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3479 ;;      Params:         0      16       0       0       0       0       0
  3480 ;;      Locals:         0      10       0       0       0       0       0
  3481 ;;      Temps:          0       0       0       0       0       0       0
  3482 ;;      Totals:         0      26       0       0       0       0       0
  3483 ;;Total ram usage:       26 bytes
  3484 ;; Hardware stack levels used:    1
  3485 ;; Hardware stack levels required when called:   10
  3486 ;; This function calls:
  3487 ;;		Nothing
  3488 ;; This function is called by:
  3489 ;;		_dtoa
  3490 ;; This function uses a non-reentrant model
  3491 ;;
  3492                           
  3493                           	psect	text13
  3494  00149E                     __ptext13:
  3495                           	opt callstack 0
  3496  00149E                     ___aodiv:
  3497                           	opt callstack 0
  3498  00149E  FFFF               	dw	65535	; assembler added errata NOP
  3499                           
  3500                           ; BSR set to: 0
  3501                           ;incstack = 0
  3502  0014A0  0E00               	movlw	0
  3503  0014A2  0100               	movlb	0	; () banked
  3504  0014A4  6F91               	movwf	___aodiv@sign& (0+255),b
  3505                           
  3506                           ; BSR set to: 0
  3507  0014A6  AF8F               	btfss	(___aodiv@divisor+7)& (0+255),7,b
  3508  0014A8  D012               	goto	l2916
  3509                           
  3510                           ; BSR set to: 0
  3511  0014AA  1F8F               	comf	(___aodiv@divisor+7)& (0+255),f,b
  3512  0014AC  1F8E               	comf	(___aodiv@divisor+6)& (0+255),f,b
  3513  0014AE  1F8D               	comf	(___aodiv@divisor+5)& (0+255),f,b
  3514  0014B0  1F8C               	comf	(___aodiv@divisor+4)& (0+255),f,b
  3515  0014B2  1F8B               	comf	(___aodiv@divisor+3)& (0+255),f,b
  3516  0014B4  1F8A               	comf	(___aodiv@divisor+2)& (0+255),f,b
  3517  0014B6  1F89               	comf	(___aodiv@divisor+1)& (0+255),f,b
  3518  0014B8  6D88               	negf	___aodiv@divisor& (0+255),b
  3519  0014BA  0E00               	movlw	0
  3520  0014BC  2389               	addwfc	(___aodiv@divisor+1)& (0+255),f,b
  3521  0014BE  238A               	addwfc	(___aodiv@divisor+2)& (0+255),f,b
  3522  0014C0  238B               	addwfc	(___aodiv@divisor+3)& (0+255),f,b
  3523  0014C2  238C               	addwfc	(___aodiv@divisor+4)& (0+255),f,b
  3524  0014C4  238D               	addwfc	(___aodiv@divisor+5)& (0+255),f,b
  3525  0014C6  238E               	addwfc	(___aodiv@divisor+6)& (0+255),f,b
  3526  0014C8  238F               	addwfc	(___aodiv@divisor+7)& (0+255),f,b
  3527                           
  3528                           ; BSR set to: 0
  3529  0014CA  0E01               	movlw	1
  3530  0014CC  6F91               	movwf	___aodiv@sign& (0+255),b
  3531  0014CE                     l2916:
  3532  0014CE  FFFF               	dw	65535	; assembler added errata NOP
  3533                           
  3534                           ; BSR set to: 0
  3535  0014D0  AF87               	btfss	(___aodiv@dividend+7)& (0+255),7,b
  3536  0014D2  D012               	goto	l2922
  3537                           
  3538                           ; BSR set to: 0
  3539  0014D4  1F87               	comf	(___aodiv@dividend+7)& (0+255),f,b
  3540  0014D6  1F86               	comf	(___aodiv@dividend+6)& (0+255),f,b
  3541  0014D8  1F85               	comf	(___aodiv@dividend+5)& (0+255),f,b
  3542  0014DA  1F84               	comf	(___aodiv@dividend+4)& (0+255),f,b
  3543  0014DC  1F83               	comf	(___aodiv@dividend+3)& (0+255),f,b
  3544  0014DE  1F82               	comf	(___aodiv@dividend+2)& (0+255),f,b
  3545  0014E0  1F81               	comf	(___aodiv@dividend+1)& (0+255),f,b
  3546  0014E2  6D80               	negf	___aodiv@dividend& (0+255),b
  3547  0014E4  0E00               	movlw	0
  3548  0014E6  2381               	addwfc	(___aodiv@dividend+1)& (0+255),f,b
  3549  0014E8  2382               	addwfc	(___aodiv@dividend+2)& (0+255),f,b
  3550  0014EA  2383               	addwfc	(___aodiv@dividend+3)& (0+255),f,b
  3551  0014EC  2384               	addwfc	(___aodiv@dividend+4)& (0+255),f,b
  3552  0014EE  2385               	addwfc	(___aodiv@dividend+5)& (0+255),f,b
  3553  0014F0  2386               	addwfc	(___aodiv@dividend+6)& (0+255),f,b
  3554  0014F2  2387               	addwfc	(___aodiv@dividend+7)& (0+255),f,b
  3555                           
  3556                           ; BSR set to: 0
  3557  0014F4  0E01               	movlw	1
  3558  0014F6  1B91               	xorwf	___aodiv@sign& (0+255),f,b
  3559  0014F8                     l2922:
  3560  0014F8  FFFF               	dw	65535	; assembler added errata NOP
  3561                           
  3562                           ; BSR set to: 0
  3563  0014FA  EE20  F092         	lfsr	2,___aodiv@quotient
  3564  0014FE  0E07               	movlw	7
  3565  001500                     u2111:
  3566  001500  6ADE               	clrf	postinc2,c
  3567  001502  06E8               	decf	wreg,f,c
  3568  001504  E2FD               	bc	u2111
  3569                           
  3570                           ; BSR set to: 0
  3571  001506  5188               	movf	___aodiv@divisor& (0+255),w,b
  3572  001508  1189               	iorwf	(___aodiv@divisor+1)& (0+255),w,b
  3573  00150A  118A               	iorwf	(___aodiv@divisor+2)& (0+255),w,b
  3574  00150C  118B               	iorwf	(___aodiv@divisor+3)& (0+255),w,b
  3575  00150E  118C               	iorwf	(___aodiv@divisor+4)& (0+255),w,b
  3576  001510  118D               	iorwf	(___aodiv@divisor+5)& (0+255),w,b
  3577  001512  118E               	iorwf	(___aodiv@divisor+6)& (0+255),w,b
  3578  001514  118F               	iorwf	(___aodiv@divisor+7)& (0+255),w,b
  3579  001516  B4D8               	btfsc	status,2,c
  3580  001518  D04A               	goto	l2944
  3581                           
  3582                           ; BSR set to: 0
  3583  00151A  0E01               	movlw	1
  3584  00151C  6F90               	movwf	___aodiv@counter& (0+255),b
  3585  00151E  D00B               	goto	l2930
  3586  001520                     l2928:
  3587  001520  FFFF               	dw	65535	; assembler added errata NOP
  3588                           
  3589                           ; BSR set to: 0
  3590  001522  90D8               	bcf	status,0,c
  3591  001524  3788               	rlcf	___aodiv@divisor& (0+255),f,b
  3592  001526  3789               	rlcf	(___aodiv@divisor+1)& (0+255),f,b
  3593  001528  378A               	rlcf	(___aodiv@divisor+2)& (0+255),f,b
  3594  00152A  378B               	rlcf	(___aodiv@divisor+3)& (0+255),f,b
  3595  00152C  378C               	rlcf	(___aodiv@divisor+4)& (0+255),f,b
  3596  00152E  378D               	rlcf	(___aodiv@divisor+5)& (0+255),f,b
  3597  001530  378E               	rlcf	(___aodiv@divisor+6)& (0+255),f,b
  3598  001532  378F               	rlcf	(___aodiv@divisor+7)& (0+255),f,b
  3599  001534  2B90               	incf	___aodiv@counter& (0+255),f,b
  3600  001536                     l2930:
  3601  001536  FFFF               	dw	65535	; assembler added errata NOP
  3602                           
  3603                           ; BSR set to: 0
  3604  001538  AF8F               	btfss	(___aodiv@divisor+7)& (0+255),7,b
  3605  00153A  D7F2               	goto	l2928
  3606  00153C                     u2130:
  3607  00153C  FFFF               	dw	65535	; assembler added errata NOP
  3608                           
  3609                           ; BSR set to: 0
  3610  00153E  90D8               	bcf	status,0,c
  3611  001540  3792               	rlcf	___aodiv@quotient& (0+255),f,b
  3612  001542  3793               	rlcf	(___aodiv@quotient+1)& (0+255),f,b
  3613  001544  3794               	rlcf	(___aodiv@quotient+2)& (0+255),f,b
  3614  001546  3795               	rlcf	(___aodiv@quotient+3)& (0+255),f,b
  3615  001548  3796               	rlcf	(___aodiv@quotient+4)& (0+255),f,b
  3616  00154A  3797               	rlcf	(___aodiv@quotient+5)& (0+255),f,b
  3617  00154C  3798               	rlcf	(___aodiv@quotient+6)& (0+255),f,b
  3618  00154E  3799               	rlcf	(___aodiv@quotient+7)& (0+255),f,b
  3619                           
  3620                           ; BSR set to: 0
  3621  001550  5188               	movf	___aodiv@divisor& (0+255),w,b
  3622  001552  5D80               	subwf	___aodiv@dividend& (0+255),w,b
  3623  001554  5189               	movf	(___aodiv@divisor+1)& (0+255),w,b
  3624  001556  5981               	subwfb	(___aodiv@dividend+1)& (0+255),w,b
  3625  001558  518A               	movf	(___aodiv@divisor+2)& (0+255),w,b
  3626  00155A  5982               	subwfb	(___aodiv@dividend+2)& (0+255),w,b
  3627  00155C  518B               	movf	(___aodiv@divisor+3)& (0+255),w,b
  3628  00155E  5983               	subwfb	(___aodiv@dividend+3)& (0+255),w,b
  3629  001560  518C               	movf	(___aodiv@divisor+4)& (0+255),w,b
  3630  001562  5984               	subwfb	(___aodiv@dividend+4)& (0+255),w,b
  3631  001564  518D               	movf	(___aodiv@divisor+5)& (0+255),w,b
  3632  001566  5985               	subwfb	(___aodiv@dividend+5)& (0+255),w,b
  3633  001568  518E               	movf	(___aodiv@divisor+6)& (0+255),w,b
  3634  00156A  5986               	subwfb	(___aodiv@dividend+6)& (0+255),w,b
  3635  00156C  518F               	movf	(___aodiv@divisor+7)& (0+255),w,b
  3636  00156E  5987               	subwfb	(___aodiv@dividend+7)& (0+255),w,b
  3637  001570  A0D8               	btfss	status,0,c
  3638  001572  D011               	goto	l2940
  3639                           
  3640                           ; BSR set to: 0
  3641  001574  5188               	movf	___aodiv@divisor& (0+255),w,b
  3642  001576  5F80               	subwf	___aodiv@dividend& (0+255),f,b
  3643  001578  5189               	movf	(___aodiv@divisor+1)& (0+255),w,b
  3644  00157A  5B81               	subwfb	(___aodiv@dividend+1)& (0+255),f,b
  3645  00157C  518A               	movf	(___aodiv@divisor+2)& (0+255),w,b
  3646  00157E  5B82               	subwfb	(___aodiv@dividend+2)& (0+255),f,b
  3647  001580  518B               	movf	(___aodiv@divisor+3)& (0+255),w,b
  3648  001582  5B83               	subwfb	(___aodiv@dividend+3)& (0+255),f,b
  3649  001584  518C               	movf	(___aodiv@divisor+4)& (0+255),w,b
  3650  001586  5B84               	subwfb	(___aodiv@dividend+4)& (0+255),f,b
  3651  001588  518D               	movf	(___aodiv@divisor+5)& (0+255),w,b
  3652  00158A  5B85               	subwfb	(___aodiv@dividend+5)& (0+255),f,b
  3653  00158C  518E               	movf	(___aodiv@divisor+6)& (0+255),w,b
  3654  00158E  5B86               	subwfb	(___aodiv@dividend+6)& (0+255),f,b
  3655  001590  518F               	movf	(___aodiv@divisor+7)& (0+255),w,b
  3656  001592  5B87               	subwfb	(___aodiv@dividend+7)& (0+255),f,b
  3657                           
  3658                           ; BSR set to: 0
  3659  001594  8192               	bsf	___aodiv@quotient& (0+255),0,b
  3660  001596                     l2940:
  3661  001596  FFFF               	dw	65535	; assembler added errata NOP
  3662                           
  3663                           ; BSR set to: 0
  3664  001598  90D8               	bcf	status,0,c
  3665  00159A  338F               	rrcf	(___aodiv@divisor+7)& (0+255),f,b
  3666  00159C  338E               	rrcf	(___aodiv@divisor+6)& (0+255),f,b
  3667  00159E  338D               	rrcf	(___aodiv@divisor+5)& (0+255),f,b
  3668  0015A0  338C               	rrcf	(___aodiv@divisor+4)& (0+255),f,b
  3669  0015A2  338B               	rrcf	(___aodiv@divisor+3)& (0+255),f,b
  3670  0015A4  338A               	rrcf	(___aodiv@divisor+2)& (0+255),f,b
  3671  0015A6  3389               	rrcf	(___aodiv@divisor+1)& (0+255),f,b
  3672  0015A8  3388               	rrcf	___aodiv@divisor& (0+255),f,b
  3673                           
  3674                           ; BSR set to: 0
  3675  0015AA  2F90               	decfsz	___aodiv@counter& (0+255),f,b
  3676  0015AC  D7C7               	goto	u2130
  3677  0015AE                     l2944:
  3678  0015AE  FFFF               	dw	65535	; assembler added errata NOP
  3679                           
  3680                           ; BSR set to: 0
  3681  0015B0  5191               	movf	___aodiv@sign& (0+255),w,b
  3682  0015B2  B4D8               	btfsc	status,2,c
  3683  0015B4  D010               	goto	l2948
  3684                           
  3685                           ; BSR set to: 0
  3686  0015B6  1F99               	comf	(___aodiv@quotient+7)& (0+255),f,b
  3687  0015B8  1F98               	comf	(___aodiv@quotient+6)& (0+255),f,b
  3688  0015BA  1F97               	comf	(___aodiv@quotient+5)& (0+255),f,b
  3689  0015BC  1F96               	comf	(___aodiv@quotient+4)& (0+255),f,b
  3690  0015BE  1F95               	comf	(___aodiv@quotient+3)& (0+255),f,b
  3691  0015C0  1F94               	comf	(___aodiv@quotient+2)& (0+255),f,b
  3692  0015C2  1F93               	comf	(___aodiv@quotient+1)& (0+255),f,b
  3693  0015C4  6D92               	negf	___aodiv@quotient& (0+255),b
  3694  0015C6  0E00               	movlw	0
  3695  0015C8  2393               	addwfc	(___aodiv@quotient+1)& (0+255),f,b
  3696  0015CA  2394               	addwfc	(___aodiv@quotient+2)& (0+255),f,b
  3697  0015CC  2395               	addwfc	(___aodiv@quotient+3)& (0+255),f,b
  3698  0015CE  2396               	addwfc	(___aodiv@quotient+4)& (0+255),f,b
  3699  0015D0  2397               	addwfc	(___aodiv@quotient+5)& (0+255),f,b
  3700  0015D2  2398               	addwfc	(___aodiv@quotient+6)& (0+255),f,b
  3701  0015D4  2399               	addwfc	(___aodiv@quotient+7)& (0+255),f,b
  3702  0015D6                     l2948:
  3703  0015D6  FFFF               	dw	65535	; assembler added errata NOP
  3704                           
  3705                           ; BSR set to: 0
  3706  0015D8  C092  F080         	movff	___aodiv@quotient,?___aodiv
  3707  0015DC  C093  F081         	movff	___aodiv@quotient+1,?___aodiv+1
  3708  0015E0  C094  F082         	movff	___aodiv@quotient+2,?___aodiv+2
  3709  0015E4  C095  F083         	movff	___aodiv@quotient+3,?___aodiv+3
  3710  0015E8  C096  F084         	movff	___aodiv@quotient+4,?___aodiv+4
  3711  0015EC  C097  F085         	movff	___aodiv@quotient+5,?___aodiv+5
  3712  0015F0  C098  F086         	movff	___aodiv@quotient+6,?___aodiv+6
  3713  0015F4  C099  F087         	movff	___aodiv@quotient+7,?___aodiv+7
  3714                           
  3715                           ; BSR set to: 0
  3716  0015F8  0012               	return		;funcret
  3717  0015FA  FFFF               	dw	65535	; errata NOP
  3718  0015FC                     __end_of___aodiv:
  3719                           	opt callstack 0
  3720                           
  3721 ;; *************** function _atoi *****************
  3722 ;; Defined at:
  3723 ;;		line 4 in file "C:\Developments\Microchip\xc8\v2.05\pic\sources\c99\common\atoi.c"
  3724 ;; Parameters:    Size  Location     Type
  3725 ;;  s               2    7[BANK0 ] PTR const unsigned char 
  3726 ;;		 -> STR_4(18), STR_3(17), STR_2(17), STR_1(17), 
  3727 ;; Auto vars:     Size  Location     Type
  3728 ;;  n               2   20[BANK0 ] int 
  3729 ;;  neg             2   13[BANK0 ] int 
  3730 ;; Return value:  Size  Location     Type
  3731 ;;                  2    7[BANK0 ] int 
  3732 ;; Registers used:
  3733 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3734 ;; Tracked objects:
  3735 ;;		On entry : 0/0
  3736 ;;		On exit  : 0/0
  3737 ;;		Unchanged: 0/0
  3738 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3739 ;;      Params:         0       2       0       0       0       0       0
  3740 ;;      Locals:         0       9       0       0       0       0       0
  3741 ;;      Temps:          0       4       0       0       0       0       0
  3742 ;;      Totals:         0      15       0       0       0       0       0
  3743 ;;Total ram usage:       15 bytes
  3744 ;; Hardware stack levels used:    1
  3745 ;; Hardware stack levels required when called:   11
  3746 ;; This function calls:
  3747 ;;		___wmul
  3748 ;;		_isdigit
  3749 ;;		_isspace
  3750 ;; This function is called by:
  3751 ;;		_vfpfcnvrt
  3752 ;; This function uses a non-reentrant model
  3753 ;;
  3754                           
  3755                           	psect	text14
  3756  0011CE                     __ptext14:
  3757                           	opt callstack 0
  3758  0011CE                     _atoi:
  3759                           	opt callstack 0
  3760  0011CE  FFFF               	dw	65535	; assembler added errata NOP
  3761                           
  3762                           ; BSR set to: 0
  3763                           ;incstack = 0
  3764  0011D0  0E00               	movlw	0
  3765  0011D2  0100               	movlb	0	; () banked
  3766  0011D4  6F95               	movwf	(atoi@n+1)& (0+255),b
  3767  0011D6  0E00               	movlw	0
  3768  0011D8  6F94               	movwf	atoi@n& (0+255),b
  3769  0011DA  0E00               	movlw	0
  3770  0011DC  6F8E               	movwf	(atoi@neg+1)& (0+255),b
  3771  0011DE  0E00               	movlw	0
  3772  0011E0  6F8D               	movwf	atoi@neg& (0+255),b
  3773  0011E2  D003               	goto	l3196
  3774  0011E4                     l3194:
  3775  0011E4  FFFF               	dw	65535	; assembler added errata NOP
  3776                           
  3777                           ; BSR set to: 0
  3778  0011E6  4B87               	infsnz	atoi@s& (0+255),f,b
  3779  0011E8  2B88               	incf	(atoi@s+1)& (0+255),f,b
  3780  0011EA                     l3196:
  3781  0011EA  FFFF               	dw	65535	; assembler added errata NOP
  3782                           
  3783                           ; BSR set to: 0
  3784  0011EC  0E01               	movlw	1
  3785  0011EE  6F93               	movwf	_atoi$1495& (0+255),b
  3786                           
  3787                           ; BSR set to: 0
  3788  0011F0  C087  FFF6         	movff	atoi@s,tblptrl
  3789  0011F4  C088  FFF7         	movff	atoi@s+1,tblptrh
  3790  0011F8                     	if	0	;tblptru may be non-zero
  3791  0011F8                     	endif
  3792  0011F8                     	if	0	;tblptru may be non-zero
  3793  0011F8                     	endif
  3794  0011F8  0008               	tblrd		*
  3795  0011FA  FFFF               	dw	65535	; errata NOP
  3796  0011FC  50F5               	movf	tablat,w,c
  3797  0011FE  0A20               	xorlw	32
  3798  001200  B4D8               	btfsc	status,2,c
  3799  001202  D019               	goto	l3204
  3800                           
  3801                           ; BSR set to: 0
  3802  001204  0EF7               	movlw	247
  3803  001206  6F89               	movwf	??_atoi& (0+255),b
  3804  001208  0EFF               	movlw	255
  3805  00120A  6F8A               	movwf	(??_atoi+1)& (0+255),b
  3806  00120C  C087  FFF6         	movff	atoi@s,tblptrl
  3807  001210  C088  FFF7         	movff	atoi@s+1,tblptrh
  3808  001214                     	if	0	;tblptru may be non-zero
  3809  001214                     	endif
  3810  001214                     	if	0	;tblptru may be non-zero
  3811  001214                     	endif
  3812  001214  0008               	tblrd		*
  3813  001216  FFFF               	dw	65535	; errata NOP
  3814  001218  50F5               	movf	tablat,w,c
  3815  00121A  6F8B               	movwf	(??_atoi+2)& (0+255),b
  3816  00121C  6B8C               	clrf	(??_atoi+3)& (0+255),b
  3817  00121E  5189               	movf	??_atoi& (0+255),w,b
  3818  001220  278B               	addwf	(??_atoi+2)& (0+255),f,b
  3819  001222  518A               	movf	(??_atoi+1)& (0+255),w,b
  3820  001224  238C               	addwfc	(??_atoi+3)& (0+255),f,b
  3821  001226  518C               	movf	(??_atoi+3)& (0+255),w,b
  3822  001228  E104               	bnz	u2620
  3823  00122A  0E05               	movlw	5
  3824  00122C  5D8B               	subwf	(??_atoi+2)& (0+255),w,b
  3825  00122E  A0D8               	btfss	status,0,c
  3826  001230  D002               	goto	l3204
  3827  001232                     u2620:
  3828                           
  3829                           ; BSR set to: 0
  3830  001232  0E00               	movlw	0
  3831  001234  6F93               	movwf	_atoi$1495& (0+255),b
  3832  001236                     l3204:
  3833  001236  FFFF               	dw	65535	; assembler added errata NOP
  3834                           
  3835                           ; BSR set to: 0
  3836  001238  C093  F08F         	movff	_atoi$1495,_atoi$1494
  3837  00123C  6B90               	clrf	(_atoi$1494+1)& (0+255),b
  3838                           
  3839                           ; BSR set to: 0
  3840  00123E  518F               	movf	_atoi$1494& (0+255),w,b
  3841  001240  1190               	iorwf	(_atoi$1494+1)& (0+255),w,b
  3842  001242  B4D8               	btfsc	status,2,c
  3843  001244  D00A               	goto	l3214
  3844  001246  D7CE               	goto	l3194
  3845  001248                     l3210:
  3846  001248  FFFF               	dw	65535	; assembler added errata NOP
  3847                           
  3848                           ; BSR set to: 0
  3849  00124A  0E00               	movlw	0
  3850  00124C  6F8E               	movwf	(atoi@neg+1)& (0+255),b
  3851  00124E  0E01               	movlw	1
  3852  001250  6F8D               	movwf	atoi@neg& (0+255),b
  3853  001252                     l3212:
  3854  001252  FFFF               	dw	65535	; assembler added errata NOP
  3855                           
  3856                           ; BSR set to: 0
  3857  001254  4B87               	infsnz	atoi@s& (0+255),f,b
  3858  001256  2B88               	incf	(atoi@s+1)& (0+255),f,b
  3859  001258  D033               	goto	l3220
  3860  00125A                     l3214:
  3861  00125A  FFFF               	dw	65535	; assembler added errata NOP
  3862                           
  3863                           ; BSR set to: 0
  3864  00125C  C087  FFF6         	movff	atoi@s,tblptrl
  3865  001260  C088  FFF7         	movff	atoi@s+1,tblptrh
  3866  001264                     	if	0	;tblptru may be non-zero
  3867  001264                     	endif
  3868  001264                     	if	0	;tblptru may be non-zero
  3869  001264                     	endif
  3870  001264  0008               	tblrd		*
  3871  001266  FFFF               	dw	65535	; errata NOP
  3872  001268  50F5               	movf	tablat,w,c
  3873  00126A  6F89               	movwf	??_atoi& (0+255),b
  3874  00126C  6B8A               	clrf	(??_atoi+1)& (0+255),b
  3875                           
  3876                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3877                           ; Switch size 1, requested type "simple"
  3878                           ; Number of cases is 1, Range of values is 0 to 0
  3879                           ; switch strategies available:
  3880                           ; Name         Instructions Cycles
  3881                           ; simple_byte            4     3 (average)
  3882                           ;	Chosen strategy is simple_byte
  3883  00126E  518A               	movf	(??_atoi+1)& (0+255),w,b
  3884  001270  0A00               	xorlw	0	; case 0
  3885  001272  A4D8               	btfss	status,2,c
  3886  001274  D025               	goto	l3220
  3887                           
  3888                           ; BSR set to: 0
  3889                           ; Switch size 1, requested type "simple"
  3890                           ; Number of cases is 2, Range of values is 43 to 45
  3891                           ; switch strategies available:
  3892                           ; Name         Instructions Cycles
  3893                           ; simple_byte            7     4 (average)
  3894                           ;	Chosen strategy is simple_byte
  3895  001276  5189               	movf	??_atoi& (0+255),w,b
  3896  001278  0A2B               	xorlw	43	; case 43
  3897  00127A  B4D8               	btfsc	status,2,c
  3898  00127C  D7EA               	goto	l3212
  3899  00127E  0A06               	xorlw	6	; case 45
  3900  001280  B4D8               	btfsc	status,2,c
  3901  001282  D7E2               	goto	l3210
  3902  001284  D01D               	goto	l3220
  3903  001286                     l3216:
  3904  001286  FFFF               	dw	65535	; assembler added errata NOP
  3905                           
  3906                           ; BSR set to: 0
  3907  001288  C094  F080         	movff	atoi@n,___wmul@multiplier
  3908  00128C  C095  F081         	movff	atoi@n+1,___wmul@multiplier+1
  3909  001290  0E00               	movlw	0
  3910  001292  6F83               	movwf	(___wmul@multiplicand+1)& (0+255),b
  3911  001294  0E0A               	movlw	10
  3912  001296  6F82               	movwf	___wmul@multiplicand& (0+255),b
  3913  001298  EC2D  F014         	call	___wmul	;wreg free
  3914  00129C  C087  FFF6         	movff	atoi@s,tblptrl
  3915  0012A0  C088  FFF7         	movff	atoi@s+1,tblptrh
  3916  0012A4                     	if	0	;tblptru may be non-zero
  3917  0012A4                     	endif
  3918  0012A4                     	if	0	;tblptru may be non-zero
  3919  0012A4                     	endif
  3920  0012A4  0008               	tblrd		*
  3921  0012A6  FFFF               	dw	65535	; errata NOP
  3922  0012A8  50F5               	movf	tablat,w,c
  3923  0012AA  0100               	movlb	0	; () banked
  3924  0012AC  5F80               	subwf	?___wmul& (0+255),f,b
  3925  0012AE  0E00               	movlw	0
  3926  0012B0  5B81               	subwfb	(?___wmul+1)& (0+255),f,b
  3927  0012B2  0E30               	movlw	48
  3928  0012B4  2580               	addwf	?___wmul& (0+255),w,b
  3929  0012B6  6F94               	movwf	atoi@n& (0+255),b
  3930  0012B8  0E00               	movlw	0
  3931  0012BA  2181               	addwfc	(?___wmul+1)& (0+255),w,b
  3932  0012BC  6F95               	movwf	(atoi@n+1)& (0+255),b
  3933  0012BE  D7C9               	goto	l3212
  3934  0012C0                     l3220:
  3935  0012C0  FFFF               	dw	65535	; assembler added errata NOP
  3936                           
  3937                           ; BSR set to: 0
  3938  0012C2  0ED0               	movlw	208
  3939  0012C4  6F89               	movwf	??_atoi& (0+255),b
  3940  0012C6  0EFF               	movlw	255
  3941  0012C8  6F8A               	movwf	(??_atoi+1)& (0+255),b
  3942  0012CA  C087  FFF6         	movff	atoi@s,tblptrl
  3943  0012CE  C088  FFF7         	movff	atoi@s+1,tblptrh
  3944  0012D2                     	if	0	;tblptru may be non-zero
  3945  0012D2                     	endif
  3946  0012D2                     	if	0	;tblptru may be non-zero
  3947  0012D2                     	endif
  3948  0012D2  0008               	tblrd		*
  3949  0012D4  FFFF               	dw	65535	; errata NOP
  3950  0012D6  50F5               	movf	tablat,w,c
  3951  0012D8  6F8B               	movwf	(??_atoi+2)& (0+255),b
  3952  0012DA  6B8C               	clrf	(??_atoi+3)& (0+255),b
  3953  0012DC  5189               	movf	??_atoi& (0+255),w,b
  3954  0012DE  278B               	addwf	(??_atoi+2)& (0+255),f,b
  3955  0012E0  518A               	movf	(??_atoi+1)& (0+255),w,b
  3956  0012E2  238C               	addwfc	(??_atoi+3)& (0+255),f,b
  3957  0012E4  518C               	movf	(??_atoi+3)& (0+255),w,b
  3958  0012E6  E106               	bnz	u2640
  3959  0012E8  0E0A               	movlw	10
  3960  0012EA  5D8B               	subwf	(??_atoi+2)& (0+255),w,b
  3961  0012EC  B0D8               	btfsc	status,0,c
  3962  0012EE  D002               	goto	u2640
  3963  0012F0  0E01               	movlw	1
  3964  0012F2  D002               	goto	u2650
  3965  0012F4                     u2640:
  3966  0012F4  FFFF               	dw	65535	; assembler added errata NOP
  3967  0012F6  0E00               	movlw	0
  3968  0012F8                     u2650:
  3969  0012F8  FFFF               	dw	65535	; assembler added errata NOP
  3970  0012FA  6F91               	movwf	_atoi$1496& (0+255),b
  3971  0012FC  6B92               	clrf	(_atoi$1496+1)& (0+255),b
  3972                           
  3973                           ; BSR set to: 0
  3974  0012FE  5191               	movf	_atoi$1496& (0+255),w,b
  3975  001300  1192               	iorwf	(_atoi$1496+1)& (0+255),w,b
  3976  001302  A4D8               	btfss	status,2,c
  3977  001304  D7C0               	goto	l3216
  3978                           
  3979                           ; BSR set to: 0
  3980  001306  518D               	movf	atoi@neg& (0+255),w,b
  3981  001308  118E               	iorwf	(atoi@neg+1)& (0+255),w,b
  3982  00130A  A4D8               	btfss	status,2,c
  3983  00130C  D00D               	goto	l1319
  3984                           
  3985                           ; BSR set to: 0
  3986  00130E  C094  F089         	movff	atoi@n,??_atoi
  3987  001312  C095  F08A         	movff	atoi@n+1,??_atoi+1
  3988  001316  1F89               	comf	??_atoi& (0+255),f,b
  3989  001318  1F8A               	comf	(??_atoi+1)& (0+255),f,b
  3990  00131A  4B89               	infsnz	??_atoi& (0+255),f,b
  3991  00131C  2B8A               	incf	(??_atoi+1)& (0+255),f,b
  3992  00131E  C089  F087         	movff	??_atoi,?_atoi
  3993  001322  C08A  F088         	movff	??_atoi+1,?_atoi+1
  3994  001326  D005               	goto	l1322
  3995  001328                     l1319:
  3996  001328  FFFF               	dw	65535	; assembler added errata NOP
  3997                           
  3998                           ; BSR set to: 0
  3999  00132A  C094  F087         	movff	atoi@n,?_atoi
  4000  00132E  C095  F088         	movff	atoi@n+1,?_atoi+1
  4001  001332                     l1322:
  4002  001332  FFFF               	dw	65535	; assembler added errata NOP
  4003                           
  4004                           ; BSR set to: 0
  4005  001334  0012               	return		;funcret
  4006  001336  FFFF               	dw	65535	; errata NOP
  4007  001338                     __end_of_atoi:
  4008                           	opt callstack 0
  4009                           
  4010 ;; *************** function _isspace *****************
  4011 ;; Defined at:
  4012 ;;		line 5 in file "C:\Developments\Microchip\xc8\v2.05\pic\sources\c99\common\isspace.c"
  4013 ;; Parameters:    Size  Location     Type
  4014 ;;  c               2    0[BANK0 ] int 
  4015 ;; Auto vars:     Size  Location     Type
  4016 ;;		None
  4017 ;; Return value:  Size  Location     Type
  4018 ;;                  2    0[BANK0 ] int 
  4019 ;; Registers used:
  4020 ;;		wreg, status,2, status,0
  4021 ;; Tracked objects:
  4022 ;;		On entry : 0/0
  4023 ;;		On exit  : 0/0
  4024 ;;		Unchanged: 0/0
  4025 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4026 ;;      Params:         0       2       0       0       0       0       0
  4027 ;;      Locals:         0       1       0       0       0       0       0
  4028 ;;      Temps:          0       4       0       0       0       0       0
  4029 ;;      Totals:         0       7       0       0       0       0       0
  4030 ;;Total ram usage:        7 bytes
  4031 ;; Hardware stack levels used:    1
  4032 ;; Hardware stack levels required when called:   10
  4033 ;; This function calls:
  4034 ;;		Nothing
  4035 ;; This function is called by:
  4036 ;;		_atoi
  4037 ;; This function uses a non-reentrant model
  4038 ;;
  4039                           
  4040                           	psect	text15
  4041  002510                     __ptext15:
  4042                           	opt callstack 0
  4043  002510                     _isspace:
  4044                           	opt callstack 0
  4045  002510  FFFF               	dw	65535	; assembler added errata NOP
  4046                           
  4047                           ; BSR set to: 0
  4048                           ;incstack = 0
  4049  002512  0E01               	movlw	1
  4050  002514  0100               	movlb	0	; () banked
  4051  002516  6F86               	movwf	_isspace$1512& (0+255),b
  4052                           
  4053                           ; BSR set to: 0
  4054  002518  0E20               	movlw	32
  4055  00251A  1980               	xorwf	isspace@c& (0+255),w,b
  4056  00251C  1181               	iorwf	(isspace@c+1)& (0+255),w,b
  4057  00251E  B4D8               	btfsc	status,2,c
  4058  002520  D014               	goto	l2996
  4059                           
  4060                           ; BSR set to: 0
  4061  002522  0EF7               	movlw	247
  4062  002524  6F82               	movwf	??_isspace& (0+255),b
  4063  002526  0EFF               	movlw	255
  4064  002528  6F83               	movwf	(??_isspace+1)& (0+255),b
  4065  00252A  C080  F084         	movff	isspace@c,??_isspace+2
  4066  00252E  C081  F085         	movff	isspace@c+1,??_isspace+3
  4067  002532  5182               	movf	??_isspace& (0+255),w,b
  4068  002534  2784               	addwf	(??_isspace+2)& (0+255),f,b
  4069  002536  5183               	movf	(??_isspace+1)& (0+255),w,b
  4070  002538  2385               	addwfc	(??_isspace+3)& (0+255),f,b
  4071  00253A  5185               	movf	(??_isspace+3)& (0+255),w,b
  4072  00253C  E104               	bnz	u2230
  4073  00253E  0E05               	movlw	5
  4074  002540  5D84               	subwf	(??_isspace+2)& (0+255),w,b
  4075  002542  A0D8               	btfss	status,0,c
  4076  002544  D002               	goto	l2996
  4077  002546                     u2230:
  4078                           
  4079                           ; BSR set to: 0
  4080  002546  0E00               	movlw	0
  4081  002548  6F86               	movwf	_isspace$1512& (0+255),b
  4082  00254A                     l2996:
  4083  00254A  FFFF               	dw	65535	; assembler added errata NOP
  4084                           
  4085                           ; BSR set to: 0
  4086  00254C  C086  F080         	movff	_isspace$1512,?_isspace
  4087  002550  6B81               	clrf	(?_isspace+1)& (0+255),b
  4088                           
  4089                           ; BSR set to: 0
  4090  002552  0012               	return		;funcret
  4091  002554  FFFF               	dw	65535	; errata NOP
  4092  002556                     __end_of_isspace:
  4093                           	opt callstack 0
  4094                           
  4095 ;; *************** function _isdigit *****************
  4096 ;; Defined at:
  4097 ;;		line 5 in file "C:\Developments\Microchip\xc8\v2.05\pic\sources\c99\common\isdigit.c"
  4098 ;; Parameters:    Size  Location     Type
  4099 ;;  c               2    0[BANK0 ] int 
  4100 ;; Auto vars:     Size  Location     Type
  4101 ;;		None
  4102 ;; Return value:  Size  Location     Type
  4103 ;;                  2    0[BANK0 ] int 
  4104 ;; Registers used:
  4105 ;;		wreg, status,2, status,0
  4106 ;; Tracked objects:
  4107 ;;		On entry : 0/0
  4108 ;;		On exit  : 0/0
  4109 ;;		Unchanged: 0/0
  4110 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4111 ;;      Params:         0       2       0       0       0       0       0
  4112 ;;      Locals:         0       0       0       0       0       0       0
  4113 ;;      Temps:          0       4       0       0       0       0       0
  4114 ;;      Totals:         0       6       0       0       0       0       0
  4115 ;;Total ram usage:        6 bytes
  4116 ;; Hardware stack levels used:    1
  4117 ;; Hardware stack levels required when called:   10
  4118 ;; This function calls:
  4119 ;;		Nothing
  4120 ;; This function is called by:
  4121 ;;		_vfpfcnvrt
  4122 ;;		_atoi
  4123 ;; This function uses a non-reentrant model
  4124 ;;
  4125                           
  4126                           	psect	text16
  4127  00271A                     __ptext16:
  4128                           	opt callstack 0
  4129  00271A                     _isdigit:
  4130                           	opt callstack 0
  4131  00271A  FFFF               	dw	65535	; assembler added errata NOP
  4132                           
  4133                           ; BSR set to: 0
  4134                           ;incstack = 0
  4135  00271C  0ED0               	movlw	208
  4136  00271E  0100               	movlb	0	; () banked
  4137  002720  6F82               	movwf	??_isdigit& (0+255),b
  4138  002722  0EFF               	movlw	255
  4139  002724  6F83               	movwf	(??_isdigit+1)& (0+255),b
  4140  002726  C080  F084         	movff	isdigit@c,??_isdigit+2
  4141  00272A  C081  F085         	movff	isdigit@c+1,??_isdigit+3
  4142  00272E  5182               	movf	??_isdigit& (0+255),w,b
  4143  002730  2784               	addwf	(??_isdigit+2)& (0+255),f,b
  4144  002732  5183               	movf	(??_isdigit+1)& (0+255),w,b
  4145  002734  2385               	addwfc	(??_isdigit+3)& (0+255),f,b
  4146  002736  5185               	movf	(??_isdigit+3)& (0+255),w,b
  4147  002738  E106               	bnz	u2070
  4148  00273A  0E0A               	movlw	10
  4149  00273C  5D84               	subwf	(??_isdigit+2)& (0+255),w,b
  4150  00273E  B0D8               	btfsc	status,0,c
  4151  002740  D002               	goto	u2070
  4152  002742  0E01               	movlw	1
  4153  002744  D002               	goto	u2080
  4154  002746                     u2070:
  4155  002746  FFFF               	dw	65535	; assembler added errata NOP
  4156  002748  0E00               	movlw	0
  4157  00274A                     u2080:
  4158  00274A  FFFF               	dw	65535	; assembler added errata NOP
  4159  00274C  6F80               	movwf	?_isdigit& (0+255),b
  4160  00274E  6B81               	clrf	(?_isdigit+1)& (0+255),b
  4161                           
  4162                           ; BSR set to: 0
  4163  002750  0012               	return		;funcret
  4164  002752  FFFF               	dw	65535	; errata NOP
  4165  002754                     __end_of_isdigit:
  4166                           	opt callstack 0
  4167                           
  4168 ;; *************** function _setData *****************
  4169 ;; Defined at:
  4170 ;;		line 46 in file "eeprom.c"
  4171 ;; Parameters:    Size  Location     Type
  4172 ;;  full            1    wreg     unsigned char 
  4173 ;; Auto vars:     Size  Location     Type
  4174 ;;  full            1    4[BANK0 ] unsigned char 
  4175 ;;  data1           1    3[BANK0 ] unsigned char 
  4176 ;;  data0           1    2[BANK0 ] unsigned char 
  4177 ;; Return value:  Size  Location     Type
  4178 ;;                  1    wreg      void 
  4179 ;; Registers used:
  4180 ;;		wreg, status,2, cstack
  4181 ;; Tracked objects:
  4182 ;;		On entry : 0/0
  4183 ;;		On exit  : 0/0
  4184 ;;		Unchanged: 0/0
  4185 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4186 ;;      Params:         0       0       0       0       0       0       0
  4187 ;;      Locals:         0       3       0       0       0       0       0
  4188 ;;      Temps:          0       0       0       0       0       0       0
  4189 ;;      Totals:         0       3       0       0       0       0       0
  4190 ;;Total ram usage:        3 bytes
  4191 ;; Hardware stack levels used:    1
  4192 ;; Hardware stack levels required when called:   11
  4193 ;; This function calls:
  4194 ;;		_writeEEPROM
  4195 ;; This function is called by:
  4196 ;;		_setFrequency
  4197 ;; This function uses a non-reentrant model
  4198 ;;
  4199                           
  4200                           	psect	text17
  4201  001F56                     __ptext17:
  4202                           	opt callstack 0
  4203  001F56                     _setData:
  4204                           	opt callstack 0
  4205  001F56  FFFF               	dw	65535	; assembler added errata NOP
  4206                           
  4207                           ; BSR set to: 0
  4208                           ;incstack = 0
  4209                           ;setData@full stored from wreg
  4210  001F58  0100               	movlb	0	; () banked
  4211  001F5A  6F84               	movwf	setData@full& (0+255),b
  4212                           
  4213                           ;eeprom.c: 47:     unsigned char data0 = frequency & 0x00FF;
  4214  001F5C  C0F6  F082         	movff	_frequency,setData@data0
  4215                           
  4216                           ;eeprom.c: 48:     unsigned char data1 = frequency >> 8;
  4217  001F60  0100               	movlb	0	; () banked
  4218  001F62  51F7               	movf	(_frequency+1)& (0+255),w,b
  4219  001F64  6F83               	movwf	setData@data1& (0+255),b
  4220                           
  4221                           ; BSR set to: 0
  4222                           ;eeprom.c: 49:     if(full)writeEEPROM(data0 ,0);
  4223  001F66  5184               	movf	setData@full& (0+255),w,b
  4224  001F68  B4D8               	btfsc	status,2,c
  4225  001F6A  D005               	goto	l3682
  4226                           
  4227                           ; BSR set to: 0
  4228  001F6C  0E00               	movlw	0
  4229  001F6E  6F80               	movwf	writeEEPROM@address& (0+255),b
  4230  001F70  5182               	movf	setData@data0& (0+255),w,b
  4231  001F72  EC16  F014         	call	_writeEEPROM
  4232  001F76                     l3682:
  4233  001F76  FFFF               	dw	65535	; assembler added errata NOP
  4234                           
  4235                           ;eeprom.c: 50:     if(full)writeEEPROM(data1 ,1);
  4236  001F78  0100               	movlb	0	; () banked
  4237  001F7A  5184               	movf	setData@full& (0+255),w,b
  4238  001F7C  B4D8               	btfsc	status,2,c
  4239  001F7E  D005               	goto	l68
  4240                           
  4241                           ; BSR set to: 0
  4242  001F80  0E01               	movlw	1
  4243  001F82  6F80               	movwf	writeEEPROM@address& (0+255),b
  4244  001F84  5183               	movf	setData@data1& (0+255),w,b
  4245  001F86  EC16  F014         	call	_writeEEPROM
  4246  001F8A                     l68:
  4247  001F8A  FFFF               	dw	65535	; assembler added errata NOP
  4248                           
  4249                           ;eeprom.c: 51:     writeEEPROM(months ,2);
  4250  001F8C  0E02               	movlw	2
  4251  001F8E  0100               	movlb	0	; () banked
  4252  001F90  6F80               	movwf	writeEEPROM@address& (0+255),b
  4253  001F92  51FF               	movf	_months& (0+255),w,b
  4254  001F94  EC16  F014         	call	_writeEEPROM
  4255                           
  4256                           ;eeprom.c: 52:     writeEEPROM(days ,3);
  4257  001F98  0E03               	movlw	3
  4258  001F9A  0100               	movlb	0	; () banked
  4259  001F9C  6F80               	movwf	writeEEPROM@address& (0+255),b
  4260  001F9E  51FE               	movf	_days& (0+255),w,b
  4261  001FA0  EC16  F014         	call	_writeEEPROM
  4262                           
  4263                           ;eeprom.c: 53:     writeEEPROM(hours ,4);
  4264  001FA4  0E04               	movlw	4
  4265  001FA6  0100               	movlb	0	; () banked
  4266  001FA8  6F80               	movwf	writeEEPROM@address& (0+255),b
  4267  001FAA  51FD               	movf	_hours& (0+255),w,b
  4268  001FAC  EC16  F014         	call	_writeEEPROM
  4269                           
  4270                           ;eeprom.c: 54:     writeEEPROM(minutes ,5);
  4271  001FB0  0E05               	movlw	5
  4272  001FB2  0100               	movlb	0	; () banked
  4273  001FB4  6F80               	movwf	writeEEPROM@address& (0+255),b
  4274  001FB6  51FC               	movf	_minutes& (0+255),w,b
  4275  001FB8  EC16  F014         	call	_writeEEPROM
  4276                           
  4277                           ;eeprom.c: 55:     writeEEPROM(functionalStat ,6);
  4278  001FBC  0E06               	movlw	6
  4279  001FBE  0100               	movlb	0	; () banked
  4280  001FC0  6F80               	movwf	writeEEPROM@address& (0+255),b
  4281  001FC2  51F8               	movf	_functionalStat& (0+255),w,b
  4282  001FC4  EC16  F014         	call	_writeEEPROM
  4283  001FC8  0012               	return		;funcret
  4284  001FCA  FFFF               	dw	65535	; errata NOP
  4285  001FCC                     __end_of_setData:
  4286                           	opt callstack 0
  4287                           
  4288 ;; *************** function _writeEEPROM *****************
  4289 ;; Defined at:
  4290 ;;		line 15 in file "eeprom.c"
  4291 ;; Parameters:    Size  Location     Type
  4292 ;;  data            1    wreg     unsigned char 
  4293 ;;  address         1    0[BANK0 ] unsigned char 
  4294 ;; Auto vars:     Size  Location     Type
  4295 ;;  data            1    1[BANK0 ] unsigned char 
  4296 ;; Return value:  Size  Location     Type
  4297 ;;                  1    wreg      void 
  4298 ;; Registers used:
  4299 ;;		wreg, status,2
  4300 ;; Tracked objects:
  4301 ;;		On entry : 0/0
  4302 ;;		On exit  : 0/0
  4303 ;;		Unchanged: 0/0
  4304 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4305 ;;      Params:         0       1       0       0       0       0       0
  4306 ;;      Locals:         0       1       0       0       0       0       0
  4307 ;;      Temps:          0       0       0       0       0       0       0
  4308 ;;      Totals:         0       2       0       0       0       0       0
  4309 ;;Total ram usage:        2 bytes
  4310 ;; Hardware stack levels used:    1
  4311 ;; Hardware stack levels required when called:   10
  4312 ;; This function calls:
  4313 ;;		Nothing
  4314 ;; This function is called by:
  4315 ;;		_setData
  4316 ;; This function uses a non-reentrant model
  4317 ;;
  4318                           
  4319                           	psect	text18
  4320  00282C                     __ptext18:
  4321                           	opt callstack 0
  4322  00282C                     _writeEEPROM:
  4323                           	opt callstack 0
  4324  00282C  FFFF               	dw	65535	; assembler added errata NOP
  4325                           
  4326                           ;incstack = 0
  4327                           ;writeEEPROM@data stored from wreg
  4328  00282E  0100               	movlb	0	; () banked
  4329  002830  6F81               	movwf	writeEEPROM@data& (0+255),b
  4330                           
  4331                           ;eeprom.c: 16:     EEADR = address;
  4332  002832  C080  FFA9         	movff	writeEEPROM@address,4009	;volatile
  4333                           
  4334                           ;eeprom.c: 17:     EEDATA = data;
  4335  002836  C081  FFA8         	movff	writeEEPROM@data,4008	;volatile
  4336                           
  4337                           ;eeprom.c: 19:     EECON1bits.EEPGD = 0;
  4338  00283A  9EA6               	bcf	4006,7,c	;volsfr
  4339                           
  4340                           ;eeprom.c: 20:     EECON1bits.CFGS = 0;
  4341  00283C  9CA6               	bcf	4006,6,c	;volsfr
  4342                           
  4343                           ;eeprom.c: 21:     EECON1bits.WREN = 1;
  4344  00283E  84A6               	bsf	4006,2,c	;volsfr
  4345                           
  4346                           ;eeprom.c: 23:     INTCONbits.GIE = 0;
  4347  002840  9EF2               	bcf	4082,7,c	;volatile
  4348                           
  4349                           ;eeprom.c: 24:     EECON2 = 0x55;
  4350  002842  0E55               	movlw	85
  4351  002844  6EA7               	movwf	4007,c	;volsfr
  4352                           
  4353                           ;eeprom.c: 25:     EECON2 = 0xAA;
  4354  002846  0EAA               	movlw	170
  4355  002848  6EA7               	movwf	4007,c	;volsfr
  4356                           
  4357                           ;eeprom.c: 26:     EECON1bits.WR = 1;
  4358  00284A  82A6               	bsf	4006,1,c	;volsfr
  4359                           
  4360                           ;eeprom.c: 27:     INTCONbits.GIE = 1;
  4361  00284C  8EF2               	bsf	4082,7,c	;volatile
  4362  00284E                     l58:
  4363  00284E  FFFF               	dw	65535	; assembler added errata NOP
  4364  002850  B8A1               	btfsc	4001,4,c	;volatile
  4365  002852  0012               	return		;funcret
  4366  002854  FFFF               	dw	65535	; assembler added errata NOP
  4367  002856  D7FB               	goto	l58
  4368  002858  FFFF               	dw	65535	; errata NOP
  4369  00285A                     __end_of_writeEEPROM:
  4370                           	opt callstack 0
  4371                           
  4372 ;; *************** function _beep *****************
  4373 ;; Defined at:
  4374 ;;		line 134 in file "main.c"
  4375 ;; Parameters:    Size  Location     Type
  4376 ;;  ms              2    6[BANK0 ] int 
  4377 ;; Auto vars:     Size  Location     Type
  4378 ;;		None
  4379 ;; Return value:  Size  Location     Type
  4380 ;;                  1    wreg      void 
  4381 ;; Registers used:
  4382 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  4383 ;; Tracked objects:
  4384 ;;		On entry : 0/0
  4385 ;;		On exit  : 0/0
  4386 ;;		Unchanged: 0/0
  4387 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4388 ;;      Params:         0       2       0       0       0       0       0
  4389 ;;      Locals:         0       0       0       0       0       0       0
  4390 ;;      Temps:          0       0       0       0       0       0       0
  4391 ;;      Totals:         0       2       0       0       0       0       0
  4392 ;;Total ram usage:        2 bytes
  4393 ;; Hardware stack levels used:    1
  4394 ;; Hardware stack levels required when called:   11
  4395 ;; This function calls:
  4396 ;;		___wmul
  4397 ;; This function is called by:
  4398 ;;		_main
  4399 ;;		_setFrequency
  4400 ;; This function uses a non-reentrant model
  4401 ;;
  4402                           
  4403                           	psect	text19
  4404  00229E                     __ptext19:
  4405                           	opt callstack 0
  4406  00229E                     _beep:
  4407                           	opt callstack 0
  4408  00229E  FFFF               	dw	65535	; assembler added errata NOP
  4409                           
  4410                           ;main.c: 135:     ms *= 5;
  4411                           
  4412                           ;incstack = 0
  4413  0022A0  C086  F080         	movff	beep@ms,___wmul@multiplier
  4414  0022A4  C087  F081         	movff	beep@ms+1,___wmul@multiplier+1
  4415  0022A8  0E00               	movlw	0
  4416  0022AA  0100               	movlb	0	; () banked
  4417  0022AC  6F83               	movwf	(___wmul@multiplicand+1)& (0+255),b
  4418  0022AE  0E05               	movlw	5
  4419  0022B0  6F82               	movwf	___wmul@multiplicand& (0+255),b
  4420  0022B2  EC2D  F014         	call	___wmul	;wreg free
  4421  0022B6  C080  F086         	movff	?___wmul,beep@ms
  4422  0022BA  C081  F087         	movff	?___wmul+1,beep@ms+1
  4423  0022BE  0100               	movlb	0	; () banked
  4424  0022C0  D00F               	goto	L3
  4425  0022C2                     l237:
  4426  0022C2  FFFF               	dw	65535	; assembler added errata NOP
  4427                           
  4428                           ; BSR set to: 0
  4429                           ;main.c: 137:         PORTDbits.RD0 = 1;
  4430  0022C4  8083               	bsf	3971,0,c	;volatile
  4431                           
  4432                           ; BSR set to: 0
  4433                           ;main.c: 138:         _delay((unsigned long)((100)*(12000000/4000000.0)));
  4434  0022C6  0E4B               	movlw	75
  4435  0022C8                     u3767:
  4436  0022C8  FFFF               	dw	65535	; errata NOP
  4437  0022CA  2EE8               	decfsz	wreg,f,c
  4438  0022CC  D7FD               	bra	u3767
  4439                           
  4440                           ;main.c: 139:         PORTDbits.RD0 = 0;
  4441  0022CE  9083               	bcf	3971,0,c	;volatile
  4442                           
  4443                           ;main.c: 140:         _delay((unsigned long)((100)*(12000000/4000000.0)));
  4444  0022D0  0E4B               	movlw	75
  4445  0022D2                     u3777:
  4446  0022D2  FFFF               	dw	65535	; errata NOP
  4447  0022D4  2EE8               	decfsz	wreg,f,c
  4448  0022D6  D7FD               	bra	u3777
  4449                           
  4450                           ;main.c: 141:     }
  4451  0022D8  0100               	movlb	0	; () banked
  4452  0022DA  0786               	decf	beep@ms& (0+255),f,b
  4453  0022DC  A0D8               	btfss	status,0,c
  4454  0022DE  0787               	decf	(beep@ms+1)& (0+255),f,b
  4455  0022E0                     L3:
  4456  0022E0  FFFF               	dw	65535	; assembler added errata NOP
  4457  0022E2  BF87               	btfsc	(beep@ms+1)& (0+255),7,b
  4458  0022E4  D005               	goto	u3250
  4459  0022E6  5187               	movf	(beep@ms+1)& (0+255),w,b
  4460  0022E8  E1EC               	bnz	l237
  4461  0022EA  0586               	decf	beep@ms& (0+255),w,b
  4462  0022EC  B0D8               	btfsc	status,0,c
  4463  0022EE  D7E9               	goto	l237
  4464  0022F0                     u3250:
  4465  0022F0  FFFF               	dw	65535	; assembler added errata NOP
  4466                           
  4467                           ; BSR set to: 0
  4468  0022F2  0012               	return		;funcret
  4469  0022F4  FFFF               	dw	65535	; errata NOP
  4470  0022F6                     __end_of_beep:
  4471                           	opt callstack 0
  4472                           
  4473 ;; *************** function ___wmul *****************
  4474 ;; Defined at:
  4475 ;;		line 15 in file "C:\Developments\Microchip\xc8\v2.05\pic\sources\c99\common\Umul16.c"
  4476 ;; Parameters:    Size  Location     Type
  4477 ;;  multiplier      2    0[BANK0 ] unsigned int 
  4478 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  4479 ;; Auto vars:     Size  Location     Type
  4480 ;;  product         2    4[BANK0 ] unsigned int 
  4481 ;; Return value:  Size  Location     Type
  4482 ;;                  2    0[BANK0 ] unsigned int 
  4483 ;; Registers used:
  4484 ;;		wreg, status,2, status,0, prodl, prodh
  4485 ;; Tracked objects:
  4486 ;;		On entry : 0/0
  4487 ;;		On exit  : 0/0
  4488 ;;		Unchanged: 0/0
  4489 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4490 ;;      Params:         0       4       0       0       0       0       0
  4491 ;;      Locals:         0       2       0       0       0       0       0
  4492 ;;      Temps:          0       0       0       0       0       0       0
  4493 ;;      Totals:         0       6       0       0       0       0       0
  4494 ;;Total ram usage:        6 bytes
  4495 ;; Hardware stack levels used:    1
  4496 ;; Hardware stack levels required when called:   10
  4497 ;; This function calls:
  4498 ;;		Nothing
  4499 ;; This function is called by:
  4500 ;;		_beep
  4501 ;;		_atoi
  4502 ;; This function uses a non-reentrant model
  4503 ;;
  4504                           
  4505                           	psect	text20
  4506  00285A                     __ptext20:
  4507                           	opt callstack 0
  4508  00285A                     ___wmul:
  4509                           	opt callstack 0
  4510  00285A  FFFF               	dw	65535	; assembler added errata NOP
  4511                           
  4512                           ; BSR set to: 0
  4513                           ;incstack = 0
  4514  00285C  0100               	movlb	0	; () banked
  4515  00285E  5180               	movf	___wmul@multiplier& (0+255),w,b
  4516  002860  0382               	mulwf	___wmul@multiplicand& (0+255),b
  4517  002862  CFF3 F084          	movff	prodl,___wmul@product
  4518  002866  CFF4 F085          	movff	prodh,___wmul@product+1
  4519  00286A  5180               	movf	___wmul@multiplier& (0+255),w,b
  4520  00286C  0383               	mulwf	(___wmul@multiplicand+1)& (0+255),b
  4521  00286E  50F3               	movf	prodl,w,c
  4522  002870  2785               	addwf	(___wmul@product+1)& (0+255),f,b
  4523  002872  5181               	movf	(___wmul@multiplier+1)& (0+255),w,b
  4524  002874  0382               	mulwf	___wmul@multiplicand& (0+255),b
  4525  002876  50F3               	movf	prodl,w,c
  4526  002878  2785               	addwf	(___wmul@product+1)& (0+255),f,b
  4527                           
  4528                           ; BSR set to: 0
  4529  00287A  C084  F080         	movff	___wmul@product,?___wmul
  4530  00287E  C085  F081         	movff	___wmul@product+1,?___wmul+1
  4531                           
  4532                           ; BSR set to: 0
  4533  002882  0012               	return		;funcret
  4534  002884  FFFF               	dw	65535	; errata NOP
  4535  002886                     __end_of___wmul:
  4536                           	opt callstack 0
  4537                           
  4538 ;; *************** function _getData *****************
  4539 ;; Defined at:
  4540 ;;		line 33 in file "eeprom.c"
  4541 ;; Parameters:    Size  Location     Type
  4542 ;;		None
  4543 ;; Auto vars:     Size  Location     Type
  4544 ;;  aux1            1    4[BANK0 ] unsigned char 
  4545 ;;  aux0            1    3[BANK0 ] unsigned char 
  4546 ;; Return value:  Size  Location     Type
  4547 ;;                  1    wreg      void 
  4548 ;; Registers used:
  4549 ;;		wreg, status,2, status,0, cstack
  4550 ;; Tracked objects:
  4551 ;;		On entry : 0/0
  4552 ;;		On exit  : 0/0
  4553 ;;		Unchanged: 0/0
  4554 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4555 ;;      Params:         0       0       0       0       0       0       0
  4556 ;;      Locals:         0       2       0       0       0       0       0
  4557 ;;      Temps:          0       2       0       0       0       0       0
  4558 ;;      Totals:         0       4       0       0       0       0       0
  4559 ;;Total ram usage:        4 bytes
  4560 ;; Hardware stack levels used:    1
  4561 ;; Hardware stack levels required when called:   11
  4562 ;; This function calls:
  4563 ;;		_readEEPROM
  4564 ;; This function is called by:
  4565 ;;		_main
  4566 ;; This function uses a non-reentrant model
  4567 ;;
  4568                           
  4569                           	psect	text21
  4570  0020AC                     __ptext21:
  4571                           	opt callstack 0
  4572  0020AC                     _getData:
  4573                           	opt callstack 0
  4574  0020AC  FFFF               	dw	65535	; assembler added errata NOP
  4575                           
  4576                           ;eeprom.c: 34:     unsigned char aux0 = readEEPROM(0);
  4577                           
  4578                           ; BSR set to: 0
  4579                           ;incstack = 0
  4580  0020AE  0E00               	movlw	0
  4581  0020B0  ECA6  F014         	call	_readEEPROM
  4582  0020B4  0100               	movlb	0	; () banked
  4583  0020B6  6F83               	movwf	getData@aux0& (0+255),b
  4584                           
  4585                           ;eeprom.c: 35:     unsigned char aux1 = readEEPROM(1);
  4586  0020B8  0E01               	movlw	1
  4587  0020BA  ECA6  F014         	call	_readEEPROM
  4588  0020BE  0100               	movlb	0	; () banked
  4589  0020C0  6F84               	movwf	getData@aux1& (0+255),b
  4590                           
  4591                           ; BSR set to: 0
  4592                           ;eeprom.c: 36:     frequency = 0;
  4593  0020C2  0E00               	movlw	0
  4594  0020C4  6FF7               	movwf	(_frequency+1)& (0+255),b
  4595  0020C6  0E00               	movlw	0
  4596  0020C8  6FF6               	movwf	_frequency& (0+255),b
  4597                           
  4598                           ; BSR set to: 0
  4599                           ;eeprom.c: 37:     frequency = (aux1 << 8) | aux0;
  4600  0020CA  5183               	movf	getData@aux0& (0+255),w,b
  4601  0020CC  C084  F081         	movff	getData@aux1,??_getData
  4602  0020D0  6B82               	clrf	(??_getData+1)& (0+255),b
  4603  0020D2  C081  F082         	movff	??_getData,??_getData+1
  4604  0020D6  6B81               	clrf	??_getData& (0+255),b
  4605  0020D8  1181               	iorwf	??_getData& (0+255),w,b
  4606  0020DA  6FF6               	movwf	_frequency& (0+255),b
  4607  0020DC  5182               	movf	(??_getData+1)& (0+255),w,b
  4608  0020DE  6FF7               	movwf	(_frequency+1)& (0+255),b
  4609                           
  4610                           ; BSR set to: 0
  4611                           ;eeprom.c: 38:     months = readEEPROM(2);
  4612  0020E0  0E02               	movlw	2
  4613  0020E2  ECA6  F014         	call	_readEEPROM
  4614  0020E6  0100               	movlb	0	; () banked
  4615  0020E8  6FFF               	movwf	_months& (0+255),b
  4616                           
  4617                           ; BSR set to: 0
  4618                           ;eeprom.c: 39:     days = readEEPROM(3);
  4619  0020EA  0E03               	movlw	3
  4620  0020EC  ECA6  F014         	call	_readEEPROM
  4621  0020F0  0100               	movlb	0	; () banked
  4622  0020F2  6FFE               	movwf	_days& (0+255),b
  4623                           
  4624                           ; BSR set to: 0
  4625                           ;eeprom.c: 40:     hours = readEEPROM(4);
  4626  0020F4  0E04               	movlw	4
  4627  0020F6  ECA6  F014         	call	_readEEPROM
  4628  0020FA  0100               	movlb	0	; () banked
  4629  0020FC  6FFD               	movwf	_hours& (0+255),b
  4630                           
  4631                           ; BSR set to: 0
  4632                           ;eeprom.c: 41:     minutes = readEEPROM(5);
  4633  0020FE  0E05               	movlw	5
  4634  002100  ECA6  F014         	call	_readEEPROM
  4635  002104  0100               	movlb	0	; () banked
  4636  002106  6FFC               	movwf	_minutes& (0+255),b
  4637                           
  4638                           ; BSR set to: 0
  4639                           ;eeprom.c: 42:     functionalStat = readEEPROM(6);
  4640  002108  0E06               	movlw	6
  4641  00210A  ECA6  F014         	call	_readEEPROM
  4642  00210E  0100               	movlb	0	; () banked
  4643  002110  6FF8               	movwf	_functionalStat& (0+255),b
  4644                           
  4645                           ; BSR set to: 0
  4646  002112  0012               	return		;funcret
  4647  002114  FFFF               	dw	65535	; errata NOP
  4648  002116                     __end_of_getData:
  4649                           	opt callstack 0
  4650                           
  4651 ;; *************** function _readEEPROM *****************
  4652 ;; Defined at:
  4653 ;;		line 7 in file "eeprom.c"
  4654 ;; Parameters:    Size  Location     Type
  4655 ;;  address         1    wreg     unsigned char 
  4656 ;; Auto vars:     Size  Location     Type
  4657 ;;  address         1    0[BANK0 ] unsigned char 
  4658 ;; Return value:  Size  Location     Type
  4659 ;;                  1    wreg      unsigned char 
  4660 ;; Registers used:
  4661 ;;		wreg, status,2
  4662 ;; Tracked objects:
  4663 ;;		On entry : 0/0
  4664 ;;		On exit  : 0/0
  4665 ;;		Unchanged: 0/0
  4666 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4667 ;;      Params:         0       0       0       0       0       0       0
  4668 ;;      Locals:         0       1       0       0       0       0       0
  4669 ;;      Temps:          0       0       0       0       0       0       0
  4670 ;;      Totals:         0       1       0       0       0       0       0
  4671 ;;Total ram usage:        1 bytes
  4672 ;; Hardware stack levels used:    1
  4673 ;; Hardware stack levels required when called:   10
  4674 ;; This function calls:
  4675 ;;		Nothing
  4676 ;; This function is called by:
  4677 ;;		_getData
  4678 ;; This function uses a non-reentrant model
  4679 ;;
  4680                           
  4681                           	psect	text22
  4682  00294C                     __ptext22:
  4683                           	opt callstack 0
  4684  00294C                     _readEEPROM:
  4685                           	opt callstack 0
  4686  00294C  FFFF               	dw	65535	; assembler added errata NOP
  4687                           
  4688                           ; BSR set to: 0
  4689                           ;incstack = 0
  4690                           ;readEEPROM@address stored from wreg
  4691  00294E  0100               	movlb	0	; () banked
  4692  002950  6F80               	movwf	readEEPROM@address& (0+255),b
  4693                           
  4694                           ;eeprom.c: 8:     EEADR = address;
  4695  002952  C080  FFA9         	movff	readEEPROM@address,4009	;volatile
  4696                           
  4697                           ;eeprom.c: 9:     EECON1bits.EEPGD = 0;
  4698  002956  9EA6               	bcf	4006,7,c	;volsfr
  4699                           
  4700                           ;eeprom.c: 10:     EECON1bits.CFGS = 0;
  4701  002958  9CA6               	bcf	4006,6,c	;volsfr
  4702                           
  4703                           ;eeprom.c: 11:     EECON1bits.RD = 1;
  4704  00295A  80A6               	bsf	4006,0,c	;volsfr
  4705                           
  4706                           ;eeprom.c: 12:     return EEDATA;
  4707  00295C  50A8               	movf	4008,w,c	;volatile
  4708  00295E  0012               	return		;funcret
  4709  002960  FFFF               	dw	65535	; errata NOP
  4710  002962                     __end_of_readEEPROM:
  4711                           	opt callstack 0
  4712                           
  4713 ;; *************** function _config *****************
  4714 ;; Defined at:
  4715 ;;		line 32 in file "main.c"
  4716 ;; Parameters:    Size  Location     Type
  4717 ;;		None
  4718 ;; Auto vars:     Size  Location     Type
  4719 ;;		None
  4720 ;; Return value:  Size  Location     Type
  4721 ;;                  1    wreg      void 
  4722 ;; Registers used:
  4723 ;;		wreg, status,2, status,0, cstack
  4724 ;; Tracked objects:
  4725 ;;		On entry : 0/0
  4726 ;;		On exit  : 0/0
  4727 ;;		Unchanged: 0/0
  4728 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4729 ;;      Params:         0       0       0       0       0       0       0
  4730 ;;      Locals:         0       0       0       0       0       0       0
  4731 ;;      Temps:          0       0       0       0       0       0       0
  4732 ;;      Totals:         0       0       0       0       0       0       0
  4733 ;;Total ram usage:        0 bytes
  4734 ;; Hardware stack levels used:    1
  4735 ;; Hardware stack levels required when called:   14
  4736 ;; This function calls:
  4737 ;;		_initLCD
  4738 ;; This function is called by:
  4739 ;;		_main
  4740 ;; This function uses a non-reentrant model
  4741 ;;
  4742                           
  4743                           	psect	text23
  4744  0026A0                     __ptext23:
  4745                           	opt callstack 0
  4746  0026A0                     _config:
  4747                           	opt callstack 0
  4748  0026A0  FFFF               	dw	65535	; assembler added errata NOP
  4749                           
  4750                           ;main.c: 34:     OSCCON = 0b00000000;
  4751                           
  4752                           ;incstack = 0
  4753  0026A2  0E00               	movlw	0
  4754  0026A4  6ED3               	movwf	4051,c	;volatile
  4755                           
  4756                           ;main.c: 36:     INTCON = 0b01100000;
  4757  0026A6  0E60               	movlw	96
  4758  0026A8  6EF2               	movwf	4082,c	;volatile
  4759                           
  4760                           ;main.c: 37:     PIE1 = 0b00000011;
  4761  0026AA  0E03               	movlw	3
  4762  0026AC  6E9D               	movwf	3997,c	;volatile
  4763                           
  4764                           ;main.c: 39:     TRISA = 0b00011111;
  4765  0026AE  0E1F               	movlw	31
  4766  0026B0  6E92               	movwf	3986,c	;volatile
  4767                           
  4768                           ;main.c: 40:     TRISB = 0b00000000;
  4769  0026B2  0E00               	movlw	0
  4770  0026B4  6E93               	movwf	3987,c	;volatile
  4771                           
  4772                           ;main.c: 41:     TRISC = 0b11111111;
  4773  0026B6  6894               	setf	3988,c	;volatile
  4774                           
  4775                           ;main.c: 42:     TRISD = 0b00000000;
  4776  0026B8  0E00               	movlw	0
  4777  0026BA  6E95               	movwf	3989,c	;volatile
  4778                           
  4779                           ;main.c: 43:     TRISE = 0b00001000;
  4780  0026BC  0E08               	movlw	8
  4781  0026BE  6E96               	movwf	3990,c	;volatile
  4782                           
  4783                           ;main.c: 45:     T1CON = 0b10110001;
  4784  0026C0  0EB1               	movlw	177
  4785  0026C2  6ECD               	movwf	4045,c	;volatile
  4786                           
  4787                           ;main.c: 47:     T0CON = 0b10000000;
  4788  0026C4  0E80               	movlw	128
  4789  0026C6  6ED5               	movwf	4053,c	;volatile
  4790                           
  4791                           ;main.c: 49:     ADCON0 = 0b11000001;
  4792  0026C8  0EC1               	movlw	193
  4793  0026CA  6EC2               	movwf	4034,c	;volatile
  4794                           
  4795                           ;main.c: 50:     ADCON1 = 0b01001110;
  4796  0026CC  0E4E               	movlw	78
  4797  0026CE  6EC1               	movwf	4033,c	;volatile
  4798                           
  4799                           ;main.c: 52:     initLCD();
  4800  0026D0  ECF7  F011         	call	_initLCD	;wreg free
  4801                           
  4802                           ;main.c: 54:     ADCON0bits.GO = 1;
  4803  0026D4  84C2               	bsf	4034,2,c	;volatile
  4804                           
  4805                           ;main.c: 55:     T1CONbits.TMR1ON = 1;
  4806  0026D6  80CD               	bsf	4045,0,c	;volatile
  4807                           
  4808                           ;main.c: 56:     INTCONbits.GIE = 1;
  4809  0026D8  8EF2               	bsf	4082,7,c	;volatile
  4810  0026DA  0012               	return		;funcret
  4811  0026DC  FFFF               	dw	65535	; errata NOP
  4812  0026DE                     __end_of_config:
  4813                           	opt callstack 0
  4814                           
  4815 ;; *************** function _initLCD *****************
  4816 ;; Defined at:
  4817 ;;		line 5 in file "lcd.c"
  4818 ;; Parameters:    Size  Location     Type
  4819 ;;		None
  4820 ;; Auto vars:     Size  Location     Type
  4821 ;;		None
  4822 ;; Return value:  Size  Location     Type
  4823 ;;                  1    wreg      void 
  4824 ;; Registers used:
  4825 ;;		wreg, status,2, status,0, cstack
  4826 ;; Tracked objects:
  4827 ;;		On entry : 0/0
  4828 ;;		On exit  : 0/0
  4829 ;;		Unchanged: 0/0
  4830 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4831 ;;      Params:         0       0       0       0       0       0       0
  4832 ;;      Locals:         0       0       0       0       0       0       0
  4833 ;;      Temps:          0       2       0       0       0       0       0
  4834 ;;      Totals:         0       2       0       0       0       0       0
  4835 ;;Total ram usage:        2 bytes
  4836 ;; Hardware stack levels used:    1
  4837 ;; Hardware stack levels required when called:   13
  4838 ;; This function calls:
  4839 ;;		_OpenXLCD
  4840 ;;		_SendCMDLCD
  4841 ;; This function is called by:
  4842 ;;		_config
  4843 ;; This function uses a non-reentrant model
  4844 ;;
  4845                           
  4846                           	psect	text24
  4847  0023EE                     __ptext24:
  4848                           	opt callstack 0
  4849  0023EE                     _initLCD:
  4850                           	opt callstack 0
  4851  0023EE  FFFF               	dw	65535	; assembler added errata NOP
  4852                           
  4853                           ;lcd.c: 6:     OpenXLCD(0b00101100 & 0b00111000);
  4854                           
  4855                           ;incstack = 0
  4856  0023F0  0E28               	movlw	40
  4857  0023F2  ECE5  F00C         	call	_OpenXLCD
  4858                           
  4859                           ;lcd.c: 7:     _delay((unsigned long)((100)*(12000000/4000.0)));
  4860  0023F6  0E02               	movlw	2
  4861  0023F8  0100               	movlb	0	; () banked
  4862  0023FA  6F84               	movwf	(??_initLCD+1)& (0+255),b
  4863  0023FC  0E25               	movlw	37
  4864  0023FE  6F83               	movwf	??_initLCD& (0+255),b
  4865  002400  0E63               	movlw	99
  4866  002402                     u3787:
  4867  002402  FFFF               	dw	65535	; errata NOP
  4868  002404  2EE8               	decfsz	wreg,f,c
  4869  002406  D7FD               	bra	u3787
  4870  002408  2F83               	decfsz	??_initLCD& (0+255),f,b
  4871  00240A  D7FB               	bra	u3787
  4872  00240C  2F84               	decfsz	(??_initLCD+1)& (0+255),f,b
  4873  00240E  D7F9               	bra	u3787
  4874  002410  F000               	nop	
  4875                           
  4876                           ;lcd.c: 8:     SendCMDLCD(0b00001101);
  4877  002412  0E0D               	movlw	13
  4878  002414  EC6E  F014         	call	_SendCMDLCD
  4879                           
  4880                           ;lcd.c: 9:     SendCMDLCD(0b00000110);
  4881  002418  0E06               	movlw	6
  4882  00241A  EC6E  F014         	call	_SendCMDLCD
  4883                           
  4884                           ;lcd.c: 10:     _delay((unsigned long)((50)*(12000000/4000.0)));
  4885  00241E  0E93               	movlw	147
  4886  002420  0100               	movlb	0	; () banked
  4887  002422  6F83               	movwf	??_initLCD& (0+255),b
  4888  002424  0E31               	movlw	49
  4889  002426                     u3797:
  4890  002426  FFFF               	dw	65535	; errata NOP
  4891  002428  2EE8               	decfsz	wreg,f,c
  4892  00242A  D7FD               	bra	u3797
  4893  00242C  2F83               	decfsz	??_initLCD& (0+255),f,b
  4894  00242E  D7FB               	bra	u3797
  4895  002430  D000               	nop2	
  4896  002432  F000               	nop	
  4897  002434  0012               	return		;funcret
  4898  002436  FFFF               	dw	65535	; errata NOP
  4899  002438                     __end_of_initLCD:
  4900                           	opt callstack 0
  4901                           
  4902 ;; *************** function _SendCMDLCD *****************
  4903 ;; Defined at:
  4904 ;;		line 25 in file "lcd.c"
  4905 ;; Parameters:    Size  Location     Type
  4906 ;;  CMD             1    wreg     unsigned char 
  4907 ;; Auto vars:     Size  Location     Type
  4908 ;;  CMD             1    1[BANK0 ] unsigned char 
  4909 ;; Return value:  Size  Location     Type
  4910 ;;                  1    wreg      void 
  4911 ;; Registers used:
  4912 ;;		wreg, status,2, status,0, cstack
  4913 ;; Tracked objects:
  4914 ;;		On entry : 0/0
  4915 ;;		On exit  : 0/0
  4916 ;;		Unchanged: 0/0
  4917 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4918 ;;      Params:         0       0       0       0       0       0       0
  4919 ;;      Locals:         0       1       0       0       0       0       0
  4920 ;;      Temps:          0       0       0       0       0       0       0
  4921 ;;      Totals:         0       1       0       0       0       0       0
  4922 ;;Total ram usage:        1 bytes
  4923 ;; Hardware stack levels used:    1
  4924 ;; Hardware stack levels required when called:   12
  4925 ;; This function calls:
  4926 ;;		_BusyXLCD
  4927 ;;		_WriteCmdXLCD
  4928 ;; This function is called by:
  4929 ;;		_initLCD
  4930 ;; This function uses a non-reentrant model
  4931 ;;
  4932                           
  4933                           	psect	text25
  4934  0028DC                     __ptext25:
  4935                           	opt callstack 0
  4936  0028DC                     _SendCMDLCD:
  4937                           	opt callstack 0
  4938  0028DC  FFFF               	dw	65535	; assembler added errata NOP
  4939                           
  4940                           ;incstack = 0
  4941                           ;SendCMDLCD@CMD stored from wreg
  4942  0028DE  0100               	movlb	0	; () banked
  4943  0028E0  6F81               	movwf	SendCMDLCD@CMD& (0+255),b
  4944  0028E2  FFFF               	dw	65535	; assembler added errata NOP
  4945                           
  4946                           ;lcd.c: 26:     while(BusyXLCD())continue;
  4947  0028E4  EC7D  F014         	call	_BusyXLCD	;wreg free
  4948  0028E8  0900               	iorlw	0
  4949  0028EA  A4D8               	btfss	status,2,c
  4950  0028EC  D7FA               	goto	l3616
  4951                           
  4952                           ;lcd.c: 27:     WriteCmdXLCD(CMD);
  4953  0028EE  0100               	movlb	0	; () banked
  4954  0028F0  5181               	movf	SendCMDLCD@CMD& (0+255),w,b
  4955  0028F2  EC41  F012         	call	_WriteCmdXLCD
  4956  0028F6  0012               	return		;funcret
  4957  0028F8  FFFF               	dw	65535	; errata NOP
  4958  0028FA                     __end_of_SendCMDLCD:
  4959                           	opt callstack 0
  4960                           
  4961 ;; *************** function _OpenXLCD *****************
  4962 ;; Defined at:
  4963 ;;		line 40 in file "lcd_pic16.c"
  4964 ;; Parameters:    Size  Location     Type
  4965 ;;  lcdtype         1    wreg     unsigned char 
  4966 ;; Auto vars:     Size  Location     Type
  4967 ;;  lcdtype         1    2[BANK0 ] unsigned char 
  4968 ;; Return value:  Size  Location     Type
  4969 ;;                  1    wreg      void 
  4970 ;; Registers used:
  4971 ;;		wreg, status,2, status,0, cstack
  4972 ;; Tracked objects:
  4973 ;;		On entry : 0/0
  4974 ;;		On exit  : 0/0
  4975 ;;		Unchanged: 0/0
  4976 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4977 ;;      Params:         0       0       0       0       0       0       0
  4978 ;;      Locals:         0       1       0       0       0       0       0
  4979 ;;      Temps:          0       1       0       0       0       0       0
  4980 ;;      Totals:         0       2       0       0       0       0       0
  4981 ;;Total ram usage:        2 bytes
  4982 ;; Hardware stack levels used:    1
  4983 ;; Hardware stack levels required when called:   12
  4984 ;; This function calls:
  4985 ;;		_BusyXLCD
  4986 ;;		_DelayPORXLCD
  4987 ;;		_SetDDRamAddr
  4988 ;;		_WriteCmdXLCD
  4989 ;; This function is called by:
  4990 ;;		_initLCD
  4991 ;; This function uses a non-reentrant model
  4992 ;;
  4993                           
  4994                           	psect	text26
  4995  0019CA                     __ptext26:
  4996                           	opt callstack 0
  4997  0019CA                     _OpenXLCD:
  4998                           	opt callstack 0
  4999  0019CA  FFFF               	dw	65535	; assembler added errata NOP
  5000                           
  5001                           ;incstack = 0
  5002                           ;OpenXLCD@lcdtype stored from wreg
  5003  0019CC  0100               	movlb	0	; () banked
  5004  0019CE  6F82               	movwf	OpenXLCD@lcdtype& (0+255),b
  5005                           
  5006                           ;lcd_pic16.c: 40: void OpenXLCD(unsigned char lcdtype);lcd_pic16.c: 41: {;lcd_pic16.c: 4
      +                          7:         PORTD &= 0x0f;
  5007  0019D0  0E0F               	movlw	15
  5008  0019D2  1683               	andwf	3971,f,c	;volatile
  5009                           
  5010                           ;lcd_pic16.c: 48:         TRISD &= 0x0F;
  5011  0019D4  0E0F               	movlw	15
  5012  0019D6  1695               	andwf	3989,f,c	;volatile
  5013                           
  5014                           ;lcd_pic16.c: 54:         TRISDbits.TRISD2 = 0;
  5015  0019D8  9495               	bcf	3989,2,c	;volatile
  5016                           
  5017                           ;lcd_pic16.c: 55:         TRISDbits.TRISD3 = 0;
  5018  0019DA  9695               	bcf	3989,3,c	;volatile
  5019                           
  5020                           ;lcd_pic16.c: 56:         TRISDbits.TRISD1 = 0;
  5021  0019DC  9295               	bcf	3989,1,c	;volatile
  5022                           
  5023                           ;lcd_pic16.c: 57:         PORTDbits.RD2 = 0;
  5024  0019DE  9483               	bcf	3971,2,c	;volatile
  5025                           
  5026                           ;lcd_pic16.c: 58:         PORTDbits.RD3 = 0;
  5027  0019E0  9683               	bcf	3971,3,c	;volatile
  5028                           
  5029                           ;lcd_pic16.c: 59:         PORTDbits.RD1 = 0;
  5030  0019E2  9283               	bcf	3971,1,c	;volatile
  5031                           
  5032                           ;lcd_pic16.c: 62:         DelayPORXLCD();
  5033  0019E4  EC8C  F014         	call	_DelayPORXLCD	;wreg free
  5034                           
  5035                           ;lcd_pic16.c: 64:        WriteCmdXLCD(0x30);
  5036  0019E8  0E30               	movlw	48
  5037  0019EA  EC41  F012         	call	_WriteCmdXLCD
  5038                           
  5039                           ;lcd_pic16.c: 65:          _delay((unsigned long)((5)*(12000000/4000.0)));
  5040  0019EE  0E0F               	movlw	15
  5041  0019F0  0100               	movlb	0	; () banked
  5042  0019F2  6F81               	movwf	??_OpenXLCD& (0+255),b
  5043  0019F4  0E9D               	movlw	157
  5044  0019F6                     u3807:
  5045  0019F6  FFFF               	dw	65535	; errata NOP
  5046  0019F8  2EE8               	decfsz	wreg,f,c
  5047  0019FA  D7FD               	bra	u3807
  5048  0019FC  2F81               	decfsz	??_OpenXLCD& (0+255),f,b
  5049  0019FE  D7FB               	bra	u3807
  5050  001A00  D000               	nop2	
  5051  001A02  F000               	nop	
  5052                           
  5053                           ;lcd_pic16.c: 67:        WriteCmdXLCD(0x30);
  5054  001A04  0E30               	movlw	48
  5055  001A06  EC41  F012         	call	_WriteCmdXLCD
  5056                           
  5057                           ;lcd_pic16.c: 68:          _delay((unsigned long)((1)*(12000000/4000.0)));
  5058  001A0A  0E03               	movlw	3
  5059  001A0C  0100               	movlb	0	; () banked
  5060  001A0E  6F81               	movwf	??_OpenXLCD& (0+255),b
  5061  001A10  0EEB               	movlw	235
  5062  001A12                     u3817:
  5063  001A12  FFFF               	dw	65535	; errata NOP
  5064  001A14  2EE8               	decfsz	wreg,f,c
  5065  001A16  D7FD               	bra	u3817
  5066  001A18  2F81               	decfsz	??_OpenXLCD& (0+255),f,b
  5067  001A1A  D7FB               	bra	u3817
  5068  001A1C  D000               	nop2	
  5069  001A1E  F000               	nop	
  5070                           
  5071                           ;lcd_pic16.c: 71:        WriteCmdXLCD(0x32);
  5072  001A20  0E32               	movlw	50
  5073  001A22  EC41  F012         	call	_WriteCmdXLCD
  5074  001A26                     l3556:
  5075  001A26  FFFF               	dw	65535	; assembler added errata NOP
  5076  001A28  EC7D  F014         	call	_BusyXLCD	;wreg free
  5077  001A2C  0900               	iorlw	0
  5078  001A2E  A4D8               	btfss	status,2,c
  5079  001A30  D7FA               	goto	l3556
  5080  001A32                     u3090:
  5081  001A32  FFFF               	dw	65535	; assembler added errata NOP
  5082  001A34  EC7D  F014         	call	_BusyXLCD	;wreg free
  5083  001A38  0900               	iorlw	0
  5084  001A3A  A4D8               	btfss	status,2,c
  5085  001A3C  D7FA               	goto	u3090
  5086                           
  5087                           ;lcd_pic16.c: 78:         WriteCmdXLCD(lcdtype);
  5088  001A3E  0100               	movlb	0	; () banked
  5089  001A40  5182               	movf	OpenXLCD@lcdtype& (0+255),w,b
  5090  001A42  EC41  F012         	call	_WriteCmdXLCD
  5091  001A46                     l3562:
  5092  001A46  FFFF               	dw	65535	; assembler added errata NOP
  5093  001A48  EC7D  F014         	call	_BusyXLCD	;wreg free
  5094  001A4C  0900               	iorlw	0
  5095  001A4E  A4D8               	btfss	status,2,c
  5096  001A50  D7FA               	goto	l3562
  5097                           
  5098                           ;lcd_pic16.c: 82:         WriteCmdXLCD(0b00001011&0b00001101&0b00001110);
  5099  001A52  0E08               	movlw	8
  5100  001A54  EC41  F012         	call	_WriteCmdXLCD
  5101  001A58                     l3566:
  5102  001A58  FFFF               	dw	65535	; assembler added errata NOP
  5103  001A5A  EC7D  F014         	call	_BusyXLCD	;wreg free
  5104  001A5E  0900               	iorlw	0
  5105  001A60  A4D8               	btfss	status,2,c
  5106  001A62  D7FA               	goto	l3566
  5107                           
  5108                           ;lcd_pic16.c: 84:         WriteCmdXLCD(0b00001111&0b00001111&0b00001111);
  5109  001A64  0E0F               	movlw	15
  5110  001A66  EC41  F012         	call	_WriteCmdXLCD
  5111  001A6A                     l3570:
  5112  001A6A  FFFF               	dw	65535	; assembler added errata NOP
  5113  001A6C  EC7D  F014         	call	_BusyXLCD	;wreg free
  5114  001A70  0900               	iorlw	0
  5115  001A72  A4D8               	btfss	status,2,c
  5116  001A74  D7FA               	goto	l3570
  5117                           
  5118                           ;lcd_pic16.c: 88:         WriteCmdXLCD(0x01);
  5119  001A76  0E01               	movlw	1
  5120  001A78  EC41  F012         	call	_WriteCmdXLCD
  5121  001A7C                     l3574:
  5122  001A7C  FFFF               	dw	65535	; assembler added errata NOP
  5123  001A7E  EC7D  F014         	call	_BusyXLCD	;wreg free
  5124  001A82  0900               	iorlw	0
  5125  001A84  A4D8               	btfss	status,2,c
  5126  001A86  D7FA               	goto	l3574
  5127                           
  5128                           ;lcd_pic16.c: 92:         WriteCmdXLCD(0b00000101);
  5129  001A88  0E05               	movlw	5
  5130  001A8A  EC41  F012         	call	_WriteCmdXLCD
  5131  001A8E                     l3578:
  5132  001A8E  FFFF               	dw	65535	; assembler added errata NOP
  5133  001A90  EC7D  F014         	call	_BusyXLCD	;wreg free
  5134  001A94  0900               	iorlw	0
  5135  001A96  A4D8               	btfss	status,2,c
  5136  001A98  D7FA               	goto	l3578
  5137                           
  5138                           ;lcd_pic16.c: 95:         WriteCmdXLCD(0x06);
  5139  001A9A  0E06               	movlw	6
  5140  001A9C  EC41  F012         	call	_WriteCmdXLCD
  5141  001AA0                     l3582:
  5142  001AA0  FFFF               	dw	65535	; assembler added errata NOP
  5143  001AA2  EC7D  F014         	call	_BusyXLCD	;wreg free
  5144  001AA6  0900               	iorlw	0
  5145  001AA8  A4D8               	btfss	status,2,c
  5146  001AAA  D7FA               	goto	l3582
  5147                           
  5148                           ;lcd_pic16.c: 98:         SetDDRamAddr(0x80);
  5149  001AAC  0E80               	movlw	128
  5150  001AAE  EC1C  F012         	call	_SetDDRamAddr
  5151  001AB2                     l3586:
  5152  001AB2  FFFF               	dw	65535	; assembler added errata NOP
  5153  001AB4  EC7D  F014         	call	_BusyXLCD	;wreg free
  5154  001AB8  0900               	iorlw	0
  5155  001ABA  A4D8               	btfss	status,2,c
  5156  001ABC  D7FA               	goto	l3586
  5157                           
  5158                           ;lcd_pic16.c: 101:         WriteCmdXLCD(0b00001101);
  5159  001ABE  0E0D               	movlw	13
  5160  001AC0  EC41  F012         	call	_WriteCmdXLCD
  5161  001AC4  0012               	return		;funcret
  5162  001AC6  FFFF               	dw	65535	; errata NOP
  5163  001AC8                     __end_of_OpenXLCD:
  5164                           	opt callstack 0
  5165                           
  5166 ;; *************** function _WriteCmdXLCD *****************
  5167 ;; Defined at:
  5168 ;;		line 164 in file "lcd_pic16.c"
  5169 ;; Parameters:    Size  Location     Type
  5170 ;;  cmd             1    wreg     unsigned char 
  5171 ;; Auto vars:     Size  Location     Type
  5172 ;;  cmd             1    0[BANK0 ] unsigned char 
  5173 ;; Return value:  Size  Location     Type
  5174 ;;                  1    wreg      void 
  5175 ;; Registers used:
  5176 ;;		wreg, status,2, status,0, cstack
  5177 ;; Tracked objects:
  5178 ;;		On entry : 0/0
  5179 ;;		On exit  : 0/0
  5180 ;;		Unchanged: 0/0
  5181 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5182 ;;      Params:         0       0       0       0       0       0       0
  5183 ;;      Locals:         0       1       0       0       0       0       0
  5184 ;;      Temps:          0       0       0       0       0       0       0
  5185 ;;      Totals:         0       1       0       0       0       0       0
  5186 ;;Total ram usage:        1 bytes
  5187 ;; Hardware stack levels used:    1
  5188 ;; Hardware stack levels required when called:   11
  5189 ;; This function calls:
  5190 ;;		_DelayFor18TCY
  5191 ;; This function is called by:
  5192 ;;		_OpenXLCD
  5193 ;;		_SendCMDLCD
  5194 ;; This function uses a non-reentrant model
  5195 ;;
  5196                           
  5197                           	psect	text27
  5198  002482                     __ptext27:
  5199                           	opt callstack 0
  5200  002482                     _WriteCmdXLCD:
  5201                           	opt callstack 0
  5202  002482  FFFF               	dw	65535	; assembler added errata NOP
  5203                           
  5204                           ;incstack = 0
  5205                           ;WriteCmdXLCD@cmd stored from wreg
  5206  002484  0100               	movlb	0	; () banked
  5207  002486  6F80               	movwf	WriteCmdXLCD@cmd& (0+255),b
  5208                           
  5209                           ;lcd_pic16.c: 178:         TRISD &= 0x0f;
  5210  002488  0E0F               	movlw	15
  5211  00248A  1695               	andwf	3989,f,c	;volatile
  5212                           
  5213                           ;lcd_pic16.c: 179:         PORTD &= 0x0f;
  5214  00248C  0E0F               	movlw	15
  5215  00248E  1683               	andwf	3971,f,c	;volatile
  5216                           
  5217                           ;lcd_pic16.c: 180:         PORTD |= cmd&0xf0;
  5218  002490  0100               	movlb	0	; () banked
  5219  002492  5180               	movf	WriteCmdXLCD@cmd& (0+255),w,b
  5220  002494  0BF0               	andlw	240
  5221  002496  1283               	iorwf	3971,f,c	;volatile
  5222                           
  5223                           ; BSR set to: 0
  5224                           ;lcd_pic16.c: 186:         PORTDbits.RD2 = 0;
  5225  002498  9483               	bcf	3971,2,c	;volatile
  5226                           
  5227                           ; BSR set to: 0
  5228                           ;lcd_pic16.c: 187:         PORTDbits.RD3 = 0;
  5229  00249A  9683               	bcf	3971,3,c	;volatile
  5230                           
  5231                           ; BSR set to: 0
  5232                           ;lcd_pic16.c: 188:         DelayFor18TCY();
  5233  00249C  ECB1  F014         	call	_DelayFor18TCY	;wreg free
  5234                           
  5235                           ;lcd_pic16.c: 189:         PORTDbits.RD1 = 1;
  5236  0024A0  8283               	bsf	3971,1,c	;volatile
  5237                           
  5238                           ;lcd_pic16.c: 190:         DelayFor18TCY();
  5239  0024A2  ECB1  F014         	call	_DelayFor18TCY	;wreg free
  5240                           
  5241                           ;lcd_pic16.c: 191:         PORTDbits.RD1 = 0;
  5242  0024A6  9283               	bcf	3971,1,c	;volatile
  5243                           
  5244                           ;lcd_pic16.c: 193:         PORTD &= 0x0f;
  5245  0024A8  0E0F               	movlw	15
  5246  0024AA  1683               	andwf	3971,f,c	;volatile
  5247                           
  5248                           ;lcd_pic16.c: 194:         PORTD |= (cmd<<4)&0xf0;
  5249  0024AC  0100               	movlb	0	; () banked
  5250  0024AE  3980               	swapf	WriteCmdXLCD@cmd& (0+255),w,b
  5251  0024B0  0BF0               	andlw	240
  5252  0024B2  0BF0               	andlw	240
  5253  0024B4  1283               	iorwf	3971,f,c	;volatile
  5254                           
  5255                           ; BSR set to: 0
  5256                           ;lcd_pic16.c: 199:         DelayFor18TCY();
  5257  0024B6  ECB1  F014         	call	_DelayFor18TCY	;wreg free
  5258                           
  5259                           ;lcd_pic16.c: 200:         PORTDbits.RD1 = 1;
  5260  0024BA  8283               	bsf	3971,1,c	;volatile
  5261                           
  5262                           ;lcd_pic16.c: 201:         DelayFor18TCY();
  5263  0024BC  ECB1  F014         	call	_DelayFor18TCY	;wreg free
  5264                           
  5265                           ;lcd_pic16.c: 202:         PORTDbits.RD1 = 0;
  5266  0024C0  9283               	bcf	3971,1,c	;volatile
  5267                           
  5268                           ;lcd_pic16.c: 204:         TRISD |= 0xf0;
  5269  0024C2  0EF0               	movlw	240
  5270  0024C4  1295               	iorwf	3989,f,c	;volatile
  5271  0024C6  0012               	return		;funcret
  5272  0024C8  FFFF               	dw	65535	; errata NOP
  5273  0024CA                     __end_of_WriteCmdXLCD:
  5274                           	opt callstack 0
  5275                           
  5276 ;; *************** function _SetDDRamAddr *****************
  5277 ;; Defined at:
  5278 ;;		line 217 in file "lcd_pic16.c"
  5279 ;; Parameters:    Size  Location     Type
  5280 ;;  DDaddr          1    wreg     unsigned char 
  5281 ;; Auto vars:     Size  Location     Type
  5282 ;;  DDaddr          1    0[BANK0 ] unsigned char 
  5283 ;; Return value:  Size  Location     Type
  5284 ;;                  1    wreg      void 
  5285 ;; Registers used:
  5286 ;;		wreg, status,2, status,0, cstack
  5287 ;; Tracked objects:
  5288 ;;		On entry : 0/0
  5289 ;;		On exit  : 0/0
  5290 ;;		Unchanged: 0/0
  5291 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5292 ;;      Params:         0       0       0       0       0       0       0
  5293 ;;      Locals:         0       1       0       0       0       0       0
  5294 ;;      Temps:          0       0       0       0       0       0       0
  5295 ;;      Totals:         0       1       0       0       0       0       0
  5296 ;;Total ram usage:        1 bytes
  5297 ;; Hardware stack levels used:    1
  5298 ;; Hardware stack levels required when called:   11
  5299 ;; This function calls:
  5300 ;;		_DelayFor18TCY
  5301 ;; This function is called by:
  5302 ;;		_OpenXLCD
  5303 ;; This function uses a non-reentrant model
  5304 ;;
  5305                           
  5306                           	psect	text28
  5307  002438                     __ptext28:
  5308                           	opt callstack 0
  5309  002438                     _SetDDRamAddr:
  5310                           	opt callstack 0
  5311  002438  FFFF               	dw	65535	; assembler added errata NOP
  5312                           
  5313                           ;incstack = 0
  5314                           ;SetDDRamAddr@DDaddr stored from wreg
  5315  00243A  0100               	movlb	0	; () banked
  5316  00243C  6F80               	movwf	SetDDRamAddr@DDaddr& (0+255),b
  5317                           
  5318                           ;lcd_pic16.c: 217: void SetDDRamAddr(unsigned char DDaddr);lcd_pic16.c: 218: {;lcd_pic16
      +                          .c: 232:         TRISD &= 0x0f;
  5319  00243E  0E0F               	movlw	15
  5320  002440  1695               	andwf	3989,f,c	;volatile
  5321                           
  5322                           ;lcd_pic16.c: 233:         PORTD &= 0x0f;
  5323  002442  0E0F               	movlw	15
  5324  002444  1683               	andwf	3971,f,c	;volatile
  5325                           
  5326                           ;lcd_pic16.c: 234:         PORTD |= ((DDaddr | 0b10000000) & 0xf0);
  5327  002446  0100               	movlb	0	; () banked
  5328  002448  5180               	movf	SetDDRamAddr@DDaddr& (0+255),w,b
  5329  00244A  0980               	iorlw	128
  5330  00244C  0BF0               	andlw	240
  5331  00244E  1283               	iorwf	3971,f,c	;volatile
  5332                           
  5333                           ; BSR set to: 0
  5334                           ;lcd_pic16.c: 240:         PORTDbits.RD2 = 0;
  5335  002450  9483               	bcf	3971,2,c	;volatile
  5336                           
  5337                           ; BSR set to: 0
  5338                           ;lcd_pic16.c: 241:         PORTDbits.RD3 = 0;
  5339  002452  9683               	bcf	3971,3,c	;volatile
  5340                           
  5341                           ; BSR set to: 0
  5342                           ;lcd_pic16.c: 242:         DelayFor18TCY();
  5343  002454  ECB1  F014         	call	_DelayFor18TCY	;wreg free
  5344                           
  5345                           ;lcd_pic16.c: 243:         PORTDbits.RD1 = 1;
  5346  002458  8283               	bsf	3971,1,c	;volatile
  5347                           
  5348                           ;lcd_pic16.c: 244:         DelayFor18TCY();
  5349  00245A  ECB1  F014         	call	_DelayFor18TCY	;wreg free
  5350                           
  5351                           ;lcd_pic16.c: 245:         PORTDbits.RD1 = 0;
  5352  00245E  9283               	bcf	3971,1,c	;volatile
  5353                           
  5354                           ;lcd_pic16.c: 247:         PORTD &= 0x0f;
  5355  002460  0E0F               	movlw	15
  5356  002462  1683               	andwf	3971,f,c	;volatile
  5357                           
  5358                           ;lcd_pic16.c: 248:         PORTD |= ((DDaddr<<4)&0xf0);
  5359  002464  0100               	movlb	0	; () banked
  5360  002466  3980               	swapf	SetDDRamAddr@DDaddr& (0+255),w,b
  5361  002468  0BF0               	andlw	240
  5362  00246A  0BF0               	andlw	240
  5363  00246C  1283               	iorwf	3971,f,c	;volatile
  5364                           
  5365                           ; BSR set to: 0
  5366                           ;lcd_pic16.c: 253:         DelayFor18TCY();
  5367  00246E  ECB1  F014         	call	_DelayFor18TCY	;wreg free
  5368                           
  5369                           ;lcd_pic16.c: 254:         PORTDbits.RD1 = 1;
  5370  002472  8283               	bsf	3971,1,c	;volatile
  5371                           
  5372                           ;lcd_pic16.c: 255:         DelayFor18TCY();
  5373  002474  ECB1  F014         	call	_DelayFor18TCY	;wreg free
  5374                           
  5375                           ;lcd_pic16.c: 256:         PORTDbits.RD1 = 0;
  5376  002478  9283               	bcf	3971,1,c	;volatile
  5377                           
  5378                           ;lcd_pic16.c: 258:         TRISD |= 0xf0;
  5379  00247A  0EF0               	movlw	240
  5380  00247C  1295               	iorwf	3989,f,c	;volatile
  5381  00247E  0012               	return		;funcret
  5382  002480  FFFF               	dw	65535	; errata NOP
  5383  002482                     __end_of_SetDDRamAddr:
  5384                           	opt callstack 0
  5385                           
  5386 ;; *************** function _DelayFor18TCY *****************
  5387 ;; Defined at:
  5388 ;;		line 22 in file "lcd_pic16.c"
  5389 ;; Parameters:    Size  Location     Type
  5390 ;;		None
  5391 ;; Auto vars:     Size  Location     Type
  5392 ;;		None
  5393 ;; Return value:  Size  Location     Type
  5394 ;;                  1    wreg      void 
  5395 ;; Registers used:
  5396 ;;		wreg
  5397 ;; Tracked objects:
  5398 ;;		On entry : 0/0
  5399 ;;		On exit  : 0/0
  5400 ;;		Unchanged: 0/0
  5401 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5402 ;;      Params:         0       0       0       0       0       0       0
  5403 ;;      Locals:         0       0       0       0       0       0       0
  5404 ;;      Temps:          0       0       0       0       0       0       0
  5405 ;;      Totals:         0       0       0       0       0       0       0
  5406 ;;Total ram usage:        0 bytes
  5407 ;; Hardware stack levels used:    1
  5408 ;; Hardware stack levels required when called:   10
  5409 ;; This function calls:
  5410 ;;		Nothing
  5411 ;; This function is called by:
  5412 ;;		_WriteCmdXLCD
  5413 ;;		_SetDDRamAddr
  5414 ;;		_SetCGRamAddr
  5415 ;;		_ReadDataXLCD
  5416 ;;		_ReadAddrXLCD
  5417 ;; This function uses a non-reentrant model
  5418 ;;
  5419                           
  5420                           	psect	text29
  5421  002962                     __ptext29:
  5422                           	opt callstack 0
  5423  002962                     _DelayFor18TCY:
  5424                           	opt callstack 0
  5425  002962  FFFF               	dw	65535	; assembler added errata NOP
  5426                           
  5427                           ;lcd_pic16.c: 24:    _delay((unsigned long)((18)*(12000000/4000000.0)));
  5428                           
  5429                           ;incstack = 0
  5430  002964  0E0D               	movlw	13
  5431  002966                     u3827:
  5432  002966  FFFF               	dw	65535	; errata NOP
  5433  002968  2EE8               	decfsz	wreg,f,c
  5434  00296A  D7FD               	bra	u3827
  5435  00296C  D000               	nop2	
  5436  00296E  0012               	return		;funcret
  5437  002970  FFFF               	dw	65535	; errata NOP
  5438  002972                     __end_of_DelayFor18TCY:
  5439                           	opt callstack 0
  5440                           
  5441 ;; *************** function _DelayPORXLCD *****************
  5442 ;; Defined at:
  5443 ;;		line 27 in file "lcd_pic16.c"
  5444 ;; Parameters:    Size  Location     Type
  5445 ;;		None
  5446 ;; Auto vars:     Size  Location     Type
  5447 ;;		None
  5448 ;; Return value:  Size  Location     Type
  5449 ;;                  1    wreg      void 
  5450 ;; Registers used:
  5451 ;;		wreg
  5452 ;; Tracked objects:
  5453 ;;		On entry : 0/0
  5454 ;;		On exit  : 0/0
  5455 ;;		Unchanged: 0/0
  5456 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5457 ;;      Params:         0       0       0       0       0       0       0
  5458 ;;      Locals:         0       0       0       0       0       0       0
  5459 ;;      Temps:          0       1       0       0       0       0       0
  5460 ;;      Totals:         0       1       0       0       0       0       0
  5461 ;;Total ram usage:        1 bytes
  5462 ;; Hardware stack levels used:    1
  5463 ;; Hardware stack levels required when called:   10
  5464 ;; This function calls:
  5465 ;;		Nothing
  5466 ;; This function is called by:
  5467 ;;		_OpenXLCD
  5468 ;; This function uses a non-reentrant model
  5469 ;;
  5470                           
  5471                           	psect	text30
  5472  002918                     __ptext30:
  5473                           	opt callstack 0
  5474  002918                     _DelayPORXLCD:
  5475                           	opt callstack 0
  5476  002918  FFFF               	dw	65535	; assembler added errata NOP
  5477                           
  5478                           ;lcd_pic16.c: 29:    _delay((unsigned long)((20)*(12000000/4000.0)));
  5479                           
  5480                           ;incstack = 0
  5481  00291A  0E3B               	movlw	59
  5482  00291C  0100               	movlb	0	; () banked
  5483  00291E  6F80               	movwf	??_DelayPORXLCD& (0+255),b
  5484  002920  0E79               	movlw	121
  5485  002922                     u3837:
  5486  002922  FFFF               	dw	65535	; errata NOP
  5487  002924  2EE8               	decfsz	wreg,f,c
  5488  002926  D7FD               	bra	u3837
  5489  002928  2F80               	decfsz	??_DelayPORXLCD& (0+255),f,b
  5490  00292A  D7FB               	bra	u3837
  5491  00292C  D000               	nop2	
  5492  00292E  F000               	nop	
  5493  002930  0012               	return		;funcret
  5494  002932  FFFF               	dw	65535	; errata NOP
  5495  002934                     __end_of_DelayPORXLCD:
  5496                           	opt callstack 0
  5497                           
  5498 ;; *************** function _BusyXLCD *****************
  5499 ;; Defined at:
  5500 ;;		line 451 in file "lcd_pic16.c"
  5501 ;; Parameters:    Size  Location     Type
  5502 ;;		None
  5503 ;; Auto vars:     Size  Location     Type
  5504 ;;		None
  5505 ;; Return value:  Size  Location     Type
  5506 ;;                  1    wreg      unsigned char 
  5507 ;; Registers used:
  5508 ;;		wreg
  5509 ;; Tracked objects:
  5510 ;;		On entry : 0/0
  5511 ;;		On exit  : 0/0
  5512 ;;		Unchanged: 0/0
  5513 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5514 ;;      Params:         0       0       0       0       0       0       0
  5515 ;;      Locals:         0       0       0       0       0       0       0
  5516 ;;      Temps:          0       1       0       0       0       0       0
  5517 ;;      Totals:         0       1       0       0       0       0       0
  5518 ;;Total ram usage:        1 bytes
  5519 ;; Hardware stack levels used:    1
  5520 ;; Hardware stack levels required when called:   10
  5521 ;; This function calls:
  5522 ;;		Nothing
  5523 ;; This function is called by:
  5524 ;;		_OpenXLCD
  5525 ;;		_SendCMDLCD
  5526 ;;		_putrsXLCD
  5527 ;; This function uses a non-reentrant model
  5528 ;;
  5529                           
  5530                           	psect	text31
  5531  0028FA                     __ptext31:
  5532                           	opt callstack 0
  5533  0028FA                     _BusyXLCD:
  5534                           	opt callstack 0
  5535  0028FA  FFFF               	dw	65535	; assembler added errata NOP
  5536                           
  5537                           ;lcd_pic16.c: 504:         _delay((unsigned long)((5)*(12000000/4000.0)));
  5538                           
  5539                           ;incstack = 0
  5540  0028FC  0E0F               	movlw	15
  5541  0028FE  0100               	movlb	0	; () banked
  5542  002900  6F80               	movwf	??_BusyXLCD& (0+255),b
  5543  002902  0E9D               	movlw	157
  5544  002904                     u3847:
  5545  002904  FFFF               	dw	65535	; errata NOP
  5546  002906  2EE8               	decfsz	wreg,f,c
  5547  002908  D7FD               	bra	u3847
  5548  00290A  2F80               	decfsz	??_BusyXLCD& (0+255),f,b
  5549  00290C  D7FB               	bra	u3847
  5550  00290E  D000               	nop2	
  5551  002910  F000               	nop	
  5552                           
  5553                           ;lcd_pic16.c: 505:         return 0;
  5554  002912  0E00               	movlw	0
  5555  002914  0012               	return		;funcret
  5556  002916  FFFF               	dw	65535	; errata NOP
  5557  002918                     __end_of_BusyXLCD:
  5558                           	opt callstack 0
  5559                           
  5560 ;; *************** function _inter *****************
  5561 ;; Defined at:
  5562 ;;		line 60 in file "main.c"
  5563 ;; Parameters:    Size  Location     Type
  5564 ;;		None
  5565 ;; Auto vars:     Size  Location     Type
  5566 ;;		None
  5567 ;; Return value:  Size  Location     Type
  5568 ;;                  1    wreg      void 
  5569 ;; Registers used:
  5570 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5571 ;; Tracked objects:
  5572 ;;		On entry : 0/0
  5573 ;;		On exit  : 0/0
  5574 ;;		Unchanged: 0/0
  5575 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5576 ;;      Params:         0       0       0       0       0       0       0
  5577 ;;      Locals:         0       0       0       0       0       0       0
  5578 ;;      Temps:         10       0       0       0       0       0       0
  5579 ;;      Totals:        10       0       0       0       0       0       0
  5580 ;;Total ram usage:       10 bytes
  5581 ;; Hardware stack levels used:    1
  5582 ;; Hardware stack levels required when called:    9
  5583 ;; This function calls:
  5584 ;;		_time
  5585 ;;		_updateLCD
  5586 ;;		_vumeter
  5587 ;; This function is called by:
  5588 ;;		Interrupt level 2
  5589 ;; This function uses a non-reentrant model
  5590 ;;
  5591                           
  5592                           	psect	intcode
  5593  000008                     __pintcode:
  5594                           	opt callstack 0
  5595  000008                     _inter:
  5596                           	opt callstack 0
  5597  000008  FFFF               	dw	65535	; assembler added errata NOP
  5598                           
  5599                           ;incstack = 0
  5600  00000A  827F               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  5601  00000C  CFE1 F070          	movff	fsr1l,??_inter
  5602  000010  CFE2 F071          	movff	fsr1h,??_inter+1
  5603  000014  CFD9 F072          	movff	fsr2l,??_inter+2
  5604  000018  CFDA F073          	movff	fsr2h,??_inter+3
  5605  00001C  CFF3 F074          	movff	prodl,??_inter+4
  5606  000020  CFF4 F075          	movff	prodh,??_inter+5
  5607  000024  CFF6 F076          	movff	tblptrl,??_inter+6
  5608  000028  CFF7 F077          	movff	tblptrh,??_inter+7
  5609  00002C  CFF8 F078          	movff	tblptru,??_inter+8
  5610  000030  CFF5 F079          	movff	tablat,??_inter+9
  5611                           
  5612                           ;main.c: 62:     INTCONbits.GIE = 0;
  5613  000034  9EF2               	bcf	4082,7,c	;volatile
  5614                           
  5615                           ;main.c: 64:     if(PIR1bits.TMR1IF == 1){
  5616  000036  A09E               	btfss	3998,0,c	;volatile
  5617  000038  D011               	goto	i2l4034
  5618                           
  5619                           ;main.c: 65:         TMR1H = prTmr1H;
  5620  00003A  C07C  FFCF         	movff	_prTmr1H,4047	;volatile
  5621                           
  5622                           ;main.c: 66:         TMR1L = prTmr1L;
  5623  00003E  C07D  FFCE         	movff	_prTmr1L,4046	;volatile
  5624                           
  5625                           ;main.c: 67:         cntTmr1++;
  5626  000042  2A7E               	incf	_cntTmr1,f,c
  5627                           
  5628                           ;main.c: 68:         time();
  5629  000044  EC1F  F010         	call	_time	;wreg free
  5630                           
  5631                           ;main.c: 69:         if(cntTmr1 == 3){
  5632  000048  0E03               	movlw	3
  5633  00004A  187E               	xorwf	_cntTmr1,w,c
  5634  00004C  A4D8               	btfss	status,2,c
  5635  00004E  D004               	goto	i2l4032
  5636                           
  5637                           ;main.c: 70:             cntTmr1 = 0;
  5638  000050  0E00               	movlw	0
  5639  000052  6E7E               	movwf	_cntTmr1,c
  5640                           
  5641                           ;main.c: 71:             updateLCD();
  5642  000054  EC6E  F00F         	call	_updateLCD	;wreg free
  5643  000058                     i2l4032:
  5644  000058  FFFF               	dw	65535	; assembler added errata NOP
  5645                           
  5646                           ;main.c: 73:         PIR1bits.TMR1IF = 0;
  5647  00005A  909E               	bcf	3998,0,c	;volatile
  5648  00005C                     i2l4034:
  5649  00005C  FFFF               	dw	65535	; assembler added errata NOP
  5650                           
  5651                           ;main.c: 76:     if(INTCONbits.TMR0IF == 1){
  5652  00005E  A4F2               	btfss	4082,2,c	;volatile
  5653  000060  D009               	goto	i2l4044
  5654                           
  5655                           ;main.c: 77:         TMR0H = prTmr0H;
  5656  000062  C07A  FFD7         	movff	_prTmr0H,4055	;volatile
  5657                           
  5658                           ;main.c: 78:         TMR0L = prTmr0L;
  5659  000066  C07B  FFD6         	movff	_prTmr0L,4054	;volatile
  5660                           
  5661                           ;main.c: 79:         vumeter(ADRESH);
  5662  00006A  50C4               	movf	4036,w,c	;volatile
  5663  00006C  EC26  F00F         	call	_vumeter
  5664                           
  5665                           ;main.c: 80:         ADCON0bits.GO = 1;
  5666  000070  84C2               	bsf	4034,2,c	;volatile
  5667                           
  5668                           ;main.c: 81:         INTCONbits.TMR0IF = 0;
  5669  000072  94F2               	bcf	4082,2,c	;volatile
  5670  000074                     i2l4044:
  5671  000074  FFFF               	dw	65535	; assembler added errata NOP
  5672                           
  5673                           ;main.c: 84:     INTCONbits.GIE = 1;
  5674  000076  8EF2               	bsf	4082,7,c	;volatile
  5675  000078  C079  FFF5         	movff	??_inter+9,tablat
  5676  00007C  C078  FFF8         	movff	??_inter+8,tblptru
  5677  000080  C077  FFF7         	movff	??_inter+7,tblptrh
  5678  000084  C076  FFF6         	movff	??_inter+6,tblptrl
  5679  000088  C075  FFF4         	movff	??_inter+5,prodh
  5680  00008C  C074  FFF3         	movff	??_inter+4,prodl
  5681  000090  C073  FFDA         	movff	??_inter+3,fsr2h
  5682  000094  C072  FFD9         	movff	??_inter+2,fsr2l
  5683  000098  C071  FFE2         	movff	??_inter+1,fsr1h
  5684  00009C  C070  FFE1         	movff	??_inter,fsr1l
  5685  0000A0  927F               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  5686  0000A2  0011               	retfie		f
  5687  0000A4  FFFF               	dw	65535	; errata NOP
  5688  0000A6                     __end_of_inter:
  5689                           	opt callstack 0
  5690                           
  5691 ;; *************** function _vumeter *****************
  5692 ;; Defined at:
  5693 ;;		line 88 in file "main.c"
  5694 ;; Parameters:    Size  Location     Type
  5695 ;;  vumLevel        1    wreg     unsigned char 
  5696 ;; Auto vars:     Size  Location     Type
  5697 ;;  vumLevel        1    4[COMRAM] unsigned char 
  5698 ;;  level           1    3[COMRAM] unsigned char 
  5699 ;; Return value:  Size  Location     Type
  5700 ;;                  1    wreg      void 
  5701 ;; Registers used:
  5702 ;;		wreg, status,2, status,0
  5703 ;; Tracked objects:
  5704 ;;		On entry : 0/0
  5705 ;;		On exit  : 0/0
  5706 ;;		Unchanged: 0/0
  5707 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5708 ;;      Params:         0       0       0       0       0       0       0
  5709 ;;      Locals:         2       0       0       0       0       0       0
  5710 ;;      Temps:          3       0       0       0       0       0       0
  5711 ;;      Totals:         5       0       0       0       0       0       0
  5712 ;;Total ram usage:        5 bytes
  5713 ;; Hardware stack levels used:    1
  5714 ;; This function calls:
  5715 ;;		Nothing
  5716 ;; This function is called by:
  5717 ;;		_inter
  5718 ;; This function uses a non-reentrant model
  5719 ;;
  5720                           
  5721                           	psect	text33
  5722  001E4C                     __ptext33:
  5723                           	opt callstack 0
  5724  001E4C                     _vumeter:
  5725                           	opt callstack 0
  5726  001E4C  FFFF               	dw	65535	; assembler added errata NOP
  5727                           
  5728                           ;incstack = 0
  5729                           ;vumeter@vumLevel stored from wreg
  5730  001E4E  6E05               	movwf	vumeter@vumLevel,c
  5731                           
  5732                           ;main.c: 89:     unsigned char level = 0;
  5733  001E50  0E00               	movlw	0
  5734  001E52  6E04               	movwf	vumeter@level,c
  5735                           
  5736                           ;main.c: 91:     if (vumLevel >= 200) level = 8;
  5737  001E54  0EC7               	movlw	199
  5738  001E56  6405               	cpfsgt	vumeter@vumLevel,c
  5739  001E58  D002               	goto	i2l2542
  5740  001E5A  0E08               	movlw	8
  5741  001E5C  D029               	goto	L10
  5742  001E5E                     i2l2542:
  5743  001E5E  FFFF               	dw	65535	; assembler added errata NOP
  5744  001E60  0E7C               	movlw	124
  5745  001E62  6405               	cpfsgt	vumeter@vumLevel,c
  5746  001E64  D002               	goto	i2l2546
  5747  001E66  0E07               	movlw	7
  5748  001E68  D023               	goto	L10
  5749  001E6A                     i2l2546:
  5750  001E6A  FFFF               	dw	65535	; assembler added errata NOP
  5751  001E6C  0E4A               	movlw	74
  5752  001E6E  6405               	cpfsgt	vumeter@vumLevel,c
  5753  001E70  D002               	goto	i2l2550
  5754  001E72  0E06               	movlw	6
  5755  001E74  D01D               	goto	L10
  5756  001E76                     i2l2550:
  5757  001E76  FFFF               	dw	65535	; assembler added errata NOP
  5758  001E78  0E3B               	movlw	59
  5759  001E7A  6405               	cpfsgt	vumeter@vumLevel,c
  5760  001E7C  D002               	goto	i2l2554
  5761  001E7E  0E05               	movlw	5
  5762  001E80  D017               	goto	L10
  5763  001E82                     i2l2554:
  5764  001E82  FFFF               	dw	65535	; assembler added errata NOP
  5765  001E84  0E2C               	movlw	44
  5766  001E86  6405               	cpfsgt	vumeter@vumLevel,c
  5767  001E88  D002               	goto	i2l2558
  5768  001E8A  0E04               	movlw	4
  5769  001E8C  D011               	goto	L10
  5770  001E8E                     i2l2558:
  5771  001E8E  FFFF               	dw	65535	; assembler added errata NOP
  5772  001E90  0E0E               	movlw	14
  5773  001E92  6405               	cpfsgt	vumeter@vumLevel,c
  5774  001E94  D002               	goto	i2l2562
  5775  001E96  0E03               	movlw	3
  5776  001E98  D00B               	goto	L10
  5777  001E9A                     i2l2562:
  5778  001E9A  FFFF               	dw	65535	; assembler added errata NOP
  5779  001E9C  0E04               	movlw	4
  5780  001E9E  6405               	cpfsgt	vumeter@vumLevel,c
  5781  001EA0  D002               	goto	i2l2566
  5782  001EA2  0E02               	movlw	2
  5783  001EA4  D005               	goto	L10
  5784  001EA6                     i2l2566:
  5785  001EA6  FFFF               	dw	65535	; assembler added errata NOP
  5786  001EA8  5005               	movf	vumeter@vumLevel,w,c
  5787  001EAA  B4D8               	btfsc	status,2,c
  5788  001EAC  D003               	goto	i2l218
  5789  001EAE  0E01               	movlw	1
  5790  001EB0                     L10:
  5791  001EB0  FFFF               	dw	65535	; assembler added errata NOP
  5792  001EB2  6E04               	movwf	vumeter@level,c
  5793  001EB4                     i2l218:
  5794  001EB4  FFFF               	dw	65535	; assembler added errata NOP
  5795                           
  5796                           ;main.c: 100:     PORTB = 0xFF80 >> level;
  5797  001EB6  C004  F001         	movff	vumeter@level,??_vumeter
  5798  001EBA  0E80               	movlw	128
  5799  001EBC  6E02               	movwf	(??_vumeter+1)& (0+255),c
  5800  001EBE  0EFF               	movlw	255
  5801  001EC0  6E03               	movwf	(??_vumeter+2)& (0+255),c
  5802  001EC2  2A01               	incf	??_vumeter,f,c
  5803  001EC4  D004               	goto	i2u177_44
  5804  001EC6                     i2u177_45:
  5805  001EC6  FFFF               	dw	65535	; assembler added errata NOP
  5806  001EC8  90D8               	bcf	status,0,c
  5807  001ECA  3203               	rrcf	??_vumeter+2,f,c
  5808  001ECC  3202               	rrcf	??_vumeter+1,f,c
  5809  001ECE                     i2u177_44:
  5810  001ECE  FFFF               	dw	65535	; assembler added errata NOP
  5811  001ED0  2E01               	decfsz	??_vumeter,f,c
  5812  001ED2  D7F9               	goto	i2u177_45
  5813  001ED4  5002               	movf	??_vumeter+1,w,c
  5814  001ED6  6E81               	movwf	3969,c	;volatile
  5815  001ED8  0012               	return		;funcret
  5816  001EDA  FFFF               	dw	65535	; errata NOP
  5817  001EDC                     __end_of_vumeter:
  5818                           	opt callstack 0
  5819                           
  5820 ;; *************** function _updateLCD *****************
  5821 ;; Defined at:
  5822 ;;		line 14 in file "lcd.c"
  5823 ;; Parameters:    Size  Location     Type
  5824 ;;		None
  5825 ;; Auto vars:     Size  Location     Type
  5826 ;;  decim           1  110[COMRAM] unsigned char 
  5827 ;;  integ           1  109[COMRAM] unsigned char 
  5828 ;; Return value:  Size  Location     Type
  5829 ;;                  1    wreg      void 
  5830 ;; Registers used:
  5831 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5832 ;; Tracked objects:
  5833 ;;		On entry : 0/0
  5834 ;;		On exit  : 0/0
  5835 ;;		Unchanged: 0/0
  5836 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5837 ;;      Params:         0       0       0       0       0       0       0
  5838 ;;      Locals:         2       0       0       0       0       0       0
  5839 ;;      Temps:          0       0       0       0       0       0       0
  5840 ;;      Totals:         2       0       0       0       0       0       0
  5841 ;;Total ram usage:        2 bytes
  5842 ;; Hardware stack levels used:    1
  5843 ;; Hardware stack levels required when called:    8
  5844 ;; This function calls:
  5845 ;;		___lwdiv
  5846 ;;		___lwmod
  5847 ;;		_putsXLCD
  5848 ;;		i2_SetDDRamAddr
  5849 ;;		i2_sprintf
  5850 ;; This function is called by:
  5851 ;;		_inter
  5852 ;; This function uses a non-reentrant model
  5853 ;;
  5854                           
  5855                           	psect	text34
  5856  001EDC                     __ptext34:
  5857                           	opt callstack 0
  5858  001EDC                     _updateLCD:
  5859                           	opt callstack 0
  5860  001EDC  FFFF               	dw	65535	; assembler added errata NOP
  5861                           
  5862                           ;lcd.c: 15:     unsigned char integ = frequency / 10;
  5863                           
  5864                           ;incstack = 0
  5865  001EDE  C0F6  F001         	movff	_frequency,___lwdiv@dividend
  5866  001EE2  C0F7  F002         	movff	_frequency+1,___lwdiv@dividend+1
  5867  001EE6  0E00               	movlw	0
  5868  001EE8  6E04               	movwf	___lwdiv@divisor+1,c
  5869  001EEA  0E0A               	movlw	10
  5870  001EEC  6E03               	movwf	___lwdiv@divisor,c
  5871  001EEE  EC1F  F011         	call	___lwdiv	;wreg free
  5872  001EF2  5001               	movf	?___lwdiv,w,c
  5873  001EF4  6E6E               	movwf	updateLCD@integ,c
  5874                           
  5875                           ;lcd.c: 16:     unsigned char decim = frequency % 10;
  5876  001EF6  C0F6  F001         	movff	_frequency,___lwmod@dividend
  5877  001EFA  C0F7  F002         	movff	_frequency+1,___lwmod@dividend+1
  5878  001EFE  0E00               	movlw	0
  5879  001F00  6E04               	movwf	___lwmod@divisor+1,c
  5880  001F02  0E0A               	movlw	10
  5881  001F04  6E03               	movwf	___lwmod@divisor,c
  5882  001F06  ECCF  F011         	call	___lwmod	;wreg free
  5883  001F0A  5001               	movf	?___lwmod,w,c
  5884  001F0C  6E6F               	movwf	updateLCD@decim,c
  5885                           
  5886                           ;lcd.c: 17:     sprintf(lineTwo,"Fcia.  %3d.%d MHz",integ, decim);
  5887  001F0E  0E20               	movlw	low _lineTwo
  5888  001F10  6E5C               	movwf	i2sprintf@s,c
  5889  001F12  0E01               	movlw	high _lineTwo
  5890  001F14  6E5D               	movwf	i2sprintf@s+1,c
  5891  001F16  0E05               	movlw	low STR_4
  5892  001F18  6E5E               	movwf	i2sprintf@fmt,c
  5893  001F1A  0E06               	movlw	high STR_4
  5894  001F1C  6E5F               	movwf	i2sprintf@fmt+1,c
  5895  001F1E  C06E  F060         	movff	updateLCD@integ,?i2_sprintf+4
  5896  001F22  6A61               	clrf	?i2_sprintf+5,c
  5897  001F24  C06F  F062         	movff	updateLCD@decim,?i2_sprintf+6
  5898  001F28  6A63               	clrf	?i2_sprintf+7,c
  5899  001F2A  ECA6  F011         	call	i2_sprintf	;wreg free
  5900                           
  5901                           ;lcd.c: 19:     SetDDRamAddr(0x00);
  5902  001F2E  0E00               	movlw	0
  5903  001F30  ECCD  F012         	call	i2_SetDDRamAddr
  5904                           
  5905                           ;lcd.c: 20:     putsXLCD(lineOne);
  5906  001F34  0E31               	movlw	low _lineOne
  5907  001F36  6E02               	movwf	putsXLCD@buffer,c
  5908  001F38  0E01               	movlw	high _lineOne
  5909  001F3A  6E03               	movwf	putsXLCD@buffer+1,c
  5910  001F3C  ECC6  F013         	call	_putsXLCD	;wreg free
  5911                           
  5912                           ;lcd.c: 21:     SetDDRamAddr(0x40);
  5913  001F40  0E40               	movlw	64
  5914  001F42  ECCD  F012         	call	i2_SetDDRamAddr
  5915                           
  5916                           ;lcd.c: 22:     putsXLCD(lineTwo);
  5917  001F46  0E20               	movlw	low _lineTwo
  5918  001F48  6E02               	movwf	putsXLCD@buffer,c
  5919  001F4A  0E01               	movlw	high _lineTwo
  5920  001F4C  6E03               	movwf	putsXLCD@buffer+1,c
  5921  001F4E  ECC6  F013         	call	_putsXLCD	;wreg free
  5922  001F52  0012               	return		;funcret
  5923  001F54  FFFF               	dw	65535	; errata NOP
  5924  001F56                     __end_of_updateLCD:
  5925                           	opt callstack 0
  5926                           
  5927 ;; *************** function i2_sprintf *****************
  5928 ;; Defined at:
  5929 ;;		line 9 in file "C:\Developments\Microchip\xc8\v2.05\pic\sources\c99\common\nf_sprintf.c"
  5930 ;; Parameters:    Size  Location     Type
  5931 ;;  s               2   91[COMRAM] PTR unsigned char 
  5932 ;;		 -> lineTwo(17), lineOne(17), 
  5933 ;;  fmt             2   93[COMRAM] PTR const unsigned char 
  5934 ;;		 -> STR_4(18), STR_3(17), STR_2(17), STR_1(17), 
  5935 ;; Auto vars:     Size  Location     Type
  5936 ;;  sprintf         6  103[COMRAM] struct _IO_FILE
  5937 ;;  sprintf         2  101[COMRAM] PTR void [1]
  5938 ;;		 -> ?i2_sprintf(2), ?_sprintf(2), 
  5939 ;;  sprintf         2    0        int 
  5940 ;; Return value:  Size  Location     Type
  5941 ;;                  2   91[COMRAM] int 
  5942 ;; Registers used:
  5943 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5944 ;; Tracked objects:
  5945 ;;		On entry : 0/0
  5946 ;;		On exit  : 0/0
  5947 ;;		Unchanged: 0/0
  5948 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5949 ;;      Params:         8       0       0       0       0       0       0
  5950 ;;      Locals:        10       0       0       0       0       0       0
  5951 ;;      Temps:          0       0       0       0       0       0       0
  5952 ;;      Totals:        18       0       0       0       0       0       0
  5953 ;;Total ram usage:       18 bytes
  5954 ;; Hardware stack levels used:    1
  5955 ;; Hardware stack levels required when called:    7
  5956 ;; This function calls:
  5957 ;;		i2_vfprintf
  5958 ;; This function is called by:
  5959 ;;		_updateLCD
  5960 ;; This function uses a non-reentrant model
  5961 ;;
  5962                           
  5963                           	psect	text35
  5964  00234C                     __ptext35:
  5965                           	opt callstack 0
  5966  00234C                     i2_sprintf:
  5967                           	opt callstack 0
  5968  00234C  FFFF               	dw	65535	; assembler added errata NOP
  5969                           
  5970                           ;incstack = 0
  5971  00234E  0E60               	movlw	low (?i2_sprintf+4)
  5972  002350  6E66               	movwf	i2sprintf@ap,c
  5973  002352  0E00               	movlw	high (?i2_sprintf+4)
  5974  002354  6E67               	movwf	i2sprintf@ap+1,c
  5975  002356  C05C  F068         	movff	i2sprintf@s,i2sprintf@f
  5976  00235A  C05D  F069         	movff	i2sprintf@s+1,i2sprintf@f+1
  5977  00235E  0E00               	movlw	0
  5978  002360  6E6B               	movwf	i2sprintf@f+3,c
  5979  002362  0E00               	movlw	0
  5980  002364  6E6A               	movwf	i2sprintf@f+2,c
  5981  002366  0E00               	movlw	0
  5982  002368  6E6D               	movwf	i2sprintf@f+5,c
  5983  00236A  0E00               	movlw	0
  5984  00236C  6E6C               	movwf	i2sprintf@f+4,c
  5985  00236E  0E68               	movlw	low i2sprintf@f
  5986  002370  6E54               	movwf	i2vfprintf@fp,c
  5987  002372  0E00               	movlw	high i2sprintf@f
  5988  002374  6E55               	movwf	i2vfprintf@fp+1,c
  5989  002376  C05E  F056         	movff	i2sprintf@fmt,i2vfprintf@fmt
  5990  00237A  C05F  F057         	movff	i2sprintf@fmt+1,i2vfprintf@fmt+1
  5991  00237E  0E66               	movlw	low i2sprintf@ap
  5992  002380  6E58               	movwf	i2vfprintf@ap,c
  5993  002382  0E00               	movlw	high i2sprintf@ap
  5994  002384  6E59               	movwf	i2vfprintf@ap+1,c
  5995  002386  ECEF  F010         	call	i2_vfprintf	;wreg free
  5996  00238A  506A               	movf	i2sprintf@f+2,w,c
  5997  00238C  245C               	addwf	i2sprintf@s,w,c
  5998  00238E  6ED9               	movwf	fsr2l,c
  5999  002390  506B               	movf	i2sprintf@f+3,w,c
  6000  002392  205D               	addwfc	i2sprintf@s+1,w,c
  6001  002394  6EDA               	movwf	fsr2h,c
  6002  002396  0E00               	movlw	0
  6003  002398  6EDF               	movwf	indf2,c
  6004  00239A  0012               	return		;funcret
  6005  00239C  FFFF               	dw	65535	; errata NOP
  6006  00239E                     __end_ofi2_sprintf:
  6007                           	opt callstack 0
  6008                           
  6009 ;; *************** function i2_vfprintf *****************
  6010 ;; Defined at:
  6011 ;;		line 1368 in file "C:\Developments\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  6012 ;; Parameters:    Size  Location     Type
  6013 ;;  fp              2   83[COMRAM] PTR struct _IO_FILE
  6014 ;;		 -> i2sprintf@f(6), sprintf@f(6), 
  6015 ;;  fmt             2   85[COMRAM] PTR const unsigned char 
  6016 ;;		 -> STR_4(18), STR_3(17), STR_2(17), STR_1(17), 
  6017 ;;  ap              2   87[COMRAM] PTR PTR void 
  6018 ;;		 -> i2sprintf@ap(2), sprintf@ap(2), 
  6019 ;; Auto vars:     Size  Location     Type
  6020 ;;  vfprintf        2   89[COMRAM] PTR unsigned char 
  6021 ;;		 -> STR_4(18), STR_3(17), STR_2(17), STR_1(17), 
  6022 ;; Return value:  Size  Location     Type
  6023 ;;                  2   83[COMRAM] int 
  6024 ;; Registers used:
  6025 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6026 ;; Tracked objects:
  6027 ;;		On entry : 0/0
  6028 ;;		On exit  : 0/0
  6029 ;;		Unchanged: 0/0
  6030 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6031 ;;      Params:         6       0       0       0       0       0       0
  6032 ;;      Locals:         2       0       0       0       0       0       0
  6033 ;;      Temps:          0       0       0       0       0       0       0
  6034 ;;      Totals:         8       0       0       0       0       0       0
  6035 ;;Total ram usage:        8 bytes
  6036 ;; Hardware stack levels used:    1
  6037 ;; Hardware stack levels required when called:    6
  6038 ;; This function calls:
  6039 ;;		i2_vfpfcnvrt
  6040 ;; This function is called by:
  6041 ;;		i2_sprintf
  6042 ;; This function uses a non-reentrant model
  6043 ;;
  6044                           
  6045                           	psect	text36
  6046  0021DE                     __ptext36:
  6047                           	opt callstack 0
  6048  0021DE                     i2_vfprintf:
  6049                           	opt callstack 0
  6050  0021DE  FFFF               	dw	65535	; assembler added errata NOP
  6051                           
  6052                           ;C:\Developments\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1368: int vfprintf
      +                          (FILE *fp, const char *fmt, va_list ap);C:\Developments\Microchip\xc8\v2.05\pic\sources\
      +                          c99\common\doprnt.c: 1369: {;C:\Developments\Microchip\xc8\v2.05\pic\sources\c99\common\
      +                          doprnt.c: 1371:     char *cfmt;;C:\Developments\Microchip\xc8\v2.05\pic\sources\c99\comm
      +                          on\doprnt.c: 1373:     cfmt = (char *)fmt;
  6053                           
  6054                           ;incstack = 0
  6055  0021E0  C056  F05A         	movff	i2vfprintf@fmt,i2vfprintf@cfmt
  6056  0021E4  C057  F05B         	movff	i2vfprintf@fmt+1,i2vfprintf@cfmt+1
  6057                           
  6058                           ;C:\Developments\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1374:     nout = 0
      +                          ;
  6059  0021E8  0E00               	movlw	0
  6060  0021EA  0100               	movlb	0	; () banked
  6061  0021EC  6FEF               	movwf	(_nout+1)& (0+255),b
  6062  0021EE  0E00               	movlw	0
  6063  0021F0  6FEE               	movwf	_nout& (0+255),b
  6064                           
  6065                           ;C:\Developments\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1375:     while (*
      +                          cfmt) {
  6066  0021F2  D014               	goto	i2l3660
  6067  0021F4                     i2l3658:
  6068  0021F4  FFFF               	dw	65535	; assembler added errata NOP
  6069                           
  6070                           ; BSR set to: 0
  6071                           ;C:\Developments\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1376:         nout
      +                           += vfpfcnvrt(fp, &cfmt, ap);
  6072  0021F6  C054  F040         	movff	i2vfprintf@fp,i2vfpfcnvrt@fp
  6073  0021FA  C055  F041         	movff	i2vfprintf@fp+1,i2vfpfcnvrt@fp+1
  6074  0021FE  0E5A               	movlw	low i2vfprintf@cfmt
  6075  002200  6E42               	movwf	i2vfpfcnvrt@fmt,c
  6076  002202  0E00               	movlw	high i2vfprintf@cfmt
  6077  002204  6E43               	movwf	i2vfpfcnvrt@fmt+1,c
  6078  002206  C058  F044         	movff	i2vfprintf@ap,i2vfpfcnvrt@ap
  6079  00220A  C059  F045         	movff	i2vfprintf@ap+1,i2vfpfcnvrt@ap+1
  6080  00220E  EC69  F004         	call	i2_vfpfcnvrt	;wreg free
  6081  002212  5040               	movf	?i2_vfpfcnvrt,w,c
  6082  002214  0100               	movlb	0	; () banked
  6083  002216  27EE               	addwf	_nout& (0+255),f,b
  6084  002218  5041               	movf	?i2_vfpfcnvrt+1,w,c
  6085  00221A  23EF               	addwfc	(_nout+1)& (0+255),f,b
  6086  00221C                     i2l3660:
  6087  00221C  FFFF               	dw	65535	; assembler added errata NOP
  6088                           
  6089                           ; BSR set to: 0
  6090                           ;C:\Developments\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1375:     while (*
      +                          cfmt) {
  6091  00221E  C05A  FFF6         	movff	i2vfprintf@cfmt,tblptrl
  6092  002222  C05B  FFF7         	movff	i2vfprintf@cfmt+1,tblptrh
  6093  002226                     	if	0	;tblptru may be non-zero
  6094  002226                     	endif
  6095  002226                     	if	0	;tblptru may be non-zero
  6096  002226                     	endif
  6097  002226  0008               	tblrd		*
  6098  002228  FFFF               	dw	65535	; errata NOP
  6099  00222A  50F5               	movf	tablat,w,c
  6100  00222C  0900               	iorlw	0
  6101  00222E  A4D8               	btfss	status,2,c
  6102  002230  D7E1               	goto	i2l3658
  6103                           
  6104                           ; BSR set to: 0
  6105                           ;C:\Developments\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1378:     return n
      +                          out;
  6106  002232  C0EE  F054         	movff	_nout,?i2_vfprintf
  6107  002236  C0EF  F055         	movff	_nout+1,?i2_vfprintf+1
  6108                           
  6109                           ; BSR set to: 0
  6110  00223A  0012               	return		;funcret
  6111  00223C  FFFF               	dw	65535	; errata NOP
  6112  00223E                     __end_ofi2_vfprintf:
  6113                           	opt callstack 0
  6114                           
  6115 ;; *************** function i2_vfpfcnvrt *****************
  6116 ;; Defined at:
  6117 ;;		line 670 in file "C:\Developments\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  6118 ;; Parameters:    Size  Location     Type
  6119 ;;  fp              2   63[COMRAM] PTR struct _IO_FILE
  6120 ;;		 -> i2sprintf@f(6), sprintf@f(6), 
  6121 ;;  fmt             2   65[COMRAM] PTR PTR unsigned char 
  6122 ;;		 -> i2vfprintf@cfmt(2), vfprintf@cfmt(2), 
  6123 ;;  ap              2   67[COMRAM] PTR PTR void 
  6124 ;;		 -> i2sprintf@ap(2), sprintf@ap(2), 
  6125 ;; Auto vars:     Size  Location     Type
  6126 ;;  vfpfcnvrt       8   73[COMRAM] long long 
  6127 ;;  vfpfcnvrt       8    0        unsigned long long 
  6128 ;;  vfpfcnvrt       4    0        unsigned long long 
  6129 ;;  vfpfcnvrt       3    0        PTR void 
  6130 ;;  vfpfcnvrt       3    0        unsigned char [3]
  6131 ;;  vfpfcnvrt       3    0        PTR unsigned char 
  6132 ;;  vfpfcnvrt       2    0        int 
  6133 ;;  vfpfcnvrt       2    0        int 
  6134 ;;  vfpfcnvrt       1    0        unsigned char 
  6135 ;; Return value:  Size  Location     Type
  6136 ;;                  2   63[COMRAM] int 
  6137 ;; Registers used:
  6138 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6139 ;; Tracked objects:
  6140 ;;		On entry : 0/0
  6141 ;;		On exit  : 0/0
  6142 ;;		Unchanged: 0/0
  6143 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6144 ;;      Params:         6       0       0       0       0       0       0
  6145 ;;      Locals:        10       0       0       0       0       0       0
  6146 ;;      Temps:          4       0       0       0       0       0       0
  6147 ;;      Totals:        20       0       0       0       0       0       0
  6148 ;;Total ram usage:       20 bytes
  6149 ;; Hardware stack levels used:    1
  6150 ;; Hardware stack levels required when called:    5
  6151 ;; This function calls:
  6152 ;;		i2_atoi
  6153 ;;		i2_dtoa
  6154 ;;		i2_fputc
  6155 ;;		i2_isdigit
  6156 ;; This function is called by:
  6157 ;;		i2_vfprintf
  6158 ;; This function uses a non-reentrant model
  6159 ;;
  6160                           
  6161                           	psect	text37
  6162  0008D2                     __ptext37:
  6163                           	opt callstack 0
  6164  0008D2                     i2_vfpfcnvrt:
  6165                           	opt callstack 0
  6166  0008D2  FFFF               	dw	65535	; assembler added errata NOP
  6167                           
  6168                           ;C:\Developments\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 670: static int vf
      +                          pfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Developments\Microchip\xc8\v2.05\pic\sourc
      +                          es\c99\common\doprnt.c: 671: {;C:\Developments\Microchip\xc8\v2.05\pic\sources\c99\commo
      +                          n\doprnt.c: 672:     char c, *cp, ct[3];;C:\Developments\Microchip\xc8\v2.05\pic\sources
      +                          \c99\common\doprnt.c: 673:     int done, i;;C:\Developments\Microchip\xc8\v2.05\pic\sour
      +                          ces\c99\common\doprnt.c: 674:     long long ll;;C:\Developments\Microchip\xc8\v2.05\pic\
      +                          sources\c99\common\doprnt.c: 675:     unsigned long long llu;
  6169                           
  6170                           ; BSR set to: 0
  6171                           ;incstack = 0
  6172  0008D4  C042  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
  6173  0008D8  C043  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
  6174  0008DC  CFDE FFF6          	movff	postinc2,tblptrl
  6175  0008E0  CFDD FFF7          	movff	postdec2,tblptrh
  6176  0008E4                     	if	0	;tblptru may be non-zero
  6177  0008E4                     	endif
  6178  0008E4                     	if	0	;tblptru may be non-zero
  6179  0008E4                     	endif
  6180  0008E4  0008               	tblrd		*
  6181  0008E6  FFFF               	dw	65535	; errata NOP
  6182  0008E8  50F5               	movf	tablat,w,c
  6183  0008EA  0A25               	xorlw	37
  6184  0008EC  A4D8               	btfss	status,2,c
  6185  0008EE  D112               	goto	i2l3506
  6186                           
  6187                           ;C:\Developments\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 681:         ++*fm
      +                          t;
  6188  0008F0  C042  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
  6189  0008F4  C043  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
  6190  0008F8  2ADE               	incf	postinc2,f,c
  6191  0008FA  0E00               	movlw	0
  6192  0008FC  22DD               	addwfc	postdec2,f,c
  6193                           
  6194                           ;C:\Developments\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 683:         flags
      +                           = width = 0;
  6195  0008FE  0E00               	movlw	0
  6196  000900  0100               	movlb	0	; () banked
  6197  000902  6FF1               	movwf	(_width+1)& (0+255),b
  6198  000904  0E00               	movlw	0
  6199  000906  6FF0               	movwf	_width& (0+255),b
  6200  000908  C0F0  F0F4         	movff	_width,_flags
  6201  00090C  C0F1  F0F5         	movff	_width+1,_flags+1
  6202                           
  6203                           ; BSR set to: 0
  6204                           ;C:\Developments\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 684:         prec 
      +                          = -1;
  6205  000910  69F2               	setf	_prec& (0+255),b
  6206  000912  69F3               	setf	(_prec+1)& (0+255),b
  6207                           
  6208                           ; BSR set to: 0
  6209                           ;C:\Developments\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 723:         if ((
      +                          *fmt)[0] == '*') {
  6210  000914  C042  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
  6211  000918  C043  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
  6212  00091C  CFDE FFF6          	movff	postinc2,tblptrl
  6213  000920  CFDD FFF7          	movff	postdec2,tblptrh
  6214  000924                     	if	0	;tblptru may be non-zero
  6215  000924                     	endif
  6216  000924                     	if	0	;tblptru may be non-zero
  6217  000924                     	endif
  6218  000924  0008               	tblrd		*
  6219  000926  FFFF               	dw	65535	; errata NOP
  6220  000928  50F5               	movf	tablat,w,c
  6221  00092A  0A2A               	xorlw	42
  6222  00092C  A4D8               	btfss	status,2,c
  6223  00092E  D023               	goto	i2l3470
  6224                           
  6225                           ; BSR set to: 0
  6226                           ;C:\Developments\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 724:             +
      +                          +*fmt;
  6227  000930  C042  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
  6228  000934  C043  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
  6229  000938  2ADE               	incf	postinc2,f,c
  6230  00093A  0E00               	movlw	0
  6231  00093C  22DD               	addwfc	postdec2,f,c
  6232                           
  6233                           ;C:\Developments\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 725:             w
      +                          idth = (*(int *)__va_arg(*(int **)ap, (int)0));
  6234  00093E  C044  FFD9         	movff	i2vfpfcnvrt@ap,fsr2l
  6235  000942  C045  FFDA         	movff	i2vfpfcnvrt@ap+1,fsr2h
  6236  000946  CFDF F046          	movff	indf2,??i2_vfpfcnvrt
  6237  00094A  0E02               	movlw	2
  6238  00094C  26DE               	addwf	postinc2,f,c
  6239  00094E  CFDF F047          	movff	indf2,??i2_vfpfcnvrt+1
  6240  000952  0E00               	movlw	0
  6241  000954  22DD               	addwfc	postdec2,f,c
  6242  000956  C046  FFD9         	movff	??i2_vfpfcnvrt,fsr2l
  6243  00095A  C047  FFDA         	movff	??i2_vfpfcnvrt+1,fsr2h
  6244  00095E  CFDE F0F0          	movff	postinc2,_width
  6245  000962  CFDD F0F1          	movff	postdec2,_width+1
  6246                           
  6247                           ; BSR set to: 0
  6248                           ;C:\Developments\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 726:             i
      +                          f (width < 0) {
  6249  000966  AFF1               	btfss	(_width+1)& (0+255),7,b
  6250  000968  D045               	goto	i2u304_40
  6251                           
  6252                           ; BSR set to: 0
  6253                           ;C:\Developments\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 727:              
      +                             flags |= (1 << 0);
  6254  00096A  81F4               	bsf	_flags& (0+255),0,b
  6255                           
  6256                           ;C:\Developments\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 728:              
      +                             width = -width;
  6257  00096C  6DF0               	negf	_width& (0+255),b
  6258  00096E  1FF1               	comf	(_width+1)& (0+255),f,b
  6259  000970  B0D8               	btfsc	status,0,c
  6260  000972  2BF1               	incf	(_width+1)& (0+255),f,b
  6261  000974  D03F               	goto	i2u304_40
  6262  000976                     i2l3470:
  6263  000976  FFFF               	dw	65535	; assembler added errata NOP
  6264                           
  6265                           ; BSR set to: 0
  6266                           ;C:\Developments\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 731:             w
      +                          idth = atoi(*fmt);
  6267  000978  C042  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
  6268  00097C  C043  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
  6269  000980  CFDE F008          	movff	postinc2,i2atoi@s
  6270  000984  CFDD F009          	movff	postdec2,i2atoi@s+1
  6271  000988  EC9C  F009         	call	i2_atoi	;wreg free
  6272  00098C  C008  F0F0         	movff	?i2_atoi,_width
  6273  000990  C009  F0F1         	movff	?i2_atoi+1,_width+1
  6274                           
  6275                           ;C:\Developments\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 732:             w
      +                          hile ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  6276  000994  D008               	goto	i2l3474
  6277  000996                     i2l3472:
  6278  000996  FFFF               	dw	65535	; assembler added errata NOP
  6279                           
  6280                           ;C:\Developments\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 733:              
      +                             ++*fmt;
  6281  000998  C042  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
  6282  00099C  C043  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
  6283  0009A0  2ADE               	incf	postinc2,f,c
  6284  0009A2  0E00               	movlw	0
  6285  0009A4  22DD               	addwfc	postdec2,f,c
  6286  0009A6                     i2l3474:
  6287  0009A6  FFFF               	dw	65535	; assembler added errata NOP
  6288  0009A8  0ED0               	movlw	208
  6289  0009AA  6E46               	movwf	??i2_vfpfcnvrt& (0+255),c
  6290  0009AC  0EFF               	movlw	255
  6291  0009AE  6E47               	movwf	(??i2_vfpfcnvrt+1)& (0+255),c
  6292  0009B0  C042  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
  6293  0009B4  C043  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
  6294  0009B8  CFDE FFF6          	movff	postinc2,tblptrl
  6295  0009BC  CFDD FFF7          	movff	postdec2,tblptrh
  6296  0009C0                     	if	0	;tblptru may be non-zero
  6297  0009C0                     	endif
  6298  0009C0                     	if	0	;tblptru may be non-zero
  6299  0009C0                     	endif
  6300  0009C0  0008               	tblrd		*
  6301  0009C2  FFFF               	dw	65535	; errata NOP
  6302  0009C4  50F5               	movf	tablat,w,c
  6303  0009C6  6E48               	movwf	(??i2_vfpfcnvrt+2)& (0+255),c
  6304  0009C8  6A49               	clrf	(??i2_vfpfcnvrt+3)& (0+255),c
  6305  0009CA  5046               	movf	??i2_vfpfcnvrt,w,c
  6306  0009CC  2648               	addwf	??i2_vfpfcnvrt+2,f,c
  6307  0009CE  5047               	movf	??i2_vfpfcnvrt+1,w,c
  6308  0009D0  2249               	addwfc	??i2_vfpfcnvrt+3,f,c
  6309  0009D2  5049               	movf	??i2_vfpfcnvrt+3,w,c
  6310  0009D4  E106               	bnz	i2u302_40
  6311  0009D6  0E0A               	movlw	10
  6312  0009D8  5C48               	subwf	??i2_vfpfcnvrt+2,w,c
  6313  0009DA  B0D8               	btfsc	status,0,c
  6314  0009DC  D002               	goto	i2u302_40
  6315  0009DE  0E01               	movlw	1
  6316  0009E0  D002               	goto	i2u303_40
  6317  0009E2                     i2u302_40:
  6318  0009E2  FFFF               	dw	65535	; assembler added errata NOP
  6319  0009E4  0E00               	movlw	0
  6320  0009E6                     i2u303_40:
  6321  0009E6  FFFF               	dw	65535	; assembler added errata NOP
  6322  0009E8  6E52               	movwf	i2_vfpfcnvrt$1037,c
  6323  0009EA  6A53               	clrf	i2_vfpfcnvrt$1037+1,c
  6324  0009EC  5052               	movf	i2_vfpfcnvrt$1037,w,c
  6325  0009EE  1053               	iorwf	i2_vfpfcnvrt$1037+1,w,c
  6326  0009F0  A4D8               	btfss	status,2,c
  6327  0009F2  D7D1               	goto	i2l3472
  6328  0009F4                     i2u304_40:
  6329  0009F4  FFFF               	dw	65535	; assembler added errata NOP
  6330                           
  6331                           ;C:\Developments\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 825:         if ((
      +                          *fmt[0] == 'd') || (*fmt[0] == 'i')) {
  6332  0009F6  C042  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
  6333  0009FA  C043  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
  6334  0009FE  CFDE FFF6          	movff	postinc2,tblptrl
  6335  000A02  CFDD FFF7          	movff	postdec2,tblptrh
  6336  000A06                     	if	0	;tblptru may be non-zero
  6337  000A06                     	endif
  6338  000A06                     	if	0	;tblptru may be non-zero
  6339  000A06                     	endif
  6340  000A06  0008               	tblrd		*
  6341  000A08  FFFF               	dw	65535	; errata NOP
  6342  000A0A  50F5               	movf	tablat,w,c
  6343  000A0C  0A64               	xorlw	100
  6344  000A0E  B4D8               	btfsc	status,2,c
  6345  000A10  D00E               	goto	i2u306_40
  6346  000A12  C042  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
  6347  000A16  C043  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
  6348  000A1A  CFDE FFF6          	movff	postinc2,tblptrl
  6349  000A1E  CFDD FFF7          	movff	postdec2,tblptrh
  6350  000A22                     	if	0	;tblptru may be non-zero
  6351  000A22                     	endif
  6352  000A22                     	if	0	;tblptru may be non-zero
  6353  000A22                     	endif
  6354  000A22  0008               	tblrd		*
  6355  000A24  FFFF               	dw	65535	; errata NOP
  6356  000A26  50F5               	movf	tablat,w,c
  6357  000A28  0A69               	xorlw	105
  6358  000A2A  A4D8               	btfss	status,2,c
  6359  000A2C  D040               	goto	i2l3490
  6360  000A2E                     i2u306_40:
  6361  000A2E  FFFF               	dw	65535	; assembler added errata NOP
  6362                           
  6363                           ;C:\Developments\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 827:             +
      +                          +*fmt;
  6364  000A30  C042  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
  6365  000A34  C043  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
  6366  000A38  2ADE               	incf	postinc2,f,c
  6367  000A3A  0E00               	movlw	0
  6368  000A3C  22DD               	addwfc	postdec2,f,c
  6369                           
  6370                           ;C:\Developments\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 828:             l
      +                          l = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  6371  000A3E  C044  FFD9         	movff	i2vfpfcnvrt@ap,fsr2l
  6372  000A42  C045  FFDA         	movff	i2vfpfcnvrt@ap+1,fsr2h
  6373  000A46  CFDF F046          	movff	indf2,??i2_vfpfcnvrt
  6374  000A4A  0E02               	movlw	2
  6375  000A4C  26DE               	addwf	postinc2,f,c
  6376  000A4E  CFDF F047          	movff	indf2,??i2_vfpfcnvrt+1
  6377  000A52  0E00               	movlw	0
  6378  000A54  22DD               	addwfc	postdec2,f,c
  6379  000A56  C046  FFD9         	movff	??i2_vfpfcnvrt,fsr2l
  6380  000A5A  C047  FFDA         	movff	??i2_vfpfcnvrt+1,fsr2h
  6381  000A5E  CFDE F04A          	movff	postinc2,i2vfpfcnvrt@ll
  6382  000A62  CFDD F04B          	movff	postdec2,i2vfpfcnvrt@ll+1
  6383  000A66  0E00               	movlw	0
  6384  000A68  BE4B               	btfsc	i2vfpfcnvrt@ll+1,7,c
  6385  000A6A  0EFF               	movlw	-1
  6386  000A6C  6E4C               	movwf	i2vfpfcnvrt@ll+2,c
  6387  000A6E  6E4D               	movwf	i2vfpfcnvrt@ll+3,c
  6388  000A70  6E4E               	movwf	i2vfpfcnvrt@ll+4,c
  6389  000A72  6E4F               	movwf	i2vfpfcnvrt@ll+5,c
  6390  000A74  6E50               	movwf	i2vfpfcnvrt@ll+6,c
  6391  000A76  6E51               	movwf	i2vfpfcnvrt@ll+7,c
  6392                           
  6393                           ;C:\Developments\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 830:             r
      +                          eturn dtoa(fp, ll);
  6394  000A78  C040  F01C         	movff	i2vfpfcnvrt@fp,i2dtoa@fp
  6395  000A7C  C041  F01D         	movff	i2vfpfcnvrt@fp+1,i2dtoa@fp+1
  6396  000A80  C04A  F01E         	movff	i2vfpfcnvrt@ll,i2dtoa@d
  6397  000A84  C04B  F01F         	movff	i2vfpfcnvrt@ll+1,i2dtoa@d+1
  6398  000A88  C04C  F020         	movff	i2vfpfcnvrt@ll+2,i2dtoa@d+2
  6399  000A8C  C04D  F021         	movff	i2vfpfcnvrt@ll+3,i2dtoa@d+3
  6400  000A90  C04E  F022         	movff	i2vfpfcnvrt@ll+4,i2dtoa@d+4
  6401  000A94  C04F  F023         	movff	i2vfpfcnvrt@ll+5,i2dtoa@d+5
  6402  000A98  C050  F024         	movff	i2vfpfcnvrt@ll+6,i2dtoa@d+6
  6403  000A9C  C051  F025         	movff	i2vfpfcnvrt@ll+7,i2dtoa@d+7
  6404  000AA0  ECDF  F006         	call	i2_dtoa	;wreg free
  6405  000AA4  C01C  F040         	movff	?i2_dtoa,?i2_vfpfcnvrt
  6406  000AA8  C01D  F041         	movff	?i2_dtoa+1,?i2_vfpfcnvrt+1
  6407  000AAC  D04F               	goto	i2l603
  6408  000AAE                     i2l3490:
  6409  000AAE  FFFF               	dw	65535	; assembler added errata NOP
  6410                           
  6411                           ;C:\Developments\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1350:         if (
      +                          (*fmt)[0] == '%') {
  6412  000AB0  C042  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
  6413  000AB4  C043  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
  6414  000AB8  CFDE FFF6          	movff	postinc2,tblptrl
  6415  000ABC  CFDD FFF7          	movff	postdec2,tblptrh
  6416  000AC0                     	if	0	;tblptru may be non-zero
  6417  000AC0                     	endif
  6418  000AC0                     	if	0	;tblptru may be non-zero
  6419  000AC0                     	endif
  6420  000AC0  0008               	tblrd		*
  6421  000AC2  FFFF               	dw	65535	; errata NOP
  6422  000AC4  50F5               	movf	tablat,w,c
  6423  000AC6  0A25               	xorlw	37
  6424  000AC8  A4D8               	btfss	status,2,c
  6425  000ACA  D016               	goto	i2l3500
  6426                           
  6427                           ;C:\Developments\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1351:             
      +                          ++*fmt;
  6428  000ACC  C042  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
  6429  000AD0  C043  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
  6430  000AD4  2ADE               	incf	postinc2,f,c
  6431  000AD6  0E00               	movlw	0
  6432  000AD8  22DD               	addwfc	postdec2,f,c
  6433                           
  6434                           ;C:\Developments\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1352:             
      +                          fputc((int)'%', fp);
  6435  000ADA  0E00               	movlw	0
  6436  000ADC  6E02               	movwf	i2fputc@c+1,c
  6437  000ADE  0E25               	movlw	37
  6438  000AE0  6E01               	movwf	i2fputc@c,c
  6439  000AE2  C040  F003         	movff	i2vfpfcnvrt@fp,i2fputc@fp
  6440  000AE6  C041  F004         	movff	i2vfpfcnvrt@fp+1,i2fputc@fp+1
  6441  000AEA  EC7B  F00E         	call	i2_fputc	;wreg free
  6442  000AEE                     i2l3496:
  6443  000AEE  FFFF               	dw	65535	; assembler added errata NOP
  6444                           
  6445                           ;C:\Developments\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1353:             
      +                          return 1;
  6446  000AF0  0E00               	movlw	0
  6447  000AF2  6E41               	movwf	?i2_vfpfcnvrt+1,c
  6448  000AF4  0E01               	movlw	1
  6449  000AF6  D00B               	goto	L11
  6450  000AF8                     i2l3500:
  6451  000AF8  FFFF               	dw	65535	; assembler added errata NOP
  6452                           
  6453                           ;C:\Developments\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1357:         ++*f
      +                          mt;
  6454  000AFA  C042  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
  6455  000AFE  C043  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
  6456  000B02  2ADE               	incf	postinc2,f,c
  6457  000B04  0E00               	movlw	0
  6458  000B06  22DD               	addwfc	postdec2,f,c
  6459                           
  6460                           ;C:\Developments\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1358:         retu
      +                          rn 0;
  6461  000B08  0E00               	movlw	0
  6462  000B0A  6E41               	movwf	?i2_vfpfcnvrt+1,c
  6463  000B0C  0E00               	movlw	0
  6464  000B0E                     L11:
  6465  000B0E  FFFF               	dw	65535	; assembler added errata NOP
  6466  000B10  6E40               	movwf	?i2_vfpfcnvrt,c
  6467  000B12  D01C               	goto	i2l603
  6468  000B14                     i2l3506:
  6469  000B14  FFFF               	dw	65535	; assembler added errata NOP
  6470                           
  6471                           ;C:\Developments\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1362:     fputc((i
      +                          nt)(*fmt)[0], fp);
  6472  000B16  C042  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
  6473  000B1A  C043  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
  6474  000B1E  CFDE FFF6          	movff	postinc2,tblptrl
  6475  000B22  CFDD FFF7          	movff	postdec2,tblptrh
  6476  000B26                     	if	0	;tblptru may be non-zero
  6477  000B26                     	endif
  6478  000B26                     	if	0	;tblptru may be non-zero
  6479  000B26                     	endif
  6480  000B26  0008               	tblrd		*
  6481  000B28  FFFF               	dw	65535	; errata NOP
  6482  000B2A  50F5               	movf	tablat,w,c
  6483  000B2C  6E01               	movwf	i2fputc@c,c
  6484  000B2E  6A02               	clrf	i2fputc@c+1,c
  6485  000B30  C040  F003         	movff	i2vfpfcnvrt@fp,i2fputc@fp
  6486  000B34  C041  F004         	movff	i2vfpfcnvrt@fp+1,i2fputc@fp+1
  6487  000B38  EC7B  F00E         	call	i2_fputc	;wreg free
  6488                           
  6489                           ;C:\Developments\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1363:     ++*fmt;
  6490  000B3C  C042  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
  6491  000B40  C043  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
  6492  000B44  2ADE               	incf	postinc2,f,c
  6493  000B46  0E00               	movlw	0
  6494  000B48  22DD               	addwfc	postdec2,f,c
  6495  000B4A  D7D1               	goto	i2l3496
  6496  000B4C                     i2l603:
  6497  000B4C  FFFF               	dw	65535	; assembler added errata NOP
  6498  000B4E  0012               	return		;funcret
  6499  000B50  FFFF               	dw	65535	; errata NOP
  6500  000B52                     __end_ofi2_vfpfcnvrt:
  6501                           	opt callstack 0
  6502                           
  6503 ;; *************** function i2_dtoa *****************
  6504 ;; Defined at:
  6505 ;;		line 274 in file "C:\Developments\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  6506 ;; Parameters:    Size  Location     Type
  6507 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  6508 ;;		 -> i2sprintf@f(6), sprintf@f(6), 
  6509 ;;  d               8   29[COMRAM] long long 
  6510 ;; Auto vars:     Size  Location     Type
  6511 ;;  dtoa            8   53[COMRAM] long long 
  6512 ;;  dtoa            2   61[COMRAM] int 
  6513 ;;  dtoa            2   51[COMRAM] int 
  6514 ;;  dtoa            2   49[COMRAM] int 
  6515 ;;  dtoa            2   47[COMRAM] int 
  6516 ;; Return value:  Size  Location     Type
  6517 ;;                  2   27[COMRAM] int 
  6518 ;; Registers used:
  6519 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6520 ;; Tracked objects:
  6521 ;;		On entry : 0/0
  6522 ;;		On exit  : 0/0
  6523 ;;		Unchanged: 0/0
  6524 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6525 ;;      Params:        10       0       0       0       0       0       0
  6526 ;;      Locals:        18       0       0       0       0       0       0
  6527 ;;      Temps:          8       0       0       0       0       0       0
  6528 ;;      Totals:        36       0       0       0       0       0       0
  6529 ;;Total ram usage:       36 bytes
  6530 ;; Hardware stack levels used:    1
  6531 ;; Hardware stack levels required when called:    4
  6532 ;; This function calls:
  6533 ;;		i2___aodiv
  6534 ;;		i2___aomod
  6535 ;;		i2_abs
  6536 ;;		i2_pad
  6537 ;; This function is called by:
  6538 ;;		i2_vfpfcnvrt
  6539 ;; This function uses a non-reentrant model
  6540 ;;
  6541                           
  6542                           	psect	text38
  6543  000DBE                     __ptext38:
  6544                           	opt callstack 0
  6545  000DBE                     i2_dtoa:
  6546                           	opt callstack 0
  6547  000DBE  FFFF               	dw	65535	; assembler added errata NOP
  6548                           
  6549                           ;C:\Developments\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 274: static int dt
      +                          oa(FILE *fp, long long d);C:\Developments\Microchip\xc8\v2.05\pic\sources\c99\common\dop
      +                          rnt.c: 275: {;C:\Developments\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 276: 
      +                              int i, p, s, w;;C:\Developments\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c:
      +                           277:     long long n;;C:\Developments\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt
      +                          .c: 280:     n = d;
  6550                           
  6551                           ;incstack = 0
  6552  000DC0  C01E  F036         	movff	i2dtoa@d,i2dtoa@n
  6553  000DC4  C01F  F037         	movff	i2dtoa@d+1,i2dtoa@n+1
  6554  000DC8  C020  F038         	movff	i2dtoa@d+2,i2dtoa@n+2
  6555  000DCC  C021  F039         	movff	i2dtoa@d+3,i2dtoa@n+3
  6556  000DD0  C022  F03A         	movff	i2dtoa@d+4,i2dtoa@n+4
  6557  000DD4  C023  F03B         	movff	i2dtoa@d+5,i2dtoa@n+5
  6558  000DD8  C024  F03C         	movff	i2dtoa@d+6,i2dtoa@n+6
  6559  000DDC  C025  F03D         	movff	i2dtoa@d+7,i2dtoa@n+7
  6560                           
  6561                           ;C:\Developments\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 281:     s = n < 0
      +                           ? 1 : 0;
  6562  000DE0  AE3D               	btfss	i2dtoa@n+7,7,c
  6563  000DE2  D002               	goto	i2u268_40
  6564  000DE4  0E01               	movlw	1
  6565  000DE6  D002               	goto	i2u269_40
  6566  000DE8                     i2u268_40:
  6567  000DE8  FFFF               	dw	65535	; assembler added errata NOP
  6568  000DEA  0E00               	movlw	0
  6569  000DEC                     i2u269_40:
  6570  000DEC  FFFF               	dw	65535	; assembler added errata NOP
  6571  000DEE  6E34               	movwf	i2dtoa@s,c
  6572  000DF0  6A35               	clrf	i2dtoa@s+1,c
  6573                           
  6574                           ;C:\Developments\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 282:     if (s) {
  6575  000DF2  5034               	movf	i2dtoa@s,w,c
  6576  000DF4  1035               	iorwf	i2dtoa@s+1,w,c
  6577  000DF6  B4D8               	btfsc	status,2,c
  6578  000DF8  D010               	goto	i2l3240
  6579                           
  6580                           ;C:\Developments\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 283:         n = -
      +                          n;
  6581  000DFA  1E3D               	comf	i2dtoa@n+7,f,c
  6582  000DFC  1E3C               	comf	i2dtoa@n+6,f,c
  6583  000DFE  1E3B               	comf	i2dtoa@n+5,f,c
  6584  000E00  1E3A               	comf	i2dtoa@n+4,f,c
  6585  000E02  1E39               	comf	i2dtoa@n+3,f,c
  6586  000E04  1E38               	comf	i2dtoa@n+2,f,c
  6587  000E06  1E37               	comf	i2dtoa@n+1,f,c
  6588  000E08  6C36               	negf	i2dtoa@n,c
  6589  000E0A  0E00               	movlw	0
  6590  000E0C  2237               	addwfc	i2dtoa@n+1,f,c
  6591  000E0E  2238               	addwfc	i2dtoa@n+2,f,c
  6592  000E10  2239               	addwfc	i2dtoa@n+3,f,c
  6593  000E12  223A               	addwfc	i2dtoa@n+4,f,c
  6594  000E14  223B               	addwfc	i2dtoa@n+5,f,c
  6595  000E16  223C               	addwfc	i2dtoa@n+6,f,c
  6596  000E18  223D               	addwfc	i2dtoa@n+7,f,c
  6597  000E1A                     i2l3240:
  6598  000E1A  FFFF               	dw	65535	; assembler added errata NOP
  6599                           
  6600                           ;C:\Developments\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 287:     if (!(pre
      +                          c < 0)) {
  6601  000E1C  0100               	movlb	0	; () banked
  6602  000E1E  AFF3               	btfss	(_prec+1)& (0+255),7,b
  6603                           
  6604                           ; BSR set to: 0
  6605                           ;C:\Developments\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 288:         flags
      +                           &= ~(1 << 1);
  6606  000E20  93F4               	bcf	_flags& (0+255),1,b
  6607                           
  6608                           ; BSR set to: 0
  6609                           ;C:\Developments\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 290:     p = (0 < 
      +                          prec) ? prec : 1;
  6610  000E22  BFF3               	btfsc	(_prec+1)& (0+255),7,b
  6611  000E24  D005               	goto	i2u272_40
  6612  000E26  51F3               	movf	(_prec+1)& (0+255),w,b
  6613  000E28  E109               	bnz	i2l566
  6614  000E2A  05F2               	decf	_prec& (0+255),w,b
  6615  000E2C  B0D8               	btfsc	status,0,c
  6616  000E2E  D006               	goto	i2l566
  6617  000E30                     i2u272_40:
  6618  000E30  FFFF               	dw	65535	; assembler added errata NOP
  6619                           
  6620                           ; BSR set to: 0
  6621  000E32  0E00               	movlw	0
  6622  000E34  6E31               	movwf	i2dtoa@p+1,c
  6623  000E36  0E01               	movlw	1
  6624  000E38  6E30               	movwf	i2dtoa@p,c
  6625  000E3A  D005               	goto	i2l568
  6626  000E3C                     i2l566:
  6627  000E3C  FFFF               	dw	65535	; assembler added errata NOP
  6628                           
  6629                           ; BSR set to: 0
  6630  000E3E  C0F2  F030         	movff	_prec,i2dtoa@p
  6631  000E42  C0F3  F031         	movff	_prec+1,i2dtoa@p+1
  6632  000E46                     i2l568:
  6633  000E46  FFFF               	dw	65535	; assembler added errata NOP
  6634                           
  6635                           ; BSR set to: 0
  6636                           ;C:\Developments\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 291:     w = width
      +                          ;
  6637  000E48  C0F0  F032         	movff	_width,i2dtoa@w
  6638  000E4C  C0F1  F033         	movff	_width+1,i2dtoa@w+1
  6639                           
  6640                           ; BSR set to: 0
  6641                           ;C:\Developments\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 292:     if (s || 
      +                          (flags & (1 << 2))) {
  6642  000E50  5034               	movf	i2dtoa@s,w,c
  6643  000E52  1035               	iorwf	i2dtoa@s+1,w,c
  6644  000E54  A4D8               	btfss	status,2,c
  6645  000E56  D002               	goto	i2u274_40
  6646                           
  6647                           ; BSR set to: 0
  6648  000E58  A5F4               	btfss	_flags& (0+255),2,b
  6649  000E5A  D004               	goto	i2l3254
  6650  000E5C                     i2u274_40:
  6651  000E5C  FFFF               	dw	65535	; assembler added errata NOP
  6652                           
  6653                           ; BSR set to: 0
  6654                           ;C:\Developments\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 293:         --w;
  6655  000E5E  0632               	decf	i2dtoa@w,f,c
  6656  000E60  A0D8               	btfss	status,0,c
  6657  000E62  0633               	decf	i2dtoa@w+1,f,c
  6658  000E64                     i2l3254:
  6659  000E64  FFFF               	dw	65535	; assembler added errata NOP
  6660                           
  6661                           ; BSR set to: 0
  6662                           ;C:\Developments\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 297:     i = sizeo
      +                          f(dbuf) - 1;
  6663  000E66  0E00               	movlw	0
  6664  000E68  6E3F               	movwf	i2dtoa@i+1,c
  6665  000E6A  0E1F               	movlw	31
  6666  000E6C  6E3E               	movwf	i2dtoa@i,c
  6667                           
  6668                           ; BSR set to: 0
  6669                           ;C:\Developments\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 298:     dbuf[i] =
      +                           '\0';
  6670  000E6E  0E00               	movlw	0
  6671  000E70  0101               	movlb	1	; () banked
  6672  000E72  6F1F               	movwf	(_dbuf+31)& (0+255),b
  6673                           
  6674                           ;C:\Developments\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 299:     while (!(
      +                          i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  6675  000E74  D07D               	goto	i2l3268
  6676  000E76                     i2l3258:
  6677  000E76  FFFF               	dw	65535	; assembler added errata NOP
  6678                           
  6679                           ;C:\Developments\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 300:         --i;
  6680  000E78  063E               	decf	i2dtoa@i,f,c
  6681  000E7A  A0D8               	btfss	status,0,c
  6682  000E7C  063F               	decf	i2dtoa@i+1,f,c
  6683                           
  6684                           ;C:\Developments\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 301:         dbuf[
      +                          i] = '0' + abs(n % 10);
  6685  000E7E  0E00               	movlw	low _dbuf
  6686  000E80  243E               	addwf	i2dtoa@i,w,c
  6687  000E82  6ED9               	movwf	fsr2l,c
  6688  000E84  0E01               	movlw	high _dbuf
  6689  000E86  203F               	addwfc	i2dtoa@i+1,w,c
  6690  000E88  6EDA               	movwf	fsr2h,c
  6691  000E8A  C036  F001         	movff	i2dtoa@n,i2___aomod@dividend
  6692  000E8E  C037  F002         	movff	i2dtoa@n+1,i2___aomod@dividend+1
  6693  000E92  C038  F003         	movff	i2dtoa@n+2,i2___aomod@dividend+2
  6694  000E96  C039  F004         	movff	i2dtoa@n+3,i2___aomod@dividend+3
  6695  000E9A  C03A  F005         	movff	i2dtoa@n+4,i2___aomod@dividend+4
  6696  000E9E  C03B  F006         	movff	i2dtoa@n+5,i2___aomod@dividend+5
  6697  000EA2  C03C  F007         	movff	i2dtoa@n+6,i2___aomod@dividend+6
  6698  000EA6  C03D  F008         	movff	i2dtoa@n+7,i2___aomod@dividend+7
  6699  000EAA  0E0A               	movlw	10
  6700  000EAC  6E09               	movwf	i2___aomod@divisor,c
  6701  000EAE  0E00               	movlw	0
  6702  000EB0  6E0A               	movwf	i2___aomod@divisor+1,c
  6703  000EB2  0E00               	movlw	0
  6704  000EB4  6E0B               	movwf	i2___aomod@divisor+2,c
  6705  000EB6  0E00               	movlw	0
  6706  000EB8  6E0C               	movwf	i2___aomod@divisor+3,c
  6707  000EBA  0E00               	movlw	0
  6708  000EBC  6E0D               	movwf	i2___aomod@divisor+4,c
  6709  000EBE  0E00               	movlw	0
  6710  000EC0  6E0E               	movwf	i2___aomod@divisor+5,c
  6711  000EC2  0E00               	movlw	0
  6712  000EC4  6E0F               	movwf	i2___aomod@divisor+6,c
  6713  000EC6  0E00               	movlw	0
  6714  000EC8  6E10               	movwf	i2___aomod@divisor+7,c
  6715  000ECA  EC49  F00C         	call	i2___aomod	;wreg free
  6716  000ECE  C001  F026         	movff	?i2___aomod,??i2_dtoa
  6717  000ED2  C002  F027         	movff	?i2___aomod+1,??i2_dtoa+1
  6718  000ED6  C003  F028         	movff	?i2___aomod+2,??i2_dtoa+2
  6719  000EDA  C004  F029         	movff	?i2___aomod+3,??i2_dtoa+3
  6720  000EDE  C005  F02A         	movff	?i2___aomod+4,??i2_dtoa+4
  6721  000EE2  C006  F02B         	movff	?i2___aomod+5,??i2_dtoa+5
  6722  000EE6  C007  F02C         	movff	?i2___aomod+6,??i2_dtoa+6
  6723  000EEA  C008  F02D         	movff	?i2___aomod+7,??i2_dtoa+7
  6724  000EEE  C026  F013         	movff	??i2_dtoa,i2abs@a
  6725  000EF2  C028  F014         	movff	??i2_dtoa+2,i2abs@a+1
  6726  000EF6  EC6F  F013         	call	i2_abs	;wreg free
  6727  000EFA  5013               	movf	?i2_abs,w,c
  6728  000EFC  0F30               	addlw	48
  6729  000EFE  6EDF               	movwf	indf2,c
  6730                           
  6731                           ;C:\Developments\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 302:         --p;
  6732  000F00  0630               	decf	i2dtoa@p,f,c
  6733  000F02  A0D8               	btfss	status,0,c
  6734  000F04  0631               	decf	i2dtoa@p+1,f,c
  6735                           
  6736                           ;C:\Developments\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 303:         --w;
  6737  000F06  0632               	decf	i2dtoa@w,f,c
  6738  000F08  A0D8               	btfss	status,0,c
  6739  000F0A  0633               	decf	i2dtoa@w+1,f,c
  6740                           
  6741                           ;C:\Developments\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 304:         n = n
      +                           / 10;
  6742  000F0C  C036  F001         	movff	i2dtoa@n,i2___aodiv@dividend
  6743  000F10  C037  F002         	movff	i2dtoa@n+1,i2___aodiv@dividend+1
  6744  000F14  C038  F003         	movff	i2dtoa@n+2,i2___aodiv@dividend+2
  6745  000F18  C039  F004         	movff	i2dtoa@n+3,i2___aodiv@dividend+3
  6746  000F1C  C03A  F005         	movff	i2dtoa@n+4,i2___aodiv@dividend+4
  6747  000F20  C03B  F006         	movff	i2dtoa@n+5,i2___aodiv@dividend+5
  6748  000F24  C03C  F007         	movff	i2dtoa@n+6,i2___aodiv@dividend+6
  6749  000F28  C03D  F008         	movff	i2dtoa@n+7,i2___aodiv@dividend+7
  6750  000F2C  0E0A               	movlw	10
  6751  000F2E  6E09               	movwf	i2___aodiv@divisor,c
  6752  000F30  0E00               	movlw	0
  6753  000F32  6E0A               	movwf	i2___aodiv@divisor+1,c
  6754  000F34  0E00               	movlw	0
  6755  000F36  6E0B               	movwf	i2___aodiv@divisor+2,c
  6756  000F38  0E00               	movlw	0
  6757  000F3A  6E0C               	movwf	i2___aodiv@divisor+3,c
  6758  000F3C  0E00               	movlw	0
  6759  000F3E  6E0D               	movwf	i2___aodiv@divisor+4,c
  6760  000F40  0E00               	movlw	0
  6761  000F42  6E0E               	movwf	i2___aodiv@divisor+5,c
  6762  000F44  0E00               	movlw	0
  6763  000F46  6E0F               	movwf	i2___aodiv@divisor+6,c
  6764  000F48  0E00               	movlw	0
  6765  000F4A  6E10               	movwf	i2___aodiv@divisor+7,c
  6766  000F4C  ECFE  F00A         	call	i2___aodiv	;wreg free
  6767  000F50  C001  F036         	movff	?i2___aodiv,i2dtoa@n
  6768  000F54  C002  F037         	movff	?i2___aodiv+1,i2dtoa@n+1
  6769  000F58  C003  F038         	movff	?i2___aodiv+2,i2dtoa@n+2
  6770  000F5C  C004  F039         	movff	?i2___aodiv+3,i2dtoa@n+3
  6771  000F60  C005  F03A         	movff	?i2___aodiv+4,i2dtoa@n+4
  6772  000F64  C006  F03B         	movff	?i2___aodiv+5,i2dtoa@n+5
  6773  000F68  C007  F03C         	movff	?i2___aodiv+6,i2dtoa@n+6
  6774  000F6C  C008  F03D         	movff	?i2___aodiv+7,i2dtoa@n+7
  6775  000F70                     i2l3268:
  6776  000F70  FFFF               	dw	65535	; assembler added errata NOP
  6777                           
  6778                           ;C:\Developments\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 299:     while (!(
      +                          i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  6779  000F72  BE3F               	btfsc	i2dtoa@i+1,7,c
  6780  000F74  D021               	goto	i2u279_40
  6781  000F76  503F               	movf	i2dtoa@i+1,w,c
  6782  000F78  E103               	bnz	i2u275_40
  6783  000F7A  043E               	decf	i2dtoa@i,w,c
  6784  000F7C  A0D8               	btfss	status,0,c
  6785  000F7E  D01C               	goto	i2u279_40
  6786  000F80                     i2u275_40:
  6787  000F80  5036               	movf	i2dtoa@n,w,c
  6788  000F82  1037               	iorwf	i2dtoa@n+1,w,c
  6789  000F84  1038               	iorwf	i2dtoa@n+2,w,c
  6790  000F86  1039               	iorwf	i2dtoa@n+3,w,c
  6791  000F88  103A               	iorwf	i2dtoa@n+4,w,c
  6792  000F8A  103B               	iorwf	i2dtoa@n+5,w,c
  6793  000F8C  103C               	iorwf	i2dtoa@n+6,w,c
  6794  000F8E  103D               	iorwf	i2dtoa@n+7,w,c
  6795  000F90  A4D8               	btfss	status,2,c
  6796  000F92  D771               	goto	i2l3258
  6797  000F94  BE31               	btfsc	i2dtoa@p+1,7,c
  6798  000F96  D005               	goto	i2u277_40
  6799  000F98  5031               	movf	i2dtoa@p+1,w,c
  6800  000F9A  E102               	bnz	i2u277_41
  6801  000F9C  0430               	decf	i2dtoa@p,w,c
  6802  000F9E  B0D8               	btfsc	status,0,c
  6803  000FA0                     i2u277_41:
  6804  000FA0  D76A               	goto	i2l3258
  6805  000FA2                     i2u277_40:
  6806  000FA2  FFFF               	dw	65535	; assembler added errata NOP
  6807  000FA4  BE33               	btfsc	i2dtoa@w+1,7,c
  6808  000FA6  D008               	goto	i2u279_40
  6809  000FA8  5033               	movf	i2dtoa@w+1,w,c
  6810  000FAA  E103               	bnz	i2u278_40
  6811  000FAC  0432               	decf	i2dtoa@w,w,c
  6812  000FAE  A0D8               	btfss	status,0,c
  6813  000FB0  D003               	goto	i2u279_40
  6814  000FB2                     i2u278_40:
  6815  000FB2  0100               	movlb	0	; () banked
  6816  000FB4  B3F4               	btfsc	_flags& (0+255),1,b
  6817  000FB6  D75F               	goto	i2l3258
  6818  000FB8                     i2u279_40:
  6819  000FB8  FFFF               	dw	65535	; assembler added errata NOP
  6820                           
  6821                           ;C:\Developments\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 308:     if (s || 
      +                          (flags & (1 << 2))) {
  6822  000FBA  5034               	movf	i2dtoa@s,w,c
  6823  000FBC  1035               	iorwf	i2dtoa@s+1,w,c
  6824  000FBE  A4D8               	btfss	status,2,c
  6825  000FC0  D003               	goto	i2u281_40
  6826  000FC2  0100               	movlb	0	; () banked
  6827  000FC4  A5F4               	btfss	_flags& (0+255),2,b
  6828  000FC6  D01A               	goto	i2l3292
  6829  000FC8                     i2u281_40:
  6830  000FC8  FFFF               	dw	65535	; assembler added errata NOP
  6831                           
  6832                           ;C:\Developments\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 309:         --i;
  6833  000FCA  063E               	decf	i2dtoa@i,f,c
  6834  000FCC  A0D8               	btfss	status,0,c
  6835  000FCE  063F               	decf	i2dtoa@i+1,f,c
  6836                           
  6837                           ;C:\Developments\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 310:         dbuf[
      +                          i] = s ? '-' : '+';
  6838  000FD0  5034               	movf	i2dtoa@s,w,c
  6839  000FD2  1035               	iorwf	i2dtoa@s+1,w,c
  6840  000FD4  A4D8               	btfss	status,2,c
  6841  000FD6  D004               	goto	i2l3288
  6842  000FD8  0E00               	movlw	0
  6843  000FDA  6E2F               	movwf	i2_dtoa$1022+1,c
  6844  000FDC  0E2B               	movlw	43
  6845  000FDE  D004               	goto	L12
  6846  000FE0                     i2l3288:
  6847  000FE0  FFFF               	dw	65535	; assembler added errata NOP
  6848  000FE2  0E00               	movlw	0
  6849  000FE4  6E2F               	movwf	i2_dtoa$1022+1,c
  6850  000FE6  0E2D               	movlw	45
  6851  000FE8                     L12:
  6852  000FE8  FFFF               	dw	65535	; assembler added errata NOP
  6853  000FEA  6E2E               	movwf	i2_dtoa$1022,c
  6854  000FEC  0E00               	movlw	low _dbuf
  6855  000FEE  243E               	addwf	i2dtoa@i,w,c
  6856  000FF0  6ED9               	movwf	fsr2l,c
  6857  000FF2  0E01               	movlw	high _dbuf
  6858  000FF4  203F               	addwfc	i2dtoa@i+1,w,c
  6859  000FF6  6EDA               	movwf	fsr2h,c
  6860  000FF8  C02E  FFDF         	movff	i2_dtoa$1022,indf2
  6861  000FFC                     i2l3292:
  6862  000FFC  FFFF               	dw	65535	; assembler added errata NOP
  6863                           
  6864                           ;C:\Developments\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 314:     return pa
      +                          d(fp, &dbuf[i], w);
  6865  000FFE  C01C  F011         	movff	i2dtoa@fp,i2pad@fp
  6866  001002  C01D  F012         	movff	i2dtoa@fp+1,i2pad@fp+1
  6867  001006  0E00               	movlw	low _dbuf
  6868  001008  243E               	addwf	i2dtoa@i,w,c
  6869  00100A  6E13               	movwf	i2pad@buf,c
  6870  00100C  0E01               	movlw	high _dbuf
  6871  00100E  203F               	addwfc	i2dtoa@i+1,w,c
  6872  001010  6E14               	movwf	i2pad@buf+1,c
  6873  001012  C032  F015         	movff	i2dtoa@w,i2pad@p
  6874  001016  C033  F016         	movff	i2dtoa@w+1,i2pad@p+1
  6875  00101A  ECD1  F00E         	call	i2_pad	;wreg free
  6876  00101E  C011  F01C         	movff	?i2_pad,?i2_dtoa
  6877  001022  C012  F01D         	movff	?i2_pad+1,?i2_dtoa+1
  6878  001026  0012               	return		;funcret
  6879  001028  FFFF               	dw	65535	; errata NOP
  6880  00102A                     __end_ofi2_dtoa:
  6881                           	opt callstack 0
  6882                           
  6883 ;; *************** function i2_pad *****************
  6884 ;; Defined at:
  6885 ;;		line 72 in file "C:\Developments\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  6886 ;; Parameters:    Size  Location     Type
  6887 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  6888 ;;		 -> i2sprintf@f(6), sprintf@f(6), 
  6889 ;;  buf             2   18[COMRAM] PTR unsigned char 
  6890 ;;		 -> dbuf(32), 
  6891 ;;  p               2   20[COMRAM] int 
  6892 ;; Auto vars:     Size  Location     Type
  6893 ;;  pad             2   25[COMRAM] int 
  6894 ;;  pad             2   23[COMRAM] int 
  6895 ;; Return value:  Size  Location     Type
  6896 ;;                  2   16[COMRAM] int 
  6897 ;; Registers used:
  6898 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6899 ;; Tracked objects:
  6900 ;;		On entry : 0/0
  6901 ;;		On exit  : 0/0
  6902 ;;		Unchanged: 0/0
  6903 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6904 ;;      Params:         6       0       0       0       0       0       0
  6905 ;;      Locals:         4       0       0       0       0       0       0
  6906 ;;      Temps:          1       0       0       0       0       0       0
  6907 ;;      Totals:        11       0       0       0       0       0       0
  6908 ;;Total ram usage:       11 bytes
  6909 ;; Hardware stack levels used:    1
  6910 ;; Hardware stack levels required when called:    3
  6911 ;; This function calls:
  6912 ;;		i2_fputc
  6913 ;;		i2_fputs
  6914 ;;		i2_strlen
  6915 ;; This function is called by:
  6916 ;;		i2_dtoa
  6917 ;; This function uses a non-reentrant model
  6918 ;;
  6919                           
  6920                           	psect	text39
  6921  001DA2                     __ptext39:
  6922                           	opt callstack 0
  6923  001DA2                     i2_pad:
  6924                           	opt callstack 0
  6925  001DA2  FFFF               	dw	65535	; assembler added errata NOP
  6926                           
  6927                           ;C:\Developments\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 72: static int pad
      +                          (FILE *fp, char *buf, int p);C:\Developments\Microchip\xc8\v2.05\pic\sources\c99\common\
      +                          doprnt.c: 73: {;C:\Developments\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 74:
      +                               int i, w;;C:\Developments\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 77: 
      +                              if (flags & (1 << 0)) {
  6928                           
  6929                           ;incstack = 0
  6930  001DA4  0100               	movlb	0	; () banked
  6931  001DA6  A1F4               	btfss	_flags& (0+255),0,b
  6932  001DA8  D00A               	goto	i2l3004
  6933                           
  6934                           ; BSR set to: 0
  6935                           ;C:\Developments\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 78:         fputs(
      +                          (const char *)buf, fp);
  6936  001DAA  C013  F00A         	movff	i2pad@buf,i2fputs@s
  6937  001DAE  C014  F00B         	movff	i2pad@buf+1,i2fputs@s+1
  6938  001DB2  C011  F00C         	movff	i2pad@fp,i2fputs@fp
  6939  001DB6  C012  F00D         	movff	i2pad@fp+1,i2fputs@fp+1
  6940  001DBA  ECEF  F012         	call	i2_fputs	;wreg free
  6941  001DBE                     i2l3004:
  6942  001DBE  FFFF               	dw	65535	; assembler added errata NOP
  6943                           
  6944                           ;C:\Developments\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 82:     w = (p < 0
      +                          ) ? 0 : p;
  6945  001DC0  BE16               	btfsc	i2pad@p+1,7,c
  6946  001DC2  D005               	goto	i2l3008
  6947  001DC4  C015  F01A         	movff	i2pad@p,i2pad@w
  6948  001DC8  C016  F01B         	movff	i2pad@p+1,i2pad@w+1
  6949  001DCC  D005               	goto	i2l555
  6950  001DCE                     i2l3008:
  6951  001DCE  FFFF               	dw	65535	; assembler added errata NOP
  6952  001DD0  0E00               	movlw	0
  6953  001DD2  6E1B               	movwf	i2pad@w+1,c
  6954  001DD4  0E00               	movlw	0
  6955  001DD6  6E1A               	movwf	i2pad@w,c
  6956  001DD8                     i2l555:
  6957  001DD8  FFFF               	dw	65535	; assembler added errata NOP
  6958                           
  6959                           ;C:\Developments\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  6960  001DDA  0E00               	movlw	0
  6961  001DDC  6E19               	movwf	i2pad@i+1,c
  6962  001DDE  0E00               	movlw	0
  6963  001DE0  6E18               	movwf	i2pad@i,c
  6964                           
  6965                           ;C:\Developments\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 84:     while (i <
      +                           w) {
  6966  001DE2  D00D               	goto	i2l3014
  6967  001DE4                     i2l3010:
  6968  001DE4  FFFF               	dw	65535	; assembler added errata NOP
  6969                           
  6970                           ;C:\Developments\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 85:         fputc(
      +                          ' ', fp);
  6971  001DE6  0E00               	movlw	0
  6972  001DE8  6E02               	movwf	i2fputc@c+1,c
  6973  001DEA  0E20               	movlw	32
  6974  001DEC  6E01               	movwf	i2fputc@c,c
  6975  001DEE  C011  F003         	movff	i2pad@fp,i2fputc@fp
  6976  001DF2  C012  F004         	movff	i2pad@fp+1,i2fputc@fp+1
  6977  001DF6  EC7B  F00E         	call	i2_fputc	;wreg free
  6978                           
  6979                           ;C:\Developments\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 86:         ++i;
  6980  001DFA  4A18               	infsnz	i2pad@i,f,c
  6981  001DFC  2A19               	incf	i2pad@i+1,f,c
  6982  001DFE                     i2l3014:
  6983  001DFE  FFFF               	dw	65535	; assembler added errata NOP
  6984                           
  6985                           ;C:\Developments\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 84:     while (i <
      +                           w) {
  6986  001E00  501A               	movf	i2pad@w,w,c
  6987  001E02  5C18               	subwf	i2pad@i,w,c
  6988  001E04  5019               	movf	i2pad@i+1,w,c
  6989  001E06  0A80               	xorlw	128
  6990  001E08  6E17               	movwf	??i2_pad& (0+255),c
  6991  001E0A  501B               	movf	i2pad@w+1,w,c
  6992  001E0C  0A80               	xorlw	128
  6993  001E0E  5817               	subwfb	??i2_pad& (0+255),w,c
  6994  001E10  A0D8               	btfss	status,0,c
  6995  001E12  D7E8               	goto	i2l3010
  6996                           
  6997                           ;C:\Developments\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 90:     if (!(flag
      +                          s & (1 << 0))) {
  6998  001E14  0100               	movlb	0	; () banked
  6999  001E16  B1F4               	btfsc	_flags& (0+255),0,b
  7000  001E18  D00A               	goto	i2l3018
  7001                           
  7002                           ; BSR set to: 0
  7003                           ;C:\Developments\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 91:         fputs(
      +                          (const char *)buf, fp);
  7004  001E1A  C013  F00A         	movff	i2pad@buf,i2fputs@s
  7005  001E1E  C014  F00B         	movff	i2pad@buf+1,i2fputs@s+1
  7006  001E22  C011  F00C         	movff	i2pad@fp,i2fputs@fp
  7007  001E26  C012  F00D         	movff	i2pad@fp+1,i2fputs@fp+1
  7008  001E2A  ECEF  F012         	call	i2_fputs	;wreg free
  7009  001E2E                     i2l3018:
  7010  001E2E  FFFF               	dw	65535	; assembler added errata NOP
  7011                           
  7012                           ;C:\Developments\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 94:     return str
      +                          len(buf) + w;
  7013  001E30  C013  F001         	movff	i2pad@buf,i2strlen@s
  7014  001E34  C014  F002         	movff	i2pad@buf+1,i2strlen@s+1
  7015  001E38  ECFD  F013         	call	i2_strlen	;wreg free
  7016  001E3C  501A               	movf	i2pad@w,w,c
  7017  001E3E  2401               	addwf	?i2_strlen,w,c
  7018  001E40  6E11               	movwf	?i2_pad,c
  7019  001E42  501B               	movf	i2pad@w+1,w,c
  7020  001E44  2002               	addwfc	?i2_strlen+1,w,c
  7021  001E46  6E12               	movwf	?i2_pad+1,c
  7022  001E48  0012               	return		;funcret
  7023  001E4A  FFFF               	dw	65535	; errata NOP
  7024  001E4C                     __end_ofi2_pad:
  7025                           	opt callstack 0
  7026                           
  7027 ;; *************** function i2_strlen *****************
  7028 ;; Defined at:
  7029 ;;		line 12 in file "C:\Developments\Microchip\xc8\v2.05\pic\sources\c99\common\strlen.c"
  7030 ;; Parameters:    Size  Location     Type
  7031 ;;  s               2    0[COMRAM] PTR const unsigned char 
  7032 ;;		 -> dbuf(32), 
  7033 ;; Auto vars:     Size  Location     Type
  7034 ;;  strlen          2    2[COMRAM] PTR const unsigned char 
  7035 ;;		 -> dbuf(32), 
  7036 ;; Return value:  Size  Location     Type
  7037 ;;                  2    0[COMRAM] unsigned int 
  7038 ;; Registers used:
  7039 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7040 ;; Tracked objects:
  7041 ;;		On entry : 0/0
  7042 ;;		On exit  : 0/0
  7043 ;;		Unchanged: 0/0
  7044 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7045 ;;      Params:         2       0       0       0       0       0       0
  7046 ;;      Locals:         2       0       0       0       0       0       0
  7047 ;;      Temps:          0       0       0       0       0       0       0
  7048 ;;      Totals:         4       0       0       0       0       0       0
  7049 ;;Total ram usage:        4 bytes
  7050 ;; Hardware stack levels used:    1
  7051 ;; This function calls:
  7052 ;;		Nothing
  7053 ;; This function is called by:
  7054 ;;		i2_pad
  7055 ;; This function uses a non-reentrant model
  7056 ;;
  7057                           
  7058                           	psect	text40
  7059  0027FA                     __ptext40:
  7060                           	opt callstack 0
  7061  0027FA                     i2_strlen:
  7062                           	opt callstack 0
  7063  0027FA  FFFF               	dw	65535	; assembler added errata NOP
  7064                           
  7065                           ;incstack = 0
  7066  0027FC  C001  F003         	movff	i2strlen@s,i2strlen@a
  7067  002800  C002  F004         	movff	i2strlen@s+1,i2strlen@a+1
  7068  002804  D003               	goto	i2l2866
  7069  002806                     i2l2864:
  7070  002806  FFFF               	dw	65535	; assembler added errata NOP
  7071  002808  4A01               	infsnz	i2strlen@s,f,c
  7072  00280A  2A02               	incf	i2strlen@s+1,f,c
  7073  00280C                     i2l2866:
  7074  00280C  FFFF               	dw	65535	; assembler added errata NOP
  7075  00280E  C001  FFD9         	movff	i2strlen@s,fsr2l
  7076  002812  C002  FFDA         	movff	i2strlen@s+1,fsr2h
  7077  002816  50DF               	movf	indf2,w,c
  7078  002818  A4D8               	btfss	status,2,c
  7079  00281A  D7F5               	goto	i2l2864
  7080  00281C  5003               	movf	i2strlen@a,w,c
  7081  00281E  5C01               	subwf	i2strlen@s,w,c
  7082  002820  6E01               	movwf	?i2_strlen,c
  7083  002822  5004               	movf	i2strlen@a+1,w,c
  7084  002824  5802               	subwfb	i2strlen@s+1,w,c
  7085  002826  6E02               	movwf	?i2_strlen+1,c
  7086  002828  0012               	return		;funcret
  7087  00282A  FFFF               	dw	65535	; errata NOP
  7088  00282C                     __end_ofi2_strlen:
  7089                           	opt callstack 0
  7090                           
  7091 ;; *************** function i2_fputs *****************
  7092 ;; Defined at:
  7093 ;;		line 8 in file "C:\Developments\Microchip\xc8\v2.05\pic\sources\c99\common\nf_fputs.c"
  7094 ;; Parameters:    Size  Location     Type
  7095 ;;  s               2    9[COMRAM] PTR const unsigned char 
  7096 ;;		 -> dbuf(32), 
  7097 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  7098 ;;		 -> i2sprintf@f(6), sprintf@f(6), 
  7099 ;; Auto vars:     Size  Location     Type
  7100 ;;  fputs           2   14[COMRAM] int 
  7101 ;;  fputs           1   13[COMRAM] unsigned char 
  7102 ;; Return value:  Size  Location     Type
  7103 ;;                  2    9[COMRAM] int 
  7104 ;; Registers used:
  7105 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7106 ;; Tracked objects:
  7107 ;;		On entry : 0/0
  7108 ;;		On exit  : 0/0
  7109 ;;		Unchanged: 0/0
  7110 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7111 ;;      Params:         4       0       0       0       0       0       0
  7112 ;;      Locals:         3       0       0       0       0       0       0
  7113 ;;      Temps:          0       0       0       0       0       0       0
  7114 ;;      Totals:         7       0       0       0       0       0       0
  7115 ;;Total ram usage:        7 bytes
  7116 ;; Hardware stack levels used:    1
  7117 ;; Hardware stack levels required when called:    2
  7118 ;; This function calls:
  7119 ;;		i2_fputc
  7120 ;; This function is called by:
  7121 ;;		i2_pad
  7122 ;; This function uses a non-reentrant model
  7123 ;;
  7124                           
  7125                           	psect	text41
  7126  0025DE                     __ptext41:
  7127                           	opt callstack 0
  7128  0025DE                     i2_fputs:
  7129                           	opt callstack 0
  7130  0025DE  FFFF               	dw	65535	; assembler added errata NOP
  7131                           
  7132                           ;incstack = 0
  7133  0025E0  0E00               	movlw	0
  7134  0025E2  6E10               	movwf	i2fputs@i+1,c
  7135  0025E4  0E00               	movlw	0
  7136  0025E6  6E0F               	movwf	i2fputs@i,c
  7137  0025E8  D00C               	goto	i2l2860
  7138  0025EA                     i2l2856:
  7139  0025EA  FFFF               	dw	65535	; assembler added errata NOP
  7140  0025EC  C00E  F001         	movff	i2fputs@c,i2fputc@c
  7141  0025F0  6A02               	clrf	i2fputc@c+1,c
  7142  0025F2  C00C  F003         	movff	i2fputs@fp,i2fputc@fp
  7143  0025F6  C00D  F004         	movff	i2fputs@fp+1,i2fputc@fp+1
  7144  0025FA  EC7B  F00E         	call	i2_fputc	;wreg free
  7145  0025FE  4A0F               	infsnz	i2fputs@i,f,c
  7146  002600  2A10               	incf	i2fputs@i+1,f,c
  7147  002602                     i2l2860:
  7148  002602  FFFF               	dw	65535	; assembler added errata NOP
  7149  002604  500F               	movf	i2fputs@i,w,c
  7150  002606  240A               	addwf	i2fputs@s,w,c
  7151  002608  6ED9               	movwf	fsr2l,c
  7152  00260A  5010               	movf	i2fputs@i+1,w,c
  7153  00260C  200B               	addwfc	i2fputs@s+1,w,c
  7154  00260E  6EDA               	movwf	fsr2h,c
  7155  002610  50DF               	movf	indf2,w,c
  7156  002612  6E0E               	movwf	i2fputs@c,c
  7157  002614  500E               	movf	i2fputs@c,w,c
  7158  002616  B4D8               	btfsc	status,2,c
  7159  002618  0012               	return		;funcret
  7160  00261A  FFFF               	dw	65535	; assembler added errata NOP
  7161  00261C  D7E6               	goto	i2l2856
  7162  00261E  FFFF               	dw	65535	; errata NOP
  7163  002620                     __end_ofi2_fputs:
  7164                           	opt callstack 0
  7165                           
  7166 ;; *************** function i2_fputc *****************
  7167 ;; Defined at:
  7168 ;;		line 8 in file "C:\Developments\Microchip\xc8\v2.05\pic\sources\c99\common\nf_fputc.c"
  7169 ;; Parameters:    Size  Location     Type
  7170 ;;  c               2    0[COMRAM] int 
  7171 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  7172 ;;		 -> i2sprintf@f(6), sprintf@f(6), 
  7173 ;; Auto vars:     Size  Location     Type
  7174 ;;		None
  7175 ;; Return value:  Size  Location     Type
  7176 ;;                  2    0[COMRAM] int 
  7177 ;; Registers used:
  7178 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7179 ;; Tracked objects:
  7180 ;;		On entry : 0/0
  7181 ;;		On exit  : 0/0
  7182 ;;		Unchanged: 0/0
  7183 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7184 ;;      Params:         4       0       0       0       0       0       0
  7185 ;;      Locals:         0       0       0       0       0       0       0
  7186 ;;      Temps:          5       0       0       0       0       0       0
  7187 ;;      Totals:         9       0       0       0       0       0       0
  7188 ;;Total ram usage:        9 bytes
  7189 ;; Hardware stack levels used:    1
  7190 ;; Hardware stack levels required when called:    1
  7191 ;; This function calls:
  7192 ;;		i2_putch
  7193 ;; This function is called by:
  7194 ;;		i2_pad
  7195 ;;		i2_vfpfcnvrt
  7196 ;;		i2_fputs
  7197 ;; This function uses a non-reentrant model
  7198 ;;
  7199                           
  7200                           	psect	text42
  7201  001CF6                     __ptext42:
  7202                           	opt callstack 0
  7203  001CF6                     i2_fputc:
  7204                           	opt callstack 0
  7205  001CF6  FFFF               	dw	65535	; assembler added errata NOP
  7206                           
  7207                           ;incstack = 0
  7208  001CF8  5003               	movf	i2fputc@fp,w,c
  7209  001CFA  1004               	iorwf	i2fputc@fp+1,w,c
  7210  001CFC  B4D8               	btfsc	status,2,c
  7211  001CFE  D004               	goto	i2u195_40
  7212  001D00  5003               	movf	i2fputc@fp,w,c
  7213  001D02  1004               	iorwf	i2fputc@fp+1,w,c
  7214  001D04  A4D8               	btfss	status,2,c
  7215  001D06  D005               	goto	i2l2828
  7216  001D08                     i2u195_40:
  7217  001D08  FFFF               	dw	65535	; assembler added errata NOP
  7218  001D0A  5001               	movf	i2fputc@c,w,c
  7219  001D0C  ECC4  F014         	call	i2_putch
  7220  001D10  D045               	goto	i2l1348
  7221  001D12                     i2l2828:
  7222  001D12  FFFF               	dw	65535	; assembler added errata NOP
  7223  001D14  EE20 F004          	lfsr	2,4
  7224  001D18  5003               	movf	i2fputc@fp,w,c
  7225  001D1A  26D9               	addwf	fsr2l,f,c
  7226  001D1C  5004               	movf	i2fputc@fp+1,w,c
  7227  001D1E  22DA               	addwfc	fsr2h,f,c
  7228  001D20  50DE               	movf	postinc2,w,c
  7229  001D22  10DE               	iorwf	postinc2,w,c
  7230  001D24  B4D8               	btfsc	status,2,c
  7231  001D26  D016               	goto	i2u197_40
  7232  001D28  EE20 F004          	lfsr	2,4
  7233  001D2C  5003               	movf	i2fputc@fp,w,c
  7234  001D2E  26D9               	addwf	fsr2l,f,c
  7235  001D30  5004               	movf	i2fputc@fp+1,w,c
  7236  001D32  22DA               	addwfc	fsr2h,f,c
  7237  001D34  EE10 F002          	lfsr	1,2
  7238  001D38  5003               	movf	i2fputc@fp,w,c
  7239  001D3A  26E1               	addwf	fsr1l,f,c
  7240  001D3C  5004               	movf	i2fputc@fp+1,w,c
  7241  001D3E  22E2               	addwfc	fsr1h,f,c
  7242  001D40  50DE               	movf	postinc2,w,c
  7243  001D42  5CE6               	subwf	postinc1,w,c
  7244  001D44  50E6               	movf	postinc1,w,c
  7245  001D46  0A80               	xorlw	128
  7246  001D48  6E09               	movwf	(??i2_fputc+4)& (0+255),c
  7247  001D4A  50DE               	movf	postinc2,w,c
  7248  001D4C  0A80               	xorlw	128
  7249  001D4E  5809               	subwfb	(??i2_fputc+4)& (0+255),w,c
  7250  001D50  B0D8               	btfsc	status,0,c
  7251  001D52  D024               	goto	i2l1348
  7252  001D54                     i2u197_40:
  7253  001D54  FFFF               	dw	65535	; assembler added errata NOP
  7254  001D56  EE20 F002          	lfsr	2,2
  7255  001D5A  5003               	movf	i2fputc@fp,w,c
  7256  001D5C  26D9               	addwf	fsr2l,f,c
  7257  001D5E  5004               	movf	i2fputc@fp+1,w,c
  7258  001D60  22DA               	addwfc	fsr2h,f,c
  7259  001D62  CFDE F005          	movff	postinc2,??i2_fputc
  7260  001D66  CFDD F006          	movff	postdec2,??i2_fputc+1
  7261  001D6A  C003  FFD9         	movff	i2fputc@fp,fsr2l
  7262  001D6E  C004  FFDA         	movff	i2fputc@fp+1,fsr2h
  7263  001D72  CFDE F007          	movff	postinc2,??i2_fputc+2
  7264  001D76  CFDD F008          	movff	postdec2,??i2_fputc+3
  7265  001D7A  5005               	movf	??i2_fputc,w,c
  7266  001D7C  2407               	addwf	??i2_fputc+2,w,c
  7267  001D7E  6ED9               	movwf	fsr2l,c
  7268  001D80  5006               	movf	??i2_fputc+1,w,c
  7269  001D82  2008               	addwfc	??i2_fputc+3,w,c
  7270  001D84  6EDA               	movwf	fsr2h,c
  7271  001D86  C001  FFDF         	movff	i2fputc@c,indf2
  7272  001D8A  EE20 F002          	lfsr	2,2
  7273  001D8E  5003               	movf	i2fputc@fp,w,c
  7274  001D90  26D9               	addwf	fsr2l,f,c
  7275  001D92  5004               	movf	i2fputc@fp+1,w,c
  7276  001D94  22DA               	addwfc	fsr2h,f,c
  7277  001D96  2ADE               	incf	postinc2,f,c
  7278  001D98  0E00               	movlw	0
  7279  001D9A  22DD               	addwfc	postdec2,f,c
  7280  001D9C                     i2l1348:
  7281  001D9C  FFFF               	dw	65535	; assembler added errata NOP
  7282  001D9E  0012               	return		;funcret
  7283  001DA0  FFFF               	dw	65535	; errata NOP
  7284  001DA2                     __end_ofi2_fputc:
  7285                           	opt callstack 0
  7286                           
  7287 ;; *************** function i2_putch *****************
  7288 ;; Defined at:
  7289 ;;		line 7 in file "C:\Developments\Microchip\xc8\v2.05\pic\sources\c99\common\putch.c"
  7290 ;; Parameters:    Size  Location     Type
  7291 ;;  c               1    wreg     unsigned char 
  7292 ;; Auto vars:     Size  Location     Type
  7293 ;;  c               1  (no storage) unsigned char 
  7294 ;; Return value:  Size  Location     Type
  7295 ;;                  1    wreg      void 
  7296 ;; Registers used:
  7297 ;;		wreg
  7298 ;; Tracked objects:
  7299 ;;		On entry : 0/0
  7300 ;;		On exit  : 0/0
  7301 ;;		Unchanged: 0/0
  7302 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7303 ;;      Params:         0       0       0       0       0       0       0
  7304 ;;      Locals:         0       0       0       0       0       0       0
  7305 ;;      Temps:          0       0       0       0       0       0       0
  7306 ;;      Totals:         0       0       0       0       0       0       0
  7307 ;;Total ram usage:        0 bytes
  7308 ;; Hardware stack levels used:    1
  7309 ;; This function calls:
  7310 ;;		Nothing
  7311 ;; This function is called by:
  7312 ;;		i2_fputc
  7313 ;; This function uses a non-reentrant model
  7314 ;;
  7315                           
  7316                           	psect	text43
  7317  002988                     __ptext43:
  7318                           	opt callstack 0
  7319  002988                     i2_putch:
  7320                           	opt callstack 0
  7321  002988  FFFF               	dw	65535	; assembler added errata NOP
  7322                           
  7323                           ;incstack = 0
  7324  00298A  0012               	return		;funcret
  7325  00298C  FFFF               	dw	65535	; errata NOP
  7326  00298E                     __end_ofi2_putch:
  7327                           	opt callstack 0
  7328                           
  7329 ;; *************** function i2_abs *****************
  7330 ;; Defined at:
  7331 ;;		line 1 in file "C:\Developments\Microchip\xc8\v2.05\pic\sources\c99\common\abs.c"
  7332 ;; Parameters:    Size  Location     Type
  7333 ;;  a               2   18[COMRAM] int 
  7334 ;; Auto vars:     Size  Location     Type
  7335 ;;		None
  7336 ;; Return value:  Size  Location     Type
  7337 ;;                  2   18[COMRAM] int 
  7338 ;; Registers used:
  7339 ;;		wreg, status,2, status,0
  7340 ;; Tracked objects:
  7341 ;;		On entry : 0/0
  7342 ;;		On exit  : 0/0
  7343 ;;		Unchanged: 0/0
  7344 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7345 ;;      Params:         2       0       0       0       0       0       0
  7346 ;;      Locals:         0       0       0       0       0       0       0
  7347 ;;      Temps:          2       0       0       0       0       0       0
  7348 ;;      Totals:         4       0       0       0       0       0       0
  7349 ;;Total ram usage:        4 bytes
  7350 ;; Hardware stack levels used:    1
  7351 ;; This function calls:
  7352 ;;		Nothing
  7353 ;; This function is called by:
  7354 ;;		i2_dtoa
  7355 ;; This function uses a non-reentrant model
  7356 ;;
  7357                           
  7358                           	psect	text44
  7359  0026DE                     __ptext44:
  7360                           	opt callstack 0
  7361  0026DE                     i2_abs:
  7362                           	opt callstack 0
  7363  0026DE  FFFF               	dw	65535	; assembler added errata NOP
  7364                           
  7365                           ;incstack = 0
  7366  0026E0  BE14               	btfsc	i2abs@a+1,7,c
  7367  0026E2  D005               	goto	i2u241_40
  7368  0026E4  5014               	movf	i2abs@a+1,w,c
  7369  0026E6  E111               	bnz	i2l1288
  7370  0026E8  0413               	decf	i2abs@a,w,c
  7371  0026EA  B0D8               	btfsc	status,0,c
  7372  0026EC  D00E               	goto	i2l1288
  7373  0026EE                     i2u241_40:
  7374  0026EE  FFFF               	dw	65535	; assembler added errata NOP
  7375  0026F0  C013  F015         	movff	i2abs@a,??i2_abs
  7376  0026F4  C014  F016         	movff	i2abs@a+1,??i2_abs+1
  7377  0026F8  1E15               	comf	??i2_abs,f,c
  7378  0026FA  1E16               	comf	??i2_abs+1,f,c
  7379  0026FC  4A15               	infsnz	??i2_abs,f,c
  7380  0026FE  2A16               	incf	??i2_abs+1,f,c
  7381  002700  C015  F013         	movff	??i2_abs,?i2_abs
  7382  002704  C016  F014         	movff	??i2_abs+1,?i2_abs+1
  7383  002708  D005               	goto	i2l1291
  7384  00270A                     i2l1288:
  7385  00270A  FFFF               	dw	65535	; assembler added errata NOP
  7386  00270C  C013  F013         	movff	i2abs@a,?i2_abs
  7387  002710  C014  F014         	movff	i2abs@a+1,?i2_abs+1
  7388  002714                     i2l1291:
  7389  002714  FFFF               	dw	65535	; assembler added errata NOP
  7390  002716  0012               	return		;funcret
  7391  002718  FFFF               	dw	65535	; errata NOP
  7392  00271A                     __end_ofi2_abs:
  7393                           	opt callstack 0
  7394                           
  7395 ;; *************** function i2___aomod *****************
  7396 ;; Defined at:
  7397 ;;		line 9 in file "C:\Developments\Microchip\xc8\v2.05\pic\sources\c99\common\aomod.c"
  7398 ;; Parameters:    Size  Location     Type
  7399 ;;  dividend        8    0[COMRAM] long long 
  7400 ;;  divisor         8    8[COMRAM] long long 
  7401 ;; Auto vars:     Size  Location     Type
  7402 ;;  __aomod         1   17[COMRAM] unsigned char 
  7403 ;;  __aomod         1   16[COMRAM] unsigned char 
  7404 ;; Return value:  Size  Location     Type
  7405 ;;                  8    0[COMRAM] long long 
  7406 ;; Registers used:
  7407 ;;		wreg, status,2, status,0
  7408 ;; Tracked objects:
  7409 ;;		On entry : 0/0
  7410 ;;		On exit  : 0/0
  7411 ;;		Unchanged: 0/0
  7412 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7413 ;;      Params:        16       0       0       0       0       0       0
  7414 ;;      Locals:         2       0       0       0       0       0       0
  7415 ;;      Temps:          0       0       0       0       0       0       0
  7416 ;;      Totals:        18       0       0       0       0       0       0
  7417 ;;Total ram usage:       18 bytes
  7418 ;; Hardware stack levels used:    1
  7419 ;; This function calls:
  7420 ;;		Nothing
  7421 ;; This function is called by:
  7422 ;;		i2_dtoa
  7423 ;; This function uses a non-reentrant model
  7424 ;;
  7425                           
  7426                           	psect	text45
  7427  001892                     __ptext45:
  7428                           	opt callstack 0
  7429  001892                     i2___aomod:
  7430                           	opt callstack 0
  7431  001892  FFFF               	dw	65535	; assembler added errata NOP
  7432                           
  7433                           ;incstack = 0
  7434  001894  0E00               	movlw	0
  7435  001896  6E12               	movwf	i2___aomod@sign,c
  7436  001898  AE08               	btfss	i2___aomod@dividend+7,7,c
  7437  00189A  D012               	goto	i2l3080
  7438  00189C  1E08               	comf	i2___aomod@dividend+7,f,c
  7439  00189E  1E07               	comf	i2___aomod@dividend+6,f,c
  7440  0018A0  1E06               	comf	i2___aomod@dividend+5,f,c
  7441  0018A2  1E05               	comf	i2___aomod@dividend+4,f,c
  7442  0018A4  1E04               	comf	i2___aomod@dividend+3,f,c
  7443  0018A6  1E03               	comf	i2___aomod@dividend+2,f,c
  7444  0018A8  1E02               	comf	i2___aomod@dividend+1,f,c
  7445  0018AA  6C01               	negf	i2___aomod@dividend,c
  7446  0018AC  0E00               	movlw	0
  7447  0018AE  2202               	addwfc	i2___aomod@dividend+1,f,c
  7448  0018B0  2203               	addwfc	i2___aomod@dividend+2,f,c
  7449  0018B2  2204               	addwfc	i2___aomod@dividend+3,f,c
  7450  0018B4  2205               	addwfc	i2___aomod@dividend+4,f,c
  7451  0018B6  2206               	addwfc	i2___aomod@dividend+5,f,c
  7452  0018B8  2207               	addwfc	i2___aomod@dividend+6,f,c
  7453  0018BA  2208               	addwfc	i2___aomod@dividend+7,f,c
  7454  0018BC  0E01               	movlw	1
  7455  0018BE  6E12               	movwf	i2___aomod@sign,c
  7456  0018C0                     i2l3080:
  7457  0018C0  FFFF               	dw	65535	; assembler added errata NOP
  7458  0018C2  AE10               	btfss	i2___aomod@divisor+7,7,c
  7459  0018C4  D010               	goto	i2l3084
  7460  0018C6  1E10               	comf	i2___aomod@divisor+7,f,c
  7461  0018C8  1E0F               	comf	i2___aomod@divisor+6,f,c
  7462  0018CA  1E0E               	comf	i2___aomod@divisor+5,f,c
  7463  0018CC  1E0D               	comf	i2___aomod@divisor+4,f,c
  7464  0018CE  1E0C               	comf	i2___aomod@divisor+3,f,c
  7465  0018D0  1E0B               	comf	i2___aomod@divisor+2,f,c
  7466  0018D2  1E0A               	comf	i2___aomod@divisor+1,f,c
  7467  0018D4  6C09               	negf	i2___aomod@divisor,c
  7468  0018D6  0E00               	movlw	0
  7469  0018D8  220A               	addwfc	i2___aomod@divisor+1,f,c
  7470  0018DA  220B               	addwfc	i2___aomod@divisor+2,f,c
  7471  0018DC  220C               	addwfc	i2___aomod@divisor+3,f,c
  7472  0018DE  220D               	addwfc	i2___aomod@divisor+4,f,c
  7473  0018E0  220E               	addwfc	i2___aomod@divisor+5,f,c
  7474  0018E2  220F               	addwfc	i2___aomod@divisor+6,f,c
  7475  0018E4  2210               	addwfc	i2___aomod@divisor+7,f,c
  7476  0018E6                     i2l3084:
  7477  0018E6  FFFF               	dw	65535	; assembler added errata NOP
  7478  0018E8  5009               	movf	i2___aomod@divisor,w,c
  7479  0018EA  100A               	iorwf	i2___aomod@divisor+1,w,c
  7480  0018EC  100B               	iorwf	i2___aomod@divisor+2,w,c
  7481  0018EE  100C               	iorwf	i2___aomod@divisor+3,w,c
  7482  0018F0  100D               	iorwf	i2___aomod@divisor+4,w,c
  7483  0018F2  100E               	iorwf	i2___aomod@divisor+5,w,c
  7484  0018F4  100F               	iorwf	i2___aomod@divisor+6,w,c
  7485  0018F6  1010               	iorwf	i2___aomod@divisor+7,w,c
  7486  0018F8  B4D8               	btfsc	status,2,c
  7487  0018FA  D040               	goto	i2l3100
  7488  0018FC  0E01               	movlw	1
  7489  0018FE  6E11               	movwf	i2___aomod@counter,c
  7490  001900  D00B               	goto	i2l3090
  7491  001902                     i2l3088:
  7492  001902  FFFF               	dw	65535	; assembler added errata NOP
  7493  001904  90D8               	bcf	status,0,c
  7494  001906  3609               	rlcf	i2___aomod@divisor,f,c
  7495  001908  360A               	rlcf	i2___aomod@divisor+1,f,c
  7496  00190A  360B               	rlcf	i2___aomod@divisor+2,f,c
  7497  00190C  360C               	rlcf	i2___aomod@divisor+3,f,c
  7498  00190E  360D               	rlcf	i2___aomod@divisor+4,f,c
  7499  001910  360E               	rlcf	i2___aomod@divisor+5,f,c
  7500  001912  360F               	rlcf	i2___aomod@divisor+6,f,c
  7501  001914  3610               	rlcf	i2___aomod@divisor+7,f,c
  7502  001916  2A11               	incf	i2___aomod@counter,f,c
  7503  001918                     i2l3090:
  7504  001918  FFFF               	dw	65535	; assembler added errata NOP
  7505  00191A  AE10               	btfss	i2___aomod@divisor+7,7,c
  7506  00191C  D7F2               	goto	i2l3088
  7507  00191E                     i2u238_40:
  7508  00191E  FFFF               	dw	65535	; assembler added errata NOP
  7509  001920  5009               	movf	i2___aomod@divisor,w,c
  7510  001922  5C01               	subwf	i2___aomod@dividend,w,c
  7511  001924  500A               	movf	i2___aomod@divisor+1,w,c
  7512  001926  5802               	subwfb	i2___aomod@dividend+1,w,c
  7513  001928  500B               	movf	i2___aomod@divisor+2,w,c
  7514  00192A  5803               	subwfb	i2___aomod@dividend+2,w,c
  7515  00192C  500C               	movf	i2___aomod@divisor+3,w,c
  7516  00192E  5804               	subwfb	i2___aomod@dividend+3,w,c
  7517  001930  500D               	movf	i2___aomod@divisor+4,w,c
  7518  001932  5805               	subwfb	i2___aomod@dividend+4,w,c
  7519  001934  500E               	movf	i2___aomod@divisor+5,w,c
  7520  001936  5806               	subwfb	i2___aomod@dividend+5,w,c
  7521  001938  500F               	movf	i2___aomod@divisor+6,w,c
  7522  00193A  5807               	subwfb	i2___aomod@dividend+6,w,c
  7523  00193C  5010               	movf	i2___aomod@divisor+7,w,c
  7524  00193E  5808               	subwfb	i2___aomod@dividend+7,w,c
  7525  001940  A0D8               	btfss	status,0,c
  7526  001942  D010               	goto	i2l3096
  7527  001944  5009               	movf	i2___aomod@divisor,w,c
  7528  001946  5E01               	subwf	i2___aomod@dividend,f,c
  7529  001948  500A               	movf	i2___aomod@divisor+1,w,c
  7530  00194A  5A02               	subwfb	i2___aomod@dividend+1,f,c
  7531  00194C  500B               	movf	i2___aomod@divisor+2,w,c
  7532  00194E  5A03               	subwfb	i2___aomod@dividend+2,f,c
  7533  001950  500C               	movf	i2___aomod@divisor+3,w,c
  7534  001952  5A04               	subwfb	i2___aomod@dividend+3,f,c
  7535  001954  500D               	movf	i2___aomod@divisor+4,w,c
  7536  001956  5A05               	subwfb	i2___aomod@dividend+4,f,c
  7537  001958  500E               	movf	i2___aomod@divisor+5,w,c
  7538  00195A  5A06               	subwfb	i2___aomod@dividend+5,f,c
  7539  00195C  500F               	movf	i2___aomod@divisor+6,w,c
  7540  00195E  5A07               	subwfb	i2___aomod@dividend+6,f,c
  7541  001960  5010               	movf	i2___aomod@divisor+7,w,c
  7542  001962  5A08               	subwfb	i2___aomod@dividend+7,f,c
  7543  001964                     i2l3096:
  7544  001964  FFFF               	dw	65535	; assembler added errata NOP
  7545  001966  90D8               	bcf	status,0,c
  7546  001968  3210               	rrcf	i2___aomod@divisor+7,f,c
  7547  00196A  320F               	rrcf	i2___aomod@divisor+6,f,c
  7548  00196C  320E               	rrcf	i2___aomod@divisor+5,f,c
  7549  00196E  320D               	rrcf	i2___aomod@divisor+4,f,c
  7550  001970  320C               	rrcf	i2___aomod@divisor+3,f,c
  7551  001972  320B               	rrcf	i2___aomod@divisor+2,f,c
  7552  001974  320A               	rrcf	i2___aomod@divisor+1,f,c
  7553  001976  3209               	rrcf	i2___aomod@divisor,f,c
  7554  001978  2E11               	decfsz	i2___aomod@counter,f,c
  7555  00197A  D7D1               	goto	i2u238_40
  7556  00197C                     i2l3100:
  7557  00197C  FFFF               	dw	65535	; assembler added errata NOP
  7558  00197E  5012               	movf	i2___aomod@sign,w,c
  7559  001980  B4D8               	btfsc	status,2,c
  7560  001982  D010               	goto	i2l3104
  7561  001984  1E08               	comf	i2___aomod@dividend+7,f,c
  7562  001986  1E07               	comf	i2___aomod@dividend+6,f,c
  7563  001988  1E06               	comf	i2___aomod@dividend+5,f,c
  7564  00198A  1E05               	comf	i2___aomod@dividend+4,f,c
  7565  00198C  1E04               	comf	i2___aomod@dividend+3,f,c
  7566  00198E  1E03               	comf	i2___aomod@dividend+2,f,c
  7567  001990  1E02               	comf	i2___aomod@dividend+1,f,c
  7568  001992  6C01               	negf	i2___aomod@dividend,c
  7569  001994  0E00               	movlw	0
  7570  001996  2202               	addwfc	i2___aomod@dividend+1,f,c
  7571  001998  2203               	addwfc	i2___aomod@dividend+2,f,c
  7572  00199A  2204               	addwfc	i2___aomod@dividend+3,f,c
  7573  00199C  2205               	addwfc	i2___aomod@dividend+4,f,c
  7574  00199E  2206               	addwfc	i2___aomod@dividend+5,f,c
  7575  0019A0  2207               	addwfc	i2___aomod@dividend+6,f,c
  7576  0019A2  2208               	addwfc	i2___aomod@dividend+7,f,c
  7577  0019A4                     i2l3104:
  7578  0019A4  FFFF               	dw	65535	; assembler added errata NOP
  7579  0019A6  C001  F001         	movff	i2___aomod@dividend,?i2___aomod
  7580  0019AA  C002  F002         	movff	i2___aomod@dividend+1,?i2___aomod+1
  7581  0019AE  C003  F003         	movff	i2___aomod@dividend+2,?i2___aomod+2
  7582  0019B2  C004  F004         	movff	i2___aomod@dividend+3,?i2___aomod+3
  7583  0019B6  C005  F005         	movff	i2___aomod@dividend+4,?i2___aomod+4
  7584  0019BA  C006  F006         	movff	i2___aomod@dividend+5,?i2___aomod+5
  7585  0019BE  C007  F007         	movff	i2___aomod@dividend+6,?i2___aomod+6
  7586  0019C2  C008  F008         	movff	i2___aomod@dividend+7,?i2___aomod+7
  7587  0019C6  0012               	return		;funcret
  7588  0019C8  FFFF               	dw	65535	; errata NOP
  7589  0019CA                     __end_ofi2___aomod:
  7590                           	opt callstack 0
  7591                           
  7592 ;; *************** function i2___aodiv *****************
  7593 ;; Defined at:
  7594 ;;		line 9 in file "C:\Developments\Microchip\xc8\v2.05\pic\sources\c99\common\aodiv.c"
  7595 ;; Parameters:    Size  Location     Type
  7596 ;;  dividend        8    0[COMRAM] long long 
  7597 ;;  divisor         8    8[COMRAM] long long 
  7598 ;; Auto vars:     Size  Location     Type
  7599 ;;  __aodiv         8   18[COMRAM] long long 
  7600 ;;  __aodiv         1   17[COMRAM] unsigned char 
  7601 ;;  __aodiv         1   16[COMRAM] unsigned char 
  7602 ;; Return value:  Size  Location     Type
  7603 ;;                  8    0[COMRAM] long long 
  7604 ;; Registers used:
  7605 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7606 ;; Tracked objects:
  7607 ;;		On entry : 0/0
  7608 ;;		On exit  : 0/0
  7609 ;;		Unchanged: 0/0
  7610 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7611 ;;      Params:        16       0       0       0       0       0       0
  7612 ;;      Locals:        10       0       0       0       0       0       0
  7613 ;;      Temps:          0       0       0       0       0       0       0
  7614 ;;      Totals:        26       0       0       0       0       0       0
  7615 ;;Total ram usage:       26 bytes
  7616 ;; Hardware stack levels used:    1
  7617 ;; This function calls:
  7618 ;;		Nothing
  7619 ;; This function is called by:
  7620 ;;		i2_dtoa
  7621 ;; This function uses a non-reentrant model
  7622 ;;
  7623                           
  7624                           	psect	text46
  7625  0015FC                     __ptext46:
  7626                           	opt callstack 0
  7627  0015FC                     i2___aodiv:
  7628                           	opt callstack 0
  7629  0015FC  FFFF               	dw	65535	; assembler added errata NOP
  7630                           
  7631                           ;incstack = 0
  7632  0015FE  0E00               	movlw	0
  7633  001600  6E12               	movwf	i2___aodiv@sign,c
  7634  001602  AE10               	btfss	i2___aodiv@divisor+7,7,c
  7635  001604  D012               	goto	i2l3036
  7636  001606  1E10               	comf	i2___aodiv@divisor+7,f,c
  7637  001608  1E0F               	comf	i2___aodiv@divisor+6,f,c
  7638  00160A  1E0E               	comf	i2___aodiv@divisor+5,f,c
  7639  00160C  1E0D               	comf	i2___aodiv@divisor+4,f,c
  7640  00160E  1E0C               	comf	i2___aodiv@divisor+3,f,c
  7641  001610  1E0B               	comf	i2___aodiv@divisor+2,f,c
  7642  001612  1E0A               	comf	i2___aodiv@divisor+1,f,c
  7643  001614  6C09               	negf	i2___aodiv@divisor,c
  7644  001616  0E00               	movlw	0
  7645  001618  220A               	addwfc	i2___aodiv@divisor+1,f,c
  7646  00161A  220B               	addwfc	i2___aodiv@divisor+2,f,c
  7647  00161C  220C               	addwfc	i2___aodiv@divisor+3,f,c
  7648  00161E  220D               	addwfc	i2___aodiv@divisor+4,f,c
  7649  001620  220E               	addwfc	i2___aodiv@divisor+5,f,c
  7650  001622  220F               	addwfc	i2___aodiv@divisor+6,f,c
  7651  001624  2210               	addwfc	i2___aodiv@divisor+7,f,c
  7652  001626  0E01               	movlw	1
  7653  001628  6E12               	movwf	i2___aodiv@sign,c
  7654  00162A                     i2l3036:
  7655  00162A  FFFF               	dw	65535	; assembler added errata NOP
  7656  00162C  AE08               	btfss	i2___aodiv@dividend+7,7,c
  7657  00162E  D012               	goto	i2l3042
  7658  001630  1E08               	comf	i2___aodiv@dividend+7,f,c
  7659  001632  1E07               	comf	i2___aodiv@dividend+6,f,c
  7660  001634  1E06               	comf	i2___aodiv@dividend+5,f,c
  7661  001636  1E05               	comf	i2___aodiv@dividend+4,f,c
  7662  001638  1E04               	comf	i2___aodiv@dividend+3,f,c
  7663  00163A  1E03               	comf	i2___aodiv@dividend+2,f,c
  7664  00163C  1E02               	comf	i2___aodiv@dividend+1,f,c
  7665  00163E  6C01               	negf	i2___aodiv@dividend,c
  7666  001640  0E00               	movlw	0
  7667  001642  2202               	addwfc	i2___aodiv@dividend+1,f,c
  7668  001644  2203               	addwfc	i2___aodiv@dividend+2,f,c
  7669  001646  2204               	addwfc	i2___aodiv@dividend+3,f,c
  7670  001648  2205               	addwfc	i2___aodiv@dividend+4,f,c
  7671  00164A  2206               	addwfc	i2___aodiv@dividend+5,f,c
  7672  00164C  2207               	addwfc	i2___aodiv@dividend+6,f,c
  7673  00164E  2208               	addwfc	i2___aodiv@dividend+7,f,c
  7674  001650  0E01               	movlw	1
  7675  001652  1A12               	xorwf	i2___aodiv@sign,f,c
  7676  001654                     i2l3042:
  7677  001654  FFFF               	dw	65535	; assembler added errata NOP
  7678  001656  EE20  F013         	lfsr	2,i2___aodiv@quotient
  7679  00165A  0E07               	movlw	7
  7680  00165C                     i2u230_41:
  7681  00165C  6ADE               	clrf	postinc2,c
  7682  00165E  06E8               	decf	wreg,f,c
  7683  001660  E2FD               	bc	i2u230_41
  7684  001662  5009               	movf	i2___aodiv@divisor,w,c
  7685  001664  100A               	iorwf	i2___aodiv@divisor+1,w,c
  7686  001666  100B               	iorwf	i2___aodiv@divisor+2,w,c
  7687  001668  100C               	iorwf	i2___aodiv@divisor+3,w,c
  7688  00166A  100D               	iorwf	i2___aodiv@divisor+4,w,c
  7689  00166C  100E               	iorwf	i2___aodiv@divisor+5,w,c
  7690  00166E  100F               	iorwf	i2___aodiv@divisor+6,w,c
  7691  001670  1010               	iorwf	i2___aodiv@divisor+7,w,c
  7692  001672  B4D8               	btfsc	status,2,c
  7693  001674  D04A               	goto	i2l3064
  7694  001676  0E01               	movlw	1
  7695  001678  6E11               	movwf	i2___aodiv@counter,c
  7696  00167A  D00B               	goto	i2l3050
  7697  00167C                     i2l3048:
  7698  00167C  FFFF               	dw	65535	; assembler added errata NOP
  7699  00167E  90D8               	bcf	status,0,c
  7700  001680  3609               	rlcf	i2___aodiv@divisor,f,c
  7701  001682  360A               	rlcf	i2___aodiv@divisor+1,f,c
  7702  001684  360B               	rlcf	i2___aodiv@divisor+2,f,c
  7703  001686  360C               	rlcf	i2___aodiv@divisor+3,f,c
  7704  001688  360D               	rlcf	i2___aodiv@divisor+4,f,c
  7705  00168A  360E               	rlcf	i2___aodiv@divisor+5,f,c
  7706  00168C  360F               	rlcf	i2___aodiv@divisor+6,f,c
  7707  00168E  3610               	rlcf	i2___aodiv@divisor+7,f,c
  7708  001690  2A11               	incf	i2___aodiv@counter,f,c
  7709  001692                     i2l3050:
  7710  001692  FFFF               	dw	65535	; assembler added errata NOP
  7711  001694  AE10               	btfss	i2___aodiv@divisor+7,7,c
  7712  001696  D7F2               	goto	i2l3048
  7713  001698                     i2u232_40:
  7714  001698  FFFF               	dw	65535	; assembler added errata NOP
  7715  00169A  90D8               	bcf	status,0,c
  7716  00169C  3613               	rlcf	i2___aodiv@quotient,f,c
  7717  00169E  3614               	rlcf	i2___aodiv@quotient+1,f,c
  7718  0016A0  3615               	rlcf	i2___aodiv@quotient+2,f,c
  7719  0016A2  3616               	rlcf	i2___aodiv@quotient+3,f,c
  7720  0016A4  3617               	rlcf	i2___aodiv@quotient+4,f,c
  7721  0016A6  3618               	rlcf	i2___aodiv@quotient+5,f,c
  7722  0016A8  3619               	rlcf	i2___aodiv@quotient+6,f,c
  7723  0016AA  361A               	rlcf	i2___aodiv@quotient+7,f,c
  7724  0016AC  5009               	movf	i2___aodiv@divisor,w,c
  7725  0016AE  5C01               	subwf	i2___aodiv@dividend,w,c
  7726  0016B0  500A               	movf	i2___aodiv@divisor+1,w,c
  7727  0016B2  5802               	subwfb	i2___aodiv@dividend+1,w,c
  7728  0016B4  500B               	movf	i2___aodiv@divisor+2,w,c
  7729  0016B6  5803               	subwfb	i2___aodiv@dividend+2,w,c
  7730  0016B8  500C               	movf	i2___aodiv@divisor+3,w,c
  7731  0016BA  5804               	subwfb	i2___aodiv@dividend+3,w,c
  7732  0016BC  500D               	movf	i2___aodiv@divisor+4,w,c
  7733  0016BE  5805               	subwfb	i2___aodiv@dividend+4,w,c
  7734  0016C0  500E               	movf	i2___aodiv@divisor+5,w,c
  7735  0016C2  5806               	subwfb	i2___aodiv@dividend+5,w,c
  7736  0016C4  500F               	movf	i2___aodiv@divisor+6,w,c
  7737  0016C6  5807               	subwfb	i2___aodiv@dividend+6,w,c
  7738  0016C8  5010               	movf	i2___aodiv@divisor+7,w,c
  7739  0016CA  5808               	subwfb	i2___aodiv@dividend+7,w,c
  7740  0016CC  A0D8               	btfss	status,0,c
  7741  0016CE  D011               	goto	i2l3060
  7742  0016D0  5009               	movf	i2___aodiv@divisor,w,c
  7743  0016D2  5E01               	subwf	i2___aodiv@dividend,f,c
  7744  0016D4  500A               	movf	i2___aodiv@divisor+1,w,c
  7745  0016D6  5A02               	subwfb	i2___aodiv@dividend+1,f,c
  7746  0016D8  500B               	movf	i2___aodiv@divisor+2,w,c
  7747  0016DA  5A03               	subwfb	i2___aodiv@dividend+2,f,c
  7748  0016DC  500C               	movf	i2___aodiv@divisor+3,w,c
  7749  0016DE  5A04               	subwfb	i2___aodiv@dividend+3,f,c
  7750  0016E0  500D               	movf	i2___aodiv@divisor+4,w,c
  7751  0016E2  5A05               	subwfb	i2___aodiv@dividend+4,f,c
  7752  0016E4  500E               	movf	i2___aodiv@divisor+5,w,c
  7753  0016E6  5A06               	subwfb	i2___aodiv@dividend+5,f,c
  7754  0016E8  500F               	movf	i2___aodiv@divisor+6,w,c
  7755  0016EA  5A07               	subwfb	i2___aodiv@dividend+6,f,c
  7756  0016EC  5010               	movf	i2___aodiv@divisor+7,w,c
  7757  0016EE  5A08               	subwfb	i2___aodiv@dividend+7,f,c
  7758  0016F0  8013               	bsf	i2___aodiv@quotient,0,c
  7759  0016F2                     i2l3060:
  7760  0016F2  FFFF               	dw	65535	; assembler added errata NOP
  7761  0016F4  90D8               	bcf	status,0,c
  7762  0016F6  3210               	rrcf	i2___aodiv@divisor+7,f,c
  7763  0016F8  320F               	rrcf	i2___aodiv@divisor+6,f,c
  7764  0016FA  320E               	rrcf	i2___aodiv@divisor+5,f,c
  7765  0016FC  320D               	rrcf	i2___aodiv@divisor+4,f,c
  7766  0016FE  320C               	rrcf	i2___aodiv@divisor+3,f,c
  7767  001700  320B               	rrcf	i2___aodiv@divisor+2,f,c
  7768  001702  320A               	rrcf	i2___aodiv@divisor+1,f,c
  7769  001704  3209               	rrcf	i2___aodiv@divisor,f,c
  7770  001706  2E11               	decfsz	i2___aodiv@counter,f,c
  7771  001708  D7C7               	goto	i2u232_40
  7772  00170A                     i2l3064:
  7773  00170A  FFFF               	dw	65535	; assembler added errata NOP
  7774  00170C  5012               	movf	i2___aodiv@sign,w,c
  7775  00170E  B4D8               	btfsc	status,2,c
  7776  001710  D010               	goto	i2l3068
  7777  001712  1E1A               	comf	i2___aodiv@quotient+7,f,c
  7778  001714  1E19               	comf	i2___aodiv@quotient+6,f,c
  7779  001716  1E18               	comf	i2___aodiv@quotient+5,f,c
  7780  001718  1E17               	comf	i2___aodiv@quotient+4,f,c
  7781  00171A  1E16               	comf	i2___aodiv@quotient+3,f,c
  7782  00171C  1E15               	comf	i2___aodiv@quotient+2,f,c
  7783  00171E  1E14               	comf	i2___aodiv@quotient+1,f,c
  7784  001720  6C13               	negf	i2___aodiv@quotient,c
  7785  001722  0E00               	movlw	0
  7786  001724  2214               	addwfc	i2___aodiv@quotient+1,f,c
  7787  001726  2215               	addwfc	i2___aodiv@quotient+2,f,c
  7788  001728  2216               	addwfc	i2___aodiv@quotient+3,f,c
  7789  00172A  2217               	addwfc	i2___aodiv@quotient+4,f,c
  7790  00172C  2218               	addwfc	i2___aodiv@quotient+5,f,c
  7791  00172E  2219               	addwfc	i2___aodiv@quotient+6,f,c
  7792  001730  221A               	addwfc	i2___aodiv@quotient+7,f,c
  7793  001732                     i2l3068:
  7794  001732  FFFF               	dw	65535	; assembler added errata NOP
  7795  001734  C013  F001         	movff	i2___aodiv@quotient,?i2___aodiv
  7796  001738  C014  F002         	movff	i2___aodiv@quotient+1,?i2___aodiv+1
  7797  00173C  C015  F003         	movff	i2___aodiv@quotient+2,?i2___aodiv+2
  7798  001740  C016  F004         	movff	i2___aodiv@quotient+3,?i2___aodiv+3
  7799  001744  C017  F005         	movff	i2___aodiv@quotient+4,?i2___aodiv+4
  7800  001748  C018  F006         	movff	i2___aodiv@quotient+5,?i2___aodiv+5
  7801  00174C  C019  F007         	movff	i2___aodiv@quotient+6,?i2___aodiv+6
  7802  001750  C01A  F008         	movff	i2___aodiv@quotient+7,?i2___aodiv+7
  7803  001754  0012               	return		;funcret
  7804  001756  FFFF               	dw	65535	; errata NOP
  7805  001758                     __end_ofi2___aodiv:
  7806                           	opt callstack 0
  7807                           
  7808 ;; *************** function i2_atoi *****************
  7809 ;; Defined at:
  7810 ;;		line 4 in file "C:\Developments\Microchip\xc8\v2.05\pic\sources\c99\common\atoi.c"
  7811 ;; Parameters:    Size  Location     Type
  7812 ;;  s               2    7[COMRAM] PTR const unsigned char 
  7813 ;;		 -> STR_4(18), STR_3(17), STR_2(17), STR_1(17), 
  7814 ;; Auto vars:     Size  Location     Type
  7815 ;;  atoi            2   20[COMRAM] int 
  7816 ;;  atoi            2   13[COMRAM] int 
  7817 ;; Return value:  Size  Location     Type
  7818 ;;                  2    7[COMRAM] int 
  7819 ;; Registers used:
  7820 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7821 ;; Tracked objects:
  7822 ;;		On entry : 0/0
  7823 ;;		On exit  : 0/0
  7824 ;;		Unchanged: 0/0
  7825 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7826 ;;      Params:         2       0       0       0       0       0       0
  7827 ;;      Locals:         9       0       0       0       0       0       0
  7828 ;;      Temps:          4       0       0       0       0       0       0
  7829 ;;      Totals:        15       0       0       0       0       0       0
  7830 ;;Total ram usage:       15 bytes
  7831 ;; Hardware stack levels used:    1
  7832 ;; Hardware stack levels required when called:    1
  7833 ;; This function calls:
  7834 ;;		i2___wmul
  7835 ;;		i2_isdigit
  7836 ;;		i2_isspace
  7837 ;; This function is called by:
  7838 ;;		i2_vfpfcnvrt
  7839 ;; This function uses a non-reentrant model
  7840 ;;
  7841                           
  7842                           	psect	text47
  7843  001338                     __ptext47:
  7844                           	opt callstack 0
  7845  001338                     i2_atoi:
  7846                           	opt callstack 0
  7847  001338  FFFF               	dw	65535	; assembler added errata NOP
  7848                           
  7849                           ;incstack = 0
  7850  00133A  0E00               	movlw	0
  7851  00133C  6E16               	movwf	i2atoi@n+1,c
  7852  00133E  0E00               	movlw	0
  7853  001340  6E15               	movwf	i2atoi@n,c
  7854  001342  0E00               	movlw	0
  7855  001344  6E0F               	movwf	i2atoi@neg+1,c
  7856  001346  0E00               	movlw	0
  7857  001348  6E0E               	movwf	i2atoi@neg,c
  7858  00134A  D003               	goto	i2l3300
  7859  00134C                     i2l3298:
  7860  00134C  FFFF               	dw	65535	; assembler added errata NOP
  7861  00134E  4A08               	infsnz	i2atoi@s,f,c
  7862  001350  2A09               	incf	i2atoi@s+1,f,c
  7863  001352                     i2l3300:
  7864  001352  FFFF               	dw	65535	; assembler added errata NOP
  7865  001354  0E01               	movlw	1
  7866  001356  6E14               	movwf	i2_atoi$1495,c
  7867  001358  C008  FFF6         	movff	i2atoi@s,tblptrl
  7868  00135C  C009  FFF7         	movff	i2atoi@s+1,tblptrh
  7869  001360                     	if	0	;tblptru may be non-zero
  7870  001360                     	endif
  7871  001360                     	if	0	;tblptru may be non-zero
  7872  001360                     	endif
  7873  001360  0008               	tblrd		*
  7874  001362  FFFF               	dw	65535	; errata NOP
  7875  001364  50F5               	movf	tablat,w,c
  7876  001366  0A20               	xorlw	32
  7877  001368  B4D8               	btfsc	status,2,c
  7878  00136A  D019               	goto	i2l3308
  7879  00136C  0EF7               	movlw	247
  7880  00136E  6E0A               	movwf	??i2_atoi& (0+255),c
  7881  001370  0EFF               	movlw	255
  7882  001372  6E0B               	movwf	(??i2_atoi+1)& (0+255),c
  7883  001374  C008  FFF6         	movff	i2atoi@s,tblptrl
  7884  001378  C009  FFF7         	movff	i2atoi@s+1,tblptrh
  7885  00137C                     	if	0	;tblptru may be non-zero
  7886  00137C                     	endif
  7887  00137C                     	if	0	;tblptru may be non-zero
  7888  00137C                     	endif
  7889  00137C  0008               	tblrd		*
  7890  00137E  FFFF               	dw	65535	; errata NOP
  7891  001380  50F5               	movf	tablat,w,c
  7892  001382  6E0C               	movwf	(??i2_atoi+2)& (0+255),c
  7893  001384  6A0D               	clrf	(??i2_atoi+3)& (0+255),c
  7894  001386  500A               	movf	??i2_atoi,w,c
  7895  001388  260C               	addwf	??i2_atoi+2,f,c
  7896  00138A  500B               	movf	??i2_atoi+1,w,c
  7897  00138C  220D               	addwfc	??i2_atoi+3,f,c
  7898  00138E  500D               	movf	??i2_atoi+3,w,c
  7899  001390  E104               	bnz	i2u284_40
  7900  001392  0E05               	movlw	5
  7901  001394  5C0C               	subwf	??i2_atoi+2,w,c
  7902  001396  A0D8               	btfss	status,0,c
  7903  001398  D002               	goto	i2l3308
  7904  00139A                     i2u284_40:
  7905  00139A  0E00               	movlw	0
  7906  00139C  6E14               	movwf	i2_atoi$1495,c
  7907  00139E                     i2l3308:
  7908  00139E  FFFF               	dw	65535	; assembler added errata NOP
  7909  0013A0  C014  F010         	movff	i2_atoi$1495,i2_atoi$1494
  7910  0013A4  6A11               	clrf	i2_atoi$1494+1,c
  7911  0013A6  5010               	movf	i2_atoi$1494,w,c
  7912  0013A8  1011               	iorwf	i2_atoi$1494+1,w,c
  7913  0013AA  B4D8               	btfsc	status,2,c
  7914  0013AC  D00A               	goto	i2l3318
  7915  0013AE  D7CE               	goto	i2l3298
  7916  0013B0                     i2l3314:
  7917  0013B0  FFFF               	dw	65535	; assembler added errata NOP
  7918  0013B2  0E00               	movlw	0
  7919  0013B4  6E0F               	movwf	i2atoi@neg+1,c
  7920  0013B6  0E01               	movlw	1
  7921  0013B8  6E0E               	movwf	i2atoi@neg,c
  7922  0013BA                     i2l3316:
  7923  0013BA  FFFF               	dw	65535	; assembler added errata NOP
  7924  0013BC  4A08               	infsnz	i2atoi@s,f,c
  7925  0013BE  2A09               	incf	i2atoi@s+1,f,c
  7926  0013C0  D032               	goto	i2l3324
  7927  0013C2                     i2l3318:
  7928  0013C2  FFFF               	dw	65535	; assembler added errata NOP
  7929  0013C4  C008  FFF6         	movff	i2atoi@s,tblptrl
  7930  0013C8  C009  FFF7         	movff	i2atoi@s+1,tblptrh
  7931  0013CC                     	if	0	;tblptru may be non-zero
  7932  0013CC                     	endif
  7933  0013CC                     	if	0	;tblptru may be non-zero
  7934  0013CC                     	endif
  7935  0013CC  0008               	tblrd		*
  7936  0013CE  FFFF               	dw	65535	; errata NOP
  7937  0013D0  50F5               	movf	tablat,w,c
  7938  0013D2  6E0A               	movwf	??i2_atoi& (0+255),c
  7939  0013D4  6A0B               	clrf	(??i2_atoi+1)& (0+255),c
  7940                           
  7941                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7942                           ; Switch size 1, requested type "simple"
  7943                           ; Number of cases is 1, Range of values is 0 to 0
  7944                           ; switch strategies available:
  7945                           ; Name         Instructions Cycles
  7946                           ; simple_byte            4     3 (average)
  7947                           ;	Chosen strategy is simple_byte
  7948  0013D6  500B               	movf	??i2_atoi+1,w,c
  7949  0013D8  0A00               	xorlw	0	; case 0
  7950  0013DA  A4D8               	btfss	status,2,c
  7951  0013DC  D024               	goto	i2l3324
  7952                           
  7953                           ; Switch size 1, requested type "simple"
  7954                           ; Number of cases is 2, Range of values is 43 to 45
  7955                           ; switch strategies available:
  7956                           ; Name         Instructions Cycles
  7957                           ; simple_byte            7     4 (average)
  7958                           ;	Chosen strategy is simple_byte
  7959  0013DE  500A               	movf	??i2_atoi,w,c
  7960  0013E0  0A2B               	xorlw	43	; case 43
  7961  0013E2  B4D8               	btfsc	status,2,c
  7962  0013E4  D7EA               	goto	i2l3316
  7963  0013E6  0A06               	xorlw	6	; case 45
  7964  0013E8  B4D8               	btfsc	status,2,c
  7965  0013EA  D7E2               	goto	i2l3314
  7966  0013EC  D01C               	goto	i2l3324
  7967  0013EE                     i2l3320:
  7968  0013EE  FFFF               	dw	65535	; assembler added errata NOP
  7969  0013F0  C015  F001         	movff	i2atoi@n,i2___wmul@multiplier
  7970  0013F4  C016  F002         	movff	i2atoi@n+1,i2___wmul@multiplier+1
  7971  0013F8  0E00               	movlw	0
  7972  0013FA  6E04               	movwf	i2___wmul@multiplicand+1,c
  7973  0013FC  0E0A               	movlw	10
  7974  0013FE  6E03               	movwf	i2___wmul@multiplicand,c
  7975  001400  EC59  F014         	call	i2___wmul	;wreg free
  7976  001404  C008  FFF6         	movff	i2atoi@s,tblptrl
  7977  001408  C009  FFF7         	movff	i2atoi@s+1,tblptrh
  7978  00140C                     	if	0	;tblptru may be non-zero
  7979  00140C                     	endif
  7980  00140C                     	if	0	;tblptru may be non-zero
  7981  00140C                     	endif
  7982  00140C  0008               	tblrd		*
  7983  00140E  FFFF               	dw	65535	; errata NOP
  7984  001410  50F5               	movf	tablat,w,c
  7985  001412  5E01               	subwf	?i2___wmul,f,c
  7986  001414  0E00               	movlw	0
  7987  001416  5A02               	subwfb	?i2___wmul+1,f,c
  7988  001418  0E30               	movlw	48
  7989  00141A  2401               	addwf	?i2___wmul,w,c
  7990  00141C  6E15               	movwf	i2atoi@n,c
  7991  00141E  0E00               	movlw	0
  7992  001420  2002               	addwfc	?i2___wmul+1,w,c
  7993  001422  6E16               	movwf	i2atoi@n+1,c
  7994  001424  D7CA               	goto	i2l3316
  7995  001426                     i2l3324:
  7996  001426  FFFF               	dw	65535	; assembler added errata NOP
  7997  001428  0ED0               	movlw	208
  7998  00142A  6E0A               	movwf	??i2_atoi& (0+255),c
  7999  00142C  0EFF               	movlw	255
  8000  00142E  6E0B               	movwf	(??i2_atoi+1)& (0+255),c
  8001  001430  C008  FFF6         	movff	i2atoi@s,tblptrl
  8002  001434  C009  FFF7         	movff	i2atoi@s+1,tblptrh
  8003  001438                     	if	0	;tblptru may be non-zero
  8004  001438                     	endif
  8005  001438                     	if	0	;tblptru may be non-zero
  8006  001438                     	endif
  8007  001438  0008               	tblrd		*
  8008  00143A  FFFF               	dw	65535	; errata NOP
  8009  00143C  50F5               	movf	tablat,w,c
  8010  00143E  6E0C               	movwf	(??i2_atoi+2)& (0+255),c
  8011  001440  6A0D               	clrf	(??i2_atoi+3)& (0+255),c
  8012  001442  500A               	movf	??i2_atoi,w,c
  8013  001444  260C               	addwf	??i2_atoi+2,f,c
  8014  001446  500B               	movf	??i2_atoi+1,w,c
  8015  001448  220D               	addwfc	??i2_atoi+3,f,c
  8016  00144A  500D               	movf	??i2_atoi+3,w,c
  8017  00144C  E106               	bnz	i2u286_40
  8018  00144E  0E0A               	movlw	10
  8019  001450  5C0C               	subwf	??i2_atoi+2,w,c
  8020  001452  B0D8               	btfsc	status,0,c
  8021  001454  D002               	goto	i2u286_40
  8022  001456  0E01               	movlw	1
  8023  001458  D002               	goto	i2u287_40
  8024  00145A                     i2u286_40:
  8025  00145A  FFFF               	dw	65535	; assembler added errata NOP
  8026  00145C  0E00               	movlw	0
  8027  00145E                     i2u287_40:
  8028  00145E  FFFF               	dw	65535	; assembler added errata NOP
  8029  001460  6E12               	movwf	i2_atoi$1496,c
  8030  001462  6A13               	clrf	i2_atoi$1496+1,c
  8031  001464  5012               	movf	i2_atoi$1496,w,c
  8032  001466  1013               	iorwf	i2_atoi$1496+1,w,c
  8033  001468  A4D8               	btfss	status,2,c
  8034  00146A  D7C1               	goto	i2l3320
  8035  00146C  500E               	movf	i2atoi@neg,w,c
  8036  00146E  100F               	iorwf	i2atoi@neg+1,w,c
  8037  001470  A4D8               	btfss	status,2,c
  8038  001472  D00D               	goto	i2l1319
  8039  001474  C015  F00A         	movff	i2atoi@n,??i2_atoi
  8040  001478  C016  F00B         	movff	i2atoi@n+1,??i2_atoi+1
  8041  00147C  1E0A               	comf	??i2_atoi,f,c
  8042  00147E  1E0B               	comf	??i2_atoi+1,f,c
  8043  001480  4A0A               	infsnz	??i2_atoi,f,c
  8044  001482  2A0B               	incf	??i2_atoi+1,f,c
  8045  001484  C00A  F008         	movff	??i2_atoi,?i2_atoi
  8046  001488  C00B  F009         	movff	??i2_atoi+1,?i2_atoi+1
  8047  00148C  D005               	goto	i2l1322
  8048  00148E                     i2l1319:
  8049  00148E  FFFF               	dw	65535	; assembler added errata NOP
  8050  001490  C015  F008         	movff	i2atoi@n,?i2_atoi
  8051  001494  C016  F009         	movff	i2atoi@n+1,?i2_atoi+1
  8052  001498                     i2l1322:
  8053  001498  FFFF               	dw	65535	; assembler added errata NOP
  8054  00149A  0012               	return		;funcret
  8055  00149C  FFFF               	dw	65535	; errata NOP
  8056  00149E                     __end_ofi2_atoi:
  8057                           	opt callstack 0
  8058                           
  8059 ;; *************** function i2_isspace *****************
  8060 ;; Defined at:
  8061 ;;		line 5 in file "C:\Developments\Microchip\xc8\v2.05\pic\sources\c99\common\isspace.c"
  8062 ;; Parameters:    Size  Location     Type
  8063 ;;  c               2    0[COMRAM] int 
  8064 ;; Auto vars:     Size  Location     Type
  8065 ;;		None
  8066 ;; Return value:  Size  Location     Type
  8067 ;;                  2    0[COMRAM] int 
  8068 ;; Registers used:
  8069 ;;		wreg, status,2, status,0
  8070 ;; Tracked objects:
  8071 ;;		On entry : 0/0
  8072 ;;		On exit  : 0/0
  8073 ;;		Unchanged: 0/0
  8074 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8075 ;;      Params:         2       0       0       0       0       0       0
  8076 ;;      Locals:         1       0       0       0       0       0       0
  8077 ;;      Temps:          4       0       0       0       0       0       0
  8078 ;;      Totals:         7       0       0       0       0       0       0
  8079 ;;Total ram usage:        7 bytes
  8080 ;; Hardware stack levels used:    1
  8081 ;; This function calls:
  8082 ;;		Nothing
  8083 ;; This function is called by:
  8084 ;;		i2_atoi
  8085 ;; This function uses a non-reentrant model
  8086 ;;
  8087                           
  8088                           	psect	text48
  8089  002556                     __ptext48:
  8090                           	opt callstack 0
  8091  002556                     i2_isspace:
  8092                           	opt callstack 0
  8093  002556  FFFF               	dw	65535	; assembler added errata NOP
  8094                           
  8095                           ;incstack = 0
  8096  002558  0E01               	movlw	1
  8097  00255A  6E07               	movwf	i2_isspace$1512,c
  8098  00255C  0E20               	movlw	32
  8099  00255E  1801               	xorwf	i2isspace@c,w,c
  8100  002560  1002               	iorwf	i2isspace@c+1,w,c
  8101  002562  B4D8               	btfsc	status,2,c
  8102  002564  D014               	goto	i2l3124
  8103  002566  0EF7               	movlw	247
  8104  002568  6E03               	movwf	??i2_isspace& (0+255),c
  8105  00256A  0EFF               	movlw	255
  8106  00256C  6E04               	movwf	(??i2_isspace+1)& (0+255),c
  8107  00256E  C001  F005         	movff	i2isspace@c,??i2_isspace+2
  8108  002572  C002  F006         	movff	i2isspace@c+1,??i2_isspace+3
  8109  002576  5003               	movf	??i2_isspace,w,c
  8110  002578  2605               	addwf	??i2_isspace+2,f,c
  8111  00257A  5004               	movf	??i2_isspace+1,w,c
  8112  00257C  2206               	addwfc	??i2_isspace+3,f,c
  8113  00257E  5006               	movf	??i2_isspace+3,w,c
  8114  002580  E104               	bnz	i2u245_40
  8115  002582  0E05               	movlw	5
  8116  002584  5C05               	subwf	??i2_isspace+2,w,c
  8117  002586  A0D8               	btfss	status,0,c
  8118  002588  D002               	goto	i2l3124
  8119  00258A                     i2u245_40:
  8120  00258A  0E00               	movlw	0
  8121  00258C  6E07               	movwf	i2_isspace$1512,c
  8122  00258E                     i2l3124:
  8123  00258E  FFFF               	dw	65535	; assembler added errata NOP
  8124  002590  C007  F001         	movff	i2_isspace$1512,?i2_isspace
  8125  002594  6A02               	clrf	?i2_isspace+1,c
  8126  002596  0012               	return		;funcret
  8127  002598  FFFF               	dw	65535	; errata NOP
  8128  00259A                     __end_ofi2_isspace:
  8129                           	opt callstack 0
  8130                           
  8131 ;; *************** function i2_isdigit *****************
  8132 ;; Defined at:
  8133 ;;		line 5 in file "C:\Developments\Microchip\xc8\v2.05\pic\sources\c99\common\isdigit.c"
  8134 ;; Parameters:    Size  Location     Type
  8135 ;;  c               2    0[COMRAM] int 
  8136 ;; Auto vars:     Size  Location     Type
  8137 ;;		None
  8138 ;; Return value:  Size  Location     Type
  8139 ;;                  2    0[COMRAM] int 
  8140 ;; Registers used:
  8141 ;;		wreg, status,2, status,0
  8142 ;; Tracked objects:
  8143 ;;		On entry : 0/0
  8144 ;;		On exit  : 0/0
  8145 ;;		Unchanged: 0/0
  8146 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8147 ;;      Params:         2       0       0       0       0       0       0
  8148 ;;      Locals:         0       0       0       0       0       0       0
  8149 ;;      Temps:          4       0       0       0       0       0       0
  8150 ;;      Totals:         6       0       0       0       0       0       0
  8151 ;;Total ram usage:        6 bytes
  8152 ;; Hardware stack levels used:    1
  8153 ;; This function calls:
  8154 ;;		Nothing
  8155 ;; This function is called by:
  8156 ;;		i2_vfpfcnvrt
  8157 ;;		i2_atoi
  8158 ;; This function uses a non-reentrant model
  8159 ;;
  8160                           
  8161                           	psect	text49
  8162  002754                     __ptext49:
  8163                           	opt callstack 0
  8164  002754                     i2_isdigit:
  8165                           	opt callstack 0
  8166  002754  FFFF               	dw	65535	; assembler added errata NOP
  8167                           
  8168                           ;incstack = 0
  8169  002756  0ED0               	movlw	208
  8170  002758  6E03               	movwf	??i2_isdigit& (0+255),c
  8171  00275A  0EFF               	movlw	255
  8172  00275C  6E04               	movwf	(??i2_isdigit+1)& (0+255),c
  8173  00275E  C001  F005         	movff	i2isdigit@c,??i2_isdigit+2
  8174  002762  C002  F006         	movff	i2isdigit@c+1,??i2_isdigit+3
  8175  002766  5003               	movf	??i2_isdigit,w,c
  8176  002768  2605               	addwf	??i2_isdigit+2,f,c
  8177  00276A  5004               	movf	??i2_isdigit+1,w,c
  8178  00276C  2206               	addwfc	??i2_isdigit+3,f,c
  8179  00276E  5006               	movf	??i2_isdigit+3,w,c
  8180  002770  E106               	bnz	i2u242_40
  8181  002772  0E0A               	movlw	10
  8182  002774  5C05               	subwf	??i2_isdigit+2,w,c
  8183  002776  B0D8               	btfsc	status,0,c
  8184  002778  D002               	goto	i2u242_40
  8185  00277A  0E01               	movlw	1
  8186  00277C  D002               	goto	i2u243_40
  8187  00277E                     i2u242_40:
  8188  00277E  FFFF               	dw	65535	; assembler added errata NOP
  8189  002780  0E00               	movlw	0
  8190  002782                     i2u243_40:
  8191  002782  FFFF               	dw	65535	; assembler added errata NOP
  8192  002784  6E01               	movwf	?i2_isdigit,c
  8193  002786  6A02               	clrf	?i2_isdigit+1,c
  8194  002788  0012               	return		;funcret
  8195  00278A  FFFF               	dw	65535	; errata NOP
  8196  00278C                     __end_ofi2_isdigit:
  8197                           	opt callstack 0
  8198                           
  8199 ;; *************** function i2___wmul *****************
  8200 ;; Defined at:
  8201 ;;		line 15 in file "C:\Developments\Microchip\xc8\v2.05\pic\sources\c99\common\Umul16.c"
  8202 ;; Parameters:    Size  Location     Type
  8203 ;;  multiplier      2    0[COMRAM] unsigned int 
  8204 ;;  multiplicand    2    2[COMRAM] unsigned int 
  8205 ;; Auto vars:     Size  Location     Type
  8206 ;;  __wmul          2    4[COMRAM] unsigned int 
  8207 ;; Return value:  Size  Location     Type
  8208 ;;                  2    0[COMRAM] unsigned int 
  8209 ;; Registers used:
  8210 ;;		wreg, status,2, status,0, prodl, prodh
  8211 ;; Tracked objects:
  8212 ;;		On entry : 0/0
  8213 ;;		On exit  : 0/0
  8214 ;;		Unchanged: 0/0
  8215 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8216 ;;      Params:         4       0       0       0       0       0       0
  8217 ;;      Locals:         2       0       0       0       0       0       0
  8218 ;;      Temps:          0       0       0       0       0       0       0
  8219 ;;      Totals:         6       0       0       0       0       0       0
  8220 ;;Total ram usage:        6 bytes
  8221 ;; Hardware stack levels used:    1
  8222 ;; This function calls:
  8223 ;;		Nothing
  8224 ;; This function is called by:
  8225 ;;		i2_atoi
  8226 ;; This function uses a non-reentrant model
  8227 ;;
  8228                           
  8229                           	psect	text50
  8230  0028B2                     __ptext50:
  8231                           	opt callstack 0
  8232  0028B2                     i2___wmul:
  8233                           	opt callstack 0
  8234  0028B2  FFFF               	dw	65535	; assembler added errata NOP
  8235                           
  8236                           ;incstack = 0
  8237  0028B4  5001               	movf	i2___wmul@multiplier,w,c
  8238  0028B6  0203               	mulwf	i2___wmul@multiplicand,c
  8239  0028B8  CFF3 F005          	movff	prodl,i2___wmul@product
  8240  0028BC  CFF4 F006          	movff	prodh,i2___wmul@product+1
  8241  0028C0  5001               	movf	i2___wmul@multiplier,w,c
  8242  0028C2  0204               	mulwf	i2___wmul@multiplicand+1,c
  8243  0028C4  50F3               	movf	prodl,w,c
  8244  0028C6  2606               	addwf	i2___wmul@product+1,f,c
  8245  0028C8  5002               	movf	i2___wmul@multiplier+1,w,c
  8246  0028CA  0203               	mulwf	i2___wmul@multiplicand,c
  8247  0028CC  50F3               	movf	prodl,w,c
  8248  0028CE  2606               	addwf	i2___wmul@product+1,f,c
  8249  0028D0  C005  F001         	movff	i2___wmul@product,?i2___wmul
  8250  0028D4  C006  F002         	movff	i2___wmul@product+1,?i2___wmul+1
  8251  0028D8  0012               	return		;funcret
  8252  0028DA  FFFF               	dw	65535	; errata NOP
  8253  0028DC                     __end_ofi2___wmul:
  8254                           	opt callstack 0
  8255                           
  8256 ;; *************** function i2_SetDDRamAddr *****************
  8257 ;; Defined at:
  8258 ;;		line 217 in file "lcd_pic16.c"
  8259 ;; Parameters:    Size  Location     Type
  8260 ;;  DDaddr          1    wreg     unsigned char 
  8261 ;; Auto vars:     Size  Location     Type
  8262 ;;  DDaddr          1    0[COMRAM] unsigned char 
  8263 ;; Return value:  Size  Location     Type
  8264 ;;                  1    wreg      void 
  8265 ;; Registers used:
  8266 ;;		wreg, status,2, status,0, cstack
  8267 ;; Tracked objects:
  8268 ;;		On entry : 0/0
  8269 ;;		On exit  : 0/0
  8270 ;;		Unchanged: 0/0
  8271 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8272 ;;      Params:         0       0       0       0       0       0       0
  8273 ;;      Locals:         1       0       0       0       0       0       0
  8274 ;;      Temps:          0       0       0       0       0       0       0
  8275 ;;      Totals:         1       0       0       0       0       0       0
  8276 ;;Total ram usage:        1 bytes
  8277 ;; Hardware stack levels used:    1
  8278 ;; Hardware stack levels required when called:    1
  8279 ;; This function calls:
  8280 ;;		i2_DelayFor18TCY
  8281 ;; This function is called by:
  8282 ;;		_updateLCD
  8283 ;; This function uses a non-reentrant model
  8284 ;;
  8285                           
  8286                           	psect	text51
  8287  00259A                     __ptext51:
  8288                           	opt callstack 0
  8289  00259A                     i2_SetDDRamAddr:
  8290                           	opt callstack 0
  8291  00259A  FFFF               	dw	65535	; assembler added errata NOP
  8292                           
  8293                           ;incstack = 0
  8294                           ;i2SetDDRamAddr@DDaddr stored from wreg
  8295  00259C  6E01               	movwf	i2SetDDRamAddr@DDaddr,c
  8296                           
  8297                           ;lcd_pic16.c: 217: void SetDDRamAddr(unsigned char DDaddr);lcd_pic16.c: 218: {;lcd_pic16
      +                          .c: 232:         TRISD &= 0x0f;
  8298  00259E  0E0F               	movlw	15
  8299  0025A0  1695               	andwf	3989,f,c	;volatile
  8300                           
  8301                           ;lcd_pic16.c: 233:         PORTD &= 0x0f;
  8302  0025A2  0E0F               	movlw	15
  8303  0025A4  1683               	andwf	3971,f,c	;volatile
  8304                           
  8305                           ;lcd_pic16.c: 234:         PORTD |= ((DDaddr | 0b10000000) & 0xf0);
  8306  0025A6  5001               	movf	i2SetDDRamAddr@DDaddr,w,c
  8307  0025A8  0980               	iorlw	128
  8308  0025AA  0BF0               	andlw	240
  8309  0025AC  1283               	iorwf	3971,f,c	;volatile
  8310                           
  8311                           ;lcd_pic16.c: 240:         PORTDbits.RD2 = 0;
  8312  0025AE  9483               	bcf	3971,2,c	;volatile
  8313                           
  8314                           ;lcd_pic16.c: 241:         PORTDbits.RD3 = 0;
  8315  0025B0  9683               	bcf	3971,3,c	;volatile
  8316                           
  8317                           ;lcd_pic16.c: 242:         DelayFor18TCY();
  8318  0025B2  ECB9  F014         	call	i2_DelayFor18TCY	;wreg free
  8319                           
  8320                           ;lcd_pic16.c: 243:         PORTDbits.RD1 = 1;
  8321  0025B6  8283               	bsf	3971,1,c	;volatile
  8322                           
  8323                           ;lcd_pic16.c: 244:         DelayFor18TCY();
  8324  0025B8  ECB9  F014         	call	i2_DelayFor18TCY	;wreg free
  8325                           
  8326                           ;lcd_pic16.c: 245:         PORTDbits.RD1 = 0;
  8327  0025BC  9283               	bcf	3971,1,c	;volatile
  8328                           
  8329                           ;lcd_pic16.c: 247:         PORTD &= 0x0f;
  8330  0025BE  0E0F               	movlw	15
  8331  0025C0  1683               	andwf	3971,f,c	;volatile
  8332                           
  8333                           ;lcd_pic16.c: 248:         PORTD |= ((DDaddr<<4)&0xf0);
  8334  0025C2  3801               	swapf	i2SetDDRamAddr@DDaddr,w,c
  8335  0025C4  0BF0               	andlw	240
  8336  0025C6  0BF0               	andlw	240
  8337  0025C8  1283               	iorwf	3971,f,c	;volatile
  8338                           
  8339                           ;lcd_pic16.c: 253:         DelayFor18TCY();
  8340  0025CA  ECB9  F014         	call	i2_DelayFor18TCY	;wreg free
  8341                           
  8342                           ;lcd_pic16.c: 254:         PORTDbits.RD1 = 1;
  8343  0025CE  8283               	bsf	3971,1,c	;volatile
  8344                           
  8345                           ;lcd_pic16.c: 255:         DelayFor18TCY();
  8346  0025D0  ECB9  F014         	call	i2_DelayFor18TCY	;wreg free
  8347                           
  8348                           ;lcd_pic16.c: 256:         PORTDbits.RD1 = 0;
  8349  0025D4  9283               	bcf	3971,1,c	;volatile
  8350                           
  8351                           ;lcd_pic16.c: 258:         TRISD |= 0xf0;
  8352  0025D6  0EF0               	movlw	240
  8353  0025D8  1295               	iorwf	3989,f,c	;volatile
  8354  0025DA  0012               	return		;funcret
  8355  0025DC  FFFF               	dw	65535	; errata NOP
  8356  0025DE                     __end_ofi2_SetDDRamAddr:
  8357                           	opt callstack 0
  8358                           
  8359 ;; *************** function _putsXLCD *****************
  8360 ;; Defined at:
  8361 ;;		line 419 in file "lcd_pic16.c"
  8362 ;; Parameters:    Size  Location     Type
  8363 ;;  buffer          2    1[COMRAM] PTR unsigned char 
  8364 ;;		 -> lineTwo(17), lineOne(17), 
  8365 ;; Auto vars:     Size  Location     Type
  8366 ;;		None
  8367 ;; Return value:  Size  Location     Type
  8368 ;;                  1    wreg      void 
  8369 ;; Registers used:
  8370 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  8371 ;; Tracked objects:
  8372 ;;		On entry : 0/0
  8373 ;;		On exit  : 0/0
  8374 ;;		Unchanged: 0/0
  8375 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8376 ;;      Params:         2       0       0       0       0       0       0
  8377 ;;      Locals:         0       0       0       0       0       0       0
  8378 ;;      Temps:          0       0       0       0       0       0       0
  8379 ;;      Totals:         2       0       0       0       0       0       0
  8380 ;;Total ram usage:        2 bytes
  8381 ;; Hardware stack levels used:    1
  8382 ;; Hardware stack levels required when called:    2
  8383 ;; This function calls:
  8384 ;;		_WriteDataXLCD
  8385 ;;		i2_BusyXLCD
  8386 ;; This function is called by:
  8387 ;;		_updateLCD
  8388 ;; This function uses a non-reentrant model
  8389 ;;
  8390                           
  8391                           	psect	text52
  8392  00278C                     __ptext52:
  8393                           	opt callstack 0
  8394  00278C                     _putsXLCD:
  8395                           	opt callstack 0
  8396  00278C  FFFF               	dw	65535	; assembler added errata NOP
  8397                           
  8398                           ;lcd_pic16.c: 419: void putsXLCD(char *buffer);lcd_pic16.c: 420: {;lcd_pic16.c: 421:    
      +                               while(*buffer)
  8399                           
  8400                           ;incstack = 0
  8401  00278E  D00F               	goto	i2l3732
  8402  002790                     i2l3726:
  8403  002790  FFFF               	dw	65535	; assembler added errata NOP
  8404  002792  EC9A  F014         	call	i2_BusyXLCD	;wreg free
  8405  002796  0900               	iorlw	0
  8406  002798  A4D8               	btfss	status,2,c
  8407  00279A  D7FA               	goto	i2l3726
  8408                           
  8409                           ;lcd_pic16.c: 424:                 WriteDataXLCD(*buffer);
  8410  00279C  C002  FFD9         	movff	putsXLCD@buffer,fsr2l
  8411  0027A0  C003  FFDA         	movff	putsXLCD@buffer+1,fsr2h
  8412  0027A4  50DF               	movf	indf2,w,c
  8413  0027A6  EC10  F013         	call	_WriteDataXLCD
  8414                           
  8415                           ;lcd_pic16.c: 425:                 buffer++;
  8416  0027AA  4A02               	infsnz	putsXLCD@buffer,f,c
  8417  0027AC  2A03               	incf	putsXLCD@buffer+1,f,c
  8418  0027AE                     i2l3732:
  8419  0027AE  FFFF               	dw	65535	; assembler added errata NOP
  8420                           
  8421                           ;lcd_pic16.c: 421:         while(*buffer)
  8422  0027B0  C002  FFD9         	movff	putsXLCD@buffer,fsr2l
  8423  0027B4  C003  FFDA         	movff	putsXLCD@buffer+1,fsr2h
  8424  0027B8  50DF               	movf	indf2,w,c
  8425  0027BA  B4D8               	btfsc	status,2,c
  8426  0027BC  0012               	return		;funcret
  8427  0027BE  FFFF               	dw	65535	; assembler added errata NOP
  8428  0027C0  D7E7               	goto	i2l3726
  8429  0027C2  FFFF               	dw	65535	; errata NOP
  8430  0027C4                     __end_of_putsXLCD:
  8431                           	opt callstack 0
  8432                           
  8433 ;; *************** function i2_BusyXLCD *****************
  8434 ;; Defined at:
  8435 ;;		line 451 in file "lcd_pic16.c"
  8436 ;; Parameters:    Size  Location     Type
  8437 ;;		None
  8438 ;; Auto vars:     Size  Location     Type
  8439 ;;		None
  8440 ;; Return value:  Size  Location     Type
  8441 ;;                  1    wreg      unsigned char 
  8442 ;; Registers used:
  8443 ;;		wreg
  8444 ;; Tracked objects:
  8445 ;;		On entry : 0/0
  8446 ;;		On exit  : 0/0
  8447 ;;		Unchanged: 0/0
  8448 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8449 ;;      Params:         0       0       0       0       0       0       0
  8450 ;;      Locals:         0       0       0       0       0       0       0
  8451 ;;      Temps:          1       0       0       0       0       0       0
  8452 ;;      Totals:         1       0       0       0       0       0       0
  8453 ;;Total ram usage:        1 bytes
  8454 ;; Hardware stack levels used:    1
  8455 ;; This function calls:
  8456 ;;		Nothing
  8457 ;; This function is called by:
  8458 ;;		_putsXLCD
  8459 ;; This function uses a non-reentrant model
  8460 ;;
  8461                           
  8462                           	psect	text53
  8463  002934                     __ptext53:
  8464                           	opt callstack 0
  8465  002934                     i2_BusyXLCD:
  8466                           	opt callstack 0
  8467  002934  FFFF               	dw	65535	; assembler added errata NOP
  8468                           
  8469                           ;lcd_pic16.c: 504:         _delay((unsigned long)((5)*(12000000/4000.0)));
  8470                           
  8471                           ;incstack = 0
  8472  002936  0E0F               	movlw	15
  8473  002938  6E01               	movwf	??i2_BusyXLCD& (0+255),c
  8474  00293A  0E9E               	movlw	158
  8475  00293C                     i2u385_47:
  8476  00293C  FFFF               	dw	65535	; errata NOP
  8477  00293E  2EE8               	decfsz	wreg,f,c
  8478  002940  D7FD               	bra	i2u385_47
  8479  002942  2E01               	decfsz	??i2_BusyXLCD& (0+255),f,c
  8480  002944  D7FB               	bra	i2u385_47
  8481                           
  8482                           ;lcd_pic16.c: 505:         return 0;
  8483  002946  0E00               	movlw	0
  8484  002948  0012               	return		;funcret
  8485  00294A  FFFF               	dw	65535	; errata NOP
  8486  00294C                     __end_ofi2_BusyXLCD:
  8487                           	opt callstack 0
  8488                           
  8489 ;; *************** function _WriteDataXLCD *****************
  8490 ;; Defined at:
  8491 ;;		line 110 in file "lcd_pic16.c"
  8492 ;; Parameters:    Size  Location     Type
  8493 ;;  data            1    wreg     unsigned char 
  8494 ;; Auto vars:     Size  Location     Type
  8495 ;;  data            1    0[COMRAM] unsigned char 
  8496 ;; Return value:  Size  Location     Type
  8497 ;;                  1    wreg      void 
  8498 ;; Registers used:
  8499 ;;		wreg, status,2, status,0, cstack
  8500 ;; Tracked objects:
  8501 ;;		On entry : 0/0
  8502 ;;		On exit  : 0/0
  8503 ;;		Unchanged: 0/0
  8504 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8505 ;;      Params:         0       0       0       0       0       0       0
  8506 ;;      Locals:         1       0       0       0       0       0       0
  8507 ;;      Temps:          0       0       0       0       0       0       0
  8508 ;;      Totals:         1       0       0       0       0       0       0
  8509 ;;Total ram usage:        1 bytes
  8510 ;; Hardware stack levels used:    1
  8511 ;; Hardware stack levels required when called:    1
  8512 ;; This function calls:
  8513 ;;		i2_DelayFor18TCY
  8514 ;; This function is called by:
  8515 ;;		_putsXLCD
  8516 ;;		_putrsXLCD
  8517 ;; This function uses a non-reentrant model
  8518 ;;
  8519                           
  8520                           	psect	text54
  8521  002620                     __ptext54:
  8522                           	opt callstack 0
  8523  002620                     _WriteDataXLCD:
  8524                           	opt callstack 0
  8525  002620  FFFF               	dw	65535	; assembler added errata NOP
  8526                           
  8527                           ;incstack = 0
  8528                           ;WriteDataXLCD@data stored from wreg
  8529  002622  6E01               	movwf	WriteDataXLCD@data,c
  8530                           
  8531                           ;lcd_pic16.c: 110: void WriteDataXLCD(char data);lcd_pic16.c: 111: {;lcd_pic16.c: 125:  
      +                                 TRISD &= 0x0f;
  8532  002624  0E0F               	movlw	15
  8533  002626  1695               	andwf	3989,f,c	;volatile
  8534                           
  8535                           ;lcd_pic16.c: 126:         PORTD &= 0x0f;
  8536  002628  0E0F               	movlw	15
  8537  00262A  1683               	andwf	3971,f,c	;volatile
  8538                           
  8539                           ;lcd_pic16.c: 127:         PORTD |= data&0xf0;
  8540  00262C  5001               	movf	WriteDataXLCD@data,w,c
  8541  00262E  0BF0               	andlw	240
  8542  002630  1283               	iorwf	3971,f,c	;volatile
  8543                           
  8544                           ;lcd_pic16.c: 133:         PORTDbits.RD3 = 1;
  8545  002632  8683               	bsf	3971,3,c	;volatile
  8546                           
  8547                           ;lcd_pic16.c: 134:         PORTDbits.RD2 = 0;
  8548  002634  9483               	bcf	3971,2,c	;volatile
  8549                           
  8550                           ;lcd_pic16.c: 135:         DelayFor18TCY();
  8551  002636  ECB9  F014         	call	i2_DelayFor18TCY	;wreg free
  8552                           
  8553                           ;lcd_pic16.c: 136:         PORTDbits.RD1 = 1;
  8554  00263A  8283               	bsf	3971,1,c	;volatile
  8555                           
  8556                           ;lcd_pic16.c: 137:         DelayFor18TCY();
  8557  00263C  ECB9  F014         	call	i2_DelayFor18TCY	;wreg free
  8558                           
  8559                           ;lcd_pic16.c: 138:         PORTDbits.RD1 = 0;
  8560  002640  9283               	bcf	3971,1,c	;volatile
  8561                           
  8562                           ;lcd_pic16.c: 140:         PORTD &= 0x0f;
  8563  002642  0E0F               	movlw	15
  8564  002644  1683               	andwf	3971,f,c	;volatile
  8565                           
  8566                           ;lcd_pic16.c: 141:         PORTD |= ((data<<4)&0xf0);
  8567  002646  3801               	swapf	WriteDataXLCD@data,w,c
  8568  002648  0BF0               	andlw	240
  8569  00264A  0BF0               	andlw	240
  8570  00264C  1283               	iorwf	3971,f,c	;volatile
  8571                           
  8572                           ;lcd_pic16.c: 146:         DelayFor18TCY();
  8573  00264E  ECB9  F014         	call	i2_DelayFor18TCY	;wreg free
  8574                           
  8575                           ;lcd_pic16.c: 147:         PORTDbits.RD1 = 1;
  8576  002652  8283               	bsf	3971,1,c	;volatile
  8577                           
  8578                           ;lcd_pic16.c: 148:         DelayFor18TCY();
  8579  002654  ECB9  F014         	call	i2_DelayFor18TCY	;wreg free
  8580                           
  8581                           ;lcd_pic16.c: 149:         PORTDbits.RD1 = 0;
  8582  002658  9283               	bcf	3971,1,c	;volatile
  8583                           
  8584                           ;lcd_pic16.c: 151:         TRISD |= 0xf0;
  8585  00265A  0EF0               	movlw	240
  8586  00265C  1295               	iorwf	3989,f,c	;volatile
  8587  00265E  0012               	return		;funcret
  8588  002660  FFFF               	dw	65535	; errata NOP
  8589  002662                     __end_of_WriteDataXLCD:
  8590                           	opt callstack 0
  8591                           
  8592 ;; *************** function i2_DelayFor18TCY *****************
  8593 ;; Defined at:
  8594 ;;		line 22 in file "lcd_pic16.c"
  8595 ;; Parameters:    Size  Location     Type
  8596 ;;		None
  8597 ;; Auto vars:     Size  Location     Type
  8598 ;;		None
  8599 ;; Return value:  Size  Location     Type
  8600 ;;                  1    wreg      void 
  8601 ;; Registers used:
  8602 ;;		wreg
  8603 ;; Tracked objects:
  8604 ;;		On entry : 0/0
  8605 ;;		On exit  : 0/0
  8606 ;;		Unchanged: 0/0
  8607 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8608 ;;      Params:         0       0       0       0       0       0       0
  8609 ;;      Locals:         0       0       0       0       0       0       0
  8610 ;;      Temps:          0       0       0       0       0       0       0
  8611 ;;      Totals:         0       0       0       0       0       0       0
  8612 ;;Total ram usage:        0 bytes
  8613 ;; Hardware stack levels used:    1
  8614 ;; This function calls:
  8615 ;;		Nothing
  8616 ;; This function is called by:
  8617 ;;		_WriteDataXLCD
  8618 ;;		i2_SetDDRamAddr
  8619 ;; This function uses a non-reentrant model
  8620 ;;
  8621                           
  8622                           	psect	text55
  8623  002972                     __ptext55:
  8624                           	opt callstack 0
  8625  002972                     i2_DelayFor18TCY:
  8626                           	opt callstack 0
  8627  002972  FFFF               	dw	65535	; assembler added errata NOP
  8628                           
  8629                           ;lcd_pic16.c: 24:    _delay((unsigned long)((18)*(12000000/4000000.0)));
  8630                           
  8631                           ;incstack = 0
  8632  002974  0E0D               	movlw	13
  8633  002976                     i2u386_47:
  8634  002976  FFFF               	dw	65535	; errata NOP
  8635  002978  2EE8               	decfsz	wreg,f,c
  8636  00297A  D7FD               	bra	i2u386_47
  8637  00297C  D000               	nop2	
  8638  00297E  0012               	return		;funcret
  8639  002980  FFFF               	dw	65535	; errata NOP
  8640  002982                     __end_ofi2_DelayFor18TCY:
  8641                           	opt callstack 0
  8642                           
  8643 ;; *************** function ___lwmod *****************
  8644 ;; Defined at:
  8645 ;;		line 7 in file "C:\Developments\Microchip\xc8\v2.05\pic\sources\c99\common\lwmod.c"
  8646 ;; Parameters:    Size  Location     Type
  8647 ;;  dividend        2    0[COMRAM] unsigned int 
  8648 ;;  divisor         2    2[COMRAM] unsigned int 
  8649 ;; Auto vars:     Size  Location     Type
  8650 ;;  counter         1    4[COMRAM] unsigned char 
  8651 ;; Return value:  Size  Location     Type
  8652 ;;                  2    0[COMRAM] unsigned int 
  8653 ;; Registers used:
  8654 ;;		wreg, status,2, status,0
  8655 ;; Tracked objects:
  8656 ;;		On entry : 0/0
  8657 ;;		On exit  : 0/0
  8658 ;;		Unchanged: 0/0
  8659 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8660 ;;      Params:         4       0       0       0       0       0       0
  8661 ;;      Locals:         1       0       0       0       0       0       0
  8662 ;;      Temps:          0       0       0       0       0       0       0
  8663 ;;      Totals:         5       0       0       0       0       0       0
  8664 ;;Total ram usage:        5 bytes
  8665 ;; Hardware stack levels used:    1
  8666 ;; This function calls:
  8667 ;;		Nothing
  8668 ;; This function is called by:
  8669 ;;		_updateLCD
  8670 ;; This function uses a non-reentrant model
  8671 ;;
  8672                           
  8673                           	psect	text56
  8674  00239E                     __ptext56:
  8675                           	opt callstack 0
  8676  00239E                     ___lwmod:
  8677                           	opt callstack 0
  8678  00239E  FFFF               	dw	65535	; assembler added errata NOP
  8679                           
  8680                           ;incstack = 0
  8681  0023A0  5003               	movf	___lwmod@divisor,w,c
  8682  0023A2  1004               	iorwf	___lwmod@divisor+1,w,c
  8683  0023A4  B4D8               	btfsc	status,2,c
  8684  0023A6  D01C               	goto	i2l1114
  8685  0023A8  0E01               	movlw	1
  8686  0023AA  6E05               	movwf	___lwmod@counter,c
  8687  0023AC  D005               	goto	i2l3762
  8688  0023AE                     i2l3760:
  8689  0023AE  FFFF               	dw	65535	; assembler added errata NOP
  8690  0023B0  90D8               	bcf	status,0,c
  8691  0023B2  3603               	rlcf	___lwmod@divisor,f,c
  8692  0023B4  3604               	rlcf	___lwmod@divisor+1,f,c
  8693  0023B6  2A05               	incf	___lwmod@counter,f,c
  8694  0023B8                     i2l3762:
  8695  0023B8  FFFF               	dw	65535	; assembler added errata NOP
  8696  0023BA  AE04               	btfss	___lwmod@divisor+1,7,c
  8697  0023BC  D7F8               	goto	i2l3760
  8698  0023BE                     i2u332_40:
  8699  0023BE  FFFF               	dw	65535	; assembler added errata NOP
  8700  0023C0  5003               	movf	___lwmod@divisor,w,c
  8701  0023C2  5C01               	subwf	___lwmod@dividend,w,c
  8702  0023C4  5004               	movf	___lwmod@divisor+1,w,c
  8703  0023C6  5802               	subwfb	___lwmod@dividend+1,w,c
  8704  0023C8  A0D8               	btfss	status,0,c
  8705  0023CA  D004               	goto	i2l3768
  8706  0023CC  5003               	movf	___lwmod@divisor,w,c
  8707  0023CE  5E01               	subwf	___lwmod@dividend,f,c
  8708  0023D0  5004               	movf	___lwmod@divisor+1,w,c
  8709  0023D2  5A02               	subwfb	___lwmod@dividend+1,f,c
  8710  0023D4                     i2l3768:
  8711  0023D4  FFFF               	dw	65535	; assembler added errata NOP
  8712  0023D6  90D8               	bcf	status,0,c
  8713  0023D8  3204               	rrcf	___lwmod@divisor+1,f,c
  8714  0023DA  3203               	rrcf	___lwmod@divisor,f,c
  8715  0023DC  2E05               	decfsz	___lwmod@counter,f,c
  8716  0023DE  D7EF               	goto	i2u332_40
  8717  0023E0                     i2l1114:
  8718  0023E0  FFFF               	dw	65535	; assembler added errata NOP
  8719  0023E2  C001  F001         	movff	___lwmod@dividend,?___lwmod
  8720  0023E6  C002  F002         	movff	___lwmod@dividend+1,?___lwmod+1
  8721  0023EA  0012               	return		;funcret
  8722  0023EC  FFFF               	dw	65535	; errata NOP
  8723  0023EE                     __end_of___lwmod:
  8724                           	opt callstack 0
  8725                           
  8726 ;; *************** function ___lwdiv *****************
  8727 ;; Defined at:
  8728 ;;		line 7 in file "C:\Developments\Microchip\xc8\v2.05\pic\sources\c99\common\lwdiv.c"
  8729 ;; Parameters:    Size  Location     Type
  8730 ;;  dividend        2    0[COMRAM] unsigned int 
  8731 ;;  divisor         2    2[COMRAM] unsigned int 
  8732 ;; Auto vars:     Size  Location     Type
  8733 ;;  quotient        2    4[COMRAM] unsigned int 
  8734 ;;  counter         1    6[COMRAM] unsigned char 
  8735 ;; Return value:  Size  Location     Type
  8736 ;;                  2    0[COMRAM] unsigned int 
  8737 ;; Registers used:
  8738 ;;		wreg, status,2, status,0
  8739 ;; Tracked objects:
  8740 ;;		On entry : 0/0
  8741 ;;		On exit  : 0/0
  8742 ;;		Unchanged: 0/0
  8743 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8744 ;;      Params:         4       0       0       0       0       0       0
  8745 ;;      Locals:         3       0       0       0       0       0       0
  8746 ;;      Temps:          0       0       0       0       0       0       0
  8747 ;;      Totals:         7       0       0       0       0       0       0
  8748 ;;Total ram usage:        7 bytes
  8749 ;; Hardware stack levels used:    1
  8750 ;; This function calls:
  8751 ;;		Nothing
  8752 ;; This function is called by:
  8753 ;;		_updateLCD
  8754 ;; This function uses a non-reentrant model
  8755 ;;
  8756                           
  8757                           	psect	text57
  8758  00223E                     __ptext57:
  8759                           	opt callstack 0
  8760  00223E                     ___lwdiv:
  8761                           	opt callstack 0
  8762  00223E  FFFF               	dw	65535	; assembler added errata NOP
  8763                           
  8764                           ;incstack = 0
  8765  002240  0E00               	movlw	0
  8766  002242  6E06               	movwf	___lwdiv@quotient+1,c
  8767  002244  0E00               	movlw	0
  8768  002246  6E05               	movwf	___lwdiv@quotient,c
  8769  002248  5003               	movf	___lwdiv@divisor,w,c
  8770  00224A  1004               	iorwf	___lwdiv@divisor+1,w,c
  8771  00224C  B4D8               	btfsc	status,2,c
  8772  00224E  D020               	goto	i2l1104
  8773  002250  0E01               	movlw	1
  8774  002252  6E07               	movwf	___lwdiv@counter,c
  8775  002254  D005               	goto	i2l3742
  8776  002256                     i2l3740:
  8777  002256  FFFF               	dw	65535	; assembler added errata NOP
  8778  002258  90D8               	bcf	status,0,c
  8779  00225A  3603               	rlcf	___lwdiv@divisor,f,c
  8780  00225C  3604               	rlcf	___lwdiv@divisor+1,f,c
  8781  00225E  2A07               	incf	___lwdiv@counter,f,c
  8782  002260                     i2l3742:
  8783  002260  FFFF               	dw	65535	; assembler added errata NOP
  8784  002262  AE04               	btfss	___lwdiv@divisor+1,7,c
  8785  002264  D7F8               	goto	i2l3740
  8786  002266                     i2u329_40:
  8787  002266  FFFF               	dw	65535	; assembler added errata NOP
  8788  002268  90D8               	bcf	status,0,c
  8789  00226A  3605               	rlcf	___lwdiv@quotient,f,c
  8790  00226C  3606               	rlcf	___lwdiv@quotient+1,f,c
  8791  00226E  5003               	movf	___lwdiv@divisor,w,c
  8792  002270  5C01               	subwf	___lwdiv@dividend,w,c
  8793  002272  5004               	movf	___lwdiv@divisor+1,w,c
  8794  002274  5802               	subwfb	___lwdiv@dividend+1,w,c
  8795  002276  A0D8               	btfss	status,0,c
  8796  002278  D005               	goto	i2l3752
  8797  00227A  5003               	movf	___lwdiv@divisor,w,c
  8798  00227C  5E01               	subwf	___lwdiv@dividend,f,c
  8799  00227E  5004               	movf	___lwdiv@divisor+1,w,c
  8800  002280  5A02               	subwfb	___lwdiv@dividend+1,f,c
  8801  002282  8005               	bsf	___lwdiv@quotient,0,c
  8802  002284                     i2l3752:
  8803  002284  FFFF               	dw	65535	; assembler added errata NOP
  8804  002286  90D8               	bcf	status,0,c
  8805  002288  3204               	rrcf	___lwdiv@divisor+1,f,c
  8806  00228A  3203               	rrcf	___lwdiv@divisor,f,c
  8807  00228C  2E07               	decfsz	___lwdiv@counter,f,c
  8808  00228E  D7EB               	goto	i2u329_40
  8809  002290                     i2l1104:
  8810  002290  FFFF               	dw	65535	; assembler added errata NOP
  8811  002292  C005  F001         	movff	___lwdiv@quotient,?___lwdiv
  8812  002296  C006  F002         	movff	___lwdiv@quotient+1,?___lwdiv+1
  8813  00229A  0012               	return		;funcret
  8814  00229C  FFFF               	dw	65535	; errata NOP
  8815  00229E                     __end_of___lwdiv:
  8816                           	opt callstack 0
  8817                           
  8818 ;; *************** function _time *****************
  8819 ;; Defined at:
  8820 ;;		line 104 in file "main.c"
  8821 ;; Parameters:    Size  Location     Type
  8822 ;;		None
  8823 ;; Auto vars:     Size  Location     Type
  8824 ;;		None
  8825 ;; Return value:  Size  Location     Type
  8826 ;;                  1    wreg      void 
  8827 ;; Registers used:
  8828 ;;		wreg, status,2, status,0, cstack
  8829 ;; Tracked objects:
  8830 ;;		On entry : 0/0
  8831 ;;		On exit  : 0/0
  8832 ;;		Unchanged: 0/0
  8833 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8834 ;;      Params:         0       0       0       0       0       0       0
  8835 ;;      Locals:         0       0       0       0       0       0       0
  8836 ;;      Temps:          0       0       0       0       0       0       0
  8837 ;;      Totals:         0       0       0       0       0       0       0
  8838 ;;Total ram usage:        0 bytes
  8839 ;; Hardware stack levels used:    1
  8840 ;; Hardware stack levels required when called:    2
  8841 ;; This function calls:
  8842 ;;		i2_setData
  8843 ;; This function is called by:
  8844 ;;		_inter
  8845 ;; This function uses a non-reentrant model
  8846 ;;
  8847                           
  8848                           	psect	text58
  8849  00203E                     __ptext58:
  8850                           	opt callstack 0
  8851  00203E                     _time:
  8852                           	opt callstack 0
  8853  00203E  FFFF               	dw	65535	; assembler added errata NOP
  8854                           
  8855                           ;main.c: 105:     hundredMiliSeconds++;
  8856                           
  8857                           ;incstack = 0
  8858  002040  0100               	movlb	0	; () banked
  8859  002042  2BF9               	incf	_hundredMiliSeconds& (0+255),f,b
  8860                           
  8861                           ; BSR set to: 0
  8862                           ;main.c: 106:     if(hundredMiliSeconds >= 10){
  8863  002044  0E09               	movlw	9
  8864  002046  65F9               	cpfsgt	_hundredMiliSeconds& (0+255),b
  8865  002048  D02E               	goto	i2l234
  8866                           
  8867                           ; BSR set to: 0
  8868                           ;main.c: 107:         hundredMiliSeconds = 0;
  8869  00204A  0E00               	movlw	0
  8870  00204C  6FF9               	movwf	_hundredMiliSeconds& (0+255),b
  8871                           
  8872                           ; BSR set to: 0
  8873                           ;main.c: 108:         seconds++;
  8874  00204E  2BFA               	incf	_seconds& (0+255),f,b
  8875                           
  8876                           ; BSR set to: 0
  8877                           ;main.c: 109:         if(seconds >= 60){
  8878  002050  0E3B               	movlw	59
  8879  002052  65FA               	cpfsgt	_seconds& (0+255),b
  8880  002054  D028               	goto	i2l234
  8881                           
  8882                           ; BSR set to: 0
  8883                           ;main.c: 110:             seconds = 0;
  8884  002056  0E00               	movlw	0
  8885  002058  6FFA               	movwf	_seconds& (0+255),b
  8886                           
  8887                           ; BSR set to: 0
  8888                           ;main.c: 111:             minutes++;
  8889  00205A  2BFC               	incf	_minutes& (0+255),f,b
  8890                           
  8891                           ; BSR set to: 0
  8892                           ;main.c: 112:             setData(0);
  8893  00205C  0E00               	movlw	0
  8894  00205E  ECE6  F00F         	call	i2_setData
  8895                           
  8896                           ;main.c: 113:             if(minutes >= 60){
  8897  002062  0E3B               	movlw	59
  8898  002064  0100               	movlb	0	; () banked
  8899  002066  65FC               	cpfsgt	_minutes& (0+255),b
  8900  002068  D01E               	goto	i2l234
  8901                           
  8902                           ; BSR set to: 0
  8903                           ;main.c: 114:                 minutes = 0;
  8904  00206A  0E00               	movlw	0
  8905  00206C  6FFC               	movwf	_minutes& (0+255),b
  8906                           
  8907                           ; BSR set to: 0
  8908                           ;main.c: 115:                 hours++;
  8909  00206E  2BFD               	incf	_hours& (0+255),f,b
  8910                           
  8911                           ; BSR set to: 0
  8912                           ;main.c: 116:                 if(hours >= 24){
  8913  002070  0E17               	movlw	23
  8914  002072  65FD               	cpfsgt	_hours& (0+255),b
  8915  002074  D018               	goto	i2l234
  8916                           
  8917                           ; BSR set to: 0
  8918                           ;main.c: 117:                     hours = 0;
  8919  002076  0E00               	movlw	0
  8920  002078  6FFD               	movwf	_hours& (0+255),b
  8921                           
  8922                           ; BSR set to: 0
  8923                           ;main.c: 118:                     days++;
  8924  00207A  2BFE               	incf	_days& (0+255),f,b
  8925                           
  8926                           ; BSR set to: 0
  8927                           ;main.c: 119:                     if(days >= 30){
  8928  00207C  0E1D               	movlw	29
  8929  00207E  65FE               	cpfsgt	_days& (0+255),b
  8930  002080  D003               	goto	i2l3948
  8931                           
  8932                           ; BSR set to: 0
  8933                           ;main.c: 120:                         days = 0;
  8934  002082  0E00               	movlw	0
  8935  002084  6FFE               	movwf	_days& (0+255),b
  8936                           
  8937                           ; BSR set to: 0
  8938                           ;main.c: 121:                         months++;
  8939  002086  2BFF               	incf	_months& (0+255),f,b
  8940  002088                     i2l3948:
  8941  002088  FFFF               	dw	65535	; assembler added errata NOP
  8942                           
  8943                           ; BSR set to: 0
  8944  00208A  0E0D               	movlw	13
  8945  00208C  19FE               	xorwf	_days& (0+255),w,b
  8946  00208E  A4D8               	btfss	status,2,c
  8947  002090  D006               	goto	i2l3954
  8948                           
  8949                           ; BSR set to: 0
  8950  002092  0E06               	movlw	6
  8951  002094  19FF               	xorwf	_months& (0+255),w,b
  8952  002096  A4D8               	btfss	status,2,c
  8953  002098  D002               	goto	i2l3954
  8954                           
  8955                           ; BSR set to: 0
  8956  00209A  0E00               	movlw	0
  8957  00209C  D002               	goto	L13
  8958  00209E                     i2l3954:
  8959  00209E  FFFF               	dw	65535	; assembler added errata NOP
  8960                           
  8961                           ; BSR set to: 0
  8962  0020A0  0E01               	movlw	1
  8963  0020A2                     L13:
  8964  0020A2  FFFF               	dw	65535	; assembler added errata NOP
  8965  0020A4  6FF8               	movwf	_functionalStat& (0+255),b
  8966  0020A6                     i2l234:
  8967  0020A6  FFFF               	dw	65535	; assembler added errata NOP
  8968                           
  8969                           ; BSR set to: 0
  8970  0020A8  0012               	return		;funcret
  8971  0020AA  FFFF               	dw	65535	; errata NOP
  8972  0020AC                     __end_of_time:
  8973                           	opt callstack 0
  8974                           
  8975 ;; *************** function i2_setData *****************
  8976 ;; Defined at:
  8977 ;;		line 46 in file "eeprom.c"
  8978 ;; Parameters:    Size  Location     Type
  8979 ;;  full            1    wreg     unsigned char 
  8980 ;; Auto vars:     Size  Location     Type
  8981 ;;  full            1    4[COMRAM] unsigned char 
  8982 ;;  setData         1    3[COMRAM] unsigned char 
  8983 ;;  setData         1    2[COMRAM] unsigned char 
  8984 ;; Return value:  Size  Location     Type
  8985 ;;                  1    wreg      void 
  8986 ;; Registers used:
  8987 ;;		wreg, status,2, cstack
  8988 ;; Tracked objects:
  8989 ;;		On entry : 0/0
  8990 ;;		On exit  : 0/0
  8991 ;;		Unchanged: 0/0
  8992 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8993 ;;      Params:         0       0       0       0       0       0       0
  8994 ;;      Locals:         3       0       0       0       0       0       0
  8995 ;;      Temps:          0       0       0       0       0       0       0
  8996 ;;      Totals:         3       0       0       0       0       0       0
  8997 ;;Total ram usage:        3 bytes
  8998 ;; Hardware stack levels used:    1
  8999 ;; Hardware stack levels required when called:    1
  9000 ;; This function calls:
  9001 ;;		i2_writeEEPROM
  9002 ;; This function is called by:
  9003 ;;		_time
  9004 ;; This function uses a non-reentrant model
  9005 ;;
  9006                           
  9007                           	psect	text59
  9008  001FCC                     __ptext59:
  9009                           	opt callstack 0
  9010  001FCC                     i2_setData:
  9011                           	opt callstack 0
  9012  001FCC  FFFF               	dw	65535	; assembler added errata NOP
  9013                           
  9014                           ; BSR set to: 0
  9015                           ;incstack = 0
  9016                           ;i2setData@full stored from wreg
  9017  001FCE  6E05               	movwf	i2setData@full,c
  9018                           
  9019                           ;eeprom.c: 47:     unsigned char data0 = frequency & 0x00FF;
  9020  001FD0  C0F6  F003         	movff	_frequency,i2setData@data0
  9021                           
  9022                           ;eeprom.c: 48:     unsigned char data1 = frequency >> 8;
  9023  001FD4  0100               	movlb	0	; () banked
  9024  001FD6  51F7               	movf	(_frequency+1)& (0+255),w,b
  9025  001FD8  6E04               	movwf	i2setData@data1,c
  9026                           
  9027                           ; BSR set to: 0
  9028                           ;eeprom.c: 49:     if(full)writeEEPROM(data0 ,0);
  9029  001FDA  5005               	movf	i2setData@full,w,c
  9030  001FDC  B4D8               	btfsc	status,2,c
  9031  001FDE  D005               	goto	i2l3780
  9032                           
  9033                           ; BSR set to: 0
  9034  001FE0  0E00               	movlw	0
  9035  001FE2  6E01               	movwf	i2writeEEPROM@address,c
  9036  001FE4  5003               	movf	i2setData@data0,w,c
  9037  001FE6  EC43  F014         	call	i2_writeEEPROM
  9038  001FEA                     i2l3780:
  9039  001FEA  FFFF               	dw	65535	; assembler added errata NOP
  9040                           
  9041                           ;eeprom.c: 50:     if(full)writeEEPROM(data1 ,1);
  9042  001FEC  5005               	movf	i2setData@full,w,c
  9043  001FEE  B4D8               	btfsc	status,2,c
  9044  001FF0  D005               	goto	i2l68
  9045  001FF2  0E01               	movlw	1
  9046  001FF4  6E01               	movwf	i2writeEEPROM@address,c
  9047  001FF6  5004               	movf	i2setData@data1,w,c
  9048  001FF8  EC43  F014         	call	i2_writeEEPROM
  9049  001FFC                     i2l68:
  9050  001FFC  FFFF               	dw	65535	; assembler added errata NOP
  9051                           
  9052                           ;eeprom.c: 51:     writeEEPROM(months ,2);
  9053  001FFE  0E02               	movlw	2
  9054  002000  6E01               	movwf	i2writeEEPROM@address,c
  9055  002002  0100               	movlb	0	; () banked
  9056  002004  51FF               	movf	_months& (0+255),w,b
  9057  002006  EC43  F014         	call	i2_writeEEPROM
  9058                           
  9059                           ;eeprom.c: 52:     writeEEPROM(days ,3);
  9060  00200A  0E03               	movlw	3
  9061  00200C  6E01               	movwf	i2writeEEPROM@address,c
  9062  00200E  0100               	movlb	0	; () banked
  9063  002010  51FE               	movf	_days& (0+255),w,b
  9064  002012  EC43  F014         	call	i2_writeEEPROM
  9065                           
  9066                           ;eeprom.c: 53:     writeEEPROM(hours ,4);
  9067  002016  0E04               	movlw	4
  9068  002018  6E01               	movwf	i2writeEEPROM@address,c
  9069  00201A  0100               	movlb	0	; () banked
  9070  00201C  51FD               	movf	_hours& (0+255),w,b
  9071  00201E  EC43  F014         	call	i2_writeEEPROM
  9072                           
  9073                           ;eeprom.c: 54:     writeEEPROM(minutes ,5);
  9074  002022  0E05               	movlw	5
  9075  002024  6E01               	movwf	i2writeEEPROM@address,c
  9076  002026  0100               	movlb	0	; () banked
  9077  002028  51FC               	movf	_minutes& (0+255),w,b
  9078  00202A  EC43  F014         	call	i2_writeEEPROM
  9079                           
  9080                           ;eeprom.c: 55:     writeEEPROM(functionalStat ,6);
  9081  00202E  0E06               	movlw	6
  9082  002030  6E01               	movwf	i2writeEEPROM@address,c
  9083  002032  0100               	movlb	0	; () banked
  9084  002034  51F8               	movf	_functionalStat& (0+255),w,b
  9085  002036  EC43  F014         	call	i2_writeEEPROM
  9086  00203A  0012               	return		;funcret
  9087  00203C  FFFF               	dw	65535	; errata NOP
  9088  00203E                     __end_ofi2_setData:
  9089                           	opt callstack 0
  9090                           
  9091 ;; *************** function i2_writeEEPROM *****************
  9092 ;; Defined at:
  9093 ;;		line 15 in file "eeprom.c"
  9094 ;; Parameters:    Size  Location     Type
  9095 ;;  data            1    wreg     unsigned char 
  9096 ;;  address         1    0[COMRAM] unsigned char 
  9097 ;; Auto vars:     Size  Location     Type
  9098 ;;  data            1    1[COMRAM] unsigned char 
  9099 ;; Return value:  Size  Location     Type
  9100 ;;                  1    wreg      void 
  9101 ;; Registers used:
  9102 ;;		wreg, status,2
  9103 ;; Tracked objects:
  9104 ;;		On entry : 0/0
  9105 ;;		On exit  : 0/0
  9106 ;;		Unchanged: 0/0
  9107 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9108 ;;      Params:         1       0       0       0       0       0       0
  9109 ;;      Locals:         1       0       0       0       0       0       0
  9110 ;;      Temps:          0       0       0       0       0       0       0
  9111 ;;      Totals:         2       0       0       0       0       0       0
  9112 ;;Total ram usage:        2 bytes
  9113 ;; Hardware stack levels used:    1
  9114 ;; This function calls:
  9115 ;;		Nothing
  9116 ;; This function is called by:
  9117 ;;		i2_setData
  9118 ;; This function uses a non-reentrant model
  9119 ;;
  9120                           
  9121                           	psect	text60
  9122  002886                     __ptext60:
  9123                           	opt callstack 0
  9124  002886                     i2_writeEEPROM:
  9125                           	opt callstack 0
  9126  002886  FFFF               	dw	65535	; assembler added errata NOP
  9127                           
  9128                           ;incstack = 0
  9129                           ;i2writeEEPROM@data stored from wreg
  9130  002888  6E02               	movwf	i2writeEEPROM@data,c
  9131                           
  9132                           ;eeprom.c: 16:     EEADR = address;
  9133  00288A  C001  FFA9         	movff	i2writeEEPROM@address,4009	;volatile
  9134                           
  9135                           ;eeprom.c: 17:     EEDATA = data;
  9136  00288E  C002  FFA8         	movff	i2writeEEPROM@data,4008	;volatile
  9137                           
  9138                           ;eeprom.c: 19:     EECON1bits.EEPGD = 0;
  9139  002892  9EA6               	bcf	4006,7,c	;volsfr
  9140                           
  9141                           ;eeprom.c: 20:     EECON1bits.CFGS = 0;
  9142  002894  9CA6               	bcf	4006,6,c	;volsfr
  9143                           
  9144                           ;eeprom.c: 21:     EECON1bits.WREN = 1;
  9145  002896  84A6               	bsf	4006,2,c	;volsfr
  9146                           
  9147                           ;eeprom.c: 23:     INTCONbits.GIE = 0;
  9148  002898  9EF2               	bcf	4082,7,c	;volatile
  9149                           
  9150                           ;eeprom.c: 24:     EECON2 = 0x55;
  9151  00289A  0E55               	movlw	85
  9152  00289C  6EA7               	movwf	4007,c	;volsfr
  9153                           
  9154                           ;eeprom.c: 25:     EECON2 = 0xAA;
  9155  00289E  0EAA               	movlw	170
  9156  0028A0  6EA7               	movwf	4007,c	;volsfr
  9157                           
  9158                           ;eeprom.c: 26:     EECON1bits.WR = 1;
  9159  0028A2  82A6               	bsf	4006,1,c	;volsfr
  9160                           
  9161                           ;eeprom.c: 27:     INTCONbits.GIE = 1;
  9162  0028A4  8EF2               	bsf	4082,7,c	;volatile
  9163  0028A6                     i2l58:
  9164  0028A6  FFFF               	dw	65535	; assembler added errata NOP
  9165  0028A8  B8A1               	btfsc	4001,4,c	;volatile
  9166  0028AA  0012               	return		;funcret
  9167  0028AC  FFFF               	dw	65535	; assembler added errata NOP
  9168  0028AE  D7FB               	goto	i2l58
  9169  0028B0  FFFF               	dw	65535	; errata NOP
  9170  0028B2                     __end_ofi2_writeEEPROM:
  9171                           	opt callstack 0
  9172                           
  9173                           	psect	rparam
  9174  0000                     
  9175                           	psect	temp
  9176  00007F                     btemp:
  9177                           	opt callstack 0
  9178  00007F                     	ds	1
  9179  0000                     int$flags	set	btemp
  9180  0000                     wtemp8	set	btemp+1
  9181  0000                     ttemp5	set	btemp+1
  9182  0000                     ttemp6	set	btemp+4
  9183  0000                     ttemp7	set	btemp+8
  9184                           tosu	equ	0xFFF
  9185                           tosh	equ	0xFFE
  9186                           tosl	equ	0xFFD
  9187                           stkptr	equ	0xFFC
  9188                           pclatu	equ	0xFFB
  9189                           pclath	equ	0xFFA
  9190                           pcl	equ	0xFF9
  9191                           tblptru	equ	0xFF8
  9192                           tblptrh	equ	0xFF7
  9193                           tblptrl	equ	0xFF6
  9194                           tablat	equ	0xFF5
  9195                           prodh	equ	0xFF4
  9196                           prodl	equ	0xFF3
  9197                           indf0	equ	0xFEF
  9198                           postinc0	equ	0xFEE
  9199                           postdec0	equ	0xFED
  9200                           preinc0	equ	0xFEC
  9201                           plusw0	equ	0xFEB
  9202                           fsr0h	equ	0xFEA
  9203                           fsr0l	equ	0xFE9
  9204                           wreg	equ	0xFE8
  9205                           indf1	equ	0xFE7
  9206                           postinc1	equ	0xFE6
  9207                           postdec1	equ	0xFE5
  9208                           preinc1	equ	0xFE4
  9209                           plusw1	equ	0xFE3
  9210                           fsr1h	equ	0xFE2
  9211                           fsr1l	equ	0xFE1
  9212                           bsr	equ	0xFE0
  9213                           indf2	equ	0xFDF
  9214                           postinc2	equ	0xFDE
  9215                           postdec2	equ	0xFDD
  9216                           preinc2	equ	0xFDC
  9217                           plusw2	equ	0xFDB
  9218                           fsr2h	equ	0xFDA
  9219                           fsr2l	equ	0xFD9
  9220                           status	equ	0xFD8


Data Sizes:
    Strings     69
    Constant    4
    Data        9
    BSS         80
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126    121     126
    BANK0           128    110     128
    BANK1           256      0      66
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    i2sprintf@f.buffer	PTR unsigned char  size(2) Largest target is 0
		 -> lineTwo(BANK1[17]), lineOne(BANK1[17]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 18
		 -> STR_4(CODE[18]), STR_3(CODE[17]), STR_2(CODE[17]), STR_1(CODE[17]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 17
		 -> lineTwo(BANK1[17]), lineOne(BANK1[17]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 17
		 -> lineTwo(BANK1[17]), lineOne(BANK1[17]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    S1516_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 17
		 -> lineTwo(BANK1[17]), lineOne(BANK1[17]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 17
		 -> lineTwo(BANK1[17]), lineOne(BANK1[17]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 18
		 -> STR_4(CODE[18]), STR_3(CODE[17]), STR_2(CODE[17]), STR_1(CODE[17]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 18
		 -> STR_4(CODE[18]), STR_3(CODE[17]), STR_2(CODE[17]), STR_1(CODE[17]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 18
		 -> STR_4(CODE[18]), STR_3(CODE[17]), STR_2(CODE[17]), STR_1(CODE[17]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    putsXLCD@buffer	PTR unsigned char  size(2) Largest target is 17
		 -> lineTwo(BANK1[17]), lineOne(BANK1[17]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _inter in COMRAM

    _inter->_updateLCD
    _updateLCD->i2_sprintf
    i2_sprintf->i2_vfprintf
    i2_vfprintf->i2_vfpfcnvrt
    i2_vfpfcnvrt->i2_dtoa
    i2_dtoa->i2_pad
    i2_pad->i2_fputs
    i2_fputs->i2_fputc
    i2_abs->i2___aomod
    i2_atoi->i2_isspace
    _putsXLCD->_WriteDataXLCD
    _putsXLCD->i2_BusyXLCD
    _time->i2_setData
    i2_setData->i2_writeEEPROM

Critical Paths under _main in BANK0

    _main->_setFrequency
    _setFrequency->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _atoi->_isspace
    _setData->_writeEEPROM
    _beep->___wmul
    _getData->_readEEPROM
    _config->_initLCD
    _initLCD->_OpenXLCD
    _SendCMDLCD->_BusyXLCD
    _SendCMDLCD->_WriteCmdXLCD
    _OpenXLCD->_BusyXLCD
    _OpenXLCD->_DelayPORXLCD
    _OpenXLCD->_SetDDRamAddr
    _OpenXLCD->_WriteCmdXLCD

Critical Paths under _inter in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _inter in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _inter in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _inter in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _inter in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _inter in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0   20848
                                            107 BANK0      3     3      0
                               _beep
                             _config
                            _getData
                       _setFrequency
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _setFrequency                                         2     2      0   10612
                                            105 BANK0      2     2      0
                               _beep
                            _setData
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             14    10      4    8715
                                             91 BANK0     14    10      4
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6    7947
                                             83 BANK0      8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           46    40      6    7562
                                             63 BANK0     20    14      6
                               _atoi
                               _dtoa
                              _fputc
                            _isdigit
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                36    26     10    4358
                                             27 BANK0     36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    2709
                                             16 BANK0     11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               4     2      2     166
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    1235
                                              9 BANK0      7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4     834
                                              0 BANK0      9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     142
                                             18 BANK0      4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             18     2     16     448
                                              0 BANK0     18     2     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             26    10     16     452
                                              0 BANK0     26    10     16
 ---------------------------------------------------------------------------------
 (4) _atoi                                                15    13      2    1396
                                              7 BANK0     15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (5) _isspace                                              7     5      2     207
                                              0 BANK0      7     5      2
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              6     4      2     237
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (2) _setData                                              3     3      0     666
                                              2 BANK0      3     3      0
                        _writeEEPROM
 ---------------------------------------------------------------------------------
 (3) _writeEEPROM                                          2     1      1     576
                                              0 BANK0      2     1      1
 ---------------------------------------------------------------------------------
 (2) _beep                                                 2     0      2    1231
                                              6 BANK0      2     0      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     555
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) _getData                                              4     4      0      68
                                              1 BANK0      4     4      0
                         _readEEPROM
 ---------------------------------------------------------------------------------
 (2) _readEEPROM                                           1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _config                                               0     0      0     176
                            _initLCD
 ---------------------------------------------------------------------------------
 (2) _initLCD                                              2     2      0     176
                                              3 BANK0      2     2      0
                           _OpenXLCD
                         _SendCMDLCD
 ---------------------------------------------------------------------------------
 (3) _SendCMDLCD                                           1     1      0      66
                                              1 BANK0      1     1      0
                           _BusyXLCD
                       _WriteCmdXLCD
 ---------------------------------------------------------------------------------
 (3) _OpenXLCD                                             2     2      0     110
                                              1 BANK0      2     2      0
                           _BusyXLCD
                       _DelayPORXLCD
                       _SetDDRamAddr
                       _WriteCmdXLCD
 ---------------------------------------------------------------------------------
 (4) _WriteCmdXLCD                                         1     1      0      44
                                              0 BANK0      1     1      0
                      _DelayFor18TCY
 ---------------------------------------------------------------------------------
 (4) _SetDDRamAddr                                         1     1      0      44
                                              0 BANK0      1     1      0
                      _DelayFor18TCY
 ---------------------------------------------------------------------------------
 (5) _DelayFor18TCY                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _DelayPORXLCD                                         1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _BusyXLCD                                             1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _inter                                              10    10      0    6501
                                            111 COMRAM    10    10      0
                               _time
                          _updateLCD
                            _vumeter
 ---------------------------------------------------------------------------------
 (11) _vumeter                                             5     5      0     135
                                              0 COMRAM     5     5      0
 ---------------------------------------------------------------------------------
 (11) _updateLCD                                           2     2      0    6050
                                            109 COMRAM     2     2      0
                            ___lwdiv
                            ___lwmod
                           _putsXLCD
                     i2_SetDDRamAddr
                          i2_sprintf
 ---------------------------------------------------------------------------------
 (12) i2_sprintf                                          18    10      8    5094
                                             91 COMRAM    18    10      8
                         i2_vfprintf
 ---------------------------------------------------------------------------------
 (13) i2_vfprintf                                          8     2      6    4841
                                             83 COMRAM     8     2      6
                        i2_vfpfcnvrt
 ---------------------------------------------------------------------------------
 (14) i2_vfpfcnvrt                                        46    40      6    4629
                                             63 COMRAM    20    14      6
                             i2_atoi
                             i2_dtoa
                            i2_fputc
                          i2_isdigit
 ---------------------------------------------------------------------------------
 (15) i2_dtoa                                             36    26     10    2808
                                             27 COMRAM    36    26     10
                          i2___aodiv
                          i2___aomod
                              i2_abs
                              i2_pad
 ---------------------------------------------------------------------------------
 (16) i2_pad                                              11     5      6    1509
                                             16 COMRAM    11     5      6
                            i2_fputc
                            i2_fputs
                           i2_strlen
 ---------------------------------------------------------------------------------
 (17) i2_strlen                                            4     2      2     116
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (17) i2_fputs                                             7     3      4     635
                                              9 COMRAM     7     3      4
                            i2_fputc
 ---------------------------------------------------------------------------------
 (15) i2_fputc                                             9     5      4     434
                                              0 COMRAM     9     5      4
                            i2_putch
 ---------------------------------------------------------------------------------
 (16) i2_putch                                             1     1      0       0
 ---------------------------------------------------------------------------------
 (16) i2_abs                                               4     2      2      92
                                             18 COMRAM     4     2      2
                          i2___aomod (ARG)
 ---------------------------------------------------------------------------------
 (16) i2___aomod                                          18     2     16     348
                                              0 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (16) i2___aodiv                                          26    10     16     352
                                              0 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (15) i2_atoi                                             15    13      2     726
                                              7 COMRAM    15    13      2
                           i2___wmul
                          i2_isdigit
                          i2_isspace
 ---------------------------------------------------------------------------------
 (16) i2_isspace                                           7     5      2      94
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (15) i2_isdigit                                           6     4      2      74
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (16) i2___wmul                                            6     2      4     211
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (12) i2_SetDDRamAddr                                      1     1      0      44
                                              0 COMRAM     1     1      0
                    i2_DelayFor18TCY
 ---------------------------------------------------------------------------------
 (12) _putsXLCD                                            2     0      2     241
                                              1 COMRAM     2     0      2
                      _WriteDataXLCD
                         i2_BusyXLCD
 ---------------------------------------------------------------------------------
 (13) i2_BusyXLCD                                          1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (13) _WriteDataXLCD                                       1     1      0      44
                                              0 COMRAM     1     1      0
                    i2_DelayFor18TCY
 ---------------------------------------------------------------------------------
 (13) i2_DelayFor18TCY                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (12) ___lwmod                                             5     1      4     311
                                              0 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (12) ___lwdiv                                             7     3      4     314
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (11) _time                                                0     0      0     316
                          i2_setData
 ---------------------------------------------------------------------------------
 (12) i2_setData                                           3     3      0     316
                                              2 COMRAM     3     3      0
                      i2_writeEEPROM
 ---------------------------------------------------------------------------------
 (13) i2_writeEEPROM                                       2     1      1     226
                                              0 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 17
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _beep
     ___wmul
   _config
     _initLCD
       _OpenXLCD
         _BusyXLCD
         _DelayPORXLCD
         _SetDDRamAddr
           _DelayFor18TCY
         _WriteCmdXLCD
           _DelayFor18TCY
       _SendCMDLCD
         _BusyXLCD
         _WriteCmdXLCD
           _DelayFor18TCY
   _getData
     _readEEPROM
   _setFrequency
     _beep
       ___wmul
     _setData
       _writeEEPROM
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
           _fputc
             _putch
           _isdigit
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _atoi
           ___wmul
           _isdigit
           _isspace
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
             _fputs
               _fputc
                 _putch
             _strlen
         _fputc
           _putch
         _isdigit

 _inter (ROOT)
   _time
     i2_setData
       i2_writeEEPROM
   _updateLCD
     ___lwdiv
     ___lwmod
     _putsXLCD
       _WriteDataXLCD
         i2_DelayFor18TCY
       i2_BusyXLCD
     i2_SetDDRamAddr
       i2_DelayFor18TCY
     i2_sprintf
       i2_vfprintf
         i2_vfpfcnvrt
           i2_atoi
             i2___wmul
             i2_isdigit
             i2_isspace
           i2_dtoa
             i2___aodiv
             i2___aomod
             i2_abs
               i2___aomod (ARG)
             i2_pad
               i2_fputc
                 i2_putch
               i2_fputs
                 i2_fputc
                   i2_putch
               i2_strlen
           i2_fputc
             i2_putch
           i2_isdigit
   _vumeter

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      42       7       25.8%
BITBANK0            80      0       0       4        0.0%
BANK0               80     6E      80       5      100.0%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     79      7E       1      100.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     140      15        0.0%
DATA                 0      0     140       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Wed Aug 07 02:15:29 2019

                                                        _UN_BLOCKED 0603  
                                                                l58 284E  
                                                                l68 1F8A  
                                               ___wmul@multiplicand 0082  
                                                      __CFG_CP0$OFF 000000  
                                                      __CFG_CP1$OFF 000000  
                                                      __CFG_CP2$OFF 000000  
                                                      __CFG_CP3$OFF 000000  
                                                       __CFG_OSC$HS 000000  
                                                               l242 1050  
                                                               l237 22C2  
                                                               l191 1B94  
                                                               l603 08CC  
                                                               l555 1BD2  
                                                               l566 0BD0  
                                                               l568 0BDA  
                                                      __CFG_CPB$OFF 000000  
                                                      __CFG_CPD$OFF 000000  
                                                i2___aodiv@quotient 0013  
                                                      __CFG_BOR$OFF 000000  
                                                               _abs 2662  
                                                               _pad 1B9A  
                                                      __CFG_BORV$20 000000  
                                             __size_of_WriteCmdXLCD 0048  
                                                               wreg 000FE8  
                                                   __end_of_BLOCKED 0605  
                                               __end_ofi2_vfpfcnvrt 0B52  
                                                      __CFG_LVP$OFF 000000  
                                                      __CFG_WDT$OFF 000000  
                                                              ?_abs 0092  
                                                              l1322 1332  
                                                              l1319 1328  
                                                              l3210 1248  
                                                              l1291 269A  
                                                              l3220 12C0  
                                                              l3212 1252  
                                                              l3204 1236  
                                                              l1348 1CF0  
                                                              l4004 1B32  
                                                              l3214 125A  
                                                              l3150 0BF8  
                                                              l4014 1B86  
                                                              l3216 1286  
                                                              l1288 2690  
                                                              l3136 0BB0  
                                                              l3154 0C0A  
                                                              l3410 0710  
                                                              l3164 0D06  
                                                              l3412 0720  
                                                              l3184 0D74  
                                                              l3408 06F0  
                                                              l3194 11E4  
                                                              l3434 086A  
                                                              l3196 11EA  
                                                              l3188 0D90  
                                                              l3428 082A  
                                                              l3444 0892  
                                                              l2814 1C66  
                                                              l3438 0876  
                                                              l3616 28E2  
                                                              l3570 1A6A  
                                                              l3562 1A46  
                                                              l2930 1536  
                                                              l2922 14F8  
                                                              l2842 24F2  
                                                              l3626 2194  
                                                              l3556 1A26  
                                                              l2940 1596  
                                                              l2916 14CE  
                                                              l3628 21BC  
                                                              l3582 1AA0  
                                                              l3574 1A7C  
                                                              l3566 1A58  
                                                              l2838 24D8  
                                                              l2846 27D0  
                                                              l3902 117A  
                                                              ?_pad 0090  
                                                              l2928 1520  
                                                              l2944 15AE  
                                                              l2960 1788  
                                                              l2848 27D8  
                                                              l2880 1BC8  
                                                              l3904 1188  
                                                              l3586 1AB2  
                                                              l3578 1A8E  
                                                              l3682 1F76  
                                                              l2970 17E0  
                                                              l2890 1C28  
                                                              l2882 1BDE  
                                                              l2948 15D6  
                                                              l2980 1844  
                                                              l2964 17AE  
                                                              l2876 1BB6  
                                                              l2886 1BFA  
                                                              l3870 10B2  
                                                              l3862 106E  
                                                              l2984 186C  
                                                              l2976 182C  
                                                              l2968 17CA  
                                                              l3880 10EA  
                                                              l3890 1120  
                                                              l3874 10C6  
                                                              l3866 1084  
                                                              l2996 254A  
                                                              l3894 114E  
                                                              l3886 110A  
                                                              l3878 10DC  
                                                              l3898 1164  
                                                              l3998 1B22  
                                                              STR_1 0617  
                                                              STR_2 0639  
                                                              STR_3 0628  
                                                              STR_4 0605  
                                                              u2111 1500  
                                                              u2130 153C  
                                                              u2060 2674  
                                                              u2070 2746  
                                                              u2230 2546  
                                                              u2080 274A  
                                                              u2500 0BC4  
                                                              u2190 17E6  
                                                              u2520 0BF0  
                                                              u3090 1A32  
                                                              u3250 22F0  
                                                              u2530 0D18  
                                                              u2620 1232  
                                                              u2460 0B7E  
                                                              u3420 10F0  
                                                              u1910 1C5C  
                                                              u2550 0D3A  
                                                              u2470 0B82  
                                                              u2551 0D38  
                                                              _PIE1 000F9D  
                                                              u2640 12F4  
                                                              u2560 0D4A  
                                                              u3360 1056  
                                                              u2650 12F8  
                                                              u1930 1CA8  
                                                              u2570 0D4E  
                                                              u2590 0D5C  
                                                              u3480 118E  
                                                              u2930 075E  
                                                              u3707 1ADE  
                                                              u2940 0762  
                                                              u3717 1B10  
                                                              u2950 0770  
                                                              u3807 19F6  
                                                              u3727 1B56  
                                                              u3817 1A12  
                                                              u3737 109E  
                                                              u2970 07AA  
                                                              u3827 2966  
                                                              u3747 113A  
                                                              u3837 2922  
                                                              u3757 11A0  
                                                              u3847 2904  
                                                              u3767 22C8  
                                                              u3777 22D2  
                                                              u3787 2402  
                                                              u3797 2426  
                                                              i2l58 28A6  
                                                              i2l68 1FFC  
                                                      __CFG_PWRT$ON 000000  
                                                      _stereoEnable 00FB  
                                                      __CFG_STVR$ON 000000  
                                                              abs@a 0092  
                                                              _beep 229E  
                                                              _dbuf 0100  
                                                              _days 00FE  
                                                              _atoi 11CE  
                                                              _main 1AC8  
                                                              _dtoa 0B52  
                                                              _prec 00F2  
                                                              _time 203E  
                                                              _nout 00EE  
                                                              pad@i 0097  
                                                              pad@p 0094  
                                                              fsr1h 000FE2  
                                                              fsr2h 000FDA  
                                                              indf2 000FDF  
                                                              fsr1l 000FE1  
                                                              pad@w 0099  
                                                              fsr2l 000FD9  
                                                              btemp 007F  
                                                       i2_atoi$1494 0010  
                                                       i2_atoi$1495 0014  
                                                       i2_atoi$1496 0012  
                                            __size_of_WriteDataXLCD 0042  
                                                              prodh 000FF4  
                                                              prodl 000FF3  
                                                              start 00A6  
                                                   __end_ofi2_fputc 1DA2  
                                                   __end_ofi2_fputs 2620  
                                                   __end_ofi2_putch 298E  
                                                       i2_dtoa$1022 002E  
                                                      ___param_bank 000000  
                                                       _writeEEPROM 282C  
                                                             ??_abs 0094  
                                                             ??_pad 0096  
                                                      _WriteCmdXLCD 2482  
                                                  ?i2_DelayFor18TCY 0001  
                                                        i2_vfprintf 21DE  
                                                     __CFG_OSCS$OFF 000000  
                                                             ?_beep 0086  
                                                   __end_of___aodiv 15FC  
                                                writeEEPROM@address 0080  
                                                             ?_atoi 0087  
                                                     ?_SetDDRamAddr 0001  
                                                             ?_main 0001  
                                                             ?_dtoa 009B  
                                                   __end_of___aomod 1892  
                                                             _EEADR 000FA9  
                                                             ?_time 0001  
                                                             _T0CON 000FD5  
                                                             _T1CON 000FCD  
                                                   __end_of___lwdiv 229E  
                                                   __end_of___lwmod 23EE  
                                                             i2l234 20A6  
                                                             i2l218 1EB4  
                                                             i2l603 0B4C  
                                                             i2l555 1DD8  
                                                             i2l566 0E3C  
                                                             i2l568 0E46  
                                                      vfpfcnvrt@fmt 00C1  
                                                             _TMR0H 000FD7  
                                                             _TMR1H 000FCF  
                                                             _TMR0L 000FD6  
                                                             _TMR1L 000FCE  
                                                             _PORTB 000F81  
                                                             _PORTD 000F83  
                                                             _TRISA 000F92  
                                                             _TRISB 000F93  
                                                             _TRISC 000F94  
                                                             _TRISD 000F95  
                                                             _TRISE 000F96  
                                                             i2_abs 26DE  
                                                             i2_pad 1DA2  
                                                     __CFG_WRT0$OFF 000000  
                                                   __end_of_getData 2116  
                                                     __CFG_WRT1$OFF 000000  
                                                     __CFG_WRT2$OFF 000000  
                                                     __CFG_WRT3$OFF 000000  
                                                    __CFG_EBTR0$OFF 000000  
                                                    __CFG_EBTR1$OFF 000000  
                                                    __CFG_EBTR2$OFF 000000  
                                                    __CFG_EBTR3$OFF 000000  
                                                     __CFG_WRTB$OFF 000000  
                                                     __CFG_WRTC$OFF 000000  
                                                     __CFG_WRTD$OFF 000000  
                                                   __end_of_initLCD 2438  
                                                    __CFG_EBTRB$OFF 000000  
                                                        i2isdigit@c 0001  
                                                             _flags 00F4  
                                                             _fputc 1C48  
                                                             _inter 0008  
                                                             _fputs 24CA  
                                                   __end_of_isdigit 2754  
                                                             _hours 00FD  
                                                             atoi@n 0094  
                                                             pad@fp 0090  
                                                             atoi@s 0087  
                                                   __end_of_setData 1FCC  
                                                             _width 00F0  
                                                             _putch 2982  
                                                             main@i 00ED  
                                                             dtoa@d 009D  
                                                             dtoa@i 00BD  
                                                             dtoa@n 00B5  
                                                             dtoa@p 00AF  
                                                             dtoa@s 00B3  
                                                             dtoa@w 00B1  
                                                   __end_of_isspace 2556  
                                                       ?i2_BusyXLCD 0001  
                                                             tablat 000FF5  
                                                  __end_ofi2___wmul 28DC  
                                                             ttemp5 0080  
                                                             ttemp6 0083  
                                                             ttemp7 0087  
                                                             status 000FD8  
                                                        i2isspace@c 0001  
                                                             wtemp8 0080  
                                                   __end_of_sprintf 234C  
                                                   __end_of_vumeter 1EDC  
                                                __size_ofi2___aodiv 015C  
                                                __size_ofi2___aomod 0138  
                                                  __end_ofi2_strlen 282C  
                                                   __initialization 2116  
                                                 __end_of_FINAL_DAY 0602  
                                                      __end_of_beep 22F6  
                                                      __end_of_atoi 1338  
                                                      __end_of_main 1B9A  
                                                      __end_of_dtoa 0DBE  
                                                      __end_of_time 20AC  
                                                  __end_of_BusyXLCD 2918  
                                                  ??i2_SetDDRamAddr 0001  
                                             __size_of_DelayPORXLCD 001C  
                                                __size_ofi2_isdigit 0038  
                                                __size_ofi2_setData 0072  
                                                       i2_vfpfcnvrt 08D2  
                                                    ??_SetDDRamAddr 0080  
                                                __size_ofi2_isspace 0044  
                                                     i2vfpfcnvrt@ap 0044  
                                                     i2vfpfcnvrt@fp 0040  
                                                     i2vfpfcnvrt@ll 004A  
                                                        _SendCMDLCD 28DC  
                                                            ??_beep 0088  
                                                  __end_of_OpenXLCD 1AC8  
                                                            ??_atoi 0089  
                                                            ??_main 00EB  
                                                            ??_dtoa 00A5  
                                                            ??_time 0006  
                                                     __activetblptr 000002  
                                                        i2sprintf@f 0068  
                                                     _WriteDataXLCD 2620  
                                                        i2sprintf@s 005C  
                                                __size_ofi2_sprintf 0052  
                                                            ?i2_abs 0013  
                                                            ?i2_pad 0011  
                                                _hundredMiliSeconds 00F9  
                                                            _ADCON0 000FC2  
                                                            _ADCON1 000FC1  
                                                            ?_fputc 0080  
                                                            ?_inter 0001  
                                                            ?_fputs 0089  
                                                            _ADRESH 000FC4  
                                                            _EEDATA 000FA8  
                                                            _EECON2 000FA7  
                                                            ?_putch 0001  
                                                            i2l1104 2290  
                                                            i2l1114 23E0  
                                                            i2l1322 1498  
                                                            i2l3010 1DE4  
                                                            i2l3100 197C  
                                                            i2l3004 1DBE  
                                                            i2l3014 1DFE  
                                                            i2l1319 148E  
                                                            i2l3104 19A4  
                                                            i2l3008 1DCE  
                                                            i2l3050 1692  
                                                            i2l3042 1654  
                                                            i2l3018 1E2E  
                                                            i2l1291 2714  
                                                            i2l3124 258E  
                                                            i2l3300 1352  
                                                            i2l3060 16F2  
                                                            i2l3036 162A  
                                                            i2l1348 1D9C  
                                                            i2l3320 13EE  
                                                            i2l3048 167C  
                                                            i2l3064 170A  
                                                            i2l3080 18C0  
                                                            i2l1288 270A  
                                                            i2l3240 0E1A  
                                                            i2l4032 0058  
                                                            i2l3314 13B0  
                                                            i2l3090 1918  
                                                            i2l4034 005C  
                                                            i2l3324 1426  
                                                            i2l3316 13BA  
                                                            i2l3308 139E  
                                                            i2l3068 1732  
                                                            i2l3084 18E6  
                                                            i2l3500 0AF8  
                                                            i2l4044 0074  
                                                            i2l3318 13C2  
                                                            i2l3254 0E64  
                                                            i2l2550 1E76  
                                                            i2l2542 1E5E  
                                                            i2l3096 1964  
                                                            i2l3088 1902  
                                                            i2l3258 0E76  
                                                            i2l3506 0B14  
                                                            i2l2562 1E9A  
                                                            i2l2554 1E82  
                                                            i2l2546 1E6A  
                                                            i2l3292 0FFC  
                                                            i2l3268 0F70  
                                                            i2l3470 0976  
                                                            i2l2566 1EA6  
                                                            i2l2558 1E8E  
                                                            i2l3288 0FE0  
                                                            i2l3472 0996  
                                                            i2l3298 134C  
                                                            i2l3490 0AAE  
                                                            i2l3474 09A6  
                                                            i2l3740 2256  
                                                            i2l3732 27AE  
                                                            i2l2828 1D12  
                                                            i2l2860 2602  
                                                            i2l3660 221C  
                                                            i2l3742 2260  
                                                            i2l3726 2790  
                                                            i2l3752 2284  
                                                            i2l3760 23AE  
                                                            i2l2856 25EA  
                                                            i2l2864 2806  
                                                            i2l3496 0AEE  
                                                            i2l3762 23B8  
                                                            i2l2866 280C  
                                                            i2l3658 21F4  
                                                            i2l3780 1FEA  
                                                            i2l3768 23D4  
                                                            _INTCON 000FF2  
                                                            i2l3954 209E  
                                                            i2l3948 2088  
                                                         ??i2_fputc 0005  
                                                         ??i2_fputs 000E  
                                                            _OSCCON 000FD3  
                                                         ??i2_putch 0001  
                                                    __CFG_WDTPS$128 000000  
                                                    i2___aodiv@sign 0012  
                                                            i2abs@a 0013  
                                                            i2_atoi 1338  
                                                            i2_dtoa 0DBE  
                                                            i2pad@i 0018  
                                                            i2pad@p 0015  
                                                            i2pad@w 001A  
                                                      _DelayPORXLCD 2918  
                                                      vfprintf@cfmt 00D9  
                                             __end_ofi2_writeEEPROM 28B2  
                                                    i2___aomod@sign 0012  
                                                         ??___aodiv 0090  
                                                     i2vfprintf@fmt 0056  
                                                         ??___aomod 0090  
                                                            ___wmul 285A  
                                                         ??___lwdiv 0005  
                                                            beep@ms 0086  
                                                         ??___lwmod 0005  
                                                            _config 26A0  
                                                       ?i2_vfprintf 0054  
                                                            clear_0 215C  
                                                            clear_1 2168  
                                                         ??_getData 0081  
                                                            _months 00FF  
                                               __size_ofi2_BusyXLCD 0018  
                                                            pad@buf 0092  
                                                    ?_WriteDataXLCD 0001  
                                                            dtoa@fp 009B  
                                                            _strlen 27C4  
                                                         ??_initLCD 0083  
                                                            fputc@c 0080  
                                                            fputs@c 008D  
                                                            fputs@i 008E  
                                                      __pdataCOMRAM 007A  
                                                 __end_ofi2___aodiv 1758  
                                                            fputs@s 0089  
                                                         ??_isdigit 0082  
                                                 __end_ofi2___aomod 19CA  
                                                         ??_setData 0082  
                                                      __mediumconst 0000  
                                                         ??_isspace 0082  
                                                            tblptrh 000FF7  
                                                            tblptrl 000FF6  
                                                            tblptru 000FF8  
                                                            putch@c 0001  
                                                  __end_of_putsXLCD 27C4  
                                                i2___aomod@dividend 0001  
                                                  __end_of_vfprintf 21DE  
                                                         ??_sprintf 00DF  
                                                         ??_vumeter 0001  
                                                 __end_ofi2_isdigit 278C  
                                                 __end_ofi2_setData 203E  
                                                        __accesstop 0080  
                                           __end_of__initialization 2170  
                                                 __end_ofi2_isspace 259A  
                                                     ___rparam_used 000001  
                                                   writeEEPROM@data 0081  
                                                 __end_ofi2_sprintf 239E  
                                                     __end_ofi2_abs 271A  
                                                     __end_ofi2_pad 1E4C  
                                                    __pcstackCOMRAM 0001  
                                                      __pidataBANK0 298E  
                                                     __end_of_fputc 1CF6  
                                                     __end_of_inter 00A6  
                                                     __end_of_fputs 2510  
                                                     __end_of_putch 2988  
                                                       ?_SendCMDLCD 0001  
                                                         ?i2___wmul 0001  
                                                           ??i2_abs 0015  
                                                           ??i2_pad 0017  
                                                       setData@full 0084  
                                                    i2vfpfcnvrt@fmt 0042  
                                                         ?i2_strlen 0001  
                                                           ??_fputc 0084  
                                                           ??_inter 0070  
                                                           ??_fputs 008D  
                                            __size_of_DelayFor18TCY 0010  
                                                           ??_putch 0080  
                                                     ?_setFrequency 0001  
                                                        __pbssBANK0 00EE  
                                                        __pbssBANK1 0100  
                                                         ?_BusyXLCD 0001  
                                                       i2sprintf@ap 0066  
                                               __size_ofi2_vfprintf 0060  
                                                   WriteCmdXLCD@cmd 0080  
                                              __end_of_SetDDRamAddr 2482  
                                                           ?i2_atoi 0008  
                                                           ?i2_dtoa 001C  
                                                         ?_OpenXLCD 0001  
                                                      ?_writeEEPROM 0080  
                                                 WriteDataXLCD@data 0001  
                                                  __CFG_CCP2MUX$OFF 000000  
                                                           ?___wmul 0080  
                                                           ?_config 0001  
                                                   ??_WriteDataXLCD 0001  
                                                           _BLOCKED 0604  
                                                    updateLCD@decim 006F  
                                                           ?_strlen 0080  
                                                    updateLCD@integ 006E  
                                                        ??i2___wmul 0005  
                                                __size_of_updateLCD 007A  
                                                __size_of_vfpfcnvrt 0286  
                                                        ??i2_strlen 0003  
                                                    ??_setFrequency 00E9  
                                                      ??i2_BusyXLCD 0001  
                                                        ??_BusyXLCD 0080  
                                                           i2_fputc 1CF6  
                                                           i2_fputs 25DE  
                                                           i2atoi@n 0015  
                                                           i2pad@fp 0011  
                                                           i2atoi@s 0008  
                                                           i2_putch 2988  
                                                           i2dtoa@d 001E  
                                                           i2dtoa@i 003E  
                                                           i2dtoa@n 0036  
                                                           i2dtoa@p 0030  
                                                           i2dtoa@s 0034  
                                                           i2dtoa@w 0032  
                                                        _readEEPROM 294C  
                                               __size_of_SendCMDLCD 001E  
                                                        ??_OpenXLCD 0081  
                                                   __size_ofi2_atoi 0166  
                                                   __size_ofi2_dtoa 026C  
                                                           __Hparam 0000  
                                                           __Lparam 0000  
                                                           ___aodiv 149E  
                                                           ___aomod 1758  
                                                     _DelayFor18TCY 2962  
                                                   __size_of___wmul 002C  
                                                         ?_putsXLCD 0002  
                                                           ___lwdiv 223E  
                                                           ___lwmod 239E  
                                                         ?_vfprintf 00D3  
                                                    i2vfprintf@cfmt 005A  
                                                      __psmallconst 0600  
                                                   __size_of_config 003E  
                                                         _FINAL_DAY 0601  
                                                      ?i2_vfpfcnvrt 0040  
                                                           __pcinit 2116  
                                                           _getData 20AC  
                                                           __ramtop 0600  
                                                           __ptext0 1AC8  
                                                           __ptext1 102A  
                                                           __ptext2 22F6  
                                                           __ptext3 217E  
                                                           __ptext4 064C  
                                                           __ptext5 0B52  
                                                           __ptext6 1B9A  
                                                           __ptext7 27C4  
                                                           __ptext8 24CA  
                                                           __ptext9 1C48  
                                                           _cntTmr1 007E  
                                                __end_ofi2_BusyXLCD 294C  
                                                   __size_of_strlen 0036  
                                                           _initLCD 23EE  
                                                         _T1CONbits 000FCD  
                                                           _lineOne 0131  
                                                      __size_of_abs 003E  
                                                           _lineTwo 0120  
                                                      __size_of_pad 00AE  
                                                           _isdigit 271A  
                                                           _prTmr0H 007A  
                                                           _prTmr1H 007C  
                                                           _prTmr0L 007B  
                                                           _prTmr1L 007D  
                                                           _setData 1F56  
                                          __size_ofi2_DelayFor18TCY 0010  
                                                           _minutes 00FC  
                                                           _seconds 00FA  
                                                           _isspace 2510  
                                                           atoi@neg 008D  
                                                           _sprintf 22F6  
                                              end_of_initialization 2170  
                                                           _vumeter 1E4C  
                                                __end_of_UN_BLOCKED 0604  
                                                           fputc@fp 0082  
                                                     __Lmediumconst 0000  
                                                           fputs@fp 008B  
                                               i2___wmul@multiplier 0001  
                                                 __end_of_updateLCD 1F56  
                                                 __end_of_vfpfcnvrt 08D2  
                                                    ?_DelayFor18TCY 0001  
                                                           postdec1 000FE5  
                                                           postdec2 000FDD  
                                                           postinc0 000FEE  
                                                           postinc1 000FE6  
                                                           postinc2 000FDE  
                                                        ??_putsXLCD 0004  
                                                      ??i2_vfprintf 005A  
                                                        ??_vfprintf 00D9  
                                                           strlen@a 0082  
                                                           strlen@s 0080  
                                              i2writeEEPROM@address 0001  
                                                         _PORTAbits 000F80  
                                                         _PORTCbits 000F82  
                                                         _PORTDbits 000F83  
                                                         _PORTEbits 000F84  
                                                 i2___aodiv@divisor 0009  
                                                 i2___aodiv@counter 0011  
                                                         _TRISDbits 000F95  
                                             __size_of_SetDDRamAddr 004A  
                                                         i2___aodiv 15FC  
                                                         i2___aomod 1892  
                                                 readEEPROM@address 0080  
                                                __end_ofi2_vfprintf 223E  
                                                       ?_readEEPROM 0001  
                                                         i2_isdigit 2754  
                                                         i2_setData 1FCC  
                                                    __end_ofi2_atoi 149E  
                                                    __end_ofi2_dtoa 102A  
                                                         i2_isspace 2556  
                                                         i2atoi@neg 000E  
                                                         i2_sprintf 234C  
                                               __end_of_FINAL_MONTH 0603  
                                              __size_of_writeEEPROM 002E  
                                              __end_of_setFrequency 11CE  
                                                       vfpfcnvrt@ap 00C3  
                                                       vfpfcnvrt@fp 00BF  
                                                       vfpfcnvrt@ll 00C9  
                                                    __end_of___wmul 2886  
                                                     __pidataCOMRAM 2993  
                                                      ??_SendCMDLCD 0081  
                                                    __end_of_config 26DE  
                                                         i2fputc@fp 0003  
                                                         i2fputs@fp 000C  
                                                      _SetDDRamAddr 2438  
                                                  i2___wmul@product 0005  
                                                   vumeter@vumLevel 0005  
                                                SetDDRamAddr@DDaddr 0080  
                                                    __end_of_strlen 27FA  
                                               start_initialization 2116  
                                                 __size_ofi2___wmul 002A  
                                                      vumeter@level 0004  
                                           __size_ofi2_SetDDRamAddr 0044  
                                                       __end_of_abs 26A0  
                                                       __end_of_pad 1C48  
                                                        ?i2___aodiv 0001  
                                                        ?i2___aomod 0001  
                                            __size_ofi2_writeEEPROM 002C  
                                                 __size_ofi2_strlen 0032  
                                                         i2strlen@a 0003  
                                                         i2strlen@s 0001  
                                                 ??i2_DelayFor18TCY 0001  
                                                 __size_of_BusyXLCD 001E  
                                                          ??i2_atoi 000A  
                                                      setData@data0 0082  
                                                      setData@data1 0083  
                                                          ??i2_dtoa 0026  
                                                __end_of_SendCMDLCD 28FA  
                                                        ?i2_isdigit 0001  
                                                   ??_DelayFor18TCY 0080  
                                                        ?i2_setData 0001  
                                                        ?i2_isspace 0001  
                                                       vfprintf@fmt 00D5  
                                                 __size_of_OpenXLCD 00FE  
                                                      i2vfprintf@ap 0058  
                                                      i2vfprintf@fp 0054  
                                                          ??___wmul 0084  
                                                        ?i2_sprintf 005C  
                                                     ?_WriteCmdXLCD 0001  
                                                          ??_config 0085  
                                                       __pdataBANK0 00FB  
                                                 i2___aomod@divisor 0009  
                                                          ??_strlen 0082  
                                                 i2___aomod@counter 0011  
                                              __size_ofi2_vfpfcnvrt 0280  
                                               __size_of_readEEPROM 0016  
                                                      i2sprintf@fmt 005E  
                                                       __pbssCOMRAM 007E  
                                                     __pcstackBANK0 0080  
                                                  ___aodiv@dividend 0080  
                                                          ?i2_fputc 0001  
                                                          ?i2_fputs 000A  
                                                          ?i2_putch 0001  
                                                         _atoi$1494 008F  
                                                         _atoi$1495 0093  
                                                         _atoi$1496 0091  
                                                       _FINAL_MONTH 0602  
                                                    putsXLCD@buffer 0002  
                                                  ___lwdiv@dividend 0001  
                                                         _dtoa$1022 00AD  
                                                         __pintcode 0008  
                                                    ??_WriteCmdXLCD 0080  
                                                          ?___aodiv 0080  
                                                          ?___aomod 0080  
                                                     i2_writeEEPROM 2886  
                                                  ___aodiv@quotient 0092  
                                                          ?___lwdiv 0001  
                                                          ?___lwmod 0001  
                                                          ?_getData 0001  
                                                     SendCMDLCD@CMD 0081  
                                                 __size_of_putsXLCD 0038  
                                             __end_of_WriteDataXLCD 2662  
                                                 __size_of_vfprintf 0060  
                                                          ?_initLCD 0001  
                                                       __smallconst 0600  
                                                          ?_isdigit 0080  
                                                    __size_ofi2_abs 003C  
                                                          ?_setData 0001  
                                                    __size_ofi2_pad 00AA  
                                                          ?_isspace 0080  
                                                         _frequency 00F6  
                                                  ___lwdiv@quotient 0005  
                                                       ??i2___aodiv 0011  
                                                       ??i2___aomod 0011  
                                                          ?_sprintf 00DB  
                                                    __size_of_fputc 00AE  
                                                    __size_of_inter 009E  
                                                    __size_of_fputs 0046  
                                                    __size_of_putch 0006  
                                                          ?_vumeter 0001  
                                                    ___wmul@product 0084  
                                                     ?_DelayPORXLCD 0001  
                                                       ??i2_isdigit 0003  
                                                       ??i2_setData 0003  
                                                  i2_vfpfcnvrt$1037 0052  
                                             __size_of_setFrequency 01A4  
                                                          i2u302_40 09E2  
                                                          i2u230_41 165C  
                                                       ??i2_isspace 0003  
                                                          i2u303_40 09E6  
                                                          i2u232_40 1698  
                                                          i2u304_40 09F4  
                                                          i2u241_40 26EE  
                                                          i2u242_40 277E  
                                                          i2u306_40 0A2E  
                                                          i2u243_40 2782  
                                                          i2u332_40 23BE  
                                                          i2u245_40 258A  
                                                          i2u238_40 191E  
                                                          i2u272_40 0E30  
                                                          i2u329_40 2266  
                                                          i2u281_40 0FC8  
                                                          _PIR1bits 000F9E  
                                                          i2u177_44 1ECE  
                                                          i2u177_45 1EC6  
                                                   OpenXLCD@lcdtype 0082  
                                                          i2u274_40 0E5C  
                                                          i2u195_40 1D08  
                                                          i2u275_40 0F80  
                                                          _PIR2bits 000FA1  
                                                          i2u284_40 139A  
                                                          i2u268_40 0DE8  
                                                          i2u197_40 1D54  
                                                          i2u277_40 0FA2  
                                                          i2u269_40 0DEC  
                                                          i2u277_41 0FA0  
                                                          i2u286_40 145A  
                                                          i2u278_40 0FB2  
                                                          i2u287_40 145E  
                                                          i2u279_40 0FB8  
                                                          i2u385_47 293C  
                                                          i2u386_47 2976  
                                                    ?i2_writeEEPROM 0001  
                                                       ??i2_sprintf 0064  
                                                         _updateLCD 1EDC  
                                                    _functionalStat 00F8  
                                                         _vfpfcnvrt 064C  
                                                        _ADCON0bits 000FC2  
                                                 ___wmul@multiplier 0080  
                                                          i2___wmul 28B2  
                                                    i2_SetDDRamAddr 259A  
                                                      _isspace$1512 0086  
                                                          i2pad@buf 0013  
                                                          i2dtoa@fp 001C  
                                                          i2_strlen 27FA  
                                                         copy_data0 212A  
                                                         copy_data1 214A  
                                                          i2fputc@c 0001  
                                                          i2fputs@c 000E  
                                                          i2fputs@i 000F  
                                                          i2fputs@s 000A  
                                                      _setFrequency 102A  
                                                          _BusyXLCD 28FA  
                                                      ??_readEEPROM 0080  
                                                  __size_ofi2_fputc 00AC  
                                                  __size_ofi2_fputs 0042  
                                                    ??_DelayPORXLCD 0080  
                                                  __size_ofi2_putch 0006  
                                                        _EECON1bits 000FA6  
                                                          _OpenXLCD 19CA  
                                                          __Hrparam 0000  
                                                    i2setData@data0 0003  
                                                    i2setData@data1 0004  
                                                        vfprintf@ap 00D7  
                                                          __Lrparam 0000  
                                                        vfprintf@fp 00D3  
                                                  __size_of___aodiv 015E  
                                                  __size_of___aomod 013A  
                                             i2___wmul@multiplicand 0003  
                                                        ?_updateLCD 0001  
                                                        ?_vfpfcnvrt 00BF  
                                                  __size_of___lwdiv 0060  
                                                  __size_of___lwmod 0050  
                                                   ___aodiv@divisor 0088  
                                                   ___aodiv@counter 0090  
                                                  __size_of_getData 006A  
                                            __end_ofi2_SetDDRamAddr 25DE  
                                                   i2_DelayFor18TCY 2972  
                                                        sprintf@fmt 00DD  
                                                  __size_of_initLCD 004A  
                                                __end_of_readEEPROM 2962  
                                                  __size_of_isdigit 003A  
                                                   ___lwdiv@divisor 0003  
                                                  __size_of_setData 0076  
                                                  __size_of_isspace 0046  
                                                   ___lwdiv@counter 0007  
                                                          __ptext10 2982  
                                                          __ptext11 2662  
                                                          __ptext20 285A  
                                                          __ptext12 1758  
                                                          __ptext21 20AC  
                                                          __ptext13 149E  
                                                          __ptext30 2918  
                                                          __ptext22 294C  
                                                          __ptext14 11CE  
                                                          __ptext31 28FA  
                                                          __ptext23 26A0  
                                                          __ptext15 2510  
                                                          __ptext40 27FA  
                                                          __ptext24 23EE  
                                                          __ptext16 271A  
                                                          __ptext41 25DE  
                                                          __ptext33 1E4C  
                                                          __ptext25 28DC  
                                                          __ptext17 1F56  
                                                          __ptext50 28B2  
                                                          __ptext42 1CF6  
                                                          __ptext34 1EDC  
                                                          __ptext26 19CA  
                                                          __ptext18 282C  
                                                          __ptext51 259A  
                                                          __ptext43 2988  
                                                          __ptext35 234C  
                                                          __ptext27 2482  
                                                          __ptext19 229E  
                                                          __ptext60 2886  
                                                          __ptext52 278C  
                                                          __ptext44 26DE  
                                                          __ptext36 21DE  
                                                          __ptext28 2438  
                                                          __ptext53 2934  
                                                          __ptext45 1892  
                                                          __ptext37 08D2  
                                                          __ptext29 2962  
                                                          __ptext54 2620  
                                                          __ptext46 15FC  
                                                          __ptext38 0DBE  
                                                          __ptext55 2972  
                                                          __ptext47 1338  
                                                          __ptext39 1DA2  
                                                          __ptext56 239E  
                                                          __ptext48 2556  
                                                          __ptext57 223E  
                                                          __ptext49 2754  
                                                          __ptext58 203E  
                                                          __ptext59 1FCC  
                                              __end_of_WriteCmdXLCD 24CA  
                                                  __size_of_sprintf 0056  
                                                  __size_of_vumeter 0090  
                                                     __size_of_beep 0058  
                                                     __size_of_atoi 016A  
                                                     __size_of_main 00D2  
                                                     __size_of_dtoa 026C  
                                                     __size_of_time 006E  
                                                   ??i2_writeEEPROM 0002  
                                                     ??_writeEEPROM 0081  
                                                          int$flags 007F  
                                                          _putsXLCD 278C  
                                                          _vfprintf 217E  
                                                  ___aomod@dividend 0080  
                                                       getData@aux0 0083  
                                                       getData@aux1 0084  
                                                   ?i2_SetDDRamAddr 0001  
                                                    _vfpfcnvrt$1037 00D1  
                                                        _INTCONbits 000FF2  
                                                     i2setData@full 0005  
                                                          isdigit@c 0080  
                                                          intlevel2 2998  
                                                         sprintf@ap 00E1  
                                                  ___lwmod@dividend 0001  
                                                          isspace@c 0080  
                                                 i2writeEEPROM@data 0002  
                                             __end_of_DelayFor18TCY 2972  
                                           __end_ofi2_DelayFor18TCY 2982  
                                                   ___aomod@divisor 0088  
                                                     ??i2_vfpfcnvrt 0046  
                                                       ??_updateLCD 006E  
                                                       ??_vfpfcnvrt 00C5  
                                                   ___aomod@counter 0090  
                                               __end_of_writeEEPROM 285A  
                                                          sprintf@f 00E3  
                                                          sprintf@s 00DB  
                                              __end_of_DelayPORXLCD 2934  
                                              i2SetDDRamAddr@DDaddr 0001  
                                                   ___lwmod@divisor 0003  
                                                   ___lwmod@counter 0005  
                                                    i2_isspace$1512 0007  
                                                      ___aodiv@sign 0091  
                                                        i2_BusyXLCD 2934  
                                                i2___aodiv@dividend 0001  
                                                      ___aomod@sign 0091  
