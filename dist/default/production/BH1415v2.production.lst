

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Fri Aug 23 15:51:23 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	16F886
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	eeprom_data,global,class=EEDATA,space=3,delta=2
     5                           	psect	idataBANK0,global,class=CODE,delta=2
     6                           	psect	strings,global,class=STRING,delta=2
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	inittext,global,class=CODE,delta=2
    12                           	psect	clrtext,global,class=CODE,delta=2
    13                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    14                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    16                           	psect	maintext,global,class=CODE,split=1,delta=2
    17                           	psect	text1,local,class=CODE,merge=1,delta=2
    18                           	psect	text2,local,class=CODE,merge=1,delta=2
    19                           	psect	text3,local,class=CODE,merge=1,delta=2
    20                           	psect	text4,local,class=CODE,merge=1,delta=2
    21                           	psect	text5,local,class=CODE,merge=1,delta=2
    22                           	psect	text6,local,class=CODE,merge=1,delta=2
    23                           	psect	text7,local,class=CODE,merge=1,delta=2
    24                           	psect	text8,local,class=CODE,merge=1,delta=2
    25                           	psect	text9,local,class=CODE,merge=1,delta=2
    26                           	psect	text10,local,class=CODE,merge=1,delta=2
    27                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    28                           	psect	text12,local,class=CODE,merge=1,delta=2,group=1
    29                           	psect	text13,local,class=CODE,merge=1,delta=2,group=1
    30                           	psect	text14,local,class=CODE,merge=1,delta=2,group=1
    31                           	psect	text15,local,class=CODE,merge=1,delta=2
    32                           	psect	text16,local,class=CODE,merge=1,delta=2
    33                           	psect	text17,local,class=CODE,merge=1,delta=2
    34                           	psect	text18,local,class=CODE,merge=1,delta=2
    35                           	psect	text19,local,class=CODE,merge=1,delta=2
    36                           	psect	text20,local,class=CODE,merge=1,delta=2
    37                           	psect	text21,local,class=CODE,merge=1,delta=2
    38                           	psect	text22,local,class=CODE,merge=1,delta=2
    39                           	psect	text23,local,class=CODE,merge=1,delta=2
    40                           	psect	text24,local,class=CODE,merge=1,delta=2
    41                           	psect	text25,local,class=CODE,merge=1,delta=2
    42                           	psect	text26,local,class=CODE,merge=1,delta=2
    43                           	psect	text27,local,class=CODE,merge=1,delta=2
    44                           	psect	text28,local,class=CODE,merge=1,delta=2
    45                           	psect	text29,local,class=CODE,merge=1,delta=2
    46                           	psect	text30,local,class=CODE,merge=1,delta=2
    47                           	psect	intentry,global,class=CODE,delta=2
    48                           	psect	text31,local,class=CODE,merge=1,delta=2
    49                           	psect	text32,local,class=CODE,merge=1,delta=2
    50                           	psect	text33,local,class=CODE,merge=1,delta=2
    51                           	psect	text34,local,class=CODE,merge=1,delta=2
    52                           	psect	text35,local,class=CODE,merge=1,delta=2
    53                           	psect	text36,local,class=CODE,merge=1,delta=2
    54                           	psect	text37,local,class=CODE,merge=1,delta=2
    55                           	psect	text38,local,class=CODE,merge=1,delta=2
    56                           	psect	text39,local,class=CODE,merge=1,delta=2
    57                           	psect	text40,local,class=CODE,merge=1,delta=2
    58                           	psect	text41,local,class=CODE,merge=1,delta=2
    59                           	psect	text42,local,class=CODE,merge=1,delta=2
    60                           	psect	text43,local,class=CODE,merge=1,delta=2
    61                           	psect	text44,local,class=CODE,merge=1,delta=2
    62                           	dabs	1,0x7E,2
    63  0000                     
    64                           ; Version 2.05
    65                           ; Generated 20/12/2018 GMT
    66                           ; 
    67                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    68                           ; All rights reserved.
    69                           ; 
    70                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    71                           ; 
    72                           ; Redistribution and use in source and binary forms, with or without modification, are
    73                           ; permitted provided that the following conditions are met:
    74                           ; 
    75                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    76                           ;        conditions and the following disclaimer.
    77                           ; 
    78                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    79                           ;        of conditions and the following disclaimer in the documentation and/or other
    80                           ;        materials provided with the distribution.
    81                           ; 
    82                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    83                           ;        software without specific prior written permission.
    84                           ; 
    85                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    86                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    87                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    88                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    89                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    90                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    91                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    92                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    93                           ; 
    94                           ; 
    95                           ; Code-generator required, PIC16F886 Definitions
    96                           ; 
    97                           ; SFR Addresses
    98  0000                     	;# 
    99  0001                     	;# 
   100  0002                     	;# 
   101  0003                     	;# 
   102  0004                     	;# 
   103  0005                     	;# 
   104  0006                     	;# 
   105  0007                     	;# 
   106  0009                     	;# 
   107  000A                     	;# 
   108  000B                     	;# 
   109  000C                     	;# 
   110  000D                     	;# 
   111  000E                     	;# 
   112  000E                     	;# 
   113  000F                     	;# 
   114  0010                     	;# 
   115  0011                     	;# 
   116  0012                     	;# 
   117  0013                     	;# 
   118  0014                     	;# 
   119  0015                     	;# 
   120  0015                     	;# 
   121  0016                     	;# 
   122  0017                     	;# 
   123  0018                     	;# 
   124  0019                     	;# 
   125  001A                     	;# 
   126  001B                     	;# 
   127  001B                     	;# 
   128  001C                     	;# 
   129  001D                     	;# 
   130  001E                     	;# 
   131  001F                     	;# 
   132  0081                     	;# 
   133  0085                     	;# 
   134  0086                     	;# 
   135  0087                     	;# 
   136  0089                     	;# 
   137  008C                     	;# 
   138  008D                     	;# 
   139  008E                     	;# 
   140  008F                     	;# 
   141  0090                     	;# 
   142  0091                     	;# 
   143  0092                     	;# 
   144  0093                     	;# 
   145  0093                     	;# 
   146  0093                     	;# 
   147  0094                     	;# 
   148  0095                     	;# 
   149  0096                     	;# 
   150  0097                     	;# 
   151  0098                     	;# 
   152  0099                     	;# 
   153  009A                     	;# 
   154  009B                     	;# 
   155  009C                     	;# 
   156  009D                     	;# 
   157  009E                     	;# 
   158  009F                     	;# 
   159  0105                     	;# 
   160  0107                     	;# 
   161  0108                     	;# 
   162  0109                     	;# 
   163  010C                     	;# 
   164  010C                     	;# 
   165  010D                     	;# 
   166  010E                     	;# 
   167  010F                     	;# 
   168  0185                     	;# 
   169  0187                     	;# 
   170  0188                     	;# 
   171  0189                     	;# 
   172  018C                     	;# 
   173  018D                     	;# 
   174                           
   175                           	psect	eeprom_data
   176  0000  00D3 0003 0000 0000 0000 0000 0001 0000 	db	211,3,0,0,0,0,1,0	;# 
   177  0000                     	;# 
   178  0001                     	;# 
   179  0002                     	;# 
   180  0003                     	;# 
   181  0004                     	;# 
   182  0005                     	;# 
   183  0006                     	;# 
   184  0007                     	;# 
   185  0009                     	;# 
   186  000A                     	;# 
   187  000B                     	;# 
   188  000C                     	;# 
   189  000D                     	;# 
   190  000E                     	;# 
   191  000E                     	;# 
   192  000F                     	;# 
   193  0010                     	;# 
   194  0011                     	;# 
   195  0012                     	;# 
   196  0013                     	;# 
   197  0014                     	;# 
   198  0015                     	;# 
   199  0015                     	;# 
   200  0016                     	;# 
   201  0017                     	;# 
   202  0018                     	;# 
   203  0019                     	;# 
   204  001A                     	;# 
   205  001B                     	;# 
   206  001B                     	;# 
   207  001C                     	;# 
   208  001D                     	;# 
   209  001E                     	;# 
   210  001F                     	;# 
   211  0081                     	;# 
   212  0085                     	;# 
   213  0086                     	;# 
   214  0087                     	;# 
   215  0089                     	;# 
   216  008C                     	;# 
   217  008D                     	;# 
   218  008E                     	;# 
   219  008F                     	;# 
   220  0090                     	;# 
   221  0091                     	;# 
   222  0092                     	;# 
   223  0093                     	;# 
   224  0093                     	;# 
   225  0093                     	;# 
   226  0094                     	;# 
   227  0095                     	;# 
   228  0096                     	;# 
   229  0097                     	;# 
   230  0098                     	;# 
   231  0099                     	;# 
   232  009A                     	;# 
   233  009B                     	;# 
   234  009C                     	;# 
   235  009D                     	;# 
   236  009E                     	;# 
   237  009F                     	;# 
   238  0105                     	;# 
   239  0107                     	;# 
   240  0108                     	;# 
   241  0109                     	;# 
   242  010C                     	;# 
   243  010C                     	;# 
   244  010D                     	;# 
   245  010E                     	;# 
   246  010F                     	;# 
   247  0185                     	;# 
   248  0187                     	;# 
   249  0188                     	;# 
   250  0189                     	;# 
   251  018C                     	;# 
   252  018D                     	;# 
   253  0008  00D3 0003 0000 0000 0000 0000 0001 0000 	db	211,3,0,0,0,0,1,0	;# 
   254  0000                     	;# 
   255  0001                     	;# 
   256  0002                     	;# 
   257  0003                     	;# 
   258  0004                     	;# 
   259  0005                     	;# 
   260  0006                     	;# 
   261  0007                     	;# 
   262  0009                     	;# 
   263  000A                     	;# 
   264  000B                     	;# 
   265  000C                     	;# 
   266  000D                     	;# 
   267  000E                     	;# 
   268  000E                     	;# 
   269  000F                     	;# 
   270  0010                     	;# 
   271  0011                     	;# 
   272  0012                     	;# 
   273  0013                     	;# 
   274  0014                     	;# 
   275  0015                     	;# 
   276  0015                     	;# 
   277  0016                     	;# 
   278  0017                     	;# 
   279  0018                     	;# 
   280  0019                     	;# 
   281  001A                     	;# 
   282  001B                     	;# 
   283  001B                     	;# 
   284  001C                     	;# 
   285  001D                     	;# 
   286  001E                     	;# 
   287  001F                     	;# 
   288  0081                     	;# 
   289  0085                     	;# 
   290  0086                     	;# 
   291  0087                     	;# 
   292  0089                     	;# 
   293  008C                     	;# 
   294  008D                     	;# 
   295  008E                     	;# 
   296  008F                     	;# 
   297  0090                     	;# 
   298  0091                     	;# 
   299  0092                     	;# 
   300  0093                     	;# 
   301  0093                     	;# 
   302  0093                     	;# 
   303  0094                     	;# 
   304  0095                     	;# 
   305  0096                     	;# 
   306  0097                     	;# 
   307  0098                     	;# 
   308  0099                     	;# 
   309  009A                     	;# 
   310  009B                     	;# 
   311  009C                     	;# 
   312  009D                     	;# 
   313  009E                     	;# 
   314  009F                     	;# 
   315  0105                     	;# 
   316  0107                     	;# 
   317  0108                     	;# 
   318  0109                     	;# 
   319  010C                     	;# 
   320  010C                     	;# 
   321  010D                     	;# 
   322  010E                     	;# 
   323  010F                     	;# 
   324  0185                     	;# 
   325  0187                     	;# 
   326  0188                     	;# 
   327  0189                     	;# 
   328  018C                     	;# 
   329  018D                     	;# 
   330  0010  00D3 0003 0000 0000 0000 0000 0001 0000 	db	211,3,0,0,0,0,1,0	;# 
   331  0000                     	;# 
   332  0001                     	;# 
   333  0002                     	;# 
   334  0003                     	;# 
   335  0004                     	;# 
   336  0005                     	;# 
   337  0006                     	;# 
   338  0007                     	;# 
   339  0009                     	;# 
   340  000A                     	;# 
   341  000B                     	;# 
   342  000C                     	;# 
   343  000D                     	;# 
   344  000E                     	;# 
   345  000E                     	;# 
   346  000F                     	;# 
   347  0010                     	;# 
   348  0011                     	;# 
   349  0012                     	;# 
   350  0013                     	;# 
   351  0014                     	;# 
   352  0015                     	;# 
   353  0015                     	;# 
   354  0016                     	;# 
   355  0017                     	;# 
   356  0018                     	;# 
   357  0019                     	;# 
   358  001A                     	;# 
   359  001B                     	;# 
   360  001B                     	;# 
   361  001C                     	;# 
   362  001D                     	;# 
   363  001E                     	;# 
   364  001F                     	;# 
   365  0081                     	;# 
   366  0085                     	;# 
   367  0086                     	;# 
   368  0087                     	;# 
   369  0089                     	;# 
   370  008C                     	;# 
   371  008D                     	;# 
   372  008E                     	;# 
   373  008F                     	;# 
   374  0090                     	;# 
   375  0091                     	;# 
   376  0092                     	;# 
   377  0093                     	;# 
   378  0093                     	;# 
   379  0093                     	;# 
   380  0094                     	;# 
   381  0095                     	;# 
   382  0096                     	;# 
   383  0097                     	;# 
   384  0098                     	;# 
   385  0099                     	;# 
   386  009A                     	;# 
   387  009B                     	;# 
   388  009C                     	;# 
   389  009D                     	;# 
   390  009E                     	;# 
   391  009F                     	;# 
   392  0105                     	;# 
   393  0107                     	;# 
   394  0108                     	;# 
   395  0109                     	;# 
   396  010C                     	;# 
   397  010C                     	;# 
   398  010D                     	;# 
   399  010E                     	;# 
   400  010F                     	;# 
   401  0185                     	;# 
   402  0187                     	;# 
   403  0188                     	;# 
   404  0189                     	;# 
   405  018C                     	;# 
   406  018D                     	;# 
   407  0018  00D3 0003 0000 0000 0000 0000 0001 0000 	db	211,3,0,0,0,0,1,0	;# 
   408  0000                     	;# 
   409  0001                     	;# 
   410  0002                     	;# 
   411  0003                     	;# 
   412  0004                     	;# 
   413  0005                     	;# 
   414  0006                     	;# 
   415  0007                     	;# 
   416  0009                     	;# 
   417  000A                     	;# 
   418  000B                     	;# 
   419  000C                     	;# 
   420  000D                     	;# 
   421  000E                     	;# 
   422  000E                     	;# 
   423  000F                     	;# 
   424  0010                     	;# 
   425  0011                     	;# 
   426  0012                     	;# 
   427  0013                     	;# 
   428  0014                     	;# 
   429  0015                     	;# 
   430  0015                     	;# 
   431  0016                     	;# 
   432  0017                     	;# 
   433  0018                     	;# 
   434  0019                     	;# 
   435  001A                     	;# 
   436  001B                     	;# 
   437  001B                     	;# 
   438  001C                     	;# 
   439  001D                     	;# 
   440  001E                     	;# 
   441  001F                     	;# 
   442  0081                     	;# 
   443  0085                     	;# 
   444  0086                     	;# 
   445  0087                     	;# 
   446  0089                     	;# 
   447  008C                     	;# 
   448  008D                     	;# 
   449  008E                     	;# 
   450  008F                     	;# 
   451  0090                     	;# 
   452  0091                     	;# 
   453  0092                     	;# 
   454  0093                     	;# 
   455  0093                     	;# 
   456  0093                     	;# 
   457  0094                     	;# 
   458  0095                     	;# 
   459  0096                     	;# 
   460  0097                     	;# 
   461  0098                     	;# 
   462  0099                     	;# 
   463  009A                     	;# 
   464  009B                     	;# 
   465  009C                     	;# 
   466  009D                     	;# 
   467  009E                     	;# 
   468  009F                     	;# 
   469  0105                     	;# 
   470  0107                     	;# 
   471  0108                     	;# 
   472  0109                     	;# 
   473  010C                     	;# 
   474  010C                     	;# 
   475  010D                     	;# 
   476  010E                     	;# 
   477  010F                     	;# 
   478  0185                     	;# 
   479  0187                     	;# 
   480  0188                     	;# 
   481  0189                     	;# 
   482  018C                     	;# 
   483  018D                     	;# 
   484  0020  00D3 0003 0000 0000 0000 0000 0001 0000 	db	211,3,0,0,0,0,1,0	;# 
   485  0000                     	;# 
   486  0001                     	;# 
   487  0002                     	;# 
   488  0003                     	;# 
   489  0004                     	;# 
   490  0005                     	;# 
   491  0006                     	;# 
   492  0007                     	;# 
   493  0009                     	;# 
   494  000A                     	;# 
   495  000B                     	;# 
   496  000C                     	;# 
   497  000D                     	;# 
   498  000E                     	;# 
   499  000E                     	;# 
   500  000F                     	;# 
   501  0010                     	;# 
   502  0011                     	;# 
   503  0012                     	;# 
   504  0013                     	;# 
   505  0014                     	;# 
   506  0015                     	;# 
   507  0015                     	;# 
   508  0016                     	;# 
   509  0017                     	;# 
   510  0018                     	;# 
   511  0019                     	;# 
   512  001A                     	;# 
   513  001B                     	;# 
   514  001B                     	;# 
   515  001C                     	;# 
   516  001D                     	;# 
   517  001E                     	;# 
   518  001F                     	;# 
   519  0081                     	;# 
   520  0085                     	;# 
   521  0086                     	;# 
   522  0087                     	;# 
   523  0089                     	;# 
   524  008C                     	;# 
   525  008D                     	;# 
   526  008E                     	;# 
   527  008F                     	;# 
   528  0090                     	;# 
   529  0091                     	;# 
   530  0092                     	;# 
   531  0093                     	;# 
   532  0093                     	;# 
   533  0093                     	;# 
   534  0094                     	;# 
   535  0095                     	;# 
   536  0096                     	;# 
   537  0097                     	;# 
   538  0098                     	;# 
   539  0099                     	;# 
   540  009A                     	;# 
   541  009B                     	;# 
   542  009C                     	;# 
   543  009D                     	;# 
   544  009E                     	;# 
   545  009F                     	;# 
   546  0105                     	;# 
   547  0107                     	;# 
   548  0108                     	;# 
   549  0109                     	;# 
   550  010C                     	;# 
   551  010C                     	;# 
   552  010D                     	;# 
   553  010E                     	;# 
   554  010F                     	;# 
   555  0185                     	;# 
   556  0187                     	;# 
   557  0188                     	;# 
   558  0189                     	;# 
   559  018C                     	;# 
   560  018D                     	;# 
   561                           
   562                           	psect	idataBANK0
   563  08A4                     __pidataBANK0:	
   564                           
   565                           ;initializer for _stereoEnable
   566  08A4  3401               	retlw	1
   567                           
   568                           ;initializer for _minutes
   569  08A5  340F               	retlw	15
   570                           
   571                           ;initializer for _hours
   572  08A6  3416               	retlw	22
   573                           
   574                           ;initializer for _days
   575  08A7  3413               	retlw	19
   576                           
   577                           ;initializer for _months
   578  08A8  3403               	retlw	3
   579                           
   580                           ;initializer for _prTmr1H
   581  08A9  343C               	retlw	60
   582                           
   583                           ;initializer for _prTmr1L
   584  08AA  34B0               	retlw	176
   585                           
   586                           	psect	strings
   587  0700                     __pstrings:	
   588  0700                     stringtab:	
   589  0700                     __stringtab:	
   590  0700                     stringcode:	
   591                           ;	String table - string pointers are 1 byte each
   592                           
   593  0700                     stringdir:	
   594  0700  3007               	movlw	high stringdir
   595  0701  008A               	movwf	10
   596  0702  0804               	movf	4,w
   597  0703  0A84               	incf	4,f
   598  0704  0782               	addwf	2,f
   599  0705                     __stringbase:	
   600  0705  3400               	retlw	0
   601  0706                     __end_of__stringtab:	
   602  0706                     _dpowers:	
   603  0706  3401               	retlw	1
   604  0707  3400               	retlw	0
   605  0708  340A               	retlw	10
   606  0709  3400               	retlw	0
   607  070A  3464               	retlw	100
   608  070B  3400               	retlw	0
   609  070C  34E8               	retlw	232
   610  070D  3403               	retlw	3
   611  070E  3410               	retlw	16
   612  070F  3427               	retlw	39
   613  0710                     __end_of_dpowers:	
   614  0710                     _FINAL_DAY:	
   615  0710  340D               	retlw	13
   616  0711                     __end_of_FINAL_DAY:	
   617  0711                     _FINAL_MONTH:	
   618  0711  3406               	retlw	6
   619  0712                     __end_of_FINAL_MONTH:	
   620  0712                     _UN_BLOCKED:	
   621  0712  3401               	retlw	1
   622  0713                     __end_of_UN_BLOCKED:	
   623  0713                     _BLOCKED:	
   624  0713  3400               	retlw	0
   625  0714                     __end_of_BLOCKED:	
   626  0006                     _PORTBbits	set	6
   627  000E                     _TMR1L	set	14
   628  000F                     _TMR1H	set	15
   629  000C                     _PIR1bits	set	12
   630  0010                     _T1CONbits	set	16
   631  0007                     _PORTCbits	set	7
   632  001F                     _ADCON0	set	31
   633  0010                     _T1CON	set	16
   634  0007                     _PORTC	set	7
   635  0006                     _PORTB	set	6
   636  0005                     _PORTA	set	5
   637  000B                     _INTCON	set	11
   638  0005                     _PORTAbits	set	5
   639  000D                     _PIR2bits	set	13
   640  000B                     _INTCONbits	set	11
   641  0086                     _TRISBbits	set	134
   642  009F                     _ADCON1	set	159
   643  0087                     _TRISC	set	135
   644  0086                     _TRISB	set	134
   645  0085                     _TRISA	set	133
   646  008C                     _PIE1	set	140
   647  010C                     _EEDATA	set	268
   648  010D                     _EEADR	set	269
   649  0189                     _ANSELH	set	393
   650  0188                     _ANSEL	set	392
   651  018D                     _EECON2	set	397
   652  018C                     _EECON1bits	set	396
   653  0714                     STR_9:	
   654  0714  3446               	retlw	70	;'F'
   655  0715  3452               	retlw	82	;'R'
   656  0716  3445               	retlw	69	;'E'
   657  0717  3451               	retlw	81	;'Q'
   658  0718  342E               	retlw	46	;'.'
   659  0719  3420               	retlw	32	;' '
   660  071A  3420               	retlw	32	;' '
   661  071B  3425               	retlw	37	;'%'
   662  071C  3433               	retlw	51	;'3'
   663  071D  3464               	retlw	100	;'d'
   664  071E  342E               	retlw	46	;'.'
   665  071F  3425               	retlw	37	;'%'
   666  0720  3464               	retlw	100	;'d'
   667  0721  3420               	retlw	32	;' '
   668  0722  344D               	retlw	77	;'M'
   669  0723  3448               	retlw	72	;'H'
   670  0724  347A               	retlw	122	;'z'
   671  0725  3400               	retlw	0
   672  0726                     STR_10:	
   673  0726  344C               	retlw	76	;'L'
   674  0727  344F               	retlw	79	;'O'
   675  0728  3443               	retlw	67	;'C'
   676  0729  344B               	retlw	75	;'K'
   677  072A  3449               	retlw	73	;'I'
   678  072B  344E               	retlw	78	;'N'
   679  072C  3447               	retlw	71	;'G'
   680  072D  3420               	retlw	32	;' '
   681  072E  3420               	retlw	32	;' '
   682  072F  3420               	retlw	32	;' '
   683  0730  3420               	retlw	32	;' '
   684  0731  3420               	retlw	32	;' '
   685  0732  3420               	retlw	32	;' '
   686  0733  3420               	retlw	32	;' '
   687  0734  3420               	retlw	32	;' '
   688  0735  3420               	retlw	32	;' '
   689  0736  3400               	retlw	0
   690  0737                     STR_1:	
   691  0737  3454               	retlw	84	;'T'
   692  0738  3445               	retlw	69	;'E'
   693  0739  3453               	retlw	83	;'S'
   694  073A  3454               	retlw	84	;'T'
   695  073B  3449               	retlw	73	;'I'
   696  073C  344E               	retlw	78	;'N'
   697  073D  3447               	retlw	71	;'G'
   698  073E  3420               	retlw	32	;' '
   699  073F  3420               	retlw	32	;' '
   700  0740  3420               	retlw	32	;' '
   701  0741  3420               	retlw	32	;' '
   702  0742  3420               	retlw	32	;' '
   703  0743  3420               	retlw	32	;' '
   704  0744  3420               	retlw	32	;' '
   705  0745  3420               	retlw	32	;' '
   706  0746  3420               	retlw	32	;' '
   707  0747  3400               	retlw	0
   708  0748                     STR_7:	
   709  0748  3453               	retlw	83	;'S'
   710  0749  3445               	retlw	69	;'E'
   711  074A  3454               	retlw	84	;'T'
   712  074B  3420               	retlw	32	;' '
   713  074C  3420               	retlw	32	;' '
   714  074D  3420               	retlw	32	;' '
   715  074E  3446               	retlw	70	;'F'
   716  074F  3452               	retlw	82	;'R'
   717  0750  3445               	retlw	69	;'E'
   718  0751  3451               	retlw	81	;'Q'
   719  0752  3455               	retlw	85	;'U'
   720  0753  3445               	retlw	69	;'E'
   721  0754  344E               	retlw	78	;'N'
   722  0755  3443               	retlw	67	;'C'
   723  0756  3459               	retlw	89	;'Y'
   724  0757  3420               	retlw	32	;' '
   725  0758  3400               	retlw	0
   726  0759                     STR_4:	
   727  0759  3420               	retlw	32	;' '
   728  075A  3420               	retlw	32	;' '
   729  075B  3420               	retlw	32	;' '
   730  075C  3420               	retlw	32	;' '
   731  075D  3420               	retlw	32	;' '
   732  075E  3454               	retlw	84	;'T'
   733  075F  3445               	retlw	69	;'E'
   734  0760  344D               	retlw	77	;'M'
   735  0761  3450               	retlw	80	;'P'
   736  0762  3445               	retlw	69	;'E'
   737  0763  3452               	retlw	82	;'R'
   738  0764  3441               	retlw	65	;'A'
   739  0765  3454               	retlw	84	;'T'
   740  0766  3455               	retlw	85	;'U'
   741  0767  3452               	retlw	82	;'R'
   742  0768  3445               	retlw	69	;'E'
   743  0769  3400               	retlw	0
   744  076A                     STR_8:	
   745  076A  3441               	retlw	65	;'A'
   746  076B  344D               	retlw	77	;'M'
   747  076C  3450               	retlw	80	;'P'
   748  076D  3452               	retlw	82	;'R'
   749  076E  344F               	retlw	79	;'O'
   750  076F  3420               	retlw	32	;' '
   751  0770  3420               	retlw	32	;' '
   752  0771  3420               	retlw	32	;' '
   753  0772  3420               	retlw	32	;' '
   754  0773  3420               	retlw	32	;' '
   755  0774  3420               	retlw	32	;' '
   756  0775  3445               	retlw	69	;'E'
   757  0776  3458               	retlw	88	;'X'
   758  0777  342D               	retlw	45	;'-'
   759  0778  3446               	retlw	70	;'F'
   760  0779  344D               	retlw	77	;'M'
   761  077A  3400               	retlw	0
   762  077B                     STR_6:	
   763  077B  3420               	retlw	32	;' '
   764  077C  3420               	retlw	32	;' '
   765  077D  3420               	retlw	32	;' '
   766  077E  3420               	retlw	32	;' '
   767  077F  3420               	retlw	32	;' '
   768  0780  3420               	retlw	32	;' '
   769  0781  3420               	retlw	32	;' '
   770  0782  3420               	retlw	32	;' '
   771  0783  3420               	retlw	32	;' '
   772  0784  3420               	retlw	32	;' '
   773  0785  3420               	retlw	32	;' '
   774  0786  3420               	retlw	32	;' '
   775  0787  3420               	retlw	32	;' '
   776  0788  3453               	retlw	83	;'S'
   777  0789  3457               	retlw	87	;'W'
   778  078A  3452               	retlw	82	;'R'
   779  078B  3400               	retlw	0
   780  078C                     STR_11:	
   781  078C  3420               	retlw	32	;' '
   782  078D  3420               	retlw	32	;' '
   783  078E  3420               	retlw	32	;' '
   784  078F  3420               	retlw	32	;' '
   785  0790  3420               	retlw	32	;' '
   786  0791  3420               	retlw	32	;' '
   787  0792  3420               	retlw	32	;' '
   788  0793  3446               	retlw	70	;'F'
   789  0794  3452               	retlw	82	;'R'
   790  0795  3445               	retlw	69	;'E'
   791  0796  3451               	retlw	81	;'Q'
   792  0797  3455               	retlw	85	;'U'
   793  0798  3445               	retlw	69	;'E'
   794  0799  344E               	retlw	78	;'N'
   795  079A  3443               	retlw	67	;'C'
   796  079B  3459               	retlw	89	;'Y'
   797  079C  3400               	retlw	0
   798  079D                     STR_2:	
   799  079D  3420               	retlw	32	;' '
   800  079E  3420               	retlw	32	;' '
   801  079F  3420               	retlw	32	;' '
   802  07A0  3420               	retlw	32	;' '
   803  07A1  3420               	retlw	32	;' '
   804  07A2  3420               	retlw	32	;' '
   805  07A3  3420               	retlw	32	;' '
   806  07A4  3420               	retlw	32	;' '
   807  07A5  3420               	retlw	32	;' '
   808  07A6  3420               	retlw	32	;' '
   809  07A7  3453               	retlw	83	;'S'
   810  07A8  3455               	retlw	85	;'U'
   811  07A9  3450               	retlw	80	;'P'
   812  07AA  3450               	retlw	80	;'P'
   813  07AB  344C               	retlw	76	;'L'
   814  07AC  3459               	retlw	89	;'Y'
   815  07AD  3400               	retlw	0
   816  0737                     
   817                           ; #config settings
   818  0000                     
   819                           	psect	cinit
   820  0015                     start_initialization:	
   821  0015                     __initialization:	
   822                           
   823                           ; Initialize objects allocated to BANK0
   824  0015  1383               	bcf	3,7	;select IRP bank0
   825  0016  3053               	movlw	low (__pdataBANK0+7)
   826  0017  00FD               	movwf	btemp+-1
   827  0018  3008               	movlw	high __pidataBANK0
   828  0019  00FE               	movwf	btemp
   829  001A  30A4               	movlw	low __pidataBANK0
   830  001B  00FF               	movwf	btemp+1
   831  001C  304C               	movlw	low __pdataBANK0
   832  001D  0084               	movwf	4
   833  001E  120A  158A  2114  120A  118A  	fcall	init_ram0
   834                           
   835                           ; Clear objects allocated to BANK1
   836  0023  30A0               	movlw	low __pbssBANK1
   837  0024  0084               	movwf	4
   838  0025  30C3               	movlw	low (__pbssBANK1+35)
   839  0026  120A  158A  20AB  120A  118A  	fcall	clear_ram0
   840                           
   841                           ; Clear objects allocated to BANK0
   842  002B  3044               	movlw	low __pbssBANK0
   843  002C  0084               	movwf	4
   844  002D  304C               	movlw	low (__pbssBANK0+8)
   845  002E  120A  158A  20AB   	fcall	clear_ram0
   846  0031                     end_of_initialization:	
   847                           ;End of C runtime variable initialization code
   848                           
   849  0031                     __end_of__initialization:	
   850  0031  0183               	clrf	3
   851  0032  120A  158A  2F5F   	ljmp	_main	;jump to C main() function
   852                           
   853                           	psect	bssBANK0
   854  0044                     __pbssBANK0:	
   855  0044                     _frequency:	
   856  0044                     	ds	2
   857  0046                     _level:	
   858  0046                     	ds	1
   859  0047                     _isOnConfig:	
   860  0047                     	ds	1
   861  0048                     _functionalStat:	
   862  0048                     	ds	1
   863  0049                     _hundredMiliSeconds:	
   864  0049                     	ds	1
   865  004A                     _seconds:	
   866  004A                     	ds	1
   867  004B                     _cntTmr1:	
   868  004B                     	ds	1
   869                           
   870                           	psect	dataBANK0
   871  004C                     __pdataBANK0:	
   872  004C                     _stereoEnable:	
   873  004C                     	ds	1
   874  004D                     _minutes:	
   875  004D                     	ds	1
   876  004E                     _hours:	
   877  004E                     	ds	1
   878  004F                     _days:	
   879  004F                     	ds	1
   880  0050                     _months:	
   881  0050                     	ds	1
   882  0051                     _prTmr1H:	
   883  0051                     	ds	1
   884  0052                     _prTmr1L:	
   885  0052                     	ds	1
   886                           
   887                           	psect	bssBANK1
   888  00A0                     __pbssBANK1:	
   889  00A0                     _i:	
   890  00A0                     	ds	1
   891  00A1                     _lineTwo:	
   892  00A1                     	ds	17
   893  00B2                     _lineOne:	
   894  00B2                     	ds	17
   895                           
   896                           	psect	inittext
   897  0910                     init_fetch0:	
   898                           ;	Called with low address in FSR and high address in W
   899                           
   900  0910  087E               	movf	126,w
   901  0911  008A               	movwf	10
   902  0912  087F               	movf	127,w
   903  0913  0082               	movwf	2
   904  0914                     init_ram0:	
   905                           ;Called with:
   906                           ;	high address of idata address in btemp 
   907                           ;	low address of idata address in btemp+1 
   908                           ;	low address of data in FSR
   909                           ;	high address + 1 of data in btemp-1
   910                           
   911  0914  2110  120A  158A   	fcall	init_fetch0
   912  0917  0080               	movwf	0
   913  0918  0A84               	incf	4,f
   914  0919  0804               	movf	4,w
   915  091A  067D               	xorwf	125,w
   916  091B  1903               	btfsc	3,2
   917  091C  3400               	retlw	0
   918  091D  0AFF               	incf	127,f
   919  091E  1903               	btfsc	3,2
   920  091F  0AFE               	incf	126,f
   921  0920  2914               	goto	init_ram0
   922                           
   923                           	psect	clrtext
   924  08AB                     clear_ram0:	
   925                           ;	Called with FSR containing the base address, and
   926                           ;	W with the last address+1
   927                           
   928  08AB  0064               	clrwdt	;clear the watchdog before getting into this loop
   929  08AC                     clrloop0:	
   930  08AC  0180               	clrf	0	;clear RAM location pointed to by FSR
   931  08AD  0A84               	incf	4,f	;increment pointer
   932  08AE  0604               	xorwf	4,w	;XOR with final address
   933  08AF  1903               	btfsc	3,2	;have we reached the end yet?
   934  08B0  3400               	retlw	0	;all done for this memory range, return
   935  08B1  0604               	xorwf	4,w	;XOR again to restore value
   936  08B2  28AC               	goto	clrloop0	;do the next byte
   937                           
   938                           	psect	cstackBANK1
   939  00C3                     __pcstackBANK1:	
   940  00C3                     ?_beep:	
   941  00C3                     ??_initLCD:	
   942                           ; 1 bytes @ 0x0
   943                           
   944  00C3                     ___lwdiv@counter:	
   945                           ; 1 bytes @ 0x0
   946                           
   947  00C3                     beep@ms:	
   948                           ; 1 bytes @ 0x0
   949                           
   950                           
   951                           ; 2 bytes @ 0x0
   952  00C3                     	ds	1
   953  00C4                     ___lwdiv@quotient:	
   954                           
   955                           ; 2 bytes @ 0x1
   956  00C4                     	ds	1
   957  00C5                     ?_writeFrequency:	
   958  00C5                     writeFrequency@f:	
   959                           ; 1 bytes @ 0x2
   960                           
   961                           
   962                           ; 2 bytes @ 0x2
   963  00C5                     	ds	1
   964  00C6                     ?___lwmod:	
   965  00C6                     ___lwmod@divisor:	
   966                           ; 2 bytes @ 0x3
   967                           
   968                           
   969                           ; 2 bytes @ 0x3
   970  00C6                     	ds	1
   971  00C7                     ??_writeFrequency:	
   972                           
   973                           ; 1 bytes @ 0x4
   974  00C7                     	ds	1
   975  00C8                     ___lwmod@dividend:	
   976                           
   977                           ; 2 bytes @ 0x5
   978  00C8                     	ds	2
   979  00CA                     ?_sprintf:	
   980  00CA                     sprintf@f:	
   981                           ; 2 bytes @ 0x7
   982                           
   983  00CA                     writeFrequency@buffer:	
   984                           ; 1 bytes @ 0x7
   985                           
   986                           
   987                           ; 2 bytes @ 0x7
   988  00CA                     	ds	2
   989  00CC                     writeFrequency@r:	
   990                           
   991                           ; 2 bytes @ 0x9
   992  00CC                     	ds	3
   993  00CF                     ??_sprintf:	
   994                           
   995                           ; 1 bytes @ 0xC
   996  00CF                     	ds	3
   997  00D2                     sprintf@ap:	
   998                           
   999                           ; 1 bytes @ 0xF
  1000  00D2                     	ds	1
  1001  00D3                     sprintf@prec:	
  1002                           
  1003                           ; 1 bytes @ 0x10
  1004  00D3                     	ds	1
  1005  00D4                     sprintf@flag:	
  1006                           
  1007                           ; 1 bytes @ 0x11
  1008  00D4                     	ds	1
  1009  00D5                     sprintf@val:	
  1010                           
  1011                           ; 2 bytes @ 0x12
  1012  00D5                     	ds	2
  1013  00D7                     sprintf@width:	
  1014                           
  1015                           ; 2 bytes @ 0x14
  1016  00D7                     	ds	2
  1017  00D9                     sprintf@sp:	
  1018                           
  1019                           ; 1 bytes @ 0x16
  1020  00D9                     	ds	1
  1021  00DA                     sprintf@c:	
  1022                           
  1023                           ; 1 bytes @ 0x17
  1024  00DA                     	ds	1
  1025  00DB                     ??_start:	
  1026  00DB                     ??_lockingScreen:	
  1027                           ; 1 bytes @ 0x18
  1028                           
  1029  00DB                     ??_principalScreen:	
  1030                           ; 1 bytes @ 0x18
  1031                           
  1032                           
  1033                           ; 1 bytes @ 0x18
  1034  00DB                     	ds	1
  1035  00DC                     ??_setFrequency:	
  1036                           
  1037                           ; 1 bytes @ 0x19
  1038  00DC                     	ds	2
  1039  00DE                     start@i:	
  1040                           
  1041                           ; 1 bytes @ 0x1B
  1042  00DE                     	ds	2
  1043  00E0                     principalScreen@decim:	
  1044                           
  1045                           ; 1 bytes @ 0x1D
  1046  00E0                     	ds	1
  1047  00E1                     principalScreen@integ:	
  1048                           
  1049                           ; 1 bytes @ 0x1E
  1050  00E1                     	ds	1
  1051  00E2                     ??_main:	
  1052                           
  1053                           ; 1 bytes @ 0x1F
  1054  00E2                     	ds	3
  1055                           
  1056                           	psect	cstackCOMMON
  1057  0070                     __pcstackCOMMON:	
  1058  0070                     ?_isdigit:	
  1059  0070                     ?i1_isdigit:	
  1060                           ; 1 bit 
  1061                           
  1062  0070                     ?_config:	
  1063                           ; 1 bit 
  1064                           
  1065  0070                     ?_setFrequency:	
  1066                           ; 1 bytes @ 0x0
  1067                           
  1068  0070                     ?_start:	
  1069                           ; 1 bytes @ 0x0
  1070                           
  1071  0070                     ?_lockingScreen:	
  1072                           ; 1 bytes @ 0x0
  1073                           
  1074  0070                     ?_principalScreen:	
  1075                           ; 1 bytes @ 0x0
  1076                           
  1077  0070                     ?_initLCD:	
  1078                           ; 1 bytes @ 0x0
  1079                           
  1080  0070                     ?_SetDDRamAddr:	
  1081                           ; 1 bytes @ 0x0
  1082                           
  1083  0070                     ?_putsXLCD:	
  1084                           ; 1 bytes @ 0x0
  1085                           
  1086  0070                     ?_time:	
  1087                           ; 1 bytes @ 0x0
  1088                           
  1089  0070                     ?_updateLCD:	
  1090                           ; 1 bytes @ 0x0
  1091                           
  1092  0070                     ?_putrsXLCD:	
  1093                           ; 1 bytes @ 0x0
  1094                           
  1095  0070                     ?_WriteCmdXLCD:	
  1096                           ; 1 bytes @ 0x0
  1097                           
  1098  0070                     ?_BusyXLCD:	
  1099                           ; 1 bytes @ 0x0
  1100                           
  1101  0070                     ?_SendCMDLCD:	
  1102                           ; 1 bytes @ 0x0
  1103                           
  1104  0070                     ?_readEEPROM:	
  1105                           ; 1 bytes @ 0x0
  1106                           
  1107  0070                     ?_getData:	
  1108                           ; 1 bytes @ 0x0
  1109                           
  1110  0070                     ?_setData:	
  1111                           ; 1 bytes @ 0x0
  1112                           
  1113  0070                     ?_main:	
  1114                           ; 1 bytes @ 0x0
  1115                           
  1116  0070                     ?_inter:	
  1117                           ; 1 bytes @ 0x0
  1118                           
  1119  0070                     ?_DelayFor18TCY:	
  1120                           ; 1 bytes @ 0x0
  1121                           
  1122  0070                     ?_DelayPORXLCD:	
  1123                           ; 1 bytes @ 0x0
  1124                           
  1125  0070                     ?_OpenXLCD:	
  1126                           ; 1 bytes @ 0x0
  1127                           
  1128  0070                     ?_WriteDataXLCD:	
  1129                           ; 1 bytes @ 0x0
  1130                           
  1131  0070                     ?i1_writeEEPROM:	
  1132                           ; 1 bytes @ 0x0
  1133                           
  1134  0070                     ?i1_setData:	
  1135                           ; 1 bytes @ 0x0
  1136                           
  1137  0070                     ?i1_DelayFor18TCY:	
  1138                           ; 1 bytes @ 0x0
  1139                           
  1140  0070                     ??i1_DelayFor18TCY:	
  1141                           ; 1 bytes @ 0x0
  1142                           
  1143  0070                     ?i1_WriteDataXLCD:	
  1144                           ; 1 bytes @ 0x0
  1145                           
  1146  0070                     ?i1_SetDDRamAddr:	
  1147                           ; 1 bytes @ 0x0
  1148                           
  1149  0070                     ?i1_putsXLCD:	
  1150                           ; 1 bytes @ 0x0
  1151                           
  1152  0070                     ?i1_BusyXLCD:	
  1153                           ; 1 bytes @ 0x0
  1154                           
  1155  0070                     ??i1_BusyXLCD:	
  1156                           ; 1 bytes @ 0x0
  1157                           
  1158  0070                     ??i1_isdigit:	
  1159                           ; 1 bytes @ 0x0
  1160                           
  1161  0070                     ?i1___wmul:	
  1162                           ; 1 bytes @ 0x0
  1163                           
  1164  0070                     ?i1___lwdiv:	
  1165                           ; 2 bytes @ 0x0
  1166                           
  1167  0070                     i1writeEEPROM@address:	
  1168                           ; 2 bytes @ 0x0
  1169                           
  1170  0070                     i1_isdigit$1104:	
  1171                           ; 1 bytes @ 0x0
  1172                           
  1173  0070                     i1___wmul@multiplier:	
  1174                           ; 1 bytes @ 0x0
  1175                           
  1176  0070                     i1___lwdiv@divisor:	
  1177                           ; 2 bytes @ 0x0
  1178                           
  1179                           
  1180                           ; 2 bytes @ 0x0
  1181  0070                     	ds	1
  1182  0071                     ??i1_writeEEPROM:	
  1183  0071                     ??i1_WriteDataXLCD:	
  1184                           ; 1 bytes @ 0x1
  1185                           
  1186  0071                     ??i1_SetDDRamAddr:	
  1187                           ; 1 bytes @ 0x1
  1188                           
  1189  0071                     i1writeEEPROM@data:	
  1190                           ; 1 bytes @ 0x1
  1191                           
  1192  0071                     i1isdigit@c:	
  1193                           ; 1 bytes @ 0x1
  1194                           
  1195                           
  1196                           ; 1 bytes @ 0x1
  1197  0071                     	ds	1
  1198  0072                     ??i1_setData:	
  1199  0072                     i1___wmul@multiplicand:	
  1200                           ; 1 bytes @ 0x2
  1201                           
  1202  0072                     i1___lwdiv@dividend:	
  1203                           ; 2 bytes @ 0x2
  1204                           
  1205                           
  1206                           ; 2 bytes @ 0x2
  1207  0072                     	ds	1
  1208  0073                     i1setData@data0:	
  1209  0073                     i1WriteDataXLCD@data:	
  1210                           ; 1 bytes @ 0x3
  1211                           
  1212  0073                     i1SetDDRamAddr@DDaddr:	
  1213                           ; 1 bytes @ 0x3
  1214                           
  1215                           
  1216                           ; 1 bytes @ 0x3
  1217  0073                     	ds	1
  1218  0074                     ??i1_putsXLCD:	
  1219  0074                     ??i1___wmul:	
  1220                           ; 1 bytes @ 0x4
  1221                           
  1222  0074                     ??i1___lwdiv:	
  1223                           ; 1 bytes @ 0x4
  1224                           
  1225  0074                     i1setData@data1:	
  1226                           ; 1 bytes @ 0x4
  1227                           
  1228  0074                     i1___wmul@product:	
  1229                           ; 1 bytes @ 0x4
  1230                           
  1231                           
  1232                           ; 2 bytes @ 0x4
  1233  0074                     	ds	1
  1234  0075                     i1setData@full:	
  1235  0075                     i1putsXLCD@buffer:	
  1236                           ; 1 bytes @ 0x5
  1237                           
  1238  0075                     i1___lwdiv@quotient:	
  1239                           ; 1 bytes @ 0x5
  1240                           
  1241                           
  1242                           ; 2 bytes @ 0x5
  1243  0075                     	ds	1
  1244  0076                     ??_time:	
  1245                           
  1246                           ; 1 bytes @ 0x6
  1247  0076                     	ds	1
  1248  0077                     i1___lwdiv@counter:	
  1249                           
  1250                           ; 1 bytes @ 0x7
  1251  0077                     	ds	1
  1252  0078                     ?i1___lwmod:	
  1253  0078                     i1___lwmod@divisor:	
  1254                           ; 2 bytes @ 0x8
  1255                           
  1256                           
  1257                           ; 2 bytes @ 0x8
  1258  0078                     	ds	2
  1259  007A                     i1___lwmod@dividend:	
  1260                           
  1261                           ; 2 bytes @ 0xA
  1262  007A                     	ds	2
  1263  007C                     ??i1___lwmod:	
  1264                           
  1265                           ; 1 bytes @ 0xC
  1266  007C                     	ds	1
  1267  007D                     i1___lwmod@counter:	
  1268                           
  1269                           ; 1 bytes @ 0xD
  1270  007D                     	ds	1
  1271                           
  1272                           	psect	cstackBANK0
  1273  0020                     __pcstackBANK0:	
  1274  0020                     ?i1_sprintf:	
  1275  0020                     i1sprintf@f:	
  1276                           ; 2 bytes @ 0x0
  1277                           
  1278                           
  1279                           ; 1 bytes @ 0x0
  1280  0020                     	ds	5
  1281  0025                     ??i1_sprintf:	
  1282                           
  1283                           ; 1 bytes @ 0x5
  1284  0025                     	ds	3
  1285  0028                     i1sprintf@ap:	
  1286                           
  1287                           ; 1 bytes @ 0x8
  1288  0028                     	ds	1
  1289  0029                     i1sprintf@prec:	
  1290                           
  1291                           ; 1 bytes @ 0x9
  1292  0029                     	ds	1
  1293  002A                     i1sprintf@flag:	
  1294                           
  1295                           ; 1 bytes @ 0xA
  1296  002A                     	ds	1
  1297  002B                     i1sprintf@val:	
  1298                           
  1299                           ; 2 bytes @ 0xB
  1300  002B                     	ds	2
  1301  002D                     i1sprintf@sp:	
  1302                           
  1303                           ; 1 bytes @ 0xD
  1304  002D                     	ds	1
  1305  002E                     i1sprintf@width:	
  1306                           
  1307                           ; 2 bytes @ 0xE
  1308  002E                     	ds	2
  1309  0030                     i1sprintf@c:	
  1310                           
  1311                           ; 1 bytes @ 0x10
  1312  0030                     	ds	1
  1313  0031                     ??_updateLCD:	
  1314                           
  1315                           ; 1 bytes @ 0x11
  1316  0031                     	ds	5
  1317  0036                     updateLCD@decim:	
  1318                           
  1319                           ; 1 bytes @ 0x16
  1320  0036                     	ds	1
  1321  0037                     updateLCD@integ:	
  1322                           
  1323                           ; 1 bytes @ 0x17
  1324  0037                     	ds	1
  1325  0038                     ??_inter:	
  1326                           
  1327                           ; 1 bytes @ 0x18
  1328  0038                     	ds	5
  1329  003D                     ?_setTransStat:	
  1330  003D                     ??_BusyXLCD:	
  1331                           ; 1 bytes @ 0x1D
  1332                           
  1333  003D                     ??_isdigit:	
  1334                           ; 1 bytes @ 0x1D
  1335                           
  1336  003D                     ??_readEEPROM:	
  1337                           ; 1 bytes @ 0x1D
  1338                           
  1339  003D                     ?_writeEEPROM:	
  1340                           ; 1 bytes @ 0x1D
  1341                           
  1342  003D                     ??_DelayFor18TCY:	
  1343                           ; 1 bytes @ 0x1D
  1344                           
  1345  003D                     ??_DelayPORXLCD:	
  1346                           ; 1 bytes @ 0x1D
  1347                           
  1348  003D                     ?_codFreq:	
  1349                           ; 1 bytes @ 0x1D
  1350                           
  1351  003D                     ?___wmul:	
  1352                           ; 2 bytes @ 0x1D
  1353                           
  1354  003D                     ?___lwdiv:	
  1355                           ; 2 bytes @ 0x1D
  1356                           
  1357  003D                     readEEPROM@address:	
  1358                           ; 2 bytes @ 0x1D
  1359                           
  1360  003D                     writeEEPROM@address:	
  1361                           ; 1 bytes @ 0x1D
  1362                           
  1363  003D                     _isdigit$1104:	
  1364                           ; 1 bytes @ 0x1D
  1365                           
  1366  003D                     setTransStat@stat:	
  1367                           ; 1 bytes @ 0x1D
  1368                           
  1369  003D                     codFreq@f:	
  1370                           ; 2 bytes @ 0x1D
  1371                           
  1372  003D                     ___wmul@multiplier:	
  1373                           ; 2 bytes @ 0x1D
  1374                           
  1375  003D                     ___lwdiv@divisor:	
  1376                           ; 2 bytes @ 0x1D
  1377                           
  1378                           
  1379                           ; 2 bytes @ 0x1D
  1380  003D                     	ds	1
  1381  003E                     ??_SetDDRamAddr:	
  1382  003E                     ??_WriteCmdXLCD:	
  1383                           ; 1 bytes @ 0x1E
  1384                           
  1385  003E                     ??_writeEEPROM:	
  1386                           ; 1 bytes @ 0x1E
  1387                           
  1388  003E                     ??_getData:	
  1389                           ; 1 bytes @ 0x1E
  1390                           
  1391  003E                     ??_WriteDataXLCD:	
  1392                           ; 1 bytes @ 0x1E
  1393                           
  1394  003E                     writeEEPROM@data:	
  1395                           ; 1 bytes @ 0x1E
  1396                           
  1397  003E                     isdigit@c:	
  1398                           ; 1 bytes @ 0x1E
  1399                           
  1400                           
  1401                           ; 1 bytes @ 0x1E
  1402  003E                     	ds	1
  1403  003F                     ??_setTransStat:	
  1404  003F                     ??_setData:	
  1405                           ; 1 bytes @ 0x1F
  1406                           
  1407  003F                     ??_codFreq:	
  1408                           ; 1 bytes @ 0x1F
  1409                           
  1410  003F                     codFreq@fr:	
  1411                           ; 1 bytes @ 0x1F
  1412                           
  1413  003F                     ___wmul@multiplicand:	
  1414                           ; 2 bytes @ 0x1F
  1415                           
  1416  003F                     ___lwdiv@dividend:	
  1417                           ; 2 bytes @ 0x1F
  1418                           
  1419                           
  1420                           ; 2 bytes @ 0x1F
  1421  003F                     	ds	1
  1422  0040                     setData@data0:	
  1423  0040                     WriteDataXLCD@data:	
  1424                           ; 1 bytes @ 0x20
  1425                           
  1426  0040                     WriteCmdXLCD@cmd:	
  1427                           ; 1 bytes @ 0x20
  1428                           
  1429  0040                     SetDDRamAddr@DDaddr:	
  1430                           ; 1 bytes @ 0x20
  1431                           
  1432                           
  1433                           ; 1 bytes @ 0x20
  1434  0040                     	ds	1
  1435  0041                     ??_putsXLCD:	
  1436  0041                     ??_putrsXLCD:	
  1437                           ; 1 bytes @ 0x21
  1438                           
  1439  0041                     ??_SendCMDLCD:	
  1440                           ; 1 bytes @ 0x21
  1441                           
  1442  0041                     ??_OpenXLCD:	
  1443                           ; 1 bytes @ 0x21
  1444                           
  1445  0041                     ??___wmul:	
  1446                           ; 1 bytes @ 0x21
  1447                           
  1448  0041                     ??___lwdiv:	
  1449                           ; 1 bytes @ 0x21
  1450                           
  1451  0041                     setData@data1:	
  1452                           ; 1 bytes @ 0x21
  1453                           
  1454  0041                     SendCMDLCD@CMD:	
  1455                           ; 1 bytes @ 0x21
  1456                           
  1457  0041                     ___wmul@product:	
  1458                           ; 1 bytes @ 0x21
  1459                           
  1460                           
  1461                           ; 2 bytes @ 0x21
  1462  0041                     	ds	1
  1463  0042                     ??___lwmod:	
  1464  0042                     getData@aux0:	
  1465                           ; 1 bytes @ 0x22
  1466                           
  1467  0042                     setData@full:	
  1468                           ; 1 bytes @ 0x22
  1469                           
  1470  0042                     putsXLCD@buffer:	
  1471                           ; 1 bytes @ 0x22
  1472                           
  1473  0042                     putrsXLCD@buffer:	
  1474                           ; 1 bytes @ 0x22
  1475                           
  1476                           
  1477                           ; 1 bytes @ 0x22
  1478  0042                     	ds	1
  1479  0043                     ??_beep:	
  1480  0043                     getData@aux1:	
  1481                           ; 1 bytes @ 0x23
  1482                           
  1483  0043                     OpenXLCD@lcdtype:	
  1484                           ; 1 bytes @ 0x23
  1485                           
  1486  0043                     ___lwmod@counter:	
  1487                           ; 1 bytes @ 0x23
  1488                           
  1489                           
  1490                           ; 1 bytes @ 0x23
  1491  0043                     	ds	1
  1492  0044                     ??_config:	
  1493                           
  1494                           	psect	maintext
  1495  0F5F                     __pmaintext:	
  1496                           ; 1 bytes @ 0x24
  1497 ;;
  1498 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1499 ;;
  1500 ;; *************** function _main *****************
  1501 ;; Defined at:
  1502 ;;		line 5 in file "main.c"
  1503 ;; Parameters:    Size  Location     Type
  1504 ;;		None
  1505 ;; Auto vars:     Size  Location     Type
  1506 ;;  index           1    0        unsigned char 
  1507 ;; Return value:  Size  Location     Type
  1508 ;;                  1    wreg      void 
  1509 ;; Registers used:
  1510 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1511 ;; Tracked objects:
  1512 ;;		On entry : B00/0
  1513 ;;		On exit  : 0/0
  1514 ;;		Unchanged: 0/0
  1515 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1516 ;;      Params:         0       0       0       0       0
  1517 ;;      Locals:         0       0       0       0       0
  1518 ;;      Temps:          0       0       3       0       0
  1519 ;;      Totals:         0       0       3       0       0
  1520 ;;Total ram usage:        3 bytes
  1521 ;; Hardware stack levels required when called:   10
  1522 ;; This function calls:
  1523 ;;		_beep
  1524 ;;		_config
  1525 ;;		_getData
  1526 ;;		_lockingScreen
  1527 ;;		_principalScreen
  1528 ;;		_setFrequency
  1529 ;;		_setTransStat
  1530 ;;		_start
  1531 ;;		_writeFrequency
  1532 ;; This function is called by:
  1533 ;;		Startup code after reset
  1534 ;; This function uses a non-reentrant model
  1535 ;;
  1536                           
  1537                           
  1538                           ;psect for function _main
  1539  0F5F                     _main:	
  1540                           
  1541                           ;main.c: 6:     unsigned char index;;main.c: 7:     _delay((unsigned long)((100)*(400000
      +                          0/4000.0)));
  1542                           
  1543                           ;incstack = 0
  1544 ;; hardware stack exceeded
  1545                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1546  0F5F  3082               	movlw	130
  1547  0F60  1683               	bsf	3,5	;RP0=1, select bank1
  1548  0F61  1303               	bcf	3,6	;RP1=0, select bank1
  1549  0F62  00E3               	movwf	(??_main^(0+128)+1)
  1550  0F63  30DD               	movlw	221
  1551  0F64  00E2               	movwf	??_main^(0+128)
  1552  0F65                     u3507:	
  1553  0F65  0BE2               	decfsz	??_main^(0+128),f
  1554  0F66  2F65               	goto	u3507
  1555  0F67  0BE3               	decfsz	(??_main^(0+128)+1),f
  1556  0F68  2F65               	goto	u3507
  1557                           
  1558                           ;main.c: 8:     config();
  1559  0F69  120A  158A  2261  120A  158A  	fcall	_config
  1560                           
  1561                           ;main.c: 9:     beep(100);
  1562  0F6E  3064               	movlw	100
  1563  0F6F  1683               	bsf	3,5	;RP0=1, select bank1
  1564  0F70  1303               	bcf	3,6	;RP1=0, select bank1
  1565  0F71  00C3               	movwf	beep@ms^(0+128)
  1566  0F72  3000               	movlw	0
  1567  0F73  00C4               	movwf	(beep@ms^(0+128)+1)
  1568  0F74  120A  158A  23FF  120A  158A  	fcall	_beep
  1569                           
  1570                           ;main.c: 10:     getData();
  1571  0F79  120A  158A  25E1  120A  158A  	fcall	_getData
  1572                           
  1573                           ;main.c: 11:     beep(10);
  1574  0F7E  300A               	movlw	10
  1575  0F7F  1683               	bsf	3,5	;RP0=1, select bank1
  1576  0F80  1303               	bcf	3,6	;RP1=0, select bank1
  1577  0F81  00C3               	movwf	beep@ms^(0+128)
  1578  0F82  3000               	movlw	0
  1579  0F83  00C4               	movwf	(beep@ms^(0+128)+1)
  1580  0F84  120A  158A  23FF  120A  158A  	fcall	_beep
  1581                           
  1582                           ;main.c: 12:     if(!PORTAbits.RA4){
  1583  0F89  1283               	bcf	3,5	;RP0=0, select bank0
  1584  0F8A  1303               	bcf	3,6	;RP1=0, select bank0
  1585  0F8B  1A05               	btfsc	5,4	;volatile
  1586  0F8C  2FA1               	goto	l197
  1587                           
  1588                           ;main.c: 13:         _delay((unsigned long)((25)*(4000000/4000.0)));
  1589  0F8D  3021               	movlw	33
  1590  0F8E  1683               	bsf	3,5	;RP0=1, select bank1
  1591  0F8F  1303               	bcf	3,6	;RP1=0, select bank1
  1592  0F90  00E3               	movwf	(??_main^(0+128)+1)
  1593  0F91  3075               	movlw	117
  1594  0F92  00E2               	movwf	??_main^(0+128)
  1595  0F93                     u3517:	
  1596  0F93  0BE2               	decfsz	??_main^(0+128),f
  1597  0F94  2F93               	goto	u3517
  1598  0F95  0BE3               	decfsz	(??_main^(0+128)+1),f
  1599  0F96  2F93               	goto	u3517
  1600  0F97  2F98               	nop2
  1601                           
  1602                           ;main.c: 14:         if(!PORTAbits.RA4) setFrequency();
  1603  0F98  1283               	bcf	3,5	;RP0=0, select bank0
  1604  0F99  1303               	bcf	3,6	;RP1=0, select bank0
  1605  0F9A  1A05               	btfsc	5,4	;volatile
  1606  0F9B  2FA1               	goto	l197
  1607  0F9C  120A  118A  244F  120A  158A  	fcall	_setFrequency
  1608  0FA1                     l197:	
  1609                           ;main.c: 15:     }
  1610                           
  1611                           
  1612                           ;main.c: 16:     start();
  1613  0FA1  120A  118A  2325  120A  158A  	fcall	_start
  1614                           
  1615                           ;main.c: 17:     lockingScreen();
  1616  0FA6  120A  158A  228F  120A  158A  	fcall	_lockingScreen
  1617  0FAB                     l4038:	
  1618                           
  1619                           ;main.c: 18:     writeFrequency(frequency);
  1620  0FAB  1283               	bcf	3,5	;RP0=0, select bank0
  1621  0FAC  1303               	bcf	3,6	;RP1=0, select bank0
  1622  0FAD  0845               	movf	_frequency+1,w
  1623  0FAE  1683               	bsf	3,5	;RP0=1, select bank1
  1624  0FAF  1303               	bcf	3,6	;RP1=0, select bank1
  1625  0FB0  00C6               	movwf	(writeFrequency@f+1)^(0+128)
  1626  0FB1  1283               	bcf	3,5	;RP0=0, select bank0
  1627  0FB2  1303               	bcf	3,6	;RP1=0, select bank0
  1628  0FB3  0844               	movf	_frequency,w
  1629  0FB4  1683               	bsf	3,5	;RP0=1, select bank1
  1630  0FB5  1303               	bcf	3,6	;RP1=0, select bank1
  1631  0FB6  00C5               	movwf	writeFrequency@f^(0+128)
  1632  0FB7  120A  118A  2567  120A  158A  	fcall	_writeFrequency
  1633                           
  1634                           ;main.c: 21:     principalScreen();
  1635  0FBC  120A  158A  26FC  120A  158A  	fcall	_principalScreen
  1636  0FC1                     l4044:	
  1637                           
  1638                           ;main.c: 24:             setTransStat(1);
  1639  0FC1  3001               	movlw	1
  1640  0FC2  1283               	bcf	3,5	;RP0=0, select bank0
  1641  0FC3  1303               	bcf	3,6	;RP1=0, select bank0
  1642  0FC4  00BD               	movwf	setTransStat@stat
  1643  0FC5  3000               	movlw	0
  1644  0FC6  00BE               	movwf	setTransStat@stat+1
  1645  0FC7  120A  118A  26EA  120A  158A  	fcall	_setTransStat
  1646                           
  1647                           ;main.c: 28:         if(!PORTAbits.RA4){
  1648                           
  1649                           ;main.c: 25:         }else{
  1650  0FCC  1283               	bcf	3,5	;RP0=0, select bank0
  1651  0FCD  1303               	bcf	3,6	;RP1=0, select bank0
  1652  0FCE  1A05               	btfsc	5,4	;volatile
  1653  0FCF  2FC1               	goto	l4044
  1654                           
  1655                           ;main.c: 29:             _delay((unsigned long)((500)*(4000000/4000.0)));
  1656  0FD0  3003               	movlw	3
  1657  0FD1  1683               	bsf	3,5	;RP0=1, select bank1
  1658  0FD2  1303               	bcf	3,6	;RP1=0, select bank1
  1659  0FD3  00E4               	movwf	(??_main^(0+128)+2)
  1660  0FD4  308A               	movlw	138
  1661  0FD5  00E3               	movwf	(??_main^(0+128)+1)
  1662  0FD6  3055               	movlw	85
  1663  0FD7  00E2               	movwf	??_main^(0+128)
  1664  0FD8                     u3527:	
  1665  0FD8  0BE2               	decfsz	??_main^(0+128),f
  1666  0FD9  2FD8               	goto	u3527
  1667  0FDA  0BE3               	decfsz	(??_main^(0+128)+1),f
  1668  0FDB  2FD8               	goto	u3527
  1669  0FDC  0BE4               	decfsz	(??_main^(0+128)+2),f
  1670  0FDD  2FD8               	goto	u3527
  1671                           
  1672                           ;main.c: 30:             for(i = 0; i < 10; i++){
  1673  0FDE  1683               	bsf	3,5	;RP0=1, select bank1
  1674  0FDF  1303               	bcf	3,6	;RP1=0, select bank1
  1675  0FE0  01A0               	clrf	_i^(0+128)
  1676  0FE1                     l4054:	
  1677  0FE1  300A               	movlw	10
  1678  0FE2  0220               	subwf	_i^(0+128),w
  1679  0FE3  1803               	btfsc	3,0
  1680  0FE4  2FF6               	goto	l204
  1681                           
  1682                           ;main.c: 31:                 _delay((unsigned long)((100)*(4000000/4000.0)));
  1683  0FE5  3082               	movlw	130
  1684  0FE6  1683               	bsf	3,5	;RP0=1, select bank1
  1685  0FE7  1303               	bcf	3,6	;RP1=0, select bank1
  1686  0FE8  00E3               	movwf	(??_main^(0+128)+1)
  1687  0FE9  30DD               	movlw	221
  1688  0FEA  00E2               	movwf	??_main^(0+128)
  1689  0FEB                     u3537:	
  1690  0FEB  0BE2               	decfsz	??_main^(0+128),f
  1691  0FEC  2FEB               	goto	u3537
  1692  0FED  0BE3               	decfsz	(??_main^(0+128)+1),f
  1693  0FEE  2FEB               	goto	u3537
  1694                           
  1695                           ;main.c: 32:             }
  1696  0FEF  3001               	movlw	1
  1697  0FF0  1683               	bsf	3,5	;RP0=1, select bank1
  1698  0FF1  1303               	bcf	3,6	;RP1=0, select bank1
  1699  0FF2  00E2               	movwf	??_main^(0+128)
  1700  0FF3  0862               	movf	??_main^(0+128),w
  1701  0FF4  07A0               	addwf	_i^(0+128),f
  1702  0FF5  2FE1               	goto	l4054
  1703  0FF6                     l204:	
  1704                           
  1705                           ;main.c: 33:             if(!PORTAbits.RA4){
  1706  0FF6  1283               	bcf	3,5	;RP0=0, select bank0
  1707  0FF7  1303               	bcf	3,6	;RP1=0, select bank0
  1708  0FF8  1A05               	btfsc	5,4	;volatile
  1709  0FF9  2FC1               	goto	l4044
  1710                           
  1711                           ;main.c: 34:                 setFrequency();
  1712  0FFA  120A  118A  244F  120A  158A  	fcall	_setFrequency
  1713  0FFF  2FAB               	goto	l4038
  1714  1000                     __end_of_main:	
  1715                           
  1716                           	psect	text1
  1717  0325                     __ptext1:	
  1718 ;; *************** function _start *****************
  1719 ;; Defined at:
  1720 ;;		line 73 in file "main.c"
  1721 ;; Parameters:    Size  Location     Type
  1722 ;;		None
  1723 ;; Auto vars:     Size  Location     Type
  1724 ;;  i               1   27[BANK1 ] unsigned char 
  1725 ;; Return value:  Size  Location     Type
  1726 ;;                  1    wreg      void 
  1727 ;; Registers used:
  1728 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1729 ;; Tracked objects:
  1730 ;;		On entry : 0/0
  1731 ;;		On exit  : 0/0
  1732 ;;		Unchanged: 0/0
  1733 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1734 ;;      Params:         0       0       0       0       0
  1735 ;;      Locals:         0       0       1       0       0
  1736 ;;      Temps:          0       0       3       0       0
  1737 ;;      Totals:         0       0       4       0       0
  1738 ;;Total ram usage:        4 bytes
  1739 ;; Hardware stack levels used:    1
  1740 ;; Hardware stack levels required when called:    8
  1741 ;; This function calls:
  1742 ;;		_SetDDRamAddr
  1743 ;;		_beep
  1744 ;;		_putsXLCD
  1745 ;;		_sprintf
  1746 ;; This function is called by:
  1747 ;;		_main
  1748 ;; This function uses a non-reentrant model
  1749 ;;
  1750                           
  1751                           
  1752                           ;psect for function _start
  1753  0325                     _start:	
  1754                           
  1755                           ;main.c: 75:     INTCONbits.GIE = 0;
  1756                           
  1757                           ;incstack = 0
  1758 ;; hardware stack exceeded
  1759                           ; Regs used in _start: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1760  0325  138B               	bcf	11,7	;volatile
  1761                           
  1762                           ;main.c: 78:     for(i = 0; i < 10; i++){
  1763  0326  1683               	bsf	3,5	;RP0=1, select bank1
  1764  0327  1303               	bcf	3,6	;RP1=0, select bank1
  1765  0328  01DE               	clrf	start@i^(0+128)
  1766                           
  1767                           ;main.c: 79:         PORTCbits.RC1 = !PORTCbits.RC1;
  1768  0329  1003               	clrc
  1769  032A                     L1:	
  1770  032A  1283               	bcf	3,5	;RP0=0, select bank0
  1771  032B  1303               	bcf	3,6	;RP1=0, select bank0
  1772  032C  1C87               	btfss	7,1	;volatile
  1773  032D  1403               	setc
  1774  032E  1C03               	btfss	3,0
  1775  032F  2B34               	goto	u3360
  1776  0330  1283               	bcf	3,5	;RP0=0, select bank0
  1777  0331  1303               	bcf	3,6	;RP1=0, select bank0
  1778  0332  1487               	bsf	7,1	;volatile
  1779  0333  2B37               	goto	l3922
  1780  0334                     u3360:	
  1781  0334  1283               	bcf	3,5	;RP0=0, select bank0
  1782  0335  1303               	bcf	3,6	;RP1=0, select bank0
  1783  0336  1087               	bcf	7,1	;volatile
  1784  0337                     l3922:	
  1785                           
  1786                           ;main.c: 80:         sprintf(lineOne,"TESTING         ");
  1787  0337  3032               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1788  0338  1683               	bsf	3,5	;RP0=1, select bank1
  1789  0339  1303               	bcf	3,6	;RP1=0, select bank1
  1790  033A  00DB               	movwf	??_start^(0+128)
  1791  033B  085B               	movf	??_start^(0+128),w
  1792  033C  00CA               	movwf	sprintf@f^(0+128)
  1793  033D  30B2               	movlw	(low (_lineOne| 0))& (0+255)
  1794  033E  120A  118A  2035  120A  118A  	fcall	_sprintf
  1795                           
  1796                           ;main.c: 81:         sprintf(lineTwo,"          SUPPLY");
  1797  0343  3098               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1798  0344  1683               	bsf	3,5	;RP0=1, select bank1
  1799  0345  1303               	bcf	3,6	;RP1=0, select bank1
  1800  0346  00DB               	movwf	??_start^(0+128)
  1801  0347  085B               	movf	??_start^(0+128),w
  1802  0348  00CA               	movwf	sprintf@f^(0+128)
  1803  0349  30A1               	movlw	(low (_lineTwo| 0))& (0+255)
  1804  034A  120A  118A  2035  120A  118A  	fcall	_sprintf
  1805                           
  1806                           ;main.c: 82:         SetDDRamAddr(0x00);
  1807  034F  3000               	movlw	0
  1808  0350  120A  118A  27AE  120A  118A  	fcall	_SetDDRamAddr
  1809                           
  1810                           ;main.c: 83:         putsXLCD(lineOne);
  1811  0355  30B2               	movlw	(low (_lineOne| 0))& (0+255)
  1812  0356  120A  158A  21A5  120A  118A  	fcall	_putsXLCD
  1813                           
  1814                           ;main.c: 84:         SetDDRamAddr(0x40);
  1815  035B  3040               	movlw	64
  1816  035C  120A  118A  27AE  120A  118A  	fcall	_SetDDRamAddr
  1817                           
  1818                           ;main.c: 85:         putsXLCD(lineTwo);
  1819  0361  30A1               	movlw	(low (_lineTwo| 0))& (0+255)
  1820  0362  120A  158A  21A5  120A  118A  	fcall	_putsXLCD
  1821                           
  1822                           ;main.c: 86:         _delay((unsigned long)((100)*(4000000/4000.0)));
  1823  0367  3082               	movlw	130
  1824  0368  1683               	bsf	3,5	;RP0=1, select bank1
  1825  0369  1303               	bcf	3,6	;RP1=0, select bank1
  1826  036A  00DC               	movwf	(??_start^(0+128)+1)
  1827  036B  30DD               	movlw	221
  1828  036C  00DB               	movwf	??_start^(0+128)
  1829  036D                     u3547:	
  1830  036D  0BDB               	decfsz	??_start^(0+128),f
  1831  036E  2B6D               	goto	u3547
  1832  036F  0BDC               	decfsz	(??_start^(0+128)+1),f
  1833  0370  2B6D               	goto	u3547
  1834                           
  1835                           ;main.c: 87:     }
  1836  0371  3001               	movlw	1
  1837  0372  1683               	bsf	3,5	;RP0=1, select bank1
  1838  0373  1303               	bcf	3,6	;RP1=0, select bank1
  1839  0374  00DB               	movwf	??_start^(0+128)
  1840  0375  085B               	movf	??_start^(0+128),w
  1841  0376  07DE               	addwf	start@i^(0+128),f
  1842  0377  300A               	movlw	10
  1843  0378  025E               	subwf	start@i^(0+128),w
  1844  0379  1C03               	skipc
  1845  037A  2B2A               	goto	L1
  1846                           
  1847                           ;main.c: 88:     PORTCbits.RC1 = 0;
  1848  037B  1283               	bcf	3,5	;RP0=0, select bank0
  1849  037C  1303               	bcf	3,6	;RP1=0, select bank0
  1850  037D  1087               	bcf	7,1	;volatile
  1851                           
  1852                           ;main.c: 90:     for(i = 0; i < 18; i++){
  1853  037E  1683               	bsf	3,5	;RP0=1, select bank1
  1854  037F  1303               	bcf	3,6	;RP1=0, select bank1
  1855  0380  01DE               	clrf	start@i^(0+128)
  1856                           
  1857                           ;main.c: 91:         PORTCbits.RC3 = !PORTCbits.RC3;
  1858  0381  1003               	clrc
  1859  0382                     L2:	
  1860  0382  1283               	bcf	3,5	;RP0=0, select bank0
  1861  0383  1303               	bcf	3,6	;RP1=0, select bank0
  1862  0384  1D87               	btfss	7,3	;volatile
  1863  0385  1403               	setc
  1864  0386  1C03               	btfss	3,0
  1865  0387  2B8C               	goto	u3390
  1866  0388  1283               	bcf	3,5	;RP0=0, select bank0
  1867  0389  1303               	bcf	3,6	;RP1=0, select bank0
  1868  038A  1587               	bsf	7,3	;volatile
  1869  038B  2B8F               	goto	l3948
  1870  038C                     u3390:	
  1871  038C  1283               	bcf	3,5	;RP0=0, select bank0
  1872  038D  1303               	bcf	3,6	;RP1=0, select bank0
  1873  038E  1187               	bcf	7,3	;volatile
  1874  038F                     l3948:	
  1875                           
  1876                           ;main.c: 92:         sprintf(lineOne,"TESTING         ");
  1877  038F  3032               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1878  0390  1683               	bsf	3,5	;RP0=1, select bank1
  1879  0391  1303               	bcf	3,6	;RP1=0, select bank1
  1880  0392  00DB               	movwf	??_start^(0+128)
  1881  0393  085B               	movf	??_start^(0+128),w
  1882  0394  00CA               	movwf	sprintf@f^(0+128)
  1883  0395  30B2               	movlw	(low (_lineOne| 0))& (0+255)
  1884  0396  120A  118A  2035  120A  118A  	fcall	_sprintf
  1885                           
  1886                           ;main.c: 93:         sprintf(lineTwo,"     TEMPERATURE");
  1887  039B  3054               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1888  039C  1683               	bsf	3,5	;RP0=1, select bank1
  1889  039D  1303               	bcf	3,6	;RP1=0, select bank1
  1890  039E  00DB               	movwf	??_start^(0+128)
  1891  039F  085B               	movf	??_start^(0+128),w
  1892  03A0  00CA               	movwf	sprintf@f^(0+128)
  1893  03A1  30A1               	movlw	(low (_lineTwo| 0))& (0+255)
  1894  03A2  120A  118A  2035  120A  118A  	fcall	_sprintf
  1895                           
  1896                           ;main.c: 94:         SetDDRamAddr(0x00);
  1897  03A7  3000               	movlw	0
  1898  03A8  120A  118A  27AE  120A  118A  	fcall	_SetDDRamAddr
  1899                           
  1900                           ;main.c: 95:         putsXLCD(lineOne);
  1901  03AD  30B2               	movlw	(low (_lineOne| 0))& (0+255)
  1902  03AE  120A  158A  21A5  120A  118A  	fcall	_putsXLCD
  1903                           
  1904                           ;main.c: 96:         SetDDRamAddr(0x40);
  1905  03B3  3040               	movlw	64
  1906  03B4  120A  118A  27AE  120A  118A  	fcall	_SetDDRamAddr
  1907                           
  1908                           ;main.c: 97:         putsXLCD(lineTwo);
  1909  03B9  30A1               	movlw	(low (_lineTwo| 0))& (0+255)
  1910  03BA  120A  158A  21A5  120A  118A  	fcall	_putsXLCD
  1911                           
  1912                           ;main.c: 98:         _delay((unsigned long)((100)*(4000000/4000.0)));
  1913  03BF  3082               	movlw	130
  1914  03C0  1683               	bsf	3,5	;RP0=1, select bank1
  1915  03C1  1303               	bcf	3,6	;RP1=0, select bank1
  1916  03C2  00DC               	movwf	(??_start^(0+128)+1)
  1917  03C3  30DD               	movlw	221
  1918  03C4  00DB               	movwf	??_start^(0+128)
  1919  03C5                     u3557:	
  1920  03C5  0BDB               	decfsz	??_start^(0+128),f
  1921  03C6  2BC5               	goto	u3557
  1922  03C7  0BDC               	decfsz	(??_start^(0+128)+1),f
  1923  03C8  2BC5               	goto	u3557
  1924                           
  1925                           ;main.c: 99:     }
  1926  03C9  3001               	movlw	1
  1927  03CA  1683               	bsf	3,5	;RP0=1, select bank1
  1928  03CB  1303               	bcf	3,6	;RP1=0, select bank1
  1929  03CC  00DB               	movwf	??_start^(0+128)
  1930  03CD  085B               	movf	??_start^(0+128),w
  1931  03CE  07DE               	addwf	start@i^(0+128),f
  1932  03CF  3012               	movlw	18
  1933  03D0  025E               	subwf	start@i^(0+128),w
  1934  03D1  1C03               	skipc
  1935  03D2  2B82               	goto	L2
  1936                           
  1937                           ;main.c: 100:     PORTCbits.RC3 = 0;
  1938  03D3  1283               	bcf	3,5	;RP0=0, select bank0
  1939  03D4  1303               	bcf	3,6	;RP1=0, select bank0
  1940  03D5  1187               	bcf	7,3	;volatile
  1941                           
  1942                           ;main.c: 102:     for(i = 0; i < 15; i++){
  1943  03D6  1683               	bsf	3,5	;RP0=1, select bank1
  1944  03D7  1303               	bcf	3,6	;RP1=0, select bank1
  1945  03D8  01DE               	clrf	start@i^(0+128)
  1946                           
  1947                           ;main.c: 103:         PORTCbits.RC2 = !PORTCbits.RC2;
  1948  03D9  1003               	clrc
  1949  03DA                     L3:	
  1950  03DA  1283               	bcf	3,5	;RP0=0, select bank0
  1951  03DB  1303               	bcf	3,6	;RP1=0, select bank0
  1952  03DC  1D07               	btfss	7,2	;volatile
  1953  03DD  1403               	setc
  1954  03DE  1C03               	btfss	3,0
  1955  03DF  2BE4               	goto	u3420
  1956  03E0  1283               	bcf	3,5	;RP0=0, select bank0
  1957  03E1  1303               	bcf	3,6	;RP1=0, select bank0
  1958  03E2  1507               	bsf	7,2	;volatile
  1959  03E3  2BE7               	goto	l3974
  1960  03E4                     u3420:	
  1961  03E4  1283               	bcf	3,5	;RP0=0, select bank0
  1962  03E5  1303               	bcf	3,6	;RP1=0, select bank0
  1963  03E6  1107               	bcf	7,2	;volatile
  1964  03E7                     l3974:	
  1965                           
  1966                           ;main.c: 104:         sprintf(lineOne,"TESTING         ");
  1967  03E7  3032               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1968  03E8  1683               	bsf	3,5	;RP0=1, select bank1
  1969  03E9  1303               	bcf	3,6	;RP1=0, select bank1
  1970  03EA  00DB               	movwf	??_start^(0+128)
  1971  03EB  085B               	movf	??_start^(0+128),w
  1972  03EC  00CA               	movwf	sprintf@f^(0+128)
  1973  03ED  30B2               	movlw	(low (_lineOne| 0))& (0+255)
  1974  03EE  120A  118A  2035  120A  118A  	fcall	_sprintf
  1975                           
  1976                           ;main.c: 105:         sprintf(lineTwo,"             SWR");
  1977  03F3  3076               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  1978  03F4  1683               	bsf	3,5	;RP0=1, select bank1
  1979  03F5  1303               	bcf	3,6	;RP1=0, select bank1
  1980  03F6  00DB               	movwf	??_start^(0+128)
  1981  03F7  085B               	movf	??_start^(0+128),w
  1982  03F8  00CA               	movwf	sprintf@f^(0+128)
  1983  03F9  30A1               	movlw	(low (_lineTwo| 0))& (0+255)
  1984  03FA  120A  118A  2035  120A  118A  	fcall	_sprintf
  1985                           
  1986                           ;main.c: 106:         SetDDRamAddr(0x00);
  1987  03FF  3000               	movlw	0
  1988  0400  120A  118A  27AE  120A  118A  	fcall	_SetDDRamAddr
  1989                           
  1990                           ;main.c: 107:         putsXLCD(lineOne);
  1991  0405  30B2               	movlw	(low (_lineOne| 0))& (0+255)
  1992  0406  120A  158A  21A5  120A  118A  	fcall	_putsXLCD
  1993                           
  1994                           ;main.c: 108:         SetDDRamAddr(0x40);
  1995  040B  3040               	movlw	64
  1996  040C  120A  118A  27AE  120A  118A  	fcall	_SetDDRamAddr
  1997                           
  1998                           ;main.c: 109:         putsXLCD(lineTwo);
  1999  0411  30A1               	movlw	(low (_lineTwo| 0))& (0+255)
  2000  0412  120A  158A  21A5  120A  118A  	fcall	_putsXLCD
  2001                           
  2002                           ;main.c: 110:         _delay((unsigned long)((100)*(4000000/4000.0)));
  2003  0417  3082               	movlw	130
  2004  0418  1683               	bsf	3,5	;RP0=1, select bank1
  2005  0419  1303               	bcf	3,6	;RP1=0, select bank1
  2006  041A  00DC               	movwf	(??_start^(0+128)+1)
  2007  041B  30DD               	movlw	221
  2008  041C  00DB               	movwf	??_start^(0+128)
  2009  041D                     u3567:	
  2010  041D  0BDB               	decfsz	??_start^(0+128),f
  2011  041E  2C1D               	goto	u3567
  2012  041F  0BDC               	decfsz	(??_start^(0+128)+1),f
  2013  0420  2C1D               	goto	u3567
  2014                           
  2015                           ;main.c: 111:     }
  2016  0421  3001               	movlw	1
  2017  0422  1683               	bsf	3,5	;RP0=1, select bank1
  2018  0423  1303               	bcf	3,6	;RP1=0, select bank1
  2019  0424  00DB               	movwf	??_start^(0+128)
  2020  0425  085B               	movf	??_start^(0+128),w
  2021  0426  07DE               	addwf	start@i^(0+128),f
  2022  0427  300F               	movlw	15
  2023  0428  025E               	subwf	start@i^(0+128),w
  2024  0429  1C03               	skipc
  2025  042A  2BDA               	goto	L3
  2026                           
  2027                           ;main.c: 112:     PORTCbits.RC2 = 0;
  2028  042B  1283               	bcf	3,5	;RP0=0, select bank0
  2029  042C  1303               	bcf	3,6	;RP1=0, select bank0
  2030  042D  1107               	bcf	7,2	;volatile
  2031                           
  2032                           ;main.c: 113:     beep(250);
  2033  042E  30FA               	movlw	250
  2034  042F  1683               	bsf	3,5	;RP0=1, select bank1
  2035  0430  1303               	bcf	3,6	;RP1=0, select bank1
  2036  0431  00C3               	movwf	beep@ms^(0+128)
  2037  0432  3000               	movlw	0
  2038  0433  00C4               	movwf	(beep@ms^(0+128)+1)
  2039  0434  120A  158A  23FF  120A  118A  	fcall	_beep
  2040                           
  2041                           ;main.c: 114:     INTCONbits.GIE = 1;
  2042  0439  178B               	bsf	11,7	;volatile
  2043                           
  2044                           ;main.c: 115:     _delay((unsigned long)((500)*(4000000/4000.0)));
  2045  043A  3003               	movlw	3
  2046  043B  1683               	bsf	3,5	;RP0=1, select bank1
  2047  043C  1303               	bcf	3,6	;RP1=0, select bank1
  2048  043D  00DD               	movwf	(??_start^(0+128)+2)
  2049  043E  308A               	movlw	138
  2050  043F  00DC               	movwf	(??_start^(0+128)+1)
  2051  0440  3055               	movlw	85
  2052  0441  00DB               	movwf	??_start^(0+128)
  2053  0442                     u3577:	
  2054  0442  0BDB               	decfsz	??_start^(0+128),f
  2055  0443  2C42               	goto	u3577
  2056  0444  0BDC               	decfsz	(??_start^(0+128)+1),f
  2057  0445  2C42               	goto	u3577
  2058  0446  0BDD               	decfsz	(??_start^(0+128)+2),f
  2059  0447  2C42               	goto	u3577
  2060                           
  2061                           ;main.c: 116:     PORTCbits.RC1 = 1;
  2062  0448  1283               	bcf	3,5	;RP0=0, select bank0
  2063  0449  1303               	bcf	3,6	;RP1=0, select bank0
  2064  044A  1487               	bsf	7,1	;volatile
  2065                           
  2066                           ;main.c: 117:     PORTCbits.RC3 = 1;
  2067  044B  1587               	bsf	7,3	;volatile
  2068                           
  2069                           ;main.c: 118:     PORTCbits.RC2 = 1;
  2070  044C  1507               	bsf	7,2	;volatile
  2071                           
  2072                           ;main.c: 119:     INTCONbits.GIE = 1;
  2073  044D  178B               	bsf	11,7	;volatile
  2074  044E  0008               	return
  2075  044F                     __end_of_start:	
  2076                           
  2077                           	psect	text2
  2078  044F                     __ptext2:	
  2079 ;; *************** function _setFrequency *****************
  2080 ;; Defined at:
  2081 ;;		line 179 in file "main.c"
  2082 ;; Parameters:    Size  Location     Type
  2083 ;;		None
  2084 ;; Auto vars:     Size  Location     Type
  2085 ;;		None
  2086 ;; Return value:  Size  Location     Type
  2087 ;;                  1    wreg      void 
  2088 ;; Registers used:
  2089 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2090 ;; Tracked objects:
  2091 ;;		On entry : 0/0
  2092 ;;		On exit  : 0/0
  2093 ;;		Unchanged: 0/0
  2094 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2095 ;;      Params:         0       0       0       0       0
  2096 ;;      Locals:         0       0       0       0       0
  2097 ;;      Temps:          0       0       3       0       0
  2098 ;;      Totals:         0       0       3       0       0
  2099 ;;Total ram usage:        3 bytes
  2100 ;; Hardware stack levels used:    1
  2101 ;; Hardware stack levels required when called:    9
  2102 ;; This function calls:
  2103 ;;		_SetDDRamAddr
  2104 ;;		_beep
  2105 ;;		_lockingScreen
  2106 ;;		_putsXLCD
  2107 ;;		_setData
  2108 ;;		_sprintf
  2109 ;;		_writeFrequency
  2110 ;; This function is called by:
  2111 ;;		_main
  2112 ;; This function uses a non-reentrant model
  2113 ;;
  2114                           
  2115                           
  2116                           ;psect for function _setFrequency
  2117  044F                     _setFrequency:	
  2118                           
  2119                           ;main.c: 180:     isOnConfig = 1;
  2120                           
  2121                           ;incstack = 0
  2122 ;; hardware stack exceeded
  2123                           ; Regs used in _setFrequency: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2124  044F  1283               	bcf	3,5	;RP0=0, select bank0
  2125  0450  1303               	bcf	3,6	;RP1=0, select bank0
  2126  0451  01C7               	clrf	_isOnConfig
  2127  0452  0AC7               	incf	_isOnConfig,f
  2128                           
  2129                           ;main.c: 181:     sprintf(lineOne,"SET   FREQUENCY ");
  2130  0453  3043               	movlw	(low ((STR_7-__stringbase)| (0+32768)))& (0+255)
  2131  0454  1683               	bsf	3,5	;RP0=1, select bank1
  2132  0455  1303               	bcf	3,6	;RP1=0, select bank1
  2133  0456  00DC               	movwf	??_setFrequency^(0+128)
  2134  0457  085C               	movf	??_setFrequency^(0+128),w
  2135  0458  00CA               	movwf	sprintf@f^(0+128)
  2136  0459  30B2               	movlw	(low (_lineOne| 0))& (0+255)
  2137  045A  120A  118A  2035  120A  118A  	fcall	_sprintf
  2138                           
  2139                           ;main.c: 182:     SetDDRamAddr(0x00);
  2140  045F  3000               	movlw	0
  2141  0460  120A  118A  27AE  120A  118A  	fcall	_SetDDRamAddr
  2142                           
  2143                           ;main.c: 183:     putsXLCD(lineOne);
  2144  0465  30B2               	movlw	(low (_lineOne| 0))& (0+255)
  2145  0466  120A  158A  21A5  120A  118A  	fcall	_putsXLCD
  2146                           
  2147                           ;main.c: 184:     beep(200);
  2148  046B  30C8               	movlw	200
  2149  046C  1683               	bsf	3,5	;RP0=1, select bank1
  2150  046D  1303               	bcf	3,6	;RP1=0, select bank1
  2151  046E  00C3               	movwf	beep@ms^(0+128)
  2152  046F  3000               	movlw	0
  2153  0470  00C4               	movwf	(beep@ms^(0+128)+1)
  2154  0471  120A  158A  23FF  120A  118A  	fcall	_beep
  2155  0476                     l244:	
  2156                           ;main.c: 185:     while(!PORTAbits.RA4)continue;
  2157                           
  2158  0476  1283               	bcf	3,5	;RP0=0, select bank0
  2159  0477  1303               	bcf	3,6	;RP1=0, select bank0
  2160  0478  1E05               	btfss	5,4	;volatile
  2161  0479  2C76               	goto	l244
  2162  047A                     l247:	
  2163                           ;main.c: 187:     while(1){
  2164                           
  2165                           
  2166                           ;main.c: 188:         if(!PORTAbits.RA3){
  2167  047A  1985               	btfsc	5,3	;volatile
  2168  047B  2CD2               	goto	l248
  2169                           
  2170                           ;main.c: 189:             if(frequency < 1080)frequency++;
  2171  047C  3004               	movlw	4
  2172  047D  0245               	subwf	_frequency+1,w
  2173  047E  3038               	movlw	56
  2174  047F  1903               	skipnz
  2175  0480  0244               	subwf	_frequency,w
  2176  0481  1803               	skipnc
  2177  0482  2C89               	goto	l249
  2178  0483  3001               	movlw	1
  2179  0484  07C4               	addwf	_frequency,f
  2180  0485  1803               	skipnc
  2181  0486  0AC5               	incf	_frequency+1,f
  2182  0487  3000               	movlw	0
  2183  0488  07C5               	addwf	_frequency+1,f
  2184  0489                     l249:	
  2185                           
  2186                           ;main.c: 190:             if(frequency > 1080)frequency = 1080;
  2187  0489  3004               	movlw	4
  2188  048A  0245               	subwf	_frequency+1,w
  2189  048B  3039               	movlw	57
  2190  048C  1903               	skipnz
  2191  048D  0244               	subwf	_frequency,w
  2192  048E  1C03               	skipc
  2193  048F  2C94               	goto	l3866
  2194  0490  3038               	movlw	56
  2195  0491  00C4               	movwf	_frequency
  2196  0492  3004               	movlw	4
  2197  0493  00C5               	movwf	_frequency+1
  2198  0494                     l3866:	
  2199                           
  2200                           ;main.c: 191:             beep(100);
  2201  0494  3064               	movlw	100
  2202  0495  1683               	bsf	3,5	;RP0=1, select bank1
  2203  0496  1303               	bcf	3,6	;RP1=0, select bank1
  2204  0497  00C3               	movwf	beep@ms^(0+128)
  2205  0498  3000               	movlw	0
  2206  0499  00C4               	movwf	(beep@ms^(0+128)+1)
  2207  049A  120A  158A  23FF  120A  118A  	fcall	_beep
  2208                           
  2209                           ;main.c: 192:             _delay((unsigned long)((150)*(4000000/4000.0)));
  2210  049F  30C3               	movlw	195
  2211  04A0  1683               	bsf	3,5	;RP0=1, select bank1
  2212  04A1  1303               	bcf	3,6	;RP1=0, select bank1
  2213  04A2  00DD               	movwf	(??_setFrequency^(0+128)+1)
  2214  04A3  30CC               	movlw	204
  2215  04A4  00DC               	movwf	??_setFrequency^(0+128)
  2216  04A5                     u3587:	
  2217  04A5  0BDC               	decfsz	??_setFrequency^(0+128),f
  2218  04A6  2CA5               	goto	u3587
  2219  04A7  0BDD               	decfsz	(??_setFrequency^(0+128)+1),f
  2220  04A8  2CA5               	goto	u3587
  2221  04A9  0000               	nop
  2222  04AA                     l3876:	
  2223                           ;main.c: 193:             while(!PORTAbits.RA3){
  2224                           
  2225                           
  2226                           ;main.c: 193:             while(!PORTAbits.RA3){
  2227  04AA  1283               	bcf	3,5	;RP0=0, select bank0
  2228  04AB  1303               	bcf	3,6	;RP1=0, select bank0
  2229  04AC  1985               	btfsc	5,3	;volatile
  2230  04AD  2CD2               	goto	l248
  2231                           
  2232                           ;main.c: 194:                 if(frequency < 1080)frequency++;
  2233  04AE  3004               	movlw	4
  2234  04AF  0245               	subwf	_frequency+1,w
  2235  04B0  3038               	movlw	56
  2236  04B1  1903               	skipnz
  2237  04B2  0244               	subwf	_frequency,w
  2238  04B3  1803               	skipnc
  2239  04B4  2CBB               	goto	l253
  2240  04B5  3001               	movlw	1
  2241  04B6  07C4               	addwf	_frequency,f
  2242  04B7  1803               	skipnc
  2243  04B8  0AC5               	incf	_frequency+1,f
  2244  04B9  3000               	movlw	0
  2245  04BA  07C5               	addwf	_frequency+1,f
  2246  04BB                     l253:	
  2247                           
  2248                           ;main.c: 195:                 if(frequency > 1080)frequency = 1080;
  2249  04BB  3004               	movlw	4
  2250  04BC  0245               	subwf	_frequency+1,w
  2251  04BD  3039               	movlw	57
  2252  04BE  1903               	skipnz
  2253  04BF  0244               	subwf	_frequency,w
  2254  04C0  1C03               	skipc
  2255  04C1  2CC6               	goto	l254
  2256  04C2  3038               	movlw	56
  2257  04C3  00C4               	movwf	_frequency
  2258  04C4  3004               	movlw	4
  2259  04C5  00C5               	movwf	_frequency+1
  2260  04C6                     l254:	
  2261                           
  2262                           ;main.c: 196:                 _delay((unsigned long)((50)*(4000000/4000.0)));
  2263  04C6  3041               	movlw	65
  2264  04C7  1683               	bsf	3,5	;RP0=1, select bank1
  2265  04C8  1303               	bcf	3,6	;RP1=0, select bank1
  2266  04C9  00DD               	movwf	(??_setFrequency^(0+128)+1)
  2267  04CA  30ED               	movlw	237
  2268  04CB  00DC               	movwf	??_setFrequency^(0+128)
  2269  04CC                     u3597:	
  2270  04CC  0BDC               	decfsz	??_setFrequency^(0+128),f
  2271  04CD  2CCC               	goto	u3597
  2272  04CE  0BDD               	decfsz	(??_setFrequency^(0+128)+1),f
  2273  04CF  2CCC               	goto	u3597
  2274  04D0  2CD1               	nop2
  2275  04D1  2CAA               	goto	l3876
  2276  04D2                     l248:	
  2277                           ;main.c: 198:         }
  2278                           
  2279                           
  2280                           ;main.c: 200:         if(!PORTAbits.RA5){
  2281  04D2  1A85               	btfsc	5,5	;volatile
  2282  04D3  2D2A               	goto	l256
  2283                           
  2284                           ;main.c: 201:             if(frequency > 880)frequency--;
  2285  04D4  3003               	movlw	3
  2286  04D5  0245               	subwf	_frequency+1,w
  2287  04D6  3071               	movlw	113
  2288  04D7  1903               	skipnz
  2289  04D8  0244               	subwf	_frequency,w
  2290  04D9  1C03               	skipc
  2291  04DA  2CE1               	goto	l257
  2292  04DB  3001               	movlw	1
  2293  04DC  02C4               	subwf	_frequency,f
  2294  04DD  3000               	movlw	0
  2295  04DE  1C03               	skipc
  2296  04DF  03C5               	decf	_frequency+1,f
  2297  04E0  02C5               	subwf	_frequency+1,f
  2298  04E1                     l257:	
  2299                           
  2300                           ;main.c: 202:             if(frequency < 880)frequency = 880;
  2301  04E1  3003               	movlw	3
  2302  04E2  0245               	subwf	_frequency+1,w
  2303  04E3  3070               	movlw	112
  2304  04E4  1903               	skipnz
  2305  04E5  0244               	subwf	_frequency,w
  2306  04E6  1803               	skipnc
  2307  04E7  2CEC               	goto	l3884
  2308  04E8  3070               	movlw	112
  2309  04E9  00C4               	movwf	_frequency
  2310  04EA  3003               	movlw	3
  2311  04EB  00C5               	movwf	_frequency+1
  2312  04EC                     l3884:	
  2313                           
  2314                           ;main.c: 203:             beep(100);
  2315  04EC  3064               	movlw	100
  2316  04ED  1683               	bsf	3,5	;RP0=1, select bank1
  2317  04EE  1303               	bcf	3,6	;RP1=0, select bank1
  2318  04EF  00C3               	movwf	beep@ms^(0+128)
  2319  04F0  3000               	movlw	0
  2320  04F1  00C4               	movwf	(beep@ms^(0+128)+1)
  2321  04F2  120A  158A  23FF  120A  118A  	fcall	_beep
  2322                           
  2323                           ;main.c: 204:             _delay((unsigned long)((150)*(4000000/4000.0)));
  2324  04F7  30C3               	movlw	195
  2325  04F8  1683               	bsf	3,5	;RP0=1, select bank1
  2326  04F9  1303               	bcf	3,6	;RP1=0, select bank1
  2327  04FA  00DD               	movwf	(??_setFrequency^(0+128)+1)
  2328  04FB  30CC               	movlw	204
  2329  04FC  00DC               	movwf	??_setFrequency^(0+128)
  2330  04FD                     u3607:	
  2331  04FD  0BDC               	decfsz	??_setFrequency^(0+128),f
  2332  04FE  2CFD               	goto	u3607
  2333  04FF  0BDD               	decfsz	(??_setFrequency^(0+128)+1),f
  2334  0500  2CFD               	goto	u3607
  2335  0501  0000               	nop
  2336  0502                     l3894:	
  2337                           ;main.c: 205:             while(!PORTAbits.RA5){
  2338                           
  2339                           
  2340                           ;main.c: 205:             while(!PORTAbits.RA5){
  2341  0502  1283               	bcf	3,5	;RP0=0, select bank0
  2342  0503  1303               	bcf	3,6	;RP1=0, select bank0
  2343  0504  1A85               	btfsc	5,5	;volatile
  2344  0505  2D2A               	goto	l256
  2345                           
  2346                           ;main.c: 206:                 if(frequency > 880)frequency--;
  2347  0506  3003               	movlw	3
  2348  0507  0245               	subwf	_frequency+1,w
  2349  0508  3071               	movlw	113
  2350  0509  1903               	skipnz
  2351  050A  0244               	subwf	_frequency,w
  2352  050B  1C03               	skipc
  2353  050C  2D13               	goto	l261
  2354  050D  3001               	movlw	1
  2355  050E  02C4               	subwf	_frequency,f
  2356  050F  3000               	movlw	0
  2357  0510  1C03               	skipc
  2358  0511  03C5               	decf	_frequency+1,f
  2359  0512  02C5               	subwf	_frequency+1,f
  2360  0513                     l261:	
  2361                           
  2362                           ;main.c: 207:                 if(frequency < 880)frequency = 880;
  2363  0513  3003               	movlw	3
  2364  0514  0245               	subwf	_frequency+1,w
  2365  0515  3070               	movlw	112
  2366  0516  1903               	skipnz
  2367  0517  0244               	subwf	_frequency,w
  2368  0518  1803               	skipnc
  2369  0519  2D1E               	goto	l262
  2370  051A  3070               	movlw	112
  2371  051B  00C4               	movwf	_frequency
  2372  051C  3003               	movlw	3
  2373  051D  00C5               	movwf	_frequency+1
  2374  051E                     l262:	
  2375                           
  2376                           ;main.c: 208:                 _delay((unsigned long)((50)*(4000000/4000.0)));
  2377  051E  3041               	movlw	65
  2378  051F  1683               	bsf	3,5	;RP0=1, select bank1
  2379  0520  1303               	bcf	3,6	;RP1=0, select bank1
  2380  0521  00DD               	movwf	(??_setFrequency^(0+128)+1)
  2381  0522  30ED               	movlw	237
  2382  0523  00DC               	movwf	??_setFrequency^(0+128)
  2383  0524                     u3617:	
  2384  0524  0BDC               	decfsz	??_setFrequency^(0+128),f
  2385  0525  2D24               	goto	u3617
  2386  0526  0BDD               	decfsz	(??_setFrequency^(0+128)+1),f
  2387  0527  2D24               	goto	u3617
  2388  0528  2D29               	nop2
  2389  0529  2D02               	goto	l3894
  2390  052A                     l256:	
  2391                           ;main.c: 210:         }
  2392                           
  2393                           
  2394                           ;main.c: 212:         if(!PORTAbits.RA4){
  2395  052A  1A05               	btfsc	5,4	;volatile
  2396  052B  2C7A               	goto	l247
  2397                           
  2398                           ;main.c: 213:             _delay((unsigned long)((500)*(4000000/4000.0)));
  2399  052C  3003               	movlw	3
  2400  052D  1683               	bsf	3,5	;RP0=1, select bank1
  2401  052E  1303               	bcf	3,6	;RP1=0, select bank1
  2402  052F  00DE               	movwf	(??_setFrequency^(0+128)+2)
  2403  0530  308A               	movlw	138
  2404  0531  00DD               	movwf	(??_setFrequency^(0+128)+1)
  2405  0532  3055               	movlw	85
  2406  0533  00DC               	movwf	??_setFrequency^(0+128)
  2407  0534                     u3627:	
  2408  0534  0BDC               	decfsz	??_setFrequency^(0+128),f
  2409  0535  2D34               	goto	u3627
  2410  0536  0BDD               	decfsz	(??_setFrequency^(0+128)+1),f
  2411  0537  2D34               	goto	u3627
  2412  0538  0BDE               	decfsz	(??_setFrequency^(0+128)+2),f
  2413  0539  2D34               	goto	u3627
  2414                           
  2415                           ;main.c: 214:             if(!PORTAbits.RA4){
  2416  053A  1283               	bcf	3,5	;RP0=0, select bank0
  2417  053B  1303               	bcf	3,6	;RP1=0, select bank0
  2418  053C  1A05               	btfsc	5,4	;volatile
  2419  053D  2C7A               	goto	l247
  2420                           
  2421                           ;main.c: 215:                 setData(1);
  2422  053E  3001               	movlw	1
  2423  053F  120A  158A  269C  120A  118A  	fcall	_setData
  2424                           
  2425                           ;main.c: 216:                 beep(1000);
  2426  0544  30E8               	movlw	232
  2427  0545  1683               	bsf	3,5	;RP0=1, select bank1
  2428  0546  1303               	bcf	3,6	;RP1=0, select bank1
  2429  0547  00C3               	movwf	beep@ms^(0+128)
  2430  0548  3003               	movlw	3
  2431  0549  00C4               	movwf	(beep@ms^(0+128)+1)
  2432  054A  120A  158A  23FF  120A  118A  	fcall	_beep
  2433                           
  2434                           ;main.c: 222:     isOnConfig = 0;
  2435                           
  2436                           ;main.c: 217:                 break;
  2437  054F  1283               	bcf	3,5	;RP0=0, select bank0
  2438  0550  1303               	bcf	3,6	;RP1=0, select bank0
  2439  0551  01C7               	clrf	_isOnConfig
  2440                           
  2441                           ;main.c: 223:     lockingScreen();
  2442  0552  120A  158A  228F  120A  118A  	fcall	_lockingScreen
  2443                           
  2444                           ;main.c: 224:     writeFrequency(frequency);
  2445  0557  1283               	bcf	3,5	;RP0=0, select bank0
  2446  0558  1303               	bcf	3,6	;RP1=0, select bank0
  2447  0559  0845               	movf	_frequency+1,w
  2448  055A  1683               	bsf	3,5	;RP0=1, select bank1
  2449  055B  1303               	bcf	3,6	;RP1=0, select bank1
  2450  055C  00C6               	movwf	(writeFrequency@f+1)^(0+128)
  2451  055D  1283               	bcf	3,5	;RP0=0, select bank0
  2452  055E  1303               	bcf	3,6	;RP1=0, select bank0
  2453  055F  0844               	movf	_frequency,w
  2454  0560  1683               	bsf	3,5	;RP0=1, select bank1
  2455  0561  1303               	bcf	3,6	;RP1=0, select bank1
  2456  0562  00C5               	movwf	writeFrequency@f^(0+128)
  2457  0563  120A  118A  2567   	fcall	_writeFrequency
  2458  0566  0008               	return
  2459  0567                     __end_of_setFrequency:	
  2460                           
  2461                           	psect	text3
  2462  0567                     __ptext3:	
  2463 ;; *************** function _writeFrequency *****************
  2464 ;; Defined at:
  2465 ;;		line 12 in file "bh1514.c"
  2466 ;; Parameters:    Size  Location     Type
  2467 ;;  f               2    2[BANK1 ] unsigned int 
  2468 ;; Auto vars:     Size  Location     Type
  2469 ;;  r               2    9[BANK1 ] unsigned int 
  2470 ;;  buffer          2    7[BANK1 ] unsigned int 
  2471 ;; Return value:  Size  Location     Type
  2472 ;;                  1    wreg      void 
  2473 ;; Registers used:
  2474 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  2475 ;; Tracked objects:
  2476 ;;		On entry : 0/0
  2477 ;;		On exit  : 0/0
  2478 ;;		Unchanged: 0/0
  2479 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2480 ;;      Params:         0       0       2       0       0
  2481 ;;      Locals:         0       0       4       0       0
  2482 ;;      Temps:          0       0       3       0       0
  2483 ;;      Totals:         0       0       9       0       0
  2484 ;;Total ram usage:        9 bytes
  2485 ;; Hardware stack levels used:    1
  2486 ;; Hardware stack levels required when called:    7
  2487 ;; This function calls:
  2488 ;;		_beep
  2489 ;;		_codFreq
  2490 ;; This function is called by:
  2491 ;;		_main
  2492 ;;		_setFrequency
  2493 ;; This function uses a non-reentrant model
  2494 ;;
  2495                           
  2496                           
  2497                           ;psect for function _writeFrequency
  2498  0567                     _writeFrequency:	
  2499                           
  2500                           ;bh1514.c: 13:     unsigned int buffer;;bh1514.c: 14:     unsigned int r;;bh1514.c: 16: 
      +                              PORTCbits.RC4 = 0;
  2501                           
  2502                           ;incstack = 0
  2503                           ; Regs used in _writeFrequency: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  2504  0567  1283               	bcf	3,5	;RP0=0, select bank0
  2505  0568  1303               	bcf	3,6	;RP1=0, select bank0
  2506  0569  1207               	bcf	7,4	;volatile
  2507                           
  2508                           ;bh1514.c: 17:     PORTCbits.RC0 = 0;
  2509  056A  1007               	bcf	7,0	;volatile
  2510                           
  2511                           ;bh1514.c: 19:     buffer = codFreq(f);
  2512  056B  1683               	bsf	3,5	;RP0=1, select bank1
  2513  056C  1303               	bcf	3,6	;RP1=0, select bank1
  2514  056D  0846               	movf	(writeFrequency@f+1)^(0+128),w
  2515  056E  1283               	bcf	3,5	;RP0=0, select bank0
  2516  056F  1303               	bcf	3,6	;RP1=0, select bank0
  2517  0570  00BE               	movwf	codFreq@f+1
  2518  0571  1683               	bsf	3,5	;RP0=1, select bank1
  2519  0572  1303               	bcf	3,6	;RP1=0, select bank1
  2520  0573  0845               	movf	writeFrequency@f^(0+128),w
  2521  0574  1283               	bcf	3,5	;RP0=0, select bank0
  2522  0575  1303               	bcf	3,6	;RP1=0, select bank0
  2523  0576  00BD               	movwf	codFreq@f
  2524  0577  120A  158A  20D6  120A  118A  	fcall	_codFreq
  2525  057C  1283               	bcf	3,5	;RP0=0, select bank0
  2526  057D  1303               	bcf	3,6	;RP1=0, select bank0
  2527  057E  083E               	movf	?_codFreq+1,w
  2528  057F  1683               	bsf	3,5	;RP0=1, select bank1
  2529  0580  1303               	bcf	3,6	;RP1=0, select bank1
  2530  0581  00CB               	movwf	(writeFrequency@buffer+1)^(0+128)
  2531  0582  1283               	bcf	3,5	;RP0=0, select bank0
  2532  0583  1303               	bcf	3,6	;RP1=0, select bank0
  2533  0584  083D               	movf	?_codFreq,w
  2534  0585  1683               	bsf	3,5	;RP0=1, select bank1
  2535  0586  1303               	bcf	3,6	;RP1=0, select bank1
  2536  0587  00CA               	movwf	writeFrequency@buffer^(0+128)
  2537                           
  2538                           ;bh1514.c: 20:     PORTCbits.RC6 = 0;
  2539  0588  1283               	bcf	3,5	;RP0=0, select bank0
  2540  0589  1303               	bcf	3,6	;RP1=0, select bank0
  2541  058A  1307               	bcf	7,6	;volatile
  2542                           
  2543                           ;bh1514.c: 21:     PORTCbits.RC7 = 0;
  2544  058B  1387               	bcf	7,7	;volatile
  2545                           
  2546                           ;bh1514.c: 22:     PORTCbits.RC5 = 1;
  2547  058C  1687               	bsf	7,5	;volatile
  2548                           
  2549                           ;bh1514.c: 23:     _delay((unsigned long)((1)*(4000000/4000.0)));
  2550  058D  30C7               	movlw	199
  2551  058E  1683               	bsf	3,5	;RP0=1, select bank1
  2552  058F  1303               	bcf	3,6	;RP1=0, select bank1
  2553  0590  00C7               	movwf	??_writeFrequency^(0+128)
  2554  0591                     u3637:	
  2555  0591  2D92               	nop2
  2556  0592  0BC7               	decfsz	??_writeFrequency^(0+128),f
  2557  0593  2D91               	goto	u3637
  2558  0594  2D95               	nop2
  2559                           
  2560                           ;bh1514.c: 25:     for(i = 0; i < 16; i++){
  2561  0595  1683               	bsf	3,5	;RP0=1, select bank1
  2562  0596  1303               	bcf	3,6	;RP1=0, select bank1
  2563  0597  01A0               	clrf	_i^(0+128)
  2564  0598                     l3764:	
  2565  0598  3010               	movlw	16
  2566  0599  0220               	subwf	_i^(0+128),w
  2567  059A  1803               	btfsc	3,0
  2568  059B  2DD8               	goto	l3786
  2569                           
  2570                           ;bh1514.c: 26:         r = (buffer >> i) & 0x0001;
  2571  059C  084B               	movf	(writeFrequency@buffer+1)^(0+128),w
  2572  059D  00C8               	movwf	(??_writeFrequency^(0+128)+1)
  2573  059E  084A               	movf	writeFrequency@buffer^(0+128),w
  2574  059F  00C7               	movwf	??_writeFrequency^(0+128)
  2575  05A0  0A20               	incf	_i^(0+128),w
  2576  05A1  2DA5               	goto	u3184
  2577  05A2                     u3185:	
  2578  05A2  1003               	clrc
  2579  05A3  0CC8               	rrf	(??_writeFrequency^(0+128)+1),f
  2580  05A4  0CC7               	rrf	??_writeFrequency^(0+128),f
  2581  05A5                     u3184:	
  2582  05A5  3EFF               	addlw	-1
  2583  05A6  1D03               	skipz
  2584  05A7  2DA2               	goto	u3185
  2585  05A8  3001               	movlw	1
  2586  05A9  0547               	andwf	??_writeFrequency^(0+128),w
  2587  05AA  00CC               	movwf	writeFrequency@r^(0+128)
  2588  05AB  3000               	movlw	0
  2589  05AC  0548               	andwf	(??_writeFrequency+1)^(0+128),w
  2590  05AD  00CD               	movwf	(writeFrequency@r+1)^(0+128)
  2591                           
  2592                           ;bh1514.c: 27:         _delay((unsigned long)((1)*(4000000/4000.0)));
  2593  05AE  30C7               	movlw	199
  2594  05AF  1683               	bsf	3,5	;RP0=1, select bank1
  2595  05B0  1303               	bcf	3,6	;RP1=0, select bank1
  2596  05B1  00C7               	movwf	??_writeFrequency^(0+128)
  2597  05B2                     u3647:	
  2598  05B2  2DB3               	nop2
  2599  05B3  0BC7               	decfsz	??_writeFrequency^(0+128),f
  2600  05B4  2DB2               	goto	u3647
  2601  05B5  2DB6               	nop2
  2602                           
  2603                           ;bh1514.c: 28:         PORTCbits.RC6 = 0;
  2604  05B6  1283               	bcf	3,5	;RP0=0, select bank0
  2605  05B7  1303               	bcf	3,6	;RP1=0, select bank0
  2606  05B8  1307               	bcf	7,6	;volatile
  2607                           
  2608                           ;bh1514.c: 29:         if(r == 1){
  2609  05B9  1683               	bsf	3,5	;RP0=1, select bank1
  2610  05BA  1303               	bcf	3,6	;RP1=0, select bank1
  2611  05BB  034C               	decf	writeFrequency@r^(0+128),w
  2612  05BC  044D               	iorwf	(writeFrequency@r+1)^(0+128),w
  2613  05BD  1D03               	btfss	3,2
  2614  05BE  2DC3               	goto	l542
  2615                           
  2616                           ;bh1514.c: 30:             PORTCbits.RC7 = 1;
  2617  05BF  1283               	bcf	3,5	;RP0=0, select bank0
  2618  05C0  1303               	bcf	3,6	;RP1=0, select bank0
  2619  05C1  1787               	bsf	7,7	;volatile
  2620                           
  2621                           ;bh1514.c: 31:         }else{
  2622  05C2  2DC6               	goto	l3778
  2623  05C3                     l542:	
  2624                           
  2625                           ;bh1514.c: 32:             PORTCbits.RC7 = 0;
  2626  05C3  1283               	bcf	3,5	;RP0=0, select bank0
  2627  05C4  1303               	bcf	3,6	;RP1=0, select bank0
  2628  05C5  1387               	bcf	7,7	;volatile
  2629  05C6                     l3778:	
  2630                           
  2631                           ;bh1514.c: 34:         _delay((unsigned long)((1)*(4000000/4000.0)));
  2632  05C6  30C7               	movlw	199
  2633  05C7  1683               	bsf	3,5	;RP0=1, select bank1
  2634  05C8  1303               	bcf	3,6	;RP1=0, select bank1
  2635  05C9  00C7               	movwf	??_writeFrequency^(0+128)
  2636  05CA                     u3657:	
  2637  05CA  2DCB               	nop2
  2638  05CB  0BC7               	decfsz	??_writeFrequency^(0+128),f
  2639  05CC  2DCA               	goto	u3657
  2640  05CD  2DCE               	nop2
  2641                           
  2642                           ;bh1514.c: 35:         PORTCbits.RC6 = 1;
  2643  05CE  1283               	bcf	3,5	;RP0=0, select bank0
  2644  05CF  1303               	bcf	3,6	;RP1=0, select bank0
  2645  05D0  1707               	bsf	7,6	;volatile
  2646                           
  2647                           ;bh1514.c: 36:     }
  2648  05D1  3001               	movlw	1
  2649  05D2  1683               	bsf	3,5	;RP0=1, select bank1
  2650  05D3  1303               	bcf	3,6	;RP1=0, select bank1
  2651  05D4  00C7               	movwf	??_writeFrequency^(0+128)
  2652  05D5  0847               	movf	??_writeFrequency^(0+128),w
  2653  05D6  07A0               	addwf	_i^(0+128),f
  2654  05D7  2D98               	goto	l3764
  2655  05D8                     l3786:	
  2656                           
  2657                           ;bh1514.c: 38:     _delay((unsigned long)((1)*(4000000/4000.0)));
  2658  05D8  30C7               	movlw	199
  2659  05D9  1683               	bsf	3,5	;RP0=1, select bank1
  2660  05DA  1303               	bcf	3,6	;RP1=0, select bank1
  2661  05DB  00C7               	movwf	??_writeFrequency^(0+128)
  2662  05DC                     u3667:	
  2663  05DC  2DDD               	nop2
  2664  05DD  0BC7               	decfsz	??_writeFrequency^(0+128),f
  2665  05DE  2DDC               	goto	u3667
  2666  05DF  2DE0               	nop2
  2667                           
  2668                           ;bh1514.c: 39:     PORTCbits.RC5 = 0;
  2669  05E0  1283               	bcf	3,5	;RP0=0, select bank0
  2670  05E1  1303               	bcf	3,6	;RP1=0, select bank0
  2671  05E2  1287               	bcf	7,5	;volatile
  2672                           
  2673                           ;bh1514.c: 41:     beep(20);
  2674  05E3  3014               	movlw	20
  2675  05E4  1683               	bsf	3,5	;RP0=1, select bank1
  2676  05E5  1303               	bcf	3,6	;RP1=0, select bank1
  2677  05E6  00C3               	movwf	beep@ms^(0+128)
  2678  05E7  3000               	movlw	0
  2679  05E8  00C4               	movwf	(beep@ms^(0+128)+1)
  2680  05E9  120A  158A  23FF  120A  118A  	fcall	_beep
  2681                           
  2682                           ;bh1514.c: 42:     _delay((unsigned long)((500)*(4000000/4000.0)));
  2683  05EE  3003               	movlw	3
  2684  05EF  1683               	bsf	3,5	;RP0=1, select bank1
  2685  05F0  1303               	bcf	3,6	;RP1=0, select bank1
  2686  05F1  00C9               	movwf	(??_writeFrequency^(0+128)+2)
  2687  05F2  308A               	movlw	138
  2688  05F3  00C8               	movwf	(??_writeFrequency^(0+128)+1)
  2689  05F4  3055               	movlw	85
  2690  05F5  00C7               	movwf	??_writeFrequency^(0+128)
  2691  05F6                     u3677:	
  2692  05F6  0BC7               	decfsz	??_writeFrequency^(0+128),f
  2693  05F7  2DF6               	goto	u3677
  2694  05F8  0BC8               	decfsz	(??_writeFrequency^(0+128)+1),f
  2695  05F9  2DF6               	goto	u3677
  2696  05FA  0BC9               	decfsz	(??_writeFrequency^(0+128)+2),f
  2697  05FB  2DF6               	goto	u3677
  2698                           
  2699                           ;bh1514.c: 43:     beep(20);
  2700  05FC  3014               	movlw	20
  2701  05FD  1683               	bsf	3,5	;RP0=1, select bank1
  2702  05FE  1303               	bcf	3,6	;RP1=0, select bank1
  2703  05FF  00C3               	movwf	beep@ms^(0+128)
  2704  0600  3000               	movlw	0
  2705  0601  00C4               	movwf	(beep@ms^(0+128)+1)
  2706  0602  120A  158A  23FF  120A  118A  	fcall	_beep
  2707                           
  2708                           ;bh1514.c: 44:     _delay((unsigned long)((500)*(4000000/4000.0)));
  2709  0607  3003               	movlw	3
  2710  0608  1683               	bsf	3,5	;RP0=1, select bank1
  2711  0609  1303               	bcf	3,6	;RP1=0, select bank1
  2712  060A  00C9               	movwf	(??_writeFrequency^(0+128)+2)
  2713  060B  308A               	movlw	138
  2714  060C  00C8               	movwf	(??_writeFrequency^(0+128)+1)
  2715  060D  3055               	movlw	85
  2716  060E  00C7               	movwf	??_writeFrequency^(0+128)
  2717  060F                     u3687:	
  2718  060F  0BC7               	decfsz	??_writeFrequency^(0+128),f
  2719  0610  2E0F               	goto	u3687
  2720  0611  0BC8               	decfsz	(??_writeFrequency^(0+128)+1),f
  2721  0612  2E0F               	goto	u3687
  2722  0613  0BC9               	decfsz	(??_writeFrequency^(0+128)+2),f
  2723  0614  2E0F               	goto	u3687
  2724                           
  2725                           ;bh1514.c: 45:     for(i = 0; i < 40; i++){
  2726  0615  1683               	bsf	3,5	;RP0=1, select bank1
  2727  0616  1303               	bcf	3,6	;RP1=0, select bank1
  2728  0617  01A0               	clrf	_i^(0+128)
  2729  0618                     l3798:	
  2730  0618  3028               	movlw	40
  2731  0619  0220               	subwf	_i^(0+128),w
  2732  061A  1803               	btfsc	3,0
  2733  061B  2E2D               	goto	l545
  2734                           
  2735                           ;bh1514.c: 46:         _delay((unsigned long)((100)*(4000000/4000.0)));
  2736  061C  3082               	movlw	130
  2737  061D  1683               	bsf	3,5	;RP0=1, select bank1
  2738  061E  1303               	bcf	3,6	;RP1=0, select bank1
  2739  061F  00C8               	movwf	(??_writeFrequency^(0+128)+1)
  2740  0620  30DD               	movlw	221
  2741  0621  00C7               	movwf	??_writeFrequency^(0+128)
  2742  0622                     u3697:	
  2743  0622  0BC7               	decfsz	??_writeFrequency^(0+128),f
  2744  0623  2E22               	goto	u3697
  2745  0624  0BC8               	decfsz	(??_writeFrequency^(0+128)+1),f
  2746  0625  2E22               	goto	u3697
  2747                           
  2748                           ;bh1514.c: 47:     }
  2749  0626  3001               	movlw	1
  2750  0627  1683               	bsf	3,5	;RP0=1, select bank1
  2751  0628  1303               	bcf	3,6	;RP1=0, select bank1
  2752  0629  00C7               	movwf	??_writeFrequency^(0+128)
  2753  062A  0847               	movf	??_writeFrequency^(0+128),w
  2754  062B  07A0               	addwf	_i^(0+128),f
  2755  062C  2E18               	goto	l3798
  2756  062D                     l545:	
  2757                           
  2758                           ;bh1514.c: 49:     PORTCbits.RC4 = 0;
  2759  062D  1283               	bcf	3,5	;RP0=0, select bank0
  2760  062E  1303               	bcf	3,6	;RP1=0, select bank0
  2761  062F  1207               	bcf	7,4	;volatile
  2762                           
  2763                           ;bh1514.c: 50:     PORTCbits.RC0 = 1;
  2764  0630  1407               	bsf	7,0	;volatile
  2765                           
  2766                           ;bh1514.c: 52:     return;
  2767  0631  0008               	return
  2768  0632                     __end_of_writeFrequency:	
  2769                           
  2770                           	psect	text4
  2771  08D6                     __ptext4:	
  2772 ;; *************** function _codFreq *****************
  2773 ;; Defined at:
  2774 ;;		line 6 in file "bh1514.c"
  2775 ;; Parameters:    Size  Location     Type
  2776 ;;  f               2   29[BANK0 ] unsigned int 
  2777 ;; Auto vars:     Size  Location     Type
  2778 ;;  fr              2   31[BANK0 ] unsigned int 
  2779 ;; Return value:  Size  Location     Type
  2780 ;;                  2   29[BANK0 ] unsigned int 
  2781 ;; Registers used:
  2782 ;;		wreg
  2783 ;; Tracked objects:
  2784 ;;		On entry : 0/0
  2785 ;;		On exit  : 0/0
  2786 ;;		Unchanged: 0/0
  2787 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2788 ;;      Params:         0       2       0       0       0
  2789 ;;      Locals:         0       2       0       0       0
  2790 ;;      Temps:          0       0       0       0       0
  2791 ;;      Totals:         0       4       0       0       0
  2792 ;;Total ram usage:        4 bytes
  2793 ;; Hardware stack levels used:    1
  2794 ;; Hardware stack levels required when called:    5
  2795 ;; This function calls:
  2796 ;;		Nothing
  2797 ;; This function is called by:
  2798 ;;		_writeFrequency
  2799 ;; This function uses a non-reentrant model
  2800 ;;
  2801                           
  2802                           
  2803                           ;psect for function _codFreq
  2804  08D6                     _codFreq:	
  2805                           
  2806                           ;bh1514.c: 7:     unsigned int fr;;bh1514.c: 8:         fr = f | 0b0100100000000000;
  2807                           
  2808                           ;incstack = 0
  2809                           ; Regs used in _codFreq: [wreg]
  2810  08D6  3000               	movlw	0
  2811  08D7  1283               	bcf	3,5	;RP0=0, select bank0
  2812  08D8  1303               	bcf	3,6	;RP1=0, select bank0
  2813  08D9  043D               	iorwf	codFreq@f,w
  2814  08DA  00BF               	movwf	codFreq@fr
  2815  08DB  3048               	movlw	72
  2816  08DC  043E               	iorwf	codFreq@f+1,w
  2817  08DD  00C0               	movwf	codFreq@fr+1
  2818                           
  2819                           ;bh1514.c: 9:     return fr;
  2820  08DE  0840               	movf	codFreq@fr+1,w
  2821  08DF  00BE               	movwf	?_codFreq+1
  2822  08E0  083F               	movf	codFreq@fr,w
  2823  08E1  00BD               	movwf	?_codFreq
  2824  08E2  0008               	return
  2825  08E3                     __end_of_codFreq:	
  2826                           
  2827                           	psect	text5
  2828  0BFF                     __ptext5:	
  2829 ;; *************** function _beep *****************
  2830 ;; Defined at:
  2831 ;;		line 168 in file "main.c"
  2832 ;; Parameters:    Size  Location     Type
  2833 ;;  ms              2    0[BANK1 ] int 
  2834 ;; Auto vars:     Size  Location     Type
  2835 ;;		None
  2836 ;; Return value:  Size  Location     Type
  2837 ;;                  1    wreg      void 
  2838 ;; Registers used:
  2839 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  2840 ;; Tracked objects:
  2841 ;;		On entry : 0/0
  2842 ;;		On exit  : 0/0
  2843 ;;		Unchanged: 0/0
  2844 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2845 ;;      Params:         0       0       2       0       0
  2846 ;;      Locals:         0       0       0       0       0
  2847 ;;      Temps:          0       1       0       0       0
  2848 ;;      Totals:         0       1       2       0       0
  2849 ;;Total ram usage:        3 bytes
  2850 ;; Hardware stack levels used:    1
  2851 ;; Hardware stack levels required when called:    6
  2852 ;; This function calls:
  2853 ;;		___wmul
  2854 ;; This function is called by:
  2855 ;;		_main
  2856 ;;		_start
  2857 ;;		_setFrequency
  2858 ;;		_writeFrequency
  2859 ;; This function uses a non-reentrant model
  2860 ;;
  2861                           
  2862                           
  2863                           ;psect for function _beep
  2864  0BFF                     _beep:	
  2865                           
  2866                           ;main.c: 169:     ms *= 5;
  2867                           
  2868                           ;incstack = 0
  2869                           ; Regs used in _beep: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  2870  0BFF  3005               	movlw	5
  2871  0C00  1283               	bcf	3,5	;RP0=0, select bank0
  2872  0C01  1303               	bcf	3,6	;RP1=0, select bank0
  2873  0C02  00BD               	movwf	___wmul@multiplier
  2874  0C03  3000               	movlw	0
  2875  0C04  00BE               	movwf	___wmul@multiplier+1
  2876  0C05  1683               	bsf	3,5	;RP0=1, select bank1
  2877  0C06  1303               	bcf	3,6	;RP1=0, select bank1
  2878  0C07  0844               	movf	(beep@ms+1)^(0+128),w
  2879  0C08  1283               	bcf	3,5	;RP0=0, select bank0
  2880  0C09  1303               	bcf	3,6	;RP1=0, select bank0
  2881  0C0A  00C0               	movwf	___wmul@multiplicand+1
  2882  0C0B  1683               	bsf	3,5	;RP0=1, select bank1
  2883  0C0C  1303               	bcf	3,6	;RP1=0, select bank1
  2884  0C0D  0843               	movf	beep@ms^(0+128),w
  2885  0C0E  1283               	bcf	3,5	;RP0=0, select bank0
  2886  0C0F  1303               	bcf	3,6	;RP1=0, select bank0
  2887  0C10  00BF               	movwf	___wmul@multiplicand
  2888  0C11  120A  158A  21C8  120A  158A  	fcall	___wmul
  2889  0C16  1283               	bcf	3,5	;RP0=0, select bank0
  2890  0C17  1303               	bcf	3,6	;RP1=0, select bank0
  2891  0C18  083E               	movf	?___wmul+1,w
  2892  0C19  1683               	bsf	3,5	;RP0=1, select bank1
  2893  0C1A  1303               	bcf	3,6	;RP1=0, select bank1
  2894  0C1B  00C4               	movwf	(beep@ms+1)^(0+128)
  2895  0C1C  1283               	bcf	3,5	;RP0=0, select bank0
  2896  0C1D  1303               	bcf	3,6	;RP1=0, select bank0
  2897  0C1E  083D               	movf	?___wmul,w
  2898  0C1F  1683               	bsf	3,5	;RP0=1, select bank1
  2899  0C20  1303               	bcf	3,6	;RP1=0, select bank1
  2900  0C21  00C3               	movwf	beep@ms^(0+128)
  2901  0C22                     l3632:	
  2902  0C22  0844               	movf	(beep@ms+1)^(0+128),w
  2903  0C23  3A80               	xorlw	128
  2904  0C24  00FF               	movwf	127
  2905  0C25  3080               	movlw	128
  2906  0C26  027F               	subwf	127,w
  2907  0C27  1D03               	skipz
  2908  0C28  2C2B               	goto	u3025
  2909  0C29  3001               	movlw	1
  2910  0C2A  0243               	subwf	beep@ms^(0+128),w
  2911  0C2B                     u3025:	
  2912  0C2B  1C03               	btfss	3,0
  2913  0C2C  0008               	return
  2914                           
  2915                           ;main.c: 171:         PORTBbits.RB0 = 1;
  2916  0C2D  1283               	bcf	3,5	;RP0=0, select bank0
  2917  0C2E  1303               	bcf	3,6	;RP1=0, select bank0
  2918  0C2F  1406               	bsf	6,0	;volatile
  2919                           
  2920                           ;main.c: 172:         _delay((unsigned long)((100)*(4000000/4000000.0)));
  2921  0C30  3020               	movlw	32
  2922  0C31  1283               	bcf	3,5	;RP0=0, select bank0
  2923  0C32  1303               	bcf	3,6	;RP1=0, select bank0
  2924  0C33  00C3               	movwf	??_beep
  2925  0C34                     u3707:	
  2926  0C34  0BC3               	decfsz	??_beep,f
  2927  0C35  2C34               	goto	u3707
  2928  0C36  0000               	nop
  2929                           
  2930                           ;main.c: 173:         PORTBbits.RB0 = 0;
  2931  0C37  1283               	bcf	3,5	;RP0=0, select bank0
  2932  0C38  1303               	bcf	3,6	;RP1=0, select bank0
  2933  0C39  1006               	bcf	6,0	;volatile
  2934                           
  2935                           ;main.c: 174:         _delay((unsigned long)((100)*(4000000/4000000.0)));
  2936  0C3A  3020               	movlw	32
  2937  0C3B  1283               	bcf	3,5	;RP0=0, select bank0
  2938  0C3C  1303               	bcf	3,6	;RP1=0, select bank0
  2939  0C3D  00C3               	movwf	??_beep
  2940  0C3E                     u3717:	
  2941  0C3E  0BC3               	decfsz	??_beep,f
  2942  0C3F  2C3E               	goto	u3717
  2943  0C40  0000               	nop
  2944                           
  2945                           ;main.c: 175:     }
  2946  0C41  30FF               	movlw	255
  2947  0C42  1683               	bsf	3,5	;RP0=1, select bank1
  2948  0C43  1303               	bcf	3,6	;RP1=0, select bank1
  2949  0C44  07C3               	addwf	beep@ms^(0+128),f
  2950  0C45  1803               	skipnc
  2951  0C46  0AC4               	incf	(beep@ms+1)^(0+128),f
  2952  0C47  30FF               	movlw	255
  2953  0C48  07C4               	addwf	(beep@ms+1)^(0+128),f
  2954  0C49  2C22               	goto	l3632
  2955  0C4A                     __end_of_beep:	
  2956                           
  2957                           	psect	text6
  2958  0E9C                     __ptext6:	
  2959 ;; *************** function _setData *****************
  2960 ;; Defined at:
  2961 ;;		line 44 in file "eeprom.c"
  2962 ;; Parameters:    Size  Location     Type
  2963 ;;  full            1    wreg     unsigned char 
  2964 ;; Auto vars:     Size  Location     Type
  2965 ;;  full            1   34[BANK0 ] unsigned char 
  2966 ;;  data1           1   33[BANK0 ] unsigned char 
  2967 ;;  data0           1   32[BANK0 ] unsigned char 
  2968 ;; Return value:  Size  Location     Type
  2969 ;;                  1    wreg      void 
  2970 ;; Registers used:
  2971 ;;		wreg, status,2, status,0, pclath, cstack
  2972 ;; Tracked objects:
  2973 ;;		On entry : 0/0
  2974 ;;		On exit  : 0/0
  2975 ;;		Unchanged: 0/0
  2976 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2977 ;;      Params:         0       0       0       0       0
  2978 ;;      Locals:         0       3       0       0       0
  2979 ;;      Temps:          0       1       0       0       0
  2980 ;;      Totals:         0       4       0       0       0
  2981 ;;Total ram usage:        4 bytes
  2982 ;; Hardware stack levels used:    1
  2983 ;; Hardware stack levels required when called:    6
  2984 ;; This function calls:
  2985 ;;		_writeEEPROM
  2986 ;; This function is called by:
  2987 ;;		_setFrequency
  2988 ;; This function uses a non-reentrant model
  2989 ;;
  2990                           
  2991                           
  2992                           ;psect for function _setData
  2993  0E9C                     _setData:	
  2994                           
  2995                           ;incstack = 0
  2996                           ; Regs used in _setData: [wreg+status,2+status,0+pclath+cstack]
  2997                           ;setData@full stored from wreg
  2998  0E9C  1283               	bcf	3,5	;RP0=0, select bank0
  2999  0E9D  1303               	bcf	3,6	;RP1=0, select bank0
  3000  0E9E  00C2               	movwf	setData@full
  3001                           
  3002                           ;eeprom.c: 45:     unsigned char data0 = frequency & 0x00FF;
  3003  0E9F  0844               	movf	_frequency,w
  3004  0EA0  00BF               	movwf	??_setData
  3005  0EA1  083F               	movf	??_setData,w
  3006  0EA2  00C0               	movwf	setData@data0
  3007                           
  3008                           ;eeprom.c: 46:     unsigned char data1 = frequency >> 8;
  3009  0EA3  0845               	movf	_frequency+1,w
  3010  0EA4  00BF               	movwf	??_setData
  3011  0EA5  083F               	movf	??_setData,w
  3012  0EA6  00C1               	movwf	setData@data1
  3013                           
  3014                           ;eeprom.c: 47:     if(full)writeEEPROM(data0 ,0);
  3015  0EA7  0842               	movf	setData@full,w
  3016  0EA8  1903               	btfsc	3,2
  3017  0EA9  2EB1               	goto	l2860
  3018  0EAA  01BD               	clrf	writeEEPROM@address
  3019  0EAB  0840               	movf	setData@data0,w
  3020  0EAC  120A  158A  2167  120A  158A  	fcall	_writeEEPROM
  3021  0EB1                     l2860:	
  3022                           
  3023                           ;eeprom.c: 48:     if(full)writeEEPROM(data1 ,1);
  3024  0EB1  1283               	bcf	3,5	;RP0=0, select bank0
  3025  0EB2  1303               	bcf	3,6	;RP1=0, select bank0
  3026  0EB3  0842               	movf	setData@full,w
  3027  0EB4  1903               	btfsc	3,2
  3028  0EB5  2EBE               	goto	l70
  3029  0EB6  01BD               	clrf	writeEEPROM@address
  3030  0EB7  0ABD               	incf	writeEEPROM@address,f
  3031  0EB8  0841               	movf	setData@data1,w
  3032  0EB9  120A  158A  2167  120A  158A  	fcall	_writeEEPROM
  3033  0EBE                     l70:	
  3034                           
  3035                           ;eeprom.c: 49:     writeEEPROM(months ,2);
  3036  0EBE  3002               	movlw	2
  3037  0EBF  1283               	bcf	3,5	;RP0=0, select bank0
  3038  0EC0  1303               	bcf	3,6	;RP1=0, select bank0
  3039  0EC1  00BF               	movwf	??_setData
  3040  0EC2  083F               	movf	??_setData,w
  3041  0EC3  00BD               	movwf	writeEEPROM@address
  3042  0EC4  0850               	movf	_months,w
  3043  0EC5  120A  158A  2167  120A  158A  	fcall	_writeEEPROM
  3044                           
  3045                           ;eeprom.c: 50:     writeEEPROM(days ,3);
  3046  0ECA  3003               	movlw	3
  3047  0ECB  1283               	bcf	3,5	;RP0=0, select bank0
  3048  0ECC  1303               	bcf	3,6	;RP1=0, select bank0
  3049  0ECD  00BF               	movwf	??_setData
  3050  0ECE  083F               	movf	??_setData,w
  3051  0ECF  00BD               	movwf	writeEEPROM@address
  3052  0ED0  084F               	movf	_days,w
  3053  0ED1  120A  158A  2167  120A  158A  	fcall	_writeEEPROM
  3054                           
  3055                           ;eeprom.c: 51:     writeEEPROM(hours ,4);
  3056  0ED6  3004               	movlw	4
  3057  0ED7  1283               	bcf	3,5	;RP0=0, select bank0
  3058  0ED8  1303               	bcf	3,6	;RP1=0, select bank0
  3059  0ED9  00BF               	movwf	??_setData
  3060  0EDA  083F               	movf	??_setData,w
  3061  0EDB  00BD               	movwf	writeEEPROM@address
  3062  0EDC  084E               	movf	_hours,w
  3063  0EDD  120A  158A  2167  120A  158A  	fcall	_writeEEPROM
  3064                           
  3065                           ;eeprom.c: 52:     if(full)writeEEPROM(minutes ,5);
  3066  0EE2  1283               	bcf	3,5	;RP0=0, select bank0
  3067  0EE3  1303               	bcf	3,6	;RP1=0, select bank0
  3068  0EE4  0842               	movf	setData@full,w
  3069  0EE5  1903               	btfsc	3,2
  3070  0EE6  2EF1               	goto	l71
  3071  0EE7  3005               	movlw	5
  3072  0EE8  00BF               	movwf	??_setData
  3073  0EE9  083F               	movf	??_setData,w
  3074  0EEA  00BD               	movwf	writeEEPROM@address
  3075  0EEB  084D               	movf	_minutes,w
  3076  0EEC  120A  158A  2167  120A  158A  	fcall	_writeEEPROM
  3077  0EF1                     l71:	
  3078                           
  3079                           ;eeprom.c: 53:     writeEEPROM(functionalStat ,6);
  3080  0EF1  3006               	movlw	6
  3081  0EF2  1283               	bcf	3,5	;RP0=0, select bank0
  3082  0EF3  1303               	bcf	3,6	;RP1=0, select bank0
  3083  0EF4  00BF               	movwf	??_setData
  3084  0EF5  083F               	movf	??_setData,w
  3085  0EF6  00BD               	movwf	writeEEPROM@address
  3086  0EF7  0848               	movf	_functionalStat,w
  3087  0EF8  120A  158A  2167   	fcall	_writeEEPROM
  3088  0EFB  0008               	return
  3089  0EFC                     __end_of_setData:	
  3090                           
  3091                           	psect	text7
  3092  0967                     __ptext7:	
  3093 ;; *************** function _writeEEPROM *****************
  3094 ;; Defined at:
  3095 ;;		line 14 in file "eeprom.c"
  3096 ;; Parameters:    Size  Location     Type
  3097 ;;  data            1    wreg     unsigned char 
  3098 ;;  address         1   29[BANK0 ] unsigned char 
  3099 ;; Auto vars:     Size  Location     Type
  3100 ;;  data            1   30[BANK0 ] unsigned char 
  3101 ;; Return value:  Size  Location     Type
  3102 ;;                  1    wreg      void 
  3103 ;; Registers used:
  3104 ;;		wreg
  3105 ;; Tracked objects:
  3106 ;;		On entry : 0/0
  3107 ;;		On exit  : 0/0
  3108 ;;		Unchanged: 0/0
  3109 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3110 ;;      Params:         0       1       0       0       0
  3111 ;;      Locals:         0       1       0       0       0
  3112 ;;      Temps:          0       0       0       0       0
  3113 ;;      Totals:         0       2       0       0       0
  3114 ;;Total ram usage:        2 bytes
  3115 ;; Hardware stack levels used:    1
  3116 ;; Hardware stack levels required when called:    5
  3117 ;; This function calls:
  3118 ;;		Nothing
  3119 ;; This function is called by:
  3120 ;;		_setData
  3121 ;; This function uses a non-reentrant model
  3122 ;;
  3123                           
  3124                           
  3125                           ;psect for function _writeEEPROM
  3126  0967                     _writeEEPROM:	
  3127                           
  3128                           ;incstack = 0
  3129                           ; Regs used in _writeEEPROM: [wreg]
  3130                           ;writeEEPROM@data stored from wreg
  3131  0967  1283               	bcf	3,5	;RP0=0, select bank0
  3132  0968  1303               	bcf	3,6	;RP1=0, select bank0
  3133  0969  00BE               	movwf	writeEEPROM@data
  3134                           
  3135                           ;eeprom.c: 15:     EEADR = address;
  3136  096A  083D               	movf	writeEEPROM@address,w
  3137  096B  1283               	bcf	3,5	;RP0=0, select bank2
  3138  096C  1703               	bsf	3,6	;RP1=1, select bank2
  3139  096D  008D               	movwf	13	;volatile
  3140                           
  3141                           ;eeprom.c: 16:     EEDATA = data;
  3142  096E  1283               	bcf	3,5	;RP0=0, select bank0
  3143  096F  1303               	bcf	3,6	;RP1=0, select bank0
  3144  0970  083E               	movf	writeEEPROM@data,w
  3145  0971  1283               	bcf	3,5	;RP0=0, select bank2
  3146  0972  1703               	bsf	3,6	;RP1=1, select bank2
  3147  0973  008C               	movwf	12	;volatile
  3148                           
  3149                           ;eeprom.c: 18:     EECON1bits.EEPGD = 0;
  3150  0974  1683               	bsf	3,5	;RP0=1, select bank3
  3151  0975  1703               	bsf	3,6	;RP1=1, select bank3
  3152  0976  138C               	bcf	12,7	;volsfr
  3153                           
  3154                           ;eeprom.c: 19:     EECON1bits.WREN = 1;
  3155  0977  150C               	bsf	12,2	;volsfr
  3156                           
  3157                           ;eeprom.c: 21:     INTCONbits.GIE = 0;
  3158  0978  138B               	bcf	11,7	;volatile
  3159                           
  3160                           ;eeprom.c: 22:     EECON2 = 0x55;
  3161  0979  3055               	movlw	85
  3162  097A  008D               	movwf	13	;volsfr
  3163                           
  3164                           ;eeprom.c: 23:     EECON2 = 0xAA;
  3165  097B  30AA               	movlw	170
  3166  097C  008D               	movwf	13	;volsfr
  3167                           
  3168                           ;eeprom.c: 24:     EECON1bits.WR = 1;
  3169  097D  148C               	bsf	12,1	;volsfr
  3170                           
  3171                           ;eeprom.c: 25:     INTCONbits.GIE = 1;
  3172  097E  178B               	bsf	11,7	;volatile
  3173  097F                     l60:	
  3174                           ;eeprom.c: 27:     while(PIR2bits.EEIF == 0) continue;
  3175                           
  3176  097F  1283               	bcf	3,5	;RP0=0, select bank0
  3177  0980  1303               	bcf	3,6	;RP1=0, select bank0
  3178  0981  1A0D               	btfsc	13,4	;volatile
  3179  0982  0008               	return
  3180  0983  297F               	goto	l60
  3181  0984                     __end_of_writeEEPROM:	
  3182                           
  3183                           	psect	text8
  3184  0A8F                     __ptext8:	
  3185 ;; *************** function _lockingScreen *****************
  3186 ;; Defined at:
  3187 ;;		line 250 in file "main.c"
  3188 ;; Parameters:    Size  Location     Type
  3189 ;;		None
  3190 ;; Auto vars:     Size  Location     Type
  3191 ;;		None
  3192 ;; Return value:  Size  Location     Type
  3193 ;;                  1    wreg      void 
  3194 ;; Registers used:
  3195 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3196 ;; Tracked objects:
  3197 ;;		On entry : 0/0
  3198 ;;		On exit  : 0/0
  3199 ;;		Unchanged: 0/0
  3200 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3201 ;;      Params:         0       0       0       0       0
  3202 ;;      Locals:         0       0       0       0       0
  3203 ;;      Temps:          0       0       1       0       0
  3204 ;;      Totals:         0       0       1       0       0
  3205 ;;Total ram usage:        1 bytes
  3206 ;; Hardware stack levels used:    1
  3207 ;; Hardware stack levels required when called:    8
  3208 ;; This function calls:
  3209 ;;		_SetDDRamAddr
  3210 ;;		_putsXLCD
  3211 ;;		_sprintf
  3212 ;; This function is called by:
  3213 ;;		_main
  3214 ;;		_setFrequency
  3215 ;; This function uses a non-reentrant model
  3216 ;;
  3217                           
  3218                           
  3219                           ;psect for function _lockingScreen
  3220  0A8F                     _lockingScreen:	
  3221                           
  3222                           ;main.c: 252:     sprintf(lineOne,"LOCKING         ");
  3223                           
  3224                           ;incstack = 0
  3225 ;; hardware stack exceeded
  3226                           ; Regs used in _lockingScreen: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3227  0A8F  3021               	movlw	(low ((STR_10-__stringbase)| (0+32768)))& (0+255)
  3228  0A90  1683               	bsf	3,5	;RP0=1, select bank1
  3229  0A91  1303               	bcf	3,6	;RP1=0, select bank1
  3230  0A92  00DB               	movwf	??_lockingScreen^(0+128)
  3231  0A93  085B               	movf	??_lockingScreen^(0+128),w
  3232  0A94  00CA               	movwf	sprintf@f^(0+128)
  3233  0A95  30B2               	movlw	(low (_lineOne| 0))& (0+255)
  3234  0A96  120A  118A  2035  120A  158A  	fcall	_sprintf
  3235                           
  3236                           ;main.c: 253:     sprintf(lineTwo,"       FREQUENCY");
  3237  0A9B  3087               	movlw	(low ((STR_11-__stringbase)| (0+32768)))& (0+255)
  3238  0A9C  1683               	bsf	3,5	;RP0=1, select bank1
  3239  0A9D  1303               	bcf	3,6	;RP1=0, select bank1
  3240  0A9E  00DB               	movwf	??_lockingScreen^(0+128)
  3241  0A9F  085B               	movf	??_lockingScreen^(0+128),w
  3242  0AA0  00CA               	movwf	sprintf@f^(0+128)
  3243  0AA1  30A1               	movlw	(low (_lineTwo| 0))& (0+255)
  3244  0AA2  120A  118A  2035  120A  158A  	fcall	_sprintf
  3245                           
  3246                           ;main.c: 254:     SetDDRamAddr(0x00);
  3247  0AA7  3000               	movlw	0
  3248  0AA8  120A  118A  27AE  120A  158A  	fcall	_SetDDRamAddr
  3249                           
  3250                           ;main.c: 255:     putsXLCD(lineOne);
  3251  0AAD  30B2               	movlw	(low (_lineOne| 0))& (0+255)
  3252  0AAE  120A  158A  21A5  120A  158A  	fcall	_putsXLCD
  3253                           
  3254                           ;main.c: 256:     SetDDRamAddr(0x40);
  3255  0AB3  3040               	movlw	64
  3256  0AB4  120A  118A  27AE  120A  158A  	fcall	_SetDDRamAddr
  3257                           
  3258                           ;main.c: 257:     putsXLCD(lineTwo);
  3259  0AB9  30A1               	movlw	(low (_lineTwo| 0))& (0+255)
  3260  0ABA  120A  158A  21A5   	fcall	_putsXLCD
  3261  0ABD  0008               	return
  3262  0ABE                     __end_of_lockingScreen:	
  3263                           
  3264                           	psect	text9
  3265  0EFC                     __ptext9:	
  3266 ;; *************** function _principalScreen *****************
  3267 ;; Defined at:
  3268 ;;		line 240 in file "main.c"
  3269 ;; Parameters:    Size  Location     Type
  3270 ;;		None
  3271 ;; Auto vars:     Size  Location     Type
  3272 ;;  integ           1   30[BANK1 ] unsigned char 
  3273 ;;  decim           1   29[BANK1 ] unsigned char 
  3274 ;; Return value:  Size  Location     Type
  3275 ;;                  1    wreg      void 
  3276 ;; Registers used:
  3277 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3278 ;; Tracked objects:
  3279 ;;		On entry : 0/0
  3280 ;;		On exit  : 0/0
  3281 ;;		Unchanged: 0/0
  3282 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3283 ;;      Params:         0       0       0       0       0
  3284 ;;      Locals:         0       0       2       0       0
  3285 ;;      Temps:          0       0       5       0       0
  3286 ;;      Totals:         0       0       7       0       0
  3287 ;;Total ram usage:        7 bytes
  3288 ;; Hardware stack levels used:    1
  3289 ;; Hardware stack levels required when called:    8
  3290 ;; This function calls:
  3291 ;;		_SetDDRamAddr
  3292 ;;		___lwdiv
  3293 ;;		___lwmod
  3294 ;;		_putrsXLCD
  3295 ;;		_putsXLCD
  3296 ;;		_sprintf
  3297 ;; This function is called by:
  3298 ;;		_main
  3299 ;; This function uses a non-reentrant model
  3300 ;;
  3301                           
  3302                           
  3303                           ;psect for function _principalScreen
  3304  0EFC                     _principalScreen:	
  3305                           
  3306                           ;main.c: 241:     SetDDRamAddr(0x00);
  3307                           
  3308                           ;incstack = 0
  3309 ;; hardware stack exceeded
  3310                           ; Regs used in _principalScreen: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3311  0EFC  3000               	movlw	0
  3312  0EFD  120A  118A  27AE  120A  158A  	fcall	_SetDDRamAddr
  3313                           
  3314                           ;main.c: 242:     putrsXLCD("AMPRO      EX-FM");
  3315  0F02  3065               	movlw	(low ((STR_8-__stringbase)| (0+32768)))& (0+255)
  3316  0F03  120A  158A  2237  120A  158A  	fcall	_putrsXLCD
  3317                           
  3318                           ;main.c: 243:     unsigned char decim = frequency % 10;
  3319  0F08  300A               	movlw	10
  3320  0F09  1683               	bsf	3,5	;RP0=1, select bank1
  3321  0F0A  1303               	bcf	3,6	;RP1=0, select bank1
  3322  0F0B  00C6               	movwf	___lwmod@divisor^(0+128)
  3323  0F0C  3000               	movlw	0
  3324  0F0D  00C7               	movwf	(___lwmod@divisor^(0+128)+1)
  3325  0F0E  1283               	bcf	3,5	;RP0=0, select bank0
  3326  0F0F  1303               	bcf	3,6	;RP1=0, select bank0
  3327  0F10  0845               	movf	_frequency+1,w
  3328  0F11  1683               	bsf	3,5	;RP0=1, select bank1
  3329  0F12  1303               	bcf	3,6	;RP1=0, select bank1
  3330  0F13  00C9               	movwf	(___lwmod@dividend+1)^(0+128)
  3331  0F14  1283               	bcf	3,5	;RP0=0, select bank0
  3332  0F15  1303               	bcf	3,6	;RP1=0, select bank0
  3333  0F16  0844               	movf	_frequency,w
  3334  0F17  1683               	bsf	3,5	;RP0=1, select bank1
  3335  0F18  1303               	bcf	3,6	;RP1=0, select bank1
  3336  0F19  00C8               	movwf	___lwmod@dividend^(0+128)
  3337  0F1A  120A  158A  232C  120A  158A  	fcall	___lwmod
  3338  0F1F  1683               	bsf	3,5	;RP0=1, select bank1
  3339  0F20  1303               	bcf	3,6	;RP1=0, select bank1
  3340  0F21  0846               	movf	?___lwmod^(0+128),w
  3341  0F22  00DB               	movwf	??_principalScreen^(0+128)
  3342  0F23  085B               	movf	??_principalScreen^(0+128),w
  3343  0F24  00E0               	movwf	principalScreen@decim^(0+128)
  3344                           
  3345                           ;main.c: 244:     unsigned char integ = frequency / 10;
  3346  0F25  300A               	movlw	10
  3347  0F26  1283               	bcf	3,5	;RP0=0, select bank0
  3348  0F27  1303               	bcf	3,6	;RP1=0, select bank0
  3349  0F28  00BD               	movwf	___lwdiv@divisor
  3350  0F29  3000               	movlw	0
  3351  0F2A  00BE               	movwf	___lwdiv@divisor+1
  3352  0F2B  0845               	movf	_frequency+1,w
  3353  0F2C  00C0               	movwf	___lwdiv@dividend+1
  3354  0F2D  0844               	movf	_frequency,w
  3355  0F2E  00BF               	movwf	___lwdiv@dividend
  3356  0F2F  120A  158A  2530  120A  158A  	fcall	___lwdiv
  3357  0F34  1283               	bcf	3,5	;RP0=0, select bank0
  3358  0F35  1303               	bcf	3,6	;RP1=0, select bank0
  3359  0F36  083D               	movf	?___lwdiv,w
  3360  0F37  1683               	bsf	3,5	;RP0=1, select bank1
  3361  0F38  1303               	bcf	3,6	;RP1=0, select bank1
  3362  0F39  00DB               	movwf	??_principalScreen^(0+128)
  3363  0F3A  085B               	movf	??_principalScreen^(0+128),w
  3364  0F3B  00E1               	movwf	principalScreen@integ^(0+128)
  3365                           
  3366                           ;main.c: 245:     sprintf(lineTwo,"FREQ.  %3d.%d MHz",integ, decim);
  3367  0F3C  300F               	movlw	(low ((STR_9-__stringbase)| (0+32768)))& (0+255)
  3368  0F3D  00DB               	movwf	??_principalScreen^(0+128)
  3369  0F3E  085B               	movf	??_principalScreen^(0+128),w
  3370  0F3F  00CA               	movwf	sprintf@f^(0+128)
  3371  0F40  0861               	movf	principalScreen@integ^(0+128),w
  3372  0F41  00DC               	movwf	(??_principalScreen+1)^(0+128)
  3373  0F42  01DD               	clrf	((??_principalScreen+1)^(0+128)+1)
  3374  0F43  085C               	movf	(??_principalScreen+1)^(0+128),w
  3375  0F44  00CB               	movwf	(?_sprintf^(0+128)+1)
  3376  0F45  085D               	movf	(??_principalScreen+2)^(0+128),w
  3377  0F46  00CC               	movwf	((?_sprintf+1)^(0+128)+1)
  3378  0F47  0860               	movf	principalScreen@decim^(0+128),w
  3379  0F48  00DE               	movwf	(??_principalScreen+3)^(0+128)
  3380  0F49  01DF               	clrf	((??_principalScreen+3)^(0+128)+1)
  3381  0F4A  085E               	movf	(??_principalScreen+3)^(0+128),w
  3382  0F4B  00CD               	movwf	(?_sprintf^(0+128)+3)
  3383  0F4C  085F               	movf	(??_principalScreen+4)^(0+128),w
  3384  0F4D  00CE               	movwf	((?_sprintf+1)^(0+128)+3)
  3385  0F4E  30A1               	movlw	(low (_lineTwo| 0))& (0+255)
  3386  0F4F  120A  118A  2035  120A  158A  	fcall	_sprintf
  3387                           
  3388                           ;main.c: 246:     SetDDRamAddr(0x40);
  3389  0F54  3040               	movlw	64
  3390  0F55  120A  118A  27AE  120A  158A  	fcall	_SetDDRamAddr
  3391                           
  3392                           ;main.c: 247:     putsXLCD(lineTwo);
  3393  0F5A  30A1               	movlw	(low (_lineTwo| 0))& (0+255)
  3394  0F5B  120A  158A  21A5   	fcall	_putsXLCD
  3395  0F5E  0008               	return
  3396  0F5F                     __end_of_principalScreen:	
  3397                           
  3398                           	psect	text10
  3399  0035                     __ptext10:	
  3400 ;; *************** function _sprintf *****************
  3401 ;; Defined at:
  3402 ;;		line 500 in file "/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt.c"
  3403 ;; Parameters:    Size  Location     Type
  3404 ;;  sp              1    wreg     PTR unsigned char 
  3405 ;;		 -> lineTwo(17), lineOne(17), 
  3406 ;;  f               1    7[BANK1 ] PTR const unsigned char 
  3407 ;;		 -> STR_12(18), STR_11(17), STR_10(17), STR_9(18), 
  3408 ;;		 -> STR_7(17), STR_6(17), STR_5(17), STR_4(17), 
  3409 ;;		 -> STR_3(17), STR_2(17), STR_1(17), 
  3410 ;; Auto vars:     Size  Location     Type
  3411 ;;  sp              1   22[BANK1 ] PTR unsigned char 
  3412 ;;		 -> lineTwo(17), lineOne(17), 
  3413 ;;  tmpval          4    0        struct .
  3414 ;;  width           2   20[BANK1 ] int 
  3415 ;;  val             2   18[BANK1 ] unsigned int 
  3416 ;;  cp              2    0        PTR const unsigned char 
  3417 ;;  len             2    0        unsigned int 
  3418 ;;  c               1   23[BANK1 ] unsigned char 
  3419 ;;  flag            1   17[BANK1 ] unsigned char 
  3420 ;;  prec            1   16[BANK1 ] char 
  3421 ;;  ap              1   15[BANK1 ] PTR void [1]
  3422 ;;		 -> ?_sprintf(2), 
  3423 ;; Return value:  Size  Location     Type
  3424 ;;                  2    7[BANK1 ] int 
  3425 ;; Registers used:
  3426 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3427 ;; Tracked objects:
  3428 ;;		On entry : 0/0
  3429 ;;		On exit  : 0/0
  3430 ;;		Unchanged: 0/0
  3431 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3432 ;;      Params:         0       0       5       0       0
  3433 ;;      Locals:         0       0       9       0       0
  3434 ;;      Temps:          0       0       3       0       0
  3435 ;;      Totals:         0       0      17       0       0
  3436 ;;Total ram usage:       17 bytes
  3437 ;; Hardware stack levels used:    1
  3438 ;; Hardware stack levels required when called:    6
  3439 ;; This function calls:
  3440 ;;		___lwdiv
  3441 ;;		___lwmod
  3442 ;;		___wmul
  3443 ;;		_isdigit
  3444 ;; This function is called by:
  3445 ;;		_start
  3446 ;;		_setFrequency
  3447 ;;		_principalScreen
  3448 ;;		_lockingScreen
  3449 ;; This function uses a non-reentrant model
  3450 ;;
  3451                           
  3452                           
  3453                           ;psect for function _sprintf
  3454  0035                     _sprintf:	
  3455                           
  3456                           ;incstack = 0
  3457 ;; using string table level
  3458                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3459                           ;sprintf@sp stored from wreg
  3460  0035  1683               	bsf	3,5	;RP0=1, select bank1
  3461  0036  1303               	bcf	3,6	;RP1=0, select bank1
  3462  0037  00D9               	movwf	sprintf@sp^(0+128)
  3463                           
  3464                           ;/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt.c: 500: sprintf(char * sp, const
      +                           char * f, ...);/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt.c: 501: {;/opt/mi
      +                          crochip/xc8/v2.05/pic/sources/c90/common/doprnt.c: 502:  va_list ap;;/opt/microchip/xc8/
      +                          v2.05/pic/sources/c90/common/doprnt.c: 507:  char c;;/opt/microchip/xc8/v2.05/pic/source
      +                          s/c90/common/doprnt.c: 509:  int width;;/opt/microchip/xc8/v2.05/pic/sources/c90/common/
      +                          doprnt.c: 516:  signed char prec;;/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt
      +                          .c: 520:  unsigned char flag;
  3465  0038  30CB               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  3466  0039  00CF               	movwf	??_sprintf^(0+128)
  3467  003A  084F               	movf	??_sprintf^(0+128),w
  3468  003B  00D2               	movwf	sprintf@ap^(0+128)
  3469  003C                     l3724:	
  3470                           ;/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt.c: 548:  while((c = *f++)) {
  3471                           
  3472                           
  3473                           ;/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt.c: 548:  while((c = *f++)) {
  3474  003C  3001               	movlw	1
  3475  003D  07CA               	addwf	sprintf@f^(0+128),f
  3476  003E  30FF               	movlw	-1
  3477  003F  074A               	addwf	sprintf@f^(0+128),w
  3478  0040  0084               	movwf	4
  3479  0041  120A  118A  2700  120A  118A  	fcall	stringdir
  3480  0046  00CF               	movwf	??_sprintf^(0+128)
  3481  0047  084F               	movf	??_sprintf^(0+128),w
  3482  0048  00DA               	movwf	sprintf@c^(0+128)
  3483  0049  085A               	movf	sprintf@c^(0+128),w
  3484  004A  1903               	btfsc	3,2
  3485  004B  29B8               	goto	l3726
  3486                           
  3487                           ;/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt.c: 550:   if(c != '%')
  3488  004C  3025               	movlw	37
  3489  004D  065A               	xorwf	sprintf@c^(0+128),w
  3490  004E  1903               	btfsc	3,2
  3491  004F  285C               	goto	l3650
  3492                           
  3493                           ;/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt.c: 552:   {;/opt/microchip/xc8/v
      +                          2.05/pic/sources/c90/common/doprnt.c: 553:    ((*sp++ = (c)));
  3494  0050  085A               	movf	sprintf@c^(0+128),w
  3495  0051  00CF               	movwf	??_sprintf^(0+128)
  3496  0052  0859               	movf	sprintf@sp^(0+128),w
  3497  0053  0084               	movwf	4
  3498  0054  084F               	movf	??_sprintf^(0+128),w
  3499  0055  1383               	bcf	3,7	;select IRP bank0
  3500  0056  0080               	movwf	0
  3501  0057  3001               	movlw	1
  3502  0058  00CF               	movwf	??_sprintf^(0+128)
  3503  0059  084F               	movf	??_sprintf^(0+128),w
  3504  005A  07D9               	addwf	sprintf@sp^(0+128),f
  3505                           
  3506                           ;/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt.c: 554:    continue;
  3507  005B  283C               	goto	l3724
  3508  005C                     l3650:	
  3509                           
  3510                           ;/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt.c: 558:   width = 0;
  3511  005C  01D7               	clrf	sprintf@width^(0+128)
  3512  005D  01D8               	clrf	(sprintf@width+1)^(0+128)
  3513                           
  3514                           ;/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt.c: 560:   flag = 0;
  3515  005E  01D4               	clrf	sprintf@flag^(0+128)
  3516                           
  3517                           ;/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt.c: 609:   if(isdigit((unsigned)*
      +                          f)) {
  3518  005F  084A               	movf	sprintf@f^(0+128),w
  3519  0060  0084               	movwf	4
  3520  0061  120A  118A  2700  120A  118A  	fcall	stringdir
  3521  0066  120A  158A  2100  120A  118A  	fcall	_isdigit
  3522  006B  1C03               	btfss	3,0
  3523  006C  28B9               	goto	l3666
  3524                           
  3525                           ;/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt.c: 610:    width = 0;
  3526  006D  1683               	bsf	3,5	;RP0=1, select bank1
  3527  006E  1303               	bcf	3,6	;RP1=0, select bank1
  3528  006F  01D7               	clrf	sprintf@width^(0+128)
  3529  0070  01D8               	clrf	(sprintf@width+1)^(0+128)
  3530  0071                     l3656:	
  3531                           
  3532                           ;/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt.c: 612:     width *= 10;
  3533  0071  300A               	movlw	10
  3534  0072  1283               	bcf	3,5	;RP0=0, select bank0
  3535  0073  1303               	bcf	3,6	;RP1=0, select bank0
  3536  0074  00BD               	movwf	___wmul@multiplier
  3537  0075  3000               	movlw	0
  3538  0076  00BE               	movwf	___wmul@multiplier+1
  3539  0077  1683               	bsf	3,5	;RP0=1, select bank1
  3540  0078  1303               	bcf	3,6	;RP1=0, select bank1
  3541  0079  0858               	movf	(sprintf@width+1)^(0+128),w
  3542  007A  1283               	bcf	3,5	;RP0=0, select bank0
  3543  007B  1303               	bcf	3,6	;RP1=0, select bank0
  3544  007C  00C0               	movwf	___wmul@multiplicand+1
  3545  007D  1683               	bsf	3,5	;RP0=1, select bank1
  3546  007E  1303               	bcf	3,6	;RP1=0, select bank1
  3547  007F  0857               	movf	sprintf@width^(0+128),w
  3548  0080  1283               	bcf	3,5	;RP0=0, select bank0
  3549  0081  1303               	bcf	3,6	;RP1=0, select bank0
  3550  0082  00BF               	movwf	___wmul@multiplicand
  3551  0083  120A  158A  21C8  120A  118A  	fcall	___wmul
  3552  0088  1283               	bcf	3,5	;RP0=0, select bank0
  3553  0089  1303               	bcf	3,6	;RP1=0, select bank0
  3554  008A  083E               	movf	?___wmul+1,w
  3555  008B  1683               	bsf	3,5	;RP0=1, select bank1
  3556  008C  1303               	bcf	3,6	;RP1=0, select bank1
  3557  008D  00D8               	movwf	(sprintf@width+1)^(0+128)
  3558  008E  1283               	bcf	3,5	;RP0=0, select bank0
  3559  008F  1303               	bcf	3,6	;RP1=0, select bank0
  3560  0090  083D               	movf	?___wmul,w
  3561  0091  1683               	bsf	3,5	;RP0=1, select bank1
  3562  0092  1303               	bcf	3,6	;RP1=0, select bank1
  3563  0093  00D7               	movwf	sprintf@width^(0+128)
  3564                           
  3565                           ;/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt.c: 613:        width += *f++ - '
      +                          0';
  3566  0094  084A               	movf	sprintf@f^(0+128),w
  3567  0095  0084               	movwf	4
  3568  0096  120A  118A  2700  120A  118A  	fcall	stringdir
  3569  009B  3ED0               	addlw	208
  3570  009C  00CF               	movwf	??_sprintf^(0+128)
  3571  009D  30FF               	movlw	255
  3572  009E  1803               	skipnc
  3573  009F  3000               	movlw	0
  3574  00A0  00D0               	movwf	(??_sprintf^(0+128)+1)
  3575  00A1  084F               	movf	??_sprintf^(0+128),w
  3576  00A2  07D7               	addwf	sprintf@width^(0+128),f
  3577  00A3  1803               	skipnc
  3578  00A4  0AD8               	incf	(sprintf@width+1)^(0+128),f
  3579  00A5  0850               	movf	(??_sprintf+1)^(0+128),w
  3580  00A6  07D8               	addwf	(sprintf@width+1)^(0+128),f
  3581  00A7  3001               	movlw	1
  3582  00A8  00CF               	movwf	??_sprintf^(0+128)
  3583  00A9  084F               	movf	??_sprintf^(0+128),w
  3584  00AA  07CA               	addwf	sprintf@f^(0+128),f
  3585                           
  3586                           ;/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt.c: 614:    } while(isdigit((unsi
      +                          gned)*f));
  3587  00AB  084A               	movf	sprintf@f^(0+128),w
  3588  00AC  0084               	movwf	4
  3589  00AD  120A  118A  2700  120A  118A  	fcall	stringdir
  3590  00B2  120A  158A  2100  120A  118A  	fcall	_isdigit
  3591  00B7  1803               	btfsc	3,0
  3592  00B8  2871               	goto	l3656
  3593  00B9                     l3666:	
  3594  00B9  3001               	movlw	1
  3595  00BA  1683               	bsf	3,5	;RP0=1, select bank1
  3596  00BB  1303               	bcf	3,6	;RP1=0, select bank1
  3597  00BC  07CA               	addwf	sprintf@f^(0+128),f
  3598  00BD  30FF               	movlw	-1
  3599  00BE  074A               	addwf	sprintf@f^(0+128),w
  3600  00BF  0084               	movwf	4
  3601  00C0  120A  118A  2700  120A  118A  	fcall	stringdir
  3602  00C5  00DA               	movwf	sprintf@c^(0+128)
  3603  00C6  00CF               	movwf	??_sprintf^(0+128)
  3604  00C7  01D0               	clrf	(??_sprintf^(0+128)+1)
  3605                           
  3606                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3607                           ; Switch size 1, requested type "simple"
  3608                           ; Number of cases is 1, Range of values is 0 to 0
  3609                           ; switch strategies available:
  3610                           ; Name         Instructions Cycles
  3611                           ; simple_byte            4     3 (average)
  3612                           ; direct_byte           11     8 (fixed)
  3613                           ; jumptable            260     6 (fixed)
  3614                           ;	Chosen strategy is simple_byte
  3615  00C8  0850               	movf	(??_sprintf+1)^(0+128),w
  3616  00C9  3A00               	xorlw	0	; case 0
  3617  00CA  1903               	skipnz
  3618  00CB  28CD               	goto	l4110
  3619  00CC  283C               	goto	l3724
  3620  00CD                     l4110:	
  3621                           
  3622                           ; Switch size 1, requested type "simple"
  3623                           ; Number of cases is 3, Range of values is 0 to 105
  3624                           ; switch strategies available:
  3625                           ; Name         Instructions Cycles
  3626                           ; simple_byte           10     6 (average)
  3627                           ; jumptable            260     6 (fixed)
  3628                           ;	Chosen strategy is simple_byte
  3629  00CD  084F               	movf	??_sprintf^(0+128),w
  3630  00CE  3A00               	xorlw	0	; case 0
  3631  00CF  1903               	skipnz
  3632  00D0  29B8               	goto	l3726
  3633  00D1  3A64               	xorlw	100	; case 100
  3634  00D2  1903               	skipnz
  3635  00D3  28D8               	goto	l3668
  3636  00D4  3A0D               	xorlw	13	; case 105
  3637  00D5  1903               	skipnz
  3638  00D6  28D8               	goto	l3668
  3639  00D7  283C               	goto	l3724
  3640  00D8                     l3668:	
  3641                           
  3642                           ;/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt.c: 1272:   {;/opt/microchip/xc8/
      +                          v2.05/pic/sources/c90/common/doprnt.c: 1278:     val = (int)(*(int *)__va_arg((*(int **)
      +                          ap), (int)0));
  3643  00D8  0852               	movf	sprintf@ap^(0+128),w
  3644  00D9  0084               	movwf	4
  3645  00DA  1383               	bcf	3,7	;select IRP bank0
  3646  00DB  0800               	movf	0,w
  3647  00DC  00D5               	movwf	sprintf@val^(0+128)
  3648  00DD  0A84               	incf	4,f
  3649  00DE  0800               	movf	0,w
  3650  00DF  00D6               	movwf	(sprintf@val+1)^(0+128)
  3651  00E0  3002               	movlw	2
  3652  00E1  00CF               	movwf	??_sprintf^(0+128)
  3653  00E2  084F               	movf	??_sprintf^(0+128),w
  3654  00E3  07D2               	addwf	sprintf@ap^(0+128),f
  3655                           
  3656                           ;/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt.c: 1280:    if((int)val < 0) {
  3657  00E4  1FD6               	btfss	(sprintf@val+1)^(0+128),7
  3658  00E5  28EF               	goto	l3678
  3659                           
  3660                           ;/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt.c: 1281:     flag |= 0x03;
  3661  00E6  3003               	movlw	3
  3662  00E7  00CF               	movwf	??_sprintf^(0+128)
  3663  00E8  084F               	movf	??_sprintf^(0+128),w
  3664  00E9  04D4               	iorwf	sprintf@flag^(0+128),f
  3665                           
  3666                           ;/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt.c: 1282:     val = -val;
  3667  00EA  09D5               	comf	sprintf@val^(0+128),f
  3668  00EB  09D6               	comf	(sprintf@val+1)^(0+128),f
  3669  00EC  0AD5               	incf	sprintf@val^(0+128),f
  3670  00ED  1903               	skipnz
  3671  00EE  0AD6               	incf	(sprintf@val+1)^(0+128),f
  3672  00EF                     l3678:	
  3673                           
  3674                           ;/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt.c: 1285:   };/opt/microchip/xc8/
      +                          v2.05/pic/sources/c90/common/doprnt.c: 1324:    for(c = 1 ; c != sizeof dpowers/sizeof d
      +                          powers[0] ; c++)
  3675  00EF  01DA               	clrf	sprintf@c^(0+128)
  3676  00F0  0ADA               	incf	sprintf@c^(0+128),f
  3677  00F1                     l3684:	
  3678                           
  3679                           ;/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt.c: 1325:     if(val < dpowers[c]
      +                          )
  3680  00F1  085A               	movf	sprintf@c^(0+128),w
  3681  00F2  00CF               	movwf	??_sprintf^(0+128)
  3682  00F3  074F               	addwf	??_sprintf^(0+128),w
  3683  00F4  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  3684  00F5  0084               	movwf	4
  3685  00F6  120A  118A  2700  120A  118A  	fcall	stringdir
  3686  00FB  00D0               	movwf	(??_sprintf+1)^(0+128)
  3687  00FC  120A  118A  2700  120A  118A  	fcall	stringdir
  3688  0101  00D1               	movwf	((??_sprintf+1)^(0+128)+1)
  3689  0102  0851               	movf	(??_sprintf+2)^(0+128),w
  3690  0103  0256               	subwf	(sprintf@val+1)^(0+128),w
  3691  0104  1D03               	skipz
  3692  0105  2908               	goto	u3075
  3693  0106  0850               	movf	(??_sprintf+1)^(0+128),w
  3694  0107  0255               	subwf	sprintf@val^(0+128),w
  3695  0108                     u3075:	
  3696  0108  1C03               	btfss	3,0
  3697  0109  2912               	goto	l3690
  3698  010A  3001               	movlw	1
  3699  010B  00CF               	movwf	??_sprintf^(0+128)
  3700  010C  084F               	movf	??_sprintf^(0+128),w
  3701  010D  07DA               	addwf	sprintf@c^(0+128),f
  3702  010E  3005               	movlw	5
  3703  010F  065A               	xorwf	sprintf@c^(0+128),w
  3704  0110  1D03               	btfss	3,2
  3705  0111  28F1               	goto	l3684
  3706  0112                     l3690:	
  3707                           
  3708                           ;/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt.c: 1364:   if(width && flag & 0x
      +                          03)
  3709  0112  0857               	movf	sprintf@width^(0+128),w
  3710  0113  0458               	iorwf	(sprintf@width+1)^(0+128),w
  3711  0114  1903               	btfsc	3,2
  3712  0115  2920               	goto	l656
  3713  0116  0854               	movf	sprintf@flag^(0+128),w
  3714  0117  3903               	andlw	3
  3715  0118  1903               	btfsc	3,2
  3716  0119  2920               	goto	l656
  3717                           
  3718                           ;/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt.c: 1365:    width--;
  3719  011A  30FF               	movlw	255
  3720  011B  07D7               	addwf	sprintf@width^(0+128),f
  3721  011C  1803               	skipnc
  3722  011D  0AD8               	incf	(sprintf@width+1)^(0+128),f
  3723  011E  30FF               	movlw	255
  3724  011F  07D8               	addwf	(sprintf@width+1)^(0+128),f
  3725  0120                     l656:	
  3726                           
  3727                           ;/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt.c: 1400:   if(width > c)
  3728  0120  0858               	movf	(sprintf@width+1)^(0+128),w
  3729  0121  3A80               	xorlw	128
  3730  0122  3C80               	sublw	128
  3731  0123  1D03               	skipz
  3732  0124  2927               	goto	u3115
  3733  0125  0857               	movf	sprintf@width^(0+128),w
  3734  0126  025A               	subwf	sprintf@c^(0+128),w
  3735  0127                     u3115:	
  3736  0127  1803               	skipnc
  3737  0128  2935               	goto	l3698
  3738                           
  3739                           ;/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt.c: 1401:    width -= c;
  3740  0129  1683               	bsf	3,5	;RP0=1, select bank1
  3741  012A  1303               	bcf	3,6	;RP1=0, select bank1
  3742  012B  085A               	movf	sprintf@c^(0+128),w
  3743  012C  00CF               	movwf	??_sprintf^(0+128)
  3744  012D  01D0               	clrf	(??_sprintf^(0+128)+1)
  3745  012E  084F               	movf	??_sprintf^(0+128),w
  3746  012F  02D7               	subwf	sprintf@width^(0+128),f
  3747  0130  0850               	movf	(??_sprintf+1)^(0+128),w
  3748  0131  1C03               	skipc
  3749  0132  03D8               	decf	(sprintf@width+1)^(0+128),f
  3750  0133  02D8               	subwf	(sprintf@width+1)^(0+128),f
  3751  0134  2939               	goto	l3700
  3752  0135                     l3698:	
  3753                           
  3754                           ;/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt.c: 1403:    width = 0;
  3755  0135  1683               	bsf	3,5	;RP0=1, select bank1
  3756  0136  1303               	bcf	3,6	;RP1=0, select bank1
  3757  0137  01D7               	clrf	sprintf@width^(0+128)
  3758  0138  01D8               	clrf	(sprintf@width+1)^(0+128)
  3759  0139                     l3700:	
  3760                           
  3761                           ;/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt.c: 1441:   {;/opt/microchip/xc8/
      +                          v2.05/pic/sources/c90/common/doprnt.c: 1443:    if(width
  3762  0139  0857               	movf	sprintf@width^(0+128),w
  3763  013A  0458               	iorwf	(sprintf@width+1)^(0+128),w
  3764  013B  1903               	btfsc	3,2
  3765  013C  2952               	goto	l3708
  3766  013D                     l3702:	
  3767                           
  3768                           ;/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt.c: 1449:      ((*sp++ = (' ')));
  3769  013D  3020               	movlw	32
  3770  013E  00CF               	movwf	??_sprintf^(0+128)
  3771  013F  0859               	movf	sprintf@sp^(0+128),w
  3772  0140  0084               	movwf	4
  3773  0141  084F               	movf	??_sprintf^(0+128),w
  3774  0142  1383               	bcf	3,7	;select IRP bank0
  3775  0143  0080               	movwf	0
  3776  0144  3001               	movlw	1
  3777  0145  00CF               	movwf	??_sprintf^(0+128)
  3778  0146  084F               	movf	??_sprintf^(0+128),w
  3779  0147  07D9               	addwf	sprintf@sp^(0+128),f
  3780  0148  30FF               	movlw	255
  3781  0149  07D7               	addwf	sprintf@width^(0+128),f
  3782  014A  1803               	skipnc
  3783  014B  0AD8               	incf	(sprintf@width+1)^(0+128),f
  3784  014C  30FF               	movlw	255
  3785  014D  07D8               	addwf	(sprintf@width+1)^(0+128),f
  3786  014E  0857               	movf	sprintf@width^(0+128),w
  3787  014F  0458               	iorwf	(sprintf@width+1)^(0+128),w
  3788  0150  1D03               	btfss	3,2
  3789  0151  293D               	goto	l3702
  3790  0152                     l3708:	
  3791                           
  3792                           ;/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt.c: 1457:    if(flag & 0x03)
  3793  0152  0854               	movf	sprintf@flag^(0+128),w
  3794  0153  3903               	andlw	3
  3795  0154  1903               	btfsc	3,2
  3796  0155  2961               	goto	l3714
  3797                           
  3798                           ;/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt.c: 1458:     ((*sp++ = ('-')));
  3799  0156  302D               	movlw	45
  3800  0157  00CF               	movwf	??_sprintf^(0+128)
  3801  0158  0859               	movf	sprintf@sp^(0+128),w
  3802  0159  0084               	movwf	4
  3803  015A  084F               	movf	??_sprintf^(0+128),w
  3804  015B  1383               	bcf	3,7	;select IRP bank0
  3805  015C  0080               	movwf	0
  3806  015D  3001               	movlw	1
  3807  015E  00CF               	movwf	??_sprintf^(0+128)
  3808  015F  084F               	movf	??_sprintf^(0+128),w
  3809  0160  07D9               	addwf	sprintf@sp^(0+128),f
  3810  0161                     l3714:	
  3811                           
  3812                           ;/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt.c: 1488:   };/opt/microchip/xc8/
      +                          v2.05/pic/sources/c90/common/doprnt.c: 1491:   prec = c;
  3813  0161  085A               	movf	sprintf@c^(0+128),w
  3814  0162  00CF               	movwf	??_sprintf^(0+128)
  3815  0163  084F               	movf	??_sprintf^(0+128),w
  3816  0164  00D3               	movwf	sprintf@prec^(0+128)
  3817  0165                     l3722:	
  3818                           ;/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt.c: 1493:   while(prec--) {
  3819                           
  3820                           
  3821                           ;/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt.c: 1493:   while(prec--) {
  3822  0165  30FF               	movlw	255
  3823  0166  00CF               	movwf	??_sprintf^(0+128)
  3824  0167  084F               	movf	??_sprintf^(0+128),w
  3825  0168  07D3               	addwf	sprintf@prec^(0+128),f
  3826  0169  0A53               	incf	sprintf@prec^(0+128),w
  3827  016A  1903               	btfsc	3,2
  3828  016B  283C               	goto	l3724
  3829                           
  3830                           ;/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt.c: 1497:    {;/opt/microchip/xc8
      +                          /v2.05/pic/sources/c90/common/doprnt.c: 1508:     c = (val / dpowers[prec]) % 10 + '0';
  3831  016C  300A               	movlw	10
  3832  016D  00C6               	movwf	___lwmod@divisor^(0+128)
  3833  016E  3000               	movlw	0
  3834  016F  00C7               	movwf	(___lwmod@divisor^(0+128)+1)
  3835  0170  0853               	movf	sprintf@prec^(0+128),w
  3836  0171  00CF               	movwf	??_sprintf^(0+128)
  3837  0172  074F               	addwf	??_sprintf^(0+128),w
  3838  0173  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  3839  0174  0084               	movwf	4
  3840  0175  120A  118A  2700  120A  118A  	fcall	stringdir
  3841  017A  1283               	bcf	3,5	;RP0=0, select bank0
  3842  017B  1303               	bcf	3,6	;RP1=0, select bank0
  3843  017C  00BD               	movwf	___lwdiv@divisor
  3844  017D  120A  118A  2700  120A  118A  	fcall	stringdir
  3845  0182  00BE               	movwf	___lwdiv@divisor+1
  3846  0183  1683               	bsf	3,5	;RP0=1, select bank1
  3847  0184  1303               	bcf	3,6	;RP1=0, select bank1
  3848  0185  0856               	movf	(sprintf@val+1)^(0+128),w
  3849  0186  1283               	bcf	3,5	;RP0=0, select bank0
  3850  0187  1303               	bcf	3,6	;RP1=0, select bank0
  3851  0188  00C0               	movwf	___lwdiv@dividend+1
  3852  0189  1683               	bsf	3,5	;RP0=1, select bank1
  3853  018A  1303               	bcf	3,6	;RP1=0, select bank1
  3854  018B  0855               	movf	sprintf@val^(0+128),w
  3855  018C  1283               	bcf	3,5	;RP0=0, select bank0
  3856  018D  1303               	bcf	3,6	;RP1=0, select bank0
  3857  018E  00BF               	movwf	___lwdiv@dividend
  3858  018F  120A  158A  2530  120A  118A  	fcall	___lwdiv
  3859  0194  1283               	bcf	3,5	;RP0=0, select bank0
  3860  0195  1303               	bcf	3,6	;RP1=0, select bank0
  3861  0196  083E               	movf	?___lwdiv+1,w
  3862  0197  1683               	bsf	3,5	;RP0=1, select bank1
  3863  0198  1303               	bcf	3,6	;RP1=0, select bank1
  3864  0199  00C9               	movwf	(___lwmod@dividend+1)^(0+128)
  3865  019A  1283               	bcf	3,5	;RP0=0, select bank0
  3866  019B  1303               	bcf	3,6	;RP1=0, select bank0
  3867  019C  083D               	movf	?___lwdiv,w
  3868  019D  1683               	bsf	3,5	;RP0=1, select bank1
  3869  019E  1303               	bcf	3,6	;RP1=0, select bank1
  3870  019F  00C8               	movwf	___lwmod@dividend^(0+128)
  3871  01A0  120A  158A  232C  120A  118A  	fcall	___lwmod
  3872  01A5  1683               	bsf	3,5	;RP0=1, select bank1
  3873  01A6  1303               	bcf	3,6	;RP1=0, select bank1
  3874  01A7  0846               	movf	?___lwmod^(0+128),w
  3875  01A8  3E30               	addlw	48
  3876  01A9  00D0               	movwf	(??_sprintf+1)^(0+128)
  3877  01AA  0850               	movf	(??_sprintf+1)^(0+128),w
  3878  01AB  00DA               	movwf	sprintf@c^(0+128)
  3879                           
  3880                           ;/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt.c: 1542:    };/opt/microchip/xc8
      +                          /v2.05/pic/sources/c90/common/doprnt.c: 1543:    ((*sp++ = (c)));
  3881  01AC  085A               	movf	sprintf@c^(0+128),w
  3882  01AD  00CF               	movwf	??_sprintf^(0+128)
  3883  01AE  0859               	movf	sprintf@sp^(0+128),w
  3884  01AF  0084               	movwf	4
  3885  01B0  084F               	movf	??_sprintf^(0+128),w
  3886  01B1  1383               	bcf	3,7	;select IRP bank0
  3887  01B2  0080               	movwf	0
  3888  01B3  3001               	movlw	1
  3889  01B4  00CF               	movwf	??_sprintf^(0+128)
  3890  01B5  084F               	movf	??_sprintf^(0+128),w
  3891  01B6  07D9               	addwf	sprintf@sp^(0+128),f
  3892  01B7  2965               	goto	l3722
  3893  01B8                     l3726:	
  3894                           
  3895                           ;/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt.c: 1557:  *sp = 0;
  3896  01B8  0859               	movf	sprintf@sp^(0+128),w
  3897  01B9  0084               	movwf	4
  3898  01BA  1383               	bcf	3,7	;select IRP bank0
  3899  01BB  0180               	clrf	0
  3900  01BC  0008               	return
  3901  01BD                     __end_of_sprintf:	
  3902                           
  3903                           	psect	text11
  3904  0900                     __ptext11:	
  3905 ;; *************** function _isdigit *****************
  3906 ;; Defined at:
  3907 ;;		line 8 in file "/opt/microchip/xc8/v2.05/pic/sources/c90/common/isdigit.c"
  3908 ;; Parameters:    Size  Location     Type
  3909 ;;  c               1    wreg     unsigned char 
  3910 ;; Auto vars:     Size  Location     Type
  3911 ;;  c               1   30[BANK0 ] unsigned char 
  3912 ;; Return value:  Size  Location     Type
  3913 ;;		None               void
  3914 ;; Registers used:
  3915 ;;		wreg, status,2, status,0
  3916 ;; Tracked objects:
  3917 ;;		On entry : 0/0
  3918 ;;		On exit  : 0/0
  3919 ;;		Unchanged: 0/0
  3920 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3921 ;;      Params:         0       0       0       0       0
  3922 ;;      Locals:         0       2       0       0       0
  3923 ;;      Temps:          0       0       0       0       0
  3924 ;;      Totals:         0       2       0       0       0
  3925 ;;Total ram usage:        2 bytes
  3926 ;; Hardware stack levels used:    1
  3927 ;; Hardware stack levels required when called:    5
  3928 ;; This function calls:
  3929 ;;		Nothing
  3930 ;; This function is called by:
  3931 ;;		_sprintf
  3932 ;; This function uses a non-reentrant model
  3933 ;;
  3934                           
  3935                           
  3936                           ;psect for function _isdigit
  3937  0900                     _isdigit:	
  3938                           
  3939                           ;incstack = 0
  3940                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  3941                           ;isdigit@c stored from wreg
  3942  0900  1283               	bcf	3,5	;RP0=0, select bank0
  3943  0901  1303               	bcf	3,6	;RP1=0, select bank0
  3944  0902  00BE               	movwf	isdigit@c
  3945  0903  01BD               	clrf	_isdigit$1104
  3946  0904  303A               	movlw	58
  3947  0905  023E               	subwf	isdigit@c,w
  3948  0906  1803               	skipnc
  3949  0907  290E               	goto	l2464
  3950  0908  3030               	movlw	48
  3951  0909  023E               	subwf	isdigit@c,w
  3952  090A  1C03               	skipc
  3953  090B  290E               	goto	l2464
  3954  090C  01BD               	clrf	_isdigit$1104
  3955  090D  0ABD               	incf	_isdigit$1104,f
  3956  090E                     l2464:	
  3957  090E  0C3D               	rrf	_isdigit$1104,w
  3958  090F  0008               	return
  3959  0910                     __end_of_isdigit:	
  3960                           
  3961                           	psect	text12
  3962  09C8                     __ptext12:	
  3963 ;; *************** function ___wmul *****************
  3964 ;; Defined at:
  3965 ;;		line 15 in file "/opt/microchip/xc8/v2.05/pic/sources/c90/common/Umul16.c"
  3966 ;; Parameters:    Size  Location     Type
  3967 ;;  multiplier      2   29[BANK0 ] unsigned int 
  3968 ;;  multiplicand    2   31[BANK0 ] unsigned int 
  3969 ;; Auto vars:     Size  Location     Type
  3970 ;;  product         2   33[BANK0 ] unsigned int 
  3971 ;; Return value:  Size  Location     Type
  3972 ;;                  2   29[BANK0 ] unsigned int 
  3973 ;; Registers used:
  3974 ;;		wreg, status,2, status,0
  3975 ;; Tracked objects:
  3976 ;;		On entry : 0/0
  3977 ;;		On exit  : 0/0
  3978 ;;		Unchanged: 0/0
  3979 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3980 ;;      Params:         0       4       0       0       0
  3981 ;;      Locals:         0       2       0       0       0
  3982 ;;      Temps:          0       0       0       0       0
  3983 ;;      Totals:         0       6       0       0       0
  3984 ;;Total ram usage:        6 bytes
  3985 ;; Hardware stack levels used:    1
  3986 ;; Hardware stack levels required when called:    5
  3987 ;; This function calls:
  3988 ;;		Nothing
  3989 ;; This function is called by:
  3990 ;;		_beep
  3991 ;;		_sprintf
  3992 ;; This function uses a non-reentrant model
  3993 ;;
  3994                           
  3995                           
  3996                           ;psect for function ___wmul
  3997  09C8                     ___wmul:	
  3998                           
  3999                           ;incstack = 0
  4000                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  4001  09C8  1283               	bcf	3,5	;RP0=0, select bank0
  4002  09C9  1303               	bcf	3,6	;RP1=0, select bank0
  4003  09CA  01C1               	clrf	___wmul@product
  4004  09CB  01C2               	clrf	___wmul@product+1
  4005  09CC                     l3570:	
  4006  09CC  1C3D               	btfss	___wmul@multiplier,0
  4007  09CD  29D4               	goto	l671
  4008  09CE  083F               	movf	___wmul@multiplicand,w
  4009  09CF  07C1               	addwf	___wmul@product,f
  4010  09D0  1803               	skipnc
  4011  09D1  0AC2               	incf	___wmul@product+1,f
  4012  09D2  0840               	movf	___wmul@multiplicand+1,w
  4013  09D3  07C2               	addwf	___wmul@product+1,f
  4014  09D4                     l671:	
  4015  09D4  3001               	movlw	1
  4016  09D5                     u2865:	
  4017  09D5  1003               	clrc
  4018  09D6  0DBF               	rlf	___wmul@multiplicand,f
  4019  09D7  0DC0               	rlf	___wmul@multiplicand+1,f
  4020  09D8  3EFF               	addlw	-1
  4021  09D9  1D03               	skipz
  4022  09DA  29D5               	goto	u2865
  4023  09DB  3001               	movlw	1
  4024  09DC                     u2875:	
  4025  09DC  1003               	clrc
  4026  09DD  0CBE               	rrf	___wmul@multiplier+1,f
  4027  09DE  0CBD               	rrf	___wmul@multiplier,f
  4028  09DF  3EFF               	addlw	-1
  4029  09E0  1D03               	skipz
  4030  09E1  29DC               	goto	u2875
  4031  09E2  083D               	movf	___wmul@multiplier,w
  4032  09E3  043E               	iorwf	___wmul@multiplier+1,w
  4033  09E4  1D03               	btfss	3,2
  4034  09E5  29CC               	goto	l3570
  4035  09E6  0842               	movf	___wmul@product+1,w
  4036  09E7  00BE               	movwf	?___wmul+1
  4037  09E8  0841               	movf	___wmul@product,w
  4038  09E9  00BD               	movwf	?___wmul
  4039  09EA  0008               	return
  4040  09EB                     __end_of___wmul:	
  4041                           
  4042                           	psect	text13
  4043  0B2C                     __ptext13:	
  4044 ;; *************** function ___lwmod *****************
  4045 ;; Defined at:
  4046 ;;		line 5 in file "/opt/microchip/xc8/v2.05/pic/sources/c90/common/lwmod.c"
  4047 ;; Parameters:    Size  Location     Type
  4048 ;;  divisor         2    3[BANK1 ] unsigned int 
  4049 ;;  dividend        2    5[BANK1 ] unsigned int 
  4050 ;; Auto vars:     Size  Location     Type
  4051 ;;  counter         1   35[BANK0 ] unsigned char 
  4052 ;; Return value:  Size  Location     Type
  4053 ;;                  2    3[BANK1 ] unsigned int 
  4054 ;; Registers used:
  4055 ;;		wreg, status,2, status,0
  4056 ;; Tracked objects:
  4057 ;;		On entry : 0/0
  4058 ;;		On exit  : 0/0
  4059 ;;		Unchanged: 0/0
  4060 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4061 ;;      Params:         0       0       4       0       0
  4062 ;;      Locals:         0       1       0       0       0
  4063 ;;      Temps:          0       1       0       0       0
  4064 ;;      Totals:         0       2       4       0       0
  4065 ;;Total ram usage:        6 bytes
  4066 ;; Hardware stack levels used:    1
  4067 ;; Hardware stack levels required when called:    5
  4068 ;; This function calls:
  4069 ;;		Nothing
  4070 ;; This function is called by:
  4071 ;;		_principalScreen
  4072 ;;		_sprintf
  4073 ;; This function uses a non-reentrant model
  4074 ;;
  4075                           
  4076                           
  4077                           ;psect for function ___lwmod
  4078  0B2C                     ___lwmod:	
  4079                           
  4080                           ;incstack = 0
  4081                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  4082  0B2C  1683               	bsf	3,5	;RP0=1, select bank1
  4083  0B2D  1303               	bcf	3,6	;RP1=0, select bank1
  4084  0B2E  0846               	movf	___lwmod@divisor^(0+128),w
  4085  0B2F  0447               	iorwf	(___lwmod@divisor+1)^(0+128),w
  4086  0B30  1903               	btfsc	3,2
  4087  0B31  2B65               	goto	l3626
  4088  0B32  1283               	bcf	3,5	;RP0=0, select bank0
  4089  0B33  1303               	bcf	3,6	;RP1=0, select bank0
  4090  0B34  01C3               	clrf	___lwmod@counter
  4091  0B35  0AC3               	incf	___lwmod@counter,f
  4092  0B36                     l3616:	
  4093  0B36  1683               	bsf	3,5	;RP0=1, select bank1
  4094  0B37  1303               	bcf	3,6	;RP1=0, select bank1
  4095  0B38  1BC7               	btfsc	(___lwmod@divisor+1)^(0+128),7
  4096  0B39  2B48               	goto	l3618
  4097  0B3A  3001               	movlw	1
  4098  0B3B                     u2975:	
  4099  0B3B  1003               	clrc
  4100  0B3C  0DC6               	rlf	___lwmod@divisor^(0+128),f
  4101  0B3D  0DC7               	rlf	(___lwmod@divisor+1)^(0+128),f
  4102  0B3E  3EFF               	addlw	-1
  4103  0B3F  1D03               	skipz
  4104  0B40  2B3B               	goto	u2975
  4105  0B41  3001               	movlw	1
  4106  0B42  1283               	bcf	3,5	;RP0=0, select bank0
  4107  0B43  1303               	bcf	3,6	;RP1=0, select bank0
  4108  0B44  00C2               	movwf	??___lwmod
  4109  0B45  0842               	movf	??___lwmod,w
  4110  0B46  07C3               	addwf	___lwmod@counter,f
  4111  0B47  2B36               	goto	l3616
  4112  0B48                     l3618:	
  4113  0B48  1683               	bsf	3,5	;RP0=1, select bank1
  4114  0B49  1303               	bcf	3,6	;RP1=0, select bank1
  4115  0B4A  0847               	movf	(___lwmod@divisor+1)^(0+128),w
  4116  0B4B  0249               	subwf	(___lwmod@dividend+1)^(0+128),w
  4117  0B4C  1D03               	skipz
  4118  0B4D  2B50               	goto	u2995
  4119  0B4E  0846               	movf	___lwmod@divisor^(0+128),w
  4120  0B4F  0248               	subwf	___lwmod@dividend^(0+128),w
  4121  0B50                     u2995:	
  4122  0B50  1C03               	skipc
  4123  0B51  2B58               	goto	l3622
  4124  0B52  0846               	movf	___lwmod@divisor^(0+128),w
  4125  0B53  02C8               	subwf	___lwmod@dividend^(0+128),f
  4126  0B54  0847               	movf	(___lwmod@divisor+1)^(0+128),w
  4127  0B55  1C03               	skipc
  4128  0B56  03C9               	decf	(___lwmod@dividend+1)^(0+128),f
  4129  0B57  02C9               	subwf	(___lwmod@dividend+1)^(0+128),f
  4130  0B58                     l3622:	
  4131  0B58  3001               	movlw	1
  4132  0B59                     u3005:	
  4133  0B59  1003               	clrc
  4134  0B5A  0CC7               	rrf	(___lwmod@divisor+1)^(0+128),f
  4135  0B5B  0CC6               	rrf	___lwmod@divisor^(0+128),f
  4136  0B5C  3EFF               	addlw	-1
  4137  0B5D  1D03               	skipz
  4138  0B5E  2B59               	goto	u3005
  4139  0B5F  3001               	movlw	1
  4140  0B60  1283               	bcf	3,5	;RP0=0, select bank0
  4141  0B61  1303               	bcf	3,6	;RP1=0, select bank0
  4142  0B62  02C3               	subwf	___lwmod@counter,f
  4143  0B63  1D03               	btfss	3,2
  4144  0B64  2B48               	goto	l3618
  4145  0B65                     l3626:	
  4146  0B65  1683               	bsf	3,5	;RP0=1, select bank1
  4147  0B66  1303               	bcf	3,6	;RP1=0, select bank1
  4148  0B67  0849               	movf	(___lwmod@dividend+1)^(0+128),w
  4149  0B68  00C7               	movwf	(?___lwmod+1)^(0+128)
  4150  0B69  0848               	movf	___lwmod@dividend^(0+128),w
  4151  0B6A  00C6               	movwf	?___lwmod^(0+128)
  4152  0B6B  0008               	return
  4153  0B6C                     __end_of___lwmod:	
  4154                           
  4155                           	psect	text14
  4156  0D30                     __ptext14:	
  4157 ;; *************** function ___lwdiv *****************
  4158 ;; Defined at:
  4159 ;;		line 5 in file "/opt/microchip/xc8/v2.05/pic/sources/c90/common/lwdiv.c"
  4160 ;; Parameters:    Size  Location     Type
  4161 ;;  divisor         2   29[BANK0 ] unsigned int 
  4162 ;;  dividend        2   31[BANK0 ] unsigned int 
  4163 ;; Auto vars:     Size  Location     Type
  4164 ;;  quotient        2    1[BANK1 ] unsigned int 
  4165 ;;  counter         1    0[BANK1 ] unsigned char 
  4166 ;; Return value:  Size  Location     Type
  4167 ;;                  2   29[BANK0 ] unsigned int 
  4168 ;; Registers used:
  4169 ;;		wreg, status,2, status,0
  4170 ;; Tracked objects:
  4171 ;;		On entry : 0/0
  4172 ;;		On exit  : 0/0
  4173 ;;		Unchanged: 0/0
  4174 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4175 ;;      Params:         0       4       0       0       0
  4176 ;;      Locals:         0       0       3       0       0
  4177 ;;      Temps:          0       1       0       0       0
  4178 ;;      Totals:         0       5       3       0       0
  4179 ;;Total ram usage:        8 bytes
  4180 ;; Hardware stack levels used:    1
  4181 ;; Hardware stack levels required when called:    5
  4182 ;; This function calls:
  4183 ;;		Nothing
  4184 ;; This function is called by:
  4185 ;;		_principalScreen
  4186 ;;		_sprintf
  4187 ;; This function uses a non-reentrant model
  4188 ;;
  4189                           
  4190                           
  4191                           ;psect for function ___lwdiv
  4192  0D30                     ___lwdiv:	
  4193                           
  4194                           ;incstack = 0
  4195                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  4196  0D30  1683               	bsf	3,5	;RP0=1, select bank1
  4197  0D31  1303               	bcf	3,6	;RP1=0, select bank1
  4198  0D32  01C4               	clrf	___lwdiv@quotient^(0+128)
  4199  0D33  01C5               	clrf	(___lwdiv@quotient+1)^(0+128)
  4200  0D34  1283               	bcf	3,5	;RP0=0, select bank0
  4201  0D35  1303               	bcf	3,6	;RP1=0, select bank0
  4202  0D36  083D               	movf	___lwdiv@divisor,w
  4203  0D37  043E               	iorwf	___lwdiv@divisor+1,w
  4204  0D38  1903               	btfsc	3,2
  4205  0D39  2D7A               	goto	l3604
  4206  0D3A  1683               	bsf	3,5	;RP0=1, select bank1
  4207  0D3B  1303               	bcf	3,6	;RP1=0, select bank1
  4208  0D3C  01C3               	clrf	___lwdiv@counter^(0+128)
  4209  0D3D  0AC3               	incf	___lwdiv@counter^(0+128),f
  4210  0D3E                     l3592:	
  4211  0D3E  1283               	bcf	3,5	;RP0=0, select bank0
  4212  0D3F  1303               	bcf	3,6	;RP1=0, select bank0
  4213  0D40  1BBE               	btfsc	___lwdiv@divisor+1,7
  4214  0D41  2D50               	goto	l3594
  4215  0D42  3001               	movlw	1
  4216  0D43                     u2905:	
  4217  0D43  1003               	clrc
  4218  0D44  0DBD               	rlf	___lwdiv@divisor,f
  4219  0D45  0DBE               	rlf	___lwdiv@divisor+1,f
  4220  0D46  3EFF               	addlw	-1
  4221  0D47  1D03               	skipz
  4222  0D48  2D43               	goto	u2905
  4223  0D49  3001               	movlw	1
  4224  0D4A  00C1               	movwf	??___lwdiv
  4225  0D4B  0841               	movf	??___lwdiv,w
  4226  0D4C  1683               	bsf	3,5	;RP0=1, select bank1
  4227  0D4D  1303               	bcf	3,6	;RP1=0, select bank1
  4228  0D4E  07C3               	addwf	___lwdiv@counter^(0+128),f
  4229  0D4F  2D3E               	goto	l3592
  4230  0D50                     l3594:	
  4231  0D50  3001               	movlw	1
  4232  0D51  1683               	bsf	3,5	;RP0=1, select bank1
  4233  0D52  1303               	bcf	3,6	;RP1=0, select bank1
  4234  0D53                     u2925:	
  4235  0D53  1003               	clrc
  4236  0D54  0DC4               	rlf	___lwdiv@quotient^(0+128),f
  4237  0D55  0DC5               	rlf	(___lwdiv@quotient+1)^(0+128),f
  4238  0D56  3EFF               	addlw	-1
  4239  0D57  1D03               	skipz
  4240  0D58  2D53               	goto	u2925
  4241  0D59  1283               	bcf	3,5	;RP0=0, select bank0
  4242  0D5A  1303               	bcf	3,6	;RP1=0, select bank0
  4243  0D5B  083E               	movf	___lwdiv@divisor+1,w
  4244  0D5C  0240               	subwf	___lwdiv@dividend+1,w
  4245  0D5D  1D03               	skipz
  4246  0D5E  2D61               	goto	u2935
  4247  0D5F  083D               	movf	___lwdiv@divisor,w
  4248  0D60  023F               	subwf	___lwdiv@dividend,w
  4249  0D61                     u2935:	
  4250  0D61  1C03               	skipc
  4251  0D62  2D6C               	goto	l3600
  4252  0D63  083D               	movf	___lwdiv@divisor,w
  4253  0D64  02BF               	subwf	___lwdiv@dividend,f
  4254  0D65  083E               	movf	___lwdiv@divisor+1,w
  4255  0D66  1C03               	skipc
  4256  0D67  03C0               	decf	___lwdiv@dividend+1,f
  4257  0D68  02C0               	subwf	___lwdiv@dividend+1,f
  4258  0D69  1683               	bsf	3,5	;RP0=1, select bank1
  4259  0D6A  1303               	bcf	3,6	;RP1=0, select bank1
  4260  0D6B  1444               	bsf	___lwdiv@quotient^(0+128),0
  4261  0D6C                     l3600:	
  4262  0D6C  3001               	movlw	1
  4263  0D6D  1283               	bcf	3,5	;RP0=0, select bank0
  4264  0D6E                     u2945:	
  4265  0D6E  1003               	clrc
  4266  0D6F  0CBE               	rrf	___lwdiv@divisor+1,f
  4267  0D70  0CBD               	rrf	___lwdiv@divisor,f
  4268  0D71  3EFF               	addlw	-1
  4269  0D72  1D03               	skipz
  4270  0D73  2D6E               	goto	u2945
  4271  0D74  3001               	movlw	1
  4272  0D75  1683               	bsf	3,5	;RP0=1, select bank1
  4273  0D76  1303               	bcf	3,6	;RP1=0, select bank1
  4274  0D77  02C3               	subwf	___lwdiv@counter^(0+128),f
  4275  0D78  1D03               	btfss	3,2
  4276  0D79  2D50               	goto	l3594
  4277  0D7A                     l3604:	
  4278  0D7A  1683               	bsf	3,5	;RP0=1, select bank1
  4279  0D7B  1303               	bcf	3,6	;RP1=0, select bank1
  4280  0D7C  0845               	movf	(___lwdiv@quotient+1)^(0+128),w
  4281  0D7D  1283               	bcf	3,5	;RP0=0, select bank0
  4282  0D7E  1303               	bcf	3,6	;RP1=0, select bank0
  4283  0D7F  00BE               	movwf	?___lwdiv+1
  4284  0D80  1683               	bsf	3,5	;RP0=1, select bank1
  4285  0D81  1303               	bcf	3,6	;RP1=0, select bank1
  4286  0D82  0844               	movf	___lwdiv@quotient^(0+128),w
  4287  0D83  1283               	bcf	3,5	;RP0=0, select bank0
  4288  0D84  1303               	bcf	3,6	;RP1=0, select bank0
  4289  0D85  00BD               	movwf	?___lwdiv
  4290  0D86  0008               	return
  4291  0D87                     __end_of___lwdiv:	
  4292                           
  4293                           	psect	text15
  4294  09A5                     __ptext15:	
  4295 ;; *************** function _putsXLCD *****************
  4296 ;; Defined at:
  4297 ;;		line 419 in file "lcd_pic16.c"
  4298 ;; Parameters:    Size  Location     Type
  4299 ;;  buffer          1    wreg     PTR unsigned char 
  4300 ;;		 -> lineTwo(17), lineOne(17), 
  4301 ;; Auto vars:     Size  Location     Type
  4302 ;;  buffer          1   34[BANK0 ] PTR unsigned char 
  4303 ;;		 -> lineTwo(17), lineOne(17), 
  4304 ;; Return value:  Size  Location     Type
  4305 ;;                  1    wreg      void 
  4306 ;; Registers used:
  4307 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4308 ;; Tracked objects:
  4309 ;;		On entry : 0/0
  4310 ;;		On exit  : 0/0
  4311 ;;		Unchanged: 0/0
  4312 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4313 ;;      Params:         0       0       0       0       0
  4314 ;;      Locals:         0       1       0       0       0
  4315 ;;      Temps:          0       1       0       0       0
  4316 ;;      Totals:         0       2       0       0       0
  4317 ;;Total ram usage:        2 bytes
  4318 ;; Hardware stack levels used:    1
  4319 ;; Hardware stack levels required when called:    7
  4320 ;; This function calls:
  4321 ;;		_BusyXLCD
  4322 ;;		_WriteDataXLCD
  4323 ;; This function is called by:
  4324 ;;		_start
  4325 ;;		_setFrequency
  4326 ;;		_principalScreen
  4327 ;;		_lockingScreen
  4328 ;; This function uses a non-reentrant model
  4329 ;;
  4330                           
  4331                           
  4332                           ;psect for function _putsXLCD
  4333  09A5                     _putsXLCD:	
  4334                           
  4335                           ;incstack = 0
  4336 ;; hardware stack exceeded
  4337                           ; Regs used in _putsXLCD: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4338                           ;putsXLCD@buffer stored from wreg
  4339  09A5  1283               	bcf	3,5	;RP0=0, select bank0
  4340  09A6  1303               	bcf	3,6	;RP1=0, select bank0
  4341  09A7  00C2               	movwf	putsXLCD@buffer
  4342  09A8                     l2656:	
  4343                           ;lcd_pic16.c: 419: void putsXLCD(char *buffer);lcd_pic16.c: 420: {;lcd_pic16.c: 421:    
      +                               while(*buffer)
  4344                           
  4345                           
  4346                           ;lcd_pic16.c: 421:         while(*buffer)
  4347  09A8  0842               	movf	putsXLCD@buffer,w
  4348  09A9  0084               	movwf	4
  4349  09AA  1383               	bcf	3,7	;select IRP bank0
  4350  09AB  0800               	movf	0,w
  4351  09AC  1903               	btfsc	3,2
  4352  09AD  0008               	return
  4353  09AE                     l2650:	
  4354  09AE  120A  158A  20C9  120A  158A  	fcall	_BusyXLCD
  4355  09B3  3A00               	xorlw	0
  4356  09B4  1D03               	skipz
  4357  09B5  29AE               	goto	l2650
  4358                           
  4359                           ;lcd_pic16.c: 424:                 WriteDataXLCD(*buffer);
  4360  09B6  1283               	bcf	3,5	;RP0=0, select bank0
  4361  09B7  1303               	bcf	3,6	;RP1=0, select bank0
  4362  09B8  0842               	movf	putsXLCD@buffer,w
  4363  09B9  0084               	movwf	4
  4364  09BA  1383               	bcf	3,7	;select IRP bank0
  4365  09BB  0800               	movf	0,w
  4366  09BC  120A  158A  24E3  120A  158A  	fcall	_WriteDataXLCD
  4367                           
  4368                           ;lcd_pic16.c: 425:                 buffer++;
  4369  09C1  3001               	movlw	1
  4370  09C2  1283               	bcf	3,5	;RP0=0, select bank0
  4371  09C3  1303               	bcf	3,6	;RP1=0, select bank0
  4372  09C4  00C1               	movwf	??_putsXLCD
  4373  09C5  0841               	movf	??_putsXLCD,w
  4374  09C6  07C2               	addwf	putsXLCD@buffer,f
  4375  09C7  29A8               	goto	l2656
  4376  09C8                     __end_of_putsXLCD:	
  4377                           
  4378                           	psect	text16
  4379  0A37                     __ptext16:	
  4380 ;; *************** function _putrsXLCD *****************
  4381 ;; Defined at:
  4382 ;;		line 435 in file "lcd_pic16.c"
  4383 ;; Parameters:    Size  Location     Type
  4384 ;;  buffer          1    wreg     PTR const unsigned char 
  4385 ;;		 -> STR_8(17), 
  4386 ;; Auto vars:     Size  Location     Type
  4387 ;;  buffer          1   34[BANK0 ] PTR const unsigned char 
  4388 ;;		 -> STR_8(17), 
  4389 ;; Return value:  Size  Location     Type
  4390 ;;                  1    wreg      void 
  4391 ;; Registers used:
  4392 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4393 ;; Tracked objects:
  4394 ;;		On entry : 0/0
  4395 ;;		On exit  : 0/0
  4396 ;;		Unchanged: 0/0
  4397 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4398 ;;      Params:         0       0       0       0       0
  4399 ;;      Locals:         0       1       0       0       0
  4400 ;;      Temps:          0       1       0       0       0
  4401 ;;      Totals:         0       2       0       0       0
  4402 ;;Total ram usage:        2 bytes
  4403 ;; Hardware stack levels used:    1
  4404 ;; Hardware stack levels required when called:    7
  4405 ;; This function calls:
  4406 ;;		_BusyXLCD
  4407 ;;		_WriteDataXLCD
  4408 ;; This function is called by:
  4409 ;;		_principalScreen
  4410 ;; This function uses a non-reentrant model
  4411 ;;
  4412                           
  4413                           
  4414                           ;psect for function _putrsXLCD
  4415  0A37                     _putrsXLCD:	
  4416                           
  4417                           ;incstack = 0
  4418 ;; hardware stack exceeded
  4419                           ; Regs used in _putrsXLCD: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4420                           ;putrsXLCD@buffer stored from wreg
  4421  0A37  1283               	bcf	3,5	;RP0=0, select bank0
  4422  0A38  1303               	bcf	3,6	;RP1=0, select bank0
  4423  0A39  00C2               	movwf	putrsXLCD@buffer
  4424  0A3A                     l2968:	
  4425                           ;lcd_pic16.c: 435: void putrsXLCD(const char *buffer);lcd_pic16.c: 436: {;lcd_pic16.c: 4
      +                          37:         while(*buffer)
  4426                           
  4427                           
  4428                           ;lcd_pic16.c: 437:         while(*buffer)
  4429  0A3A  0842               	movf	putrsXLCD@buffer,w
  4430  0A3B  0084               	movwf	4
  4431  0A3C  120A  118A  2700  120A  158A  	fcall	stringdir
  4432  0A41  3A00               	xorlw	0
  4433  0A42  1903               	btfsc	3,2
  4434  0A43  0008               	return
  4435  0A44                     l2962:	
  4436  0A44  120A  158A  20C9  120A  158A  	fcall	_BusyXLCD
  4437  0A49  3A00               	xorlw	0
  4438  0A4A  1D03               	skipz
  4439  0A4B  2A44               	goto	l2962
  4440                           
  4441                           ;lcd_pic16.c: 440:                 WriteDataXLCD(*buffer);
  4442  0A4C  1283               	bcf	3,5	;RP0=0, select bank0
  4443  0A4D  1303               	bcf	3,6	;RP1=0, select bank0
  4444  0A4E  0842               	movf	putrsXLCD@buffer,w
  4445  0A4F  0084               	movwf	4
  4446  0A50  120A  118A  2700  120A  158A  	fcall	stringdir
  4447  0A55  120A  158A  24E3  120A  158A  	fcall	_WriteDataXLCD
  4448                           
  4449                           ;lcd_pic16.c: 441:                 buffer++;
  4450  0A5A  3001               	movlw	1
  4451  0A5B  1283               	bcf	3,5	;RP0=0, select bank0
  4452  0A5C  1303               	bcf	3,6	;RP1=0, select bank0
  4453  0A5D  00C1               	movwf	??_putrsXLCD
  4454  0A5E  0841               	movf	??_putrsXLCD,w
  4455  0A5F  07C2               	addwf	putrsXLCD@buffer,f
  4456  0A60  2A3A               	goto	l2968
  4457  0A61                     __end_of_putrsXLCD:	
  4458                           
  4459                           	psect	text17
  4460  0CE3                     __ptext17:	
  4461 ;; *************** function _WriteDataXLCD *****************
  4462 ;; Defined at:
  4463 ;;		line 110 in file "lcd_pic16.c"
  4464 ;; Parameters:    Size  Location     Type
  4465 ;;  data            1    wreg     unsigned char 
  4466 ;; Auto vars:     Size  Location     Type
  4467 ;;  data            1   32[BANK0 ] unsigned char 
  4468 ;; Return value:  Size  Location     Type
  4469 ;;                  1    wreg      void 
  4470 ;; Registers used:
  4471 ;;		wreg, status,2, status,0, pclath, cstack
  4472 ;; Tracked objects:
  4473 ;;		On entry : 0/0
  4474 ;;		On exit  : 0/0
  4475 ;;		Unchanged: 0/0
  4476 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4477 ;;      Params:         0       0       0       0       0
  4478 ;;      Locals:         0       1       0       0       0
  4479 ;;      Temps:          0       2       0       0       0
  4480 ;;      Totals:         0       3       0       0       0
  4481 ;;Total ram usage:        3 bytes
  4482 ;; Hardware stack levels used:    1
  4483 ;; Hardware stack levels required when called:    6
  4484 ;; This function calls:
  4485 ;;		_DelayFor18TCY
  4486 ;; This function is called by:
  4487 ;;		_putsXLCD
  4488 ;;		_putrsXLCD
  4489 ;; This function uses a non-reentrant model
  4490 ;;
  4491                           
  4492                           
  4493                           ;psect for function _WriteDataXLCD
  4494  0CE3                     _WriteDataXLCD:	
  4495                           
  4496                           ;incstack = 0
  4497 ;; hardware stack exceeded
  4498                           ; Regs used in _WriteDataXLCD: [wreg+status,2+status,0+pclath+cstack]
  4499                           ;WriteDataXLCD@data stored from wreg
  4500  0CE3  1283               	bcf	3,5	;RP0=0, select bank0
  4501  0CE4  1303               	bcf	3,6	;RP1=0, select bank0
  4502  0CE5  00C0               	movwf	WriteDataXLCD@data
  4503                           
  4504                           ;lcd_pic16.c: 110: void WriteDataXLCD(char data);lcd_pic16.c: 111: {;lcd_pic16.c: 125:  
      +                                 TRISB &= 0x0f;
  4505  0CE6  300F               	movlw	15
  4506  0CE7  00BE               	movwf	??_WriteDataXLCD
  4507  0CE8  083E               	movf	??_WriteDataXLCD,w
  4508  0CE9  1683               	bsf	3,5	;RP0=1, select bank1
  4509  0CEA  1303               	bcf	3,6	;RP1=0, select bank1
  4510  0CEB  0586               	andwf	6,f	;volatile
  4511                           
  4512                           ;lcd_pic16.c: 126:         PORTB &= 0x0f;
  4513  0CEC  300F               	movlw	15
  4514  0CED  1283               	bcf	3,5	;RP0=0, select bank0
  4515  0CEE  1303               	bcf	3,6	;RP1=0, select bank0
  4516  0CEF  00BE               	movwf	??_WriteDataXLCD
  4517  0CF0  083E               	movf	??_WriteDataXLCD,w
  4518  0CF1  0586               	andwf	6,f	;volatile
  4519                           
  4520                           ;lcd_pic16.c: 127:         PORTB |= data&0xf0;
  4521  0CF2  0840               	movf	WriteDataXLCD@data,w
  4522  0CF3  39F0               	andlw	240
  4523  0CF4  00BE               	movwf	??_WriteDataXLCD
  4524  0CF5  083E               	movf	??_WriteDataXLCD,w
  4525  0CF6  0486               	iorwf	6,f	;volatile
  4526                           
  4527                           ;lcd_pic16.c: 133:         PORTBbits.RB1 = 1;
  4528  0CF7  1486               	bsf	6,1	;volatile
  4529                           
  4530                           ;lcd_pic16.c: 134:         PORTBbits.RB2 = 0;
  4531  0CF8  1106               	bcf	6,2	;volatile
  4532                           
  4533                           ;lcd_pic16.c: 135:         DelayFor18TCY();
  4534  0CF9  120A  158A  209D  120A  158A  	fcall	_DelayFor18TCY
  4535                           
  4536                           ;lcd_pic16.c: 136:         PORTBbits.RB3 = 1;
  4537  0CFE  1283               	bcf	3,5	;RP0=0, select bank0
  4538  0CFF  1303               	bcf	3,6	;RP1=0, select bank0
  4539  0D00  1586               	bsf	6,3	;volatile
  4540                           
  4541                           ;lcd_pic16.c: 137:         DelayFor18TCY();
  4542  0D01  120A  158A  209D  120A  158A  	fcall	_DelayFor18TCY
  4543                           
  4544                           ;lcd_pic16.c: 138:         PORTBbits.RB3 = 0;
  4545  0D06  1283               	bcf	3,5	;RP0=0, select bank0
  4546  0D07  1303               	bcf	3,6	;RP1=0, select bank0
  4547  0D08  1186               	bcf	6,3	;volatile
  4548                           
  4549                           ;lcd_pic16.c: 140:         PORTB &= 0x0f;
  4550  0D09  300F               	movlw	15
  4551  0D0A  00BE               	movwf	??_WriteDataXLCD
  4552  0D0B  083E               	movf	??_WriteDataXLCD,w
  4553  0D0C  0586               	andwf	6,f	;volatile
  4554                           
  4555                           ;lcd_pic16.c: 141:         PORTB |= ((data<<4)&0xf0);
  4556  0D0D  0840               	movf	WriteDataXLCD@data,w
  4557  0D0E  00BE               	movwf	??_WriteDataXLCD
  4558  0D0F  3003               	movlw	3
  4559  0D10                     u1455:	
  4560  0D10  1003               	clrc
  4561  0D11  0DBE               	rlf	??_WriteDataXLCD,f
  4562  0D12  3EFF               	addlw	-1
  4563  0D13  1D03               	skipz
  4564  0D14  2D10               	goto	u1455
  4565  0D15  1003               	clrc
  4566  0D16  0D3E               	rlf	??_WriteDataXLCD,w
  4567  0D17  39F0               	andlw	240
  4568  0D18  00BF               	movwf	??_WriteDataXLCD+1
  4569  0D19  083F               	movf	??_WriteDataXLCD+1,w
  4570  0D1A  0486               	iorwf	6,f	;volatile
  4571                           
  4572                           ;lcd_pic16.c: 146:         DelayFor18TCY();
  4573  0D1B  120A  158A  209D  120A  158A  	fcall	_DelayFor18TCY
  4574                           
  4575                           ;lcd_pic16.c: 147:         PORTBbits.RB3 = 1;
  4576  0D20  1283               	bcf	3,5	;RP0=0, select bank0
  4577  0D21  1303               	bcf	3,6	;RP1=0, select bank0
  4578  0D22  1586               	bsf	6,3	;volatile
  4579                           
  4580                           ;lcd_pic16.c: 148:         DelayFor18TCY();
  4581  0D23  120A  158A  209D   	fcall	_DelayFor18TCY
  4582                           
  4583                           ;lcd_pic16.c: 149:         PORTBbits.RB3 = 0;
  4584  0D26  1283               	bcf	3,5	;RP0=0, select bank0
  4585  0D27  1303               	bcf	3,6	;RP1=0, select bank0
  4586  0D28  1186               	bcf	6,3	;volatile
  4587                           
  4588                           ;lcd_pic16.c: 151:         TRISB |= 0xf0;
  4589  0D29  30F0               	movlw	240
  4590  0D2A  00BE               	movwf	??_WriteDataXLCD
  4591  0D2B  083E               	movf	??_WriteDataXLCD,w
  4592  0D2C  1683               	bsf	3,5	;RP0=1, select bank1
  4593  0D2D  1303               	bcf	3,6	;RP1=0, select bank1
  4594  0D2E  0486               	iorwf	6,f	;volatile
  4595  0D2F  0008               	return
  4596  0D30                     __end_of_WriteDataXLCD:	
  4597                           
  4598                           	psect	text18
  4599  0DE1                     __ptext18:	
  4600 ;; *************** function _getData *****************
  4601 ;; Defined at:
  4602 ;;		line 31 in file "eeprom.c"
  4603 ;; Parameters:    Size  Location     Type
  4604 ;;		None
  4605 ;; Auto vars:     Size  Location     Type
  4606 ;;  aux1            1   35[BANK0 ] unsigned char 
  4607 ;;  aux0            1   34[BANK0 ] unsigned char 
  4608 ;; Return value:  Size  Location     Type
  4609 ;;                  1    wreg      void 
  4610 ;; Registers used:
  4611 ;;		wreg, status,2, btemp+1, pclath, cstack
  4612 ;; Tracked objects:
  4613 ;;		On entry : 0/0
  4614 ;;		On exit  : 0/0
  4615 ;;		Unchanged: 0/0
  4616 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4617 ;;      Params:         0       0       0       0       0
  4618 ;;      Locals:         0       2       0       0       0
  4619 ;;      Temps:          0       4       0       0       0
  4620 ;;      Totals:         0       6       0       0       0
  4621 ;;Total ram usage:        6 bytes
  4622 ;; Hardware stack levels used:    1
  4623 ;; Hardware stack levels required when called:    6
  4624 ;; This function calls:
  4625 ;;		_readEEPROM
  4626 ;; This function is called by:
  4627 ;;		_main
  4628 ;; This function uses a non-reentrant model
  4629 ;;
  4630                           
  4631                           
  4632                           ;psect for function _getData
  4633  0DE1                     _getData:	
  4634                           
  4635                           ;eeprom.c: 32:     unsigned char aux0 = readEEPROM(0);
  4636                           
  4637                           ;incstack = 0
  4638                           ; Regs used in _getData: [wreg+status,2+btemp+1+pclath+cstack]
  4639  0DE1  3000               	movlw	0
  4640  0DE2  120A  158A  20F1  120A  158A  	fcall	_readEEPROM
  4641  0DE7  1283               	bcf	3,5	;RP0=0, select bank0
  4642  0DE8  1303               	bcf	3,6	;RP1=0, select bank0
  4643  0DE9  00BE               	movwf	??_getData
  4644  0DEA  083E               	movf	??_getData,w
  4645  0DEB  00C2               	movwf	getData@aux0
  4646                           
  4647                           ;eeprom.c: 33:     unsigned char aux1 = readEEPROM(1);
  4648  0DEC  3001               	movlw	1
  4649  0DED  120A  158A  20F1  120A  158A  	fcall	_readEEPROM
  4650  0DF2  1283               	bcf	3,5	;RP0=0, select bank0
  4651  0DF3  1303               	bcf	3,6	;RP1=0, select bank0
  4652  0DF4  00BE               	movwf	??_getData
  4653  0DF5  083E               	movf	??_getData,w
  4654  0DF6  00C3               	movwf	getData@aux1
  4655                           
  4656                           ;eeprom.c: 34:     frequency = 0;
  4657  0DF7  01C4               	clrf	_frequency
  4658  0DF8  01C5               	clrf	_frequency+1
  4659                           
  4660                           ;eeprom.c: 35:     frequency = (aux1 << 8) | aux0;
  4661  0DF9  0842               	movf	getData@aux0,w
  4662  0DFA  00BE               	movwf	??_getData
  4663  0DFB  01BF               	clrf	??_getData+1
  4664  0DFC  0843               	movf	getData@aux1,w
  4665  0DFD  00C0               	movwf	??_getData+2
  4666  0DFE  01C1               	clrf	??_getData+3
  4667  0DFF  0840               	movf	??_getData+2,w
  4668  0E00  00C1               	movwf	??_getData+3
  4669  0E01  01C0               	clrf	??_getData+2
  4670  0E02  083E               	movf	??_getData,w
  4671  0E03  0440               	iorwf	??_getData+2,w
  4672  0E04  00C4               	movwf	_frequency
  4673  0E05  083F               	movf	??_getData+1,w
  4674  0E06  0441               	iorwf	??_getData+3,w
  4675  0E07  00C5               	movwf	_frequency+1
  4676                           
  4677                           ;eeprom.c: 36:     months = readEEPROM(2);
  4678  0E08  3002               	movlw	2
  4679  0E09  120A  158A  20F1  120A  158A  	fcall	_readEEPROM
  4680  0E0E  1283               	bcf	3,5	;RP0=0, select bank0
  4681  0E0F  1303               	bcf	3,6	;RP1=0, select bank0
  4682  0E10  00BE               	movwf	??_getData
  4683  0E11  083E               	movf	??_getData,w
  4684  0E12  00D0               	movwf	_months
  4685                           
  4686                           ;eeprom.c: 37:     days = readEEPROM(3);
  4687  0E13  3003               	movlw	3
  4688  0E14  120A  158A  20F1  120A  158A  	fcall	_readEEPROM
  4689  0E19  1283               	bcf	3,5	;RP0=0, select bank0
  4690  0E1A  1303               	bcf	3,6	;RP1=0, select bank0
  4691  0E1B  00BE               	movwf	??_getData
  4692  0E1C  083E               	movf	??_getData,w
  4693  0E1D  00CF               	movwf	_days
  4694                           
  4695                           ;eeprom.c: 38:     hours = readEEPROM(4);
  4696  0E1E  3004               	movlw	4
  4697  0E1F  120A  158A  20F1  120A  158A  	fcall	_readEEPROM
  4698  0E24  1283               	bcf	3,5	;RP0=0, select bank0
  4699  0E25  1303               	bcf	3,6	;RP1=0, select bank0
  4700  0E26  00BE               	movwf	??_getData
  4701  0E27  083E               	movf	??_getData,w
  4702  0E28  00CE               	movwf	_hours
  4703                           
  4704                           ;eeprom.c: 39:     minutes = readEEPROM(5);
  4705  0E29  3005               	movlw	5
  4706  0E2A  120A  158A  20F1  120A  158A  	fcall	_readEEPROM
  4707  0E2F  1283               	bcf	3,5	;RP0=0, select bank0
  4708  0E30  1303               	bcf	3,6	;RP1=0, select bank0
  4709  0E31  00BE               	movwf	??_getData
  4710  0E32  083E               	movf	??_getData,w
  4711  0E33  00CD               	movwf	_minutes
  4712                           
  4713                           ;eeprom.c: 40:     functionalStat = readEEPROM(6);
  4714  0E34  3006               	movlw	6
  4715  0E35  120A  158A  20F1   	fcall	_readEEPROM
  4716  0E38  1283               	bcf	3,5	;RP0=0, select bank0
  4717  0E39  1303               	bcf	3,6	;RP1=0, select bank0
  4718  0E3A  00BE               	movwf	??_getData
  4719  0E3B  083E               	movf	??_getData,w
  4720  0E3C  00C8               	movwf	_functionalStat
  4721  0E3D  0008               	return
  4722  0E3E                     __end_of_getData:	
  4723                           
  4724                           	psect	text19
  4725  08F1                     __ptext19:	
  4726 ;; *************** function _readEEPROM *****************
  4727 ;; Defined at:
  4728 ;;		line 7 in file "eeprom.c"
  4729 ;; Parameters:    Size  Location     Type
  4730 ;;  address         1    wreg     unsigned char 
  4731 ;; Auto vars:     Size  Location     Type
  4732 ;;  address         1   29[BANK0 ] unsigned char 
  4733 ;; Return value:  Size  Location     Type
  4734 ;;                  1    wreg      unsigned char 
  4735 ;; Registers used:
  4736 ;;		wreg
  4737 ;; Tracked objects:
  4738 ;;		On entry : 0/0
  4739 ;;		On exit  : 0/0
  4740 ;;		Unchanged: 0/0
  4741 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4742 ;;      Params:         0       0       0       0       0
  4743 ;;      Locals:         0       1       0       0       0
  4744 ;;      Temps:          0       0       0       0       0
  4745 ;;      Totals:         0       1       0       0       0
  4746 ;;Total ram usage:        1 bytes
  4747 ;; Hardware stack levels used:    1
  4748 ;; Hardware stack levels required when called:    5
  4749 ;; This function calls:
  4750 ;;		Nothing
  4751 ;; This function is called by:
  4752 ;;		_getData
  4753 ;; This function uses a non-reentrant model
  4754 ;;
  4755                           
  4756                           
  4757                           ;psect for function _readEEPROM
  4758  08F1                     _readEEPROM:	
  4759                           
  4760                           ;incstack = 0
  4761                           ; Regs used in _readEEPROM: [wreg]
  4762                           ;readEEPROM@address stored from wreg
  4763  08F1  1283               	bcf	3,5	;RP0=0, select bank0
  4764  08F2  1303               	bcf	3,6	;RP1=0, select bank0
  4765  08F3  00BD               	movwf	readEEPROM@address
  4766                           
  4767                           ;eeprom.c: 8:     EEADR = address;
  4768  08F4  083D               	movf	readEEPROM@address,w
  4769  08F5  1283               	bcf	3,5	;RP0=0, select bank2
  4770  08F6  1703               	bsf	3,6	;RP1=1, select bank2
  4771  08F7  008D               	movwf	13	;volatile
  4772                           
  4773                           ;eeprom.c: 9:     EECON1bits.EEPGD = 0;
  4774  08F8  1683               	bsf	3,5	;RP0=1, select bank3
  4775  08F9  1703               	bsf	3,6	;RP1=1, select bank3
  4776  08FA  138C               	bcf	12,7	;volsfr
  4777                           
  4778                           ;eeprom.c: 10:     EECON1bits.RD = 1;
  4779  08FB  140C               	bsf	12,0	;volsfr
  4780                           
  4781                           ;eeprom.c: 11:     return EEDATA;
  4782  08FC  1283               	bcf	3,5	;RP0=0, select bank2
  4783  08FD  1703               	bsf	3,6	;RP1=1, select bank2
  4784  08FE  080C               	movf	12,w	;volatile
  4785  08FF  0008               	return
  4786  0900                     __end_of_readEEPROM:	
  4787                           
  4788                           	psect	text20
  4789  0A61                     __ptext20:	
  4790 ;; *************** function _config *****************
  4791 ;; Defined at:
  4792 ;;		line 42 in file "main.c"
  4793 ;; Parameters:    Size  Location     Type
  4794 ;;		None
  4795 ;; Auto vars:     Size  Location     Type
  4796 ;;		None
  4797 ;; Return value:  Size  Location     Type
  4798 ;;                  1    wreg      void 
  4799 ;; Registers used:
  4800 ;;		wreg, status,2, status,0, pclath, cstack
  4801 ;; Tracked objects:
  4802 ;;		On entry : 0/0
  4803 ;;		On exit  : 0/0
  4804 ;;		Unchanged: 0/0
  4805 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4806 ;;      Params:         0       0       0       0       0
  4807 ;;      Locals:         0       0       0       0       0
  4808 ;;      Temps:          0       0       0       0       0
  4809 ;;      Totals:         0       0       0       0       0
  4810 ;;Total ram usage:        0 bytes
  4811 ;; Hardware stack levels used:    1
  4812 ;; Hardware stack levels required when called:    9
  4813 ;; This function calls:
  4814 ;;		_initLCD
  4815 ;;		_setTransStat
  4816 ;; This function is called by:
  4817 ;;		_main
  4818 ;; This function uses a non-reentrant model
  4819 ;;
  4820                           
  4821                           
  4822                           ;psect for function _config
  4823  0A61                     _config:	
  4824                           
  4825                           ;main.c: 44:     INTCON = 0b01000000;
  4826                           
  4827                           ;incstack = 0
  4828 ;; hardware stack exceeded
  4829                           ; Regs used in _config: [wreg+status,2+status,0+pclath+cstack]
  4830  0A61  3040               	movlw	64
  4831  0A62  008B               	movwf	11	;volatile
  4832                           
  4833                           ;main.c: 45:     PIE1 = 0b00000001;
  4834  0A63  3001               	movlw	1
  4835  0A64  1683               	bsf	3,5	;RP0=1, select bank1
  4836  0A65  1303               	bcf	3,6	;RP1=0, select bank1
  4837  0A66  008C               	movwf	12	;volatile
  4838                           
  4839                           ;main.c: 47:     TRISA = 0b00111000;
  4840  0A67  3038               	movlw	56
  4841  0A68  0085               	movwf	5	;volatile
  4842                           
  4843                           ;main.c: 48:     TRISB = 0b00000000;
  4844  0A69  0186               	clrf	6	;volatile
  4845                           
  4846                           ;main.c: 49:     TRISC = 0b00000000;
  4847  0A6A  0187               	clrf	7	;volatile
  4848                           
  4849                           ;main.c: 50:     PORTA = 0x00;
  4850  0A6B  1283               	bcf	3,5	;RP0=0, select bank0
  4851  0A6C  1303               	bcf	3,6	;RP1=0, select bank0
  4852  0A6D  0185               	clrf	5	;volatile
  4853                           
  4854                           ;main.c: 51:     PORTB = 0x00;
  4855  0A6E  0186               	clrf	6	;volatile
  4856                           
  4857                           ;main.c: 52:     PORTC = 0x0E;
  4858  0A6F  300E               	movlw	14
  4859  0A70  0087               	movwf	7	;volatile
  4860                           
  4861                           ;main.c: 54:     T1CON = 0b00010001;
  4862  0A71  3011               	movlw	17
  4863  0A72  0090               	movwf	16	;volatile
  4864                           
  4865                           ;main.c: 56:     ADCON0 = 0b00000000;
  4866  0A73  019F               	clrf	31	;volatile
  4867                           
  4868                           ;main.c: 57:     ADCON1 = 0b00000000;
  4869  0A74  1683               	bsf	3,5	;RP0=1, select bank1
  4870  0A75  1303               	bcf	3,6	;RP1=0, select bank1
  4871  0A76  019F               	clrf	31	;volatile
  4872                           
  4873                           ;main.c: 58:     ANSEL = 0b00000000;
  4874  0A77  1683               	bsf	3,5	;RP0=1, select bank3
  4875  0A78  1703               	bsf	3,6	;RP1=1, select bank3
  4876  0A79  0188               	clrf	8	;volatile
  4877                           
  4878                           ;main.c: 59:     ANSELH = 0b00000000;
  4879  0A7A  0189               	clrf	9	;volatile
  4880                           
  4881                           ;main.c: 61:     PORTCbits.RC0 = 0;
  4882  0A7B  1283               	bcf	3,5	;RP0=0, select bank0
  4883  0A7C  1303               	bcf	3,6	;RP1=0, select bank0
  4884  0A7D  1007               	bcf	7,0	;volatile
  4885                           
  4886                           ;main.c: 62:     PORTCbits.RC4 = 0;
  4887  0A7E  1207               	bcf	7,4	;volatile
  4888                           
  4889                           ;main.c: 64:     initLCD();
  4890  0A7F  120A  158A  220F  120A  158A  	fcall	_initLCD
  4891                           
  4892                           ;main.c: 66:     T1CONbits.TMR1ON = 1;
  4893  0A84  1283               	bcf	3,5	;RP0=0, select bank0
  4894  0A85  1303               	bcf	3,6	;RP1=0, select bank0
  4895  0A86  1410               	bsf	16,0	;volatile
  4896                           
  4897                           ;main.c: 67:     INTCONbits.GIE = 1;
  4898  0A87  178B               	bsf	11,7	;volatile
  4899                           
  4900                           ;main.c: 69:     setTransStat(0);
  4901  0A88  3000               	movlw	0
  4902  0A89  00BD               	movwf	setTransStat@stat
  4903  0A8A  00BE               	movwf	setTransStat@stat+1
  4904  0A8B  120A  118A  26EA   	fcall	_setTransStat
  4905  0A8E  0008               	return
  4906  0A8F                     __end_of_config:	
  4907                           
  4908                           	psect	text21
  4909  06EA                     __ptext21:	
  4910 ;; *************** function _setTransStat *****************
  4911 ;; Defined at:
  4912 ;;		line 228 in file "main.c"
  4913 ;; Parameters:    Size  Location     Type
  4914 ;;  stat            2   29[BANK0 ] int 
  4915 ;; Auto vars:     Size  Location     Type
  4916 ;;		None
  4917 ;; Return value:  Size  Location     Type
  4918 ;;                  1    wreg      void 
  4919 ;; Registers used:
  4920 ;;		wreg, status,2, status,0
  4921 ;; Tracked objects:
  4922 ;;		On entry : 0/0
  4923 ;;		On exit  : 0/0
  4924 ;;		Unchanged: 0/0
  4925 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4926 ;;      Params:         0       2       0       0       0
  4927 ;;      Locals:         0       0       0       0       0
  4928 ;;      Temps:          0       2       0       0       0
  4929 ;;      Totals:         0       4       0       0       0
  4930 ;;Total ram usage:        4 bytes
  4931 ;; Hardware stack levels used:    1
  4932 ;; Hardware stack levels required when called:    5
  4933 ;; This function calls:
  4934 ;;		Nothing
  4935 ;; This function is called by:
  4936 ;;		_main
  4937 ;;		_config
  4938 ;; This function uses a non-reentrant model
  4939 ;;
  4940                           
  4941                           
  4942                           ;psect for function _setTransStat
  4943  06EA                     _setTransStat:	
  4944                           
  4945                           ;main.c: 229:     if(stat == 1){
  4946                           
  4947                           ;incstack = 0
  4948                           ; Regs used in _setTransStat: [wreg+status,2+status,0]
  4949  06EA  1283               	bcf	3,5	;RP0=0, select bank0
  4950  06EB  1303               	bcf	3,6	;RP1=0, select bank0
  4951  06EC  033D               	decf	setTransStat@stat,w
  4952  06ED  043E               	iorwf	setTransStat@stat+1,w
  4953  06EE  1D03               	btfss	3,2
  4954  06EF  2EFD               	goto	l271
  4955                           
  4956                           ;main.c: 230:         PORTCbits.RC0 = 1;
  4957  06F0  1407               	bsf	7,0	;volatile
  4958                           
  4959                           ;main.c: 231:         PORTCbits.RC4 = 0;
  4960  06F1  1207               	bcf	7,4	;volatile
  4961  06F2                     l2944:	
  4962                           
  4963                           ;main.c: 232:         _delay((unsigned long)((2)*(4000000/4000.0)));
  4964  06F2  3003               	movlw	3
  4965  06F3  1283               	bcf	3,5	;RP0=0, select bank0
  4966  06F4  1303               	bcf	3,6	;RP1=0, select bank0
  4967  06F5  00C0               	movwf	??_setTransStat+1
  4968  06F6  3097               	movlw	151
  4969  06F7  00BF               	movwf	??_setTransStat
  4970  06F8                     u3727:	
  4971  06F8  0BBF               	decfsz	??_setTransStat,f
  4972  06F9  2EF8               	goto	u3727
  4973  06FA  0BC0               	decfsz	??_setTransStat+1,f
  4974  06FB  2EF8               	goto	u3727
  4975                           
  4976                           ;main.c: 233:     }else{
  4977  06FC  0008               	return
  4978  06FD                     l271:	
  4979                           
  4980                           ;main.c: 234:         PORTCbits.RC0 = 0;
  4981  06FD  1007               	bcf	7,0	;volatile
  4982                           
  4983                           ;main.c: 235:         PORTCbits.RC4 = 1;
  4984  06FE  1607               	bsf	7,4	;volatile
  4985  06FF  2EF2               	goto	l2944
  4986  0700                     __end_of_setTransStat:	
  4987                           
  4988                           	psect	text22
  4989  0A0F                     __ptext22:	
  4990 ;; *************** function _initLCD *****************
  4991 ;; Defined at:
  4992 ;;		line 5 in file "lcd.c"
  4993 ;; Parameters:    Size  Location     Type
  4994 ;;		None
  4995 ;; Auto vars:     Size  Location     Type
  4996 ;;		None
  4997 ;; Return value:  Size  Location     Type
  4998 ;;                  1    wreg      void 
  4999 ;; Registers used:
  5000 ;;		wreg, status,2, status,0, pclath, cstack
  5001 ;; Tracked objects:
  5002 ;;		On entry : 0/0
  5003 ;;		On exit  : 0/0
  5004 ;;		Unchanged: 0/0
  5005 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5006 ;;      Params:         0       0       0       0       0
  5007 ;;      Locals:         0       0       0       0       0
  5008 ;;      Temps:          0       0       2       0       0
  5009 ;;      Totals:         0       0       2       0       0
  5010 ;;Total ram usage:        2 bytes
  5011 ;; Hardware stack levels used:    1
  5012 ;; Hardware stack levels required when called:    8
  5013 ;; This function calls:
  5014 ;;		_OpenXLCD
  5015 ;;		_SendCMDLCD
  5016 ;; This function is called by:
  5017 ;;		_config
  5018 ;; This function uses a non-reentrant model
  5019 ;;
  5020                           
  5021                           
  5022                           ;psect for function _initLCD
  5023  0A0F                     _initLCD:	
  5024                           
  5025                           ;lcd.c: 6:     OpenXLCD(0b00101100 & 0b00111000);
  5026                           
  5027                           ;incstack = 0
  5028 ;; hardware stack exceeded
  5029                           ; Regs used in _initLCD: [wreg+status,2+status,0+pclath+cstack]
  5030  0A0F  3028               	movlw	40
  5031  0A10  120A  118A  2632  120A  158A  	fcall	_OpenXLCD
  5032                           
  5033                           ;lcd.c: 7:     _delay((unsigned long)((100)*(4000000/4000.0)));
  5034  0A15  3082               	movlw	130
  5035  0A16  1683               	bsf	3,5	;RP0=1, select bank1
  5036  0A17  1303               	bcf	3,6	;RP1=0, select bank1
  5037  0A18  00C4               	movwf	(??_initLCD^(0+128)+1)
  5038  0A19  30DD               	movlw	221
  5039  0A1A  00C3               	movwf	??_initLCD^(0+128)
  5040  0A1B                     u3737:	
  5041  0A1B  0BC3               	decfsz	??_initLCD^(0+128),f
  5042  0A1C  2A1B               	goto	u3737
  5043  0A1D  0BC4               	decfsz	(??_initLCD^(0+128)+1),f
  5044  0A1E  2A1B               	goto	u3737
  5045                           
  5046                           ;lcd.c: 8:     SendCMDLCD(0b00001101);
  5047  0A1F  300D               	movlw	13
  5048  0A20  120A  158A  2121  120A  158A  	fcall	_SendCMDLCD
  5049                           
  5050                           ;lcd.c: 9:     SendCMDLCD(0b00000110);
  5051  0A25  3006               	movlw	6
  5052  0A26  120A  158A  2121  120A  158A  	fcall	_SendCMDLCD
  5053                           
  5054                           ;lcd.c: 10:     _delay((unsigned long)((50)*(4000000/4000.0)));
  5055  0A2B  3041               	movlw	65
  5056  0A2C  1683               	bsf	3,5	;RP0=1, select bank1
  5057  0A2D  1303               	bcf	3,6	;RP1=0, select bank1
  5058  0A2E  00C4               	movwf	(??_initLCD^(0+128)+1)
  5059  0A2F  30ED               	movlw	237
  5060  0A30  00C3               	movwf	??_initLCD^(0+128)
  5061  0A31                     u3747:	
  5062  0A31  0BC3               	decfsz	??_initLCD^(0+128),f
  5063  0A32  2A31               	goto	u3747
  5064  0A33  0BC4               	decfsz	(??_initLCD^(0+128)+1),f
  5065  0A34  2A31               	goto	u3747
  5066  0A35  2A36               	nop2
  5067  0A36  0008               	return
  5068  0A37                     __end_of_initLCD:	
  5069                           
  5070                           	psect	text23
  5071  0921                     __ptext23:	
  5072 ;; *************** function _SendCMDLCD *****************
  5073 ;; Defined at:
  5074 ;;		line 27 in file "lcd.c"
  5075 ;; Parameters:    Size  Location     Type
  5076 ;;  CMD             1    wreg     unsigned char 
  5077 ;; Auto vars:     Size  Location     Type
  5078 ;;  CMD             1   33[BANK0 ] unsigned char 
  5079 ;; Return value:  Size  Location     Type
  5080 ;;                  1    wreg      void 
  5081 ;; Registers used:
  5082 ;;		wreg, status,2, status,0, pclath, cstack
  5083 ;; Tracked objects:
  5084 ;;		On entry : 0/0
  5085 ;;		On exit  : 0/0
  5086 ;;		Unchanged: 0/0
  5087 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5088 ;;      Params:         0       0       0       0       0
  5089 ;;      Locals:         0       1       0       0       0
  5090 ;;      Temps:          0       0       0       0       0
  5091 ;;      Totals:         0       1       0       0       0
  5092 ;;Total ram usage:        1 bytes
  5093 ;; Hardware stack levels used:    1
  5094 ;; Hardware stack levels required when called:    7
  5095 ;; This function calls:
  5096 ;;		_BusyXLCD
  5097 ;;		_WriteCmdXLCD
  5098 ;; This function is called by:
  5099 ;;		_initLCD
  5100 ;; This function uses a non-reentrant model
  5101 ;;
  5102                           
  5103                           
  5104                           ;psect for function _SendCMDLCD
  5105  0921                     _SendCMDLCD:	
  5106                           
  5107                           ;incstack = 0
  5108 ;; hardware stack exceeded
  5109                           ; Regs used in _SendCMDLCD: [wreg+status,2+status,0+pclath+cstack]
  5110                           ;SendCMDLCD@CMD stored from wreg
  5111  0921  1283               	bcf	3,5	;RP0=0, select bank0
  5112  0922  1303               	bcf	3,6	;RP1=0, select bank0
  5113  0923  00C1               	movwf	SendCMDLCD@CMD
  5114  0924                     l2722:	
  5115                           ;lcd.c: 28:     while(BusyXLCD())continue;
  5116                           
  5117  0924  120A  158A  20C9  120A  158A  	fcall	_BusyXLCD
  5118  0929  3A00               	xorlw	0
  5119  092A  1D03               	skipz
  5120  092B  2924               	goto	l2722
  5121                           
  5122                           ;lcd.c: 29:     WriteCmdXLCD(CMD);
  5123  092C  1283               	bcf	3,5	;RP0=0, select bank0
  5124  092D  1303               	bcf	3,6	;RP1=0, select bank0
  5125  092E  0841               	movf	SendCMDLCD@CMD,w
  5126  092F  120A  158A  2496   	fcall	_WriteCmdXLCD
  5127  0932  0008               	return
  5128  0933                     __end_of_SendCMDLCD:	
  5129                           
  5130                           	psect	text24
  5131  0632                     __ptext24:	
  5132 ;; *************** function _OpenXLCD *****************
  5133 ;; Defined at:
  5134 ;;		line 40 in file "lcd_pic16.c"
  5135 ;; Parameters:    Size  Location     Type
  5136 ;;  lcdtype         1    wreg     unsigned char 
  5137 ;; Auto vars:     Size  Location     Type
  5138 ;;  lcdtype         1   35[BANK0 ] unsigned char 
  5139 ;; Return value:  Size  Location     Type
  5140 ;;                  1    wreg      void 
  5141 ;; Registers used:
  5142 ;;		wreg, status,2, status,0, pclath, cstack
  5143 ;; Tracked objects:
  5144 ;;		On entry : 0/0
  5145 ;;		On exit  : 0/0
  5146 ;;		Unchanged: 0/0
  5147 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5148 ;;      Params:         0       0       0       0       0
  5149 ;;      Locals:         0       1       0       0       0
  5150 ;;      Temps:          0       2       0       0       0
  5151 ;;      Totals:         0       3       0       0       0
  5152 ;;Total ram usage:        3 bytes
  5153 ;; Hardware stack levels used:    1
  5154 ;; Hardware stack levels required when called:    7
  5155 ;; This function calls:
  5156 ;;		_BusyXLCD
  5157 ;;		_DelayPORXLCD
  5158 ;;		_SetDDRamAddr
  5159 ;;		_WriteCmdXLCD
  5160 ;; This function is called by:
  5161 ;;		_initLCD
  5162 ;; This function uses a non-reentrant model
  5163 ;;
  5164                           
  5165                           
  5166                           ;psect for function _OpenXLCD
  5167  0632                     _OpenXLCD:	
  5168                           
  5169                           ;incstack = 0
  5170 ;; hardware stack exceeded
  5171                           ; Regs used in _OpenXLCD: [wreg+status,2+status,0+pclath+cstack]
  5172                           ;OpenXLCD@lcdtype stored from wreg
  5173  0632  1283               	bcf	3,5	;RP0=0, select bank0
  5174  0633  1303               	bcf	3,6	;RP1=0, select bank0
  5175  0634  00C3               	movwf	OpenXLCD@lcdtype
  5176                           
  5177                           ;lcd_pic16.c: 40: void OpenXLCD(unsigned char lcdtype);lcd_pic16.c: 41: {;lcd_pic16.c: 4
      +                          7:         PORTB &= 0x0f;
  5178  0635  300F               	movlw	15
  5179  0636  00C1               	movwf	??_OpenXLCD
  5180  0637  0841               	movf	??_OpenXLCD,w
  5181  0638  0586               	andwf	6,f	;volatile
  5182                           
  5183                           ;lcd_pic16.c: 48:         TRISB &= 0x0F;
  5184  0639  300F               	movlw	15
  5185  063A  00C1               	movwf	??_OpenXLCD
  5186  063B  0841               	movf	??_OpenXLCD,w
  5187  063C  1683               	bsf	3,5	;RP0=1, select bank1
  5188  063D  1303               	bcf	3,6	;RP1=0, select bank1
  5189  063E  0586               	andwf	6,f	;volatile
  5190                           
  5191                           ;lcd_pic16.c: 54:         TRISBbits.TRISB2 = 0;
  5192  063F  1106               	bcf	6,2	;volatile
  5193                           
  5194                           ;lcd_pic16.c: 55:         TRISBbits.TRISB1 = 0;
  5195  0640  1086               	bcf	6,1	;volatile
  5196                           
  5197                           ;lcd_pic16.c: 56:         TRISBbits.TRISB3 = 0;
  5198  0641  1186               	bcf	6,3	;volatile
  5199                           
  5200                           ;lcd_pic16.c: 57:         PORTBbits.RB2 = 0;
  5201  0642  1283               	bcf	3,5	;RP0=0, select bank0
  5202  0643  1303               	bcf	3,6	;RP1=0, select bank0
  5203  0644  1106               	bcf	6,2	;volatile
  5204                           
  5205                           ;lcd_pic16.c: 58:         PORTBbits.RB1 = 0;
  5206  0645  1086               	bcf	6,1	;volatile
  5207                           
  5208                           ;lcd_pic16.c: 59:         PORTBbits.RB3 = 0;
  5209  0646  1186               	bcf	6,3	;volatile
  5210                           
  5211                           ;lcd_pic16.c: 62:         DelayPORXLCD();
  5212  0647  120A  158A  20BD  120A  118A  	fcall	_DelayPORXLCD
  5213                           
  5214                           ;lcd_pic16.c: 64:        WriteCmdXLCD(0x30);
  5215  064C  3030               	movlw	48
  5216  064D  120A  158A  2496  120A  118A  	fcall	_WriteCmdXLCD
  5217                           
  5218                           ;lcd_pic16.c: 65:          _delay((unsigned long)((5)*(4000000/4000.0)));
  5219  0652  3007               	movlw	7
  5220  0653  1283               	bcf	3,5	;RP0=0, select bank0
  5221  0654  1303               	bcf	3,6	;RP1=0, select bank0
  5222  0655  00C2               	movwf	??_OpenXLCD+1
  5223  0656  307C               	movlw	124
  5224  0657  00C1               	movwf	??_OpenXLCD
  5225  0658                     u3757:	
  5226  0658  0BC1               	decfsz	??_OpenXLCD,f
  5227  0659  2E58               	goto	u3757
  5228  065A  0BC2               	decfsz	??_OpenXLCD+1,f
  5229  065B  2E58               	goto	u3757
  5230  065C  0000               	nop
  5231                           
  5232                           ;lcd_pic16.c: 67:        WriteCmdXLCD(0x30);
  5233  065D  3030               	movlw	48
  5234  065E  120A  158A  2496  120A  118A  	fcall	_WriteCmdXLCD
  5235                           
  5236                           ;lcd_pic16.c: 68:          _delay((unsigned long)((1)*(4000000/4000.0)));
  5237  0663  30C7               	movlw	199
  5238  0664  1283               	bcf	3,5	;RP0=0, select bank0
  5239  0665  1303               	bcf	3,6	;RP1=0, select bank0
  5240  0666  00C1               	movwf	??_OpenXLCD
  5241  0667                     u3767:	
  5242  0667  2E68               	nop2
  5243  0668  0BC1               	decfsz	??_OpenXLCD,f
  5244  0669  2E67               	goto	u3767
  5245  066A  2E6B               	nop2
  5246                           
  5247                           ;lcd_pic16.c: 71:        WriteCmdXLCD(0x32);
  5248  066B  3032               	movlw	50
  5249  066C  120A  158A  2496  120A  118A  	fcall	_WriteCmdXLCD
  5250  0671                     l2684:	
  5251                           ;lcd_pic16.c: 72:       while( BusyXLCD() );
  5252                           
  5253  0671  120A  158A  20C9  120A  118A  	fcall	_BusyXLCD
  5254  0676  3A00               	xorlw	0
  5255  0677  1D03               	skipz
  5256  0678  2E71               	goto	l2684
  5257  0679                     l2686:	
  5258  0679  120A  158A  20C9  120A  118A  	fcall	_BusyXLCD
  5259  067E  3A00               	xorlw	0
  5260  067F  1D03               	skipz
  5261  0680  2E79               	goto	l2686
  5262                           
  5263                           ;lcd_pic16.c: 78:         WriteCmdXLCD(lcdtype);
  5264  0681  1283               	bcf	3,5	;RP0=0, select bank0
  5265  0682  1303               	bcf	3,6	;RP1=0, select bank0
  5266  0683  0843               	movf	OpenXLCD@lcdtype,w
  5267  0684  120A  158A  2496  120A  118A  	fcall	_WriteCmdXLCD
  5268  0689                     l2690:	
  5269                           ;lcd_pic16.c: 81:         while(BusyXLCD());
  5270                           
  5271  0689  120A  158A  20C9  120A  118A  	fcall	_BusyXLCD
  5272  068E  3A00               	xorlw	0
  5273  068F  1D03               	skipz
  5274  0690  2E89               	goto	l2690
  5275                           
  5276                           ;lcd_pic16.c: 82:         WriteCmdXLCD(0b00001011&0b00001101&0b00001110);
  5277  0691  3008               	movlw	8
  5278  0692  120A  158A  2496  120A  118A  	fcall	_WriteCmdXLCD
  5279  0697                     l2694:	
  5280                           ;lcd_pic16.c: 83:         while(BusyXLCD());
  5281                           
  5282  0697  120A  158A  20C9  120A  118A  	fcall	_BusyXLCD
  5283  069C  3A00               	xorlw	0
  5284  069D  1D03               	skipz
  5285  069E  2E97               	goto	l2694
  5286                           
  5287                           ;lcd_pic16.c: 84:         WriteCmdXLCD(0b00001111&0b00001111&0b00001111);
  5288  069F  300F               	movlw	15
  5289  06A0  120A  158A  2496  120A  118A  	fcall	_WriteCmdXLCD
  5290  06A5                     l2698:	
  5291                           ;lcd_pic16.c: 87:         while(BusyXLCD());
  5292                           
  5293  06A5  120A  158A  20C9  120A  118A  	fcall	_BusyXLCD
  5294  06AA  3A00               	xorlw	0
  5295  06AB  1D03               	skipz
  5296  06AC  2EA5               	goto	l2698
  5297                           
  5298                           ;lcd_pic16.c: 88:         WriteCmdXLCD(0x01);
  5299  06AD  3001               	movlw	1
  5300  06AE  120A  158A  2496  120A  118A  	fcall	_WriteCmdXLCD
  5301  06B3                     l2702:	
  5302                           ;lcd_pic16.c: 91:         while(BusyXLCD());
  5303                           
  5304  06B3  120A  158A  20C9  120A  118A  	fcall	_BusyXLCD
  5305  06B8  3A00               	xorlw	0
  5306  06B9  1D03               	skipz
  5307  06BA  2EB3               	goto	l2702
  5308                           
  5309                           ;lcd_pic16.c: 92:         WriteCmdXLCD(0b00000101);
  5310  06BB  3005               	movlw	5
  5311  06BC  120A  158A  2496  120A  118A  	fcall	_WriteCmdXLCD
  5312  06C1                     l2706:	
  5313                           ;lcd_pic16.c: 94:    while(BusyXLCD());
  5314                           
  5315  06C1  120A  158A  20C9  120A  118A  	fcall	_BusyXLCD
  5316  06C6  3A00               	xorlw	0
  5317  06C7  1D03               	skipz
  5318  06C8  2EC1               	goto	l2706
  5319                           
  5320                           ;lcd_pic16.c: 95:         WriteCmdXLCD(0x06);
  5321  06C9  3006               	movlw	6
  5322  06CA  120A  158A  2496  120A  118A  	fcall	_WriteCmdXLCD
  5323  06CF                     l2710:	
  5324                           ;lcd_pic16.c: 97:         while(BusyXLCD());
  5325                           
  5326  06CF  120A  158A  20C9  120A  118A  	fcall	_BusyXLCD
  5327  06D4  3A00               	xorlw	0
  5328  06D5  1D03               	skipz
  5329  06D6  2ECF               	goto	l2710
  5330                           
  5331                           ;lcd_pic16.c: 98:         SetDDRamAddr(0x80);
  5332  06D7  3080               	movlw	128
  5333  06D8  120A  118A  27AE  120A  118A  	fcall	_SetDDRamAddr
  5334  06DD                     l2714:	
  5335                           ;lcd_pic16.c: 100:         while(BusyXLCD());
  5336                           
  5337  06DD  120A  158A  20C9  120A  118A  	fcall	_BusyXLCD
  5338  06E2  3A00               	xorlw	0
  5339  06E3  1D03               	skipz
  5340  06E4  2EDD               	goto	l2714
  5341                           
  5342                           ;lcd_pic16.c: 101:         WriteCmdXLCD(0b00001101);
  5343  06E5  300D               	movlw	13
  5344  06E6  120A  158A  2496   	fcall	_WriteCmdXLCD
  5345  06E9  0008               	return
  5346  06EA                     __end_of_OpenXLCD:	
  5347                           
  5348                           	psect	text25
  5349  0C96                     __ptext25:	
  5350 ;; *************** function _WriteCmdXLCD *****************
  5351 ;; Defined at:
  5352 ;;		line 164 in file "lcd_pic16.c"
  5353 ;; Parameters:    Size  Location     Type
  5354 ;;  cmd             1    wreg     unsigned char 
  5355 ;; Auto vars:     Size  Location     Type
  5356 ;;  cmd             1   32[BANK0 ] unsigned char 
  5357 ;; Return value:  Size  Location     Type
  5358 ;;                  1    wreg      void 
  5359 ;; Registers used:
  5360 ;;		wreg, status,2, status,0, pclath, cstack
  5361 ;; Tracked objects:
  5362 ;;		On entry : 0/0
  5363 ;;		On exit  : 0/0
  5364 ;;		Unchanged: 0/0
  5365 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5366 ;;      Params:         0       0       0       0       0
  5367 ;;      Locals:         0       1       0       0       0
  5368 ;;      Temps:          0       2       0       0       0
  5369 ;;      Totals:         0       3       0       0       0
  5370 ;;Total ram usage:        3 bytes
  5371 ;; Hardware stack levels used:    1
  5372 ;; Hardware stack levels required when called:    6
  5373 ;; This function calls:
  5374 ;;		_DelayFor18TCY
  5375 ;; This function is called by:
  5376 ;;		_OpenXLCD
  5377 ;;		_SendCMDLCD
  5378 ;; This function uses a non-reentrant model
  5379 ;;
  5380                           
  5381                           
  5382                           ;psect for function _WriteCmdXLCD
  5383  0C96                     _WriteCmdXLCD:	
  5384                           
  5385                           ;incstack = 0
  5386 ;; hardware stack exceeded
  5387                           ; Regs used in _WriteCmdXLCD: [wreg+status,2+status,0+pclath+cstack]
  5388                           ;WriteCmdXLCD@cmd stored from wreg
  5389  0C96  1283               	bcf	3,5	;RP0=0, select bank0
  5390  0C97  1303               	bcf	3,6	;RP1=0, select bank0
  5391  0C98  00C0               	movwf	WriteCmdXLCD@cmd
  5392                           
  5393                           ;lcd_pic16.c: 178:         TRISB &= 0x0f;
  5394  0C99  300F               	movlw	15
  5395  0C9A  00BE               	movwf	??_WriteCmdXLCD
  5396  0C9B  083E               	movf	??_WriteCmdXLCD,w
  5397  0C9C  1683               	bsf	3,5	;RP0=1, select bank1
  5398  0C9D  1303               	bcf	3,6	;RP1=0, select bank1
  5399  0C9E  0586               	andwf	6,f	;volatile
  5400                           
  5401                           ;lcd_pic16.c: 179:         PORTB &= 0x0f;
  5402  0C9F  300F               	movlw	15
  5403  0CA0  1283               	bcf	3,5	;RP0=0, select bank0
  5404  0CA1  1303               	bcf	3,6	;RP1=0, select bank0
  5405  0CA2  00BE               	movwf	??_WriteCmdXLCD
  5406  0CA3  083E               	movf	??_WriteCmdXLCD,w
  5407  0CA4  0586               	andwf	6,f	;volatile
  5408                           
  5409                           ;lcd_pic16.c: 180:         PORTB |= cmd&0xf0;
  5410  0CA5  0840               	movf	WriteCmdXLCD@cmd,w
  5411  0CA6  39F0               	andlw	240
  5412  0CA7  00BE               	movwf	??_WriteCmdXLCD
  5413  0CA8  083E               	movf	??_WriteCmdXLCD,w
  5414  0CA9  0486               	iorwf	6,f	;volatile
  5415                           
  5416                           ;lcd_pic16.c: 186:         PORTBbits.RB2 = 0;
  5417  0CAA  1106               	bcf	6,2	;volatile
  5418                           
  5419                           ;lcd_pic16.c: 187:         PORTBbits.RB1 = 0;
  5420  0CAB  1086               	bcf	6,1	;volatile
  5421                           
  5422                           ;lcd_pic16.c: 188:         DelayFor18TCY();
  5423  0CAC  120A  158A  209D  120A  158A  	fcall	_DelayFor18TCY
  5424                           
  5425                           ;lcd_pic16.c: 189:         PORTBbits.RB3 = 1;
  5426  0CB1  1283               	bcf	3,5	;RP0=0, select bank0
  5427  0CB2  1303               	bcf	3,6	;RP1=0, select bank0
  5428  0CB3  1586               	bsf	6,3	;volatile
  5429                           
  5430                           ;lcd_pic16.c: 190:         DelayFor18TCY();
  5431  0CB4  120A  158A  209D  120A  158A  	fcall	_DelayFor18TCY
  5432                           
  5433                           ;lcd_pic16.c: 191:         PORTBbits.RB3 = 0;
  5434  0CB9  1283               	bcf	3,5	;RP0=0, select bank0
  5435  0CBA  1303               	bcf	3,6	;RP1=0, select bank0
  5436  0CBB  1186               	bcf	6,3	;volatile
  5437                           
  5438                           ;lcd_pic16.c: 193:         PORTB &= 0x0f;
  5439  0CBC  300F               	movlw	15
  5440  0CBD  00BE               	movwf	??_WriteCmdXLCD
  5441  0CBE  083E               	movf	??_WriteCmdXLCD,w
  5442  0CBF  0586               	andwf	6,f	;volatile
  5443                           
  5444                           ;lcd_pic16.c: 194:         PORTB |= (cmd<<4)&0xf0;
  5445  0CC0  0840               	movf	WriteCmdXLCD@cmd,w
  5446  0CC1  00BE               	movwf	??_WriteCmdXLCD
  5447  0CC2  3003               	movlw	3
  5448  0CC3                     u1445:	
  5449  0CC3  1003               	clrc
  5450  0CC4  0DBE               	rlf	??_WriteCmdXLCD,f
  5451  0CC5  3EFF               	addlw	-1
  5452  0CC6  1D03               	skipz
  5453  0CC7  2CC3               	goto	u1445
  5454  0CC8  1003               	clrc
  5455  0CC9  0D3E               	rlf	??_WriteCmdXLCD,w
  5456  0CCA  39F0               	andlw	240
  5457  0CCB  00BF               	movwf	??_WriteCmdXLCD+1
  5458  0CCC  083F               	movf	??_WriteCmdXLCD+1,w
  5459  0CCD  0486               	iorwf	6,f	;volatile
  5460                           
  5461                           ;lcd_pic16.c: 199:         DelayFor18TCY();
  5462  0CCE  120A  158A  209D  120A  158A  	fcall	_DelayFor18TCY
  5463                           
  5464                           ;lcd_pic16.c: 200:         PORTBbits.RB3 = 1;
  5465  0CD3  1283               	bcf	3,5	;RP0=0, select bank0
  5466  0CD4  1303               	bcf	3,6	;RP1=0, select bank0
  5467  0CD5  1586               	bsf	6,3	;volatile
  5468                           
  5469                           ;lcd_pic16.c: 201:         DelayFor18TCY();
  5470  0CD6  120A  158A  209D   	fcall	_DelayFor18TCY
  5471                           
  5472                           ;lcd_pic16.c: 202:         PORTBbits.RB3 = 0;
  5473  0CD9  1283               	bcf	3,5	;RP0=0, select bank0
  5474  0CDA  1303               	bcf	3,6	;RP1=0, select bank0
  5475  0CDB  1186               	bcf	6,3	;volatile
  5476                           
  5477                           ;lcd_pic16.c: 204:         TRISB |= 0xf0;
  5478  0CDC  30F0               	movlw	240
  5479  0CDD  00BE               	movwf	??_WriteCmdXLCD
  5480  0CDE  083E               	movf	??_WriteCmdXLCD,w
  5481  0CDF  1683               	bsf	3,5	;RP0=1, select bank1
  5482  0CE0  1303               	bcf	3,6	;RP1=0, select bank1
  5483  0CE1  0486               	iorwf	6,f	;volatile
  5484  0CE2  0008               	return
  5485  0CE3                     __end_of_WriteCmdXLCD:	
  5486                           
  5487                           	psect	text26
  5488  07AE                     __ptext26:	
  5489 ;; *************** function _SetDDRamAddr *****************
  5490 ;; Defined at:
  5491 ;;		line 217 in file "lcd_pic16.c"
  5492 ;; Parameters:    Size  Location     Type
  5493 ;;  DDaddr          1    wreg     unsigned char 
  5494 ;; Auto vars:     Size  Location     Type
  5495 ;;  DDaddr          1   32[BANK0 ] unsigned char 
  5496 ;; Return value:  Size  Location     Type
  5497 ;;                  1    wreg      void 
  5498 ;; Registers used:
  5499 ;;		wreg, status,2, status,0, pclath, cstack
  5500 ;; Tracked objects:
  5501 ;;		On entry : 0/0
  5502 ;;		On exit  : 0/0
  5503 ;;		Unchanged: 0/0
  5504 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5505 ;;      Params:         0       0       0       0       0
  5506 ;;      Locals:         0       1       0       0       0
  5507 ;;      Temps:          0       2       0       0       0
  5508 ;;      Totals:         0       3       0       0       0
  5509 ;;Total ram usage:        3 bytes
  5510 ;; Hardware stack levels used:    1
  5511 ;; Hardware stack levels required when called:    6
  5512 ;; This function calls:
  5513 ;;		_DelayFor18TCY
  5514 ;; This function is called by:
  5515 ;;		_start
  5516 ;;		_setFrequency
  5517 ;;		_principalScreen
  5518 ;;		_lockingScreen
  5519 ;;		_OpenXLCD
  5520 ;; This function uses a non-reentrant model
  5521 ;;
  5522                           
  5523                           
  5524                           ;psect for function _SetDDRamAddr
  5525  07AE                     _SetDDRamAddr:	
  5526                           
  5527                           ;incstack = 0
  5528                           ; Regs used in _SetDDRamAddr: [wreg+status,2+status,0+pclath+cstack]
  5529                           ;SetDDRamAddr@DDaddr stored from wreg
  5530  07AE  1283               	bcf	3,5	;RP0=0, select bank0
  5531  07AF  1303               	bcf	3,6	;RP1=0, select bank0
  5532  07B0  00C0               	movwf	SetDDRamAddr@DDaddr
  5533                           
  5534                           ;lcd_pic16.c: 217: void SetDDRamAddr(unsigned char DDaddr);lcd_pic16.c: 218: {;lcd_pic16
      +                          .c: 232:         TRISB &= 0x0f;
  5535  07B1  300F               	movlw	15
  5536  07B2  00BE               	movwf	??_SetDDRamAddr
  5537  07B3  083E               	movf	??_SetDDRamAddr,w
  5538  07B4  1683               	bsf	3,5	;RP0=1, select bank1
  5539  07B5  1303               	bcf	3,6	;RP1=0, select bank1
  5540  07B6  0586               	andwf	6,f	;volatile
  5541                           
  5542                           ;lcd_pic16.c: 233:         PORTB &= 0x0f;
  5543  07B7  300F               	movlw	15
  5544  07B8  1283               	bcf	3,5	;RP0=0, select bank0
  5545  07B9  1303               	bcf	3,6	;RP1=0, select bank0
  5546  07BA  00BE               	movwf	??_SetDDRamAddr
  5547  07BB  083E               	movf	??_SetDDRamAddr,w
  5548  07BC  0586               	andwf	6,f	;volatile
  5549                           
  5550                           ;lcd_pic16.c: 234:         PORTB |= ((DDaddr | 0b10000000) & 0xf0);
  5551  07BD  0840               	movf	SetDDRamAddr@DDaddr,w
  5552  07BE  3880               	iorlw	128
  5553  07BF  39F0               	andlw	240
  5554  07C0  00BE               	movwf	??_SetDDRamAddr
  5555  07C1  083E               	movf	??_SetDDRamAddr,w
  5556  07C2  0486               	iorwf	6,f	;volatile
  5557                           
  5558                           ;lcd_pic16.c: 240:         PORTBbits.RB2 = 0;
  5559  07C3  1106               	bcf	6,2	;volatile
  5560                           
  5561                           ;lcd_pic16.c: 241:         PORTBbits.RB1 = 0;
  5562  07C4  1086               	bcf	6,1	;volatile
  5563                           
  5564                           ;lcd_pic16.c: 242:         DelayFor18TCY();
  5565  07C5  120A  158A  209D  120A  118A  	fcall	_DelayFor18TCY
  5566                           
  5567                           ;lcd_pic16.c: 243:         PORTBbits.RB3 = 1;
  5568  07CA  1283               	bcf	3,5	;RP0=0, select bank0
  5569  07CB  1303               	bcf	3,6	;RP1=0, select bank0
  5570  07CC  1586               	bsf	6,3	;volatile
  5571                           
  5572                           ;lcd_pic16.c: 244:         DelayFor18TCY();
  5573  07CD  120A  158A  209D  120A  118A  	fcall	_DelayFor18TCY
  5574                           
  5575                           ;lcd_pic16.c: 245:         PORTBbits.RB3 = 0;
  5576  07D2  1283               	bcf	3,5	;RP0=0, select bank0
  5577  07D3  1303               	bcf	3,6	;RP1=0, select bank0
  5578  07D4  1186               	bcf	6,3	;volatile
  5579                           
  5580                           ;lcd_pic16.c: 247:         PORTB &= 0x0f;
  5581  07D5  300F               	movlw	15
  5582  07D6  00BE               	movwf	??_SetDDRamAddr
  5583  07D7  083E               	movf	??_SetDDRamAddr,w
  5584  07D8  0586               	andwf	6,f	;volatile
  5585                           
  5586                           ;lcd_pic16.c: 248:         PORTB |= ((DDaddr<<4)&0xf0);
  5587  07D9  0840               	movf	SetDDRamAddr@DDaddr,w
  5588  07DA  00BE               	movwf	??_SetDDRamAddr
  5589  07DB  3003               	movlw	3
  5590  07DC                     u1435:	
  5591  07DC  1003               	clrc
  5592  07DD  0DBE               	rlf	??_SetDDRamAddr,f
  5593  07DE  3EFF               	addlw	-1
  5594  07DF  1D03               	skipz
  5595  07E0  2FDC               	goto	u1435
  5596  07E1  1003               	clrc
  5597  07E2  0D3E               	rlf	??_SetDDRamAddr,w
  5598  07E3  39F0               	andlw	240
  5599  07E4  00BF               	movwf	??_SetDDRamAddr+1
  5600  07E5  083F               	movf	??_SetDDRamAddr+1,w
  5601  07E6  0486               	iorwf	6,f	;volatile
  5602                           
  5603                           ;lcd_pic16.c: 253:         DelayFor18TCY();
  5604  07E7  120A  158A  209D  120A  118A  	fcall	_DelayFor18TCY
  5605                           
  5606                           ;lcd_pic16.c: 254:         PORTBbits.RB3 = 1;
  5607  07EC  1283               	bcf	3,5	;RP0=0, select bank0
  5608  07ED  1303               	bcf	3,6	;RP1=0, select bank0
  5609  07EE  1586               	bsf	6,3	;volatile
  5610                           
  5611                           ;lcd_pic16.c: 255:         DelayFor18TCY();
  5612  07EF  120A  158A  209D   	fcall	_DelayFor18TCY
  5613                           
  5614                           ;lcd_pic16.c: 256:         PORTBbits.RB3 = 0;
  5615  07F2  1283               	bcf	3,5	;RP0=0, select bank0
  5616  07F3  1303               	bcf	3,6	;RP1=0, select bank0
  5617  07F4  1186               	bcf	6,3	;volatile
  5618                           
  5619                           ;lcd_pic16.c: 258:         TRISB |= 0xf0;
  5620  07F5  30F0               	movlw	240
  5621  07F6  00BE               	movwf	??_SetDDRamAddr
  5622  07F7  083E               	movf	??_SetDDRamAddr,w
  5623  07F8  1683               	bsf	3,5	;RP0=1, select bank1
  5624  07F9  1303               	bcf	3,6	;RP1=0, select bank1
  5625  07FA  0486               	iorwf	6,f	;volatile
  5626  07FB  0008               	return
  5627  07FC                     __end_of_SetDDRamAddr:	
  5628                           
  5629                           	psect	text27
  5630  089D                     __ptext27:	
  5631 ;; *************** function _DelayFor18TCY *****************
  5632 ;; Defined at:
  5633 ;;		line 22 in file "lcd_pic16.c"
  5634 ;; Parameters:    Size  Location     Type
  5635 ;;		None
  5636 ;; Auto vars:     Size  Location     Type
  5637 ;;		None
  5638 ;; Return value:  Size  Location     Type
  5639 ;;                  1    wreg      void 
  5640 ;; Registers used:
  5641 ;;		wreg
  5642 ;; Tracked objects:
  5643 ;;		On entry : 0/0
  5644 ;;		On exit  : 0/0
  5645 ;;		Unchanged: 0/0
  5646 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5647 ;;      Params:         0       0       0       0       0
  5648 ;;      Locals:         0       0       0       0       0
  5649 ;;      Temps:          0       1       0       0       0
  5650 ;;      Totals:         0       1       0       0       0
  5651 ;;Total ram usage:        1 bytes
  5652 ;; Hardware stack levels used:    1
  5653 ;; Hardware stack levels required when called:    5
  5654 ;; This function calls:
  5655 ;;		Nothing
  5656 ;; This function is called by:
  5657 ;;		_WriteDataXLCD
  5658 ;;		_WriteCmdXLCD
  5659 ;;		_SetDDRamAddr
  5660 ;;		_SetCGRamAddr
  5661 ;;		_ReadDataXLCD
  5662 ;;		_ReadAddrXLCD
  5663 ;; This function uses a non-reentrant model
  5664 ;;
  5665                           
  5666                           
  5667                           ;psect for function _DelayFor18TCY
  5668  089D                     _DelayFor18TCY:	
  5669                           
  5670                           ;lcd_pic16.c: 24:    _delay((unsigned long)((18)*(4000000/4000000.0)));
  5671                           
  5672                           ;incstack = 0
  5673 ;; hardware stack exceeded
  5674                           ; Regs used in _DelayFor18TCY: [wreg]
  5675  089D  3005               	movlw	5
  5676  089E  1283               	bcf	3,5	;RP0=0, select bank0
  5677  089F  1303               	bcf	3,6	;RP1=0, select bank0
  5678  08A0  00BD               	movwf	??_DelayFor18TCY
  5679  08A1                     u3777:	
  5680  08A1  0BBD               	decfsz	??_DelayFor18TCY,f
  5681  08A2  28A1               	goto	u3777
  5682  08A3  0008               	return
  5683  08A4                     __end_of_DelayFor18TCY:	
  5684                           
  5685                           	psect	text28
  5686  08BD                     __ptext28:	
  5687 ;; *************** function _DelayPORXLCD *****************
  5688 ;; Defined at:
  5689 ;;		line 27 in file "lcd_pic16.c"
  5690 ;; Parameters:    Size  Location     Type
  5691 ;;		None
  5692 ;; Auto vars:     Size  Location     Type
  5693 ;;		None
  5694 ;; Return value:  Size  Location     Type
  5695 ;;                  1    wreg      void 
  5696 ;; Registers used:
  5697 ;;		wreg
  5698 ;; Tracked objects:
  5699 ;;		On entry : 0/0
  5700 ;;		On exit  : 0/0
  5701 ;;		Unchanged: 0/0
  5702 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5703 ;;      Params:         0       0       0       0       0
  5704 ;;      Locals:         0       0       0       0       0
  5705 ;;      Temps:          0       2       0       0       0
  5706 ;;      Totals:         0       2       0       0       0
  5707 ;;Total ram usage:        2 bytes
  5708 ;; Hardware stack levels used:    1
  5709 ;; Hardware stack levels required when called:    5
  5710 ;; This function calls:
  5711 ;;		Nothing
  5712 ;; This function is called by:
  5713 ;;		_OpenXLCD
  5714 ;; This function uses a non-reentrant model
  5715 ;;
  5716                           
  5717                           
  5718                           ;psect for function _DelayPORXLCD
  5719  08BD                     _DelayPORXLCD:	
  5720                           
  5721                           ;lcd_pic16.c: 29:    _delay((unsigned long)((20)*(4000000/4000.0)));
  5722                           
  5723                           ;incstack = 0
  5724 ;; hardware stack exceeded
  5725                           ; Regs used in _DelayPORXLCD: [wreg]
  5726  08BD  301A               	movlw	26
  5727  08BE  1283               	bcf	3,5	;RP0=0, select bank0
  5728  08BF  1303               	bcf	3,6	;RP1=0, select bank0
  5729  08C0  00BE               	movwf	??_DelayPORXLCD+1
  5730  08C1  30F7               	movlw	247
  5731  08C2  00BD               	movwf	??_DelayPORXLCD
  5732  08C3                     u3787:	
  5733  08C3  0BBD               	decfsz	??_DelayPORXLCD,f
  5734  08C4  28C3               	goto	u3787
  5735  08C5  0BBE               	decfsz	??_DelayPORXLCD+1,f
  5736  08C6  28C3               	goto	u3787
  5737  08C7  28C8               	nop2
  5738  08C8  0008               	return
  5739  08C9                     __end_of_DelayPORXLCD:	
  5740                           
  5741                           	psect	text29
  5742  08C9                     __ptext29:	
  5743 ;; *************** function _BusyXLCD *****************
  5744 ;; Defined at:
  5745 ;;		line 451 in file "lcd_pic16.c"
  5746 ;; Parameters:    Size  Location     Type
  5747 ;;		None
  5748 ;; Auto vars:     Size  Location     Type
  5749 ;;		None
  5750 ;; Return value:  Size  Location     Type
  5751 ;;                  1    wreg      unsigned char 
  5752 ;; Registers used:
  5753 ;;		wreg
  5754 ;; Tracked objects:
  5755 ;;		On entry : 0/0
  5756 ;;		On exit  : 0/0
  5757 ;;		Unchanged: 0/0
  5758 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5759 ;;      Params:         0       0       0       0       0
  5760 ;;      Locals:         0       0       0       0       0
  5761 ;;      Temps:          0       2       0       0       0
  5762 ;;      Totals:         0       2       0       0       0
  5763 ;;Total ram usage:        2 bytes
  5764 ;; Hardware stack levels used:    1
  5765 ;; Hardware stack levels required when called:    5
  5766 ;; This function calls:
  5767 ;;		Nothing
  5768 ;; This function is called by:
  5769 ;;		_OpenXLCD
  5770 ;;		_putsXLCD
  5771 ;;		_putrsXLCD
  5772 ;;		_SendCMDLCD
  5773 ;; This function uses a non-reentrant model
  5774 ;;
  5775                           
  5776                           
  5777                           ;psect for function _BusyXLCD
  5778  08C9                     _BusyXLCD:	
  5779                           
  5780                           ;lcd_pic16.c: 504:         _delay((unsigned long)((5)*(4000000/4000.0)));
  5781                           
  5782                           ;incstack = 0
  5783                           ; Regs used in _BusyXLCD: [wreg]
  5784  08C9  3007               	movlw	7
  5785  08CA  1283               	bcf	3,5	;RP0=0, select bank0
  5786  08CB  1303               	bcf	3,6	;RP1=0, select bank0
  5787  08CC  00BE               	movwf	??_BusyXLCD+1
  5788  08CD  307C               	movlw	124
  5789  08CE  00BD               	movwf	??_BusyXLCD
  5790  08CF                     u3797:	
  5791  08CF  0BBD               	decfsz	??_BusyXLCD,f
  5792  08D0  28CF               	goto	u3797
  5793  08D1  0BBE               	decfsz	??_BusyXLCD+1,f
  5794  08D2  28CF               	goto	u3797
  5795  08D3  0000               	nop
  5796                           
  5797                           ;lcd_pic16.c: 505:         return 0;
  5798  08D4  3000               	movlw	0
  5799  08D5  0008               	return
  5800  08D6                     __end_of_BusyXLCD:	
  5801                           
  5802                           	psect	text30
  5803  09EB                     __ptext30:	
  5804 ;; *************** function _inter *****************
  5805 ;; Defined at:
  5806 ;;		line 122 in file "main.c"
  5807 ;; Parameters:    Size  Location     Type
  5808 ;;		None
  5809 ;; Auto vars:     Size  Location     Type
  5810 ;;		None
  5811 ;; Return value:  Size  Location     Type
  5812 ;;                  1    wreg      void 
  5813 ;; Registers used:
  5814 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5815 ;; Tracked objects:
  5816 ;;		On entry : 0/0
  5817 ;;		On exit  : 0/0
  5818 ;;		Unchanged: 0/0
  5819 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5820 ;;      Params:         0       0       0       0       0
  5821 ;;      Locals:         0       0       0       0       0
  5822 ;;      Temps:          0       5       0       0       0
  5823 ;;      Totals:         0       5       0       0       0
  5824 ;;Total ram usage:        5 bytes
  5825 ;; Hardware stack levels used:    1
  5826 ;; Hardware stack levels required when called:    4
  5827 ;; This function calls:
  5828 ;;		_time
  5829 ;;		_updateLCD
  5830 ;; This function is called by:
  5831 ;;		Interrupt level 1
  5832 ;; This function uses a non-reentrant model
  5833 ;;
  5834                           
  5835                           
  5836                           ;psect for function _inter
  5837  09EB                     _inter:	
  5838                           
  5839                           ;main.c: 124:     INTCONbits.GIE = 0;
  5840  09EB  138B               	bcf	11,7	;volatile
  5841                           
  5842                           ;main.c: 126:     if(PIR1bits.TMR1IF == 1){
  5843  09EC  1C0C               	btfss	12,0	;volatile
  5844  09ED  2A03               	goto	i1l3450
  5845                           
  5846                           ;main.c: 127:         TMR1H = prTmr1H;
  5847  09EE  0851               	movf	_prTmr1H,w
  5848  09EF  008F               	movwf	15	;volatile
  5849                           
  5850                           ;main.c: 128:         TMR1L = prTmr1L;
  5851  09F0  0852               	movf	_prTmr1L,w
  5852  09F1  008E               	movwf	14	;volatile
  5853                           
  5854                           ;main.c: 129:         cntTmr1++;
  5855  09F2  3001               	movlw	1
  5856  09F3  00B8               	movwf	??_inter
  5857  09F4  0838               	movf	??_inter,w
  5858  09F5  07CB               	addwf	_cntTmr1,f
  5859                           
  5860                           ;main.c: 130:         time();
  5861  09F6  120A  158A  236C  120A  158A  	fcall	_time
  5862                           
  5863                           ;main.c: 131:         updateLCD();
  5864  09FB  120A  158A  2587  120A  158A  	fcall	_updateLCD
  5865                           
  5866                           ;main.c: 132:         PIR1bits.TMR1IF = 0;
  5867  0A00  1283               	bcf	3,5	;RP0=0, select bank0
  5868  0A01  1303               	bcf	3,6	;RP1=0, select bank0
  5869  0A02  100C               	bcf	12,0	;volatile
  5870  0A03                     i1l3450:	
  5871                           
  5872                           ;main.c: 134:     INTCONbits.GIE = 1;
  5873  0A03  178B               	bsf	11,7	;volatile
  5874  0A04  083C               	movf	??_inter+4,w
  5875  0A05  00FF               	movwf	127
  5876  0A06  083B               	movf	??_inter+3,w
  5877  0A07  008A               	movwf	10
  5878  0A08  083A               	movf	??_inter+2,w
  5879  0A09  0084               	movwf	4
  5880  0A0A  0E39               	swapf	(??_inter+1)^0,w
  5881  0A0B  0083               	movwf	3
  5882  0A0C  0EFE               	swapf	126,f
  5883  0A0D  0E7E               	swapf	126,w
  5884  0A0E  0009               	retfie
  5885  0A0F                     __end_of_inter:	
  5886                           
  5887                           	psect	intentry
  5888  0004                     __pintentry:	
  5889                           ;incstack = 0
  5890 ;; hardware stack exceeded
  5891                           ; Regs used in _inter: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5892                           
  5893  0004                     interrupt_function:	
  5894  007E                     saved_w	set	btemp
  5895  0004  00FE               	movwf	btemp
  5896  0005  0E03               	swapf	3,w
  5897  0006  1283               	bcf	3,5	;RP0=0, select bank0
  5898  0007  1303               	bcf	3,6	;RP1=0, select bank0
  5899  0008  00B9               	movwf	??_inter+1
  5900  0009  0804               	movf	4,w
  5901  000A  00BA               	movwf	??_inter+2
  5902  000B  080A               	movf	10,w
  5903  000C  00BB               	movwf	??_inter+3
  5904  000D  087F               	movf	btemp+1,w
  5905  000E  00BC               	movwf	??_inter+4
  5906  000F  120A  158A  29EB   	ljmp	_inter
  5907                           
  5908                           	psect	text31
  5909  0D87                     __ptext31:	
  5910 ;; *************** function _updateLCD *****************
  5911 ;; Defined at:
  5912 ;;		line 14 in file "lcd.c"
  5913 ;; Parameters:    Size  Location     Type
  5914 ;;		None
  5915 ;; Auto vars:     Size  Location     Type
  5916 ;;  integ           1   23[BANK0 ] unsigned char 
  5917 ;;  decim           1   22[BANK0 ] unsigned char 
  5918 ;; Return value:  Size  Location     Type
  5919 ;;                  1    wreg      void 
  5920 ;; Registers used:
  5921 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5922 ;; Tracked objects:
  5923 ;;		On entry : 0/0
  5924 ;;		On exit  : 0/0
  5925 ;;		Unchanged: 0/0
  5926 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5927 ;;      Params:         0       0       0       0       0
  5928 ;;      Locals:         0       2       0       0       0
  5929 ;;      Temps:          0       5       0       0       0
  5930 ;;      Totals:         0       7       0       0       0
  5931 ;;Total ram usage:        7 bytes
  5932 ;; Hardware stack levels used:    1
  5933 ;; Hardware stack levels required when called:    3
  5934 ;; This function calls:
  5935 ;;		i1_SetDDRamAddr
  5936 ;;		i1___lwdiv
  5937 ;;		i1___lwmod
  5938 ;;		i1_putsXLCD
  5939 ;;		i1_sprintf
  5940 ;; This function is called by:
  5941 ;;		_inter
  5942 ;; This function uses a non-reentrant model
  5943 ;;
  5944                           
  5945                           
  5946                           ;psect for function _updateLCD
  5947  0D87                     _updateLCD:	
  5948                           
  5949                           ;lcd.c: 15:     if(isOnConfig){
  5950                           
  5951                           ;incstack = 0
  5952 ;; hardware stack exceeded
  5953                           ; Regs used in _updateLCD: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5954  0D87  1283               	bcf	3,5	;RP0=0, select bank0
  5955  0D88  1303               	bcf	3,6	;RP1=0, select bank0
  5956  0D89  0847               	movf	_isOnConfig,w
  5957  0D8A  1903               	btfsc	3,2
  5958  0D8B  0008               	return
  5959                           
  5960                           ;lcd.c: 16:         unsigned char decim = frequency % 10;
  5961  0D8C  300A               	movlw	10
  5962  0D8D  00F8               	movwf	i1___lwmod@divisor
  5963  0D8E  3000               	movlw	0
  5964  0D8F  00F9               	movwf	i1___lwmod@divisor+1
  5965  0D90  0845               	movf	_frequency+1,w
  5966  0D91  00FB               	movwf	i1___lwmod@dividend+1
  5967  0D92  0844               	movf	_frequency,w
  5968  0D93  00FA               	movwf	i1___lwmod@dividend
  5969  0D94  120A  158A  22BE  120A  158A  	fcall	i1___lwmod
  5970  0D99  0878               	movf	?i1___lwmod,w
  5971  0D9A  1283               	bcf	3,5	;RP0=0, select bank0
  5972  0D9B  1303               	bcf	3,6	;RP1=0, select bank0
  5973  0D9C  00B1               	movwf	??_updateLCD
  5974  0D9D  0831               	movf	??_updateLCD,w
  5975  0D9E  00B6               	movwf	updateLCD@decim
  5976                           
  5977                           ;lcd.c: 17:         unsigned char integ = frequency / 10;
  5978  0D9F  300A               	movlw	10
  5979  0DA0  00F0               	movwf	i1___lwdiv@divisor
  5980  0DA1  3000               	movlw	0
  5981  0DA2  00F1               	movwf	i1___lwdiv@divisor+1
  5982  0DA3  0845               	movf	_frequency+1,w
  5983  0DA4  00F3               	movwf	i1___lwdiv@dividend+1
  5984  0DA5  0844               	movf	_frequency,w
  5985  0DA6  00F2               	movwf	i1___lwdiv@dividend
  5986  0DA7  120A  158A  22F0  120A  158A  	fcall	i1___lwdiv
  5987  0DAC  0870               	movf	?i1___lwdiv,w
  5988  0DAD  1283               	bcf	3,5	;RP0=0, select bank0
  5989  0DAE  1303               	bcf	3,6	;RP1=0, select bank0
  5990  0DAF  00B1               	movwf	??_updateLCD
  5991  0DB0  0831               	movf	??_updateLCD,w
  5992  0DB1  00B7               	movwf	updateLCD@integ
  5993                           
  5994                           ;lcd.c: 18:         sprintf(lineTwo,"FREQ.  %3d.%d MHz",integ, decim);
  5995  0DB2  300F               	movlw	(low ((STR_9-__stringbase)| (0+32768)))& (0+255)
  5996  0DB3  00B1               	movwf	??_updateLCD
  5997  0DB4  0831               	movf	??_updateLCD,w
  5998  0DB5  00A0               	movwf	i1sprintf@f
  5999  0DB6  0837               	movf	updateLCD@integ,w
  6000  0DB7  00B2               	movwf	??_updateLCD+1
  6001  0DB8  01B3               	clrf	??_updateLCD+2
  6002  0DB9  0832               	movf	??_updateLCD+1,w
  6003  0DBA  00A1               	movwf	?i1_sprintf+1
  6004  0DBB  0833               	movf	??_updateLCD+2,w
  6005  0DBC  00A2               	movwf	?i1_sprintf+2
  6006  0DBD  0836               	movf	updateLCD@decim,w
  6007  0DBE  00B4               	movwf	??_updateLCD+3
  6008  0DBF  01B5               	clrf	??_updateLCD+4
  6009  0DC0  0834               	movf	??_updateLCD+3,w
  6010  0DC1  00A3               	movwf	?i1_sprintf+3
  6011  0DC2  0835               	movf	??_updateLCD+4,w
  6012  0DC3  00A4               	movwf	?i1_sprintf+4
  6013  0DC4  30A1               	movlw	(low (_lineTwo| 0))& (0+255)
  6014  0DC5  120A  118A  21BD  120A  158A  	fcall	i1_sprintf
  6015                           
  6016                           ;lcd.c: 19:         SetDDRamAddr(0x40);
  6017  0DCA  3040               	movlw	64
  6018  0DCB  120A  158A  244A  120A  158A  	fcall	i1_SetDDRamAddr
  6019                           
  6020                           ;lcd.c: 20:         putsXLCD(lineTwo);
  6021  0DD0  30A1               	movlw	(low (_lineTwo| 0))& (0+255)
  6022  0DD1  120A  158A  214A  120A  158A  	fcall	i1_putsXLCD
  6023                           
  6024                           ;lcd.c: 21:         SetDDRamAddr(0x00);
  6025  0DD6  3000               	movlw	0
  6026  0DD7  120A  158A  244A  120A  158A  	fcall	i1_SetDDRamAddr
  6027                           
  6028                           ;lcd.c: 22:         putsXLCD(lineOne);
  6029  0DDC  30B2               	movlw	(low (_lineOne| 0))& (0+255)
  6030  0DDD  120A  158A  214A   	fcall	i1_putsXLCD
  6031  0DE0  0008               	return
  6032  0DE1                     __end_of_updateLCD:	
  6033                           
  6034                           	psect	text32
  6035  01BD                     __ptext32:	
  6036 ;; *************** function i1_sprintf *****************
  6037 ;; Defined at:
  6038 ;;		line 500 in file "/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt.c"
  6039 ;; Parameters:    Size  Location     Type
  6040 ;;  sp              1    wreg     PTR unsigned char 
  6041 ;;		 -> lineTwo(17), lineOne(17), 
  6042 ;;  f               1    0[BANK0 ] PTR const unsigned char 
  6043 ;;		 -> STR_12(18), STR_11(17), STR_10(17), STR_9(18), 
  6044 ;;		 -> STR_7(17), STR_6(17), STR_5(17), STR_4(17), 
  6045 ;;		 -> STR_3(17), STR_2(17), STR_1(17), 
  6046 ;; Auto vars:     Size  Location     Type
  6047 ;;  sp              1   13[BANK0 ] PTR unsigned char 
  6048 ;;		 -> lineTwo(17), lineOne(17), 
  6049 ;;  sprintf         4    0        struct .
  6050 ;;  sprintf         2   14[BANK0 ] int 
  6051 ;;  sprintf         2   11[BANK0 ] unsigned int 
  6052 ;;  sprintf         2    0        PTR const unsigned char 
  6053 ;;  sprintf         2    0        unsigned int 
  6054 ;;  sprintf         1   16[BANK0 ] unsigned char 
  6055 ;;  sprintf         1   10[BANK0 ] unsigned char 
  6056 ;;  sprintf         1    9[BANK0 ] char 
  6057 ;;  sprintf         1    8[BANK0 ] PTR void [1]
  6058 ;;		 -> ?i1_sprintf(2), ?_sprintf(2), 
  6059 ;; Return value:  Size  Location     Type
  6060 ;;                  2    0[BANK0 ] int 
  6061 ;; Registers used:
  6062 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  6063 ;; Tracked objects:
  6064 ;;		On entry : 0/0
  6065 ;;		On exit  : 0/0
  6066 ;;		Unchanged: 0/0
  6067 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6068 ;;      Params:         0       5       0       0       0
  6069 ;;      Locals:         0       9       0       0       0
  6070 ;;      Temps:          0       3       0       0       0
  6071 ;;      Totals:         0      17       0       0       0
  6072 ;;Total ram usage:       17 bytes
  6073 ;; Hardware stack levels used:    1
  6074 ;; Hardware stack levels required when called:    1
  6075 ;; This function calls:
  6076 ;;		i1___lwdiv
  6077 ;;		i1___lwmod
  6078 ;;		i1___wmul
  6079 ;;		i1_isdigit
  6080 ;; This function is called by:
  6081 ;;		_updateLCD
  6082 ;; This function uses a non-reentrant model
  6083 ;;
  6084                           
  6085                           
  6086                           ;psect for function i1_sprintf
  6087  01BD                     i1_sprintf:	
  6088                           
  6089                           ;incstack = 0
  6090 ;; hardware stack exceeded
  6091                           ; Regs used in i1_sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  6092                           ;i1sprintf@sp stored from wreg
  6093  01BD  1283               	bcf	3,5	;RP0=0, select bank0
  6094  01BE  1303               	bcf	3,6	;RP1=0, select bank0
  6095  01BF  00AD               	movwf	i1sprintf@sp
  6096                           
  6097                           ;/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt.c: 500: sprintf(char * sp, const
      +                           char * f, ...);/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt.c: 501: {;/opt/mi
      +                          crochip/xc8/v2.05/pic/sources/c90/common/doprnt.c: 502:  va_list ap;;/opt/microchip/xc8/
      +                          v2.05/pic/sources/c90/common/doprnt.c: 507:  char c;;/opt/microchip/xc8/v2.05/pic/source
      +                          s/c90/common/doprnt.c: 509:  int width;;/opt/microchip/xc8/v2.05/pic/sources/c90/common/
      +                          doprnt.c: 516:  signed char prec;;/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt
      +                          .c: 520:  unsigned char flag;
  6098  01C0  3021               	movlw	(low ((?i1_sprintf| 0+1)))& (0+255)
  6099  01C1  00A5               	movwf	??i1_sprintf
  6100  01C2  0825               	movf	??i1_sprintf,w
  6101  01C3  00A8               	movwf	i1sprintf@ap
  6102  01C4                     i1l3104:	
  6103                           ;/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt.c: 548:  while((c = *f++)) {
  6104                           
  6105                           
  6106                           ;/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt.c: 548:  while((c = *f++)) {
  6107  01C4  3001               	movlw	1
  6108  01C5  07A0               	addwf	i1sprintf@f,f
  6109  01C6  30FF               	movlw	-1
  6110  01C7  0720               	addwf	i1sprintf@f,w
  6111  01C8  0084               	movwf	4
  6112  01C9  120A  118A  2700  120A  118A  	fcall	stringdir
  6113  01CE  00A5               	movwf	??i1_sprintf
  6114  01CF  0825               	movf	??i1_sprintf,w
  6115  01D0  00B0               	movwf	i1sprintf@c
  6116  01D1  0830               	movf	i1sprintf@c,w
  6117  01D2  1903               	btfsc	3,2
  6118  01D3  2B20               	goto	i1l3106
  6119                           
  6120                           ;/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt.c: 550:   if(c != '%')
  6121  01D4  3025               	movlw	37
  6122  01D5  0630               	xorwf	i1sprintf@c,w
  6123  01D6  1903               	btfsc	3,2
  6124  01D7  29E4               	goto	i1l3030
  6125                           
  6126                           ;/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt.c: 552:   {;/opt/microchip/xc8/v
      +                          2.05/pic/sources/c90/common/doprnt.c: 553:    ((*sp++ = (c)));
  6127  01D8  0830               	movf	i1sprintf@c,w
  6128  01D9  00A5               	movwf	??i1_sprintf
  6129  01DA  082D               	movf	i1sprintf@sp,w
  6130  01DB  0084               	movwf	4
  6131  01DC  0825               	movf	??i1_sprintf,w
  6132  01DD  1383               	bcf	3,7	;select IRP bank0
  6133  01DE  0080               	movwf	0
  6134  01DF  3001               	movlw	1
  6135  01E0  00A5               	movwf	??i1_sprintf
  6136  01E1  0825               	movf	??i1_sprintf,w
  6137  01E2  07AD               	addwf	i1sprintf@sp,f
  6138                           
  6139                           ;/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt.c: 554:    continue;
  6140  01E3  29C4               	goto	i1l3104
  6141  01E4                     i1l3030:	
  6142                           
  6143                           ;/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt.c: 558:   width = 0;
  6144  01E4  01AE               	clrf	i1sprintf@width
  6145  01E5  01AF               	clrf	i1sprintf@width+1
  6146                           
  6147                           ;/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt.c: 560:   flag = 0;
  6148  01E6  01AA               	clrf	i1sprintf@flag
  6149                           
  6150                           ;/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt.c: 609:   if(isdigit((unsigned)*
      +                          f)) {
  6151  01E7  0820               	movf	i1sprintf@f,w
  6152  01E8  0084               	movwf	4
  6153  01E9  120A  118A  2700  120A  118A  	fcall	stringdir
  6154  01EE  120A  158A  20E3  120A  118A  	fcall	i1_isdigit
  6155  01F3  1C03               	btfss	3,0
  6156  01F4  2A33               	goto	i1l3046
  6157                           
  6158                           ;/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt.c: 610:    width = 0;
  6159  01F5  1283               	bcf	3,5	;RP0=0, select bank0
  6160  01F6  1303               	bcf	3,6	;RP1=0, select bank0
  6161  01F7  01AE               	clrf	i1sprintf@width
  6162  01F8  01AF               	clrf	i1sprintf@width+1
  6163  01F9                     i1l3036:	
  6164                           
  6165                           ;/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt.c: 612:     width *= 10;
  6166  01F9  300A               	movlw	10
  6167  01FA  00F0               	movwf	i1___wmul@multiplier
  6168  01FB  3000               	movlw	0
  6169  01FC  00F1               	movwf	i1___wmul@multiplier+1
  6170  01FD  1283               	bcf	3,5	;RP0=0, select bank0
  6171  01FE  1303               	bcf	3,6	;RP1=0, select bank0
  6172  01FF  082F               	movf	i1sprintf@width+1,w
  6173  0200  00F3               	movwf	i1___wmul@multiplicand+1
  6174  0201  082E               	movf	i1sprintf@width,w
  6175  0202  00F2               	movwf	i1___wmul@multiplicand
  6176  0203  120A  158A  2184  120A  118A  	fcall	i1___wmul
  6177  0208  0871               	movf	?i1___wmul+1,w
  6178  0209  1283               	bcf	3,5	;RP0=0, select bank0
  6179  020A  1303               	bcf	3,6	;RP1=0, select bank0
  6180  020B  00AF               	movwf	i1sprintf@width+1
  6181  020C  0870               	movf	?i1___wmul,w
  6182  020D  00AE               	movwf	i1sprintf@width
  6183                           
  6184                           ;/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt.c: 613:        width += *f++ - '
      +                          0';
  6185  020E  0820               	movf	i1sprintf@f,w
  6186  020F  0084               	movwf	4
  6187  0210  120A  118A  2700  120A  118A  	fcall	stringdir
  6188  0215  3ED0               	addlw	208
  6189  0216  00A5               	movwf	??i1_sprintf
  6190  0217  30FF               	movlw	255
  6191  0218  1803               	skipnc
  6192  0219  3000               	movlw	0
  6193  021A  00A6               	movwf	??i1_sprintf+1
  6194  021B  0825               	movf	??i1_sprintf,w
  6195  021C  07AE               	addwf	i1sprintf@width,f
  6196  021D  1803               	skipnc
  6197  021E  0AAF               	incf	i1sprintf@width+1,f
  6198  021F  0826               	movf	??i1_sprintf+1,w
  6199  0220  07AF               	addwf	i1sprintf@width+1,f
  6200  0221  3001               	movlw	1
  6201  0222  00A5               	movwf	??i1_sprintf
  6202  0223  0825               	movf	??i1_sprintf,w
  6203  0224  07A0               	addwf	i1sprintf@f,f
  6204                           
  6205                           ;/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt.c: 614:    } while(isdigit((unsi
      +                          gned)*f));
  6206  0225  0820               	movf	i1sprintf@f,w
  6207  0226  0084               	movwf	4
  6208  0227  120A  118A  2700  120A  118A  	fcall	stringdir
  6209  022C  120A  158A  20E3  120A  118A  	fcall	i1_isdigit
  6210  0231  1803               	btfsc	3,0
  6211  0232  29F9               	goto	i1l3036
  6212  0233                     i1l3046:	
  6213  0233  3001               	movlw	1
  6214  0234  1283               	bcf	3,5	;RP0=0, select bank0
  6215  0235  1303               	bcf	3,6	;RP1=0, select bank0
  6216  0236  07A0               	addwf	i1sprintf@f,f
  6217  0237  30FF               	movlw	-1
  6218  0238  0720               	addwf	i1sprintf@f,w
  6219  0239  0084               	movwf	4
  6220  023A  120A  118A  2700  120A  118A  	fcall	stringdir
  6221  023F  00B0               	movwf	i1sprintf@c
  6222  0240  00A5               	movwf	??i1_sprintf
  6223  0241  01A6               	clrf	??i1_sprintf+1
  6224                           
  6225                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6226                           ; Switch size 1, requested type "simple"
  6227                           ; Number of cases is 1, Range of values is 0 to 0
  6228                           ; switch strategies available:
  6229                           ; Name         Instructions Cycles
  6230                           ; simple_byte            4     3 (average)
  6231                           ; direct_byte           11     8 (fixed)
  6232                           ; jumptable            260     6 (fixed)
  6233                           ;	Chosen strategy is simple_byte
  6234  0242  0826               	movf	??i1_sprintf+1,w
  6235  0243  3A00               	xorlw	0	; case 0
  6236  0244  1903               	skipnz
  6237  0245  2A47               	goto	i1l4112
  6238  0246  29C4               	goto	i1l3104
  6239  0247                     i1l4112:	
  6240                           
  6241                           ; Switch size 1, requested type "simple"
  6242                           ; Number of cases is 3, Range of values is 0 to 105
  6243                           ; switch strategies available:
  6244                           ; Name         Instructions Cycles
  6245                           ; simple_byte           10     6 (average)
  6246                           ; jumptable            260     6 (fixed)
  6247                           ;	Chosen strategy is simple_byte
  6248  0247  0825               	movf	??i1_sprintf,w
  6249  0248  3A00               	xorlw	0	; case 0
  6250  0249  1903               	skipnz
  6251  024A  2B20               	goto	i1l3106
  6252  024B  3A64               	xorlw	100	; case 100
  6253  024C  1903               	skipnz
  6254  024D  2A52               	goto	i1l3048
  6255  024E  3A0D               	xorlw	13	; case 105
  6256  024F  1903               	skipnz
  6257  0250  2A52               	goto	i1l3048
  6258  0251  29C4               	goto	i1l3104
  6259  0252                     i1l3048:	
  6260                           
  6261                           ;/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt.c: 1272:   {;/opt/microchip/xc8/
      +                          v2.05/pic/sources/c90/common/doprnt.c: 1278:     val = (int)(*(int *)__va_arg((*(int **)
      +                          ap), (int)0));
  6262  0252  0828               	movf	i1sprintf@ap,w
  6263  0253  0084               	movwf	4
  6264  0254  1383               	bcf	3,7	;select IRP bank0
  6265  0255  0800               	movf	0,w
  6266  0256  00AB               	movwf	i1sprintf@val
  6267  0257  0A84               	incf	4,f
  6268  0258  0800               	movf	0,w
  6269  0259  00AC               	movwf	i1sprintf@val+1
  6270  025A  3002               	movlw	2
  6271  025B  00A5               	movwf	??i1_sprintf
  6272  025C  0825               	movf	??i1_sprintf,w
  6273  025D  07A8               	addwf	i1sprintf@ap,f
  6274                           
  6275                           ;/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt.c: 1280:    if((int)val < 0) {
  6276  025E  1FAC               	btfss	i1sprintf@val+1,7
  6277  025F  2A69               	goto	i1l3058
  6278                           
  6279                           ;/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt.c: 1281:     flag |= 0x03;
  6280  0260  3003               	movlw	3
  6281  0261  00A5               	movwf	??i1_sprintf
  6282  0262  0825               	movf	??i1_sprintf,w
  6283  0263  04AA               	iorwf	i1sprintf@flag,f
  6284                           
  6285                           ;/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt.c: 1282:     val = -val;
  6286  0264  09AB               	comf	i1sprintf@val,f
  6287  0265  09AC               	comf	i1sprintf@val+1,f
  6288  0266  0AAB               	incf	i1sprintf@val,f
  6289  0267  1903               	skipnz
  6290  0268  0AAC               	incf	i1sprintf@val+1,f
  6291  0269                     i1l3058:	
  6292                           
  6293                           ;/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt.c: 1285:   };/opt/microchip/xc8/
      +                          v2.05/pic/sources/c90/common/doprnt.c: 1324:    for(c = 1 ; c != sizeof dpowers/sizeof d
      +                          powers[0] ; c++)
  6294  0269  01B0               	clrf	i1sprintf@c
  6295  026A  0AB0               	incf	i1sprintf@c,f
  6296  026B                     i1l3064:	
  6297                           
  6298                           ;/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt.c: 1325:     if(val < dpowers[c]
      +                          )
  6299  026B  0830               	movf	i1sprintf@c,w
  6300  026C  00A5               	movwf	??i1_sprintf
  6301  026D  0725               	addwf	??i1_sprintf,w
  6302  026E  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  6303  026F  0084               	movwf	4
  6304  0270  120A  118A  2700  120A  118A  	fcall	stringdir
  6305  0275  00A6               	movwf	??i1_sprintf+1
  6306  0276  120A  118A  2700  120A  118A  	fcall	stringdir
  6307  027B  00A7               	movwf	??i1_sprintf+2
  6308  027C  0827               	movf	??i1_sprintf+2,w
  6309  027D  022C               	subwf	i1sprintf@val+1,w
  6310  027E  1D03               	skipz
  6311  027F  2A82               	goto	u234_25
  6312  0280  0826               	movf	??i1_sprintf+1,w
  6313  0281  022B               	subwf	i1sprintf@val,w
  6314  0282                     u234_25:	
  6315  0282  1C03               	btfss	3,0
  6316  0283  2A8C               	goto	i1l3070
  6317  0284  3001               	movlw	1
  6318  0285  00A5               	movwf	??i1_sprintf
  6319  0286  0825               	movf	??i1_sprintf,w
  6320  0287  07B0               	addwf	i1sprintf@c,f
  6321  0288  3005               	movlw	5
  6322  0289  0630               	xorwf	i1sprintf@c,w
  6323  028A  1D03               	btfss	3,2
  6324  028B  2A6B               	goto	i1l3064
  6325  028C                     i1l3070:	
  6326                           
  6327                           ;/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt.c: 1364:   if(width && flag & 0x
      +                          03)
  6328  028C  082E               	movf	i1sprintf@width,w
  6329  028D  042F               	iorwf	i1sprintf@width+1,w
  6330  028E  1903               	btfsc	3,2
  6331  028F  2A9A               	goto	i1l656
  6332  0290  082A               	movf	i1sprintf@flag,w
  6333  0291  3903               	andlw	3
  6334  0292  1903               	btfsc	3,2
  6335  0293  2A9A               	goto	i1l656
  6336                           
  6337                           ;/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt.c: 1365:    width--;
  6338  0294  30FF               	movlw	255
  6339  0295  07AE               	addwf	i1sprintf@width,f
  6340  0296  1803               	skipnc
  6341  0297  0AAF               	incf	i1sprintf@width+1,f
  6342  0298  30FF               	movlw	255
  6343  0299  07AF               	addwf	i1sprintf@width+1,f
  6344  029A                     i1l656:	
  6345                           
  6346                           ;/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt.c: 1400:   if(width > c)
  6347  029A  082F               	movf	i1sprintf@width+1,w
  6348  029B  3A80               	xorlw	128
  6349  029C  3C80               	sublw	128
  6350  029D  1D03               	skipz
  6351  029E  2AA1               	goto	u238_25
  6352  029F  082E               	movf	i1sprintf@width,w
  6353  02A0  0230               	subwf	i1sprintf@c,w
  6354  02A1                     u238_25:	
  6355  02A1  1803               	skipnc
  6356  02A2  2AAF               	goto	i1l3078
  6357                           
  6358                           ;/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt.c: 1401:    width -= c;
  6359  02A3  1283               	bcf	3,5	;RP0=0, select bank0
  6360  02A4  1303               	bcf	3,6	;RP1=0, select bank0
  6361  02A5  0830               	movf	i1sprintf@c,w
  6362  02A6  00A5               	movwf	??i1_sprintf
  6363  02A7  01A6               	clrf	??i1_sprintf+1
  6364  02A8  0825               	movf	??i1_sprintf,w
  6365  02A9  02AE               	subwf	i1sprintf@width,f
  6366  02AA  0826               	movf	??i1_sprintf+1,w
  6367  02AB  1C03               	skipc
  6368  02AC  03AF               	decf	i1sprintf@width+1,f
  6369  02AD  02AF               	subwf	i1sprintf@width+1,f
  6370  02AE  2AB3               	goto	i1l3080
  6371  02AF                     i1l3078:	
  6372                           
  6373                           ;/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt.c: 1403:    width = 0;
  6374  02AF  1283               	bcf	3,5	;RP0=0, select bank0
  6375  02B0  1303               	bcf	3,6	;RP1=0, select bank0
  6376  02B1  01AE               	clrf	i1sprintf@width
  6377  02B2  01AF               	clrf	i1sprintf@width+1
  6378  02B3                     i1l3080:	
  6379                           
  6380                           ;/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt.c: 1441:   {;/opt/microchip/xc8/
      +                          v2.05/pic/sources/c90/common/doprnt.c: 1443:    if(width
  6381  02B3  082E               	movf	i1sprintf@width,w
  6382  02B4  042F               	iorwf	i1sprintf@width+1,w
  6383  02B5  1903               	btfsc	3,2
  6384  02B6  2ACC               	goto	i1l3088
  6385  02B7                     i1l3082:	
  6386                           
  6387                           ;/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt.c: 1449:      ((*sp++ = (' ')));
  6388  02B7  3020               	movlw	32
  6389  02B8  00A5               	movwf	??i1_sprintf
  6390  02B9  082D               	movf	i1sprintf@sp,w
  6391  02BA  0084               	movwf	4
  6392  02BB  0825               	movf	??i1_sprintf,w
  6393  02BC  1383               	bcf	3,7	;select IRP bank0
  6394  02BD  0080               	movwf	0
  6395  02BE  3001               	movlw	1
  6396  02BF  00A5               	movwf	??i1_sprintf
  6397  02C0  0825               	movf	??i1_sprintf,w
  6398  02C1  07AD               	addwf	i1sprintf@sp,f
  6399  02C2  30FF               	movlw	255
  6400  02C3  07AE               	addwf	i1sprintf@width,f
  6401  02C4  1803               	skipnc
  6402  02C5  0AAF               	incf	i1sprintf@width+1,f
  6403  02C6  30FF               	movlw	255
  6404  02C7  07AF               	addwf	i1sprintf@width+1,f
  6405  02C8  082E               	movf	i1sprintf@width,w
  6406  02C9  042F               	iorwf	i1sprintf@width+1,w
  6407  02CA  1D03               	btfss	3,2
  6408  02CB  2AB7               	goto	i1l3082
  6409  02CC                     i1l3088:	
  6410                           
  6411                           ;/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt.c: 1457:    if(flag & 0x03)
  6412  02CC  082A               	movf	i1sprintf@flag,w
  6413  02CD  3903               	andlw	3
  6414  02CE  1903               	btfsc	3,2
  6415  02CF  2ADB               	goto	i1l3094
  6416                           
  6417                           ;/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt.c: 1458:     ((*sp++ = ('-')));
  6418  02D0  302D               	movlw	45
  6419  02D1  00A5               	movwf	??i1_sprintf
  6420  02D2  082D               	movf	i1sprintf@sp,w
  6421  02D3  0084               	movwf	4
  6422  02D4  0825               	movf	??i1_sprintf,w
  6423  02D5  1383               	bcf	3,7	;select IRP bank0
  6424  02D6  0080               	movwf	0
  6425  02D7  3001               	movlw	1
  6426  02D8  00A5               	movwf	??i1_sprintf
  6427  02D9  0825               	movf	??i1_sprintf,w
  6428  02DA  07AD               	addwf	i1sprintf@sp,f
  6429  02DB                     i1l3094:	
  6430                           
  6431                           ;/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt.c: 1488:   };/opt/microchip/xc8/
      +                          v2.05/pic/sources/c90/common/doprnt.c: 1491:   prec = c;
  6432  02DB  0830               	movf	i1sprintf@c,w
  6433  02DC  00A5               	movwf	??i1_sprintf
  6434  02DD  0825               	movf	??i1_sprintf,w
  6435  02DE  00A9               	movwf	i1sprintf@prec
  6436  02DF                     i1l3102:	
  6437                           ;/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt.c: 1493:   while(prec--) {
  6438                           
  6439                           
  6440                           ;/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt.c: 1493:   while(prec--) {
  6441  02DF  30FF               	movlw	255
  6442  02E0  00A5               	movwf	??i1_sprintf
  6443  02E1  0825               	movf	??i1_sprintf,w
  6444  02E2  07A9               	addwf	i1sprintf@prec,f
  6445  02E3  0A29               	incf	i1sprintf@prec,w
  6446  02E4  1903               	btfsc	3,2
  6447  02E5  29C4               	goto	i1l3104
  6448                           
  6449                           ;/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt.c: 1497:    {;/opt/microchip/xc8
      +                          /v2.05/pic/sources/c90/common/doprnt.c: 1508:     c = (val / dpowers[prec]) % 10 + '0';
  6450  02E6  300A               	movlw	10
  6451  02E7  00F8               	movwf	i1___lwmod@divisor
  6452  02E8  3000               	movlw	0
  6453  02E9  00F9               	movwf	i1___lwmod@divisor+1
  6454  02EA  0829               	movf	i1sprintf@prec,w
  6455  02EB  00A5               	movwf	??i1_sprintf
  6456  02EC  0725               	addwf	??i1_sprintf,w
  6457  02ED  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  6458  02EE  0084               	movwf	4
  6459  02EF  120A  118A  2700  120A  118A  	fcall	stringdir
  6460  02F4  00F0               	movwf	i1___lwdiv@divisor
  6461  02F5  120A  118A  2700  120A  118A  	fcall	stringdir
  6462  02FA  00F1               	movwf	i1___lwdiv@divisor+1
  6463  02FB  082C               	movf	i1sprintf@val+1,w
  6464  02FC  00F3               	movwf	i1___lwdiv@dividend+1
  6465  02FD  082B               	movf	i1sprintf@val,w
  6466  02FE  00F2               	movwf	i1___lwdiv@dividend
  6467  02FF  120A  158A  22F0  120A  118A  	fcall	i1___lwdiv
  6468  0304  0871               	movf	?i1___lwdiv+1,w
  6469  0305  00FB               	movwf	i1___lwmod@dividend+1
  6470  0306  0870               	movf	?i1___lwdiv,w
  6471  0307  00FA               	movwf	i1___lwmod@dividend
  6472  0308  120A  158A  22BE  120A  118A  	fcall	i1___lwmod
  6473  030D  0878               	movf	?i1___lwmod,w
  6474  030E  3E30               	addlw	48
  6475  030F  1283               	bcf	3,5	;RP0=0, select bank0
  6476  0310  1303               	bcf	3,6	;RP1=0, select bank0
  6477  0311  00A6               	movwf	??i1_sprintf+1
  6478  0312  0826               	movf	??i1_sprintf+1,w
  6479  0313  00B0               	movwf	i1sprintf@c
  6480                           
  6481                           ;/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt.c: 1542:    };/opt/microchip/xc8
      +                          /v2.05/pic/sources/c90/common/doprnt.c: 1543:    ((*sp++ = (c)));
  6482  0314  0830               	movf	i1sprintf@c,w
  6483  0315  00A5               	movwf	??i1_sprintf
  6484  0316  082D               	movf	i1sprintf@sp,w
  6485  0317  0084               	movwf	4
  6486  0318  0825               	movf	??i1_sprintf,w
  6487  0319  1383               	bcf	3,7	;select IRP bank0
  6488  031A  0080               	movwf	0
  6489  031B  3001               	movlw	1
  6490  031C  00A5               	movwf	??i1_sprintf
  6491  031D  0825               	movf	??i1_sprintf,w
  6492  031E  07AD               	addwf	i1sprintf@sp,f
  6493  031F  2ADF               	goto	i1l3102
  6494  0320                     i1l3106:	
  6495                           
  6496                           ;/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt.c: 1557:  *sp = 0;
  6497  0320  082D               	movf	i1sprintf@sp,w
  6498  0321  0084               	movwf	4
  6499  0322  1383               	bcf	3,7	;select IRP bank0
  6500  0323  0180               	clrf	0
  6501  0324  0008               	return
  6502  0325                     __end_ofi1_sprintf:	
  6503                           
  6504                           	psect	text33
  6505  08E3                     __ptext33:	
  6506 ;; *************** function i1_isdigit *****************
  6507 ;; Defined at:
  6508 ;;		line 8 in file "/opt/microchip/xc8/v2.05/pic/sources/c90/common/isdigit.c"
  6509 ;; Parameters:    Size  Location     Type
  6510 ;;  c               1    wreg     unsigned char 
  6511 ;; Auto vars:     Size  Location     Type
  6512 ;;  c               1    1[COMMON] unsigned char 
  6513 ;; Return value:  Size  Location     Type
  6514 ;;		None               void
  6515 ;; Registers used:
  6516 ;;		wreg, status,2, status,0
  6517 ;; Tracked objects:
  6518 ;;		On entry : 0/0
  6519 ;;		On exit  : 0/0
  6520 ;;		Unchanged: 0/0
  6521 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6522 ;;      Params:         0       0       0       0       0
  6523 ;;      Locals:         2       0       0       0       0
  6524 ;;      Temps:          0       0       0       0       0
  6525 ;;      Totals:         2       0       0       0       0
  6526 ;;Total ram usage:        2 bytes
  6527 ;; Hardware stack levels used:    1
  6528 ;; This function calls:
  6529 ;;		Nothing
  6530 ;; This function is called by:
  6531 ;;		i1_sprintf
  6532 ;; This function uses a non-reentrant model
  6533 ;;
  6534                           
  6535                           
  6536                           ;psect for function i1_isdigit
  6537  08E3                     i1_isdigit:	
  6538                           
  6539                           ;incstack = 0
  6540 ;; hardware stack exceeded
  6541                           ; Regs used in i1_isdigit: [wreg+status,2+status,0]
  6542                           ;i1isdigit@c stored from wreg
  6543  08E3  00F1               	movwf	i1isdigit@c
  6544  08E4  01F0               	clrf	i1_isdigit$1104
  6545  08E5  303A               	movlw	58
  6546  08E6  0271               	subwf	i1isdigit@c,w
  6547  08E7  1803               	skipnc
  6548  08E8  28EF               	goto	i1l2840
  6549  08E9  3030               	movlw	48
  6550  08EA  0271               	subwf	i1isdigit@c,w
  6551  08EB  1C03               	skipc
  6552  08EC  28EF               	goto	i1l2840
  6553  08ED  01F0               	clrf	i1_isdigit$1104
  6554  08EE  0AF0               	incf	i1_isdigit$1104,f
  6555  08EF                     i1l2840:	
  6556  08EF  0C70               	rrf	i1_isdigit$1104,w
  6557  08F0  0008               	return
  6558  08F1                     __end_ofi1_isdigit:	
  6559                           
  6560                           	psect	text34
  6561  0984                     __ptext34:	
  6562 ;; *************** function i1___wmul *****************
  6563 ;; Defined at:
  6564 ;;		line 15 in file "/opt/microchip/xc8/v2.05/pic/sources/c90/common/Umul16.c"
  6565 ;; Parameters:    Size  Location     Type
  6566 ;;  multiplier      2    0[COMMON] unsigned int 
  6567 ;;  multiplicand    2    2[COMMON] unsigned int 
  6568 ;; Auto vars:     Size  Location     Type
  6569 ;;  __wmul          2    4[COMMON] unsigned int 
  6570 ;; Return value:  Size  Location     Type
  6571 ;;                  2    0[COMMON] unsigned int 
  6572 ;; Registers used:
  6573 ;;		wreg, status,2, status,0
  6574 ;; Tracked objects:
  6575 ;;		On entry : 0/0
  6576 ;;		On exit  : 0/0
  6577 ;;		Unchanged: 0/0
  6578 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6579 ;;      Params:         4       0       0       0       0
  6580 ;;      Locals:         2       0       0       0       0
  6581 ;;      Temps:          0       0       0       0       0
  6582 ;;      Totals:         6       0       0       0       0
  6583 ;;Total ram usage:        6 bytes
  6584 ;; Hardware stack levels used:    1
  6585 ;; This function calls:
  6586 ;;		Nothing
  6587 ;; This function is called by:
  6588 ;;		i1_sprintf
  6589 ;; This function uses a non-reentrant model
  6590 ;;
  6591                           
  6592                           
  6593                           ;psect for function i1___wmul
  6594  0984                     i1___wmul:	
  6595                           
  6596                           ;incstack = 0
  6597 ;; hardware stack exceeded
  6598                           ; Regs used in i1___wmul: [wreg+status,2+status,0]
  6599  0984  01F4               	clrf	i1___wmul@product
  6600  0985  01F5               	clrf	i1___wmul@product+1
  6601  0986                     i1l2772:	
  6602  0986  1C70               	btfss	i1___wmul@multiplier,0
  6603  0987  298E               	goto	i1l671
  6604  0988  0872               	movf	i1___wmul@multiplicand,w
  6605  0989  07F4               	addwf	i1___wmul@product,f
  6606  098A  1803               	skipnc
  6607  098B  0AF5               	incf	i1___wmul@product+1,f
  6608  098C  0873               	movf	i1___wmul@multiplicand+1,w
  6609  098D  07F5               	addwf	i1___wmul@product+1,f
  6610  098E                     i1l671:	
  6611  098E  3001               	movlw	1
  6612  098F                     u196_25:	
  6613  098F  1003               	clrc
  6614  0990  0DF2               	rlf	i1___wmul@multiplicand,f
  6615  0991  0DF3               	rlf	i1___wmul@multiplicand+1,f
  6616  0992  3EFF               	addlw	-1
  6617  0993  1D03               	skipz
  6618  0994  298F               	goto	u196_25
  6619  0995  3001               	movlw	1
  6620  0996                     u197_25:	
  6621  0996  1003               	clrc
  6622  0997  0CF1               	rrf	i1___wmul@multiplier+1,f
  6623  0998  0CF0               	rrf	i1___wmul@multiplier,f
  6624  0999  3EFF               	addlw	-1
  6625  099A  1D03               	skipz
  6626  099B  2996               	goto	u197_25
  6627  099C  0870               	movf	i1___wmul@multiplier,w
  6628  099D  0471               	iorwf	i1___wmul@multiplier+1,w
  6629  099E  1D03               	btfss	3,2
  6630  099F  2986               	goto	i1l2772
  6631  09A0  0875               	movf	i1___wmul@product+1,w
  6632  09A1  00F1               	movwf	?i1___wmul+1
  6633  09A2  0874               	movf	i1___wmul@product,w
  6634  09A3  00F0               	movwf	?i1___wmul
  6635  09A4  0008               	return
  6636  09A5                     __end_ofi1___wmul:	
  6637                           
  6638                           	psect	text35
  6639  0ABE                     __ptext35:	
  6640 ;; *************** function i1___lwmod *****************
  6641 ;; Defined at:
  6642 ;;		line 5 in file "/opt/microchip/xc8/v2.05/pic/sources/c90/common/lwmod.c"
  6643 ;; Parameters:    Size  Location     Type
  6644 ;;  divisor         2    8[COMMON] unsigned int 
  6645 ;;  dividend        2   10[COMMON] unsigned int 
  6646 ;; Auto vars:     Size  Location     Type
  6647 ;;  __lwmod         1   13[COMMON] unsigned char 
  6648 ;; Return value:  Size  Location     Type
  6649 ;;                  2    8[COMMON] unsigned int 
  6650 ;; Registers used:
  6651 ;;		wreg, status,2, status,0
  6652 ;; Tracked objects:
  6653 ;;		On entry : 0/0
  6654 ;;		On exit  : 0/0
  6655 ;;		Unchanged: 0/0
  6656 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6657 ;;      Params:         4       0       0       0       0
  6658 ;;      Locals:         1       0       0       0       0
  6659 ;;      Temps:          1       0       0       0       0
  6660 ;;      Totals:         6       0       0       0       0
  6661 ;;Total ram usage:        6 bytes
  6662 ;; Hardware stack levels used:    1
  6663 ;; This function calls:
  6664 ;;		Nothing
  6665 ;; This function is called by:
  6666 ;;		_updateLCD
  6667 ;;		i1_sprintf
  6668 ;; This function uses a non-reentrant model
  6669 ;;
  6670                           
  6671                           
  6672                           ;psect for function i1___lwmod
  6673  0ABE                     i1___lwmod:	
  6674                           
  6675                           ;incstack = 0
  6676 ;; hardware stack exceeded
  6677                           ; Regs used in i1___lwmod: [wreg+status,2+status,0]
  6678  0ABE  0878               	movf	i1___lwmod@divisor,w
  6679  0ABF  0479               	iorwf	i1___lwmod@divisor+1,w
  6680  0AC0  1903               	btfsc	3,2
  6681  0AC1  2AEB               	goto	i1l2828
  6682  0AC2  01FD               	clrf	i1___lwmod@counter
  6683  0AC3  0AFD               	incf	i1___lwmod@counter,f
  6684  0AC4                     i1l2818:	
  6685  0AC4  1BF9               	btfsc	i1___lwmod@divisor+1,7
  6686  0AC5  2AD2               	goto	i1l2820
  6687  0AC6  3001               	movlw	1
  6688  0AC7                     u207_25:	
  6689  0AC7  1003               	clrc
  6690  0AC8  0DF8               	rlf	i1___lwmod@divisor,f
  6691  0AC9  0DF9               	rlf	i1___lwmod@divisor+1,f
  6692  0ACA  3EFF               	addlw	-1
  6693  0ACB  1D03               	skipz
  6694  0ACC  2AC7               	goto	u207_25
  6695  0ACD  3001               	movlw	1
  6696  0ACE  00FC               	movwf	??i1___lwmod
  6697  0ACF  087C               	movf	??i1___lwmod,w
  6698  0AD0  07FD               	addwf	i1___lwmod@counter,f
  6699  0AD1  2AC4               	goto	i1l2818
  6700  0AD2                     i1l2820:	
  6701  0AD2  0879               	movf	i1___lwmod@divisor+1,w
  6702  0AD3  027B               	subwf	i1___lwmod@dividend+1,w
  6703  0AD4  1D03               	skipz
  6704  0AD5  2AD8               	goto	u209_25
  6705  0AD6  0878               	movf	i1___lwmod@divisor,w
  6706  0AD7  027A               	subwf	i1___lwmod@dividend,w
  6707  0AD8                     u209_25:	
  6708  0AD8  1C03               	skipc
  6709  0AD9  2AE0               	goto	i1l2824
  6710  0ADA  0878               	movf	i1___lwmod@divisor,w
  6711  0ADB  02FA               	subwf	i1___lwmod@dividend,f
  6712  0ADC  0879               	movf	i1___lwmod@divisor+1,w
  6713  0ADD  1C03               	skipc
  6714  0ADE  03FB               	decf	i1___lwmod@dividend+1,f
  6715  0ADF  02FB               	subwf	i1___lwmod@dividend+1,f
  6716  0AE0                     i1l2824:	
  6717  0AE0  3001               	movlw	1
  6718  0AE1                     u210_25:	
  6719  0AE1  1003               	clrc
  6720  0AE2  0CF9               	rrf	i1___lwmod@divisor+1,f
  6721  0AE3  0CF8               	rrf	i1___lwmod@divisor,f
  6722  0AE4  3EFF               	addlw	-1
  6723  0AE5  1D03               	skipz
  6724  0AE6  2AE1               	goto	u210_25
  6725  0AE7  3001               	movlw	1
  6726  0AE8  02FD               	subwf	i1___lwmod@counter,f
  6727  0AE9  1D03               	btfss	3,2
  6728  0AEA  2AD2               	goto	i1l2820
  6729  0AEB                     i1l2828:	
  6730  0AEB  087B               	movf	i1___lwmod@dividend+1,w
  6731  0AEC  00F9               	movwf	?i1___lwmod+1
  6732  0AED  087A               	movf	i1___lwmod@dividend,w
  6733  0AEE  00F8               	movwf	?i1___lwmod
  6734  0AEF  0008               	return
  6735  0AF0                     __end_ofi1___lwmod:	
  6736                           
  6737                           	psect	text36
  6738  0AF0                     __ptext36:	
  6739 ;; *************** function i1___lwdiv *****************
  6740 ;; Defined at:
  6741 ;;		line 5 in file "/opt/microchip/xc8/v2.05/pic/sources/c90/common/lwdiv.c"
  6742 ;; Parameters:    Size  Location     Type
  6743 ;;  divisor         2    0[COMMON] unsigned int 
  6744 ;;  dividend        2    2[COMMON] unsigned int 
  6745 ;; Auto vars:     Size  Location     Type
  6746 ;;  __lwdiv         2    5[COMMON] unsigned int 
  6747 ;;  __lwdiv         1    7[COMMON] unsigned char 
  6748 ;; Return value:  Size  Location     Type
  6749 ;;                  2    0[COMMON] unsigned int 
  6750 ;; Registers used:
  6751 ;;		wreg, status,2, status,0
  6752 ;; Tracked objects:
  6753 ;;		On entry : 0/0
  6754 ;;		On exit  : 0/0
  6755 ;;		Unchanged: 0/0
  6756 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6757 ;;      Params:         4       0       0       0       0
  6758 ;;      Locals:         3       0       0       0       0
  6759 ;;      Temps:          1       0       0       0       0
  6760 ;;      Totals:         8       0       0       0       0
  6761 ;;Total ram usage:        8 bytes
  6762 ;; Hardware stack levels used:    1
  6763 ;; This function calls:
  6764 ;;		Nothing
  6765 ;; This function is called by:
  6766 ;;		_updateLCD
  6767 ;;		i1_sprintf
  6768 ;; This function uses a non-reentrant model
  6769 ;;
  6770                           
  6771                           
  6772                           ;psect for function i1___lwdiv
  6773  0AF0                     i1___lwdiv:	
  6774                           
  6775                           ;incstack = 0
  6776 ;; hardware stack exceeded
  6777                           ; Regs used in i1___lwdiv: [wreg+status,2+status,0]
  6778  0AF0  01F5               	clrf	i1___lwdiv@quotient
  6779  0AF1  01F6               	clrf	i1___lwdiv@quotient+1
  6780  0AF2  0870               	movf	i1___lwdiv@divisor,w
  6781  0AF3  0471               	iorwf	i1___lwdiv@divisor+1,w
  6782  0AF4  1903               	btfsc	3,2
  6783  0AF5  2B27               	goto	i1l2806
  6784  0AF6  01F7               	clrf	i1___lwdiv@counter
  6785  0AF7  0AF7               	incf	i1___lwdiv@counter,f
  6786  0AF8                     i1l2794:	
  6787  0AF8  1BF1               	btfsc	i1___lwdiv@divisor+1,7
  6788  0AF9  2B06               	goto	i1l2796
  6789  0AFA  3001               	movlw	1
  6790  0AFB                     u200_25:	
  6791  0AFB  1003               	clrc
  6792  0AFC  0DF0               	rlf	i1___lwdiv@divisor,f
  6793  0AFD  0DF1               	rlf	i1___lwdiv@divisor+1,f
  6794  0AFE  3EFF               	addlw	-1
  6795  0AFF  1D03               	skipz
  6796  0B00  2AFB               	goto	u200_25
  6797  0B01  3001               	movlw	1
  6798  0B02  00F4               	movwf	??i1___lwdiv
  6799  0B03  0874               	movf	??i1___lwdiv,w
  6800  0B04  07F7               	addwf	i1___lwdiv@counter,f
  6801  0B05  2AF8               	goto	i1l2794
  6802  0B06                     i1l2796:	
  6803  0B06  3001               	movlw	1
  6804  0B07                     u202_25:	
  6805  0B07  1003               	clrc
  6806  0B08  0DF5               	rlf	i1___lwdiv@quotient,f
  6807  0B09  0DF6               	rlf	i1___lwdiv@quotient+1,f
  6808  0B0A  3EFF               	addlw	-1
  6809  0B0B  1D03               	skipz
  6810  0B0C  2B07               	goto	u202_25
  6811  0B0D  0871               	movf	i1___lwdiv@divisor+1,w
  6812  0B0E  0273               	subwf	i1___lwdiv@dividend+1,w
  6813  0B0F  1D03               	skipz
  6814  0B10  2B13               	goto	u203_25
  6815  0B11  0870               	movf	i1___lwdiv@divisor,w
  6816  0B12  0272               	subwf	i1___lwdiv@dividend,w
  6817  0B13                     u203_25:	
  6818  0B13  1C03               	skipc
  6819  0B14  2B1C               	goto	i1l2802
  6820  0B15  0870               	movf	i1___lwdiv@divisor,w
  6821  0B16  02F2               	subwf	i1___lwdiv@dividend,f
  6822  0B17  0871               	movf	i1___lwdiv@divisor+1,w
  6823  0B18  1C03               	skipc
  6824  0B19  03F3               	decf	i1___lwdiv@dividend+1,f
  6825  0B1A  02F3               	subwf	i1___lwdiv@dividend+1,f
  6826  0B1B  1475               	bsf	i1___lwdiv@quotient,0
  6827  0B1C                     i1l2802:	
  6828  0B1C  3001               	movlw	1
  6829  0B1D                     u204_25:	
  6830  0B1D  1003               	clrc
  6831  0B1E  0CF1               	rrf	i1___lwdiv@divisor+1,f
  6832  0B1F  0CF0               	rrf	i1___lwdiv@divisor,f
  6833  0B20  3EFF               	addlw	-1
  6834  0B21  1D03               	skipz
  6835  0B22  2B1D               	goto	u204_25
  6836  0B23  3001               	movlw	1
  6837  0B24  02F7               	subwf	i1___lwdiv@counter,f
  6838  0B25  1D03               	btfss	3,2
  6839  0B26  2B06               	goto	i1l2796
  6840  0B27                     i1l2806:	
  6841  0B27  0876               	movf	i1___lwdiv@quotient+1,w
  6842  0B28  00F1               	movwf	?i1___lwdiv+1
  6843  0B29  0875               	movf	i1___lwdiv@quotient,w
  6844  0B2A  00F0               	movwf	?i1___lwdiv
  6845  0B2B  0008               	return
  6846  0B2C                     __end_ofi1___lwdiv:	
  6847                           
  6848                           	psect	text37
  6849  094A                     __ptext37:	
  6850 ;; *************** function i1_putsXLCD *****************
  6851 ;; Defined at:
  6852 ;;		line 419 in file "lcd_pic16.c"
  6853 ;; Parameters:    Size  Location     Type
  6854 ;;  buffer          1    wreg     PTR unsigned char 
  6855 ;;		 -> lineTwo(17), lineOne(17), 
  6856 ;; Auto vars:     Size  Location     Type
  6857 ;;  buffer          1    5[COMMON] PTR unsigned char 
  6858 ;;		 -> lineTwo(17), lineOne(17), 
  6859 ;; Return value:  Size  Location     Type
  6860 ;;                  1    wreg      void 
  6861 ;; Registers used:
  6862 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6863 ;; Tracked objects:
  6864 ;;		On entry : 0/0
  6865 ;;		On exit  : 0/0
  6866 ;;		Unchanged: 0/0
  6867 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6868 ;;      Params:         0       0       0       0       0
  6869 ;;      Locals:         1       0       0       0       0
  6870 ;;      Temps:          1       0       0       0       0
  6871 ;;      Totals:         2       0       0       0       0
  6872 ;;Total ram usage:        2 bytes
  6873 ;; Hardware stack levels used:    1
  6874 ;; Hardware stack levels required when called:    2
  6875 ;; This function calls:
  6876 ;;		i1_BusyXLCD
  6877 ;;		i1_WriteDataXLCD
  6878 ;; This function is called by:
  6879 ;;		_updateLCD
  6880 ;; This function uses a non-reentrant model
  6881 ;;
  6882                           
  6883                           
  6884                           ;psect for function i1_putsXLCD
  6885  094A                     i1_putsXLCD:	
  6886                           
  6887                           ;incstack = 0
  6888 ;; hardware stack exceeded
  6889                           ; Regs used in i1_putsXLCD: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6890                           ;i1putsXLCD@buffer stored from wreg
  6891  094A  00F5               	movwf	i1putsXLCD@buffer
  6892  094B                     i1l3020:	
  6893                           ;lcd_pic16.c: 419: void putsXLCD(char *buffer);lcd_pic16.c: 420: {;lcd_pic16.c: 421:    
      +                               while(*buffer)
  6894                           
  6895                           
  6896                           ;lcd_pic16.c: 421:         while(*buffer)
  6897  094B  0875               	movf	i1putsXLCD@buffer,w
  6898  094C  0084               	movwf	4
  6899  094D  1383               	bcf	3,7	;select IRP bank0
  6900  094E  0800               	movf	0,w
  6901  094F  1903               	btfsc	3,2
  6902  0950  0008               	return
  6903  0951                     i1l3014:	
  6904  0951  120A  158A  20B3  120A  158A  	fcall	i1_BusyXLCD
  6905  0956  3A00               	xorlw	0
  6906  0957  1D03               	skipz
  6907  0958  2951               	goto	i1l3014
  6908                           
  6909                           ;lcd_pic16.c: 424:                 WriteDataXLCD(*buffer);
  6910  0959  0875               	movf	i1putsXLCD@buffer,w
  6911  095A  0084               	movwf	4
  6912  095B  1383               	bcf	3,7	;select IRP bank0
  6913  095C  0800               	movf	0,w
  6914  095D  120A  158A  23B4  120A  158A  	fcall	i1_WriteDataXLCD
  6915                           
  6916                           ;lcd_pic16.c: 425:                 buffer++;
  6917  0962  3001               	movlw	1
  6918  0963  00F4               	movwf	??i1_putsXLCD
  6919  0964  0874               	movf	??i1_putsXLCD,w
  6920  0965  07F5               	addwf	i1putsXLCD@buffer,f
  6921  0966  294B               	goto	i1l3020
  6922  0967                     __end_ofi1_putsXLCD:	
  6923                           
  6924                           	psect	text38
  6925  0BB4                     __ptext38:	
  6926 ;; *************** function i1_WriteDataXLCD *****************
  6927 ;; Defined at:
  6928 ;;		line 110 in file "lcd_pic16.c"
  6929 ;; Parameters:    Size  Location     Type
  6930 ;;  data            1    wreg     unsigned char 
  6931 ;; Auto vars:     Size  Location     Type
  6932 ;;  data            1    3[COMMON] unsigned char 
  6933 ;; Return value:  Size  Location     Type
  6934 ;;                  1    wreg      void 
  6935 ;; Registers used:
  6936 ;;		wreg, status,2, status,0, pclath, cstack
  6937 ;; Tracked objects:
  6938 ;;		On entry : 0/0
  6939 ;;		On exit  : 0/0
  6940 ;;		Unchanged: 0/0
  6941 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6942 ;;      Params:         0       0       0       0       0
  6943 ;;      Locals:         1       0       0       0       0
  6944 ;;      Temps:          2       0       0       0       0
  6945 ;;      Totals:         3       0       0       0       0
  6946 ;;Total ram usage:        3 bytes
  6947 ;; Hardware stack levels used:    1
  6948 ;; Hardware stack levels required when called:    1
  6949 ;; This function calls:
  6950 ;;		i1_DelayFor18TCY
  6951 ;; This function is called by:
  6952 ;;		i1_putsXLCD
  6953 ;; This function uses a non-reentrant model
  6954 ;;
  6955                           
  6956                           
  6957                           ;psect for function i1_WriteDataXLCD
  6958  0BB4                     i1_WriteDataXLCD:	
  6959                           
  6960                           ;incstack = 0
  6961 ;; hardware stack exceeded
  6962                           ; Regs used in i1_WriteDataXLCD: [wreg+status,2+status,0+pclath+cstack]
  6963                           ;i1WriteDataXLCD@data stored from wreg
  6964  0BB4  00F3               	movwf	i1WriteDataXLCD@data
  6965                           
  6966                           ;lcd_pic16.c: 110: void WriteDataXLCD(char data);lcd_pic16.c: 111: {;lcd_pic16.c: 125:  
      +                                 TRISB &= 0x0f;
  6967  0BB5  300F               	movlw	15
  6968  0BB6  00F1               	movwf	??i1_WriteDataXLCD
  6969  0BB7  0871               	movf	??i1_WriteDataXLCD,w
  6970  0BB8  1683               	bsf	3,5	;RP0=1, select bank1
  6971  0BB9  1303               	bcf	3,6	;RP1=0, select bank1
  6972  0BBA  0586               	andwf	6,f	;volatile
  6973                           
  6974                           ;lcd_pic16.c: 126:         PORTB &= 0x0f;
  6975  0BBB  300F               	movlw	15
  6976  0BBC  00F1               	movwf	??i1_WriteDataXLCD
  6977  0BBD  0871               	movf	??i1_WriteDataXLCD,w
  6978  0BBE  1283               	bcf	3,5	;RP0=0, select bank0
  6979  0BBF  1303               	bcf	3,6	;RP1=0, select bank0
  6980  0BC0  0586               	andwf	6,f	;volatile
  6981                           
  6982                           ;lcd_pic16.c: 127:         PORTB |= data&0xf0;
  6983  0BC1  0873               	movf	i1WriteDataXLCD@data,w
  6984  0BC2  39F0               	andlw	240
  6985  0BC3  00F1               	movwf	??i1_WriteDataXLCD
  6986  0BC4  0871               	movf	??i1_WriteDataXLCD,w
  6987  0BC5  0486               	iorwf	6,f	;volatile
  6988                           
  6989                           ;lcd_pic16.c: 133:         PORTBbits.RB1 = 1;
  6990  0BC6  1486               	bsf	6,1	;volatile
  6991                           
  6992                           ;lcd_pic16.c: 134:         PORTBbits.RB2 = 0;
  6993  0BC7  1106               	bcf	6,2	;volatile
  6994                           
  6995                           ;lcd_pic16.c: 135:         DelayFor18TCY();
  6996  0BC8  120A  158A  2097  120A  158A  	fcall	i1_DelayFor18TCY
  6997                           
  6998                           ;lcd_pic16.c: 136:         PORTBbits.RB3 = 1;
  6999  0BCD  1283               	bcf	3,5	;RP0=0, select bank0
  7000  0BCE  1303               	bcf	3,6	;RP1=0, select bank0
  7001  0BCF  1586               	bsf	6,3	;volatile
  7002                           
  7003                           ;lcd_pic16.c: 137:         DelayFor18TCY();
  7004  0BD0  120A  158A  2097  120A  158A  	fcall	i1_DelayFor18TCY
  7005                           
  7006                           ;lcd_pic16.c: 138:         PORTBbits.RB3 = 0;
  7007  0BD5  1283               	bcf	3,5	;RP0=0, select bank0
  7008  0BD6  1303               	bcf	3,6	;RP1=0, select bank0
  7009  0BD7  1186               	bcf	6,3	;volatile
  7010                           
  7011                           ;lcd_pic16.c: 140:         PORTB &= 0x0f;
  7012  0BD8  300F               	movlw	15
  7013  0BD9  00F1               	movwf	??i1_WriteDataXLCD
  7014  0BDA  0871               	movf	??i1_WriteDataXLCD,w
  7015  0BDB  0586               	andwf	6,f	;volatile
  7016                           
  7017                           ;lcd_pic16.c: 141:         PORTB |= ((data<<4)&0xf0);
  7018  0BDC  0873               	movf	i1WriteDataXLCD@data,w
  7019  0BDD  00F1               	movwf	??i1_WriteDataXLCD
  7020  0BDE  3003               	movlw	3
  7021  0BDF                     u194_25:	
  7022  0BDF  1003               	clrc
  7023  0BE0  0DF1               	rlf	??i1_WriteDataXLCD,f
  7024  0BE1  3EFF               	addlw	-1
  7025  0BE2  1D03               	skipz
  7026  0BE3  2BDF               	goto	u194_25
  7027  0BE4  1003               	clrc
  7028  0BE5  0D71               	rlf	??i1_WriteDataXLCD,w
  7029  0BE6  39F0               	andlw	240
  7030  0BE7  00F2               	movwf	??i1_WriteDataXLCD+1
  7031  0BE8  0872               	movf	??i1_WriteDataXLCD+1,w
  7032  0BE9  0486               	iorwf	6,f	;volatile
  7033                           
  7034                           ;lcd_pic16.c: 146:         DelayFor18TCY();
  7035  0BEA  120A  158A  2097  120A  158A  	fcall	i1_DelayFor18TCY
  7036                           
  7037                           ;lcd_pic16.c: 147:         PORTBbits.RB3 = 1;
  7038  0BEF  1283               	bcf	3,5	;RP0=0, select bank0
  7039  0BF0  1303               	bcf	3,6	;RP1=0, select bank0
  7040  0BF1  1586               	bsf	6,3	;volatile
  7041                           
  7042                           ;lcd_pic16.c: 148:         DelayFor18TCY();
  7043  0BF2  120A  158A  2097   	fcall	i1_DelayFor18TCY
  7044                           
  7045                           ;lcd_pic16.c: 149:         PORTBbits.RB3 = 0;
  7046  0BF5  1283               	bcf	3,5	;RP0=0, select bank0
  7047  0BF6  1303               	bcf	3,6	;RP1=0, select bank0
  7048  0BF7  1186               	bcf	6,3	;volatile
  7049                           
  7050                           ;lcd_pic16.c: 151:         TRISB |= 0xf0;
  7051  0BF8  30F0               	movlw	240
  7052  0BF9  00F1               	movwf	??i1_WriteDataXLCD
  7053  0BFA  0871               	movf	??i1_WriteDataXLCD,w
  7054  0BFB  1683               	bsf	3,5	;RP0=1, select bank1
  7055  0BFC  1303               	bcf	3,6	;RP1=0, select bank1
  7056  0BFD  0486               	iorwf	6,f	;volatile
  7057  0BFE  0008               	return
  7058  0BFF                     __end_ofi1_WriteDataXLCD:	
  7059                           
  7060                           	psect	text39
  7061  08B3                     __ptext39:	
  7062 ;; *************** function i1_BusyXLCD *****************
  7063 ;; Defined at:
  7064 ;;		line 451 in file "lcd_pic16.c"
  7065 ;; Parameters:    Size  Location     Type
  7066 ;;		None
  7067 ;; Auto vars:     Size  Location     Type
  7068 ;;		None
  7069 ;; Return value:  Size  Location     Type
  7070 ;;                  1    wreg      unsigned char 
  7071 ;; Registers used:
  7072 ;;		wreg
  7073 ;; Tracked objects:
  7074 ;;		On entry : 0/0
  7075 ;;		On exit  : 0/0
  7076 ;;		Unchanged: 0/0
  7077 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7078 ;;      Params:         0       0       0       0       0
  7079 ;;      Locals:         0       0       0       0       0
  7080 ;;      Temps:          2       0       0       0       0
  7081 ;;      Totals:         2       0       0       0       0
  7082 ;;Total ram usage:        2 bytes
  7083 ;; Hardware stack levels used:    1
  7084 ;; This function calls:
  7085 ;;		Nothing
  7086 ;; This function is called by:
  7087 ;;		i1_putsXLCD
  7088 ;; This function uses a non-reentrant model
  7089 ;;
  7090                           
  7091                           
  7092                           ;psect for function i1_BusyXLCD
  7093  08B3                     i1_BusyXLCD:	
  7094                           
  7095                           ;lcd_pic16.c: 504:         _delay((unsigned long)((5)*(4000000/4000.0)));
  7096                           
  7097                           ;incstack = 0
  7098 ;; hardware stack exceeded
  7099                           ; Regs used in i1_BusyXLCD: [wreg]
  7100  08B3  3007               	movlw	7
  7101  08B4  00F1               	movwf	??i1_BusyXLCD+1
  7102  08B5  307D               	movlw	125
  7103  08B6  00F0               	movwf	??i1_BusyXLCD
  7104  08B7                     u380_27:	
  7105  08B7  0BF0               	decfsz	??i1_BusyXLCD,f
  7106  08B8  28B7               	goto	u380_27
  7107  08B9  0BF1               	decfsz	??i1_BusyXLCD+1,f
  7108  08BA  28B7               	goto	u380_27
  7109                           
  7110                           ;lcd_pic16.c: 505:         return 0;
  7111  08BB  3000               	movlw	0
  7112  08BC  0008               	return
  7113  08BD                     __end_ofi1_BusyXLCD:	
  7114                           
  7115                           	psect	text40
  7116  0C4A                     __ptext40:	
  7117 ;; *************** function i1_SetDDRamAddr *****************
  7118 ;; Defined at:
  7119 ;;		line 217 in file "lcd_pic16.c"
  7120 ;; Parameters:    Size  Location     Type
  7121 ;;  DDaddr          1    wreg     unsigned char 
  7122 ;; Auto vars:     Size  Location     Type
  7123 ;;  DDaddr          1    3[COMMON] unsigned char 
  7124 ;; Return value:  Size  Location     Type
  7125 ;;                  1    wreg      void 
  7126 ;; Registers used:
  7127 ;;		wreg, status,2, status,0, pclath, cstack
  7128 ;; Tracked objects:
  7129 ;;		On entry : 0/0
  7130 ;;		On exit  : 0/0
  7131 ;;		Unchanged: 0/0
  7132 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7133 ;;      Params:         0       0       0       0       0
  7134 ;;      Locals:         1       0       0       0       0
  7135 ;;      Temps:          2       0       0       0       0
  7136 ;;      Totals:         3       0       0       0       0
  7137 ;;Total ram usage:        3 bytes
  7138 ;; Hardware stack levels used:    1
  7139 ;; Hardware stack levels required when called:    1
  7140 ;; This function calls:
  7141 ;;		i1_DelayFor18TCY
  7142 ;; This function is called by:
  7143 ;;		_updateLCD
  7144 ;; This function uses a non-reentrant model
  7145 ;;
  7146                           
  7147                           
  7148                           ;psect for function i1_SetDDRamAddr
  7149  0C4A                     i1_SetDDRamAddr:	
  7150                           
  7151                           ;incstack = 0
  7152 ;; hardware stack exceeded
  7153                           ; Regs used in i1_SetDDRamAddr: [wreg+status,2+status,0+pclath+cstack]
  7154                           ;i1SetDDRamAddr@DDaddr stored from wreg
  7155  0C4A  00F3               	movwf	i1SetDDRamAddr@DDaddr
  7156                           
  7157                           ;lcd_pic16.c: 217: void SetDDRamAddr(unsigned char DDaddr);lcd_pic16.c: 218: {;lcd_pic16
      +                          .c: 232:         TRISB &= 0x0f;
  7158  0C4B  300F               	movlw	15
  7159  0C4C  00F1               	movwf	??i1_SetDDRamAddr
  7160  0C4D  0871               	movf	??i1_SetDDRamAddr,w
  7161  0C4E  1683               	bsf	3,5	;RP0=1, select bank1
  7162  0C4F  1303               	bcf	3,6	;RP1=0, select bank1
  7163  0C50  0586               	andwf	6,f	;volatile
  7164                           
  7165                           ;lcd_pic16.c: 233:         PORTB &= 0x0f;
  7166  0C51  300F               	movlw	15
  7167  0C52  00F1               	movwf	??i1_SetDDRamAddr
  7168  0C53  0871               	movf	??i1_SetDDRamAddr,w
  7169  0C54  1283               	bcf	3,5	;RP0=0, select bank0
  7170  0C55  1303               	bcf	3,6	;RP1=0, select bank0
  7171  0C56  0586               	andwf	6,f	;volatile
  7172                           
  7173                           ;lcd_pic16.c: 234:         PORTB |= ((DDaddr | 0b10000000) & 0xf0);
  7174  0C57  0873               	movf	i1SetDDRamAddr@DDaddr,w
  7175  0C58  3880               	iorlw	128
  7176  0C59  39F0               	andlw	240
  7177  0C5A  00F1               	movwf	??i1_SetDDRamAddr
  7178  0C5B  0871               	movf	??i1_SetDDRamAddr,w
  7179  0C5C  0486               	iorwf	6,f	;volatile
  7180                           
  7181                           ;lcd_pic16.c: 240:         PORTBbits.RB2 = 0;
  7182  0C5D  1106               	bcf	6,2	;volatile
  7183                           
  7184                           ;lcd_pic16.c: 241:         PORTBbits.RB1 = 0;
  7185  0C5E  1086               	bcf	6,1	;volatile
  7186                           
  7187                           ;lcd_pic16.c: 242:         DelayFor18TCY();
  7188  0C5F  120A  158A  2097  120A  158A  	fcall	i1_DelayFor18TCY
  7189                           
  7190                           ;lcd_pic16.c: 243:         PORTBbits.RB3 = 1;
  7191  0C64  1283               	bcf	3,5	;RP0=0, select bank0
  7192  0C65  1303               	bcf	3,6	;RP1=0, select bank0
  7193  0C66  1586               	bsf	6,3	;volatile
  7194                           
  7195                           ;lcd_pic16.c: 244:         DelayFor18TCY();
  7196  0C67  120A  158A  2097  120A  158A  	fcall	i1_DelayFor18TCY
  7197                           
  7198                           ;lcd_pic16.c: 245:         PORTBbits.RB3 = 0;
  7199  0C6C  1283               	bcf	3,5	;RP0=0, select bank0
  7200  0C6D  1303               	bcf	3,6	;RP1=0, select bank0
  7201  0C6E  1186               	bcf	6,3	;volatile
  7202                           
  7203                           ;lcd_pic16.c: 247:         PORTB &= 0x0f;
  7204  0C6F  300F               	movlw	15
  7205  0C70  00F1               	movwf	??i1_SetDDRamAddr
  7206  0C71  0871               	movf	??i1_SetDDRamAddr,w
  7207  0C72  0586               	andwf	6,f	;volatile
  7208                           
  7209                           ;lcd_pic16.c: 248:         PORTB |= ((DDaddr<<4)&0xf0);
  7210  0C73  0873               	movf	i1SetDDRamAddr@DDaddr,w
  7211  0C74  00F1               	movwf	??i1_SetDDRamAddr
  7212  0C75  3003               	movlw	3
  7213  0C76                     u227_25:	
  7214  0C76  1003               	clrc
  7215  0C77  0DF1               	rlf	??i1_SetDDRamAddr,f
  7216  0C78  3EFF               	addlw	-1
  7217  0C79  1D03               	skipz
  7218  0C7A  2C76               	goto	u227_25
  7219  0C7B  1003               	clrc
  7220  0C7C  0D71               	rlf	??i1_SetDDRamAddr,w
  7221  0C7D  39F0               	andlw	240
  7222  0C7E  00F2               	movwf	??i1_SetDDRamAddr+1
  7223  0C7F  0872               	movf	??i1_SetDDRamAddr+1,w
  7224  0C80  0486               	iorwf	6,f	;volatile
  7225                           
  7226                           ;lcd_pic16.c: 253:         DelayFor18TCY();
  7227  0C81  120A  158A  2097  120A  158A  	fcall	i1_DelayFor18TCY
  7228                           
  7229                           ;lcd_pic16.c: 254:         PORTBbits.RB3 = 1;
  7230  0C86  1283               	bcf	3,5	;RP0=0, select bank0
  7231  0C87  1303               	bcf	3,6	;RP1=0, select bank0
  7232  0C88  1586               	bsf	6,3	;volatile
  7233                           
  7234                           ;lcd_pic16.c: 255:         DelayFor18TCY();
  7235  0C89  120A  158A  2097   	fcall	i1_DelayFor18TCY
  7236                           
  7237                           ;lcd_pic16.c: 256:         PORTBbits.RB3 = 0;
  7238  0C8C  1283               	bcf	3,5	;RP0=0, select bank0
  7239  0C8D  1303               	bcf	3,6	;RP1=0, select bank0
  7240  0C8E  1186               	bcf	6,3	;volatile
  7241                           
  7242                           ;lcd_pic16.c: 258:         TRISB |= 0xf0;
  7243  0C8F  30F0               	movlw	240
  7244  0C90  00F1               	movwf	??i1_SetDDRamAddr
  7245  0C91  0871               	movf	??i1_SetDDRamAddr,w
  7246  0C92  1683               	bsf	3,5	;RP0=1, select bank1
  7247  0C93  1303               	bcf	3,6	;RP1=0, select bank1
  7248  0C94  0486               	iorwf	6,f	;volatile
  7249  0C95  0008               	return
  7250  0C96                     __end_ofi1_SetDDRamAddr:	
  7251                           
  7252                           	psect	text41
  7253  0897                     __ptext41:	
  7254 ;; *************** function i1_DelayFor18TCY *****************
  7255 ;; Defined at:
  7256 ;;		line 22 in file "lcd_pic16.c"
  7257 ;; Parameters:    Size  Location     Type
  7258 ;;		None
  7259 ;; Auto vars:     Size  Location     Type
  7260 ;;		None
  7261 ;; Return value:  Size  Location     Type
  7262 ;;                  1    wreg      void 
  7263 ;; Registers used:
  7264 ;;		wreg
  7265 ;; Tracked objects:
  7266 ;;		On entry : 0/0
  7267 ;;		On exit  : 0/0
  7268 ;;		Unchanged: 0/0
  7269 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7270 ;;      Params:         0       0       0       0       0
  7271 ;;      Locals:         0       0       0       0       0
  7272 ;;      Temps:          1       0       0       0       0
  7273 ;;      Totals:         1       0       0       0       0
  7274 ;;Total ram usage:        1 bytes
  7275 ;; Hardware stack levels used:    1
  7276 ;; This function calls:
  7277 ;;		Nothing
  7278 ;; This function is called by:
  7279 ;;		i1_WriteDataXLCD
  7280 ;;		i1_SetDDRamAddr
  7281 ;; This function uses a non-reentrant model
  7282 ;;
  7283                           
  7284                           
  7285                           ;psect for function i1_DelayFor18TCY
  7286  0897                     i1_DelayFor18TCY:	
  7287                           
  7288                           ;lcd_pic16.c: 24:    _delay((unsigned long)((18)*(4000000/4000000.0)));
  7289                           
  7290                           ;incstack = 0
  7291 ;; hardware stack exceeded
  7292                           ; Regs used in i1_DelayFor18TCY: [wreg]
  7293  0897  3005               	movlw	5
  7294  0898  00F0               	movwf	??i1_DelayFor18TCY
  7295  0899                     u381_27:	
  7296  0899  0BF0               	decfsz	??i1_DelayFor18TCY,f
  7297  089A  2899               	goto	u381_27
  7298  089B  289C               	nop2
  7299  089C  0008               	return
  7300  089D                     __end_ofi1_DelayFor18TCY:	
  7301                           
  7302                           	psect	text42
  7303  0B6C                     __ptext42:	
  7304 ;; *************** function _time *****************
  7305 ;; Defined at:
  7306 ;;		line 138 in file "main.c"
  7307 ;; Parameters:    Size  Location     Type
  7308 ;;		None
  7309 ;; Auto vars:     Size  Location     Type
  7310 ;;		None
  7311 ;; Return value:  Size  Location     Type
  7312 ;;                  1    wreg      void 
  7313 ;; Registers used:
  7314 ;;		wreg, status,2, status,0, pclath, cstack
  7315 ;; Tracked objects:
  7316 ;;		On entry : 0/0
  7317 ;;		On exit  : 0/0
  7318 ;;		Unchanged: 0/0
  7319 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7320 ;;      Params:         0       0       0       0       0
  7321 ;;      Locals:         0       0       0       0       0
  7322 ;;      Temps:          1       0       0       0       0
  7323 ;;      Totals:         1       0       0       0       0
  7324 ;;Total ram usage:        1 bytes
  7325 ;; Hardware stack levels used:    1
  7326 ;; Hardware stack levels required when called:    2
  7327 ;; This function calls:
  7328 ;;		i1_setData
  7329 ;; This function is called by:
  7330 ;;		_inter
  7331 ;; This function uses a non-reentrant model
  7332 ;;
  7333                           
  7334                           
  7335                           ;psect for function _time
  7336  0B6C                     _time:	
  7337                           
  7338                           ;main.c: 139:     hundredMiliSeconds++;
  7339                           
  7340                           ;incstack = 0
  7341 ;; hardware stack exceeded
  7342                           ; Regs used in _time: [wreg+status,2+status,0+pclath+cstack]
  7343  0B6C  3001               	movlw	1
  7344  0B6D  00F6               	movwf	??_time
  7345  0B6E  0876               	movf	??_time,w
  7346  0B6F  1283               	bcf	3,5	;RP0=0, select bank0
  7347  0B70  1303               	bcf	3,6	;RP1=0, select bank0
  7348  0B71  07C9               	addwf	_hundredMiliSeconds,f
  7349                           
  7350                           ;main.c: 140:     if(hundredMiliSeconds >= 10){
  7351  0B72  300A               	movlw	10
  7352  0B73  0249               	subwf	_hundredMiliSeconds,w
  7353  0B74  1C03               	skipc
  7354  0B75  0008               	return
  7355                           
  7356                           ;main.c: 141:         hundredMiliSeconds = 0;
  7357  0B76  01C9               	clrf	_hundredMiliSeconds
  7358                           
  7359                           ;main.c: 142:         seconds++;
  7360  0B77  3001               	movlw	1
  7361  0B78  00F6               	movwf	??_time
  7362  0B79  0876               	movf	??_time,w
  7363  0B7A  07CA               	addwf	_seconds,f
  7364                           
  7365                           ;main.c: 143:         if(seconds >= 60){
  7366  0B7B  303C               	movlw	60
  7367  0B7C  024A               	subwf	_seconds,w
  7368  0B7D  1C03               	skipc
  7369  0B7E  0008               	return
  7370                           
  7371                           ;main.c: 144:             seconds = 0;
  7372  0B7F  01CA               	clrf	_seconds
  7373                           
  7374                           ;main.c: 145:             minutes++;
  7375  0B80  3001               	movlw	1
  7376  0B81  00F6               	movwf	??_time
  7377  0B82  0876               	movf	??_time,w
  7378  0B83  07CD               	addwf	_minutes,f
  7379                           
  7380                           ;main.c: 146:             if(minutes >= 60){
  7381  0B84  303C               	movlw	60
  7382  0B85  024D               	subwf	_minutes,w
  7383  0B86  1C03               	skipc
  7384  0B87  0008               	return
  7385                           
  7386                           ;main.c: 147:                 minutes = 0;
  7387  0B88  01CD               	clrf	_minutes
  7388                           
  7389                           ;main.c: 148:                 hours++;
  7390  0B89  3001               	movlw	1
  7391  0B8A  00F6               	movwf	??_time
  7392  0B8B  0876               	movf	??_time,w
  7393  0B8C  07CE               	addwf	_hours,f
  7394                           
  7395                           ;main.c: 149:                 setData(0);
  7396  0B8D  3000               	movlw	0
  7397  0B8E  120A  158A  263E  120A  158A  	fcall	i1_setData
  7398                           
  7399                           ;main.c: 150:                 if(hours >= 24){
  7400  0B93  3018               	movlw	24
  7401  0B94  1283               	bcf	3,5	;RP0=0, select bank0
  7402  0B95  1303               	bcf	3,6	;RP1=0, select bank0
  7403  0B96  024E               	subwf	_hours,w
  7404  0B97  1C03               	skipc
  7405  0B98  0008               	return
  7406                           
  7407                           ;main.c: 151:                     hours = 0;
  7408  0B99  01CE               	clrf	_hours
  7409                           
  7410                           ;main.c: 152:                     days++;
  7411  0B9A  3001               	movlw	1
  7412  0B9B  00F6               	movwf	??_time
  7413  0B9C  0876               	movf	??_time,w
  7414  0B9D  07CF               	addwf	_days,f
  7415                           
  7416                           ;main.c: 153:                     if(days >= 30){
  7417  0B9E  301E               	movlw	30
  7418  0B9F  024F               	subwf	_days,w
  7419  0BA0  1C03               	skipc
  7420  0BA1  2BA7               	goto	i1l3366
  7421                           
  7422                           ;main.c: 154:                         days = 0;
  7423  0BA2  01CF               	clrf	_days
  7424                           
  7425                           ;main.c: 155:                         months++;
  7426  0BA3  3001               	movlw	1
  7427  0BA4  00F6               	movwf	??_time
  7428  0BA5  0876               	movf	??_time,w
  7429  0BA6  07D0               	addwf	_months,f
  7430  0BA7                     i1l3366:	
  7431  0BA7  300D               	movlw	13
  7432  0BA8  064F               	xorwf	_days,w
  7433  0BA9  1D03               	btfss	3,2
  7434  0BAA  2BB1               	goto	i1l234
  7435  0BAB  3006               	movlw	6
  7436  0BAC  0650               	xorwf	_months,w
  7437  0BAD  1D03               	btfss	3,2
  7438  0BAE  2BB1               	goto	i1l234
  7439  0BAF  01C8               	clrf	_functionalStat
  7440                           
  7441                           ;main.c: 159:                     }else{
  7442  0BB0  0008               	return
  7443  0BB1                     i1l234:	
  7444  0BB1  01C8               	clrf	_functionalStat
  7445  0BB2  0AC8               	incf	_functionalStat,f
  7446  0BB3  0008               	return
  7447  0BB4                     __end_of_time:	
  7448                           
  7449                           	psect	text43
  7450  0E3E                     __ptext43:	
  7451 ;; *************** function i1_setData *****************
  7452 ;; Defined at:
  7453 ;;		line 44 in file "eeprom.c"
  7454 ;; Parameters:    Size  Location     Type
  7455 ;;  full            1    wreg     unsigned char 
  7456 ;; Auto vars:     Size  Location     Type
  7457 ;;  full            1    5[COMMON] unsigned char 
  7458 ;;  setData         1    4[COMMON] unsigned char 
  7459 ;;  setData         1    3[COMMON] unsigned char 
  7460 ;; Return value:  Size  Location     Type
  7461 ;;                  1    wreg      void 
  7462 ;; Registers used:
  7463 ;;		wreg, status,2, status,0, pclath, cstack
  7464 ;; Tracked objects:
  7465 ;;		On entry : 0/0
  7466 ;;		On exit  : 0/0
  7467 ;;		Unchanged: 0/0
  7468 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7469 ;;      Params:         0       0       0       0       0
  7470 ;;      Locals:         3       0       0       0       0
  7471 ;;      Temps:          1       0       0       0       0
  7472 ;;      Totals:         4       0       0       0       0
  7473 ;;Total ram usage:        4 bytes
  7474 ;; Hardware stack levels used:    1
  7475 ;; Hardware stack levels required when called:    1
  7476 ;; This function calls:
  7477 ;;		i1_writeEEPROM
  7478 ;; This function is called by:
  7479 ;;		_time
  7480 ;; This function uses a non-reentrant model
  7481 ;;
  7482                           
  7483                           
  7484                           ;psect for function i1_setData
  7485  0E3E                     i1_setData:	
  7486                           
  7487                           ;incstack = 0
  7488 ;; hardware stack exceeded
  7489                           ; Regs used in i1_setData: [wreg+status,2+status,0+pclath+cstack]
  7490                           ;i1setData@full stored from wreg
  7491  0E3E  00F5               	movwf	i1setData@full
  7492                           
  7493                           ;eeprom.c: 45:     unsigned char data0 = frequency & 0x00FF;
  7494  0E3F  1283               	bcf	3,5	;RP0=0, select bank0
  7495  0E40  1303               	bcf	3,6	;RP1=0, select bank0
  7496  0E41  0844               	movf	_frequency,w
  7497  0E42  00F2               	movwf	??i1_setData
  7498  0E43  0872               	movf	??i1_setData,w
  7499  0E44  00F3               	movwf	i1setData@data0
  7500                           
  7501                           ;eeprom.c: 46:     unsigned char data1 = frequency >> 8;
  7502  0E45  0845               	movf	_frequency+1,w
  7503  0E46  00F2               	movwf	??i1_setData
  7504  0E47  0872               	movf	??i1_setData,w
  7505  0E48  00F4               	movwf	i1setData@data1
  7506                           
  7507                           ;eeprom.c: 47:     if(full)writeEEPROM(data0 ,0);
  7508  0E49  0875               	movf	i1setData@full,w
  7509  0E4A  1903               	btfsc	3,2
  7510  0E4B  2E53               	goto	i1l2978
  7511  0E4C  01F0               	clrf	i1writeEEPROM@address
  7512  0E4D  0873               	movf	i1setData@data0,w
  7513  0E4E  120A  158A  2133  120A  158A  	fcall	i1_writeEEPROM
  7514  0E53                     i1l2978:	
  7515                           
  7516                           ;eeprom.c: 48:     if(full)writeEEPROM(data1 ,1);
  7517  0E53  0875               	movf	i1setData@full,w
  7518  0E54  1903               	btfsc	3,2
  7519  0E55  2E5E               	goto	i1l70
  7520  0E56  01F0               	clrf	i1writeEEPROM@address
  7521  0E57  0AF0               	incf	i1writeEEPROM@address,f
  7522  0E58  0874               	movf	i1setData@data1,w
  7523  0E59  120A  158A  2133  120A  158A  	fcall	i1_writeEEPROM
  7524  0E5E                     i1l70:	
  7525                           
  7526                           ;eeprom.c: 49:     writeEEPROM(months ,2);
  7527  0E5E  3002               	movlw	2
  7528  0E5F  00F2               	movwf	??i1_setData
  7529  0E60  0872               	movf	??i1_setData,w
  7530  0E61  00F0               	movwf	i1writeEEPROM@address
  7531  0E62  1283               	bcf	3,5	;RP0=0, select bank0
  7532  0E63  1303               	bcf	3,6	;RP1=0, select bank0
  7533  0E64  0850               	movf	_months,w
  7534  0E65  120A  158A  2133  120A  158A  	fcall	i1_writeEEPROM
  7535                           
  7536                           ;eeprom.c: 50:     writeEEPROM(days ,3);
  7537  0E6A  3003               	movlw	3
  7538  0E6B  00F2               	movwf	??i1_setData
  7539  0E6C  0872               	movf	??i1_setData,w
  7540  0E6D  00F0               	movwf	i1writeEEPROM@address
  7541  0E6E  1283               	bcf	3,5	;RP0=0, select bank0
  7542  0E6F  1303               	bcf	3,6	;RP1=0, select bank0
  7543  0E70  084F               	movf	_days,w
  7544  0E71  120A  158A  2133  120A  158A  	fcall	i1_writeEEPROM
  7545                           
  7546                           ;eeprom.c: 51:     writeEEPROM(hours ,4);
  7547  0E76  3004               	movlw	4
  7548  0E77  00F2               	movwf	??i1_setData
  7549  0E78  0872               	movf	??i1_setData,w
  7550  0E79  00F0               	movwf	i1writeEEPROM@address
  7551  0E7A  1283               	bcf	3,5	;RP0=0, select bank0
  7552  0E7B  1303               	bcf	3,6	;RP1=0, select bank0
  7553  0E7C  084E               	movf	_hours,w
  7554  0E7D  120A  158A  2133  120A  158A  	fcall	i1_writeEEPROM
  7555                           
  7556                           ;eeprom.c: 52:     if(full)writeEEPROM(minutes ,5);
  7557  0E82  0875               	movf	i1setData@full,w
  7558  0E83  1903               	btfsc	3,2
  7559  0E84  2E91               	goto	i1l71
  7560  0E85  3005               	movlw	5
  7561  0E86  00F2               	movwf	??i1_setData
  7562  0E87  0872               	movf	??i1_setData,w
  7563  0E88  00F0               	movwf	i1writeEEPROM@address
  7564  0E89  1283               	bcf	3,5	;RP0=0, select bank0
  7565  0E8A  1303               	bcf	3,6	;RP1=0, select bank0
  7566  0E8B  084D               	movf	_minutes,w
  7567  0E8C  120A  158A  2133  120A  158A  	fcall	i1_writeEEPROM
  7568  0E91                     i1l71:	
  7569                           
  7570                           ;eeprom.c: 53:     writeEEPROM(functionalStat ,6);
  7571  0E91  3006               	movlw	6
  7572  0E92  00F2               	movwf	??i1_setData
  7573  0E93  0872               	movf	??i1_setData,w
  7574  0E94  00F0               	movwf	i1writeEEPROM@address
  7575  0E95  1283               	bcf	3,5	;RP0=0, select bank0
  7576  0E96  1303               	bcf	3,6	;RP1=0, select bank0
  7577  0E97  0848               	movf	_functionalStat,w
  7578  0E98  120A  158A  2133   	fcall	i1_writeEEPROM
  7579  0E9B  0008               	return
  7580  0E9C                     __end_ofi1_setData:	
  7581                           
  7582                           	psect	text44
  7583  0933                     __ptext44:	
  7584 ;; *************** function i1_writeEEPROM *****************
  7585 ;; Defined at:
  7586 ;;		line 14 in file "eeprom.c"
  7587 ;; Parameters:    Size  Location     Type
  7588 ;;  data            1    wreg     unsigned char 
  7589 ;;  address         1    0[COMMON] unsigned char 
  7590 ;; Auto vars:     Size  Location     Type
  7591 ;;  data            1    1[COMMON] unsigned char 
  7592 ;; Return value:  Size  Location     Type
  7593 ;;                  1    wreg      void 
  7594 ;; Registers used:
  7595 ;;		wreg
  7596 ;; Tracked objects:
  7597 ;;		On entry : 0/0
  7598 ;;		On exit  : 0/0
  7599 ;;		Unchanged: 0/0
  7600 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7601 ;;      Params:         1       0       0       0       0
  7602 ;;      Locals:         1       0       0       0       0
  7603 ;;      Temps:          0       0       0       0       0
  7604 ;;      Totals:         2       0       0       0       0
  7605 ;;Total ram usage:        2 bytes
  7606 ;; Hardware stack levels used:    1
  7607 ;; This function calls:
  7608 ;;		Nothing
  7609 ;; This function is called by:
  7610 ;;		i1_setData
  7611 ;; This function uses a non-reentrant model
  7612 ;;
  7613                           
  7614                           
  7615                           ;psect for function i1_writeEEPROM
  7616  0933                     i1_writeEEPROM:	
  7617                           
  7618                           ;incstack = 0
  7619 ;; hardware stack exceeded
  7620                           ; Regs used in i1_writeEEPROM: [wreg]
  7621                           ;i1writeEEPROM@data stored from wreg
  7622  0933  00F1               	movwf	i1writeEEPROM@data
  7623                           
  7624                           ;eeprom.c: 15:     EEADR = address;
  7625  0934  0870               	movf	i1writeEEPROM@address,w
  7626  0935  1283               	bcf	3,5	;RP0=0, select bank2
  7627  0936  1703               	bsf	3,6	;RP1=1, select bank2
  7628  0937  008D               	movwf	13	;volatile
  7629                           
  7630                           ;eeprom.c: 16:     EEDATA = data;
  7631  0938  0871               	movf	i1writeEEPROM@data,w
  7632  0939  008C               	movwf	12	;volatile
  7633                           
  7634                           ;eeprom.c: 18:     EECON1bits.EEPGD = 0;
  7635  093A  1683               	bsf	3,5	;RP0=1, select bank3
  7636  093B  1703               	bsf	3,6	;RP1=1, select bank3
  7637  093C  138C               	bcf	12,7	;volsfr
  7638                           
  7639                           ;eeprom.c: 19:     EECON1bits.WREN = 1;
  7640  093D  150C               	bsf	12,2	;volsfr
  7641                           
  7642                           ;eeprom.c: 21:     INTCONbits.GIE = 0;
  7643  093E  138B               	bcf	11,7	;volatile
  7644                           
  7645                           ;eeprom.c: 22:     EECON2 = 0x55;
  7646  093F  3055               	movlw	85
  7647  0940  008D               	movwf	13	;volsfr
  7648                           
  7649                           ;eeprom.c: 23:     EECON2 = 0xAA;
  7650  0941  30AA               	movlw	170
  7651  0942  008D               	movwf	13	;volsfr
  7652                           
  7653                           ;eeprom.c: 24:     EECON1bits.WR = 1;
  7654  0943  148C               	bsf	12,1	;volsfr
  7655                           
  7656                           ;eeprom.c: 25:     INTCONbits.GIE = 1;
  7657  0944  178B               	bsf	11,7	;volatile
  7658  0945                     i1l60:	
  7659                           ;eeprom.c: 27:     while(PIR2bits.EEIF == 0) continue;
  7660                           
  7661  0945  1283               	bcf	3,5	;RP0=0, select bank0
  7662  0946  1303               	bcf	3,6	;RP1=0, select bank0
  7663  0947  1A0D               	btfsc	13,4	;volatile
  7664  0948  0008               	return
  7665  0949  2945               	goto	i1l60
  7666  094A                     __end_ofi1_writeEEPROM:	
  7667  007E                     btemp	set	126	;btemp
  7668  007E                     wtemp0	set	126


Data Sizes:
    Strings     154
    Constant    14
    Data        7
    BSS         43
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     36      51
    BANK1            80     34      69
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 18
		 -> STR_12(CODE[18]), STR_11(CODE[17]), STR_10(CODE[17]), STR_9(CODE[18]), 
		 -> STR_7(CODE[17]), STR_6(CODE[17]), STR_5(CODE[17]), STR_4(CODE[17]), 
		 -> STR_3(CODE[17]), STR_2(CODE[17]), STR_1(CODE[17]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 17
		 -> lineTwo(BANK1[17]), lineOne(BANK1[17]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK1[2]), 

    putrsXLCD@buffer	PTR const unsigned char  size(1) Largest target is 17
		 -> STR_8(CODE[17]), 

    putsXLCD@buffer	PTR unsigned char  size(1) Largest target is 17
		 -> lineTwo(BANK1[17]), lineOne(BANK1[17]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _inter in COMMON

    _updateLCD->i1___lwmod
    i1_sprintf->i1___lwmod
    i1___lwmod->i1___lwdiv
    i1_putsXLCD->i1_WriteDataXLCD
    i1_WriteDataXLCD->i1_DelayFor18TCY
    i1_SetDDRamAddr->i1_DelayFor18TCY
    _time->i1_setData
    i1_setData->i1_writeEEPROM

Critical Paths under _main in BANK0

    _main->_beep
    _main->_getData
    _start->_beep
    _setFrequency->_beep
    _writeFrequency->_beep
    _beep->___wmul
    _setData->_writeEEPROM
    _principalScreen->___lwmod
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _putsXLCD->_WriteDataXLCD
    _putrsXLCD->_WriteDataXLCD
    _WriteDataXLCD->_DelayFor18TCY
    _getData->_readEEPROM
    _initLCD->_OpenXLCD
    _SendCMDLCD->_WriteCmdXLCD
    _OpenXLCD->_SetDDRamAddr
    _OpenXLCD->_WriteCmdXLCD
    _WriteCmdXLCD->_DelayFor18TCY
    _SetDDRamAddr->_DelayFor18TCY

Critical Paths under _inter in BANK0

    _inter->_updateLCD
    _updateLCD->i1_sprintf

Critical Paths under _main in BANK1

    _main->_principalScreen
    _start->_sprintf
    _setFrequency->_lockingScreen
    _writeFrequency->_beep
    _lockingScreen->_sprintf
    _principalScreen->_sprintf
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _config->_initLCD

Critical Paths under _inter in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _inter in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _inter in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0   36075
                                             31 BANK1      3     3      0
                               _beep
                             _config
                            _getData
                      _lockingScreen
                    _principalScreen
                       _setFrequency
                       _setTransStat
                              _start
                     _writeFrequency
 ---------------------------------------------------------------------------------
 (1) _start                                                4     4      0    6564
                                             24 BANK1      4     4      0
                       _SetDDRamAddr
                               _beep
                           _putsXLCD
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _setFrequency                                         3     3      0   13926
                                             25 BANK1      3     3      0
                       _SetDDRamAddr
                               _beep
                      _lockingScreen
                           _putsXLCD
                            _setData
                            _sprintf
                     _writeFrequency
 ---------------------------------------------------------------------------------
 (1) _writeFrequency                                       9     7      2    1929
                                              2 BANK1      9     7      2
                               _beep
                            _codFreq
 ---------------------------------------------------------------------------------
 (2) _codFreq                                              4     2      2     155
                                             29 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (2) _beep                                                 3     1      2    1405
                                             35 BANK0      1     1      0
                                              0 BANK1      2     0      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) _setData                                              4     4      0     688
                                             31 BANK0      4     4      0
                        _writeEEPROM
 ---------------------------------------------------------------------------------
 (3) _writeEEPROM                                          2     1      1     576
                                             29 BANK0      2     1      1
 ---------------------------------------------------------------------------------
 (2) _lockingScreen                                        1     1      0    4952
                                             24 BANK1      1     1      0
                       _SetDDRamAddr
                           _putsXLCD
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _principalScreen                                      7     7      0    6555
                                             24 BANK1      7     7      0
                       _SetDDRamAddr
                            ___lwdiv
                            ___lwmod
                          _putrsXLCD
                           _putsXLCD
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             25    20      5    4423
                                              7 BANK1     17    12      5
                            ___lwdiv
                            ___lwmod
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (3) _isdigit                                              2     2      0      68
                                             29 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     496
                                             29 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     702
                                             34 BANK0      2     2      0
                                              3 BANK1      4     0      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     711
                                             29 BANK0      5     1      4
                                              0 BANK1      3     3      0
 ---------------------------------------------------------------------------------
 (2) _putsXLCD                                             2     2      0     485
                                             33 BANK0      2     2      0
                           _BusyXLCD
                      _WriteDataXLCD
 ---------------------------------------------------------------------------------
 (2) _putrsXLCD                                            2     2      0     122
                                             33 BANK0      2     2      0
                           _BusyXLCD
                      _WriteDataXLCD
 ---------------------------------------------------------------------------------
 (3) _WriteDataXLCD                                        3     3      0      44
                                             30 BANK0      3     3      0
                      _DelayFor18TCY
 ---------------------------------------------------------------------------------
 (1) _getData                                              6     6      0      68
                                             30 BANK0      6     6      0
                         _readEEPROM
 ---------------------------------------------------------------------------------
 (2) _readEEPROM                                           1     1      0      22
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _config                                               0     0      0     426
                            _initLCD
                       _setTransStat
 ---------------------------------------------------------------------------------
 (1) _setTransStat                                         4     2      2     250
                                             29 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (2) _initLCD                                              2     2      0     176
                                              0 BANK1      2     2      0
                           _OpenXLCD
                         _SendCMDLCD
 ---------------------------------------------------------------------------------
 (3) _SendCMDLCD                                           1     1      0      66
                                             33 BANK0      1     1      0
                           _BusyXLCD
                       _WriteCmdXLCD
 ---------------------------------------------------------------------------------
 (3) _OpenXLCD                                             3     3      0     110
                                             33 BANK0      3     3      0
                           _BusyXLCD
                       _DelayPORXLCD
                       _SetDDRamAddr
                       _WriteCmdXLCD
 ---------------------------------------------------------------------------------
 (4) _WriteCmdXLCD                                         3     3      0      44
                                             30 BANK0      3     3      0
                      _DelayFor18TCY
 ---------------------------------------------------------------------------------
 (2) _SetDDRamAddr                                         3     3      0      44
                                             30 BANK0      3     3      0
                      _DelayFor18TCY
 ---------------------------------------------------------------------------------
 (4) _DelayFor18TCY                                        1     1      0       0
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _DelayPORXLCD                                         2     2      0       0
                                             29 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (3) _BusyXLCD                                             2     2      0       0
                                             29 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _inter                                                5     5      0    2563
                                             24 BANK0      5     5      0
                               _time
                          _updateLCD
 ---------------------------------------------------------------------------------
 (7) _updateLCD                                            7     7      0    2225
                                             17 BANK0      7     7      0
                     i1_SetDDRamAddr
                          i1___lwdiv
                          i1___lwmod
                         i1_putsXLCD
                          i1_sprintf
 ---------------------------------------------------------------------------------
 (8) i1_sprintf                                           25    20      5    1517
                                              0 BANK0     17    12      5
                          i1___lwdiv
                          i1___lwmod
                           i1___wmul
                          i1_isdigit
 ---------------------------------------------------------------------------------
 (9) i1_isdigit                                            2     2      0      68
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (9) i1___wmul                                             6     2      4     144
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (9) i1___lwmod                                            6     2      4     263
                                              8 COMMON     6     2      4
                          i1___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (9) i1___lwdiv                                            8     4      4     266
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (8) i1_putsXLCD                                           2     2      0      89
                                              4 COMMON     2     2      0
                         i1_BusyXLCD
                    i1_WriteDataXLCD
 ---------------------------------------------------------------------------------
 (9) i1_WriteDataXLCD                                      3     3      0      44
                                              1 COMMON     3     3      0
                    i1_DelayFor18TCY
 ---------------------------------------------------------------------------------
 (9) i1_BusyXLCD                                           2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (8) i1_SetDDRamAddr                                       3     3      0      44
                                              1 COMMON     3     3      0
                    i1_DelayFor18TCY
 ---------------------------------------------------------------------------------
 (10) i1_DelayFor18TCY                                     1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (7) _time                                                 1     1      0     338
                                              6 COMMON     1     1      0
                          i1_setData
 ---------------------------------------------------------------------------------
 (8) i1_setData                                            4     4      0     338
                                              2 COMMON     4     4      0
                      i1_writeEEPROM
 ---------------------------------------------------------------------------------
 (9) i1_writeEEPROM                                        2     1      1     226
                                              0 COMMON     2     1      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _beep
     ___wmul
   _config
     _initLCD
       _OpenXLCD
         _BusyXLCD
         _DelayPORXLCD
         _SetDDRamAddr
           _DelayFor18TCY
         _WriteCmdXLCD
           _DelayFor18TCY
       _SendCMDLCD
         _BusyXLCD
         _WriteCmdXLCD
           _DelayFor18TCY
     _setTransStat
   _getData
     _readEEPROM
   _lockingScreen
     _SetDDRamAddr
       _DelayFor18TCY
     _putsXLCD
       _BusyXLCD
       _WriteDataXLCD
         _DelayFor18TCY
     _sprintf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
       ___wmul
       _isdigit
   _principalScreen
     _SetDDRamAddr
       _DelayFor18TCY
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)
     _putrsXLCD
       _BusyXLCD
       _WriteDataXLCD
         _DelayFor18TCY
     _putsXLCD
       _BusyXLCD
       _WriteDataXLCD
         _DelayFor18TCY
     _sprintf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
       ___wmul
       _isdigit
   _setFrequency
     _SetDDRamAddr
       _DelayFor18TCY
     _beep
       ___wmul
     _lockingScreen
       _SetDDRamAddr
         _DelayFor18TCY
       _putsXLCD
         _BusyXLCD
         _WriteDataXLCD
           _DelayFor18TCY
       _sprintf
         ___lwdiv
         ___lwmod
           ___lwdiv (ARG)
         ___wmul
         _isdigit
     _putsXLCD
       _BusyXLCD
       _WriteDataXLCD
         _DelayFor18TCY
     _setData
       _writeEEPROM
     _sprintf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
       ___wmul
       _isdigit
     _writeFrequency
       _beep
         ___wmul
       _codFreq
   _setTransStat
   _start
     _SetDDRamAddr
       _DelayFor18TCY
     _beep
       ___wmul
     _putsXLCD
       _BusyXLCD
       _WriteDataXLCD
         _DelayFor18TCY
     _sprintf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
       ___wmul
       _isdigit
   _writeFrequency
     _beep
       ___wmul
     _codFreq

 _inter (ROOT)
   _time
     i1_setData
       i1_writeEEPROM
   _updateLCD
     i1_SetDDRamAddr
       i1_DelayFor18TCY
     i1___lwdiv
     i1___lwmod
       i1___lwdiv (ARG)
     i1_putsXLCD
       i1_BusyXLCD
       i1_WriteDataXLCD
         i1_DelayFor18TCY
     i1_sprintf
       i1___lwdiv
       i1___lwmod
         i1___lwdiv (ARG)
       i1___wmul
       i1_isdigit

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50     22      45       7       86.2%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     24      33       5       63.8%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      86      12        0.0%
ABS                  0      0      86       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Fri Aug 23 15:51:23 2019

              __CFG_CP$ON 0000          ??i1_SetDDRamAddr 0071                         _i 00A0  
                       pc 0002                _UN_BLOCKED 0712                        l60 097F  
                      l70 0EBE                        l71 0EF1               __CFG_CPD$ON 0000  
                      fsr 0004       ___wmul@multiplicand 003F          i1___wmul@product 0074  
                     l204 0FF6                       l244 0476                       l261 0513  
                     l253 04BB                       l262 051E                       l254 04C6  
                     l271 06FD                       l247 047A                       l256 052A  
                     l248 04D2                       l257 04E1                       l249 0489  
                     l197 0FA1                       l542 05C3                       l545 062D  
                     l671 09D4                       l656 0120                       fsr0 0004  
                     indf 0000     __size_of_WriteCmdXLCD 004D           __end_of_BLOCKED 0714  
            __CFG_FOSC$XT 0000              __CFG_LVP$OFF 0000                      l4110 00CD  
                    l4044 0FC1                      l2710 06CF                      l2702 06B3  
                    l4054 0FE1                      l4038 0FAB                      l3600 0D6C  
                    l2464 090E                      l2714 06DD                      l2706 06C1  
                    l2722 0924                      l2650 09AE                      l3604 0D7A  
                    l3700 0139                      l3622 0B58                      l3702 013D  
                    l2656 09A8                      l3616 0B36                      l3632 0C22  
                    l2690 0689                      l3618 0B48                      l3626 0B65  
                    l3570 09CC                      l3722 0165                      l3714 0161  
                    l3650 005C                      l2684 0671                      l3708 0152  
                    l3724 003C                      l2860 0EB1                      l2694 0697  
                    l2686 0679                      l3726 01B8                      l2944 06F2  
                    l3592 0D3E                      l3656 0071                      l2698 06A5  
                    l2962 0A44                      l3594 0D50                      l3690 0112  
                    l3666 00B9                      l3922 0337                      l3684 00F1  
                    l3668 00D8                      l3764 0598                      l3678 00EF  
                    l2968 0A3A                      l3698 0135                      l3778 05C6  
                    l3786 05D8                      l3866 0494                      l3884 04EC  
                    l3876 04AA                      l3948 038F                      l3798 0618  
                    l3894 0502                      l3974 03E7                      STR_1 0737  
                    STR_2 079D                      STR_3 0737                      STR_4 0759  
                    STR_5 0737                      STR_6 077B                      STR_7 0748  
                    STR_8 076A                      STR_9 0714                      u3005 0B59  
                    u3025 0C2B                      u1435 07DC                      u3115 0127  
                    u1445 0CC3                      u1455 0D10                      u3075 0108  
                    u3420 03E4                      _PIE1 008C                      u3184 05A5  
                    u3360 0334                      u3185 05A2                      u3507 0F65  
                    u3517 0F93                      u3390 038C                      u3607 04FD  
                    u3527 0FD8                      u2905 0D43                      u3617 0524  
                    u3537 0FEB                      u3707 0C34                      u3627 0534  
                    u3547 036D                      u2925 0D53                      u3717 0C3E  
                    u3637 0591                      u3557 03C5                      u3727 06F8  
                    u2935 0D61                      u3647 05B2                      u3567 041D  
                    u3737 0A1B                      u2945 0D6E                      u2865 09D5  
                    u3657 05CA                      u3577 0442                      u3747 0A31  
                    u2875 09DC                      u3667 05DC                      u3587 04A5  
                    i1l60 0945                      u3757 0658                      u3677 05F6  
                    u3597 04CC                      i1l70 0E5E                      i1l71 0E91  
                    u3767 0667                      u2975 0B3B                      u3687 060F  
                    u3777 08A1                      u3697 0622                      u3787 08C3  
                    u2995 0B50                      u3797 08CF              __CFG_WRT$OFF 0000  
            _stereoEnable 004C                      _beep 0BFF                      _days 004F  
                    _main 0F5F                      _time 0B6C                      btemp 007E  
  __size_of_WriteDataXLCD 004D                      start 0012         ??i1_WriteDataXLCD 0071  
           __CFG_IESO$OFF 0000             __CFG_MCLRE$ON 0000                i1_putsXLCD 094A  
             _writeEEPROM 0967              _WriteCmdXLCD 0C96          ??_writeFrequency 00C7  
                   ?_beep 00C3        writeEEPROM@address 003D             ?_SetDDRamAddr 0070  
                   ?_main 0070                     _EEADR 010D                     STR_10 0726  
                   STR_11 078C                     STR_12 0714             __CFG_WDTE$OFF 0000  
                   ?_time 0070                     _ANSEL 0188                     _T1CON 0010  
         __end_of___lwdiv 0D87                     i1l234 0BB1           __end_of___lwmod 0B6C  
                   i1l671 098E                     i1l656 029A                     _TMR1H 000F  
                   _TMR1L 000E                     _PORTA 0005                     _PORTB 0006  
                   _PORTC 0007                     _TRISA 0085                     _TRISB 0086  
                   _TRISC 0087           __end_of_codFreq 08E3                i1isdigit@c 0071  
         __end_of_getData 0E3E            __CFG_FCMEN$OFF 0000        i1___lwmod@dividend 007A  
         __end_of_initLCD 0A37               ?i1_BusyXLCD 0070           __end_of_dpowers 0710  
    writeFrequency@buffer 00CA                     _level 0046                     _inter 09EB  
         __end_of_isdigit 0910                     _hours 004E           __end_of_setData 0EFC  
                   _start 0325            __CFG_BOREN$OFF 0000                     pclath 000A  
        __end_ofi1___wmul 09A5                     status 0003       i1___wmul@multiplier 0070  
                   wtemp0 007E           __end_of_sprintf 01BD        __size_ofi1___lwdiv 003C  
      __size_ofi1___lwmod 0032  __size_of_principalScreen 0063           __initialization 0015  
   __end_ofi1_writeEEPROM 094A         __end_of_FINAL_DAY 0711              __end_of_beep 0C4A  
            __end_of_main 1000              __end_of_time 0BB4          __end_of_BusyXLCD 08D6  
      __size_ofi1_isdigit 000E        __size_ofi1_setData 005E     __size_of_DelayPORXLCD 000C  
              i1sprintf@c 0030                i1sprintf@f 0020            ??_SetDDRamAddr 003E  
              _SendCMDLCD 0921                    ??_beep 0043          __end_of_OpenXLCD 06EA  
                  ??_main 00E2                    ??_time 0076        __size_ofi1_sprintf 0168  
           _WriteDataXLCD 0CE3  __size_ofi1_DelayFor18TCY 0006        _hundredMiliSeconds 0049  
                  _ADCON0 001F                    _ADCON1 009F                    ?_inter 0070  
                  _EEDATA 010C                    _EECON2 018D                    ?_start 0070  
                  _ANSELH 0189                    i1l3020 094B                    i1l3014 0951  
                  i1l3102 02DF                    i1l3030 01E4                    i1l3104 01C4  
                  i1l3106 0320                    i1l3036 01F9                    u200_25 0AFB  
                  i1l3070 028C                    i1l3046 0233                    i1l3080 02B3  
                  i1l3064 026B                    i1l3048 0252                    i1l4112 0247  
                  i1l3082 02B7                    i1l3058 0269                    i1l3094 02DB  
                  i1l3078 02AF                    i1l3088 02CC                    i1l2802 0B1C  
                  i1l3450 0A03                    i1l2820 0AD2                    u202_25 0B07  
                  u210_25 0AE1                    i1l3366 0BA7                    i1l2806 0B27  
                  i1l2824 0AE0                    i1l2840 08EF                    i1l2818 0AC4  
                  i1l2828 0AEB                    i1l2772 0986                    u203_25 0B13  
                  i1l2794 0AF8                    i1l2796 0B06                    u204_25 0B1D  
                  i1l2978 0E53                    u207_25 0AC7                    _INTCON 000B  
                  u209_25 0AD8                    u234_25 0282                    u227_25 0C76  
                  u238_25 02A1                    u194_25 0BDF                    u196_25 098F  
                  u380_27 08B7                    u197_25 0996                    u381_27 0899  
           i1sprintf@flag 002A             i1sprintf@prec 0029            __CFG_PWRTE$OFF 0000  
            _DelayPORXLCD 08BD               ?i1_putsXLCD 0070                    ___wmul 09C8  
               ??___lwdiv 0041       __size_ofi1_BusyXLCD 000A                    beep@ms 00C3  
               ??___lwmod 0042                    _config 0A61                 ??_codFreq 003F  
               ??_getData 003E                    _months 0050            ?_WriteDataXLCD 0070  
               ??_initLCD 00C3         __end_ofi1___lwdiv 0B2C         __end_ofi1___lwmod 0AF0  
               ??_isdigit 003D                 ??_setData 003F                    saved_w 007E  
        __end_of_putsXLCD 09C8                    start@i 00DE                 ??_sprintf 00CF  
       __end_ofi1_isdigit 08F1         __end_ofi1_setData 0E9C   __end_of__initialization 0031  
       __end_ofi1_sprintf 0325           writeEEPROM@data 003E            __pcstackCOMMON 0070  
            __pidataBANK0 08A4             __end_of_inter 0A0F         ??_principalScreen 00DB  
           __end_of_start 044F               ?_SendCMDLCD 0070                 ?i1___wmul 0070  
    i1SetDDRamAddr@DDaddr 0073               setData@full 0042               i1sprintf@ap 0028  
             i1sprintf@sp 002D    __size_of_lockingScreen 002F           i1_WriteDataXLCD 0BB4  
     __size_ofi1_putsXLCD 001D                   ??_inter 0038    __size_of_DelayFor18TCY 0007  
            sprintf@width 00D7                   ??_start 00DB         ??i1_DelayFor18TCY 0070  
           ?_setFrequency 0070                __pbssBANK0 0044                __pbssBANK1 00A0  
               ?_BusyXLCD 0070           WriteCmdXLCD@cmd 0040      __end_of_SetDDRamAddr 07FC  
               ?_OpenXLCD 0070                __pmaintext 0F5F              ?_writeEEPROM 003D  
       WriteDataXLCD@data 0040                   ?___wmul 003D                __pintentry 0004  
                 ?_config 0070           ??_WriteDataXLCD 003E                   _BLOCKED 0713  
          updateLCD@decim 0036                ??i1___wmul 0074            updateLCD@integ 0037  
              _isOnConfig 0047             ?_setTransStat 003D        __size_of_updateLCD 005A  
            ??i1_BusyXLCD 0070            ??_setFrequency 00DC                __stringtab 0700  
      __size_of_putrsXLCD 002A                ??_BusyXLCD 003D            i1sprintf@width 002E  
              _readEEPROM 08F1       __size_of_SendCMDLCD 0012                ??_OpenXLCD 0041  
           _lockingScreen 0A8F             _DelayFor18TCY 089D           __size_of___wmul 0023  
               ?_putsXLCD 0070                   ___lwdiv 0D30                   ___lwmod 0B2C  
         __size_of_config 002E        __end_ofi1_BusyXLCD 08BD                 _FINAL_DAY 0710  
                 _codFreq 08D6           putrsXLCD@buffer 0042                   _getData 0DE1  
                 __ptext1 0325                   __ptext2 044F                   __ptext3 0567  
                 __ptext4 08D6                   __ptext5 0BFF                   __ptext6 0E9C  
                 __ptext7 0967                   __ptext8 0A8F                   __ptext9 0EFC  
                 _cntTmr1 004B   __end_ofi1_WriteDataXLCD 0BFF                   _initLCD 0A0F  
               _T1CONbits 0010            ??_setTransStat 003F                   _dpowers 0706  
       i1___lwdiv@divisor 0070                   _lineOne 00B2                   _lineTwo 00A1  
                 _isdigit 0900         i1___lwdiv@counter 0077                   _prTmr1H 0051  
                 _prTmr1L 0052                   _setData 0E9C                   _minutes 004D  
 __size_ofi1_SetDDRamAddr 004C                   _seconds 004A                   _sprintf 0035  
                 clrloop0 08AC      end_of_initialization 0031        __end_of_UN_BLOCKED 0713  
          ?_lockingScreen 0070              ??i1_putsXLCD 0074         __end_of_updateLCD 0DE1  
          ?_DelayFor18TCY 0070                ??_putsXLCD 0041     i1___wmul@multiplicand 0072  
       __end_of_putrsXLCD 0A61                 _PORTAbits 0005                 _PORTBbits 0006  
               _PORTCbits 0007                 _TRISBbits 0086   __size_of_writeFrequency 00CB  
   __size_of_SetDDRamAddr 004E                 i1___lwdiv 0AF0                 i1___lwmod 0ABE  
  __size_ofi1_writeEEPROM 0017         readEEPROM@address 003D        __end_ofi1_putsXLCD 0967  
             ?_readEEPROM 0070           _principalScreen 0EFC                 i1_isdigit 08E3  
               i1_setData 0E3E                 i1_sprintf 01BD       __end_of_FINAL_MONTH 0712  
    __size_of_writeEEPROM 001D      __end_of_setFrequency 0567            __end_of___wmul 09EB  
            ??_SendCMDLCD 0041            __end_of_config 0A8F         i1___lwmod@divisor 0078  
       i1___lwmod@counter 007D              _SetDDRamAddr 07AE           i1_DelayFor18TCY 0897  
        ?i1_WriteDataXLCD 0070        SetDDRamAddr@DDaddr 0040       start_initialization 0015  
       __size_ofi1___wmul 0021                ?i1___lwdiv 0070                ?i1___lwmod 0078  
       __size_of_BusyXLCD 000D                ?i1_isdigit 0070              setData@data0 0040  
            setData@data1 0041           ??_lockingScreen 00DB                ?i1_setData 0070  
      __end_of_SendCMDLCD 0933      __end_of_setTransStat 0700              i1sprintf@val 002B  
         ??_DelayFor18TCY 003D         __size_of_OpenXLCD 00B8                ?i1_sprintf 0020  
           i1_writeEEPROM 0933                  ??___wmul 0041                init_fetch0 0910  
           ?_WriteCmdXLCD 0070                  ??_config 0044               __pdataBANK0 004C  
     __size_of_readEEPROM 000F            i1_SetDDRamAddr 0C4A                 ___latbits 0002  
           __pcstackBANK0 0020             __pcstackBANK1 00C3              _isdigit$1104 003D  
 __end_of_principalScreen 0F5F               sprintf@flag 00D4               sprintf@prec 00D3  
             _FINAL_MONTH 0711            putsXLCD@buffer 0042            i1setData@data0 0073  
          i1setData@data1 0074          ___lwdiv@dividend 003F            ?i1_writeEEPROM 0070  
 __end_ofi1_DelayFor18TCY 089D            ??_WriteCmdXLCD 003E                  ?___lwdiv 003D  
                ?___lwmod 00C6                  ?_codFreq 003D                  ?_getData 0070  
           SendCMDLCD@CMD 0041                 __pstrings 0700         __size_of_putsXLCD 0023  
   __end_of_WriteDataXLCD 0D30    __end_ofi1_SetDDRamAddr 0C96                  ?_initLCD 0070  
                ?_isdigit 0070                  ?_setData 0070            _writeFrequency 0567  
               _frequency 0044       i1WriteDataXLCD@data 0073          ___lwdiv@quotient 00C4  
             ??i1___lwdiv 0074               ??i1___lwmod 007C                 codFreq@fr 003F  
                ?_sprintf 00CA            __size_of_inter 0024            __size_of_start 012A  
          i1_isdigit$1104 0070         interrupt_function 0004            ___wmul@product 0041  
             ??i1_isdigit 0070                 clear_ram0 08AB               ??i1_setData 0072  
           ?_DelayPORXLCD 0070     __size_of_setFrequency 0118                  _PIR1bits 000C  
         OpenXLCD@lcdtype 0043                  _PIR2bits 000D          setTransStat@stat 003D  
             ??i1_sprintf 0025                 _updateLCD 0D87            _functionalStat 0048  
             __stringbase 0705         ___wmul@multiplier 003D                  i1___wmul 0984  
         ?i1_SetDDRamAddr 0070    __end_of_writeFrequency 0632                 _putrsXLCD 0A37  
        ?_principalScreen 0070              _setFrequency 044F                  _BusyXLCD 08C9  
   __size_of_setTransStat 0016              ??_readEEPROM 003D            ??_DelayPORXLCD 003D  
              _EECON1bits 018C                  _OpenXLCD 0632           ??i1_writeEEPROM 0071  
        ?i1_DelayFor18TCY 0070                ?_updateLCD 0070          __size_of___lwdiv 0057  
        __size_of___lwmod 0040      i1writeEEPROM@address 0070        __end_of__stringtab 0706  
        __size_of_codFreq 000D          __size_of_getData 005D           ?_writeFrequency 00C5  
              sprintf@val 00D5                ?_putrsXLCD 0070          __size_of_initLCD 0028  
      __end_of_readEEPROM 0900              _setTransStat 06EA          __size_of_isdigit 0010  
         ___lwdiv@divisor 003D          __size_of_setData 0060             i1setData@full 0075  
         ___lwdiv@counter 00C3                  __ptext10 0035                  __ptext11 0900  
                __ptext20 0A61                  __ptext12 09C8                  __ptext21 06EA  
                __ptext13 0B2C                  __ptext30 09EB                  __ptext22 0A0F  
                __ptext14 0D30                  __ptext31 0D87                  __ptext23 0921  
                __ptext15 09A5                  __ptext40 0C4A                  __ptext32 01BD  
                __ptext24 0632                  __ptext16 0A37                  __ptext41 0897  
                __ptext33 08E3                  __ptext25 0C96                  __ptext17 0CE3  
                __ptext42 0B6C                  __ptext34 0984                  __ptext26 07AE  
                __ptext18 0DE1                  __ptext43 0E3E                  __ptext35 0ABE  
                __ptext27 089D                  __ptext19 08F1                  __ptext44 0933  
                __ptext36 0AF0                  __ptext28 08BD                  __ptext37 094A  
                __ptext29 08C9                  __ptext38 0BB4                  __ptext39 08B3  
       __CFG_BOR4V$BOR40V 0000      __end_of_WriteCmdXLCD 0CE3          __size_of_sprintf 0188  
      i1___lwdiv@dividend 0072             __size_of_beep 004B         i1writeEEPROM@data 0071  
                codFreq@f 003D             __size_of_main 00A1             __size_of_time 0048  
           ??_writeEEPROM 003E                  _putsXLCD 09A5           writeFrequency@f 00C5  
         writeFrequency@r 00CC        i1___lwdiv@quotient 0075               getData@aux0 0042  
             getData@aux1 0043                _INTCONbits 000B                  init_ram0 0914  
                isdigit@c 003E  __size_ofi1_WriteDataXLCD 004B                  intlevel1 0000  
               sprintf@ap 00D2                 sprintf@sp 00D9          ___lwmod@dividend 00C8  
               stringcode 0700     __end_of_lockingScreen 0ABE     __end_of_DelayFor18TCY 08A4  
             ??_updateLCD 0031       __end_of_writeEEPROM 0984                  sprintf@c 00DA  
                sprintf@f 00CA      __end_of_DelayPORXLCD 08C9          i1putsXLCD@buffer 0075  
             ??_putrsXLCD 0041           ___lwmod@divisor 00C6           ___lwmod@counter 0043  
                stringdir 0700                  stringtab 0700                i1_BusyXLCD 08B3  
    principalScreen@decim 00E0      principalScreen@integ 00E1  
