

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Wed Aug  7 18:30:45 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	18F452
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	eeprom_data,global,class=EEDATA,delta=1,noexec
     6                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     8                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     9                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
    10                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    11                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    12                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    13                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    15                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    16                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    17                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    18                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    19                           	psect	text0,global,reloc=2,class=CODE,delta=1
    20                           	psect	text1,global,reloc=2,class=CODE,delta=1
    21                           	psect	text2,global,reloc=2,class=CODE,delta=1
    22                           	psect	text3,global,reloc=2,class=CODE,delta=1
    23                           	psect	text4,global,reloc=2,class=CODE,delta=1
    24                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    25                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    26                           	psect	text7,global,reloc=2,class=CODE,delta=1
    27                           	psect	text8,global,reloc=2,class=CODE,delta=1
    28                           	psect	text9,global,reloc=2,class=CODE,delta=1
    29                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=2
    30                           	psect	text11,global,reloc=2,class=CODE,delta=1
    31                           	psect	text12,global,reloc=2,class=CODE,delta=1
    32                           	psect	text13,global,reloc=2,class=CODE,delta=1
    33                           	psect	text14,global,reloc=2,class=CODE,delta=1
    34                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=2
    35                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=2
    36                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=2
    37                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=2
    38                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    39                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=1
    40                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=1
    41                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=2
    42                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=2
    43                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=2
    44                           	psect	text25,global,reloc=2,class=CODE,delta=1
    45                           	psect	text26,global,reloc=2,class=CODE,delta=1
    46                           	psect	text27,global,reloc=2,class=CODE,delta=1
    47                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=1
    48                           	psect	text29,global,reloc=2,class=CODE,delta=1
    49                           	psect	text30,global,reloc=2,class=CODE,delta=1
    50                           	psect	text31,global,reloc=2,class=CODE,delta=1
    51                           	psect	text32,global,reloc=2,class=CODE,delta=1
    52                           	psect	text33,global,reloc=2,class=CODE,delta=1
    53                           	psect	text34,global,reloc=2,class=CODE,delta=1
    54                           	psect	text35,global,reloc=2,class=CODE,delta=1
    55                           	psect	text36,global,reloc=2,class=CODE,delta=1
    56                           	psect	text37,global,reloc=2,class=CODE,delta=1
    57                           	psect	text38,global,reloc=2,class=CODE,delta=1
    58                           	psect	text39,global,reloc=2,class=CODE,delta=1
    59                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    60                           	psect	text41,global,reloc=2,class=CODE,delta=1
    61                           	psect	text42,global,reloc=2,class=CODE,delta=1
    62                           	psect	text43,global,reloc=2,class=CODE,delta=1
    63                           	psect	text44,global,reloc=2,class=CODE,delta=1
    64                           	psect	text45,global,reloc=2,class=CODE,delta=1
    65                           	psect	text46,global,reloc=2,class=CODE,delta=1
    66                           	psect	text47,global,reloc=2,class=CODE,delta=1
    67                           	psect	text48,global,reloc=2,class=CODE,delta=1
    68                           	psect	text49,global,reloc=2,class=CODE,delta=1
    69                           	psect	text50,global,reloc=2,class=CODE,delta=1
    70                           	psect	text51,global,reloc=2,class=CODE,delta=1
    71                           	psect	text52,global,reloc=2,class=CODE,delta=1
    72                           	psect	text53,global,reloc=2,class=CODE,delta=1
    73                           	psect	text54,global,reloc=2,class=CODE,delta=1
    74                           	psect	text55,global,reloc=2,class=CODE,delta=1
    75                           	psect	text56,global,reloc=2,class=CODE,delta=1
    76                           	psect	text57,global,reloc=2,class=CODE,delta=1
    77                           	psect	text58,global,reloc=2,class=CODE,delta=1
    78                           	psect	text59,global,reloc=2,class=CODE,delta=1
    79                           	psect	text60,global,reloc=2,class=CODE,delta=1
    80                           	psect	text61,global,reloc=2,class=CODE,delta=1
    81                           	psect	text62,global,reloc=2,class=CODE,delta=1
    82                           	psect	text63,global,reloc=2,class=CODE,delta=1
    83                           	psect	text64,global,reloc=2,class=CODE,delta=1
    84                           	psect	text65,global,reloc=2,class=CODE,delta=1
    85                           	psect	text66,global,reloc=2,class=CODE,delta=1
    86                           	psect	text67,global,reloc=2,class=CODE,delta=1
    87                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    88                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    89                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    90  0000                     
    91                           ; Version 2.05
    92                           ; Generated 20/12/2018 GMT
    93                           ; 
    94                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    95                           ; All rights reserved.
    96                           ; 
    97                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    98                           ; 
    99                           ; Redistribution and use in source and binary forms, with or without modification, are
   100                           ; permitted provided that the following conditions are met:
   101                           ; 
   102                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   103                           ;        conditions and the following disclaimer.
   104                           ; 
   105                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   106                           ;        of conditions and the following disclaimer in the documentation and/or other
   107                           ;        materials provided with the distribution.
   108                           ; 
   109                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   110                           ;        software without specific prior written permission.
   111                           ; 
   112                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   113                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   114                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   115                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   116                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   117                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   118                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   119                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   120                           ; 
   121                           ; 
   122                           ; Code-generator required, PIC18F452 Definitions
   123                           ; 
   124                           ; SFR Addresses
   125  0000                     
   126                           	psect	eeprom_data
   127  F00000  7E 03 00 00 00 00 01 00 	db	126,3,0,0,0,0,1,0	;# 
   128  F00008  7E 03 00 00 00 00 01 00 	db	126,3,0,0,0,0,1,0	;# 
   129  F00010  7E 03 00 00 00 00 01 00 	db	126,3,0,0,0,0,1,0	;# 
   130  F00018  7E 03 00 00 00 00 01 00 	db	126,3,0,0,0,0,1,0	;# 
   131  F00020  7E 03 00 00 00 00 01 00 	db	126,3,0,0,0,0,1,0	;# 
   132                           
   133                           	psect	idataCOMRAM
   134  002D02                     __pidataCOMRAM:
   135                           	opt callstack 0
   136                           
   137                           ;initializer for _prTmr0H
   138  002D02  C5                 	db	197
   139                           
   140                           ;initializer for _prTmr0L
   141  002D03  68                 	db	104
   142                           
   143                           ;initializer for _prTmr1H
   144  002D04  6D                 	db	109
   145                           
   146                           ;initializer for _prTmr1L
   147  002D05  84                 	db	132
   148                           
   149                           	psect	idataBANK0
   150  002D06                     __pidataBANK0:
   151                           	opt callstack 0
   152                           
   153                           ;initializer for _minutes
   154  002D06  0F                 	db	15
   155                           
   156                           ;initializer for _hours
   157  002D07  16                 	db	22
   158                           
   159                           ;initializer for _days
   160  002D08  13                 	db	19
   161                           
   162                           ;initializer for _months
   163  002D09  03                 	db	3
   164                           
   165                           	psect	idataBANK1
   166  002D0C                     __pidataBANK1:
   167                           	opt callstack 0
   168                           
   169                           ;initializer for _stereoEnable
   170  002D0C  01                 	db	1
   171                           
   172                           	psect	smallconst
   173  000600                     __psmallconst:
   174                           	opt callstack 0
   175  000600  00                 	db	0
   176  000601  0D                 	db	13
   177  000602                     __end_of_FINAL_DAY:
   178                           	opt callstack 0
   179  000602  06                 	db	6
   180  000603                     __end_of_FINAL_MONTH:
   181                           	opt callstack 0
   182  000603  01                 	db	1
   183  000604                     __end_of_UN_BLOCKED:
   184                           	opt callstack 0
   185  000604  00                 	db	0
   186  000605                     __end_of_BLOCKED:
   187                           	opt callstack 0
   188  0000                     _PORTEbits	set	3972
   189  0000                     _TRISDbits	set	3989
   190  0000                     _PORTDbits	set	3971
   191  0000                     _TMR0L	set	4054
   192  0000                     _TMR0H	set	4055
   193  0000                     _TMR1L	set	4046
   194  0000                     _TMR1H	set	4047
   195  0000                     _PIR1bits	set	3998
   196  0000                     _T1CONbits	set	4045
   197  0000                     _ADCON0bits	set	4034
   198  0000                     _ADCON1	set	4033
   199  0000                     _ADCON0	set	4034
   200  0000                     _T0CON	set	4053
   201  0000                     _T1CON	set	4045
   202  0000                     _PORTE	set	3972
   203  0000                     _PORTD	set	3971
   204  0000                     _PORTC	set	3970
   205  0000                     _PORTB	set	3969
   206  0000                     _PORTA	set	3968
   207  0000                     _TRISE	set	3990
   208  0000                     _TRISD	set	3989
   209  0000                     _TRISC	set	3988
   210  0000                     _TRISB	set	3987
   211  0000                     _TRISA	set	3986
   212  0000                     _PIE1	set	3997
   213  0000                     _INTCON	set	4082
   214  0000                     _OSCCON	set	4051
   215  0000                     _ADRESH	set	4036
   216  0000                     _PORTCbits	set	3970
   217  0000                     _PORTBbits	set	3969
   218  0000                     _PORTAbits	set	3968
   219  0000                     _PIR2bits	set	4001
   220  0000                     _EECON2	set	4007
   221  0000                     _INTCONbits	set	4082
   222  0000                     _EEDATA	set	4008
   223  0000                     _EECON1bits	set	4006
   224  0000                     _EEADR	set	4009
   225  000605                     STR_5:
   226  000605  25                 	db	37
   227  000606  33                 	db	51	;'3'
   228  000607  64                 	db	100	;'d'
   229  000608  2E                 	db	46
   230  000609  25                 	db	37
   231  00060A  64                 	db	100	;'d'
   232  00060B  20                 	db	32
   233  00060C  20                 	db	32
   234  00060D  20                 	db	32
   235  00060E  20                 	db	32
   236  00060F  20                 	db	32
   237  000610  20                 	db	32
   238  000611  20                 	db	32
   239  000612  20                 	db	32
   240  000613  20                 	db	32
   241  000614  20                 	db	32
   242  000615  20                 	db	32
   243  000616  00                 	db	0
   244  000617                     STR_4:
   245  000617  46                 	db	70	;'F'
   246  000618  63                 	db	99	;'c'
   247  000619  69                 	db	105	;'i'
   248  00061A  61                 	db	97	;'a'
   249  00061B  2E                 	db	46
   250  00061C  20                 	db	32
   251  00061D  25                 	db	37
   252  00061E  33                 	db	51	;'3'
   253  00061F  64                 	db	100	;'d'
   254  000620  2E                 	db	46
   255  000621  25                 	db	37
   256  000622  64                 	db	100	;'d'
   257  000623  20                 	db	32
   258  000624  4D                 	db	77	;'M'
   259  000625  48                 	db	72	;'H'
   260  000626  7A                 	db	122	;'z'
   261  000627  00                 	db	0
   262  000628                     STR_1:
   263  000628  46                 	db	70	;'F'
   264  000629  69                 	db	105	;'i'
   265  00062A  6A                 	db	106	;'j'
   266  00062B  61                 	db	97	;'a'
   267  00062C  6E                 	db	110	;'n'
   268  00062D  64                 	db	100	;'d'
   269  00062E  6F                 	db	111	;'o'
   270  00062F  20                 	db	32
   271  000630  46                 	db	70	;'F'
   272  000631  63                 	db	99	;'c'
   273  000632  69                 	db	105	;'i'
   274  000633  61                 	db	97	;'a'
   275  000634  2E                 	db	46
   276  000635  20                 	db	32
   277  000636  20                 	db	32
   278  000637  20                 	db	32
   279  000638  00                 	db	0
   280  000639                     STR_3:
   281  000639  53                 	db	83	;'S'
   282  00063A  65                 	db	101	;'e'
   283  00063B  6C                 	db	108	;'l'
   284  00063C  65                 	db	101	;'e'
   285  00063D  63                 	db	99	;'c'
   286  00063E  63                 	db	99	;'c'
   287  00063F  69                 	db	105	;'i'
   288  000640  6F                 	db	111	;'o'
   289  000641  6E                 	db	110	;'n'
   290  000642  65                 	db	101	;'e'
   291  000643  20                 	db	32
   292  000644  46                 	db	70	;'F'
   293  000645  63                 	db	99	;'c'
   294  000646  69                 	db	105	;'i'
   295  000647  61                 	db	97	;'a'
   296  000648  2E                 	db	46
   297  000649  00                 	db	0
   298  00064A                     STR_2:
   299  00064A  41                 	db	65	;'A'
   300  00064B  4D                 	db	77	;'M'
   301  00064C  50                 	db	80	;'P'
   302  00064D  52                 	db	82	;'R'
   303  00064E  4F                 	db	79	;'O'
   304  00064F  20                 	db	32
   305  000650  20                 	db	32
   306  000651  20                 	db	32
   307  000652  20                 	db	32
   308  000653  20                 	db	32
   309  000654  20                 	db	32
   310  000655  45                 	db	69	;'E'
   311  000656  58                 	db	88	;'X'
   312  000657  2D                 	db	45
   313  000658  46                 	db	70	;'F'
   314  000659  4D                 	db	77	;'M'
   315  00065A  00                 	db	0
   316                           
   317                           ; #config settings
   318  00065B  00                 	db	0	; dummy byte at the end
   319  0000                     
   320                           	psect	cinit
   321  0020D4                     __pcinit:
   322                           	opt callstack 0
   323  0020D4                     start_initialization:
   324                           	opt callstack 0
   325  0020D4                     __initialization:
   326                           	opt callstack 0
   327                           
   328                           ; Initialize objects allocated to BANK1 (1 bytes)
   329                           ; load TBLPTR registers with __pidataBANK1
   330  0020D4  0E0C               	movlw	low __pidataBANK1
   331  0020D6  6EF6               	movwf	tblptrl,c
   332  0020D8  0E2D               	movlw	high __pidataBANK1
   333  0020DA  6EF7               	movwf	tblptrh,c
   334  0020DC  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   335  0020DE  6EF8               	movwf	tblptru,c
   336  0020E0  0009               	tblrd		*+	;fetch initializer
   337  0020E2  CFF5 F149          	movff	tablat,__pdataBANK1
   338                           
   339                           ; Initialize objects allocated to BANK0 (4 bytes)
   340                           ; load TBLPTR registers with __pidataBANK0
   341  0020E6  0E06               	movlw	low __pidataBANK0
   342  0020E8  6EF6               	movwf	tblptrl,c
   343  0020EA  0E2D               	movlw	high __pidataBANK0
   344  0020EC  6EF7               	movwf	tblptrh,c
   345  0020EE  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   346  0020F0  6EF8               	movwf	tblptru,c
   347  0020F2  EE00  F0FC         	lfsr	0,__pdataBANK0
   348  0020F6  EE10 F004          	lfsr	1,4
   349  0020FA                     copy_data0:
   350  0020FA  0009               	tblrd		*+
   351  0020FC  CFF5 FFEE          	movff	tablat,postinc0
   352  002100  50E5               	movf	postdec1,w,c
   353  002102  50E1               	movf	fsr1l,w,c
   354  002104  E1FA               	bnz	copy_data0
   355                           
   356                           ; Initialize objects allocated to COMRAM (4 bytes)
   357                           ; load TBLPTR registers with __pidataCOMRAM
   358  002106  0E02               	movlw	low __pidataCOMRAM
   359  002108  6EF6               	movwf	tblptrl,c
   360  00210A  0E2D               	movlw	high __pidataCOMRAM
   361  00210C  6EF7               	movwf	tblptrh,c
   362  00210E  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   363  002110  6EF8               	movwf	tblptru,c
   364  002112  EE00  F07A         	lfsr	0,__pdataCOMRAM
   365  002116  EE10 F004          	lfsr	1,4
   366  00211A                     copy_data1:
   367  00211A  0009               	tblrd		*+
   368  00211C  CFF5 FFEE          	movff	tablat,postinc0
   369  002120  50E5               	movf	postdec1,w,c
   370  002122  50E1               	movf	fsr1l,w,c
   371  002124  E1FA               	bnz	copy_data1
   372                           
   373                           ; Clear objects allocated to BANK1 (73 bytes)
   374  002126  EE01  F000         	lfsr	0,__pbssBANK1
   375  00212A  0E49               	movlw	73
   376  00212C                     clear_0:
   377  00212C  6AEE               	clrf	postinc0,c
   378  00212E  06E8               	decf	wreg,f,c
   379  002130  E1FD               	bnz	clear_0
   380                           
   381                           ; Clear objects allocated to BANK0 (8 bytes)
   382  002132  EE00  F0F4         	lfsr	0,__pbssBANK0
   383  002136  0E08               	movlw	8
   384  002138                     clear_1:
   385  002138  6AEE               	clrf	postinc0,c
   386  00213A  06E8               	decf	wreg,f,c
   387  00213C  E1FD               	bnz	clear_1
   388                           
   389                           ; Clear objects allocated to COMRAM (1 bytes)
   390  00213E  6A7E               	clrf	__pbssCOMRAM& (0+255),c
   391  002140                     end_of_initialization:
   392                           	opt callstack 0
   393  002140                     __end_of__initialization:
   394                           	opt callstack 0
   395  002140  907F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   396  002142  927F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   397  002144  0E00               	movlw	low (__Lmediumconst shr (0+16))
   398  002146  6EF8               	movwf	tblptru,c
   399  002148  0100               	movlb	0
   400  00214A  EF07  F00D         	goto	_main	;jump to C main() function
   401                           
   402                           	psect	bssCOMRAM
   403  00007E                     __pbssCOMRAM:
   404                           	opt callstack 0
   405  00007E                     _functionalStat:
   406                           	opt callstack 0
   407  00007E                     	ds	1
   408                           
   409                           	psect	dataCOMRAM
   410  00007A                     __pdataCOMRAM:
   411                           	opt callstack 0
   412  00007A                     _prTmr0H:
   413                           	opt callstack 0
   414  00007A                     	ds	1
   415  00007B                     _prTmr0L:
   416                           	opt callstack 0
   417  00007B                     	ds	1
   418  00007C                     _prTmr1H:
   419                           	opt callstack 0
   420  00007C                     	ds	1
   421  00007D                     _prTmr1L:
   422                           	opt callstack 0
   423  00007D                     	ds	1
   424                           
   425                           	psect	bssBANK0
   426  0000F4                     __pbssBANK0:
   427                           	opt callstack 0
   428  0000F4                     _width:
   429                           	opt callstack 0
   430  0000F4                     	ds	2
   431  0000F6                     _prec:
   432                           	opt callstack 0
   433  0000F6                     	ds	2
   434  0000F8                     _flags:
   435                           	opt callstack 0
   436  0000F8                     	ds	2
   437  0000FA                     _frequency:
   438                           	opt callstack 0
   439  0000FA                     	ds	2
   440                           
   441                           	psect	dataBANK0
   442  0000FC                     __pdataBANK0:
   443                           	opt callstack 0
   444  0000FC                     _minutes:
   445                           	opt callstack 0
   446  0000FC                     	ds	1
   447  0000FD                     _hours:
   448                           	opt callstack 0
   449  0000FD                     	ds	1
   450  0000FE                     _days:
   451                           	opt callstack 0
   452  0000FE                     	ds	1
   453  0000FF                     _months:
   454                           	opt callstack 0
   455  0000FF                     	ds	1
   456                           
   457                           	psect	bssBANK1
   458  000100                     __pbssBANK1:
   459                           	opt callstack 0
   460  000100                     _nout:
   461                           	opt callstack 0
   462  000100                     	ds	2
   463  000102                     _level:
   464                           	opt callstack 0
   465  000102                     	ds	1
   466  000103                     _isOnConfig:
   467                           	opt callstack 0
   468  000103                     	ds	1
   469  000104                     _hundredMiliSeconds:
   470                           	opt callstack 0
   471  000104                     	ds	1
   472  000105                     _seconds:
   473                           	opt callstack 0
   474  000105                     	ds	1
   475  000106                     _cntTmr1:
   476                           	opt callstack 0
   477  000106                     	ds	1
   478  000107                     _dbuf:
   479                           	opt callstack 0
   480  000107                     	ds	32
   481  000127                     _lineTwo:
   482                           	opt callstack 0
   483  000127                     	ds	17
   484  000138                     _lineOne:
   485                           	opt callstack 0
   486  000138                     	ds	17
   487                           
   488                           	psect	dataBANK1
   489  000149                     __pdataBANK1:
   490                           	opt callstack 0
   491  000149                     _stereoEnable:
   492                           	opt callstack 0
   493  000149                     	ds	1
   494                           
   495                           	psect	cstackBANK0
   496  000080                     __pcstackBANK0:
   497                           	opt callstack 0
   498  000080                     ??_BusyXLCD:
   499  000080                     ??_DelayPORXLCD:
   500  000080                     ?_strlen:
   501                           	opt callstack 0
   502  000080                     ?_isdigit:
   503                           	opt callstack 0
   504  000080                     ?_isspace:
   505                           	opt callstack 0
   506  000080                     ?_codFreq:
   507                           	opt callstack 0
   508  000080                     ?___wmul:
   509                           	opt callstack 0
   510  000080                     ?___lwdiv:
   511                           	opt callstack 0
   512  000080                     ?___lwmod:
   513                           	opt callstack 0
   514  000080                     ?___aodiv:
   515                           	opt callstack 0
   516  000080                     ?___aomod:
   517                           	opt callstack 0
   518  000080                     readEEPROM@address:
   519                           	opt callstack 0
   520  000080                     writeEEPROM@address:
   521                           	opt callstack 0
   522  000080                     WriteDataXLCD@data:
   523                           	opt callstack 0
   524  000080                     WriteCmdXLCD@cmd:
   525                           	opt callstack 0
   526  000080                     SetDDRamAddr@DDaddr:
   527                           	opt callstack 0
   528  000080                     codFreq@f:
   529                           	opt callstack 0
   530  000080                     ___wmul@multiplier:
   531                           	opt callstack 0
   532  000080                     ___lwdiv@dividend:
   533                           	opt callstack 0
   534  000080                     ___lwmod@dividend:
   535                           	opt callstack 0
   536  000080                     isdigit@c:
   537                           	opt callstack 0
   538  000080                     isspace@c:
   539                           	opt callstack 0
   540  000080                     fputc@c:
   541                           	opt callstack 0
   542  000080                     strlen@s:
   543                           	opt callstack 0
   544  000080                     ___aodiv@dividend:
   545                           	opt callstack 0
   546  000080                     ___aomod@dividend:
   547                           	opt callstack 0
   548                           
   549                           ; 8 bytes @ 0x0
   550  000080                     	ds	1
   551  000081                     ??_getData:
   552  000081                     ??_OpenXLCD:
   553  000081                     writeEEPROM@data:
   554                           	opt callstack 0
   555  000081                     SendCMDLCD@CMD:
   556                           	opt callstack 0
   557  000081                     putsXLCD@buffer:
   558                           	opt callstack 0
   559                           
   560                           ; 2 bytes @ 0x1
   561  000081                     	ds	1
   562  000082                     ??_isdigit:
   563  000082                     ??_isspace:
   564  000082                     setData@data0:
   565                           	opt callstack 0
   566  000082                     OpenXLCD@lcdtype:
   567                           	opt callstack 0
   568  000082                     writeFrequency@f:
   569                           	opt callstack 0
   570  000082                     ___wmul@multiplicand:
   571                           	opt callstack 0
   572  000082                     ___lwdiv@divisor:
   573                           	opt callstack 0
   574  000082                     ___lwmod@divisor:
   575                           	opt callstack 0
   576  000082                     fputc@fp:
   577                           	opt callstack 0
   578  000082                     strlen@a:
   579                           	opt callstack 0
   580                           
   581                           ; 2 bytes @ 0x2
   582  000082                     	ds	1
   583  000083                     ??_initLCD:
   584  000083                     getData@aux0:
   585                           	opt callstack 0
   586  000083                     setData@data1:
   587                           	opt callstack 0
   588                           
   589                           ; 1 bytes @ 0x3
   590  000083                     	ds	1
   591  000084                     ??_writeFrequency:
   592  000084                     ??_fputc:
   593  000084                     getData@aux1:
   594                           	opt callstack 0
   595  000084                     setData@full:
   596                           	opt callstack 0
   597  000084                     ___lwmod@counter:
   598                           	opt callstack 0
   599  000084                     ___wmul@product:
   600                           	opt callstack 0
   601  000084                     ___lwdiv@quotient:
   602                           	opt callstack 0
   603                           
   604                           ; 2 bytes @ 0x4
   605  000084                     	ds	1
   606  000085                     
   607                           ; 1 bytes @ 0x5
   608  000085                     	ds	1
   609  000086                     ___lwdiv@counter:
   610                           	opt callstack 0
   611  000086                     _isspace$1603:
   612                           	opt callstack 0
   613  000086                     beep@ms:
   614                           	opt callstack 0
   615                           
   616                           ; 2 bytes @ 0x6
   617  000086                     	ds	1
   618  000087                     ?_atoi:
   619                           	opt callstack 0
   620  000087                     writeFrequency@buffer:
   621                           	opt callstack 0
   622  000087                     atoi@s:
   623                           	opt callstack 0
   624                           
   625                           ; 2 bytes @ 0x7
   626  000087                     	ds	1
   627  000088                     ___aodiv@divisor:
   628                           	opt callstack 0
   629  000088                     ___aomod@divisor:
   630                           	opt callstack 0
   631                           
   632                           ; 8 bytes @ 0x8
   633  000088                     	ds	1
   634  000089                     ??_atoi:
   635  000089                     writeFrequency@r:
   636                           	opt callstack 0
   637  000089                     fputs@s:
   638                           	opt callstack 0
   639                           
   640                           ; 2 bytes @ 0x9
   641  000089                     	ds	2
   642  00008B                     writeFrequency@i:
   643                           	opt callstack 0
   644  00008B                     fputs@fp:
   645                           	opt callstack 0
   646                           
   647                           ; 2 bytes @ 0xB
   648  00008B                     	ds	2
   649  00008D                     fputs@c:
   650                           	opt callstack 0
   651  00008D                     atoi@neg:
   652                           	opt callstack 0
   653                           
   654                           ; 2 bytes @ 0xD
   655  00008D                     	ds	1
   656  00008E                     fputs@i:
   657                           	opt callstack 0
   658                           
   659                           ; 2 bytes @ 0xE
   660  00008E                     	ds	1
   661  00008F                     _atoi$1585:
   662                           	opt callstack 0
   663                           
   664                           ; 2 bytes @ 0xF
   665  00008F                     	ds	1
   666  000090                     ?_pad:
   667                           	opt callstack 0
   668  000090                     ___aodiv@counter:
   669                           	opt callstack 0
   670  000090                     ___aomod@counter:
   671                           	opt callstack 0
   672  000090                     pad@fp:
   673                           	opt callstack 0
   674                           
   675                           ; 2 bytes @ 0x10
   676  000090                     	ds	1
   677  000091                     ___aodiv@sign:
   678                           	opt callstack 0
   679  000091                     ___aomod@sign:
   680                           	opt callstack 0
   681  000091                     _atoi$1587:
   682                           	opt callstack 0
   683                           
   684                           ; 2 bytes @ 0x11
   685  000091                     	ds	1
   686  000092                     ?_abs:
   687                           	opt callstack 0
   688  000092                     pad@buf:
   689                           	opt callstack 0
   690  000092                     abs@a:
   691                           	opt callstack 0
   692  000092                     ___aodiv@quotient:
   693                           	opt callstack 0
   694                           
   695                           ; 8 bytes @ 0x12
   696  000092                     	ds	1
   697  000093                     _atoi$1586:
   698                           	opt callstack 0
   699                           
   700                           ; 1 bytes @ 0x13
   701  000093                     	ds	1
   702  000094                     ??_abs:
   703  000094                     pad@p:
   704                           	opt callstack 0
   705  000094                     atoi@n:
   706                           	opt callstack 0
   707                           
   708                           ; 2 bytes @ 0x14
   709  000094                     	ds	2
   710  000096                     ??_pad:
   711                           
   712                           ; 1 bytes @ 0x16
   713  000096                     	ds	1
   714  000097                     pad@i:
   715                           	opt callstack 0
   716                           
   717                           ; 2 bytes @ 0x17
   718  000097                     	ds	2
   719  000099                     pad@w:
   720                           	opt callstack 0
   721                           
   722                           ; 2 bytes @ 0x19
   723  000099                     	ds	2
   724  00009B                     ?_dtoa:
   725                           	opt callstack 0
   726  00009B                     dtoa@fp:
   727                           	opt callstack 0
   728                           
   729                           ; 2 bytes @ 0x1B
   730  00009B                     	ds	2
   731  00009D                     dtoa@d:
   732                           	opt callstack 0
   733                           
   734                           ; 8 bytes @ 0x1D
   735  00009D                     	ds	8
   736  0000A5                     ??_dtoa:
   737                           
   738                           ; 1 bytes @ 0x25
   739  0000A5                     	ds	8
   740  0000AD                     _dtoa$1113:
   741                           	opt callstack 0
   742                           
   743                           ; 2 bytes @ 0x2D
   744  0000AD                     	ds	2
   745  0000AF                     dtoa@p:
   746                           	opt callstack 0
   747                           
   748                           ; 2 bytes @ 0x2F
   749  0000AF                     	ds	2
   750  0000B1                     dtoa@w:
   751                           	opt callstack 0
   752                           
   753                           ; 2 bytes @ 0x31
   754  0000B1                     	ds	2
   755  0000B3                     dtoa@s:
   756                           	opt callstack 0
   757                           
   758                           ; 2 bytes @ 0x33
   759  0000B3                     	ds	2
   760  0000B5                     dtoa@n:
   761                           	opt callstack 0
   762                           
   763                           ; 8 bytes @ 0x35
   764  0000B5                     	ds	8
   765  0000BD                     dtoa@i:
   766                           	opt callstack 0
   767                           
   768                           ; 2 bytes @ 0x3D
   769  0000BD                     	ds	2
   770  0000BF                     ?_vfpfcnvrt:
   771                           	opt callstack 0
   772  0000BF                     vfpfcnvrt@fp:
   773                           	opt callstack 0
   774                           
   775                           ; 2 bytes @ 0x3F
   776  0000BF                     	ds	2
   777  0000C1                     vfpfcnvrt@fmt:
   778                           	opt callstack 0
   779                           
   780                           ; 2 bytes @ 0x41
   781  0000C1                     	ds	2
   782  0000C3                     vfpfcnvrt@ap:
   783                           	opt callstack 0
   784                           
   785                           ; 2 bytes @ 0x43
   786  0000C3                     	ds	2
   787  0000C5                     ??_vfpfcnvrt:
   788                           
   789                           ; 1 bytes @ 0x45
   790  0000C5                     	ds	4
   791  0000C9                     vfpfcnvrt@ll:
   792                           	opt callstack 0
   793                           
   794                           ; 8 bytes @ 0x49
   795  0000C9                     	ds	8
   796  0000D1                     _vfpfcnvrt$1128:
   797                           	opt callstack 0
   798                           
   799                           ; 2 bytes @ 0x51
   800  0000D1                     	ds	2
   801  0000D3                     ?_vfprintf:
   802                           	opt callstack 0
   803  0000D3                     vfprintf@fp:
   804                           	opt callstack 0
   805                           
   806                           ; 2 bytes @ 0x53
   807  0000D3                     	ds	2
   808  0000D5                     vfprintf@fmt:
   809                           	opt callstack 0
   810                           
   811                           ; 2 bytes @ 0x55
   812  0000D5                     	ds	2
   813  0000D7                     vfprintf@ap:
   814                           	opt callstack 0
   815                           
   816                           ; 2 bytes @ 0x57
   817  0000D7                     	ds	2
   818  0000D9                     vfprintf@cfmt:
   819                           	opt callstack 0
   820                           
   821                           ; 2 bytes @ 0x59
   822  0000D9                     	ds	2
   823  0000DB                     ?_sprintf:
   824                           	opt callstack 0
   825  0000DB                     sprintf@s:
   826                           	opt callstack 0
   827                           
   828                           ; 2 bytes @ 0x5B
   829  0000DB                     	ds	2
   830  0000DD                     sprintf@fmt:
   831                           	opt callstack 0
   832                           
   833                           ; 2 bytes @ 0x5D
   834  0000DD                     	ds	6
   835  0000E3                     
   836                           ; 1 bytes @ 0x63
   837  0000E3                     	ds	2
   838  0000E5                     sprintf@ap:
   839                           	opt callstack 0
   840                           
   841                           ; 2 bytes @ 0x65
   842  0000E5                     	ds	2
   843  0000E7                     sprintf@f:
   844                           	opt callstack 0
   845                           
   846                           ; 6 bytes @ 0x67
   847  0000E7                     	ds	6
   848  0000ED                     ??_setFrequency:
   849  0000ED                     lcdVumeter@decim:
   850                           	opt callstack 0
   851                           
   852                           ; 1 bytes @ 0x6D
   853  0000ED                     	ds	1
   854  0000EE                     lcdVumeter@integ:
   855                           	opt callstack 0
   856                           
   857                           ; 1 bytes @ 0x6E
   858  0000EE                     	ds	1
   859  0000EF                     lcdVumeter@lvl:
   860                           	opt callstack 0
   861                           
   862                           ; 1 bytes @ 0x6F
   863  0000EF                     	ds	1
   864  0000F0                     vumeter@vumLevel:
   865                           	opt callstack 0
   866                           
   867                           ; 1 bytes @ 0x70
   868  0000F0                     	ds	1
   869  0000F1                     ??_main:
   870                           
   871                           ; 1 bytes @ 0x71
   872  0000F1                     	ds	2
   873  0000F3                     main@i:
   874                           	opt callstack 0
   875                           
   876                           ; 1 bytes @ 0x73
   877  0000F3                     	ds	1
   878                           
   879                           	psect	cstackCOMRAM
   880  000001                     __pcstackCOMRAM:
   881                           	opt callstack 0
   882  000001                     ??i2_BusyXLCD:
   883  000001                     ?i2___wmul:
   884                           	opt callstack 0
   885  000001                     ?i2___lwdiv:
   886                           	opt callstack 0
   887  000001                     ?i2___lwmod:
   888                           	opt callstack 0
   889  000001                     ?i2_isdigit:
   890                           	opt callstack 0
   891  000001                     ?i2_isspace:
   892                           	opt callstack 0
   893  000001                     ?i2_strlen:
   894                           	opt callstack 0
   895  000001                     ?i2___aodiv:
   896                           	opt callstack 0
   897  000001                     ?i2___aomod:
   898                           	opt callstack 0
   899  000001                     i2writeEEPROM@address:
   900                           	opt callstack 0
   901  000001                     i2WriteDataXLCD@data:
   902                           	opt callstack 0
   903  000001                     i2SetDDRamAddr@DDaddr:
   904                           	opt callstack 0
   905  000001                     i2___wmul@multiplier:
   906                           	opt callstack 0
   907  000001                     i2___lwdiv@dividend:
   908                           	opt callstack 0
   909  000001                     i2___lwmod@dividend:
   910                           	opt callstack 0
   911  000001                     i2isdigit@c:
   912                           	opt callstack 0
   913  000001                     i2isspace@c:
   914                           	opt callstack 0
   915  000001                     i2fputc@c:
   916                           	opt callstack 0
   917  000001                     i2strlen@s:
   918                           	opt callstack 0
   919  000001                     i2___aodiv@dividend:
   920                           	opt callstack 0
   921  000001                     i2___aomod@dividend:
   922                           	opt callstack 0
   923                           
   924                           ; 8 bytes @ 0x0
   925  000001                     	ds	1
   926  000002                     i2writeEEPROM@data:
   927                           	opt callstack 0
   928  000002                     i2putsXLCD@buffer:
   929                           	opt callstack 0
   930                           
   931                           ; 2 bytes @ 0x1
   932  000002                     	ds	1
   933  000003                     ??i2_isdigit:
   934  000003                     ??i2_isspace:
   935  000003                     i2setData@data0:
   936                           	opt callstack 0
   937  000003                     i2___wmul@multiplicand:
   938                           	opt callstack 0
   939  000003                     i2___lwdiv@divisor:
   940                           	opt callstack 0
   941  000003                     i2___lwmod@divisor:
   942                           	opt callstack 0
   943  000003                     i2fputc@fp:
   944                           	opt callstack 0
   945  000003                     i2strlen@a:
   946                           	opt callstack 0
   947                           
   948                           ; 2 bytes @ 0x2
   949  000003                     	ds	1
   950  000004                     i2setData@data1:
   951                           	opt callstack 0
   952                           
   953                           ; 1 bytes @ 0x3
   954  000004                     	ds	1
   955  000005                     ??i2_fputc:
   956  000005                     i2setData@full:
   957                           	opt callstack 0
   958  000005                     i2___lwmod@counter:
   959                           	opt callstack 0
   960  000005                     i2___wmul@product:
   961                           	opt callstack 0
   962  000005                     i2___lwdiv@quotient:
   963                           	opt callstack 0
   964                           
   965                           ; 2 bytes @ 0x4
   966  000005                     	ds	1
   967  000006                     
   968                           ; 1 bytes @ 0x5
   969  000006                     	ds	1
   970  000007                     i2___lwdiv@counter:
   971                           	opt callstack 0
   972  000007                     i2_isspace$1603:
   973                           	opt callstack 0
   974                           
   975                           ; 1 bytes @ 0x6
   976  000007                     	ds	1
   977  000008                     ?i2_atoi:
   978                           	opt callstack 0
   979  000008                     i2atoi@s:
   980                           	opt callstack 0
   981                           
   982                           ; 2 bytes @ 0x7
   983  000008                     	ds	1
   984  000009                     i2___aodiv@divisor:
   985                           	opt callstack 0
   986  000009                     i2___aomod@divisor:
   987                           	opt callstack 0
   988                           
   989                           ; 8 bytes @ 0x8
   990  000009                     	ds	1
   991  00000A                     ??i2_atoi:
   992  00000A                     i2fputs@s:
   993                           	opt callstack 0
   994                           
   995                           ; 2 bytes @ 0x9
   996  00000A                     	ds	2
   997  00000C                     i2fputs@fp:
   998                           	opt callstack 0
   999                           
  1000                           ; 2 bytes @ 0xB
  1001  00000C                     	ds	2
  1002  00000E                     i2fputs@c:
  1003                           	opt callstack 0
  1004  00000E                     i2atoi@neg:
  1005                           	opt callstack 0
  1006                           
  1007                           ; 2 bytes @ 0xD
  1008  00000E                     	ds	1
  1009  00000F                     i2fputs@i:
  1010                           	opt callstack 0
  1011                           
  1012                           ; 2 bytes @ 0xE
  1013  00000F                     	ds	1
  1014  000010                     i2_atoi$1585:
  1015                           	opt callstack 0
  1016                           
  1017                           ; 2 bytes @ 0xF
  1018  000010                     	ds	1
  1019  000011                     ?i2_pad:
  1020                           	opt callstack 0
  1021  000011                     i2___aodiv@counter:
  1022                           	opt callstack 0
  1023  000011                     i2___aomod@counter:
  1024                           	opt callstack 0
  1025  000011                     i2pad@fp:
  1026                           	opt callstack 0
  1027                           
  1028                           ; 2 bytes @ 0x10
  1029  000011                     	ds	1
  1030  000012                     i2___aodiv@sign:
  1031                           	opt callstack 0
  1032  000012                     i2___aomod@sign:
  1033                           	opt callstack 0
  1034  000012                     i2_atoi$1587:
  1035                           	opt callstack 0
  1036                           
  1037                           ; 2 bytes @ 0x11
  1038  000012                     	ds	1
  1039  000013                     ?i2_abs:
  1040                           	opt callstack 0
  1041  000013                     i2pad@buf:
  1042                           	opt callstack 0
  1043  000013                     i2abs@a:
  1044                           	opt callstack 0
  1045  000013                     i2___aodiv@quotient:
  1046                           	opt callstack 0
  1047                           
  1048                           ; 8 bytes @ 0x12
  1049  000013                     	ds	1
  1050  000014                     i2_atoi$1586:
  1051                           	opt callstack 0
  1052                           
  1053                           ; 1 bytes @ 0x13
  1054  000014                     	ds	1
  1055  000015                     ??i2_abs:
  1056  000015                     i2pad@p:
  1057                           	opt callstack 0
  1058  000015                     i2atoi@n:
  1059                           	opt callstack 0
  1060                           
  1061                           ; 2 bytes @ 0x14
  1062  000015                     	ds	2
  1063  000017                     ??i2_pad:
  1064                           
  1065                           ; 1 bytes @ 0x16
  1066  000017                     	ds	1
  1067  000018                     i2pad@i:
  1068                           	opt callstack 0
  1069                           
  1070                           ; 2 bytes @ 0x17
  1071  000018                     	ds	2
  1072  00001A                     i2pad@w:
  1073                           	opt callstack 0
  1074                           
  1075                           ; 2 bytes @ 0x19
  1076  00001A                     	ds	2
  1077  00001C                     ?i2_dtoa:
  1078                           	opt callstack 0
  1079  00001C                     i2dtoa@fp:
  1080                           	opt callstack 0
  1081                           
  1082                           ; 2 bytes @ 0x1B
  1083  00001C                     	ds	2
  1084  00001E                     i2dtoa@d:
  1085                           	opt callstack 0
  1086                           
  1087                           ; 8 bytes @ 0x1D
  1088  00001E                     	ds	8
  1089  000026                     ??i2_dtoa:
  1090                           
  1091                           ; 1 bytes @ 0x25
  1092  000026                     	ds	8
  1093  00002E                     i2_dtoa$1113:
  1094                           	opt callstack 0
  1095                           
  1096                           ; 2 bytes @ 0x2D
  1097  00002E                     	ds	2
  1098  000030                     i2dtoa@p:
  1099                           	opt callstack 0
  1100                           
  1101                           ; 2 bytes @ 0x2F
  1102  000030                     	ds	2
  1103  000032                     i2dtoa@w:
  1104                           	opt callstack 0
  1105                           
  1106                           ; 2 bytes @ 0x31
  1107  000032                     	ds	2
  1108  000034                     i2dtoa@s:
  1109                           	opt callstack 0
  1110                           
  1111                           ; 2 bytes @ 0x33
  1112  000034                     	ds	2
  1113  000036                     i2dtoa@n:
  1114                           	opt callstack 0
  1115                           
  1116                           ; 8 bytes @ 0x35
  1117  000036                     	ds	8
  1118  00003E                     i2dtoa@i:
  1119                           	opt callstack 0
  1120                           
  1121                           ; 2 bytes @ 0x3D
  1122  00003E                     	ds	2
  1123  000040                     ?i2_vfpfcnvrt:
  1124                           	opt callstack 0
  1125  000040                     i2vfpfcnvrt@fp:
  1126                           	opt callstack 0
  1127                           
  1128                           ; 2 bytes @ 0x3F
  1129  000040                     	ds	2
  1130  000042                     i2vfpfcnvrt@fmt:
  1131                           	opt callstack 0
  1132                           
  1133                           ; 2 bytes @ 0x41
  1134  000042                     	ds	2
  1135  000044                     i2vfpfcnvrt@ap:
  1136                           	opt callstack 0
  1137                           
  1138                           ; 2 bytes @ 0x43
  1139  000044                     	ds	2
  1140  000046                     ??i2_vfpfcnvrt:
  1141                           
  1142                           ; 1 bytes @ 0x45
  1143  000046                     	ds	4
  1144  00004A                     i2vfpfcnvrt@ll:
  1145                           	opt callstack 0
  1146                           
  1147                           ; 8 bytes @ 0x49
  1148  00004A                     	ds	8
  1149  000052                     i2_vfpfcnvrt$1128:
  1150                           	opt callstack 0
  1151                           
  1152                           ; 2 bytes @ 0x51
  1153  000052                     	ds	2
  1154  000054                     ?i2_vfprintf:
  1155                           	opt callstack 0
  1156  000054                     i2vfprintf@fp:
  1157                           	opt callstack 0
  1158                           
  1159                           ; 2 bytes @ 0x53
  1160  000054                     	ds	2
  1161  000056                     i2vfprintf@fmt:
  1162                           	opt callstack 0
  1163                           
  1164                           ; 2 bytes @ 0x55
  1165  000056                     	ds	2
  1166  000058                     i2vfprintf@ap:
  1167                           	opt callstack 0
  1168                           
  1169                           ; 2 bytes @ 0x57
  1170  000058                     	ds	2
  1171  00005A                     i2vfprintf@cfmt:
  1172                           	opt callstack 0
  1173                           
  1174                           ; 2 bytes @ 0x59
  1175  00005A                     	ds	2
  1176  00005C                     ?i2_sprintf:
  1177                           	opt callstack 0
  1178  00005C                     i2sprintf@s:
  1179                           	opt callstack 0
  1180                           
  1181                           ; 2 bytes @ 0x5B
  1182  00005C                     	ds	2
  1183  00005E                     i2sprintf@fmt:
  1184                           	opt callstack 0
  1185                           
  1186                           ; 2 bytes @ 0x5D
  1187  00005E                     	ds	6
  1188  000064                     
  1189                           ; 1 bytes @ 0x63
  1190  000064                     	ds	2
  1191  000066                     i2sprintf@ap:
  1192                           	opt callstack 0
  1193                           
  1194                           ; 2 bytes @ 0x65
  1195  000066                     	ds	2
  1196  000068                     i2sprintf@f:
  1197                           	opt callstack 0
  1198                           
  1199                           ; 6 bytes @ 0x67
  1200  000068                     	ds	6
  1201  00006E                     updateLCD@decim:
  1202                           	opt callstack 0
  1203                           
  1204                           ; 1 bytes @ 0x6D
  1205  00006E                     	ds	1
  1206  00006F                     updateLCD@integ:
  1207                           	opt callstack 0
  1208                           
  1209                           ; 1 bytes @ 0x6E
  1210  00006F                     	ds	1
  1211  000070                     ??_inter:
  1212                           
  1213                           ; 1 bytes @ 0x6F
  1214  000070                     	ds	10
  1215                           
  1216 ;;
  1217 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1218 ;;
  1219 ;; *************** function _main *****************
  1220 ;; Defined at:
  1221 ;;		line 5 in file "main.c"
  1222 ;; Parameters:    Size  Location     Type
  1223 ;;		None
  1224 ;; Auto vars:     Size  Location     Type
  1225 ;;  i               1  115[BANK0 ] unsigned char 
  1226 ;; Return value:  Size  Location     Type
  1227 ;;                  1    wreg      void 
  1228 ;; Registers used:
  1229 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1230 ;; Tracked objects:
  1231 ;;		On entry : 0/0
  1232 ;;		On exit  : 0/0
  1233 ;;		Unchanged: 0/0
  1234 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1235 ;;      Params:         0       0       0       0       0       0       0
  1236 ;;      Locals:         0       1       0       0       0       0       0
  1237 ;;      Temps:          0       2       0       0       0       0       0
  1238 ;;      Totals:         0       3       0       0       0       0       0
  1239 ;;Total ram usage:        3 bytes
  1240 ;; Hardware stack levels required when called:   20
  1241 ;; This function calls:
  1242 ;;		_beep
  1243 ;;		_config
  1244 ;;		_getData
  1245 ;;		_setFrequency
  1246 ;;		_sprintf
  1247 ;;		_vumeter
  1248 ;;		_writeFrequency
  1249 ;; This function is called by:
  1250 ;;		Startup code after reset
  1251 ;; This function uses a non-reentrant model
  1252 ;;
  1253                           
  1254                           	psect	text0
  1255  001A0E                     __ptext0:
  1256                           	opt callstack 0
  1257  001A0E                     _main:
  1258                           	opt callstack 0
  1259  001A0E  FFFF               	dw	65535	; assembler added errata NOP
  1260                           
  1261                           ;main.c: 6:     char i = 0;
  1262                           
  1263                           ;incstack = 0
  1264  001A10  0E00               	movlw	0
  1265  001A12  0100               	movlb	0	; () banked
  1266  001A14  6FF3               	movwf	main@i& (0+255),b
  1267                           
  1268                           ; BSR set to: 0
  1269                           ;main.c: 7:     _delay((unsigned long)((100)*(12000000/4000.0)));
  1270  001A16  0E02               	movlw	2
  1271  001A18  0100               	movlb	0	; () banked
  1272  001A1A  6FF2               	movwf	(??_main+1)& (0+255),b
  1273  001A1C  0E25               	movlw	37
  1274  001A1E  6FF1               	movwf	??_main& (0+255),b
  1275  001A20  0E63               	movlw	99
  1276  001A22                     u3997:
  1277  001A22  FFFF               	dw	65535	; errata NOP
  1278  001A24  2EE8               	decfsz	wreg,f,c
  1279  001A26  D7FD               	bra	u3997
  1280  001A28  2FF1               	decfsz	??_main& (0+255),f,b
  1281  001A2A  D7FB               	bra	u3997
  1282  001A2C  2FF2               	decfsz	(??_main+1)& (0+255),f,b
  1283  001A2E  D7F9               	bra	u3997
  1284  001A30  F000               	nop	
  1285                           
  1286                           ;main.c: 8:     config();
  1287  001A32  EC07  F013         	call	_config	;wreg free
  1288                           
  1289                           ;main.c: 9:     PORTAbits.RA5 = 0;
  1290  001A36  9A80               	bcf	3968,5,c	;volatile
  1291                           
  1292                           ;main.c: 10:     PORTBbits.RB1 = 1;
  1293  001A38  8281               	bsf	3969,1,c	;volatile
  1294                           
  1295                           ;main.c: 11:     getData();
  1296  001A3A  ECC2  F011         	call	_getData	;wreg free
  1297                           
  1298                           ;main.c: 12:     beep(10);
  1299  001A3E  0E00               	movlw	0
  1300  001A40  0100               	movlb	0	; () banked
  1301  001A42  6F87               	movwf	(beep@ms+1)& (0+255),b
  1302  001A44  0E0A               	movlw	10
  1303  001A46  6F86               	movwf	beep@ms& (0+255),b
  1304  001A48  EC87  F012         	call	_beep	;wreg free
  1305                           
  1306                           ;main.c: 13:     if(!PORTCbits.RC0){
  1307  001A4C  B082               	btfsc	3970,0,c	;volatile
  1308  001A4E  D00D               	goto	l4323
  1309                           
  1310                           ;main.c: 14:         _delay((unsigned long)((25)*(12000000/4000.0)));
  1311  001A50  0E4A               	movlw	74
  1312  001A52  0100               	movlb	0	; () banked
  1313  001A54  6FF1               	movwf	??_main& (0+255),b
  1314  001A56  0E18               	movlw	24
  1315  001A58                     u4007:
  1316  001A58  FFFF               	dw	65535	; errata NOP
  1317  001A5A  2EE8               	decfsz	wreg,f,c
  1318  001A5C  D7FD               	bra	u4007
  1319  001A5E  2FF1               	decfsz	??_main& (0+255),f,b
  1320  001A60  D7FB               	bra	u4007
  1321  001A62  F000               	nop	
  1322                           
  1323                           ;main.c: 15:         if(!PORTCbits.RC0) setFrequency();
  1324  001A64  A082               	btfss	3970,0,c	;volatile
  1325  001A66  EC1D  F008         	call	_setFrequency	;wreg free
  1326  001A6A                     l4323:
  1327  001A6A  FFFF               	dw	65535	; assembler added errata NOP
  1328                           
  1329                           ;main.c: 17:     PORTBbits.RB1 = 0;
  1330  001A6C  9281               	bcf	3969,1,c	;volatile
  1331                           
  1332                           ;main.c: 18:     _delay((unsigned long)((100)*(12000000/4000.0)));
  1333  001A6E  0E02               	movlw	2
  1334  001A70  0100               	movlb	0	; () banked
  1335  001A72  6FF2               	movwf	(??_main+1)& (0+255),b
  1336  001A74  0E25               	movlw	37
  1337  001A76  6FF1               	movwf	??_main& (0+255),b
  1338  001A78  0E63               	movlw	99
  1339  001A7A                     u4017:
  1340  001A7A  FFFF               	dw	65535	; errata NOP
  1341  001A7C  2EE8               	decfsz	wreg,f,c
  1342  001A7E  D7FD               	bra	u4017
  1343  001A80  2FF1               	decfsz	??_main& (0+255),f,b
  1344  001A82  D7FB               	bra	u4017
  1345  001A84  2FF2               	decfsz	(??_main+1)& (0+255),f,b
  1346  001A86  D7F9               	bra	u4017
  1347  001A88  F000               	nop	
  1348                           
  1349                           ;main.c: 19:     writeFrequency(frequency);
  1350  001A8A  C0FA  F082         	movff	_frequency,writeFrequency@f
  1351  001A8E  C0FB  F083         	movff	_frequency+1,writeFrequency@f+1
  1352  001A92  EC1D  F00E         	call	_writeFrequency	;wreg free
  1353                           
  1354                           ;main.c: 20:     beep(100);
  1355  001A96  0E00               	movlw	0
  1356  001A98  0100               	movlb	0	; () banked
  1357  001A9A  6F87               	movwf	(beep@ms+1)& (0+255),b
  1358  001A9C  0E64               	movlw	100
  1359  001A9E  6F86               	movwf	beep@ms& (0+255),b
  1360  001AA0  EC87  F012         	call	_beep	;wreg free
  1361  001AA4                     l4335:
  1362  001AA4  FFFF               	dw	65535	; assembler added errata NOP
  1363                           
  1364                           ;main.c: 22:         sprintf(lineOne,"Fijando Fcia.   ");
  1365  001AA6  0E38               	movlw	low _lineOne
  1366  001AA8  0100               	movlb	0	; () banked
  1367  001AAA  6FDB               	movwf	sprintf@s& (0+255),b
  1368  001AAC  0E01               	movlw	high _lineOne
  1369  001AAE  6FDC               	movwf	(sprintf@s+1)& (0+255),b
  1370  001AB0  0E28               	movlw	low STR_1
  1371  001AB2  6FDD               	movwf	sprintf@fmt& (0+255),b
  1372  001AB4  0E06               	movlw	high STR_1
  1373  001AB6  6FDE               	movwf	(sprintf@fmt+1)& (0+255),b
  1374  001AB8  ECB3  F012         	call	_sprintf	;wreg free
  1375                           
  1376                           ;main.c: 23:         _delay((unsigned long)((90)*(12000000/4000.0)));
  1377  001ABC  0E02               	movlw	2
  1378  001ABE  0100               	movlb	0	; () banked
  1379  001AC0  6FF2               	movwf	(??_main+1)& (0+255),b
  1380  001AC2  0E08               	movlw	8
  1381  001AC4  6FF1               	movwf	??_main& (0+255),b
  1382  001AC6  0E25               	movlw	37
  1383  001AC8                     u4027:
  1384  001AC8  FFFF               	dw	65535	; errata NOP
  1385  001ACA  2EE8               	decfsz	wreg,f,c
  1386  001ACC  D7FD               	bra	u4027
  1387  001ACE  2FF1               	decfsz	??_main& (0+255),f,b
  1388  001AD0  D7FB               	bra	u4027
  1389  001AD2  2FF2               	decfsz	(??_main+1)& (0+255),f,b
  1390  001AD4  D7F9               	bra	u4027
  1391  001AD6  D000               	nop2	
  1392  001AD8  F000               	nop	
  1393                           
  1394                           ;main.c: 24:     }
  1395  001ADA  0100               	movlb	0	; () banked
  1396  001ADC  2BF3               	incf	main@i& (0+255),f,b
  1397                           
  1398                           ; BSR set to: 0
  1399  001ADE  0E31               	movlw	49
  1400  001AE0  65F3               	cpfsgt	main@i& (0+255),b
  1401  001AE2  D7E0               	goto	l4335
  1402                           
  1403                           ; BSR set to: 0
  1404                           ;main.c: 26:     sprintf(lineOne,"AMPRO      EX-FM");
  1405  001AE4  0E38               	movlw	low _lineOne
  1406  001AE6  6FDB               	movwf	sprintf@s& (0+255),b
  1407  001AE8  0E01               	movlw	high _lineOne
  1408  001AEA  6FDC               	movwf	(sprintf@s+1)& (0+255),b
  1409  001AEC  0E4A               	movlw	low STR_2
  1410  001AEE  6FDD               	movwf	sprintf@fmt& (0+255),b
  1411  001AF0  0E06               	movlw	high STR_2
  1412  001AF2  6FDE               	movwf	(sprintf@fmt+1)& (0+255),b
  1413  001AF4  ECB3  F012         	call	_sprintf	;wreg free
  1414                           
  1415                           ;main.c: 27:     PORTAbits.RA5 = 1;
  1416  001AF8  8A80               	bsf	3968,5,c	;volatile
  1417  001AFA                     l4347:
  1418  001AFA  FFFF               	dw	65535	; assembler added errata NOP
  1419  001AFC  047E               	decf	_functionalStat,w,c
  1420  001AFE  A4D8               	btfss	status,2,c
  1421  001B00  D002               	goto	l213
  1422                           
  1423                           ;main.c: 30:             PORTAbits.RA5 = 1;
  1424  001B02  8A80               	bsf	3968,5,c	;volatile
  1425                           
  1426                           ;main.c: 31:         }else{
  1427  001B04  D002               	goto	l4351
  1428  001B06                     l213:
  1429  001B06  FFFF               	dw	65535	; assembler added errata NOP
  1430                           
  1431                           ;main.c: 32:             PORTAbits.RA5 = 0;
  1432  001B08  9A80               	bcf	3968,5,c	;volatile
  1433  001B0A                     l4351:
  1434  001B0A  FFFF               	dw	65535	; assembler added errata NOP
  1435                           
  1436                           ;main.c: 35:         _delay((unsigned long)((100)*(12000000/4000.0)));
  1437  001B0C  0E02               	movlw	2
  1438  001B0E  0100               	movlb	0	; () banked
  1439  001B10  6FF2               	movwf	(??_main+1)& (0+255),b
  1440  001B12  0E25               	movlw	37
  1441  001B14  6FF1               	movwf	??_main& (0+255),b
  1442  001B16  0E63               	movlw	99
  1443  001B18                     u4037:
  1444  001B18  FFFF               	dw	65535	; errata NOP
  1445  001B1A  2EE8               	decfsz	wreg,f,c
  1446  001B1C  D7FD               	bra	u4037
  1447  001B1E  2FF1               	decfsz	??_main& (0+255),f,b
  1448  001B20  D7FB               	bra	u4037
  1449  001B22  2FF2               	decfsz	(??_main+1)& (0+255),f,b
  1450  001B24  D7F9               	bra	u4037
  1451  001B26  F000               	nop	
  1452                           
  1453                           ;main.c: 36:         vumeter(ADRESH);
  1454  001B28  50C4               	movf	4036,w,c	;volatile
  1455  001B2A  ECA7  F010         	call	_vumeter
  1456                           
  1457                           ;main.c: 37:         writeFrequency(frequency);
  1458  001B2E  C0FA  F082         	movff	_frequency,writeFrequency@f
  1459  001B32  C0FB  F083         	movff	_frequency+1,writeFrequency@f+1
  1460  001B36  EC1D  F00E         	call	_writeFrequency	;wreg free
  1461  001B3A  D7DF               	goto	l4347
  1462  001B3C                     __end_of_main:
  1463                           	opt callstack 0
  1464                           
  1465 ;; *************** function _vumeter *****************
  1466 ;; Defined at:
  1467 ;;		line 102 in file "main.c"
  1468 ;; Parameters:    Size  Location     Type
  1469 ;;  vumLevel        1    wreg     unsigned char 
  1470 ;; Auto vars:     Size  Location     Type
  1471 ;;  vumLevel        1  112[BANK0 ] unsigned char 
  1472 ;; Return value:  Size  Location     Type
  1473 ;;                  1    wreg      void 
  1474 ;; Registers used:
  1475 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1476 ;; Tracked objects:
  1477 ;;		On entry : 0/0
  1478 ;;		On exit  : 0/0
  1479 ;;		Unchanged: 0/0
  1480 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1481 ;;      Params:         0       0       0       0       0       0       0
  1482 ;;      Locals:         0       1       0       0       0       0       0
  1483 ;;      Temps:          0       0       0       0       0       0       0
  1484 ;;      Totals:         0       1       0       0       0       0       0
  1485 ;;Total ram usage:        1 bytes
  1486 ;; Hardware stack levels used:    1
  1487 ;; Hardware stack levels required when called:   19
  1488 ;; This function calls:
  1489 ;;		_lcdVumeter
  1490 ;; This function is called by:
  1491 ;;		_main
  1492 ;; This function uses a non-reentrant model
  1493 ;;
  1494                           
  1495                           	psect	text1
  1496  00214E                     __ptext1:
  1497                           	opt callstack 0
  1498  00214E                     _vumeter:
  1499                           	opt callstack 0
  1500  00214E  FFFF               	dw	65535	; assembler added errata NOP
  1501                           
  1502                           ;incstack = 0
  1503                           ;vumeter@vumLevel stored from wreg
  1504  002150  0100               	movlb	0	; () banked
  1505  002152  6FF0               	movwf	vumeter@vumLevel& (0+255),b
  1506                           
  1507                           ;main.c: 103:     if (vumLevel >= 128) level = 8;
  1508  002154  0E7F               	movlw	127
  1509  002156  0100               	movlb	0	; () banked
  1510  002158  65F0               	cpfsgt	vumeter@vumLevel& (0+255),b
  1511  00215A  D002               	goto	l4211
  1512                           
  1513                           ; BSR set to: 0
  1514  00215C  0E08               	movlw	8
  1515  00215E  D029               	goto	L7
  1516  002160                     l4211:
  1517  002160  FFFF               	dw	65535	; assembler added errata NOP
  1518                           
  1519                           ; BSR set to: 0
  1520  002162  0E3F               	movlw	63
  1521  002164  65F0               	cpfsgt	vumeter@vumLevel& (0+255),b
  1522  002166  D002               	goto	l4215
  1523                           
  1524                           ; BSR set to: 0
  1525  002168  0E07               	movlw	7
  1526  00216A  D023               	goto	L7
  1527  00216C                     l4215:
  1528  00216C  FFFF               	dw	65535	; assembler added errata NOP
  1529                           
  1530                           ; BSR set to: 0
  1531  00216E  0E1F               	movlw	31
  1532  002170  65F0               	cpfsgt	vumeter@vumLevel& (0+255),b
  1533  002172  D002               	goto	l4219
  1534                           
  1535                           ; BSR set to: 0
  1536  002174  0E06               	movlw	6
  1537  002176  D01D               	goto	L7
  1538  002178                     l4219:
  1539  002178  FFFF               	dw	65535	; assembler added errata NOP
  1540                           
  1541                           ; BSR set to: 0
  1542  00217A  0E0F               	movlw	15
  1543  00217C  65F0               	cpfsgt	vumeter@vumLevel& (0+255),b
  1544  00217E  D002               	goto	l4223
  1545                           
  1546                           ; BSR set to: 0
  1547  002180  0E05               	movlw	5
  1548  002182  D017               	goto	L7
  1549  002184                     l4223:
  1550  002184  FFFF               	dw	65535	; assembler added errata NOP
  1551                           
  1552                           ; BSR set to: 0
  1553  002186  0E07               	movlw	7
  1554  002188  65F0               	cpfsgt	vumeter@vumLevel& (0+255),b
  1555  00218A  D002               	goto	l4227
  1556                           
  1557                           ; BSR set to: 0
  1558  00218C  0E04               	movlw	4
  1559  00218E  D011               	goto	L7
  1560  002190                     l4227:
  1561  002190  FFFF               	dw	65535	; assembler added errata NOP
  1562                           
  1563                           ; BSR set to: 0
  1564  002192  0E03               	movlw	3
  1565  002194  65F0               	cpfsgt	vumeter@vumLevel& (0+255),b
  1566  002196  D002               	goto	l4231
  1567                           
  1568                           ; BSR set to: 0
  1569  002198  0E03               	movlw	3
  1570  00219A  D00B               	goto	L7
  1571  00219C                     l4231:
  1572  00219C  FFFF               	dw	65535	; assembler added errata NOP
  1573                           
  1574                           ; BSR set to: 0
  1575  00219E  0E01               	movlw	1
  1576  0021A0  65F0               	cpfsgt	vumeter@vumLevel& (0+255),b
  1577  0021A2  D002               	goto	l4235
  1578                           
  1579                           ; BSR set to: 0
  1580  0021A4  0E02               	movlw	2
  1581  0021A6  D005               	goto	L7
  1582  0021A8                     l4235:
  1583  0021A8  FFFF               	dw	65535	; assembler added errata NOP
  1584                           
  1585                           ; BSR set to: 0
  1586  0021AA  51F0               	movf	vumeter@vumLevel& (0+255),w,b
  1587  0021AC  B4D8               	btfsc	status,2,c
  1588  0021AE  D004               	goto	l240
  1589                           
  1590                           ; BSR set to: 0
  1591  0021B0  0E01               	movlw	1
  1592  0021B2                     L7:
  1593  0021B2  FFFF               	dw	65535	; assembler added errata NOP
  1594  0021B4  0101               	movlb	1	; () banked
  1595  0021B6  6F02               	movwf	_level& (0+255),b
  1596  0021B8                     l240:
  1597  0021B8  FFFF               	dw	65535	; assembler added errata NOP
  1598                           
  1599                           ;main.c: 112:     lcdVumeter(level);
  1600                           
  1601                           ; BSR set to: 0
  1602  0021BA  0101               	movlb	1	; () banked
  1603  0021BC  5102               	movf	_level& (0+255),w,b
  1604  0021BE  ECD9  F00F         	call	_lcdVumeter
  1605  0021C2  0012               	return		;funcret
  1606  0021C4  FFFF               	dw	65535	; errata NOP
  1607  0021C6                     __end_of_vumeter:
  1608                           	opt callstack 0
  1609                           
  1610 ;; *************** function _lcdVumeter *****************
  1611 ;; Defined at:
  1612 ;;		line 32 in file "lcd.c"
  1613 ;; Parameters:    Size  Location     Type
  1614 ;;  lvl             1    wreg     unsigned char 
  1615 ;; Auto vars:     Size  Location     Type
  1616 ;;  lvl             1  111[BANK0 ] unsigned char 
  1617 ;;  integ           1  110[BANK0 ] unsigned char 
  1618 ;;  decim           1  109[BANK0 ] unsigned char 
  1619 ;; Return value:  Size  Location     Type
  1620 ;;                  1    wreg      void 
  1621 ;; Registers used:
  1622 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1623 ;; Tracked objects:
  1624 ;;		On entry : 0/0
  1625 ;;		On exit  : 0/0
  1626 ;;		Unchanged: 0/0
  1627 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1628 ;;      Params:         0       0       0       0       0       0       0
  1629 ;;      Locals:         0       3       0       0       0       0       0
  1630 ;;      Temps:          0       0       0       0       0       0       0
  1631 ;;      Totals:         0       3       0       0       0       0       0
  1632 ;;Total ram usage:        3 bytes
  1633 ;; Hardware stack levels used:    1
  1634 ;; Hardware stack levels required when called:   18
  1635 ;; This function calls:
  1636 ;;		_BusyXLCD
  1637 ;;		_SetDDRamAddr
  1638 ;;		_WriteDataXLCD
  1639 ;;		___lwdiv
  1640 ;;		___lwmod
  1641 ;;		_putsXLCD
  1642 ;;		_sprintf
  1643 ;; This function is called by:
  1644 ;;		_vumeter
  1645 ;; This function uses a non-reentrant model
  1646 ;;
  1647                           
  1648                           	psect	text2
  1649  001FB2                     __ptext2:
  1650                           	opt callstack 0
  1651  001FB2                     _lcdVumeter:
  1652                           	opt callstack 0
  1653  001FB2  FFFF               	dw	65535	; assembler added errata NOP
  1654                           
  1655                           ;incstack = 0
  1656                           ;lcdVumeter@lvl stored from wreg
  1657  001FB4  0100               	movlb	0	; () banked
  1658  001FB6  6FEF               	movwf	lcdVumeter@lvl& (0+255),b
  1659                           
  1660                           ;lcd.c: 33:     unsigned char decim = frequency % 10;
  1661  001FB8  C0FA  F080         	movff	_frequency,___lwmod@dividend
  1662  001FBC  C0FB  F081         	movff	_frequency+1,___lwmod@dividend+1
  1663  001FC0  0E00               	movlw	0
  1664  001FC2  0100               	movlb	0	; () banked
  1665  001FC4  6F83               	movwf	(___lwmod@divisor+1)& (0+255),b
  1666  001FC6  0E0A               	movlw	10
  1667  001FC8  6F82               	movwf	___lwmod@divisor& (0+255),b
  1668  001FCA  ECDE  F012         	call	___lwmod	;wreg free
  1669  001FCE  0100               	movlb	0	; () banked
  1670  001FD0  5180               	movf	?___lwmod& (0+255),w,b
  1671  001FD2  6FED               	movwf	lcdVumeter@decim& (0+255),b
  1672                           
  1673                           ;lcd.c: 34:     unsigned char integ = frequency / 10;
  1674  001FD4  C0FA  F080         	movff	_frequency,___lwdiv@dividend
  1675  001FD8  C0FB  F081         	movff	_frequency+1,___lwdiv@dividend+1
  1676  001FDC  0E00               	movlw	0
  1677  001FDE  6F83               	movwf	(___lwdiv@divisor+1)& (0+255),b
  1678  001FE0  0E0A               	movlw	10
  1679  001FE2  6F82               	movwf	___lwdiv@divisor& (0+255),b
  1680  001FE4  ECF6  F011         	call	___lwdiv	;wreg free
  1681  001FE8  0100               	movlb	0	; () banked
  1682  001FEA  5180               	movf	?___lwdiv& (0+255),w,b
  1683  001FEC  6FEE               	movwf	lcdVumeter@integ& (0+255),b
  1684                           
  1685                           ; BSR set to: 0
  1686                           ;lcd.c: 36:     sprintf(lineTwo,"%3d.%d           ",integ, decim);
  1687  001FEE  0E27               	movlw	low _lineTwo
  1688  001FF0  6FDB               	movwf	sprintf@s& (0+255),b
  1689  001FF2  0E01               	movlw	high _lineTwo
  1690  001FF4  6FDC               	movwf	(sprintf@s+1)& (0+255),b
  1691  001FF6  0E05               	movlw	low STR_5
  1692  001FF8  6FDD               	movwf	sprintf@fmt& (0+255),b
  1693  001FFA  0E06               	movlw	high STR_5
  1694  001FFC  6FDE               	movwf	(sprintf@fmt+1)& (0+255),b
  1695  001FFE  C0EE  F0DF         	movff	lcdVumeter@integ,?_sprintf+4
  1696  002002  6BE0               	clrf	(?_sprintf+5)& (0+255),b
  1697  002004  C0ED  F0E1         	movff	lcdVumeter@decim,?_sprintf+6
  1698  002008  6BE2               	clrf	(?_sprintf+7)& (0+255),b
  1699  00200A  ECB3  F012         	call	_sprintf	;wreg free
  1700                           
  1701                           ;lcd.c: 37:     SetDDRamAddr(0x40);
  1702  00200E  0E40               	movlw	64
  1703  002010  ECA6  F013         	call	_SetDDRamAddr
  1704                           
  1705                           ;lcd.c: 38:     putsXLCD(lineTwo);
  1706  002014  0E27               	movlw	low _lineTwo
  1707  002016  0100               	movlb	0	; () banked
  1708  002018  6F81               	movwf	putsXLCD@buffer& (0+255),b
  1709  00201A  0E01               	movlw	high _lineTwo
  1710  00201C  6F82               	movwf	(putsXLCD@buffer+1)& (0+255),b
  1711  00201E  EC1C  F015         	call	_putsXLCD	;wreg free
  1712                           
  1713                           ;lcd.c: 39:     SetDDRamAddr(0x47);
  1714  002022  0E47               	movlw	71
  1715  002024  ECA6  F013         	call	_SetDDRamAddr
  1716  002028                     l3997:
  1717  002028  FFFF               	dw	65535	; assembler added errata NOP
  1718  00202A  0100               	movlb	0	; () banked
  1719  00202C  51EF               	movf	lcdVumeter@lvl& (0+255),w,b
  1720  00202E  B4D8               	btfsc	status,2,c
  1721  002030  D00C               	goto	l509
  1722                           
  1723                           ; BSR set to: 0
  1724                           ;lcd.c: 41:         WriteDataXLCD(0xFF);
  1725  002032  0EFF               	movlw	255
  1726  002034  ECCB  F013         	call	_WriteDataXLCD
  1727  002038                     l4003:
  1728  002038  FFFF               	dw	65535	; assembler added errata NOP
  1729  00203A  EC29  F016         	call	_BusyXLCD	;wreg free
  1730  00203E  0900               	iorlw	0
  1731  002040  A4D8               	btfss	status,2,c
  1732  002042  D7FA               	goto	l4003
  1733                           
  1734                           ;lcd.c: 43:     }
  1735  002044  0100               	movlb	0	; () banked
  1736  002046  07EF               	decf	lcdVumeter@lvl& (0+255),f,b
  1737  002048  D7EF               	goto	l3997
  1738  00204A                     l509:
  1739  00204A  FFFF               	dw	65535	; assembler added errata NOP
  1740                           
  1741                           ; BSR set to: 0
  1742  00204C  0012               	return		;funcret
  1743  00204E  FFFF               	dw	65535	; errata NOP
  1744  002050                     __end_of_lcdVumeter:
  1745                           	opt callstack 0
  1746                           
  1747 ;; *************** function _putsXLCD *****************
  1748 ;; Defined at:
  1749 ;;		line 419 in file "lcd_pic16.c"
  1750 ;; Parameters:    Size  Location     Type
  1751 ;;  buffer          2    1[BANK0 ] PTR unsigned char 
  1752 ;;		 -> lineTwo(17), lineOne(17), 
  1753 ;; Auto vars:     Size  Location     Type
  1754 ;;		None
  1755 ;; Return value:  Size  Location     Type
  1756 ;;                  1    wreg      void 
  1757 ;; Registers used:
  1758 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1759 ;; Tracked objects:
  1760 ;;		On entry : 0/0
  1761 ;;		On exit  : 0/0
  1762 ;;		Unchanged: 0/0
  1763 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1764 ;;      Params:         0       2       0       0       0       0       0
  1765 ;;      Locals:         0       0       0       0       0       0       0
  1766 ;;      Temps:          0       0       0       0       0       0       0
  1767 ;;      Totals:         0       2       0       0       0       0       0
  1768 ;;Total ram usage:        2 bytes
  1769 ;; Hardware stack levels used:    1
  1770 ;; Hardware stack levels required when called:   12
  1771 ;; This function calls:
  1772 ;;		_BusyXLCD
  1773 ;;		_WriteDataXLCD
  1774 ;; This function is called by:
  1775 ;;		_lcdVumeter
  1776 ;; This function uses a non-reentrant model
  1777 ;;
  1778                           
  1779                           	psect	text3
  1780  002A38                     __ptext3:
  1781                           	opt callstack 0
  1782  002A38                     _putsXLCD:
  1783                           	opt callstack 0
  1784  002A38  FFFF               	dw	65535	; assembler added errata NOP
  1785                           
  1786                           ;lcd_pic16.c: 419: void putsXLCD(char *buffer);lcd_pic16.c: 420: {;lcd_pic16.c: 421:    
      +                               while(*buffer)
  1787                           
  1788                           ; BSR set to: 0
  1789                           ;incstack = 0
  1790  002A3A  D010               	goto	l3797
  1791  002A3C                     l3791:
  1792  002A3C  FFFF               	dw	65535	; assembler added errata NOP
  1793  002A3E  EC29  F016         	call	_BusyXLCD	;wreg free
  1794  002A42  0900               	iorlw	0
  1795  002A44  A4D8               	btfss	status,2,c
  1796  002A46  D7FA               	goto	l3791
  1797                           
  1798                           ;lcd_pic16.c: 424:                 WriteDataXLCD(*buffer);
  1799  002A48  C081  FFD9         	movff	putsXLCD@buffer,fsr2l
  1800  002A4C  C082  FFDA         	movff	putsXLCD@buffer+1,fsr2h
  1801  002A50  50DF               	movf	indf2,w,c
  1802  002A52  ECCB  F013         	call	_WriteDataXLCD
  1803                           
  1804                           ;lcd_pic16.c: 425:                 buffer++;
  1805  002A56  0100               	movlb	0	; () banked
  1806  002A58  4B81               	infsnz	putsXLCD@buffer& (0+255),f,b
  1807  002A5A  2B82               	incf	(putsXLCD@buffer+1)& (0+255),f,b
  1808  002A5C                     l3797:
  1809  002A5C  FFFF               	dw	65535	; assembler added errata NOP
  1810                           
  1811                           ;lcd_pic16.c: 421:         while(*buffer)
  1812  002A5E  C081  FFD9         	movff	putsXLCD@buffer,fsr2l
  1813  002A62  C082  FFDA         	movff	putsXLCD@buffer+1,fsr2h
  1814  002A66  50DF               	movf	indf2,w,c
  1815  002A68  B4D8               	btfsc	status,2,c
  1816  002A6A  0012               	return		;funcret
  1817  002A6C  FFFF               	dw	65535	; assembler added errata NOP
  1818  002A6E  D7E6               	goto	l3791
  1819  002A70  FFFF               	dw	65535	; errata NOP
  1820  002A72                     __end_of_putsXLCD:
  1821                           	opt callstack 0
  1822                           
  1823 ;; *************** function _WriteDataXLCD *****************
  1824 ;; Defined at:
  1825 ;;		line 110 in file "lcd_pic16.c"
  1826 ;; Parameters:    Size  Location     Type
  1827 ;;  data            1    wreg     unsigned char 
  1828 ;; Auto vars:     Size  Location     Type
  1829 ;;  data            1    0[BANK0 ] unsigned char 
  1830 ;; Return value:  Size  Location     Type
  1831 ;;                  1    wreg      void 
  1832 ;; Registers used:
  1833 ;;		wreg, status,2, status,0, cstack
  1834 ;; Tracked objects:
  1835 ;;		On entry : 0/0
  1836 ;;		On exit  : 0/0
  1837 ;;		Unchanged: 0/0
  1838 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1839 ;;      Params:         0       0       0       0       0       0       0
  1840 ;;      Locals:         0       1       0       0       0       0       0
  1841 ;;      Temps:          0       0       0       0       0       0       0
  1842 ;;      Totals:         0       1       0       0       0       0       0
  1843 ;;Total ram usage:        1 bytes
  1844 ;; Hardware stack levels used:    1
  1845 ;; Hardware stack levels required when called:   11
  1846 ;; This function calls:
  1847 ;;		_DelayFor18TCY
  1848 ;; This function is called by:
  1849 ;;		_putsXLCD
  1850 ;;		_lcdVumeter
  1851 ;;		_putrsXLCD
  1852 ;; This function uses a non-reentrant model
  1853 ;;
  1854                           
  1855                           	psect	text4
  1856  002796                     __ptext4:
  1857                           	opt callstack 0
  1858  002796                     _WriteDataXLCD:
  1859                           	opt callstack 0
  1860  002796  FFFF               	dw	65535	; assembler added errata NOP
  1861                           
  1862                           ;incstack = 0
  1863                           ;WriteDataXLCD@data stored from wreg
  1864  002798  0100               	movlb	0	; () banked
  1865  00279A  6F80               	movwf	WriteDataXLCD@data& (0+255),b
  1866                           
  1867                           ;lcd_pic16.c: 110: void WriteDataXLCD(char data);lcd_pic16.c: 111: {;lcd_pic16.c: 125:  
      +                                 TRISD &= 0x0f;
  1868  00279C  0E0F               	movlw	15
  1869  00279E  1695               	andwf	3989,f,c	;volatile
  1870                           
  1871                           ;lcd_pic16.c: 126:         PORTD &= 0x0f;
  1872  0027A0  0E0F               	movlw	15
  1873  0027A2  1683               	andwf	3971,f,c	;volatile
  1874                           
  1875                           ;lcd_pic16.c: 127:         PORTD |= data&0xf0;
  1876  0027A4  0100               	movlb	0	; () banked
  1877  0027A6  5180               	movf	WriteDataXLCD@data& (0+255),w,b
  1878  0027A8  0BF0               	andlw	240
  1879  0027AA  1283               	iorwf	3971,f,c	;volatile
  1880                           
  1881                           ; BSR set to: 0
  1882                           ;lcd_pic16.c: 133:         PORTDbits.RD3 = 1;
  1883  0027AC  8683               	bsf	3971,3,c	;volatile
  1884                           
  1885                           ; BSR set to: 0
  1886                           ;lcd_pic16.c: 134:         PORTDbits.RD2 = 0;
  1887  0027AE  9483               	bcf	3971,2,c	;volatile
  1888                           
  1889                           ; BSR set to: 0
  1890                           ;lcd_pic16.c: 135:         DelayFor18TCY();
  1891  0027B0  EC6B  F016         	call	_DelayFor18TCY	;wreg free
  1892                           
  1893                           ;lcd_pic16.c: 136:         PORTDbits.RD1 = 1;
  1894  0027B4  8283               	bsf	3971,1,c	;volatile
  1895                           
  1896                           ;lcd_pic16.c: 137:         DelayFor18TCY();
  1897  0027B6  EC6B  F016         	call	_DelayFor18TCY	;wreg free
  1898                           
  1899                           ;lcd_pic16.c: 138:         PORTDbits.RD1 = 0;
  1900  0027BA  9283               	bcf	3971,1,c	;volatile
  1901                           
  1902                           ;lcd_pic16.c: 140:         PORTD &= 0x0f;
  1903  0027BC  0E0F               	movlw	15
  1904  0027BE  1683               	andwf	3971,f,c	;volatile
  1905                           
  1906                           ;lcd_pic16.c: 141:         PORTD |= ((data<<4)&0xf0);
  1907  0027C0  0100               	movlb	0	; () banked
  1908  0027C2  3980               	swapf	WriteDataXLCD@data& (0+255),w,b
  1909  0027C4  0BF0               	andlw	240
  1910  0027C6  0BF0               	andlw	240
  1911  0027C8  1283               	iorwf	3971,f,c	;volatile
  1912                           
  1913                           ; BSR set to: 0
  1914                           ;lcd_pic16.c: 146:         DelayFor18TCY();
  1915  0027CA  EC6B  F016         	call	_DelayFor18TCY	;wreg free
  1916                           
  1917                           ;lcd_pic16.c: 147:         PORTDbits.RD1 = 1;
  1918  0027CE  8283               	bsf	3971,1,c	;volatile
  1919                           
  1920                           ;lcd_pic16.c: 148:         DelayFor18TCY();
  1921  0027D0  EC6B  F016         	call	_DelayFor18TCY	;wreg free
  1922                           
  1923                           ;lcd_pic16.c: 149:         PORTDbits.RD1 = 0;
  1924  0027D4  9283               	bcf	3971,1,c	;volatile
  1925                           
  1926                           ;lcd_pic16.c: 151:         TRISD |= 0xf0;
  1927  0027D6  0EF0               	movlw	240
  1928  0027D8  1295               	iorwf	3989,f,c	;volatile
  1929  0027DA  0012               	return		;funcret
  1930  0027DC  FFFF               	dw	65535	; errata NOP
  1931  0027DE                     __end_of_WriteDataXLCD:
  1932                           	opt callstack 0
  1933                           
  1934 ;; *************** function ___lwmod *****************
  1935 ;; Defined at:
  1936 ;;		line 7 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/lwmod.c"
  1937 ;; Parameters:    Size  Location     Type
  1938 ;;  dividend        2    0[BANK0 ] unsigned int 
  1939 ;;  divisor         2    2[BANK0 ] unsigned int 
  1940 ;; Auto vars:     Size  Location     Type
  1941 ;;  counter         1    4[BANK0 ] unsigned char 
  1942 ;; Return value:  Size  Location     Type
  1943 ;;                  2    0[BANK0 ] unsigned int 
  1944 ;; Registers used:
  1945 ;;		wreg, status,2, status,0
  1946 ;; Tracked objects:
  1947 ;;		On entry : 0/0
  1948 ;;		On exit  : 0/0
  1949 ;;		Unchanged: 0/0
  1950 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1951 ;;      Params:         0       4       0       0       0       0       0
  1952 ;;      Locals:         0       1       0       0       0       0       0
  1953 ;;      Temps:          0       0       0       0       0       0       0
  1954 ;;      Totals:         0       5       0       0       0       0       0
  1955 ;;Total ram usage:        5 bytes
  1956 ;; Hardware stack levels used:    1
  1957 ;; Hardware stack levels required when called:   10
  1958 ;; This function calls:
  1959 ;;		Nothing
  1960 ;; This function is called by:
  1961 ;;		_lcdVumeter
  1962 ;; This function uses a non-reentrant model
  1963 ;;
  1964                           
  1965                           	psect	text5
  1966  0025BC                     __ptext5:
  1967                           	opt callstack 0
  1968  0025BC                     ___lwmod:
  1969                           	opt callstack 0
  1970  0025BC  FFFF               	dw	65535	; assembler added errata NOP
  1971                           
  1972                           ;incstack = 0
  1973  0025BE  0100               	movlb	0	; () banked
  1974  0025C0  5182               	movf	___lwmod@divisor& (0+255),w,b
  1975  0025C2  1183               	iorwf	(___lwmod@divisor+1)& (0+255),w,b
  1976  0025C4  B4D8               	btfsc	status,2,c
  1977  0025C6  D01C               	goto	l1159
  1978                           
  1979                           ; BSR set to: 0
  1980  0025C8  0E01               	movlw	1
  1981  0025CA  6F84               	movwf	___lwmod@counter& (0+255),b
  1982  0025CC  D005               	goto	l3841
  1983  0025CE                     l3839:
  1984  0025CE  FFFF               	dw	65535	; assembler added errata NOP
  1985                           
  1986                           ; BSR set to: 0
  1987  0025D0  90D8               	bcf	status,0,c
  1988  0025D2  3782               	rlcf	___lwmod@divisor& (0+255),f,b
  1989  0025D4  3783               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
  1990  0025D6  2B84               	incf	___lwmod@counter& (0+255),f,b
  1991  0025D8                     l3841:
  1992  0025D8  FFFF               	dw	65535	; assembler added errata NOP
  1993                           
  1994                           ; BSR set to: 0
  1995  0025DA  AF83               	btfss	(___lwmod@divisor+1)& (0+255),7,b
  1996  0025DC  D7F8               	goto	l3839
  1997  0025DE                     u3360:
  1998  0025DE  FFFF               	dw	65535	; assembler added errata NOP
  1999                           
  2000                           ; BSR set to: 0
  2001  0025E0  5182               	movf	___lwmod@divisor& (0+255),w,b
  2002  0025E2  5D80               	subwf	___lwmod@dividend& (0+255),w,b
  2003  0025E4  5183               	movf	(___lwmod@divisor+1)& (0+255),w,b
  2004  0025E6  5981               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
  2005  0025E8  A0D8               	btfss	status,0,c
  2006  0025EA  D004               	goto	l3847
  2007                           
  2008                           ; BSR set to: 0
  2009  0025EC  5182               	movf	___lwmod@divisor& (0+255),w,b
  2010  0025EE  5F80               	subwf	___lwmod@dividend& (0+255),f,b
  2011  0025F0  5183               	movf	(___lwmod@divisor+1)& (0+255),w,b
  2012  0025F2  5B81               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
  2013  0025F4                     l3847:
  2014  0025F4  FFFF               	dw	65535	; assembler added errata NOP
  2015                           
  2016                           ; BSR set to: 0
  2017  0025F6  90D8               	bcf	status,0,c
  2018  0025F8  3383               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
  2019  0025FA  3382               	rrcf	___lwmod@divisor& (0+255),f,b
  2020                           
  2021                           ; BSR set to: 0
  2022  0025FC  2F84               	decfsz	___lwmod@counter& (0+255),f,b
  2023  0025FE  D7EF               	goto	u3360
  2024  002600                     l1159:
  2025  002600  FFFF               	dw	65535	; assembler added errata NOP
  2026                           
  2027                           ; BSR set to: 0
  2028  002602  C080  F080         	movff	___lwmod@dividend,?___lwmod
  2029  002606  C081  F081         	movff	___lwmod@dividend+1,?___lwmod+1
  2030                           
  2031                           ; BSR set to: 0
  2032  00260A  0012               	return		;funcret
  2033  00260C  FFFF               	dw	65535	; errata NOP
  2034  00260E                     __end_of___lwmod:
  2035                           	opt callstack 0
  2036                           
  2037 ;; *************** function ___lwdiv *****************
  2038 ;; Defined at:
  2039 ;;		line 7 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/lwdiv.c"
  2040 ;; Parameters:    Size  Location     Type
  2041 ;;  dividend        2    0[BANK0 ] unsigned int 
  2042 ;;  divisor         2    2[BANK0 ] unsigned int 
  2043 ;; Auto vars:     Size  Location     Type
  2044 ;;  quotient        2    4[BANK0 ] unsigned int 
  2045 ;;  counter         1    6[BANK0 ] unsigned char 
  2046 ;; Return value:  Size  Location     Type
  2047 ;;                  2    0[BANK0 ] unsigned int 
  2048 ;; Registers used:
  2049 ;;		wreg, status,2, status,0
  2050 ;; Tracked objects:
  2051 ;;		On entry : 0/0
  2052 ;;		On exit  : 0/0
  2053 ;;		Unchanged: 0/0
  2054 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2055 ;;      Params:         0       4       0       0       0       0       0
  2056 ;;      Locals:         0       3       0       0       0       0       0
  2057 ;;      Temps:          0       0       0       0       0       0       0
  2058 ;;      Totals:         0       7       0       0       0       0       0
  2059 ;;Total ram usage:        7 bytes
  2060 ;; Hardware stack levels used:    1
  2061 ;; Hardware stack levels required when called:   10
  2062 ;; This function calls:
  2063 ;;		Nothing
  2064 ;; This function is called by:
  2065 ;;		_lcdVumeter
  2066 ;; This function uses a non-reentrant model
  2067 ;;
  2068                           
  2069                           	psect	text6
  2070  0023EC                     __ptext6:
  2071                           	opt callstack 0
  2072  0023EC                     ___lwdiv:
  2073                           	opt callstack 0
  2074  0023EC  FFFF               	dw	65535	; assembler added errata NOP
  2075                           
  2076                           ; BSR set to: 0
  2077                           ;incstack = 0
  2078  0023EE  0E00               	movlw	0
  2079  0023F0  0100               	movlb	0	; () banked
  2080  0023F2  6F85               	movwf	(___lwdiv@quotient+1)& (0+255),b
  2081  0023F4  0E00               	movlw	0
  2082  0023F6  6F84               	movwf	___lwdiv@quotient& (0+255),b
  2083                           
  2084                           ; BSR set to: 0
  2085  0023F8  5182               	movf	___lwdiv@divisor& (0+255),w,b
  2086  0023FA  1183               	iorwf	(___lwdiv@divisor+1)& (0+255),w,b
  2087  0023FC  B4D8               	btfsc	status,2,c
  2088  0023FE  D020               	goto	l1149
  2089                           
  2090                           ; BSR set to: 0
  2091  002400  0E01               	movlw	1
  2092  002402  6F86               	movwf	___lwdiv@counter& (0+255),b
  2093  002404  D005               	goto	l3821
  2094  002406                     l3819:
  2095  002406  FFFF               	dw	65535	; assembler added errata NOP
  2096                           
  2097                           ; BSR set to: 0
  2098  002408  90D8               	bcf	status,0,c
  2099  00240A  3782               	rlcf	___lwdiv@divisor& (0+255),f,b
  2100  00240C  3783               	rlcf	(___lwdiv@divisor+1)& (0+255),f,b
  2101  00240E  2B86               	incf	___lwdiv@counter& (0+255),f,b
  2102  002410                     l3821:
  2103  002410  FFFF               	dw	65535	; assembler added errata NOP
  2104                           
  2105                           ; BSR set to: 0
  2106  002412  AF83               	btfss	(___lwdiv@divisor+1)& (0+255),7,b
  2107  002414  D7F8               	goto	l3819
  2108  002416                     u3330:
  2109  002416  FFFF               	dw	65535	; assembler added errata NOP
  2110                           
  2111                           ; BSR set to: 0
  2112  002418  90D8               	bcf	status,0,c
  2113  00241A  3784               	rlcf	___lwdiv@quotient& (0+255),f,b
  2114  00241C  3785               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
  2115                           
  2116                           ; BSR set to: 0
  2117  00241E  5182               	movf	___lwdiv@divisor& (0+255),w,b
  2118  002420  5D80               	subwf	___lwdiv@dividend& (0+255),w,b
  2119  002422  5183               	movf	(___lwdiv@divisor+1)& (0+255),w,b
  2120  002424  5981               	subwfb	(___lwdiv@dividend+1)& (0+255),w,b
  2121  002426  A0D8               	btfss	status,0,c
  2122  002428  D005               	goto	l3831
  2123                           
  2124                           ; BSR set to: 0
  2125  00242A  5182               	movf	___lwdiv@divisor& (0+255),w,b
  2126  00242C  5F80               	subwf	___lwdiv@dividend& (0+255),f,b
  2127  00242E  5183               	movf	(___lwdiv@divisor+1)& (0+255),w,b
  2128  002430  5B81               	subwfb	(___lwdiv@dividend+1)& (0+255),f,b
  2129                           
  2130                           ; BSR set to: 0
  2131  002432  8184               	bsf	___lwdiv@quotient& (0+255),0,b
  2132  002434                     l3831:
  2133  002434  FFFF               	dw	65535	; assembler added errata NOP
  2134                           
  2135                           ; BSR set to: 0
  2136  002436  90D8               	bcf	status,0,c
  2137  002438  3383               	rrcf	(___lwdiv@divisor+1)& (0+255),f,b
  2138  00243A  3382               	rrcf	___lwdiv@divisor& (0+255),f,b
  2139                           
  2140                           ; BSR set to: 0
  2141  00243C  2F86               	decfsz	___lwdiv@counter& (0+255),f,b
  2142  00243E  D7EB               	goto	u3330
  2143  002440                     l1149:
  2144  002440  FFFF               	dw	65535	; assembler added errata NOP
  2145                           
  2146                           ; BSR set to: 0
  2147  002442  C084  F080         	movff	___lwdiv@quotient,?___lwdiv
  2148  002446  C085  F081         	movff	___lwdiv@quotient+1,?___lwdiv+1
  2149                           
  2150                           ; BSR set to: 0
  2151  00244A  0012               	return		;funcret
  2152  00244C  FFFF               	dw	65535	; errata NOP
  2153  00244E                     __end_of___lwdiv:
  2154                           	opt callstack 0
  2155                           
  2156 ;; *************** function _setFrequency *****************
  2157 ;; Defined at:
  2158 ;;		line 158 in file "main.c"
  2159 ;; Parameters:    Size  Location     Type
  2160 ;;		None
  2161 ;; Auto vars:     Size  Location     Type
  2162 ;;		None
  2163 ;; Return value:  Size  Location     Type
  2164 ;;                  1    wreg      void 
  2165 ;; Registers used:
  2166 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2167 ;; Tracked objects:
  2168 ;;		On entry : 0/0
  2169 ;;		On exit  : 0/0
  2170 ;;		Unchanged: 0/0
  2171 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2172 ;;      Params:         0       0       0       0       0       0       0
  2173 ;;      Locals:         0       0       0       0       0       0       0
  2174 ;;      Temps:          0       2       0       0       0       0       0
  2175 ;;      Totals:         0       2       0       0       0       0       0
  2176 ;;Total ram usage:        2 bytes
  2177 ;; Hardware stack levels used:    1
  2178 ;; Hardware stack levels required when called:   18
  2179 ;; This function calls:
  2180 ;;		_beep
  2181 ;;		_setData
  2182 ;;		_sprintf
  2183 ;;		_writeFrequency
  2184 ;; This function is called by:
  2185 ;;		_main
  2186 ;; This function uses a non-reentrant model
  2187 ;;
  2188                           
  2189                           	psect	text7
  2190  00103A                     __ptext7:
  2191                           	opt callstack 0
  2192  00103A                     _setFrequency:
  2193                           	opt callstack 0
  2194  00103A  FFFF               	dw	65535	; assembler added errata NOP
  2195                           
  2196                           ;main.c: 159:     isOnConfig = 1;
  2197                           
  2198                           ; BSR set to: 0
  2199                           ;incstack = 0
  2200  00103C  0E01               	movlw	1
  2201  00103E  0101               	movlb	1	; () banked
  2202  001040  6F03               	movwf	_isOnConfig& (0+255),b
  2203                           
  2204                           ; BSR set to: 1
  2205                           ;main.c: 160:     sprintf(lineOne,"Seleccione Fcia.");
  2206  001042  0E38               	movlw	low _lineOne
  2207  001044  0100               	movlb	0	; () banked
  2208  001046  6FDB               	movwf	sprintf@s& (0+255),b
  2209  001048  0E01               	movlw	high _lineOne
  2210  00104A  6FDC               	movwf	(sprintf@s+1)& (0+255),b
  2211  00104C  0E39               	movlw	low STR_3
  2212  00104E  6FDD               	movwf	sprintf@fmt& (0+255),b
  2213  001050  0E06               	movlw	high STR_3
  2214  001052  6FDE               	movwf	(sprintf@fmt+1)& (0+255),b
  2215  001054  ECB3  F012         	call	_sprintf	;wreg free
  2216                           
  2217                           ;main.c: 161:     beep(200);
  2218  001058  0E00               	movlw	0
  2219  00105A  0100               	movlb	0	; () banked
  2220  00105C  6F87               	movwf	(beep@ms+1)& (0+255),b
  2221  00105E  0EC8               	movlw	200
  2222  001060  6F86               	movwf	beep@ms& (0+255),b
  2223  001062  EC87  F012         	call	_beep	;wreg free
  2224  001066                     l264:
  2225  001066  FFFF               	dw	65535	; assembler added errata NOP
  2226  001068  A082               	btfss	3970,0,c	;volatile
  2227  00106A  D7FD               	goto	l264
  2228  00106C                     u3590:
  2229  00106C  FFFF               	dw	65535	; assembler added errata NOP
  2230                           
  2231                           ;main.c: 165:         if(!PORTCbits.RC1){
  2232                           
  2233                           ;main.c: 164:     while(1){
  2234  00106E  B282               	btfsc	3970,1,c	;volatile
  2235  001070  D051               	goto	u3650
  2236                           
  2237                           ;main.c: 166:             if(frequency < 1080)frequency++;
  2238  001072  0E38               	movlw	56
  2239  001074  0100               	movlb	0	; () banked
  2240  001076  5DFA               	subwf	_frequency& (0+255),w,b
  2241  001078  0E04               	movlw	4
  2242  00107A  59FB               	subwfb	(_frequency+1)& (0+255),w,b
  2243  00107C  B0D8               	btfsc	status,0,c
  2244  00107E  D002               	goto	l4149
  2245                           
  2246                           ; BSR set to: 0
  2247  001080  4BFA               	infsnz	_frequency& (0+255),f,b
  2248  001082  2BFB               	incf	(_frequency+1)& (0+255),f,b
  2249  001084                     l4149:
  2250  001084  FFFF               	dw	65535	; assembler added errata NOP
  2251                           
  2252                           ; BSR set to: 0
  2253                           ;main.c: 167:             if(frequency > 1080)frequency = 1080;
  2254  001086  0E39               	movlw	57
  2255  001088  5DFA               	subwf	_frequency& (0+255),w,b
  2256  00108A  0E04               	movlw	4
  2257  00108C  59FB               	subwfb	(_frequency+1)& (0+255),w,b
  2258  00108E  A0D8               	btfss	status,0,c
  2259  001090  D004               	goto	l4153
  2260                           
  2261                           ; BSR set to: 0
  2262  001092  0E04               	movlw	4
  2263  001094  6FFB               	movwf	(_frequency+1)& (0+255),b
  2264  001096  0E38               	movlw	56
  2265  001098  6FFA               	movwf	_frequency& (0+255),b
  2266  00109A                     l4153:
  2267  00109A  FFFF               	dw	65535	; assembler added errata NOP
  2268                           
  2269                           ; BSR set to: 0
  2270                           ;main.c: 168:             beep(100);
  2271  00109C  0E00               	movlw	0
  2272  00109E  6F87               	movwf	(beep@ms+1)& (0+255),b
  2273  0010A0  0E64               	movlw	100
  2274  0010A2  6F86               	movwf	beep@ms& (0+255),b
  2275  0010A4  EC87  F012         	call	_beep	;wreg free
  2276                           
  2277                           ;main.c: 169:             _delay((unsigned long)((500)*(12000000/4000.0)));
  2278  0010A8  0E06               	movlw	6
  2279  0010AA  0100               	movlb	0	; () banked
  2280  0010AC  6FEE               	movwf	(??_setFrequency+1)& (0+255),b
  2281  0010AE  0EB6               	movlw	182
  2282  0010B0  6FED               	movwf	??_setFrequency& (0+255),b
  2283  0010B2  0EF8               	movlw	248
  2284  0010B4                     u4047:
  2285  0010B4  FFFF               	dw	65535	; errata NOP
  2286  0010B6  2EE8               	decfsz	wreg,f,c
  2287  0010B8  D7FD               	bra	u4047
  2288  0010BA  2FED               	decfsz	??_setFrequency& (0+255),f,b
  2289  0010BC  D7FB               	bra	u4047
  2290  0010BE  2FEE               	decfsz	(??_setFrequency+1)& (0+255),f,b
  2291  0010C0  D7F9               	bra	u4047
  2292  0010C2  D000               	nop2	
  2293  0010C4  D023               	goto	L8
  2294  0010C6                     l4157:
  2295  0010C6  FFFF               	dw	65535	; assembler added errata NOP
  2296                           
  2297                           ;main.c: 171:                 if(frequency < 1080)frequency++;
  2298  0010C8  0E38               	movlw	56
  2299  0010CA  0100               	movlb	0	; () banked
  2300  0010CC  5DFA               	subwf	_frequency& (0+255),w,b
  2301  0010CE  0E04               	movlw	4
  2302  0010D0  59FB               	subwfb	(_frequency+1)& (0+255),w,b
  2303  0010D2  B0D8               	btfsc	status,0,c
  2304  0010D4  D002               	goto	l4161
  2305                           
  2306                           ; BSR set to: 0
  2307  0010D6  4BFA               	infsnz	_frequency& (0+255),f,b
  2308  0010D8  2BFB               	incf	(_frequency+1)& (0+255),f,b
  2309  0010DA                     l4161:
  2310  0010DA  FFFF               	dw	65535	; assembler added errata NOP
  2311                           
  2312                           ; BSR set to: 0
  2313                           ;main.c: 172:                 if(frequency > 1080)frequency = 1080;
  2314  0010DC  0E39               	movlw	57
  2315  0010DE  5DFA               	subwf	_frequency& (0+255),w,b
  2316  0010E0  0E04               	movlw	4
  2317  0010E2  59FB               	subwfb	(_frequency+1)& (0+255),w,b
  2318  0010E4  A0D8               	btfss	status,0,c
  2319  0010E6  D004               	goto	l4165
  2320                           
  2321                           ; BSR set to: 0
  2322  0010E8  0E04               	movlw	4
  2323  0010EA  6FFB               	movwf	(_frequency+1)& (0+255),b
  2324  0010EC  0E38               	movlw	56
  2325  0010EE  6FFA               	movwf	_frequency& (0+255),b
  2326  0010F0                     l4165:
  2327  0010F0  FFFF               	dw	65535	; assembler added errata NOP
  2328                           
  2329                           ; BSR set to: 0
  2330                           ;main.c: 173:                 _delay((unsigned long)((100)*(12000000/4000.0)));
  2331  0010F2  0E02               	movlw	2
  2332  0010F4  0100               	movlb	0	; () banked
  2333  0010F6  6FEE               	movwf	(??_setFrequency+1)& (0+255),b
  2334  0010F8  0E25               	movlw	37
  2335  0010FA  6FED               	movwf	??_setFrequency& (0+255),b
  2336  0010FC  0E63               	movlw	99
  2337  0010FE                     u4057:
  2338  0010FE  FFFF               	dw	65535	; errata NOP
  2339  001100  2EE8               	decfsz	wreg,f,c
  2340  001102  D7FD               	bra	u4057
  2341  001104  2FED               	decfsz	??_setFrequency& (0+255),f,b
  2342  001106  D7FB               	bra	u4057
  2343  001108  2FEE               	decfsz	(??_setFrequency+1)& (0+255),f,b
  2344  00110A  D7F9               	bra	u4057
  2345  00110C                     L8:
  2346  00110C  FFFF               	dw	65535	; assembler added errata NOP
  2347  00110E  F000               	nop	
  2348                           
  2349                           ;main.c: 170:             while(!PORTCbits.RC1){
  2350  001110  A282               	btfss	3970,1,c	;volatile
  2351  001112  D7D9               	goto	l4157
  2352  001114                     u3650:
  2353  001114  FFFF               	dw	65535	; assembler added errata NOP
  2354                           
  2355                           ;main.c: 177:         if(!PORTCbits.RC2){
  2356                           
  2357                           ;main.c: 175:         }
  2358  001116  B482               	btfsc	3970,2,c	;volatile
  2359  001118  D053               	goto	u3710
  2360                           
  2361                           ;main.c: 178:             if(frequency > 880)frequency--;
  2362  00111A  0E71               	movlw	113
  2363  00111C  0100               	movlb	0	; () banked
  2364  00111E  5DFA               	subwf	_frequency& (0+255),w,b
  2365  001120  0E03               	movlw	3
  2366  001122  59FB               	subwfb	(_frequency+1)& (0+255),w,b
  2367  001124  A0D8               	btfss	status,0,c
  2368  001126  D003               	goto	l4173
  2369                           
  2370                           ; BSR set to: 0
  2371  001128  07FA               	decf	_frequency& (0+255),f,b
  2372  00112A  A0D8               	btfss	status,0,c
  2373  00112C  07FB               	decf	(_frequency+1)& (0+255),f,b
  2374  00112E                     l4173:
  2375  00112E  FFFF               	dw	65535	; assembler added errata NOP
  2376                           
  2377                           ; BSR set to: 0
  2378                           ;main.c: 179:             if(frequency < 880)frequency = 880;
  2379  001130  0E70               	movlw	112
  2380  001132  5DFA               	subwf	_frequency& (0+255),w,b
  2381  001134  0E03               	movlw	3
  2382  001136  59FB               	subwfb	(_frequency+1)& (0+255),w,b
  2383  001138  B0D8               	btfsc	status,0,c
  2384  00113A  D004               	goto	l4177
  2385                           
  2386                           ; BSR set to: 0
  2387  00113C  0E03               	movlw	3
  2388  00113E  6FFB               	movwf	(_frequency+1)& (0+255),b
  2389  001140  0E70               	movlw	112
  2390  001142  6FFA               	movwf	_frequency& (0+255),b
  2391  001144                     l4177:
  2392  001144  FFFF               	dw	65535	; assembler added errata NOP
  2393                           
  2394                           ; BSR set to: 0
  2395                           ;main.c: 180:             beep(100);
  2396  001146  0E00               	movlw	0
  2397  001148  6F87               	movwf	(beep@ms+1)& (0+255),b
  2398  00114A  0E64               	movlw	100
  2399  00114C  6F86               	movwf	beep@ms& (0+255),b
  2400  00114E  EC87  F012         	call	_beep	;wreg free
  2401                           
  2402                           ;main.c: 181:             _delay((unsigned long)((500)*(12000000/4000.0)));
  2403  001152  0E06               	movlw	6
  2404  001154  0100               	movlb	0	; () banked
  2405  001156  6FEE               	movwf	(??_setFrequency+1)& (0+255),b
  2406  001158  0EB6               	movlw	182
  2407  00115A  6FED               	movwf	??_setFrequency& (0+255),b
  2408  00115C  0EF8               	movlw	248
  2409  00115E                     u4067:
  2410  00115E  FFFF               	dw	65535	; errata NOP
  2411  001160  2EE8               	decfsz	wreg,f,c
  2412  001162  D7FD               	bra	u4067
  2413  001164  2FED               	decfsz	??_setFrequency& (0+255),f,b
  2414  001166  D7FB               	bra	u4067
  2415  001168  2FEE               	decfsz	(??_setFrequency+1)& (0+255),f,b
  2416  00116A  D7F9               	bra	u4067
  2417  00116C  D000               	nop2	
  2418  00116E  D024               	goto	L9
  2419  001170                     l4181:
  2420  001170  FFFF               	dw	65535	; assembler added errata NOP
  2421                           
  2422                           ;main.c: 183:                 if(frequency > 880)frequency--;
  2423  001172  0E71               	movlw	113
  2424  001174  0100               	movlb	0	; () banked
  2425  001176  5DFA               	subwf	_frequency& (0+255),w,b
  2426  001178  0E03               	movlw	3
  2427  00117A  59FB               	subwfb	(_frequency+1)& (0+255),w,b
  2428  00117C  A0D8               	btfss	status,0,c
  2429  00117E  D003               	goto	l4185
  2430                           
  2431                           ; BSR set to: 0
  2432  001180  07FA               	decf	_frequency& (0+255),f,b
  2433  001182  A0D8               	btfss	status,0,c
  2434  001184  07FB               	decf	(_frequency+1)& (0+255),f,b
  2435  001186                     l4185:
  2436  001186  FFFF               	dw	65535	; assembler added errata NOP
  2437                           
  2438                           ; BSR set to: 0
  2439                           ;main.c: 184:                 if(frequency < 880)frequency = 880;
  2440  001188  0E70               	movlw	112
  2441  00118A  5DFA               	subwf	_frequency& (0+255),w,b
  2442  00118C  0E03               	movlw	3
  2443  00118E  59FB               	subwfb	(_frequency+1)& (0+255),w,b
  2444  001190  B0D8               	btfsc	status,0,c
  2445  001192  D004               	goto	l4189
  2446                           
  2447                           ; BSR set to: 0
  2448  001194  0E03               	movlw	3
  2449  001196  6FFB               	movwf	(_frequency+1)& (0+255),b
  2450  001198  0E70               	movlw	112
  2451  00119A  6FFA               	movwf	_frequency& (0+255),b
  2452  00119C                     l4189:
  2453  00119C  FFFF               	dw	65535	; assembler added errata NOP
  2454                           
  2455                           ; BSR set to: 0
  2456                           ;main.c: 185:                 _delay((unsigned long)((100)*(12000000/4000.0)));
  2457  00119E  0E02               	movlw	2
  2458  0011A0  0100               	movlb	0	; () banked
  2459  0011A2  6FEE               	movwf	(??_setFrequency+1)& (0+255),b
  2460  0011A4  0E25               	movlw	37
  2461  0011A6  6FED               	movwf	??_setFrequency& (0+255),b
  2462  0011A8  0E63               	movlw	99
  2463  0011AA                     u4077:
  2464  0011AA  FFFF               	dw	65535	; errata NOP
  2465  0011AC  2EE8               	decfsz	wreg,f,c
  2466  0011AE  D7FD               	bra	u4077
  2467  0011B0  2FED               	decfsz	??_setFrequency& (0+255),f,b
  2468  0011B2  D7FB               	bra	u4077
  2469  0011B4  2FEE               	decfsz	(??_setFrequency+1)& (0+255),f,b
  2470  0011B6  D7F9               	bra	u4077
  2471  0011B8                     L9:
  2472  0011B8  FFFF               	dw	65535	; assembler added errata NOP
  2473  0011BA  F000               	nop	
  2474                           
  2475                           ;main.c: 182:             while(!PORTCbits.RC2){
  2476  0011BC  A482               	btfss	3970,2,c	;volatile
  2477  0011BE  D7D8               	goto	l4181
  2478  0011C0                     u3710:
  2479  0011C0  FFFF               	dw	65535	; assembler added errata NOP
  2480                           
  2481                           ;main.c: 189:         if(!PORTCbits.RC0){
  2482                           
  2483                           ;main.c: 187:         }
  2484  0011C2  B082               	btfsc	3970,0,c	;volatile
  2485  0011C4  D753               	goto	u3590
  2486                           
  2487                           ;main.c: 190:             _delay((unsigned long)((500)*(12000000/4000.0)));
  2488  0011C6  0E06               	movlw	6
  2489  0011C8  0100               	movlb	0	; () banked
  2490  0011CA  6FEE               	movwf	(??_setFrequency+1)& (0+255),b
  2491  0011CC  0EB6               	movlw	182
  2492  0011CE  6FED               	movwf	??_setFrequency& (0+255),b
  2493  0011D0  0EF8               	movlw	248
  2494  0011D2                     u4087:
  2495  0011D2  FFFF               	dw	65535	; errata NOP
  2496  0011D4  2EE8               	decfsz	wreg,f,c
  2497  0011D6  D7FD               	bra	u4087
  2498  0011D8  2FED               	decfsz	??_setFrequency& (0+255),f,b
  2499  0011DA  D7FB               	bra	u4087
  2500  0011DC  2FEE               	decfsz	(??_setFrequency+1)& (0+255),f,b
  2501  0011DE  D7F9               	bra	u4087
  2502  0011E0  D000               	nop2	
  2503  0011E2  F000               	nop	
  2504                           
  2505                           ;main.c: 191:             if(!PORTCbits.RC0){
  2506  0011E4  B082               	btfsc	3970,0,c	;volatile
  2507  0011E6  D742               	goto	u3590
  2508                           
  2509                           ;main.c: 192:                 setData(1);
  2510  0011E8  0E01               	movlw	1
  2511  0011EA  ECE3  F010         	call	_setData
  2512                           
  2513                           ;main.c: 193:                 beep(1000);
  2514  0011EE  0E03               	movlw	3
  2515  0011F0  0100               	movlb	0	; () banked
  2516  0011F2  6F87               	movwf	(beep@ms+1)& (0+255),b
  2517  0011F4  0EE8               	movlw	232
  2518  0011F6  6F86               	movwf	beep@ms& (0+255),b
  2519  0011F8  EC87  F012         	call	_beep	;wreg free
  2520                           
  2521                           ;main.c: 198:     writeFrequency(frequency);
  2522                           
  2523                           ;main.c: 194:                 break;
  2524  0011FC  C0FA  F082         	movff	_frequency,writeFrequency@f
  2525  001200  C0FB  F083         	movff	_frequency+1,writeFrequency@f+1
  2526  001204  EC1D  F00E         	call	_writeFrequency	;wreg free
  2527                           
  2528                           ;main.c: 199:     isOnConfig = 0;
  2529  001208  0E00               	movlw	0
  2530  00120A  0101               	movlb	1	; () banked
  2531  00120C  6F03               	movwf	_isOnConfig& (0+255),b
  2532                           
  2533                           ; BSR set to: 1
  2534  00120E  0012               	return		;funcret
  2535  001210  FFFF               	dw	65535	; errata NOP
  2536  001212                     __end_of_setFrequency:
  2537                           	opt callstack 0
  2538                           
  2539 ;; *************** function _writeFrequency *****************
  2540 ;; Defined at:
  2541 ;;		line 15 in file "bh1514.c"
  2542 ;; Parameters:    Size  Location     Type
  2543 ;;  f               2    2[BANK0 ] unsigned int 
  2544 ;; Auto vars:     Size  Location     Type
  2545 ;;  r               2    9[BANK0 ] unsigned int 
  2546 ;;  buffer          2    7[BANK0 ] unsigned int 
  2547 ;;  i               1   11[BANK0 ] unsigned char 
  2548 ;; Return value:  Size  Location     Type
  2549 ;;                  1    wreg      void 
  2550 ;; Registers used:
  2551 ;;		wreg, status,2, status,0, cstack
  2552 ;; Tracked objects:
  2553 ;;		On entry : 0/0
  2554 ;;		On exit  : 0/0
  2555 ;;		Unchanged: 0/0
  2556 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2557 ;;      Params:         0       2       0       0       0       0       0
  2558 ;;      Locals:         0       5       0       0       0       0       0
  2559 ;;      Temps:          0       3       0       0       0       0       0
  2560 ;;      Totals:         0      10       0       0       0       0       0
  2561 ;;Total ram usage:       10 bytes
  2562 ;; Hardware stack levels used:    1
  2563 ;; Hardware stack levels required when called:   11
  2564 ;; This function calls:
  2565 ;;		_codFreq
  2566 ;; This function is called by:
  2567 ;;		_main
  2568 ;;		_setFrequency
  2569 ;; This function uses a non-reentrant model
  2570 ;;
  2571                           
  2572                           	psect	text8
  2573  001C3A                     __ptext8:
  2574                           	opt callstack 0
  2575  001C3A                     _writeFrequency:
  2576                           	opt callstack 0
  2577  001C3A  FFFF               	dw	65535	; assembler added errata NOP
  2578                           
  2579                           ;bh1514.c: 16:     unsigned int buffer;;bh1514.c: 17:     unsigned int r;;bh1514.c: 18: 
      +                              unsigned char i;;bh1514.c: 20:     buffer = codFreq(f);
  2580                           
  2581                           ; BSR set to: 1
  2582                           ;incstack = 0
  2583  001C3C  C082  F080         	movff	writeFrequency@f,codFreq@f
  2584  001C40  C083  F081         	movff	writeFrequency@f+1,codFreq@f+1
  2585  001C44  EC38  F016         	call	_codFreq	;wreg free
  2586  001C48  C080  F087         	movff	?_codFreq,writeFrequency@buffer
  2587  001C4C  C081  F088         	movff	?_codFreq+1,writeFrequency@buffer+1
  2588                           
  2589                           ;bh1514.c: 22:     PORTEbits.RE0 = 1;
  2590  001C50  8084               	bsf	3972,0,c	;volatile
  2591                           
  2592                           ;bh1514.c: 23:     _delay((unsigned long)((1)*(12000000/4000.0)));
  2593  001C52  0E03               	movlw	3
  2594  001C54  0100               	movlb	0	; () banked
  2595  001C56  6F84               	movwf	??_writeFrequency& (0+255),b
  2596  001C58  0EEB               	movlw	235
  2597  001C5A                     u4097:
  2598  001C5A  FFFF               	dw	65535	; errata NOP
  2599  001C5C  2EE8               	decfsz	wreg,f,c
  2600  001C5E  D7FD               	bra	u4097
  2601  001C60  2F84               	decfsz	??_writeFrequency& (0+255),f,b
  2602  001C62  D7FB               	bra	u4097
  2603  001C64  D000               	nop2	
  2604  001C66  F000               	nop	
  2605                           
  2606                           ;bh1514.c: 24:     for(i = 0; i < 16; i++){
  2607  001C68  0E00               	movlw	0
  2608  001C6A  0100               	movlb	0	; () banked
  2609  001C6C  6F8B               	movwf	writeFrequency@i& (0+255),b
  2610  001C6E                     l3957:
  2611  001C6E  FFFF               	dw	65535	; assembler added errata NOP
  2612                           
  2613                           ; BSR set to: 0
  2614                           ;bh1514.c: 25:         r = (buffer >> i) & 0x0001;
  2615  001C70  C08B  F084         	movff	writeFrequency@i,??_writeFrequency
  2616  001C74  C087  F085         	movff	writeFrequency@buffer,??_writeFrequency+1
  2617  001C78  C088  F086         	movff	writeFrequency@buffer+1,??_writeFrequency+2
  2618  001C7C  2B84               	incf	??_writeFrequency& (0+255),f,b
  2619  001C7E  D004               	goto	u3444
  2620  001C80                     u3445:
  2621  001C80  FFFF               	dw	65535	; assembler added errata NOP
  2622  001C82  90D8               	bcf	status,0,c
  2623  001C84  3386               	rrcf	(??_writeFrequency+2)& (0+255),f,b
  2624  001C86  3385               	rrcf	(??_writeFrequency+1)& (0+255),f,b
  2625  001C88                     u3444:
  2626  001C88  FFFF               	dw	65535	; assembler added errata NOP
  2627  001C8A  2F84               	decfsz	??_writeFrequency& (0+255),f,b
  2628  001C8C  D7F9               	goto	u3445
  2629  001C8E  0E01               	movlw	1
  2630  001C90  0100               	movlb	0	; () banked
  2631  001C92  1585               	andwf	(??_writeFrequency+1)& (0+255),w,b
  2632  001C94  6F89               	movwf	writeFrequency@r& (0+255),b
  2633  001C96  6B8A               	clrf	(writeFrequency@r+1)& (0+255),b
  2634                           
  2635                           ;bh1514.c: 26:         if(r == 1){
  2636  001C98  0589               	decf	writeFrequency@r& (0+255),w,b
  2637  001C9A  118A               	iorwf	(writeFrequency@r+1)& (0+255),w,b
  2638  001C9C  A4D8               	btfss	status,2,c
  2639  001C9E  D002               	goto	l567
  2640                           
  2641                           ; BSR set to: 0
  2642                           ;bh1514.c: 27:             PORTEbits.RE2 = 1;
  2643  001CA0  8484               	bsf	3972,2,c	;volatile
  2644                           
  2645                           ;bh1514.c: 28:         }else{
  2646  001CA2  D002               	goto	l3961
  2647  001CA4                     l567:
  2648  001CA4  FFFF               	dw	65535	; assembler added errata NOP
  2649                           
  2650                           ; BSR set to: 0
  2651                           ;bh1514.c: 29:             PORTEbits.RE2 = 0;
  2652  001CA6  9484               	bcf	3972,2,c	;volatile
  2653  001CA8                     l3961:
  2654  001CA8  FFFF               	dw	65535	; assembler added errata NOP
  2655                           
  2656                           ; BSR set to: 0
  2657                           ;bh1514.c: 31:         _delay((unsigned long)((1)*(12000000/4000.0)));
  2658  001CAA  0E03               	movlw	3
  2659  001CAC  0100               	movlb	0	; () banked
  2660  001CAE  6F84               	movwf	??_writeFrequency& (0+255),b
  2661  001CB0  0EEB               	movlw	235
  2662  001CB2                     u4107:
  2663  001CB2  FFFF               	dw	65535	; errata NOP
  2664  001CB4  2EE8               	decfsz	wreg,f,c
  2665  001CB6  D7FD               	bra	u4107
  2666  001CB8  2F84               	decfsz	??_writeFrequency& (0+255),f,b
  2667  001CBA  D7FB               	bra	u4107
  2668  001CBC  D000               	nop2	
  2669  001CBE  F000               	nop	
  2670                           
  2671                           ;bh1514.c: 32:         PORTEbits.RE1 = 1;
  2672  001CC0  8284               	bsf	3972,1,c	;volatile
  2673                           
  2674                           ;bh1514.c: 33:         _delay((unsigned long)((1)*(12000000/4000.0)));
  2675  001CC2  0E03               	movlw	3
  2676  001CC4  0100               	movlb	0	; () banked
  2677  001CC6  6F84               	movwf	??_writeFrequency& (0+255),b
  2678  001CC8  0EEB               	movlw	235
  2679  001CCA                     u4117:
  2680  001CCA  FFFF               	dw	65535	; errata NOP
  2681  001CCC  2EE8               	decfsz	wreg,f,c
  2682  001CCE  D7FD               	bra	u4117
  2683  001CD0  2F84               	decfsz	??_writeFrequency& (0+255),f,b
  2684  001CD2  D7FB               	bra	u4117
  2685  001CD4  D000               	nop2	
  2686  001CD6  F000               	nop	
  2687                           
  2688                           ;bh1514.c: 34:         PORTEbits.RE1 = 0;
  2689  001CD8  9284               	bcf	3972,1,c	;volatile
  2690                           
  2691                           ;bh1514.c: 35:     }
  2692  001CDA  0100               	movlb	0	; () banked
  2693  001CDC  2B8B               	incf	writeFrequency@i& (0+255),f,b
  2694  001CDE  0E0F               	movlw	15
  2695  001CE0  658B               	cpfsgt	writeFrequency@i& (0+255),b
  2696  001CE2  D7C5               	goto	l3957
  2697                           
  2698                           ; BSR set to: 0
  2699                           ;bh1514.c: 36:     _delay((unsigned long)((1)*(12000000/4000.0)));
  2700  001CE4  0E03               	movlw	3
  2701  001CE6  0100               	movlb	0	; () banked
  2702  001CE8  6F84               	movwf	??_writeFrequency& (0+255),b
  2703  001CEA  0EEB               	movlw	235
  2704  001CEC                     u4127:
  2705  001CEC  FFFF               	dw	65535	; errata NOP
  2706  001CEE  2EE8               	decfsz	wreg,f,c
  2707  001CF0  D7FD               	bra	u4127
  2708  001CF2  2F84               	decfsz	??_writeFrequency& (0+255),f,b
  2709  001CF4  D7FB               	bra	u4127
  2710  001CF6  D000               	nop2	
  2711  001CF8  F000               	nop	
  2712                           
  2713                           ;bh1514.c: 37:     PORTEbits.RE0 = 0;
  2714  001CFA  9084               	bcf	3972,0,c	;volatile
  2715  001CFC  0012               	return		;funcret
  2716  001CFE  FFFF               	dw	65535	; errata NOP
  2717  001D00                     __end_of_writeFrequency:
  2718                           	opt callstack 0
  2719                           
  2720 ;; *************** function _codFreq *****************
  2721 ;; Defined at:
  2722 ;;		line 6 in file "bh1514.c"
  2723 ;; Parameters:    Size  Location     Type
  2724 ;;  f               2    0[BANK0 ] unsigned int 
  2725 ;; Auto vars:     Size  Location     Type
  2726 ;;		None
  2727 ;; Return value:  Size  Location     Type
  2728 ;;                  2    0[BANK0 ] unsigned int 
  2729 ;; Registers used:
  2730 ;;		wreg, status,2, status,0
  2731 ;; Tracked objects:
  2732 ;;		On entry : 0/0
  2733 ;;		On exit  : 0/0
  2734 ;;		Unchanged: 0/0
  2735 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2736 ;;      Params:         0       2       0       0       0       0       0
  2737 ;;      Locals:         0       0       0       0       0       0       0
  2738 ;;      Temps:          0       0       0       0       0       0       0
  2739 ;;      Totals:         0       2       0       0       0       0       0
  2740 ;;Total ram usage:        2 bytes
  2741 ;; Hardware stack levels used:    1
  2742 ;; Hardware stack levels required when called:   10
  2743 ;; This function calls:
  2744 ;;		Nothing
  2745 ;; This function is called by:
  2746 ;;		_writeFrequency
  2747 ;; This function uses a non-reentrant model
  2748 ;;
  2749                           
  2750                           	psect	text9
  2751  002C70                     __ptext9:
  2752                           	opt callstack 0
  2753  002C70                     _codFreq:
  2754                           	opt callstack 0
  2755  002C70  FFFF               	dw	65535	; assembler added errata NOP
  2756                           
  2757                           ;bh1514.c: 8:         f = f | 0b0100100000000000;
  2758                           
  2759                           ;incstack = 0
  2760  002C72  0E00               	movlw	0
  2761  002C74  0100               	movlb	0	; () banked
  2762  002C76  1180               	iorwf	codFreq@f& (0+255),w,b
  2763  002C78  6F80               	movwf	codFreq@f& (0+255),b
  2764  002C7A  0E48               	movlw	72
  2765  002C7C  1181               	iorwf	(codFreq@f+1)& (0+255),w,b
  2766  002C7E  6F81               	movwf	(codFreq@f+1)& (0+255),b
  2767                           
  2768                           ; BSR set to: 0
  2769                           ;bh1514.c: 12:     return f;
  2770                           
  2771                           ;bh1514.c: 9:     }else{
  2772  002C80  C080  F080         	movff	codFreq@f,?_codFreq
  2773  002C84  C081  F081         	movff	codFreq@f+1,?_codFreq+1
  2774                           
  2775                           ; BSR set to: 0
  2776  002C88  0012               	return		;funcret
  2777  002C8A  FFFF               	dw	65535	; errata NOP
  2778  002C8C                     __end_of_codFreq:
  2779                           	opt callstack 0
  2780                           
  2781 ;; *************** function _sprintf *****************
  2782 ;; Defined at:
  2783 ;;		line 9 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/nf_sprintf.c"
  2784 ;; Parameters:    Size  Location     Type
  2785 ;;  s               2   91[BANK0 ] PTR unsigned char 
  2786 ;;		 -> lineTwo(17), lineOne(17), 
  2787 ;;  fmt             2   93[BANK0 ] PTR const unsigned char 
  2788 ;;		 -> STR_5(18), STR_4(17), STR_3(17), STR_2(17), 
  2789 ;;		 -> STR_1(17), 
  2790 ;; Auto vars:     Size  Location     Type
  2791 ;;  f               6  103[BANK0 ] struct _IO_FILE
  2792 ;;  ap              2  101[BANK0 ] PTR void [1]
  2793 ;;		 -> ?_sprintf(2), 
  2794 ;;  ret             2    0        int 
  2795 ;; Return value:  Size  Location     Type
  2796 ;;                  2   91[BANK0 ] int 
  2797 ;; Registers used:
  2798 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2799 ;; Tracked objects:
  2800 ;;		On entry : 0/0
  2801 ;;		On exit  : 0/0
  2802 ;;		Unchanged: 0/0
  2803 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2804 ;;      Params:         0       8       0       0       0       0       0
  2805 ;;      Locals:         0      10       0       0       0       0       0
  2806 ;;      Temps:          0       0       0       0       0       0       0
  2807 ;;      Totals:         0      18       0       0       0       0       0
  2808 ;;Total ram usage:       18 bytes
  2809 ;; Hardware stack levels used:    1
  2810 ;; Hardware stack levels required when called:   17
  2811 ;; This function calls:
  2812 ;;		_vfprintf
  2813 ;; This function is called by:
  2814 ;;		_main
  2815 ;;		_setFrequency
  2816 ;;		_lcdVumeter
  2817 ;; This function uses a non-reentrant model
  2818 ;;
  2819                           
  2820                           	psect	text10
  2821  002566                     __ptext10:
  2822                           	opt callstack 0
  2823  002566                     _sprintf:
  2824                           	opt callstack 0
  2825  002566  FFFF               	dw	65535	; assembler added errata NOP
  2826                           
  2827                           ; BSR set to: 0
  2828                           ;incstack = 0
  2829  002568  0EDF               	movlw	low (?_sprintf+4)
  2830  00256A  0100               	movlb	0	; () banked
  2831  00256C  6FE5               	movwf	sprintf@ap& (0+255),b
  2832  00256E  0E00               	movlw	high (?_sprintf+4)
  2833  002570  6FE6               	movwf	(sprintf@ap+1)& (0+255),b
  2834  002572  C0DB  F0E7         	movff	sprintf@s,sprintf@f
  2835  002576  C0DC  F0E8         	movff	sprintf@s+1,sprintf@f+1
  2836                           
  2837                           ; BSR set to: 0
  2838  00257A  0E00               	movlw	0
  2839  00257C  6FEA               	movwf	(sprintf@f+3)& (0+255),b
  2840  00257E  0E00               	movlw	0
  2841  002580  6FE9               	movwf	(sprintf@f+2)& (0+255),b
  2842                           
  2843                           ; BSR set to: 0
  2844  002582  0E00               	movlw	0
  2845  002584  6FEC               	movwf	(sprintf@f+5)& (0+255),b
  2846  002586  0E00               	movlw	0
  2847  002588  6FEB               	movwf	(sprintf@f+4)& (0+255),b
  2848                           
  2849                           ; BSR set to: 0
  2850  00258A  0EE7               	movlw	low sprintf@f
  2851  00258C  6FD3               	movwf	vfprintf@fp& (0+255),b
  2852  00258E  0E00               	movlw	high sprintf@f
  2853  002590  6FD4               	movwf	(vfprintf@fp+1)& (0+255),b
  2854  002592  C0DD  F0D5         	movff	sprintf@fmt,vfprintf@fmt
  2855  002596  C0DE  F0D6         	movff	sprintf@fmt+1,vfprintf@fmt+1
  2856  00259A  0EE5               	movlw	low sprintf@ap
  2857  00259C  6FD7               	movwf	vfprintf@ap& (0+255),b
  2858  00259E  0E00               	movlw	high sprintf@ap
  2859  0025A0  6FD8               	movwf	(vfprintf@ap+1)& (0+255),b
  2860  0025A2  EC8E  F011         	call	_vfprintf	;wreg free
  2861  0025A6  0100               	movlb	0	; () banked
  2862  0025A8  51E9               	movf	(sprintf@f+2)& (0+255),w,b
  2863  0025AA  25DB               	addwf	sprintf@s& (0+255),w,b
  2864  0025AC  6ED9               	movwf	fsr2l,c
  2865  0025AE  51EA               	movf	(sprintf@f+3)& (0+255),w,b
  2866  0025B0  21DC               	addwfc	(sprintf@s+1)& (0+255),w,b
  2867  0025B2  6EDA               	movwf	fsr2h,c
  2868  0025B4  0E00               	movlw	0
  2869  0025B6  6EDF               	movwf	indf2,c
  2870                           
  2871                           ; BSR set to: 0
  2872  0025B8  0012               	return		;funcret
  2873  0025BA  FFFF               	dw	65535	; errata NOP
  2874  0025BC                     __end_of_sprintf:
  2875                           	opt callstack 0
  2876                           
  2877 ;; *************** function _vfprintf *****************
  2878 ;; Defined at:
  2879 ;;		line 1368 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  2880 ;; Parameters:    Size  Location     Type
  2881 ;;  fp              2   83[BANK0 ] PTR struct _IO_FILE
  2882 ;;		 -> sprintf@f(6), 
  2883 ;;  fmt             2   85[BANK0 ] PTR const unsigned char 
  2884 ;;		 -> STR_5(18), STR_4(17), STR_3(17), STR_2(17), 
  2885 ;;		 -> STR_1(17), 
  2886 ;;  ap              2   87[BANK0 ] PTR PTR void 
  2887 ;;		 -> sprintf@ap(2), 
  2888 ;; Auto vars:     Size  Location     Type
  2889 ;;  cfmt            2   89[BANK0 ] PTR unsigned char 
  2890 ;;		 -> STR_5(18), STR_4(17), STR_3(17), STR_2(17), 
  2891 ;;		 -> STR_1(17), 
  2892 ;; Return value:  Size  Location     Type
  2893 ;;                  2   83[BANK0 ] int 
  2894 ;; Registers used:
  2895 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2896 ;; Tracked objects:
  2897 ;;		On entry : 0/0
  2898 ;;		On exit  : 0/0
  2899 ;;		Unchanged: 0/0
  2900 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2901 ;;      Params:         0       6       0       0       0       0       0
  2902 ;;      Locals:         0       2       0       0       0       0       0
  2903 ;;      Temps:          0       0       0       0       0       0       0
  2904 ;;      Totals:         0       8       0       0       0       0       0
  2905 ;;Total ram usage:        8 bytes
  2906 ;; Hardware stack levels used:    1
  2907 ;; Hardware stack levels required when called:   16
  2908 ;; This function calls:
  2909 ;;		_vfpfcnvrt
  2910 ;; This function is called by:
  2911 ;;		_sprintf
  2912 ;; This function uses a non-reentrant model
  2913 ;;
  2914                           
  2915                           	psect	text11
  2916  00231C                     __ptext11:
  2917                           	opt callstack 0
  2918  00231C                     _vfprintf:
  2919                           	opt callstack 0
  2920  00231C  FFFF               	dw	65535	; assembler added errata NOP
  2921                           
  2922                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1368: int vfprintf(FILE *fp, 
      +                          const char *fmt, va_list ap);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1
      +                          369: {;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1371:     char *cfmt;;/
      +                          opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1373:     cfmt = (char *)fmt;
  2923                           
  2924                           ; BSR set to: 0
  2925                           ;incstack = 0
  2926  00231E  C0D5  F0D9         	movff	vfprintf@fmt,vfprintf@cfmt
  2927  002322  C0D6  F0DA         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  2928                           
  2929                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1374:     nout = 0;
  2930  002326  0E00               	movlw	0
  2931  002328  0101               	movlb	1	; () banked
  2932  00232A  6F01               	movwf	(_nout+1)& (0+255),b
  2933  00232C  0E00               	movlw	0
  2934  00232E  6F00               	movwf	_nout& (0+255),b
  2935                           
  2936                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
  2937  002330  D018               	goto	l3635
  2938  002332                     l3633:
  2939  002332  FFFF               	dw	65535	; assembler added errata NOP
  2940                           
  2941                           ; BSR set to: 1
  2942                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1376:         nout += vfpfcnv
      +                          rt(fp, &cfmt, ap);
  2943  002334  C0D3  F0BF         	movff	vfprintf@fp,vfpfcnvrt@fp
  2944  002338  C0D4  F0C0         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  2945  00233C  0ED9               	movlw	low vfprintf@cfmt
  2946  00233E  0100               	movlb	0	; () banked
  2947  002340  6FC1               	movwf	vfpfcnvrt@fmt& (0+255),b
  2948  002342  0E00               	movlw	high vfprintf@cfmt
  2949  002344  6FC2               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
  2950  002346  C0D7  F0C3         	movff	vfprintf@ap,vfpfcnvrt@ap
  2951  00234A  C0D8  F0C4         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  2952  00234E  EC2E  F003         	call	_vfpfcnvrt	;wreg free
  2953  002352  0100               	movlb	0	; () banked
  2954  002354  51BF               	movf	?_vfpfcnvrt& (0+255),w,b
  2955  002356  0101               	movlb	1	; () banked
  2956  002358  2700               	addwf	_nout& (0+255),f,b
  2957  00235A  0100               	movlb	0	; () banked
  2958  00235C  51C0               	movf	(?_vfpfcnvrt+1)& (0+255),w,b
  2959  00235E  0101               	movlb	1	; () banked
  2960  002360  2301               	addwfc	(_nout+1)& (0+255),f,b
  2961  002362                     l3635:
  2962  002362  FFFF               	dw	65535	; assembler added errata NOP
  2963                           
  2964                           ; BSR set to: 1
  2965                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
  2966  002364  C0D9  FFF6         	movff	vfprintf@cfmt,tblptrl
  2967  002368  C0DA  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  2968  00236C                     	if	0	;tblptru may be non-zero
  2969  00236C                     	endif
  2970  00236C                     	if	0	;tblptru may be non-zero
  2971  00236C                     	endif
  2972  00236C  0008               	tblrd		*
  2973  00236E  FFFF               	dw	65535	; errata NOP
  2974  002370  50F5               	movf	tablat,w,c
  2975  002372  0900               	iorlw	0
  2976  002374  A4D8               	btfss	status,2,c
  2977  002376  D7DD               	goto	l3633
  2978                           
  2979                           ; BSR set to: 1
  2980                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1378:     return nout;
  2981  002378  C100  F0D3         	movff	_nout,?_vfprintf
  2982  00237C  C101  F0D4         	movff	_nout+1,?_vfprintf+1
  2983                           
  2984                           ; BSR set to: 1
  2985  002380  0012               	return		;funcret
  2986  002382  FFFF               	dw	65535	; errata NOP
  2987  002384                     __end_of_vfprintf:
  2988                           	opt callstack 0
  2989                           
  2990 ;; *************** function _vfpfcnvrt *****************
  2991 ;; Defined at:
  2992 ;;		line 670 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  2993 ;; Parameters:    Size  Location     Type
  2994 ;;  fp              2   63[BANK0 ] PTR struct _IO_FILE
  2995 ;;		 -> sprintf@f(6), 
  2996 ;;  fmt             2   65[BANK0 ] PTR PTR unsigned char 
  2997 ;;		 -> vfprintf@cfmt(2), 
  2998 ;;  ap              2   67[BANK0 ] PTR PTR void 
  2999 ;;		 -> sprintf@ap(2), 
  3000 ;; Auto vars:     Size  Location     Type
  3001 ;;  ll              8   73[BANK0 ] long long 
  3002 ;;  llu             8    0        unsigned long long 
  3003 ;;  f               4    0        unsigned long long 
  3004 ;;  vp              3    0        PTR void 
  3005 ;;  ct              3    0        unsigned char [3]
  3006 ;;  cp              3    0        PTR unsigned char 
  3007 ;;  i               2    0        int 
  3008 ;;  done            2    0        int 
  3009 ;;  c               1    0        unsigned char 
  3010 ;; Return value:  Size  Location     Type
  3011 ;;                  2   63[BANK0 ] int 
  3012 ;; Registers used:
  3013 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3014 ;; Tracked objects:
  3015 ;;		On entry : 0/0
  3016 ;;		On exit  : 0/0
  3017 ;;		Unchanged: 0/0
  3018 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3019 ;;      Params:         0       6       0       0       0       0       0
  3020 ;;      Locals:         0      10       0       0       0       0       0
  3021 ;;      Temps:          0       4       0       0       0       0       0
  3022 ;;      Totals:         0      20       0       0       0       0       0
  3023 ;;Total ram usage:       20 bytes
  3024 ;; Hardware stack levels used:    1
  3025 ;; Hardware stack levels required when called:   15
  3026 ;; This function calls:
  3027 ;;		_atoi
  3028 ;;		_dtoa
  3029 ;;		_fputc
  3030 ;;		_isdigit
  3031 ;; This function is called by:
  3032 ;;		_vfprintf
  3033 ;; This function uses a non-reentrant model
  3034 ;;
  3035                           
  3036                           	psect	text12
  3037  00065C                     __ptext12:
  3038                           	opt callstack 0
  3039  00065C                     _vfpfcnvrt:
  3040                           	opt callstack 0
  3041  00065C  FFFF               	dw	65535	; assembler added errata NOP
  3042                           
  3043                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 670: static int vfpfcnvrt(FIL
      +                          E *fp, char *fmt[], va_list ap);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c
      +                          : 671: {;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 672:     char c, *cp,
      +                           ct[3];;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 673:     int done, i;;
      +                          /opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 674:     long long ll;;/opt/mi
      +                          crochip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 675:     unsigned long long llu;
  3044                           
  3045                           ; BSR set to: 1
  3046                           ;incstack = 0
  3047  00065E  C0C1  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3048  000662  C0C2  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3049  000666  CFDE FFF6          	movff	postinc2,tblptrl
  3050  00066A  CFDD FFF7          	movff	postdec2,tblptrh
  3051  00066E                     	if	0	;tblptru may be non-zero
  3052  00066E                     	endif
  3053  00066E                     	if	0	;tblptru may be non-zero
  3054  00066E                     	endif
  3055  00066E  0008               	tblrd		*
  3056  000670  FFFF               	dw	65535	; errata NOP
  3057  000672  50F5               	movf	tablat,w,c
  3058  000674  0A25               	xorlw	37
  3059  000676  A4D8               	btfss	status,2,c
  3060  000678  D114               	goto	l3439
  3061                           
  3062                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 681:         ++*fmt;
  3063  00067A  C0C1  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3064  00067E  C0C2  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3065  000682  2ADE               	incf	postinc2,f,c
  3066  000684  0E00               	movlw	0
  3067  000686  22DD               	addwfc	postdec2,f,c
  3068                           
  3069                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 683:         flags = width = 
      +                          0;
  3070  000688  0E00               	movlw	0
  3071  00068A  0100               	movlb	0	; () banked
  3072  00068C  6FF5               	movwf	(_width+1)& (0+255),b
  3073  00068E  0E00               	movlw	0
  3074  000690  6FF4               	movwf	_width& (0+255),b
  3075  000692  C0F4  F0F8         	movff	_width,_flags
  3076  000696  C0F5  F0F9         	movff	_width+1,_flags+1
  3077                           
  3078                           ; BSR set to: 0
  3079                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 684:         prec = -1;
  3080  00069A  69F6               	setf	_prec& (0+255),b
  3081  00069C  69F7               	setf	(_prec+1)& (0+255),b
  3082                           
  3083                           ; BSR set to: 0
  3084                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 723:         if ((*fmt)[0] ==
      +                           '*') {
  3085  00069E  C0C1  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3086  0006A2  C0C2  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3087  0006A6  CFDE FFF6          	movff	postinc2,tblptrl
  3088  0006AA  CFDD FFF7          	movff	postdec2,tblptrh
  3089  0006AE                     	if	0	;tblptru may be non-zero
  3090  0006AE                     	endif
  3091  0006AE                     	if	0	;tblptru may be non-zero
  3092  0006AE                     	endif
  3093  0006AE  0008               	tblrd		*
  3094  0006B0  FFFF               	dw	65535	; errata NOP
  3095  0006B2  50F5               	movf	tablat,w,c
  3096  0006B4  0A2A               	xorlw	42
  3097  0006B6  A4D8               	btfss	status,2,c
  3098  0006B8  D023               	goto	l3403
  3099                           
  3100                           ; BSR set to: 0
  3101                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 724:             ++*fmt;
  3102  0006BA  C0C1  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3103  0006BE  C0C2  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3104  0006C2  2ADE               	incf	postinc2,f,c
  3105  0006C4  0E00               	movlw	0
  3106  0006C6  22DD               	addwfc	postdec2,f,c
  3107                           
  3108                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 725:             width = (*(i
      +                          nt *)__va_arg(*(int **)ap, (int)0));
  3109  0006C8  C0C3  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3110  0006CC  C0C4  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3111  0006D0  CFDF F0C5          	movff	indf2,??_vfpfcnvrt
  3112  0006D4  0E02               	movlw	2
  3113  0006D6  26DE               	addwf	postinc2,f,c
  3114  0006D8  CFDF F0C6          	movff	indf2,??_vfpfcnvrt+1
  3115  0006DC  0E00               	movlw	0
  3116  0006DE  22DD               	addwfc	postdec2,f,c
  3117  0006E0  C0C5  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3118  0006E4  C0C6  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3119  0006E8  CFDE F0F4          	movff	postinc2,_width
  3120  0006EC  CFDD F0F5          	movff	postdec2,_width+1
  3121                           
  3122                           ; BSR set to: 0
  3123                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 726:             if (width < 
      +                          0) {
  3124  0006F0  AFF5               	btfss	(_width+1)& (0+255),7,b
  3125  0006F2  D046               	goto	u2830
  3126                           
  3127                           ; BSR set to: 0
  3128                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 727:                 flags |=
      +                           (1 << 0);
  3129  0006F4  81F8               	bsf	_flags& (0+255),0,b
  3130                           
  3131                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 728:                 width = 
      +                          -width;
  3132  0006F6  6DF4               	negf	_width& (0+255),b
  3133  0006F8  1FF5               	comf	(_width+1)& (0+255),f,b
  3134  0006FA  B0D8               	btfsc	status,0,c
  3135  0006FC  2BF5               	incf	(_width+1)& (0+255),f,b
  3136  0006FE  D040               	goto	u2830
  3137  000700                     l3403:
  3138  000700  FFFF               	dw	65535	; assembler added errata NOP
  3139                           
  3140                           ; BSR set to: 0
  3141                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 731:             width = atoi
      +                          (*fmt);
  3142  000702  C0C1  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3143  000706  C0C2  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3144  00070A  CFDE F087          	movff	postinc2,atoi@s
  3145  00070E  CFDD F088          	movff	postdec2,atoi@s+1
  3146  000712  EC09  F009         	call	_atoi	;wreg free
  3147  000716  C087  F0F4         	movff	?_atoi,_width
  3148  00071A  C088  F0F5         	movff	?_atoi+1,_width+1
  3149                           
  3150                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 732:             while ((0 ? 
      +                          isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  3151  00071E  D008               	goto	l3407
  3152  000720                     l3405:
  3153  000720  FFFF               	dw	65535	; assembler added errata NOP
  3154                           
  3155                           ; BSR set to: 0
  3156                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 733:                 ++*fmt;
  3157  000722  C0C1  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3158  000726  C0C2  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3159  00072A  2ADE               	incf	postinc2,f,c
  3160  00072C  0E00               	movlw	0
  3161  00072E  22DD               	addwfc	postdec2,f,c
  3162  000730                     l3407:
  3163  000730  FFFF               	dw	65535	; assembler added errata NOP
  3164  000732  0ED0               	movlw	208
  3165  000734  0100               	movlb	0	; () banked
  3166  000736  6FC5               	movwf	??_vfpfcnvrt& (0+255),b
  3167  000738  0EFF               	movlw	255
  3168  00073A  6FC6               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  3169  00073C  C0C1  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3170  000740  C0C2  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3171  000744  CFDE FFF6          	movff	postinc2,tblptrl
  3172  000748  CFDD FFF7          	movff	postdec2,tblptrh
  3173  00074C                     	if	0	;tblptru may be non-zero
  3174  00074C                     	endif
  3175  00074C                     	if	0	;tblptru may be non-zero
  3176  00074C                     	endif
  3177  00074C  0008               	tblrd		*
  3178  00074E  FFFF               	dw	65535	; errata NOP
  3179  000750  50F5               	movf	tablat,w,c
  3180  000752  6FC7               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  3181  000754  6BC8               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  3182  000756  51C5               	movf	??_vfpfcnvrt& (0+255),w,b
  3183  000758  27C7               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  3184  00075A  51C6               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  3185  00075C  23C8               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  3186  00075E  51C8               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  3187  000760  E106               	bnz	u2810
  3188  000762  0E0A               	movlw	10
  3189  000764  5DC7               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  3190  000766  B0D8               	btfsc	status,0,c
  3191  000768  D002               	goto	u2810
  3192  00076A  0E01               	movlw	1
  3193  00076C  D002               	goto	u2820
  3194  00076E                     u2810:
  3195  00076E  FFFF               	dw	65535	; assembler added errata NOP
  3196  000770  0E00               	movlw	0
  3197  000772                     u2820:
  3198  000772  FFFF               	dw	65535	; assembler added errata NOP
  3199  000774  6FD1               	movwf	_vfpfcnvrt$1128& (0+255),b
  3200  000776  6BD2               	clrf	(_vfpfcnvrt$1128+1)& (0+255),b
  3201                           
  3202                           ; BSR set to: 0
  3203  000778  51D1               	movf	_vfpfcnvrt$1128& (0+255),w,b
  3204  00077A  11D2               	iorwf	(_vfpfcnvrt$1128+1)& (0+255),w,b
  3205  00077C  A4D8               	btfss	status,2,c
  3206  00077E  D7D0               	goto	l3405
  3207  000780                     u2830:
  3208  000780  FFFF               	dw	65535	; assembler added errata NOP
  3209                           
  3210                           ; BSR set to: 0
  3211                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 825:         if ((*fmt[0] == 
      +                          'd') || (*fmt[0] == 'i')) {
  3212  000782  C0C1  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3213  000786  C0C2  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3214  00078A  CFDE FFF6          	movff	postinc2,tblptrl
  3215  00078E  CFDD FFF7          	movff	postdec2,tblptrh
  3216  000792                     	if	0	;tblptru may be non-zero
  3217  000792                     	endif
  3218  000792                     	if	0	;tblptru may be non-zero
  3219  000792                     	endif
  3220  000792  0008               	tblrd		*
  3221  000794  FFFF               	dw	65535	; errata NOP
  3222  000796  50F5               	movf	tablat,w,c
  3223  000798  0A64               	xorlw	100
  3224  00079A  B4D8               	btfsc	status,2,c
  3225  00079C  D00E               	goto	u2850
  3226                           
  3227                           ; BSR set to: 0
  3228  00079E  C0C1  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3229  0007A2  C0C2  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3230  0007A6  CFDE FFF6          	movff	postinc2,tblptrl
  3231  0007AA  CFDD FFF7          	movff	postdec2,tblptrh
  3232  0007AE                     	if	0	;tblptru may be non-zero
  3233  0007AE                     	endif
  3234  0007AE                     	if	0	;tblptru may be non-zero
  3235  0007AE                     	endif
  3236  0007AE  0008               	tblrd		*
  3237  0007B0  FFFF               	dw	65535	; errata NOP
  3238  0007B2  50F5               	movf	tablat,w,c
  3239  0007B4  0A69               	xorlw	105
  3240  0007B6  A4D8               	btfss	status,2,c
  3241  0007B8  D040               	goto	l3423
  3242  0007BA                     u2850:
  3243  0007BA  FFFF               	dw	65535	; assembler added errata NOP
  3244                           
  3245                           ; BSR set to: 0
  3246                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 827:             ++*fmt;
  3247  0007BC  C0C1  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3248  0007C0  C0C2  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3249  0007C4  2ADE               	incf	postinc2,f,c
  3250  0007C6  0E00               	movlw	0
  3251  0007C8  22DD               	addwfc	postdec2,f,c
  3252                           
  3253                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 828:             ll = (long l
      +                          ong)(*(int *)__va_arg(*(int **)ap, (int)0));
  3254  0007CA  C0C3  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3255  0007CE  C0C4  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3256  0007D2  CFDF F0C5          	movff	indf2,??_vfpfcnvrt
  3257  0007D6  0E02               	movlw	2
  3258  0007D8  26DE               	addwf	postinc2,f,c
  3259  0007DA  CFDF F0C6          	movff	indf2,??_vfpfcnvrt+1
  3260  0007DE  0E00               	movlw	0
  3261  0007E0  22DD               	addwfc	postdec2,f,c
  3262  0007E2  C0C5  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3263  0007E6  C0C6  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3264  0007EA  CFDE F0C9          	movff	postinc2,vfpfcnvrt@ll
  3265  0007EE  CFDD F0CA          	movff	postdec2,vfpfcnvrt@ll+1
  3266  0007F2  0E00               	movlw	0
  3267  0007F4  BFCA               	btfsc	(vfpfcnvrt@ll+1)& (0+255),7,b
  3268  0007F6  0EFF               	movlw	-1
  3269  0007F8  6FCB               	movwf	(vfpfcnvrt@ll+2)& (0+255),b
  3270  0007FA  6FCC               	movwf	(vfpfcnvrt@ll+3)& (0+255),b
  3271  0007FC  6FCD               	movwf	(vfpfcnvrt@ll+4)& (0+255),b
  3272  0007FE  6FCE               	movwf	(vfpfcnvrt@ll+5)& (0+255),b
  3273  000800  6FCF               	movwf	(vfpfcnvrt@ll+6)& (0+255),b
  3274  000802  6FD0               	movwf	(vfpfcnvrt@ll+7)& (0+255),b
  3275                           
  3276                           ; BSR set to: 0
  3277                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 830:             return dtoa(
      +                          fp, ll);
  3278  000804  C0BF  F09B         	movff	vfpfcnvrt@fp,dtoa@fp
  3279  000808  C0C0  F09C         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  3280  00080C  C0C9  F09D         	movff	vfpfcnvrt@ll,dtoa@d
  3281  000810  C0CA  F09E         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  3282  000814  C0CB  F09F         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  3283  000818  C0CC  F0A0         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  3284  00081C  C0CD  F0A1         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  3285  000820  C0CE  F0A2         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  3286  000824  C0CF  F0A3         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  3287  000828  C0D0  F0A4         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  3288  00082C  ECB1  F005         	call	_dtoa	;wreg free
  3289  000830  C09B  F0BF         	movff	?_dtoa,?_vfpfcnvrt
  3290  000834  C09C  F0C0         	movff	?_dtoa+1,?_vfpfcnvrt+1
  3291  000838  D051               	goto	l648
  3292  00083A                     l3423:
  3293  00083A  FFFF               	dw	65535	; assembler added errata NOP
  3294                           
  3295                           ; BSR set to: 0
  3296                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1350:         if ((*fmt)[0] =
      +                          = '%') {
  3297  00083C  C0C1  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3298  000840  C0C2  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3299  000844  CFDE FFF6          	movff	postinc2,tblptrl
  3300  000848  CFDD FFF7          	movff	postdec2,tblptrh
  3301  00084C                     	if	0	;tblptru may be non-zero
  3302  00084C                     	endif
  3303  00084C                     	if	0	;tblptru may be non-zero
  3304  00084C                     	endif
  3305  00084C  0008               	tblrd		*
  3306  00084E  FFFF               	dw	65535	; errata NOP
  3307  000850  50F5               	movf	tablat,w,c
  3308  000852  0A25               	xorlw	37
  3309  000854  A4D8               	btfss	status,2,c
  3310  000856  D017               	goto	l3433
  3311                           
  3312                           ; BSR set to: 0
  3313                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1351:             ++*fmt;
  3314  000858  C0C1  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3315  00085C  C0C2  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3316  000860  2ADE               	incf	postinc2,f,c
  3317  000862  0E00               	movlw	0
  3318  000864  22DD               	addwfc	postdec2,f,c
  3319                           
  3320                           ; BSR set to: 0
  3321                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1352:             fputc((int)
      +                          '%', fp);
  3322  000866  0E00               	movlw	0
  3323  000868  6F81               	movwf	(fputc@c+1)& (0+255),b
  3324  00086A  0E25               	movlw	37
  3325  00086C  6F80               	movwf	fputc@c& (0+255),b
  3326  00086E  C0BF  F082         	movff	vfpfcnvrt@fp,fputc@fp
  3327  000872  C0C0  F083         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  3328  000876  ECD7  F00E         	call	_fputc	;wreg free
  3329  00087A                     l3429:
  3330  00087A  FFFF               	dw	65535	; assembler added errata NOP
  3331                           
  3332                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1353:             return 1;
  3333  00087C  0E00               	movlw	0
  3334  00087E  0100               	movlb	0	; () banked
  3335  000880  6FC0               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  3336  000882  0E01               	movlw	1
  3337  000884  D00B               	goto	L10
  3338  000886                     l3433:
  3339  000886  FFFF               	dw	65535	; assembler added errata NOP
  3340                           
  3341                           ; BSR set to: 0
  3342                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1357:         ++*fmt;
  3343  000888  C0C1  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3344  00088C  C0C2  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3345  000890  2ADE               	incf	postinc2,f,c
  3346  000892  0E00               	movlw	0
  3347  000894  22DD               	addwfc	postdec2,f,c
  3348                           
  3349                           ; BSR set to: 0
  3350                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1358:         return 0;
  3351  000896  0E00               	movlw	0
  3352  000898  6FC0               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  3353  00089A  0E00               	movlw	0
  3354  00089C                     L10:
  3355  00089C  FFFF               	dw	65535	; assembler added errata NOP
  3356  00089E  6FBF               	movwf	?_vfpfcnvrt& (0+255),b
  3357  0008A0  D01D               	goto	l648
  3358  0008A2                     l3439:
  3359  0008A2  FFFF               	dw	65535	; assembler added errata NOP
  3360                           
  3361                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1362:     fputc((int)(*fmt)[0
      +                          ], fp);
  3362  0008A4  C0C1  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3363  0008A8  C0C2  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3364  0008AC  CFDE FFF6          	movff	postinc2,tblptrl
  3365  0008B0  CFDD FFF7          	movff	postdec2,tblptrh
  3366  0008B4                     	if	0	;tblptru may be non-zero
  3367  0008B4                     	endif
  3368  0008B4                     	if	0	;tblptru may be non-zero
  3369  0008B4                     	endif
  3370  0008B4  0008               	tblrd		*
  3371  0008B6  FFFF               	dw	65535	; errata NOP
  3372  0008B8  50F5               	movf	tablat,w,c
  3373  0008BA  0100               	movlb	0	; () banked
  3374  0008BC  6F80               	movwf	fputc@c& (0+255),b
  3375  0008BE  6B81               	clrf	(fputc@c+1)& (0+255),b
  3376  0008C0  C0BF  F082         	movff	vfpfcnvrt@fp,fputc@fp
  3377  0008C4  C0C0  F083         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  3378  0008C8  ECD7  F00E         	call	_fputc	;wreg free
  3379                           
  3380                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1363:     ++*fmt;
  3381  0008CC  C0C1  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3382  0008D0  C0C2  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3383  0008D4  2ADE               	incf	postinc2,f,c
  3384  0008D6  0E00               	movlw	0
  3385  0008D8  22DD               	addwfc	postdec2,f,c
  3386  0008DA  D7CF               	goto	l3429
  3387  0008DC                     l648:
  3388  0008DC  FFFF               	dw	65535	; assembler added errata NOP
  3389  0008DE  0012               	return		;funcret
  3390  0008E0  FFFF               	dw	65535	; errata NOP
  3391  0008E2                     __end_of_vfpfcnvrt:
  3392                           	opt callstack 0
  3393                           
  3394 ;; *************** function _dtoa *****************
  3395 ;; Defined at:
  3396 ;;		line 274 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  3397 ;; Parameters:    Size  Location     Type
  3398 ;;  fp              2   27[BANK0 ] PTR struct _IO_FILE
  3399 ;;		 -> sprintf@f(6), 
  3400 ;;  d               8   29[BANK0 ] long long 
  3401 ;; Auto vars:     Size  Location     Type
  3402 ;;  n               8   53[BANK0 ] long long 
  3403 ;;  i               2   61[BANK0 ] int 
  3404 ;;  s               2   51[BANK0 ] int 
  3405 ;;  w               2   49[BANK0 ] int 
  3406 ;;  p               2   47[BANK0 ] int 
  3407 ;; Return value:  Size  Location     Type
  3408 ;;                  2   27[BANK0 ] int 
  3409 ;; Registers used:
  3410 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3411 ;; Tracked objects:
  3412 ;;		On entry : 0/0
  3413 ;;		On exit  : 0/0
  3414 ;;		Unchanged: 0/0
  3415 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3416 ;;      Params:         0      10       0       0       0       0       0
  3417 ;;      Locals:         0      18       0       0       0       0       0
  3418 ;;      Temps:          0       8       0       0       0       0       0
  3419 ;;      Totals:         0      36       0       0       0       0       0
  3420 ;;Total ram usage:       36 bytes
  3421 ;; Hardware stack levels used:    1
  3422 ;; Hardware stack levels required when called:   14
  3423 ;; This function calls:
  3424 ;;		___aodiv
  3425 ;;		___aomod
  3426 ;;		_abs
  3427 ;;		_pad
  3428 ;; This function is called by:
  3429 ;;		_vfpfcnvrt
  3430 ;; This function uses a non-reentrant model
  3431 ;;
  3432                           
  3433                           	psect	text13
  3434  000B62                     __ptext13:
  3435                           	opt callstack 0
  3436  000B62                     _dtoa:
  3437                           	opt callstack 0
  3438  000B62  FFFF               	dw	65535	; assembler added errata NOP
  3439                           
  3440                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 274: static int dtoa(FILE *fp
      +                          , long long d);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 275: {;/opt/mic
      +                          rochip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 276:     int i, p, s, w;;/opt/microchi
      +                          p/xc8/v2.05/pic/sources/c99/common/doprnt.c: 277:     long long n;;/opt/microchip/xc8/v2
      +                          .05/pic/sources/c99/common/doprnt.c: 280:     n = d;
  3441                           
  3442                           ;incstack = 0
  3443  000B64  C09D  F0B5         	movff	dtoa@d,dtoa@n
  3444  000B68  C09E  F0B6         	movff	dtoa@d+1,dtoa@n+1
  3445  000B6C  C09F  F0B7         	movff	dtoa@d+2,dtoa@n+2
  3446  000B70  C0A0  F0B8         	movff	dtoa@d+3,dtoa@n+3
  3447  000B74  C0A1  F0B9         	movff	dtoa@d+4,dtoa@n+4
  3448  000B78  C0A2  F0BA         	movff	dtoa@d+5,dtoa@n+5
  3449  000B7C  C0A3  F0BB         	movff	dtoa@d+6,dtoa@n+6
  3450  000B80  C0A4  F0BC         	movff	dtoa@d+7,dtoa@n+7
  3451                           
  3452                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 281:     s = n < 0 ? 1 : 0;
  3453  000B84  0100               	movlb	0	; () banked
  3454  000B86  AFBC               	btfss	(dtoa@n+7)& (0+255),7,b
  3455  000B88  D002               	goto	u2340
  3456  000B8A  0E01               	movlw	1
  3457  000B8C  D002               	goto	u2350
  3458  000B8E                     u2340:
  3459  000B8E  FFFF               	dw	65535	; assembler added errata NOP
  3460  000B90  0E00               	movlw	0
  3461  000B92                     u2350:
  3462  000B92  FFFF               	dw	65535	; assembler added errata NOP
  3463  000B94  6FB3               	movwf	dtoa@s& (0+255),b
  3464  000B96  6BB4               	clrf	(dtoa@s+1)& (0+255),b
  3465                           
  3466                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 282:     if (s) {
  3467  000B98  51B3               	movf	dtoa@s& (0+255),w,b
  3468  000B9A  11B4               	iorwf	(dtoa@s+1)& (0+255),w,b
  3469  000B9C  B4D8               	btfsc	status,2,c
  3470  000B9E  D010               	goto	l3159
  3471                           
  3472                           ; BSR set to: 0
  3473                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 283:         n = -n;
  3474  000BA0  1FBC               	comf	(dtoa@n+7)& (0+255),f,b
  3475  000BA2  1FBB               	comf	(dtoa@n+6)& (0+255),f,b
  3476  000BA4  1FBA               	comf	(dtoa@n+5)& (0+255),f,b
  3477  000BA6  1FB9               	comf	(dtoa@n+4)& (0+255),f,b
  3478  000BA8  1FB8               	comf	(dtoa@n+3)& (0+255),f,b
  3479  000BAA  1FB7               	comf	(dtoa@n+2)& (0+255),f,b
  3480  000BAC  1FB6               	comf	(dtoa@n+1)& (0+255),f,b
  3481  000BAE  6DB5               	negf	dtoa@n& (0+255),b
  3482  000BB0  0E00               	movlw	0
  3483  000BB2  23B6               	addwfc	(dtoa@n+1)& (0+255),f,b
  3484  000BB4  23B7               	addwfc	(dtoa@n+2)& (0+255),f,b
  3485  000BB6  23B8               	addwfc	(dtoa@n+3)& (0+255),f,b
  3486  000BB8  23B9               	addwfc	(dtoa@n+4)& (0+255),f,b
  3487  000BBA  23BA               	addwfc	(dtoa@n+5)& (0+255),f,b
  3488  000BBC  23BB               	addwfc	(dtoa@n+6)& (0+255),f,b
  3489  000BBE  23BC               	addwfc	(dtoa@n+7)& (0+255),f,b
  3490  000BC0                     l3159:
  3491  000BC0  FFFF               	dw	65535	; assembler added errata NOP
  3492                           
  3493                           ; BSR set to: 0
  3494                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 287:     if (!(prec < 0)) {
  3495  000BC2  AFF7               	btfss	(_prec+1)& (0+255),7,b
  3496                           
  3497                           ; BSR set to: 0
  3498                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 288:         flags &= ~(1 << 
      +                          1);
  3499  000BC4  93F8               	bcf	_flags& (0+255),1,b
  3500                           
  3501                           ; BSR set to: 0
  3502                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 290:     p = (0 < prec) ? pre
      +                          c : 1;
  3503  000BC6  BFF7               	btfsc	(_prec+1)& (0+255),7,b
  3504  000BC8  D005               	goto	u2380
  3505  000BCA  51F7               	movf	(_prec+1)& (0+255),w,b
  3506  000BCC  E109               	bnz	l611
  3507  000BCE  05F6               	decf	_prec& (0+255),w,b
  3508  000BD0  B0D8               	btfsc	status,0,c
  3509  000BD2  D006               	goto	l611
  3510  000BD4                     u2380:
  3511  000BD4  FFFF               	dw	65535	; assembler added errata NOP
  3512                           
  3513                           ; BSR set to: 0
  3514  000BD6  0E00               	movlw	0
  3515  000BD8  6FB0               	movwf	(dtoa@p+1)& (0+255),b
  3516  000BDA  0E01               	movlw	1
  3517  000BDC  6FAF               	movwf	dtoa@p& (0+255),b
  3518  000BDE  D005               	goto	l613
  3519  000BE0                     l611:
  3520  000BE0  FFFF               	dw	65535	; assembler added errata NOP
  3521                           
  3522                           ; BSR set to: 0
  3523  000BE2  C0F6  F0AF         	movff	_prec,dtoa@p
  3524  000BE6  C0F7  F0B0         	movff	_prec+1,dtoa@p+1
  3525  000BEA                     l613:
  3526  000BEA  FFFF               	dw	65535	; assembler added errata NOP
  3527                           
  3528                           ; BSR set to: 0
  3529                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 291:     w = width;
  3530  000BEC  C0F4  F0B1         	movff	_width,dtoa@w
  3531  000BF0  C0F5  F0B2         	movff	_width+1,dtoa@w+1
  3532                           
  3533                           ; BSR set to: 0
  3534                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 292:     if (s || (flags & (1
      +                           << 2))) {
  3535  000BF4  51B3               	movf	dtoa@s& (0+255),w,b
  3536  000BF6  11B4               	iorwf	(dtoa@s+1)& (0+255),w,b
  3537  000BF8  A4D8               	btfss	status,2,c
  3538  000BFA  D002               	goto	u2400
  3539                           
  3540                           ; BSR set to: 0
  3541  000BFC  A5F8               	btfss	_flags& (0+255),2,b
  3542  000BFE  D004               	goto	l3173
  3543  000C00                     u2400:
  3544  000C00  FFFF               	dw	65535	; assembler added errata NOP
  3545                           
  3546                           ; BSR set to: 0
  3547                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 293:         --w;
  3548  000C02  07B1               	decf	dtoa@w& (0+255),f,b
  3549  000C04  A0D8               	btfss	status,0,c
  3550  000C06  07B2               	decf	(dtoa@w+1)& (0+255),f,b
  3551  000C08                     l3173:
  3552  000C08  FFFF               	dw	65535	; assembler added errata NOP
  3553                           
  3554                           ; BSR set to: 0
  3555                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 297:     i = sizeof(dbuf) - 1
      +                          ;
  3556  000C0A  0E00               	movlw	0
  3557  000C0C  6FBE               	movwf	(dtoa@i+1)& (0+255),b
  3558  000C0E  0E1F               	movlw	31
  3559  000C10  6FBD               	movwf	dtoa@i& (0+255),b
  3560                           
  3561                           ; BSR set to: 0
  3562                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 298:     dbuf[i] = '\0';
  3563  000C12  0E00               	movlw	0
  3564  000C14  0101               	movlb	1	; () banked
  3565  000C16  6F26               	movwf	(_dbuf+31)& (0+255),b
  3566                           
  3567                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  3568  000C18  D07E               	goto	l3187
  3569  000C1A                     l3177:
  3570  000C1A  FFFF               	dw	65535	; assembler added errata NOP
  3571                           
  3572                           ; BSR set to: 0
  3573                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 300:         --i;
  3574  000C1C  07BD               	decf	dtoa@i& (0+255),f,b
  3575  000C1E  A0D8               	btfss	status,0,c
  3576  000C20  07BE               	decf	(dtoa@i+1)& (0+255),f,b
  3577                           
  3578                           ; BSR set to: 0
  3579                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 301:         dbuf[i] = '0' + 
      +                          abs(n % 10);
  3580  000C22  0E07               	movlw	low _dbuf
  3581  000C24  25BD               	addwf	dtoa@i& (0+255),w,b
  3582  000C26  6ED9               	movwf	fsr2l,c
  3583  000C28  0E01               	movlw	high _dbuf
  3584  000C2A  21BE               	addwfc	(dtoa@i+1)& (0+255),w,b
  3585  000C2C  6EDA               	movwf	fsr2h,c
  3586  000C2E  C0B5  F080         	movff	dtoa@n,___aomod@dividend
  3587  000C32  C0B6  F081         	movff	dtoa@n+1,___aomod@dividend+1
  3588  000C36  C0B7  F082         	movff	dtoa@n+2,___aomod@dividend+2
  3589  000C3A  C0B8  F083         	movff	dtoa@n+3,___aomod@dividend+3
  3590  000C3E  C0B9  F084         	movff	dtoa@n+4,___aomod@dividend+4
  3591  000C42  C0BA  F085         	movff	dtoa@n+5,___aomod@dividend+5
  3592  000C46  C0BB  F086         	movff	dtoa@n+6,___aomod@dividend+6
  3593  000C4A  C0BC  F087         	movff	dtoa@n+7,___aomod@dividend+7
  3594  000C4E  0E0A               	movlw	10
  3595  000C50  6F88               	movwf	___aomod@divisor& (0+255),b
  3596  000C52  0E00               	movlw	0
  3597  000C54  6F89               	movwf	(___aomod@divisor+1)& (0+255),b
  3598  000C56  0E00               	movlw	0
  3599  000C58  6F8A               	movwf	(___aomod@divisor+2)& (0+255),b
  3600  000C5A  0E00               	movlw	0
  3601  000C5C  6F8B               	movwf	(___aomod@divisor+3)& (0+255),b
  3602  000C5E  0E00               	movlw	0
  3603  000C60  6F8C               	movwf	(___aomod@divisor+4)& (0+255),b
  3604  000C62  0E00               	movlw	0
  3605  000C64  6F8D               	movwf	(___aomod@divisor+5)& (0+255),b
  3606  000C66  0E00               	movlw	0
  3607  000C68  6F8E               	movwf	(___aomod@divisor+6)& (0+255),b
  3608  000C6A  0E00               	movlw	0
  3609  000C6C  6F8F               	movwf	(___aomod@divisor+7)& (0+255),b
  3610  000C6E  ECCE  F00B         	call	___aomod	;wreg free
  3611  000C72  C080  F0A5         	movff	?___aomod,??_dtoa
  3612  000C76  C081  F0A6         	movff	?___aomod+1,??_dtoa+1
  3613  000C7A  C082  F0A7         	movff	?___aomod+2,??_dtoa+2
  3614  000C7E  C083  F0A8         	movff	?___aomod+3,??_dtoa+3
  3615  000C82  C084  F0A9         	movff	?___aomod+4,??_dtoa+4
  3616  000C86  C085  F0AA         	movff	?___aomod+5,??_dtoa+5
  3617  000C8A  C086  F0AB         	movff	?___aomod+6,??_dtoa+6
  3618  000C8E  C087  F0AC         	movff	?___aomod+7,??_dtoa+7
  3619  000C92  C0A5  F092         	movff	??_dtoa,abs@a
  3620  000C96  C0A7  F093         	movff	??_dtoa+2,abs@a+1
  3621  000C9A  ECDF  F014         	call	_abs	;wreg free
  3622  000C9E  0100               	movlb	0	; () banked
  3623  000CA0  5192               	movf	?_abs& (0+255),w,b
  3624  000CA2  0F30               	addlw	48
  3625  000CA4  6EDF               	movwf	indf2,c
  3626                           
  3627                           ; BSR set to: 0
  3628                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 302:         --p;
  3629  000CA6  07AF               	decf	dtoa@p& (0+255),f,b
  3630  000CA8  A0D8               	btfss	status,0,c
  3631  000CAA  07B0               	decf	(dtoa@p+1)& (0+255),f,b
  3632                           
  3633                           ; BSR set to: 0
  3634                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 303:         --w;
  3635  000CAC  07B1               	decf	dtoa@w& (0+255),f,b
  3636  000CAE  A0D8               	btfss	status,0,c
  3637  000CB0  07B2               	decf	(dtoa@w+1)& (0+255),f,b
  3638                           
  3639                           ; BSR set to: 0
  3640                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 304:         n = n / 10;
  3641  000CB2  C0B5  F080         	movff	dtoa@n,___aodiv@dividend
  3642  000CB6  C0B6  F081         	movff	dtoa@n+1,___aodiv@dividend+1
  3643  000CBA  C0B7  F082         	movff	dtoa@n+2,___aodiv@dividend+2
  3644  000CBE  C0B8  F083         	movff	dtoa@n+3,___aodiv@dividend+3
  3645  000CC2  C0B9  F084         	movff	dtoa@n+4,___aodiv@dividend+4
  3646  000CC6  C0BA  F085         	movff	dtoa@n+5,___aodiv@dividend+5
  3647  000CCA  C0BB  F086         	movff	dtoa@n+6,___aodiv@dividend+6
  3648  000CCE  C0BC  F087         	movff	dtoa@n+7,___aodiv@dividend+7
  3649  000CD2  0E0A               	movlw	10
  3650  000CD4  6F88               	movwf	___aodiv@divisor& (0+255),b
  3651  000CD6  0E00               	movlw	0
  3652  000CD8  6F89               	movwf	(___aodiv@divisor+1)& (0+255),b
  3653  000CDA  0E00               	movlw	0
  3654  000CDC  6F8A               	movwf	(___aodiv@divisor+2)& (0+255),b
  3655  000CDE  0E00               	movlw	0
  3656  000CE0  6F8B               	movwf	(___aodiv@divisor+3)& (0+255),b
  3657  000CE2  0E00               	movlw	0
  3658  000CE4  6F8C               	movwf	(___aodiv@divisor+4)& (0+255),b
  3659  000CE6  0E00               	movlw	0
  3660  000CE8  6F8D               	movwf	(___aodiv@divisor+5)& (0+255),b
  3661  000CEA  0E00               	movlw	0
  3662  000CEC  6F8E               	movwf	(___aodiv@divisor+6)& (0+255),b
  3663  000CEE  0E00               	movlw	0
  3664  000CF0  6F8F               	movwf	(___aodiv@divisor+7)& (0+255),b
  3665  000CF2  EC71  F00A         	call	___aodiv	;wreg free
  3666  000CF6  C080  F0B5         	movff	?___aodiv,dtoa@n
  3667  000CFA  C081  F0B6         	movff	?___aodiv+1,dtoa@n+1
  3668  000CFE  C082  F0B7         	movff	?___aodiv+2,dtoa@n+2
  3669  000D02  C083  F0B8         	movff	?___aodiv+3,dtoa@n+3
  3670  000D06  C084  F0B9         	movff	?___aodiv+4,dtoa@n+4
  3671  000D0A  C085  F0BA         	movff	?___aodiv+5,dtoa@n+5
  3672  000D0E  C086  F0BB         	movff	?___aodiv+6,dtoa@n+6
  3673  000D12  C087  F0BC         	movff	?___aodiv+7,dtoa@n+7
  3674  000D16                     l3187:
  3675  000D16  FFFF               	dw	65535	; assembler added errata NOP
  3676                           
  3677                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  3678  000D18  0100               	movlb	0	; () banked
  3679  000D1A  BFBE               	btfsc	(dtoa@i+1)& (0+255),7,b
  3680  000D1C  D020               	goto	u2450
  3681  000D1E  51BE               	movf	(dtoa@i+1)& (0+255),w,b
  3682  000D20  E103               	bnz	u2410
  3683  000D22  05BD               	decf	dtoa@i& (0+255),w,b
  3684  000D24  A0D8               	btfss	status,0,c
  3685  000D26  D01B               	goto	u2450
  3686  000D28                     u2410:
  3687                           
  3688                           ; BSR set to: 0
  3689  000D28  51B5               	movf	dtoa@n& (0+255),w,b
  3690  000D2A  11B6               	iorwf	(dtoa@n+1)& (0+255),w,b
  3691  000D2C  11B7               	iorwf	(dtoa@n+2)& (0+255),w,b
  3692  000D2E  11B8               	iorwf	(dtoa@n+3)& (0+255),w,b
  3693  000D30  11B9               	iorwf	(dtoa@n+4)& (0+255),w,b
  3694  000D32  11BA               	iorwf	(dtoa@n+5)& (0+255),w,b
  3695  000D34  11BB               	iorwf	(dtoa@n+6)& (0+255),w,b
  3696  000D36  11BC               	iorwf	(dtoa@n+7)& (0+255),w,b
  3697  000D38  A4D8               	btfss	status,2,c
  3698  000D3A  D76F               	goto	l3177
  3699                           
  3700                           ; BSR set to: 0
  3701  000D3C  BFB0               	btfsc	(dtoa@p+1)& (0+255),7,b
  3702  000D3E  D005               	goto	u2430
  3703  000D40  51B0               	movf	(dtoa@p+1)& (0+255),w,b
  3704  000D42  E102               	bnz	u2431
  3705  000D44  05AF               	decf	dtoa@p& (0+255),w,b
  3706  000D46  B0D8               	btfsc	status,0,c
  3707  000D48                     u2431:
  3708  000D48  D768               	goto	l3177
  3709  000D4A                     u2430:
  3710  000D4A  FFFF               	dw	65535	; assembler added errata NOP
  3711                           
  3712                           ; BSR set to: 0
  3713  000D4C  BFB2               	btfsc	(dtoa@w+1)& (0+255),7,b
  3714  000D4E  D007               	goto	u2450
  3715  000D50  51B2               	movf	(dtoa@w+1)& (0+255),w,b
  3716  000D52  E103               	bnz	u2440
  3717  000D54  05B1               	decf	dtoa@w& (0+255),w,b
  3718  000D56  A0D8               	btfss	status,0,c
  3719  000D58  D002               	goto	u2450
  3720  000D5A                     u2440:
  3721                           
  3722                           ; BSR set to: 0
  3723  000D5A  B3F8               	btfsc	_flags& (0+255),1,b
  3724  000D5C  D75E               	goto	l3177
  3725  000D5E                     u2450:
  3726  000D5E  FFFF               	dw	65535	; assembler added errata NOP
  3727                           
  3728                           ; BSR set to: 0
  3729                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 308:     if (s || (flags & (1
      +                           << 2))) {
  3730  000D60  51B3               	movf	dtoa@s& (0+255),w,b
  3731  000D62  11B4               	iorwf	(dtoa@s+1)& (0+255),w,b
  3732  000D64  A4D8               	btfss	status,2,c
  3733  000D66  D002               	goto	u2470
  3734                           
  3735                           ; BSR set to: 0
  3736  000D68  A5F8               	btfss	_flags& (0+255),2,b
  3737  000D6A  D01A               	goto	l3211
  3738  000D6C                     u2470:
  3739  000D6C  FFFF               	dw	65535	; assembler added errata NOP
  3740                           
  3741                           ; BSR set to: 0
  3742                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 309:         --i;
  3743  000D6E  07BD               	decf	dtoa@i& (0+255),f,b
  3744  000D70  A0D8               	btfss	status,0,c
  3745  000D72  07BE               	decf	(dtoa@i+1)& (0+255),f,b
  3746                           
  3747                           ; BSR set to: 0
  3748                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 310:         dbuf[i] = s ? '-
      +                          ' : '+';
  3749  000D74  51B3               	movf	dtoa@s& (0+255),w,b
  3750  000D76  11B4               	iorwf	(dtoa@s+1)& (0+255),w,b
  3751  000D78  A4D8               	btfss	status,2,c
  3752  000D7A  D004               	goto	l3207
  3753                           
  3754                           ; BSR set to: 0
  3755  000D7C  0E00               	movlw	0
  3756  000D7E  6FAE               	movwf	(_dtoa$1113+1)& (0+255),b
  3757  000D80  0E2B               	movlw	43
  3758  000D82  D004               	goto	L11
  3759  000D84                     l3207:
  3760  000D84  FFFF               	dw	65535	; assembler added errata NOP
  3761                           
  3762                           ; BSR set to: 0
  3763  000D86  0E00               	movlw	0
  3764  000D88  6FAE               	movwf	(_dtoa$1113+1)& (0+255),b
  3765  000D8A  0E2D               	movlw	45
  3766  000D8C                     L11:
  3767  000D8C  FFFF               	dw	65535	; assembler added errata NOP
  3768  000D8E  6FAD               	movwf	_dtoa$1113& (0+255),b
  3769                           
  3770                           ; BSR set to: 0
  3771  000D90  0E07               	movlw	low _dbuf
  3772  000D92  25BD               	addwf	dtoa@i& (0+255),w,b
  3773  000D94  6ED9               	movwf	fsr2l,c
  3774  000D96  0E01               	movlw	high _dbuf
  3775  000D98  21BE               	addwfc	(dtoa@i+1)& (0+255),w,b
  3776  000D9A  6EDA               	movwf	fsr2h,c
  3777  000D9C  C0AD  FFDF         	movff	_dtoa$1113,indf2
  3778  000DA0                     l3211:
  3779  000DA0  FFFF               	dw	65535	; assembler added errata NOP
  3780                           
  3781                           ; BSR set to: 0
  3782                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 314:     return pad(fp, &dbuf
      +                          [i], w);
  3783  000DA2  C09B  F090         	movff	dtoa@fp,pad@fp
  3784  000DA6  C09C  F091         	movff	dtoa@fp+1,pad@fp+1
  3785  000DAA  0E07               	movlw	low _dbuf
  3786  000DAC  25BD               	addwf	dtoa@i& (0+255),w,b
  3787  000DAE  6F92               	movwf	pad@buf& (0+255),b
  3788  000DB0  0E01               	movlw	high _dbuf
  3789  000DB2  21BE               	addwfc	(dtoa@i+1)& (0+255),w,b
  3790  000DB4  6F93               	movwf	(pad@buf+1)& (0+255),b
  3791  000DB6  C0B1  F094         	movff	dtoa@w,pad@p
  3792  000DBA  C0B2  F095         	movff	dtoa@w+1,pad@p+1
  3793  000DBE  EC80  F00E         	call	_pad	;wreg free
  3794  000DC2  C090  F09B         	movff	?_pad,?_dtoa
  3795  000DC6  C091  F09C         	movff	?_pad+1,?_dtoa+1
  3796  000DCA  0012               	return		;funcret
  3797  000DCC  FFFF               	dw	65535	; errata NOP
  3798  000DCE                     __end_of_dtoa:
  3799                           	opt callstack 0
  3800                           
  3801 ;; *************** function _pad *****************
  3802 ;; Defined at:
  3803 ;;		line 72 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  3804 ;; Parameters:    Size  Location     Type
  3805 ;;  fp              2   16[BANK0 ] PTR struct _IO_FILE
  3806 ;;		 -> sprintf@f(6), 
  3807 ;;  buf             2   18[BANK0 ] PTR unsigned char 
  3808 ;;		 -> dbuf(32), 
  3809 ;;  p               2   20[BANK0 ] int 
  3810 ;; Auto vars:     Size  Location     Type
  3811 ;;  w               2   25[BANK0 ] int 
  3812 ;;  i               2   23[BANK0 ] int 
  3813 ;; Return value:  Size  Location     Type
  3814 ;;                  2   16[BANK0 ] int 
  3815 ;; Registers used:
  3816 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3817 ;; Tracked objects:
  3818 ;;		On entry : 0/0
  3819 ;;		On exit  : 0/0
  3820 ;;		Unchanged: 0/0
  3821 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3822 ;;      Params:         0       6       0       0       0       0       0
  3823 ;;      Locals:         0       4       0       0       0       0       0
  3824 ;;      Temps:          0       1       0       0       0       0       0
  3825 ;;      Totals:         0      11       0       0       0       0       0
  3826 ;;Total ram usage:       11 bytes
  3827 ;; Hardware stack levels used:    1
  3828 ;; Hardware stack levels required when called:   13
  3829 ;; This function calls:
  3830 ;;		_fputc
  3831 ;;		_fputs
  3832 ;;		_strlen
  3833 ;; This function is called by:
  3834 ;;		_dtoa
  3835 ;; This function uses a non-reentrant model
  3836 ;;
  3837                           
  3838                           	psect	text14
  3839  001D00                     __ptext14:
  3840                           	opt callstack 0
  3841  001D00                     _pad:
  3842                           	opt callstack 0
  3843  001D00  FFFF               	dw	65535	; assembler added errata NOP
  3844                           
  3845                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 72: static int pad(FILE *fp, 
      +                          char *buf, int p);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 73: {;/opt/m
      +                          icrochip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 74:     int i, w;;/opt/microchip/xc8
      +                          /v2.05/pic/sources/c99/common/doprnt.c: 77:     if (flags & (1 << 0)) {
  3846                           
  3847                           ;incstack = 0
  3848  001D02  0100               	movlb	0	; () banked
  3849  001D04  A1F8               	btfss	_flags& (0+255),0,b
  3850  001D06  D00A               	goto	l3011
  3851                           
  3852                           ; BSR set to: 0
  3853                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 78:         fputs((const char
      +                           *)buf, fp);
  3854  001D08  C092  F089         	movff	pad@buf,fputs@s
  3855  001D0C  C093  F08A         	movff	pad@buf+1,fputs@s+1
  3856  001D10  C090  F08B         	movff	pad@fp,fputs@fp
  3857  001D14  C091  F08C         	movff	pad@fp+1,fputs@fp+1
  3858  001D18  EC13  F014         	call	_fputs	;wreg free
  3859  001D1C                     l3011:
  3860  001D1C  FFFF               	dw	65535	; assembler added errata NOP
  3861                           
  3862                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 82:     w = (p < 0) ? 0 : p;
  3863  001D1E  0100               	movlb	0	; () banked
  3864  001D20  BF95               	btfsc	(pad@p+1)& (0+255),7,b
  3865  001D22  D005               	goto	l3015
  3866                           
  3867                           ; BSR set to: 0
  3868  001D24  C094  F099         	movff	pad@p,pad@w
  3869  001D28  C095  F09A         	movff	pad@p+1,pad@w+1
  3870  001D2C  D005               	goto	l600
  3871  001D2E                     l3015:
  3872  001D2E  FFFF               	dw	65535	; assembler added errata NOP
  3873                           
  3874                           ; BSR set to: 0
  3875  001D30  0E00               	movlw	0
  3876  001D32  6F9A               	movwf	(pad@w+1)& (0+255),b
  3877  001D34  0E00               	movlw	0
  3878  001D36  6F99               	movwf	pad@w& (0+255),b
  3879  001D38                     l600:
  3880  001D38  FFFF               	dw	65535	; assembler added errata NOP
  3881                           
  3882                           ; BSR set to: 0
  3883                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 83:     i = 0;
  3884  001D3A  0E00               	movlw	0
  3885  001D3C  6F98               	movwf	(pad@i+1)& (0+255),b
  3886  001D3E  0E00               	movlw	0
  3887  001D40  6F97               	movwf	pad@i& (0+255),b
  3888                           
  3889                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
  3890  001D42  D00E               	goto	l3021
  3891  001D44                     l3017:
  3892  001D44  FFFF               	dw	65535	; assembler added errata NOP
  3893                           
  3894                           ; BSR set to: 0
  3895                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 85:         fputc(' ', fp);
  3896  001D46  0E00               	movlw	0
  3897  001D48  6F81               	movwf	(fputc@c+1)& (0+255),b
  3898  001D4A  0E20               	movlw	32
  3899  001D4C  6F80               	movwf	fputc@c& (0+255),b
  3900  001D4E  C090  F082         	movff	pad@fp,fputc@fp
  3901  001D52  C091  F083         	movff	pad@fp+1,fputc@fp+1
  3902  001D56  ECD7  F00E         	call	_fputc	;wreg free
  3903                           
  3904                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 86:         ++i;
  3905  001D5A  0100               	movlb	0	; () banked
  3906  001D5C  4B97               	infsnz	pad@i& (0+255),f,b
  3907  001D5E  2B98               	incf	(pad@i+1)& (0+255),f,b
  3908  001D60                     l3021:
  3909  001D60  FFFF               	dw	65535	; assembler added errata NOP
  3910                           
  3911                           ; BSR set to: 0
  3912                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
  3913  001D62  5199               	movf	pad@w& (0+255),w,b
  3914  001D64  5D97               	subwf	pad@i& (0+255),w,b
  3915  001D66  5198               	movf	(pad@i+1)& (0+255),w,b
  3916  001D68  0A80               	xorlw	128
  3917  001D6A  6F96               	movwf	??_pad& (0+255),b
  3918  001D6C  519A               	movf	(pad@w+1)& (0+255),w,b
  3919  001D6E  0A80               	xorlw	128
  3920  001D70  5996               	subwfb	??_pad& (0+255),w,b
  3921  001D72  A0D8               	btfss	status,0,c
  3922  001D74  D7E7               	goto	l3017
  3923                           
  3924                           ; BSR set to: 0
  3925                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 90:     if (!(flags & (1 << 0
      +                          ))) {
  3926  001D76  B1F8               	btfsc	_flags& (0+255),0,b
  3927  001D78  D00A               	goto	l3025
  3928                           
  3929                           ; BSR set to: 0
  3930                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 91:         fputs((const char
      +                           *)buf, fp);
  3931  001D7A  C092  F089         	movff	pad@buf,fputs@s
  3932  001D7E  C093  F08A         	movff	pad@buf+1,fputs@s+1
  3933  001D82  C090  F08B         	movff	pad@fp,fputs@fp
  3934  001D86  C091  F08C         	movff	pad@fp+1,fputs@fp+1
  3935  001D8A  EC13  F014         	call	_fputs	;wreg free
  3936  001D8E                     l3025:
  3937  001D8E  FFFF               	dw	65535	; assembler added errata NOP
  3938                           
  3939                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 94:     return strlen(buf) + 
      +                          w;
  3940  001D90  C092  F080         	movff	pad@buf,strlen@s
  3941  001D94  C093  F081         	movff	pad@buf+1,strlen@s+1
  3942  001D98  EC8E  F015         	call	_strlen	;wreg free
  3943  001D9C  0100               	movlb	0	; () banked
  3944  001D9E  5199               	movf	pad@w& (0+255),w,b
  3945  001DA0  2580               	addwf	?_strlen& (0+255),w,b
  3946  001DA2  6F90               	movwf	?_pad& (0+255),b
  3947  001DA4  519A               	movf	(pad@w+1)& (0+255),w,b
  3948  001DA6  2181               	addwfc	(?_strlen+1)& (0+255),w,b
  3949  001DA8  6F91               	movwf	(?_pad+1)& (0+255),b
  3950                           
  3951                           ; BSR set to: 0
  3952  001DAA  0012               	return		;funcret
  3953  001DAC  FFFF               	dw	65535	; errata NOP
  3954  001DAE                     __end_of_pad:
  3955                           	opt callstack 0
  3956                           
  3957 ;; *************** function _strlen *****************
  3958 ;; Defined at:
  3959 ;;		line 12 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/strlen.c"
  3960 ;; Parameters:    Size  Location     Type
  3961 ;;  s               2    0[BANK0 ] PTR const unsigned char 
  3962 ;;		 -> dbuf(32), 
  3963 ;; Auto vars:     Size  Location     Type
  3964 ;;  a               2    2[BANK0 ] PTR const unsigned char 
  3965 ;;		 -> dbuf(32), 
  3966 ;; Return value:  Size  Location     Type
  3967 ;;                  2    0[BANK0 ] unsigned int 
  3968 ;; Registers used:
  3969 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3970 ;; Tracked objects:
  3971 ;;		On entry : 0/0
  3972 ;;		On exit  : 0/0
  3973 ;;		Unchanged: 0/0
  3974 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3975 ;;      Params:         0       2       0       0       0       0       0
  3976 ;;      Locals:         0       2       0       0       0       0       0
  3977 ;;      Temps:          0       0       0       0       0       0       0
  3978 ;;      Totals:         0       4       0       0       0       0       0
  3979 ;;Total ram usage:        4 bytes
  3980 ;; Hardware stack levels used:    1
  3981 ;; Hardware stack levels required when called:   10
  3982 ;; This function calls:
  3983 ;;		Nothing
  3984 ;; This function is called by:
  3985 ;;		_pad
  3986 ;; This function uses a non-reentrant model
  3987 ;;
  3988                           
  3989                           	psect	text15
  3990  002B1C                     __ptext15:
  3991                           	opt callstack 0
  3992  002B1C                     _strlen:
  3993                           	opt callstack 0
  3994  002B1C  FFFF               	dw	65535	; assembler added errata NOP
  3995                           
  3996                           ; BSR set to: 0
  3997                           ;incstack = 0
  3998  002B1E  C080  F082         	movff	strlen@s,strlen@a
  3999  002B22  C081  F083         	movff	strlen@s+1,strlen@a+1
  4000  002B26  D004               	goto	l2987
  4001  002B28                     l2985:
  4002  002B28  FFFF               	dw	65535	; assembler added errata NOP
  4003  002B2A  0100               	movlb	0	; () banked
  4004  002B2C  4B80               	infsnz	strlen@s& (0+255),f,b
  4005  002B2E  2B81               	incf	(strlen@s+1)& (0+255),f,b
  4006  002B30                     l2987:
  4007  002B30  FFFF               	dw	65535	; assembler added errata NOP
  4008  002B32  C080  FFD9         	movff	strlen@s,fsr2l
  4009  002B36  C081  FFDA         	movff	strlen@s+1,fsr2h
  4010  002B3A  50DF               	movf	indf2,w,c
  4011  002B3C  A4D8               	btfss	status,2,c
  4012  002B3E  D7F4               	goto	l2985
  4013  002B40  0100               	movlb	0	; () banked
  4014  002B42  5182               	movf	strlen@a& (0+255),w,b
  4015  002B44  5D80               	subwf	strlen@s& (0+255),w,b
  4016  002B46  6F80               	movwf	?_strlen& (0+255),b
  4017  002B48  5183               	movf	(strlen@a+1)& (0+255),w,b
  4018  002B4A  5981               	subwfb	(strlen@s+1)& (0+255),w,b
  4019  002B4C  6F81               	movwf	(?_strlen+1)& (0+255),b
  4020                           
  4021                           ; BSR set to: 0
  4022  002B4E  0012               	return		;funcret
  4023  002B50  FFFF               	dw	65535	; errata NOP
  4024  002B52                     __end_of_strlen:
  4025                           	opt callstack 0
  4026                           
  4027 ;; *************** function _fputs *****************
  4028 ;; Defined at:
  4029 ;;		line 8 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/nf_fputs.c"
  4030 ;; Parameters:    Size  Location     Type
  4031 ;;  s               2    9[BANK0 ] PTR const unsigned char 
  4032 ;;		 -> dbuf(32), 
  4033 ;;  fp              2   11[BANK0 ] PTR struct _IO_FILE
  4034 ;;		 -> sprintf@f(6), 
  4035 ;; Auto vars:     Size  Location     Type
  4036 ;;  i               2   14[BANK0 ] int 
  4037 ;;  c               1   13[BANK0 ] unsigned char 
  4038 ;; Return value:  Size  Location     Type
  4039 ;;                  2    9[BANK0 ] int 
  4040 ;; Registers used:
  4041 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4042 ;; Tracked objects:
  4043 ;;		On entry : 0/0
  4044 ;;		On exit  : 0/0
  4045 ;;		Unchanged: 0/0
  4046 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4047 ;;      Params:         0       4       0       0       0       0       0
  4048 ;;      Locals:         0       3       0       0       0       0       0
  4049 ;;      Temps:          0       0       0       0       0       0       0
  4050 ;;      Totals:         0       7       0       0       0       0       0
  4051 ;;Total ram usage:        7 bytes
  4052 ;; Hardware stack levels used:    1
  4053 ;; Hardware stack levels required when called:   12
  4054 ;; This function calls:
  4055 ;;		_fputc
  4056 ;; This function is called by:
  4057 ;;		_pad
  4058 ;; This function uses a non-reentrant model
  4059 ;;
  4060                           
  4061                           	psect	text16
  4062  002826                     __ptext16:
  4063                           	opt callstack 0
  4064  002826                     _fputs:
  4065                           	opt callstack 0
  4066  002826  FFFF               	dw	65535	; assembler added errata NOP
  4067                           
  4068                           ; BSR set to: 0
  4069                           ;incstack = 0
  4070  002828  0E00               	movlw	0
  4071  00282A  0100               	movlb	0	; () banked
  4072  00282C  6F8F               	movwf	(fputs@i+1)& (0+255),b
  4073  00282E  0E00               	movlw	0
  4074  002830  6F8E               	movwf	fputs@i& (0+255),b
  4075  002832  D00D               	goto	l2981
  4076  002834                     l2977:
  4077  002834  FFFF               	dw	65535	; assembler added errata NOP
  4078                           
  4079                           ; BSR set to: 0
  4080  002836  C08D  F080         	movff	fputs@c,fputc@c
  4081  00283A  6B81               	clrf	(fputc@c+1)& (0+255),b
  4082  00283C  C08B  F082         	movff	fputs@fp,fputc@fp
  4083  002840  C08C  F083         	movff	fputs@fp+1,fputc@fp+1
  4084  002844  ECD7  F00E         	call	_fputc	;wreg free
  4085  002848  0100               	movlb	0	; () banked
  4086  00284A  4B8E               	infsnz	fputs@i& (0+255),f,b
  4087  00284C  2B8F               	incf	(fputs@i+1)& (0+255),f,b
  4088  00284E                     l2981:
  4089  00284E  FFFF               	dw	65535	; assembler added errata NOP
  4090                           
  4091                           ; BSR set to: 0
  4092  002850  518E               	movf	fputs@i& (0+255),w,b
  4093  002852  2589               	addwf	fputs@s& (0+255),w,b
  4094  002854  6ED9               	movwf	fsr2l,c
  4095  002856  518F               	movf	(fputs@i+1)& (0+255),w,b
  4096  002858  218A               	addwfc	(fputs@s+1)& (0+255),w,b
  4097  00285A  6EDA               	movwf	fsr2h,c
  4098  00285C  50DF               	movf	indf2,w,c
  4099  00285E  6F8D               	movwf	fputs@c& (0+255),b
  4100  002860  518D               	movf	fputs@c& (0+255),w,b
  4101  002862  B4D8               	btfsc	status,2,c
  4102                           
  4103                           ; BSR set to: 0
  4104  002864  0012               	return		;funcret
  4105  002866  FFFF               	dw	65535	; assembler added errata NOP
  4106  002868  D7E5               	goto	l2977
  4107  00286A  FFFF               	dw	65535	; errata NOP
  4108  00286C                     __end_of_fputs:
  4109                           	opt callstack 0
  4110                           
  4111 ;; *************** function _fputc *****************
  4112 ;; Defined at:
  4113 ;;		line 8 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/nf_fputc.c"
  4114 ;; Parameters:    Size  Location     Type
  4115 ;;  c               2    0[BANK0 ] int 
  4116 ;;  fp              2    2[BANK0 ] PTR struct _IO_FILE
  4117 ;;		 -> sprintf@f(6), 
  4118 ;; Auto vars:     Size  Location     Type
  4119 ;;		None
  4120 ;; Return value:  Size  Location     Type
  4121 ;;                  2    0[BANK0 ] int 
  4122 ;; Registers used:
  4123 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4124 ;; Tracked objects:
  4125 ;;		On entry : 0/0
  4126 ;;		On exit  : 0/0
  4127 ;;		Unchanged: 0/0
  4128 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4129 ;;      Params:         0       4       0       0       0       0       0
  4130 ;;      Locals:         0       0       0       0       0       0       0
  4131 ;;      Temps:          0       5       0       0       0       0       0
  4132 ;;      Totals:         0       9       0       0       0       0       0
  4133 ;;Total ram usage:        9 bytes
  4134 ;; Hardware stack levels used:    1
  4135 ;; Hardware stack levels required when called:   11
  4136 ;; This function calls:
  4137 ;;		_putch
  4138 ;; This function is called by:
  4139 ;;		_pad
  4140 ;;		_vfpfcnvrt
  4141 ;;		_fputs
  4142 ;; This function uses a non-reentrant model
  4143 ;;
  4144                           
  4145                           	psect	text17
  4146  001DAE                     __ptext17:
  4147                           	opt callstack 0
  4148  001DAE                     _fputc:
  4149                           	opt callstack 0
  4150  001DAE  FFFF               	dw	65535	; assembler added errata NOP
  4151                           
  4152                           ; BSR set to: 0
  4153                           ;incstack = 0
  4154  001DB0  0100               	movlb	0	; () banked
  4155  001DB2  5182               	movf	fputc@fp& (0+255),w,b
  4156  001DB4  1183               	iorwf	(fputc@fp+1)& (0+255),w,b
  4157  001DB6  B4D8               	btfsc	status,2,c
  4158  001DB8  D004               	goto	u2010
  4159                           
  4160                           ; BSR set to: 0
  4161  001DBA  5182               	movf	fputc@fp& (0+255),w,b
  4162  001DBC  1183               	iorwf	(fputc@fp+1)& (0+255),w,b
  4163  001DBE  A4D8               	btfss	status,2,c
  4164  001DC0  D005               	goto	l2967
  4165  001DC2                     u2010:
  4166  001DC2  FFFF               	dw	65535	; assembler added errata NOP
  4167                           
  4168                           ; BSR set to: 0
  4169  001DC4  5180               	movf	fputc@c& (0+255),w,b
  4170  001DC6  EC7B  F016         	call	_putch
  4171  001DCA  D045               	goto	l1393
  4172  001DCC                     l2967:
  4173  001DCC  FFFF               	dw	65535	; assembler added errata NOP
  4174                           
  4175                           ; BSR set to: 0
  4176  001DCE  EE20 F004          	lfsr	2,4
  4177  001DD2  5182               	movf	fputc@fp& (0+255),w,b
  4178  001DD4  26D9               	addwf	fsr2l,f,c
  4179  001DD6  5183               	movf	(fputc@fp+1)& (0+255),w,b
  4180  001DD8  22DA               	addwfc	fsr2h,f,c
  4181  001DDA  50DE               	movf	postinc2,w,c
  4182  001DDC  10DE               	iorwf	postinc2,w,c
  4183  001DDE  B4D8               	btfsc	status,2,c
  4184  001DE0  D016               	goto	u2030
  4185                           
  4186                           ; BSR set to: 0
  4187  001DE2  EE20 F004          	lfsr	2,4
  4188  001DE6  5182               	movf	fputc@fp& (0+255),w,b
  4189  001DE8  26D9               	addwf	fsr2l,f,c
  4190  001DEA  5183               	movf	(fputc@fp+1)& (0+255),w,b
  4191  001DEC  22DA               	addwfc	fsr2h,f,c
  4192  001DEE  EE10 F002          	lfsr	1,2
  4193  001DF2  5182               	movf	fputc@fp& (0+255),w,b
  4194  001DF4  26E1               	addwf	fsr1l,f,c
  4195  001DF6  5183               	movf	(fputc@fp+1)& (0+255),w,b
  4196  001DF8  22E2               	addwfc	fsr1h,f,c
  4197  001DFA  50DE               	movf	postinc2,w,c
  4198  001DFC  5CE6               	subwf	postinc1,w,c
  4199  001DFE  50E6               	movf	postinc1,w,c
  4200  001E00  0A80               	xorlw	128
  4201  001E02  6F88               	movwf	(??_fputc+4)& (0+255),b
  4202  001E04  50DE               	movf	postinc2,w,c
  4203  001E06  0A80               	xorlw	128
  4204  001E08  5988               	subwfb	(??_fputc+4)& (0+255),w,b
  4205  001E0A  B0D8               	btfsc	status,0,c
  4206  001E0C  D024               	goto	l1393
  4207  001E0E                     u2030:
  4208  001E0E  FFFF               	dw	65535	; assembler added errata NOP
  4209                           
  4210                           ; BSR set to: 0
  4211  001E10  EE20 F002          	lfsr	2,2
  4212  001E14  5182               	movf	fputc@fp& (0+255),w,b
  4213  001E16  26D9               	addwf	fsr2l,f,c
  4214  001E18  5183               	movf	(fputc@fp+1)& (0+255),w,b
  4215  001E1A  22DA               	addwfc	fsr2h,f,c
  4216  001E1C  CFDE F084          	movff	postinc2,??_fputc
  4217  001E20  CFDD F085          	movff	postdec2,??_fputc+1
  4218  001E24  C082  FFD9         	movff	fputc@fp,fsr2l
  4219  001E28  C083  FFDA         	movff	fputc@fp+1,fsr2h
  4220  001E2C  CFDE F086          	movff	postinc2,??_fputc+2
  4221  001E30  CFDD F087          	movff	postdec2,??_fputc+3
  4222  001E34  5184               	movf	??_fputc& (0+255),w,b
  4223  001E36  2586               	addwf	(??_fputc+2)& (0+255),w,b
  4224  001E38  6ED9               	movwf	fsr2l,c
  4225  001E3A  5185               	movf	(??_fputc+1)& (0+255),w,b
  4226  001E3C  2187               	addwfc	(??_fputc+3)& (0+255),w,b
  4227  001E3E  6EDA               	movwf	fsr2h,c
  4228  001E40  C080  FFDF         	movff	fputc@c,indf2
  4229  001E44  EE20 F002          	lfsr	2,2
  4230  001E48  5182               	movf	fputc@fp& (0+255),w,b
  4231  001E4A  26D9               	addwf	fsr2l,f,c
  4232  001E4C  5183               	movf	(fputc@fp+1)& (0+255),w,b
  4233  001E4E  22DA               	addwfc	fsr2h,f,c
  4234  001E50  2ADE               	incf	postinc2,f,c
  4235  001E52  0E00               	movlw	0
  4236  001E54  22DD               	addwfc	postdec2,f,c
  4237  001E56                     l1393:
  4238  001E56  FFFF               	dw	65535	; assembler added errata NOP
  4239  001E58  0012               	return		;funcret
  4240  001E5A  FFFF               	dw	65535	; errata NOP
  4241  001E5C                     __end_of_fputc:
  4242                           	opt callstack 0
  4243                           
  4244 ;; *************** function _putch *****************
  4245 ;; Defined at:
  4246 ;;		line 7 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/putch.c"
  4247 ;; Parameters:    Size  Location     Type
  4248 ;;  c               1    wreg     unsigned char 
  4249 ;; Auto vars:     Size  Location     Type
  4250 ;;  c               1    0[COMRAM] unsigned char 
  4251 ;; Return value:  Size  Location     Type
  4252 ;;                  1    wreg      void 
  4253 ;; Registers used:
  4254 ;;		wreg
  4255 ;; Tracked objects:
  4256 ;;		On entry : 0/0
  4257 ;;		On exit  : 0/0
  4258 ;;		Unchanged: 0/0
  4259 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4260 ;;      Params:         0       0       0       0       0       0       0
  4261 ;;      Locals:         0       0       0       0       0       0       0
  4262 ;;      Temps:          0       0       0       0       0       0       0
  4263 ;;      Totals:         0       0       0       0       0       0       0
  4264 ;;Total ram usage:        0 bytes
  4265 ;; Hardware stack levels used:    1
  4266 ;; Hardware stack levels required when called:   10
  4267 ;; This function calls:
  4268 ;;		Nothing
  4269 ;; This function is called by:
  4270 ;;		_fputc
  4271 ;; This function uses a non-reentrant model
  4272 ;;
  4273                           
  4274                           	psect	text18
  4275  002CF6                     __ptext18:
  4276                           	opt callstack 0
  4277  002CF6                     _putch:
  4278                           	opt callstack 0
  4279  002CF6  FFFF               	dw	65535	; assembler added errata NOP
  4280                           
  4281                           ;incstack = 0
  4282  002CF8  0012               	return		;funcret
  4283  002CFA  FFFF               	dw	65535	; errata NOP
  4284  002CFC                     __end_of_putch:
  4285                           	opt callstack 0
  4286                           
  4287 ;; *************** function _abs *****************
  4288 ;; Defined at:
  4289 ;;		line 1 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/abs.c"
  4290 ;; Parameters:    Size  Location     Type
  4291 ;;  a               2   18[BANK0 ] int 
  4292 ;; Auto vars:     Size  Location     Type
  4293 ;;		None
  4294 ;; Return value:  Size  Location     Type
  4295 ;;                  2   18[BANK0 ] int 
  4296 ;; Registers used:
  4297 ;;		wreg, status,2, status,0
  4298 ;; Tracked objects:
  4299 ;;		On entry : 0/0
  4300 ;;		On exit  : 0/0
  4301 ;;		Unchanged: 0/0
  4302 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4303 ;;      Params:         0       2       0       0       0       0       0
  4304 ;;      Locals:         0       0       0       0       0       0       0
  4305 ;;      Temps:          0       2       0       0       0       0       0
  4306 ;;      Totals:         0       4       0       0       0       0       0
  4307 ;;Total ram usage:        4 bytes
  4308 ;; Hardware stack levels used:    1
  4309 ;; Hardware stack levels required when called:   10
  4310 ;; This function calls:
  4311 ;;		Nothing
  4312 ;; This function is called by:
  4313 ;;		_dtoa
  4314 ;; This function uses a non-reentrant model
  4315 ;;
  4316                           
  4317                           	psect	text19
  4318  0029BE                     __ptext19:
  4319                           	opt callstack 0
  4320  0029BE                     _abs:
  4321                           	opt callstack 0
  4322  0029BE  FFFF               	dw	65535	; assembler added errata NOP
  4323                           
  4324                           ;incstack = 0
  4325  0029C0  0100               	movlb	0	; () banked
  4326  0029C2  BF93               	btfsc	(abs@a+1)& (0+255),7,b
  4327  0029C4  D005               	goto	u2140
  4328  0029C6  5193               	movf	(abs@a+1)& (0+255),w,b
  4329  0029C8  E111               	bnz	l1333
  4330  0029CA  0592               	decf	abs@a& (0+255),w,b
  4331  0029CC  B0D8               	btfsc	status,0,c
  4332  0029CE  D00E               	goto	l1333
  4333  0029D0                     u2140:
  4334  0029D0  FFFF               	dw	65535	; assembler added errata NOP
  4335                           
  4336                           ; BSR set to: 0
  4337  0029D2  C092  F094         	movff	abs@a,??_abs
  4338  0029D6  C093  F095         	movff	abs@a+1,??_abs+1
  4339  0029DA  1F94               	comf	??_abs& (0+255),f,b
  4340  0029DC  1F95               	comf	(??_abs+1)& (0+255),f,b
  4341  0029DE  4B94               	infsnz	??_abs& (0+255),f,b
  4342  0029E0  2B95               	incf	(??_abs+1)& (0+255),f,b
  4343  0029E2  C094  F092         	movff	??_abs,?_abs
  4344  0029E6  C095  F093         	movff	??_abs+1,?_abs+1
  4345  0029EA  D005               	goto	l1336
  4346  0029EC                     l1333:
  4347  0029EC  FFFF               	dw	65535	; assembler added errata NOP
  4348                           
  4349                           ; BSR set to: 0
  4350  0029EE  C092  F092         	movff	abs@a,?_abs
  4351  0029F2  C093  F093         	movff	abs@a+1,?_abs+1
  4352  0029F6                     l1336:
  4353  0029F6  FFFF               	dw	65535	; assembler added errata NOP
  4354                           
  4355                           ; BSR set to: 0
  4356  0029F8  0012               	return		;funcret
  4357  0029FA  FFFF               	dw	65535	; errata NOP
  4358  0029FC                     __end_of_abs:
  4359                           	opt callstack 0
  4360                           
  4361 ;; *************** function ___aomod *****************
  4362 ;; Defined at:
  4363 ;;		line 9 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/aomod.c"
  4364 ;; Parameters:    Size  Location     Type
  4365 ;;  dividend        8    0[BANK0 ] long long 
  4366 ;;  divisor         8    8[BANK0 ] long long 
  4367 ;; Auto vars:     Size  Location     Type
  4368 ;;  sign            1   17[BANK0 ] unsigned char 
  4369 ;;  counter         1   16[BANK0 ] unsigned char 
  4370 ;; Return value:  Size  Location     Type
  4371 ;;                  8    0[BANK0 ] long long 
  4372 ;; Registers used:
  4373 ;;		wreg, status,2, status,0
  4374 ;; Tracked objects:
  4375 ;;		On entry : 0/0
  4376 ;;		On exit  : 0/0
  4377 ;;		Unchanged: 0/0
  4378 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4379 ;;      Params:         0      16       0       0       0       0       0
  4380 ;;      Locals:         0       2       0       0       0       0       0
  4381 ;;      Temps:          0       0       0       0       0       0       0
  4382 ;;      Totals:         0      18       0       0       0       0       0
  4383 ;;Total ram usage:       18 bytes
  4384 ;; Hardware stack levels used:    1
  4385 ;; Hardware stack levels required when called:   10
  4386 ;; This function calls:
  4387 ;;		Nothing
  4388 ;; This function is called by:
  4389 ;;		_dtoa
  4390 ;; This function uses a non-reentrant model
  4391 ;;
  4392                           
  4393                           	psect	text20
  4394  00179C                     __ptext20:
  4395                           	opt callstack 0
  4396  00179C                     ___aomod:
  4397                           	opt callstack 0
  4398  00179C  FFFF               	dw	65535	; assembler added errata NOP
  4399                           
  4400                           ; BSR set to: 0
  4401                           ;incstack = 0
  4402  00179E  0E00               	movlw	0
  4403  0017A0  0100               	movlb	0	; () banked
  4404  0017A2  6F91               	movwf	___aomod@sign& (0+255),b
  4405                           
  4406                           ; BSR set to: 0
  4407  0017A4  AF87               	btfss	(___aomod@dividend+7)& (0+255),7,b
  4408  0017A6  D012               	goto	l3095
  4409                           
  4410                           ; BSR set to: 0
  4411  0017A8  1F87               	comf	(___aomod@dividend+7)& (0+255),f,b
  4412  0017AA  1F86               	comf	(___aomod@dividend+6)& (0+255),f,b
  4413  0017AC  1F85               	comf	(___aomod@dividend+5)& (0+255),f,b
  4414  0017AE  1F84               	comf	(___aomod@dividend+4)& (0+255),f,b
  4415  0017B0  1F83               	comf	(___aomod@dividend+3)& (0+255),f,b
  4416  0017B2  1F82               	comf	(___aomod@dividend+2)& (0+255),f,b
  4417  0017B4  1F81               	comf	(___aomod@dividend+1)& (0+255),f,b
  4418  0017B6  6D80               	negf	___aomod@dividend& (0+255),b
  4419  0017B8  0E00               	movlw	0
  4420  0017BA  2381               	addwfc	(___aomod@dividend+1)& (0+255),f,b
  4421  0017BC  2382               	addwfc	(___aomod@dividend+2)& (0+255),f,b
  4422  0017BE  2383               	addwfc	(___aomod@dividend+3)& (0+255),f,b
  4423  0017C0  2384               	addwfc	(___aomod@dividend+4)& (0+255),f,b
  4424  0017C2  2385               	addwfc	(___aomod@dividend+5)& (0+255),f,b
  4425  0017C4  2386               	addwfc	(___aomod@dividend+6)& (0+255),f,b
  4426  0017C6  2387               	addwfc	(___aomod@dividend+7)& (0+255),f,b
  4427                           
  4428                           ; BSR set to: 0
  4429  0017C8  0E01               	movlw	1
  4430  0017CA  6F91               	movwf	___aomod@sign& (0+255),b
  4431  0017CC                     l3095:
  4432  0017CC  FFFF               	dw	65535	; assembler added errata NOP
  4433                           
  4434                           ; BSR set to: 0
  4435  0017CE  AF8F               	btfss	(___aomod@divisor+7)& (0+255),7,b
  4436  0017D0  D010               	goto	l3099
  4437                           
  4438                           ; BSR set to: 0
  4439  0017D2  1F8F               	comf	(___aomod@divisor+7)& (0+255),f,b
  4440  0017D4  1F8E               	comf	(___aomod@divisor+6)& (0+255),f,b
  4441  0017D6  1F8D               	comf	(___aomod@divisor+5)& (0+255),f,b
  4442  0017D8  1F8C               	comf	(___aomod@divisor+4)& (0+255),f,b
  4443  0017DA  1F8B               	comf	(___aomod@divisor+3)& (0+255),f,b
  4444  0017DC  1F8A               	comf	(___aomod@divisor+2)& (0+255),f,b
  4445  0017DE  1F89               	comf	(___aomod@divisor+1)& (0+255),f,b
  4446  0017E0  6D88               	negf	___aomod@divisor& (0+255),b
  4447  0017E2  0E00               	movlw	0
  4448  0017E4  2389               	addwfc	(___aomod@divisor+1)& (0+255),f,b
  4449  0017E6  238A               	addwfc	(___aomod@divisor+2)& (0+255),f,b
  4450  0017E8  238B               	addwfc	(___aomod@divisor+3)& (0+255),f,b
  4451  0017EA  238C               	addwfc	(___aomod@divisor+4)& (0+255),f,b
  4452  0017EC  238D               	addwfc	(___aomod@divisor+5)& (0+255),f,b
  4453  0017EE  238E               	addwfc	(___aomod@divisor+6)& (0+255),f,b
  4454  0017F0  238F               	addwfc	(___aomod@divisor+7)& (0+255),f,b
  4455  0017F2                     l3099:
  4456  0017F2  FFFF               	dw	65535	; assembler added errata NOP
  4457                           
  4458                           ; BSR set to: 0
  4459  0017F4  5188               	movf	___aomod@divisor& (0+255),w,b
  4460  0017F6  1189               	iorwf	(___aomod@divisor+1)& (0+255),w,b
  4461  0017F8  118A               	iorwf	(___aomod@divisor+2)& (0+255),w,b
  4462  0017FA  118B               	iorwf	(___aomod@divisor+3)& (0+255),w,b
  4463  0017FC  118C               	iorwf	(___aomod@divisor+4)& (0+255),w,b
  4464  0017FE  118D               	iorwf	(___aomod@divisor+5)& (0+255),w,b
  4465  001800  118E               	iorwf	(___aomod@divisor+6)& (0+255),w,b
  4466  001802  118F               	iorwf	(___aomod@divisor+7)& (0+255),w,b
  4467  001804  B4D8               	btfsc	status,2,c
  4468  001806  D040               	goto	l3115
  4469                           
  4470                           ; BSR set to: 0
  4471  001808  0E01               	movlw	1
  4472  00180A  6F90               	movwf	___aomod@counter& (0+255),b
  4473  00180C  D00B               	goto	l3105
  4474  00180E                     l3103:
  4475  00180E  FFFF               	dw	65535	; assembler added errata NOP
  4476                           
  4477                           ; BSR set to: 0
  4478  001810  90D8               	bcf	status,0,c
  4479  001812  3788               	rlcf	___aomod@divisor& (0+255),f,b
  4480  001814  3789               	rlcf	(___aomod@divisor+1)& (0+255),f,b
  4481  001816  378A               	rlcf	(___aomod@divisor+2)& (0+255),f,b
  4482  001818  378B               	rlcf	(___aomod@divisor+3)& (0+255),f,b
  4483  00181A  378C               	rlcf	(___aomod@divisor+4)& (0+255),f,b
  4484  00181C  378D               	rlcf	(___aomod@divisor+5)& (0+255),f,b
  4485  00181E  378E               	rlcf	(___aomod@divisor+6)& (0+255),f,b
  4486  001820  378F               	rlcf	(___aomod@divisor+7)& (0+255),f,b
  4487  001822  2B90               	incf	___aomod@counter& (0+255),f,b
  4488  001824                     l3105:
  4489  001824  FFFF               	dw	65535	; assembler added errata NOP
  4490                           
  4491                           ; BSR set to: 0
  4492  001826  AF8F               	btfss	(___aomod@divisor+7)& (0+255),7,b
  4493  001828  D7F2               	goto	l3103
  4494  00182A                     u2270:
  4495  00182A  FFFF               	dw	65535	; assembler added errata NOP
  4496                           
  4497                           ; BSR set to: 0
  4498  00182C  5188               	movf	___aomod@divisor& (0+255),w,b
  4499  00182E  5D80               	subwf	___aomod@dividend& (0+255),w,b
  4500  001830  5189               	movf	(___aomod@divisor+1)& (0+255),w,b
  4501  001832  5981               	subwfb	(___aomod@dividend+1)& (0+255),w,b
  4502  001834  518A               	movf	(___aomod@divisor+2)& (0+255),w,b
  4503  001836  5982               	subwfb	(___aomod@dividend+2)& (0+255),w,b
  4504  001838  518B               	movf	(___aomod@divisor+3)& (0+255),w,b
  4505  00183A  5983               	subwfb	(___aomod@dividend+3)& (0+255),w,b
  4506  00183C  518C               	movf	(___aomod@divisor+4)& (0+255),w,b
  4507  00183E  5984               	subwfb	(___aomod@dividend+4)& (0+255),w,b
  4508  001840  518D               	movf	(___aomod@divisor+5)& (0+255),w,b
  4509  001842  5985               	subwfb	(___aomod@dividend+5)& (0+255),w,b
  4510  001844  518E               	movf	(___aomod@divisor+6)& (0+255),w,b
  4511  001846  5986               	subwfb	(___aomod@dividend+6)& (0+255),w,b
  4512  001848  518F               	movf	(___aomod@divisor+7)& (0+255),w,b
  4513  00184A  5987               	subwfb	(___aomod@dividend+7)& (0+255),w,b
  4514  00184C  A0D8               	btfss	status,0,c
  4515  00184E  D010               	goto	l3111
  4516                           
  4517                           ; BSR set to: 0
  4518  001850  5188               	movf	___aomod@divisor& (0+255),w,b
  4519  001852  5F80               	subwf	___aomod@dividend& (0+255),f,b
  4520  001854  5189               	movf	(___aomod@divisor+1)& (0+255),w,b
  4521  001856  5B81               	subwfb	(___aomod@dividend+1)& (0+255),f,b
  4522  001858  518A               	movf	(___aomod@divisor+2)& (0+255),w,b
  4523  00185A  5B82               	subwfb	(___aomod@dividend+2)& (0+255),f,b
  4524  00185C  518B               	movf	(___aomod@divisor+3)& (0+255),w,b
  4525  00185E  5B83               	subwfb	(___aomod@dividend+3)& (0+255),f,b
  4526  001860  518C               	movf	(___aomod@divisor+4)& (0+255),w,b
  4527  001862  5B84               	subwfb	(___aomod@dividend+4)& (0+255),f,b
  4528  001864  518D               	movf	(___aomod@divisor+5)& (0+255),w,b
  4529  001866  5B85               	subwfb	(___aomod@dividend+5)& (0+255),f,b
  4530  001868  518E               	movf	(___aomod@divisor+6)& (0+255),w,b
  4531  00186A  5B86               	subwfb	(___aomod@dividend+6)& (0+255),f,b
  4532  00186C  518F               	movf	(___aomod@divisor+7)& (0+255),w,b
  4533  00186E  5B87               	subwfb	(___aomod@dividend+7)& (0+255),f,b
  4534  001870                     l3111:
  4535  001870  FFFF               	dw	65535	; assembler added errata NOP
  4536                           
  4537                           ; BSR set to: 0
  4538  001872  90D8               	bcf	status,0,c
  4539  001874  338F               	rrcf	(___aomod@divisor+7)& (0+255),f,b
  4540  001876  338E               	rrcf	(___aomod@divisor+6)& (0+255),f,b
  4541  001878  338D               	rrcf	(___aomod@divisor+5)& (0+255),f,b
  4542  00187A  338C               	rrcf	(___aomod@divisor+4)& (0+255),f,b
  4543  00187C  338B               	rrcf	(___aomod@divisor+3)& (0+255),f,b
  4544  00187E  338A               	rrcf	(___aomod@divisor+2)& (0+255),f,b
  4545  001880  3389               	rrcf	(___aomod@divisor+1)& (0+255),f,b
  4546  001882  3388               	rrcf	___aomod@divisor& (0+255),f,b
  4547                           
  4548                           ; BSR set to: 0
  4549  001884  2F90               	decfsz	___aomod@counter& (0+255),f,b
  4550  001886  D7D1               	goto	u2270
  4551  001888                     l3115:
  4552  001888  FFFF               	dw	65535	; assembler added errata NOP
  4553                           
  4554                           ; BSR set to: 0
  4555  00188A  5191               	movf	___aomod@sign& (0+255),w,b
  4556  00188C  B4D8               	btfsc	status,2,c
  4557  00188E  D010               	goto	l3119
  4558                           
  4559                           ; BSR set to: 0
  4560  001890  1F87               	comf	(___aomod@dividend+7)& (0+255),f,b
  4561  001892  1F86               	comf	(___aomod@dividend+6)& (0+255),f,b
  4562  001894  1F85               	comf	(___aomod@dividend+5)& (0+255),f,b
  4563  001896  1F84               	comf	(___aomod@dividend+4)& (0+255),f,b
  4564  001898  1F83               	comf	(___aomod@dividend+3)& (0+255),f,b
  4565  00189A  1F82               	comf	(___aomod@dividend+2)& (0+255),f,b
  4566  00189C  1F81               	comf	(___aomod@dividend+1)& (0+255),f,b
  4567  00189E  6D80               	negf	___aomod@dividend& (0+255),b
  4568  0018A0  0E00               	movlw	0
  4569  0018A2  2381               	addwfc	(___aomod@dividend+1)& (0+255),f,b
  4570  0018A4  2382               	addwfc	(___aomod@dividend+2)& (0+255),f,b
  4571  0018A6  2383               	addwfc	(___aomod@dividend+3)& (0+255),f,b
  4572  0018A8  2384               	addwfc	(___aomod@dividend+4)& (0+255),f,b
  4573  0018AA  2385               	addwfc	(___aomod@dividend+5)& (0+255),f,b
  4574  0018AC  2386               	addwfc	(___aomod@dividend+6)& (0+255),f,b
  4575  0018AE  2387               	addwfc	(___aomod@dividend+7)& (0+255),f,b
  4576  0018B0                     l3119:
  4577  0018B0  FFFF               	dw	65535	; assembler added errata NOP
  4578                           
  4579                           ; BSR set to: 0
  4580  0018B2  C080  F080         	movff	___aomod@dividend,?___aomod
  4581  0018B6  C081  F081         	movff	___aomod@dividend+1,?___aomod+1
  4582  0018BA  C082  F082         	movff	___aomod@dividend+2,?___aomod+2
  4583  0018BE  C083  F083         	movff	___aomod@dividend+3,?___aomod+3
  4584  0018C2  C084  F084         	movff	___aomod@dividend+4,?___aomod+4
  4585  0018C6  C085  F085         	movff	___aomod@dividend+5,?___aomod+5
  4586  0018CA  C086  F086         	movff	___aomod@dividend+6,?___aomod+6
  4587  0018CE  C087  F087         	movff	___aomod@dividend+7,?___aomod+7
  4588                           
  4589                           ; BSR set to: 0
  4590  0018D2  0012               	return		;funcret
  4591  0018D4  FFFF               	dw	65535	; errata NOP
  4592  0018D6                     __end_of___aomod:
  4593                           	opt callstack 0
  4594                           
  4595 ;; *************** function ___aodiv *****************
  4596 ;; Defined at:
  4597 ;;		line 9 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/aodiv.c"
  4598 ;; Parameters:    Size  Location     Type
  4599 ;;  dividend        8    0[BANK0 ] long long 
  4600 ;;  divisor         8    8[BANK0 ] long long 
  4601 ;; Auto vars:     Size  Location     Type
  4602 ;;  quotient        8   18[BANK0 ] long long 
  4603 ;;  sign            1   17[BANK0 ] unsigned char 
  4604 ;;  counter         1   16[BANK0 ] unsigned char 
  4605 ;; Return value:  Size  Location     Type
  4606 ;;                  8    0[BANK0 ] long long 
  4607 ;; Registers used:
  4608 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4609 ;; Tracked objects:
  4610 ;;		On entry : 0/0
  4611 ;;		On exit  : 0/0
  4612 ;;		Unchanged: 0/0
  4613 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4614 ;;      Params:         0      16       0       0       0       0       0
  4615 ;;      Locals:         0      10       0       0       0       0       0
  4616 ;;      Temps:          0       0       0       0       0       0       0
  4617 ;;      Totals:         0      26       0       0       0       0       0
  4618 ;;Total ram usage:       26 bytes
  4619 ;; Hardware stack levels used:    1
  4620 ;; Hardware stack levels required when called:   10
  4621 ;; This function calls:
  4622 ;;		Nothing
  4623 ;; This function is called by:
  4624 ;;		_dtoa
  4625 ;; This function uses a non-reentrant model
  4626 ;;
  4627                           
  4628                           	psect	text21
  4629  0014E2                     __ptext21:
  4630                           	opt callstack 0
  4631  0014E2                     ___aodiv:
  4632                           	opt callstack 0
  4633  0014E2  FFFF               	dw	65535	; assembler added errata NOP
  4634                           
  4635                           ; BSR set to: 0
  4636                           ;incstack = 0
  4637  0014E4  0E00               	movlw	0
  4638  0014E6  0100               	movlb	0	; () banked
  4639  0014E8  6F91               	movwf	___aodiv@sign& (0+255),b
  4640                           
  4641                           ; BSR set to: 0
  4642  0014EA  AF8F               	btfss	(___aodiv@divisor+7)& (0+255),7,b
  4643  0014EC  D012               	goto	l3051
  4644                           
  4645                           ; BSR set to: 0
  4646  0014EE  1F8F               	comf	(___aodiv@divisor+7)& (0+255),f,b
  4647  0014F0  1F8E               	comf	(___aodiv@divisor+6)& (0+255),f,b
  4648  0014F2  1F8D               	comf	(___aodiv@divisor+5)& (0+255),f,b
  4649  0014F4  1F8C               	comf	(___aodiv@divisor+4)& (0+255),f,b
  4650  0014F6  1F8B               	comf	(___aodiv@divisor+3)& (0+255),f,b
  4651  0014F8  1F8A               	comf	(___aodiv@divisor+2)& (0+255),f,b
  4652  0014FA  1F89               	comf	(___aodiv@divisor+1)& (0+255),f,b
  4653  0014FC  6D88               	negf	___aodiv@divisor& (0+255),b
  4654  0014FE  0E00               	movlw	0
  4655  001500  2389               	addwfc	(___aodiv@divisor+1)& (0+255),f,b
  4656  001502  238A               	addwfc	(___aodiv@divisor+2)& (0+255),f,b
  4657  001504  238B               	addwfc	(___aodiv@divisor+3)& (0+255),f,b
  4658  001506  238C               	addwfc	(___aodiv@divisor+4)& (0+255),f,b
  4659  001508  238D               	addwfc	(___aodiv@divisor+5)& (0+255),f,b
  4660  00150A  238E               	addwfc	(___aodiv@divisor+6)& (0+255),f,b
  4661  00150C  238F               	addwfc	(___aodiv@divisor+7)& (0+255),f,b
  4662                           
  4663                           ; BSR set to: 0
  4664  00150E  0E01               	movlw	1
  4665  001510  6F91               	movwf	___aodiv@sign& (0+255),b
  4666  001512                     l3051:
  4667  001512  FFFF               	dw	65535	; assembler added errata NOP
  4668                           
  4669                           ; BSR set to: 0
  4670  001514  AF87               	btfss	(___aodiv@dividend+7)& (0+255),7,b
  4671  001516  D012               	goto	l3057
  4672                           
  4673                           ; BSR set to: 0
  4674  001518  1F87               	comf	(___aodiv@dividend+7)& (0+255),f,b
  4675  00151A  1F86               	comf	(___aodiv@dividend+6)& (0+255),f,b
  4676  00151C  1F85               	comf	(___aodiv@dividend+5)& (0+255),f,b
  4677  00151E  1F84               	comf	(___aodiv@dividend+4)& (0+255),f,b
  4678  001520  1F83               	comf	(___aodiv@dividend+3)& (0+255),f,b
  4679  001522  1F82               	comf	(___aodiv@dividend+2)& (0+255),f,b
  4680  001524  1F81               	comf	(___aodiv@dividend+1)& (0+255),f,b
  4681  001526  6D80               	negf	___aodiv@dividend& (0+255),b
  4682  001528  0E00               	movlw	0
  4683  00152A  2381               	addwfc	(___aodiv@dividend+1)& (0+255),f,b
  4684  00152C  2382               	addwfc	(___aodiv@dividend+2)& (0+255),f,b
  4685  00152E  2383               	addwfc	(___aodiv@dividend+3)& (0+255),f,b
  4686  001530  2384               	addwfc	(___aodiv@dividend+4)& (0+255),f,b
  4687  001532  2385               	addwfc	(___aodiv@dividend+5)& (0+255),f,b
  4688  001534  2386               	addwfc	(___aodiv@dividend+6)& (0+255),f,b
  4689  001536  2387               	addwfc	(___aodiv@dividend+7)& (0+255),f,b
  4690                           
  4691                           ; BSR set to: 0
  4692  001538  0E01               	movlw	1
  4693  00153A  1B91               	xorwf	___aodiv@sign& (0+255),f,b
  4694  00153C                     l3057:
  4695  00153C  FFFF               	dw	65535	; assembler added errata NOP
  4696                           
  4697                           ; BSR set to: 0
  4698  00153E  EE20  F092         	lfsr	2,___aodiv@quotient
  4699  001542  0E07               	movlw	7
  4700  001544                     u2191:
  4701  001544  6ADE               	clrf	postinc2,c
  4702  001546  06E8               	decf	wreg,f,c
  4703  001548  E2FD               	bc	u2191
  4704                           
  4705                           ; BSR set to: 0
  4706  00154A  5188               	movf	___aodiv@divisor& (0+255),w,b
  4707  00154C  1189               	iorwf	(___aodiv@divisor+1)& (0+255),w,b
  4708  00154E  118A               	iorwf	(___aodiv@divisor+2)& (0+255),w,b
  4709  001550  118B               	iorwf	(___aodiv@divisor+3)& (0+255),w,b
  4710  001552  118C               	iorwf	(___aodiv@divisor+4)& (0+255),w,b
  4711  001554  118D               	iorwf	(___aodiv@divisor+5)& (0+255),w,b
  4712  001556  118E               	iorwf	(___aodiv@divisor+6)& (0+255),w,b
  4713  001558  118F               	iorwf	(___aodiv@divisor+7)& (0+255),w,b
  4714  00155A  B4D8               	btfsc	status,2,c
  4715  00155C  D04A               	goto	l3079
  4716                           
  4717                           ; BSR set to: 0
  4718  00155E  0E01               	movlw	1
  4719  001560  6F90               	movwf	___aodiv@counter& (0+255),b
  4720  001562  D00B               	goto	l3065
  4721  001564                     l3063:
  4722  001564  FFFF               	dw	65535	; assembler added errata NOP
  4723                           
  4724                           ; BSR set to: 0
  4725  001566  90D8               	bcf	status,0,c
  4726  001568  3788               	rlcf	___aodiv@divisor& (0+255),f,b
  4727  00156A  3789               	rlcf	(___aodiv@divisor+1)& (0+255),f,b
  4728  00156C  378A               	rlcf	(___aodiv@divisor+2)& (0+255),f,b
  4729  00156E  378B               	rlcf	(___aodiv@divisor+3)& (0+255),f,b
  4730  001570  378C               	rlcf	(___aodiv@divisor+4)& (0+255),f,b
  4731  001572  378D               	rlcf	(___aodiv@divisor+5)& (0+255),f,b
  4732  001574  378E               	rlcf	(___aodiv@divisor+6)& (0+255),f,b
  4733  001576  378F               	rlcf	(___aodiv@divisor+7)& (0+255),f,b
  4734  001578  2B90               	incf	___aodiv@counter& (0+255),f,b
  4735  00157A                     l3065:
  4736  00157A  FFFF               	dw	65535	; assembler added errata NOP
  4737                           
  4738                           ; BSR set to: 0
  4739  00157C  AF8F               	btfss	(___aodiv@divisor+7)& (0+255),7,b
  4740  00157E  D7F2               	goto	l3063
  4741  001580                     u2210:
  4742  001580  FFFF               	dw	65535	; assembler added errata NOP
  4743                           
  4744                           ; BSR set to: 0
  4745  001582  90D8               	bcf	status,0,c
  4746  001584  3792               	rlcf	___aodiv@quotient& (0+255),f,b
  4747  001586  3793               	rlcf	(___aodiv@quotient+1)& (0+255),f,b
  4748  001588  3794               	rlcf	(___aodiv@quotient+2)& (0+255),f,b
  4749  00158A  3795               	rlcf	(___aodiv@quotient+3)& (0+255),f,b
  4750  00158C  3796               	rlcf	(___aodiv@quotient+4)& (0+255),f,b
  4751  00158E  3797               	rlcf	(___aodiv@quotient+5)& (0+255),f,b
  4752  001590  3798               	rlcf	(___aodiv@quotient+6)& (0+255),f,b
  4753  001592  3799               	rlcf	(___aodiv@quotient+7)& (0+255),f,b
  4754                           
  4755                           ; BSR set to: 0
  4756  001594  5188               	movf	___aodiv@divisor& (0+255),w,b
  4757  001596  5D80               	subwf	___aodiv@dividend& (0+255),w,b
  4758  001598  5189               	movf	(___aodiv@divisor+1)& (0+255),w,b
  4759  00159A  5981               	subwfb	(___aodiv@dividend+1)& (0+255),w,b
  4760  00159C  518A               	movf	(___aodiv@divisor+2)& (0+255),w,b
  4761  00159E  5982               	subwfb	(___aodiv@dividend+2)& (0+255),w,b
  4762  0015A0  518B               	movf	(___aodiv@divisor+3)& (0+255),w,b
  4763  0015A2  5983               	subwfb	(___aodiv@dividend+3)& (0+255),w,b
  4764  0015A4  518C               	movf	(___aodiv@divisor+4)& (0+255),w,b
  4765  0015A6  5984               	subwfb	(___aodiv@dividend+4)& (0+255),w,b
  4766  0015A8  518D               	movf	(___aodiv@divisor+5)& (0+255),w,b
  4767  0015AA  5985               	subwfb	(___aodiv@dividend+5)& (0+255),w,b
  4768  0015AC  518E               	movf	(___aodiv@divisor+6)& (0+255),w,b
  4769  0015AE  5986               	subwfb	(___aodiv@dividend+6)& (0+255),w,b
  4770  0015B0  518F               	movf	(___aodiv@divisor+7)& (0+255),w,b
  4771  0015B2  5987               	subwfb	(___aodiv@dividend+7)& (0+255),w,b
  4772  0015B4  A0D8               	btfss	status,0,c
  4773  0015B6  D011               	goto	l3075
  4774                           
  4775                           ; BSR set to: 0
  4776  0015B8  5188               	movf	___aodiv@divisor& (0+255),w,b
  4777  0015BA  5F80               	subwf	___aodiv@dividend& (0+255),f,b
  4778  0015BC  5189               	movf	(___aodiv@divisor+1)& (0+255),w,b
  4779  0015BE  5B81               	subwfb	(___aodiv@dividend+1)& (0+255),f,b
  4780  0015C0  518A               	movf	(___aodiv@divisor+2)& (0+255),w,b
  4781  0015C2  5B82               	subwfb	(___aodiv@dividend+2)& (0+255),f,b
  4782  0015C4  518B               	movf	(___aodiv@divisor+3)& (0+255),w,b
  4783  0015C6  5B83               	subwfb	(___aodiv@dividend+3)& (0+255),f,b
  4784  0015C8  518C               	movf	(___aodiv@divisor+4)& (0+255),w,b
  4785  0015CA  5B84               	subwfb	(___aodiv@dividend+4)& (0+255),f,b
  4786  0015CC  518D               	movf	(___aodiv@divisor+5)& (0+255),w,b
  4787  0015CE  5B85               	subwfb	(___aodiv@dividend+5)& (0+255),f,b
  4788  0015D0  518E               	movf	(___aodiv@divisor+6)& (0+255),w,b
  4789  0015D2  5B86               	subwfb	(___aodiv@dividend+6)& (0+255),f,b
  4790  0015D4  518F               	movf	(___aodiv@divisor+7)& (0+255),w,b
  4791  0015D6  5B87               	subwfb	(___aodiv@dividend+7)& (0+255),f,b
  4792                           
  4793                           ; BSR set to: 0
  4794  0015D8  8192               	bsf	___aodiv@quotient& (0+255),0,b
  4795  0015DA                     l3075:
  4796  0015DA  FFFF               	dw	65535	; assembler added errata NOP
  4797                           
  4798                           ; BSR set to: 0
  4799  0015DC  90D8               	bcf	status,0,c
  4800  0015DE  338F               	rrcf	(___aodiv@divisor+7)& (0+255),f,b
  4801  0015E0  338E               	rrcf	(___aodiv@divisor+6)& (0+255),f,b
  4802  0015E2  338D               	rrcf	(___aodiv@divisor+5)& (0+255),f,b
  4803  0015E4  338C               	rrcf	(___aodiv@divisor+4)& (0+255),f,b
  4804  0015E6  338B               	rrcf	(___aodiv@divisor+3)& (0+255),f,b
  4805  0015E8  338A               	rrcf	(___aodiv@divisor+2)& (0+255),f,b
  4806  0015EA  3389               	rrcf	(___aodiv@divisor+1)& (0+255),f,b
  4807  0015EC  3388               	rrcf	___aodiv@divisor& (0+255),f,b
  4808                           
  4809                           ; BSR set to: 0
  4810  0015EE  2F90               	decfsz	___aodiv@counter& (0+255),f,b
  4811  0015F0  D7C7               	goto	u2210
  4812  0015F2                     l3079:
  4813  0015F2  FFFF               	dw	65535	; assembler added errata NOP
  4814                           
  4815                           ; BSR set to: 0
  4816  0015F4  5191               	movf	___aodiv@sign& (0+255),w,b
  4817  0015F6  B4D8               	btfsc	status,2,c
  4818  0015F8  D010               	goto	l3083
  4819                           
  4820                           ; BSR set to: 0
  4821  0015FA  1F99               	comf	(___aodiv@quotient+7)& (0+255),f,b
  4822  0015FC  1F98               	comf	(___aodiv@quotient+6)& (0+255),f,b
  4823  0015FE  1F97               	comf	(___aodiv@quotient+5)& (0+255),f,b
  4824  001600  1F96               	comf	(___aodiv@quotient+4)& (0+255),f,b
  4825  001602  1F95               	comf	(___aodiv@quotient+3)& (0+255),f,b
  4826  001604  1F94               	comf	(___aodiv@quotient+2)& (0+255),f,b
  4827  001606  1F93               	comf	(___aodiv@quotient+1)& (0+255),f,b
  4828  001608  6D92               	negf	___aodiv@quotient& (0+255),b
  4829  00160A  0E00               	movlw	0
  4830  00160C  2393               	addwfc	(___aodiv@quotient+1)& (0+255),f,b
  4831  00160E  2394               	addwfc	(___aodiv@quotient+2)& (0+255),f,b
  4832  001610  2395               	addwfc	(___aodiv@quotient+3)& (0+255),f,b
  4833  001612  2396               	addwfc	(___aodiv@quotient+4)& (0+255),f,b
  4834  001614  2397               	addwfc	(___aodiv@quotient+5)& (0+255),f,b
  4835  001616  2398               	addwfc	(___aodiv@quotient+6)& (0+255),f,b
  4836  001618  2399               	addwfc	(___aodiv@quotient+7)& (0+255),f,b
  4837  00161A                     l3083:
  4838  00161A  FFFF               	dw	65535	; assembler added errata NOP
  4839                           
  4840                           ; BSR set to: 0
  4841  00161C  C092  F080         	movff	___aodiv@quotient,?___aodiv
  4842  001620  C093  F081         	movff	___aodiv@quotient+1,?___aodiv+1
  4843  001624  C094  F082         	movff	___aodiv@quotient+2,?___aodiv+2
  4844  001628  C095  F083         	movff	___aodiv@quotient+3,?___aodiv+3
  4845  00162C  C096  F084         	movff	___aodiv@quotient+4,?___aodiv+4
  4846  001630  C097  F085         	movff	___aodiv@quotient+5,?___aodiv+5
  4847  001634  C098  F086         	movff	___aodiv@quotient+6,?___aodiv+6
  4848  001638  C099  F087         	movff	___aodiv@quotient+7,?___aodiv+7
  4849                           
  4850                           ; BSR set to: 0
  4851  00163C  0012               	return		;funcret
  4852  00163E  FFFF               	dw	65535	; errata NOP
  4853  001640                     __end_of___aodiv:
  4854                           	opt callstack 0
  4855                           
  4856 ;; *************** function _atoi *****************
  4857 ;; Defined at:
  4858 ;;		line 4 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/atoi.c"
  4859 ;; Parameters:    Size  Location     Type
  4860 ;;  s               2    7[BANK0 ] PTR const unsigned char 
  4861 ;;		 -> STR_5(18), STR_4(17), STR_3(17), STR_2(17), 
  4862 ;;		 -> STR_1(17), 
  4863 ;; Auto vars:     Size  Location     Type
  4864 ;;  n               2   20[BANK0 ] int 
  4865 ;;  neg             2   13[BANK0 ] int 
  4866 ;; Return value:  Size  Location     Type
  4867 ;;                  2    7[BANK0 ] int 
  4868 ;; Registers used:
  4869 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4870 ;; Tracked objects:
  4871 ;;		On entry : 0/0
  4872 ;;		On exit  : 0/0
  4873 ;;		Unchanged: 0/0
  4874 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4875 ;;      Params:         0       2       0       0       0       0       0
  4876 ;;      Locals:         0       9       0       0       0       0       0
  4877 ;;      Temps:          0       4       0       0       0       0       0
  4878 ;;      Totals:         0      15       0       0       0       0       0
  4879 ;;Total ram usage:       15 bytes
  4880 ;; Hardware stack levels used:    1
  4881 ;; Hardware stack levels required when called:   11
  4882 ;; This function calls:
  4883 ;;		___wmul
  4884 ;;		_isdigit
  4885 ;;		_isspace
  4886 ;; This function is called by:
  4887 ;;		_vfpfcnvrt
  4888 ;; This function uses a non-reentrant model
  4889 ;;
  4890                           
  4891                           	psect	text22
  4892  001212                     __ptext22:
  4893                           	opt callstack 0
  4894  001212                     _atoi:
  4895                           	opt callstack 0
  4896  001212  FFFF               	dw	65535	; assembler added errata NOP
  4897                           
  4898                           ; BSR set to: 0
  4899                           ;incstack = 0
  4900  001214  0E00               	movlw	0
  4901  001216  0100               	movlb	0	; () banked
  4902  001218  6F95               	movwf	(atoi@n+1)& (0+255),b
  4903  00121A  0E00               	movlw	0
  4904  00121C  6F94               	movwf	atoi@n& (0+255),b
  4905  00121E  0E00               	movlw	0
  4906  001220  6F8E               	movwf	(atoi@neg+1)& (0+255),b
  4907  001222  0E00               	movlw	0
  4908  001224  6F8D               	movwf	atoi@neg& (0+255),b
  4909  001226  D003               	goto	l3219
  4910  001228                     l3217:
  4911  001228  FFFF               	dw	65535	; assembler added errata NOP
  4912                           
  4913                           ; BSR set to: 0
  4914  00122A  4B87               	infsnz	atoi@s& (0+255),f,b
  4915  00122C  2B88               	incf	(atoi@s+1)& (0+255),f,b
  4916  00122E                     l3219:
  4917  00122E  FFFF               	dw	65535	; assembler added errata NOP
  4918                           
  4919                           ; BSR set to: 0
  4920  001230  0E01               	movlw	1
  4921  001232  6F93               	movwf	_atoi$1586& (0+255),b
  4922                           
  4923                           ; BSR set to: 0
  4924  001234  C087  FFF6         	movff	atoi@s,tblptrl
  4925  001238  C088  FFF7         	movff	atoi@s+1,tblptrh
  4926  00123C                     	if	0	;tblptru may be non-zero
  4927  00123C                     	endif
  4928  00123C                     	if	0	;tblptru may be non-zero
  4929  00123C                     	endif
  4930  00123C  0008               	tblrd		*
  4931  00123E  FFFF               	dw	65535	; errata NOP
  4932  001240  50F5               	movf	tablat,w,c
  4933  001242  0A20               	xorlw	32
  4934  001244  B4D8               	btfsc	status,2,c
  4935  001246  D019               	goto	l3227
  4936                           
  4937                           ; BSR set to: 0
  4938  001248  0EF7               	movlw	247
  4939  00124A  6F89               	movwf	??_atoi& (0+255),b
  4940  00124C  0EFF               	movlw	255
  4941  00124E  6F8A               	movwf	(??_atoi+1)& (0+255),b
  4942  001250  C087  FFF6         	movff	atoi@s,tblptrl
  4943  001254  C088  FFF7         	movff	atoi@s+1,tblptrh
  4944  001258                     	if	0	;tblptru may be non-zero
  4945  001258                     	endif
  4946  001258                     	if	0	;tblptru may be non-zero
  4947  001258                     	endif
  4948  001258  0008               	tblrd		*
  4949  00125A  FFFF               	dw	65535	; errata NOP
  4950  00125C  50F5               	movf	tablat,w,c
  4951  00125E  6F8B               	movwf	(??_atoi+2)& (0+255),b
  4952  001260  6B8C               	clrf	(??_atoi+3)& (0+255),b
  4953  001262  5189               	movf	??_atoi& (0+255),w,b
  4954  001264  278B               	addwf	(??_atoi+2)& (0+255),f,b
  4955  001266  518A               	movf	(??_atoi+1)& (0+255),w,b
  4956  001268  238C               	addwfc	(??_atoi+3)& (0+255),f,b
  4957  00126A  518C               	movf	(??_atoi+3)& (0+255),w,b
  4958  00126C  E104               	bnz	u2500
  4959  00126E  0E05               	movlw	5
  4960  001270  5D8B               	subwf	(??_atoi+2)& (0+255),w,b
  4961  001272  A0D8               	btfss	status,0,c
  4962  001274  D002               	goto	l3227
  4963  001276                     u2500:
  4964                           
  4965                           ; BSR set to: 0
  4966  001276  0E00               	movlw	0
  4967  001278  6F93               	movwf	_atoi$1586& (0+255),b
  4968  00127A                     l3227:
  4969  00127A  FFFF               	dw	65535	; assembler added errata NOP
  4970                           
  4971                           ; BSR set to: 0
  4972  00127C  C093  F08F         	movff	_atoi$1586,_atoi$1585
  4973  001280  6B90               	clrf	(_atoi$1585+1)& (0+255),b
  4974                           
  4975                           ; BSR set to: 0
  4976  001282  518F               	movf	_atoi$1585& (0+255),w,b
  4977  001284  1190               	iorwf	(_atoi$1585+1)& (0+255),w,b
  4978  001286  B4D8               	btfsc	status,2,c
  4979  001288  D00A               	goto	l3237
  4980  00128A  D7CE               	goto	l3217
  4981  00128C                     l3233:
  4982  00128C  FFFF               	dw	65535	; assembler added errata NOP
  4983                           
  4984                           ; BSR set to: 0
  4985  00128E  0E00               	movlw	0
  4986  001290  6F8E               	movwf	(atoi@neg+1)& (0+255),b
  4987  001292  0E01               	movlw	1
  4988  001294  6F8D               	movwf	atoi@neg& (0+255),b
  4989  001296                     l3235:
  4990  001296  FFFF               	dw	65535	; assembler added errata NOP
  4991                           
  4992                           ; BSR set to: 0
  4993  001298  4B87               	infsnz	atoi@s& (0+255),f,b
  4994  00129A  2B88               	incf	(atoi@s+1)& (0+255),f,b
  4995  00129C  D033               	goto	l3243
  4996  00129E                     l3237:
  4997  00129E  FFFF               	dw	65535	; assembler added errata NOP
  4998                           
  4999                           ; BSR set to: 0
  5000  0012A0  C087  FFF6         	movff	atoi@s,tblptrl
  5001  0012A4  C088  FFF7         	movff	atoi@s+1,tblptrh
  5002  0012A8                     	if	0	;tblptru may be non-zero
  5003  0012A8                     	endif
  5004  0012A8                     	if	0	;tblptru may be non-zero
  5005  0012A8                     	endif
  5006  0012A8  0008               	tblrd		*
  5007  0012AA  FFFF               	dw	65535	; errata NOP
  5008  0012AC  50F5               	movf	tablat,w,c
  5009  0012AE  6F89               	movwf	??_atoi& (0+255),b
  5010  0012B0  6B8A               	clrf	(??_atoi+1)& (0+255),b
  5011                           
  5012                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5013                           ; Switch size 1, requested type "simple"
  5014                           ; Number of cases is 1, Range of values is 0 to 0
  5015                           ; switch strategies available:
  5016                           ; Name         Instructions Cycles
  5017                           ; simple_byte            4     3 (average)
  5018                           ;	Chosen strategy is simple_byte
  5019  0012B2  518A               	movf	(??_atoi+1)& (0+255),w,b
  5020  0012B4  0A00               	xorlw	0	; case 0
  5021  0012B6  A4D8               	btfss	status,2,c
  5022  0012B8  D025               	goto	l3243
  5023                           
  5024                           ; BSR set to: 0
  5025                           ; Switch size 1, requested type "simple"
  5026                           ; Number of cases is 2, Range of values is 43 to 45
  5027                           ; switch strategies available:
  5028                           ; Name         Instructions Cycles
  5029                           ; simple_byte            7     4 (average)
  5030                           ;	Chosen strategy is simple_byte
  5031  0012BA  5189               	movf	??_atoi& (0+255),w,b
  5032  0012BC  0A2B               	xorlw	43	; case 43
  5033  0012BE  B4D8               	btfsc	status,2,c
  5034  0012C0  D7EA               	goto	l3235
  5035  0012C2  0A06               	xorlw	6	; case 45
  5036  0012C4  B4D8               	btfsc	status,2,c
  5037  0012C6  D7E2               	goto	l3233
  5038  0012C8  D01D               	goto	l3243
  5039  0012CA                     l3239:
  5040  0012CA  FFFF               	dw	65535	; assembler added errata NOP
  5041                           
  5042                           ; BSR set to: 0
  5043  0012CC  C094  F080         	movff	atoi@n,___wmul@multiplier
  5044  0012D0  C095  F081         	movff	atoi@n+1,___wmul@multiplier+1
  5045  0012D4  0E00               	movlw	0
  5046  0012D6  6F83               	movwf	(___wmul@multiplicand+1)& (0+255),b
  5047  0012D8  0E0A               	movlw	10
  5048  0012DA  6F82               	movwf	___wmul@multiplicand& (0+255),b
  5049  0012DC  ECD9  F015         	call	___wmul	;wreg free
  5050  0012E0  C087  FFF6         	movff	atoi@s,tblptrl
  5051  0012E4  C088  FFF7         	movff	atoi@s+1,tblptrh
  5052  0012E8                     	if	0	;tblptru may be non-zero
  5053  0012E8                     	endif
  5054  0012E8                     	if	0	;tblptru may be non-zero
  5055  0012E8                     	endif
  5056  0012E8  0008               	tblrd		*
  5057  0012EA  FFFF               	dw	65535	; errata NOP
  5058  0012EC  50F5               	movf	tablat,w,c
  5059  0012EE  0100               	movlb	0	; () banked
  5060  0012F0  5F80               	subwf	?___wmul& (0+255),f,b
  5061  0012F2  0E00               	movlw	0
  5062  0012F4  5B81               	subwfb	(?___wmul+1)& (0+255),f,b
  5063  0012F6  0E30               	movlw	48
  5064  0012F8  2580               	addwf	?___wmul& (0+255),w,b
  5065  0012FA  6F94               	movwf	atoi@n& (0+255),b
  5066  0012FC  0E00               	movlw	0
  5067  0012FE  2181               	addwfc	(?___wmul+1)& (0+255),w,b
  5068  001300  6F95               	movwf	(atoi@n+1)& (0+255),b
  5069  001302  D7C9               	goto	l3235
  5070  001304                     l3243:
  5071  001304  FFFF               	dw	65535	; assembler added errata NOP
  5072                           
  5073                           ; BSR set to: 0
  5074  001306  0ED0               	movlw	208
  5075  001308  6F89               	movwf	??_atoi& (0+255),b
  5076  00130A  0EFF               	movlw	255
  5077  00130C  6F8A               	movwf	(??_atoi+1)& (0+255),b
  5078  00130E  C087  FFF6         	movff	atoi@s,tblptrl
  5079  001312  C088  FFF7         	movff	atoi@s+1,tblptrh
  5080  001316                     	if	0	;tblptru may be non-zero
  5081  001316                     	endif
  5082  001316                     	if	0	;tblptru may be non-zero
  5083  001316                     	endif
  5084  001316  0008               	tblrd		*
  5085  001318  FFFF               	dw	65535	; errata NOP
  5086  00131A  50F5               	movf	tablat,w,c
  5087  00131C  6F8B               	movwf	(??_atoi+2)& (0+255),b
  5088  00131E  6B8C               	clrf	(??_atoi+3)& (0+255),b
  5089  001320  5189               	movf	??_atoi& (0+255),w,b
  5090  001322  278B               	addwf	(??_atoi+2)& (0+255),f,b
  5091  001324  518A               	movf	(??_atoi+1)& (0+255),w,b
  5092  001326  238C               	addwfc	(??_atoi+3)& (0+255),f,b
  5093  001328  518C               	movf	(??_atoi+3)& (0+255),w,b
  5094  00132A  E106               	bnz	u2520
  5095  00132C  0E0A               	movlw	10
  5096  00132E  5D8B               	subwf	(??_atoi+2)& (0+255),w,b
  5097  001330  B0D8               	btfsc	status,0,c
  5098  001332  D002               	goto	u2520
  5099  001334  0E01               	movlw	1
  5100  001336  D002               	goto	u2530
  5101  001338                     u2520:
  5102  001338  FFFF               	dw	65535	; assembler added errata NOP
  5103  00133A  0E00               	movlw	0
  5104  00133C                     u2530:
  5105  00133C  FFFF               	dw	65535	; assembler added errata NOP
  5106  00133E  6F91               	movwf	_atoi$1587& (0+255),b
  5107  001340  6B92               	clrf	(_atoi$1587+1)& (0+255),b
  5108                           
  5109                           ; BSR set to: 0
  5110  001342  5191               	movf	_atoi$1587& (0+255),w,b
  5111  001344  1192               	iorwf	(_atoi$1587+1)& (0+255),w,b
  5112  001346  A4D8               	btfss	status,2,c
  5113  001348  D7C0               	goto	l3239
  5114                           
  5115                           ; BSR set to: 0
  5116  00134A  518D               	movf	atoi@neg& (0+255),w,b
  5117  00134C  118E               	iorwf	(atoi@neg+1)& (0+255),w,b
  5118  00134E  A4D8               	btfss	status,2,c
  5119  001350  D00D               	goto	l1364
  5120                           
  5121                           ; BSR set to: 0
  5122  001352  C094  F089         	movff	atoi@n,??_atoi
  5123  001356  C095  F08A         	movff	atoi@n+1,??_atoi+1
  5124  00135A  1F89               	comf	??_atoi& (0+255),f,b
  5125  00135C  1F8A               	comf	(??_atoi+1)& (0+255),f,b
  5126  00135E  4B89               	infsnz	??_atoi& (0+255),f,b
  5127  001360  2B8A               	incf	(??_atoi+1)& (0+255),f,b
  5128  001362  C089  F087         	movff	??_atoi,?_atoi
  5129  001366  C08A  F088         	movff	??_atoi+1,?_atoi+1
  5130  00136A  D005               	goto	l1367
  5131  00136C                     l1364:
  5132  00136C  FFFF               	dw	65535	; assembler added errata NOP
  5133                           
  5134                           ; BSR set to: 0
  5135  00136E  C094  F087         	movff	atoi@n,?_atoi
  5136  001372  C095  F088         	movff	atoi@n+1,?_atoi+1
  5137  001376                     l1367:
  5138  001376  FFFF               	dw	65535	; assembler added errata NOP
  5139                           
  5140                           ; BSR set to: 0
  5141  001378  0012               	return		;funcret
  5142  00137A  FFFF               	dw	65535	; errata NOP
  5143  00137C                     __end_of_atoi:
  5144                           	opt callstack 0
  5145                           
  5146 ;; *************** function _isspace *****************
  5147 ;; Defined at:
  5148 ;;		line 5 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/isspace.c"
  5149 ;; Parameters:    Size  Location     Type
  5150 ;;  c               2    0[BANK0 ] int 
  5151 ;; Auto vars:     Size  Location     Type
  5152 ;;		None
  5153 ;; Return value:  Size  Location     Type
  5154 ;;                  2    0[BANK0 ] int 
  5155 ;; Registers used:
  5156 ;;		wreg, status,2, status,0
  5157 ;; Tracked objects:
  5158 ;;		On entry : 0/0
  5159 ;;		On exit  : 0/0
  5160 ;;		Unchanged: 0/0
  5161 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5162 ;;      Params:         0       2       0       0       0       0       0
  5163 ;;      Locals:         0       1       0       0       0       0       0
  5164 ;;      Temps:          0       4       0       0       0       0       0
  5165 ;;      Totals:         0       7       0       0       0       0       0
  5166 ;;Total ram usage:        7 bytes
  5167 ;; Hardware stack levels used:    1
  5168 ;; Hardware stack levels required when called:   10
  5169 ;; This function calls:
  5170 ;;		Nothing
  5171 ;; This function is called by:
  5172 ;;		_atoi
  5173 ;; This function uses a non-reentrant model
  5174 ;;
  5175                           
  5176                           	psect	text23
  5177  00286C                     __ptext23:
  5178                           	opt callstack 0
  5179  00286C                     _isspace:
  5180                           	opt callstack 0
  5181  00286C  FFFF               	dw	65535	; assembler added errata NOP
  5182                           
  5183                           ; BSR set to: 0
  5184                           ;incstack = 0
  5185  00286E  0E01               	movlw	1
  5186  002870  0100               	movlb	0	; () banked
  5187  002872  6F86               	movwf	_isspace$1603& (0+255),b
  5188                           
  5189                           ; BSR set to: 0
  5190  002874  0E20               	movlw	32
  5191  002876  1980               	xorwf	isspace@c& (0+255),w,b
  5192  002878  1181               	iorwf	(isspace@c+1)& (0+255),w,b
  5193  00287A  B4D8               	btfsc	status,2,c
  5194  00287C  D014               	goto	l3131
  5195                           
  5196                           ; BSR set to: 0
  5197  00287E  0EF7               	movlw	247
  5198  002880  6F82               	movwf	??_isspace& (0+255),b
  5199  002882  0EFF               	movlw	255
  5200  002884  6F83               	movwf	(??_isspace+1)& (0+255),b
  5201  002886  C080  F084         	movff	isspace@c,??_isspace+2
  5202  00288A  C081  F085         	movff	isspace@c+1,??_isspace+3
  5203  00288E  5182               	movf	??_isspace& (0+255),w,b
  5204  002890  2784               	addwf	(??_isspace+2)& (0+255),f,b
  5205  002892  5183               	movf	(??_isspace+1)& (0+255),w,b
  5206  002894  2385               	addwfc	(??_isspace+3)& (0+255),f,b
  5207  002896  5185               	movf	(??_isspace+3)& (0+255),w,b
  5208  002898  E104               	bnz	u2310
  5209  00289A  0E05               	movlw	5
  5210  00289C  5D84               	subwf	(??_isspace+2)& (0+255),w,b
  5211  00289E  A0D8               	btfss	status,0,c
  5212  0028A0  D002               	goto	l3131
  5213  0028A2                     u2310:
  5214                           
  5215                           ; BSR set to: 0
  5216  0028A2  0E00               	movlw	0
  5217  0028A4  6F86               	movwf	_isspace$1603& (0+255),b
  5218  0028A6                     l3131:
  5219  0028A6  FFFF               	dw	65535	; assembler added errata NOP
  5220                           
  5221                           ; BSR set to: 0
  5222  0028A8  C086  F080         	movff	_isspace$1603,?_isspace
  5223  0028AC  6B81               	clrf	(?_isspace+1)& (0+255),b
  5224                           
  5225                           ; BSR set to: 0
  5226  0028AE  0012               	return		;funcret
  5227  0028B0  FFFF               	dw	65535	; errata NOP
  5228  0028B2                     __end_of_isspace:
  5229                           	opt callstack 0
  5230                           
  5231 ;; *************** function _isdigit *****************
  5232 ;; Defined at:
  5233 ;;		line 5 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/isdigit.c"
  5234 ;; Parameters:    Size  Location     Type
  5235 ;;  c               2    0[BANK0 ] int 
  5236 ;; Auto vars:     Size  Location     Type
  5237 ;;		None
  5238 ;; Return value:  Size  Location     Type
  5239 ;;                  2    0[BANK0 ] int 
  5240 ;; Registers used:
  5241 ;;		wreg, status,2, status,0
  5242 ;; Tracked objects:
  5243 ;;		On entry : 0/0
  5244 ;;		On exit  : 0/0
  5245 ;;		Unchanged: 0/0
  5246 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5247 ;;      Params:         0       2       0       0       0       0       0
  5248 ;;      Locals:         0       0       0       0       0       0       0
  5249 ;;      Temps:          0       4       0       0       0       0       0
  5250 ;;      Totals:         0       6       0       0       0       0       0
  5251 ;;Total ram usage:        6 bytes
  5252 ;; Hardware stack levels used:    1
  5253 ;; Hardware stack levels required when called:   10
  5254 ;; This function calls:
  5255 ;;		Nothing
  5256 ;; This function is called by:
  5257 ;;		_vfpfcnvrt
  5258 ;;		_atoi
  5259 ;; This function uses a non-reentrant model
  5260 ;;
  5261                           
  5262                           	psect	text24
  5263  002A72                     __ptext24:
  5264                           	opt callstack 0
  5265  002A72                     _isdigit:
  5266                           	opt callstack 0
  5267  002A72  FFFF               	dw	65535	; assembler added errata NOP
  5268                           
  5269                           ; BSR set to: 0
  5270                           ;incstack = 0
  5271  002A74  0ED0               	movlw	208
  5272  002A76  0100               	movlb	0	; () banked
  5273  002A78  6F82               	movwf	??_isdigit& (0+255),b
  5274  002A7A  0EFF               	movlw	255
  5275  002A7C  6F83               	movwf	(??_isdigit+1)& (0+255),b
  5276  002A7E  C080  F084         	movff	isdigit@c,??_isdigit+2
  5277  002A82  C081  F085         	movff	isdigit@c+1,??_isdigit+3
  5278  002A86  5182               	movf	??_isdigit& (0+255),w,b
  5279  002A88  2784               	addwf	(??_isdigit+2)& (0+255),f,b
  5280  002A8A  5183               	movf	(??_isdigit+1)& (0+255),w,b
  5281  002A8C  2385               	addwfc	(??_isdigit+3)& (0+255),f,b
  5282  002A8E  5185               	movf	(??_isdigit+3)& (0+255),w,b
  5283  002A90  E106               	bnz	u2150
  5284  002A92  0E0A               	movlw	10
  5285  002A94  5D84               	subwf	(??_isdigit+2)& (0+255),w,b
  5286  002A96  B0D8               	btfsc	status,0,c
  5287  002A98  D002               	goto	u2150
  5288  002A9A  0E01               	movlw	1
  5289  002A9C  D002               	goto	u2160
  5290  002A9E                     u2150:
  5291  002A9E  FFFF               	dw	65535	; assembler added errata NOP
  5292  002AA0  0E00               	movlw	0
  5293  002AA2                     u2160:
  5294  002AA2  FFFF               	dw	65535	; assembler added errata NOP
  5295  002AA4  6F80               	movwf	?_isdigit& (0+255),b
  5296  002AA6  6B81               	clrf	(?_isdigit+1)& (0+255),b
  5297                           
  5298                           ; BSR set to: 0
  5299  002AA8  0012               	return		;funcret
  5300  002AAA  FFFF               	dw	65535	; errata NOP
  5301  002AAC                     __end_of_isdigit:
  5302                           	opt callstack 0
  5303                           
  5304 ;; *************** function _setData *****************
  5305 ;; Defined at:
  5306 ;;		line 46 in file "eeprom.c"
  5307 ;; Parameters:    Size  Location     Type
  5308 ;;  full            1    wreg     unsigned char 
  5309 ;; Auto vars:     Size  Location     Type
  5310 ;;  full            1    4[BANK0 ] unsigned char 
  5311 ;;  data1           1    3[BANK0 ] unsigned char 
  5312 ;;  data0           1    2[BANK0 ] unsigned char 
  5313 ;; Return value:  Size  Location     Type
  5314 ;;                  1    wreg      void 
  5315 ;; Registers used:
  5316 ;;		wreg, status,2, cstack
  5317 ;; Tracked objects:
  5318 ;;		On entry : 0/0
  5319 ;;		On exit  : 0/0
  5320 ;;		Unchanged: 0/0
  5321 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5322 ;;      Params:         0       0       0       0       0       0       0
  5323 ;;      Locals:         0       3       0       0       0       0       0
  5324 ;;      Temps:          0       0       0       0       0       0       0
  5325 ;;      Totals:         0       3       0       0       0       0       0
  5326 ;;Total ram usage:        3 bytes
  5327 ;; Hardware stack levels used:    1
  5328 ;; Hardware stack levels required when called:   11
  5329 ;; This function calls:
  5330 ;;		_writeEEPROM
  5331 ;; This function is called by:
  5332 ;;		_setFrequency
  5333 ;; This function uses a non-reentrant model
  5334 ;;
  5335                           
  5336                           	psect	text25
  5337  0021C6                     __ptext25:
  5338                           	opt callstack 0
  5339  0021C6                     _setData:
  5340                           	opt callstack 0
  5341  0021C6  FFFF               	dw	65535	; assembler added errata NOP
  5342                           
  5343                           ; BSR set to: 0
  5344                           ;incstack = 0
  5345                           ;setData@full stored from wreg
  5346  0021C8  0100               	movlb	0	; () banked
  5347  0021CA  6F84               	movwf	setData@full& (0+255),b
  5348                           
  5349                           ;eeprom.c: 47:     unsigned char data0 = frequency & 0x00FF;
  5350  0021CC  C0FA  F082         	movff	_frequency,setData@data0
  5351                           
  5352                           ;eeprom.c: 48:     unsigned char data1 = frequency >> 8;
  5353  0021D0  0100               	movlb	0	; () banked
  5354  0021D2  51FB               	movf	(_frequency+1)& (0+255),w,b
  5355  0021D4  6F83               	movwf	setData@data1& (0+255),b
  5356                           
  5357                           ; BSR set to: 0
  5358                           ;eeprom.c: 49:     if(full)writeEEPROM(data0 ,0);
  5359  0021D6  5184               	movf	setData@full& (0+255),w,b
  5360  0021D8  B4D8               	btfsc	status,2,c
  5361  0021DA  D005               	goto	l3927
  5362                           
  5363                           ; BSR set to: 0
  5364  0021DC  0E00               	movlw	0
  5365  0021DE  6F80               	movwf	writeEEPROM@address& (0+255),b
  5366  0021E0  5182               	movf	setData@data0& (0+255),w,b
  5367  0021E2  ECC2  F015         	call	_writeEEPROM
  5368  0021E6                     l3927:
  5369  0021E6  FFFF               	dw	65535	; assembler added errata NOP
  5370                           
  5371                           ;eeprom.c: 50:     if(full)writeEEPROM(data1 ,1);
  5372  0021E8  0100               	movlb	0	; () banked
  5373  0021EA  5184               	movf	setData@full& (0+255),w,b
  5374  0021EC  B4D8               	btfsc	status,2,c
  5375  0021EE  D005               	goto	l72
  5376                           
  5377                           ; BSR set to: 0
  5378  0021F0  0E01               	movlw	1
  5379  0021F2  6F80               	movwf	writeEEPROM@address& (0+255),b
  5380  0021F4  5183               	movf	setData@data1& (0+255),w,b
  5381  0021F6  ECC2  F015         	call	_writeEEPROM
  5382  0021FA                     l72:
  5383  0021FA  FFFF               	dw	65535	; assembler added errata NOP
  5384                           
  5385                           ;eeprom.c: 51:     writeEEPROM(months ,2);
  5386  0021FC  0E02               	movlw	2
  5387  0021FE  0100               	movlb	0	; () banked
  5388  002200  6F80               	movwf	writeEEPROM@address& (0+255),b
  5389  002202  51FF               	movf	_months& (0+255),w,b
  5390  002204  ECC2  F015         	call	_writeEEPROM
  5391                           
  5392                           ;eeprom.c: 52:     writeEEPROM(days ,3);
  5393  002208  0E03               	movlw	3
  5394  00220A  0100               	movlb	0	; () banked
  5395  00220C  6F80               	movwf	writeEEPROM@address& (0+255),b
  5396  00220E  51FE               	movf	_days& (0+255),w,b
  5397  002210  ECC2  F015         	call	_writeEEPROM
  5398                           
  5399                           ;eeprom.c: 53:     writeEEPROM(hours ,4);
  5400  002214  0E04               	movlw	4
  5401  002216  0100               	movlb	0	; () banked
  5402  002218  6F80               	movwf	writeEEPROM@address& (0+255),b
  5403  00221A  51FD               	movf	_hours& (0+255),w,b
  5404  00221C  ECC2  F015         	call	_writeEEPROM
  5405                           
  5406                           ;eeprom.c: 54:     writeEEPROM(minutes ,5);
  5407  002220  0E05               	movlw	5
  5408  002222  0100               	movlb	0	; () banked
  5409  002224  6F80               	movwf	writeEEPROM@address& (0+255),b
  5410  002226  51FC               	movf	_minutes& (0+255),w,b
  5411  002228  ECC2  F015         	call	_writeEEPROM
  5412                           
  5413                           ;eeprom.c: 55:     writeEEPROM(functionalStat ,6);
  5414  00222C  0E06               	movlw	6
  5415  00222E  0100               	movlb	0	; () banked
  5416  002230  6F80               	movwf	writeEEPROM@address& (0+255),b
  5417  002232  507E               	movf	_functionalStat,w,c
  5418  002234  ECC2  F015         	call	_writeEEPROM
  5419  002238  0012               	return		;funcret
  5420  00223A  FFFF               	dw	65535	; errata NOP
  5421  00223C                     __end_of_setData:
  5422                           	opt callstack 0
  5423                           
  5424 ;; *************** function _writeEEPROM *****************
  5425 ;; Defined at:
  5426 ;;		line 15 in file "eeprom.c"
  5427 ;; Parameters:    Size  Location     Type
  5428 ;;  data            1    wreg     unsigned char 
  5429 ;;  address         1    0[BANK0 ] unsigned char 
  5430 ;; Auto vars:     Size  Location     Type
  5431 ;;  data            1    1[BANK0 ] unsigned char 
  5432 ;; Return value:  Size  Location     Type
  5433 ;;                  1    wreg      void 
  5434 ;; Registers used:
  5435 ;;		wreg, status,2
  5436 ;; Tracked objects:
  5437 ;;		On entry : 0/0
  5438 ;;		On exit  : 0/0
  5439 ;;		Unchanged: 0/0
  5440 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5441 ;;      Params:         0       1       0       0       0       0       0
  5442 ;;      Locals:         0       1       0       0       0       0       0
  5443 ;;      Temps:          0       0       0       0       0       0       0
  5444 ;;      Totals:         0       2       0       0       0       0       0
  5445 ;;Total ram usage:        2 bytes
  5446 ;; Hardware stack levels used:    1
  5447 ;; Hardware stack levels required when called:   10
  5448 ;; This function calls:
  5449 ;;		Nothing
  5450 ;; This function is called by:
  5451 ;;		_setData
  5452 ;; This function uses a non-reentrant model
  5453 ;;
  5454                           
  5455                           	psect	text26
  5456  002B84                     __ptext26:
  5457                           	opt callstack 0
  5458  002B84                     _writeEEPROM:
  5459                           	opt callstack 0
  5460  002B84  FFFF               	dw	65535	; assembler added errata NOP
  5461                           
  5462                           ;incstack = 0
  5463                           ;writeEEPROM@data stored from wreg
  5464  002B86  0100               	movlb	0	; () banked
  5465  002B88  6F81               	movwf	writeEEPROM@data& (0+255),b
  5466                           
  5467                           ;eeprom.c: 16:     EEADR = address;
  5468  002B8A  C080  FFA9         	movff	writeEEPROM@address,4009	;volatile
  5469                           
  5470                           ;eeprom.c: 17:     EEDATA = data;
  5471  002B8E  C081  FFA8         	movff	writeEEPROM@data,4008	;volatile
  5472                           
  5473                           ;eeprom.c: 19:     EECON1bits.EEPGD = 0;
  5474  002B92  9EA6               	bcf	4006,7,c	;volsfr
  5475                           
  5476                           ;eeprom.c: 20:     EECON1bits.CFGS = 0;
  5477  002B94  9CA6               	bcf	4006,6,c	;volsfr
  5478                           
  5479                           ;eeprom.c: 21:     EECON1bits.WREN = 1;
  5480  002B96  84A6               	bsf	4006,2,c	;volsfr
  5481                           
  5482                           ;eeprom.c: 23:     INTCONbits.GIE = 0;
  5483  002B98  9EF2               	bcf	4082,7,c	;volatile
  5484                           
  5485                           ;eeprom.c: 24:     EECON2 = 0x55;
  5486  002B9A  0E55               	movlw	85
  5487  002B9C  6EA7               	movwf	4007,c	;volsfr
  5488                           
  5489                           ;eeprom.c: 25:     EECON2 = 0xAA;
  5490  002B9E  0EAA               	movlw	170
  5491  002BA0  6EA7               	movwf	4007,c	;volsfr
  5492                           
  5493                           ;eeprom.c: 26:     EECON1bits.WR = 1;
  5494  002BA2  82A6               	bsf	4006,1,c	;volsfr
  5495                           
  5496                           ;eeprom.c: 27:     INTCONbits.GIE = 1;
  5497  002BA4  8EF2               	bsf	4082,7,c	;volatile
  5498  002BA6                     l62:
  5499  002BA6  FFFF               	dw	65535	; assembler added errata NOP
  5500  002BA8  B8A1               	btfsc	4001,4,c	;volatile
  5501  002BAA  0012               	return		;funcret
  5502  002BAC  FFFF               	dw	65535	; assembler added errata NOP
  5503  002BAE  D7FB               	goto	l62
  5504  002BB0  FFFF               	dw	65535	; errata NOP
  5505  002BB2                     __end_of_writeEEPROM:
  5506                           	opt callstack 0
  5507                           
  5508 ;; *************** function _beep *****************
  5509 ;; Defined at:
  5510 ;;		line 147 in file "main.c"
  5511 ;; Parameters:    Size  Location     Type
  5512 ;;  ms              2    6[BANK0 ] int 
  5513 ;; Auto vars:     Size  Location     Type
  5514 ;;		None
  5515 ;; Return value:  Size  Location     Type
  5516 ;;                  1    wreg      void 
  5517 ;; Registers used:
  5518 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  5519 ;; Tracked objects:
  5520 ;;		On entry : 0/0
  5521 ;;		On exit  : 0/0
  5522 ;;		Unchanged: 0/0
  5523 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5524 ;;      Params:         0       2       0       0       0       0       0
  5525 ;;      Locals:         0       0       0       0       0       0       0
  5526 ;;      Temps:          0       0       0       0       0       0       0
  5527 ;;      Totals:         0       2       0       0       0       0       0
  5528 ;;Total ram usage:        2 bytes
  5529 ;; Hardware stack levels used:    1
  5530 ;; Hardware stack levels required when called:   11
  5531 ;; This function calls:
  5532 ;;		___wmul
  5533 ;; This function is called by:
  5534 ;;		_main
  5535 ;;		_setFrequency
  5536 ;; This function uses a non-reentrant model
  5537 ;;
  5538                           
  5539                           	psect	text27
  5540  00250E                     __ptext27:
  5541                           	opt callstack 0
  5542  00250E                     _beep:
  5543                           	opt callstack 0
  5544  00250E  FFFF               	dw	65535	; assembler added errata NOP
  5545                           
  5546                           ;main.c: 148:     ms *= 5;
  5547                           
  5548                           ;incstack = 0
  5549  002510  C086  F080         	movff	beep@ms,___wmul@multiplier
  5550  002514  C087  F081         	movff	beep@ms+1,___wmul@multiplier+1
  5551  002518  0E00               	movlw	0
  5552  00251A  0100               	movlb	0	; () banked
  5553  00251C  6F83               	movwf	(___wmul@multiplicand+1)& (0+255),b
  5554  00251E  0E05               	movlw	5
  5555  002520  6F82               	movwf	___wmul@multiplicand& (0+255),b
  5556  002522  ECD9  F015         	call	___wmul	;wreg free
  5557  002526  C080  F086         	movff	?___wmul,beep@ms
  5558  00252A  C081  F087         	movff	?___wmul+1,beep@ms+1
  5559  00252E  0100               	movlb	0	; () banked
  5560  002530  D00F               	goto	L12
  5561  002532                     l259:
  5562  002532  FFFF               	dw	65535	; assembler added errata NOP
  5563                           
  5564                           ; BSR set to: 0
  5565                           ;main.c: 150:         PORTDbits.RD0 = 1;
  5566  002534  8083               	bsf	3971,0,c	;volatile
  5567                           
  5568                           ; BSR set to: 0
  5569                           ;main.c: 151:         _delay((unsigned long)((100)*(12000000/4000000.0)));
  5570  002536  0E4B               	movlw	75
  5571  002538                     u4137:
  5572  002538  FFFF               	dw	65535	; errata NOP
  5573  00253A  2EE8               	decfsz	wreg,f,c
  5574  00253C  D7FD               	bra	u4137
  5575                           
  5576                           ;main.c: 152:         PORTDbits.RD0 = 0;
  5577  00253E  9083               	bcf	3971,0,c	;volatile
  5578                           
  5579                           ;main.c: 153:         _delay((unsigned long)((100)*(12000000/4000000.0)));
  5580  002540  0E4B               	movlw	75
  5581  002542                     u4147:
  5582  002542  FFFF               	dw	65535	; errata NOP
  5583  002544  2EE8               	decfsz	wreg,f,c
  5584  002546  D7FD               	bra	u4147
  5585                           
  5586                           ;main.c: 154:     }
  5587  002548  0100               	movlb	0	; () banked
  5588  00254A  0786               	decf	beep@ms& (0+255),f,b
  5589  00254C  A0D8               	btfss	status,0,c
  5590  00254E  0787               	decf	(beep@ms+1)& (0+255),f,b
  5591  002550                     L12:
  5592  002550  FFFF               	dw	65535	; assembler added errata NOP
  5593  002552  BF87               	btfsc	(beep@ms+1)& (0+255),7,b
  5594  002554  D005               	goto	u3430
  5595  002556  5187               	movf	(beep@ms+1)& (0+255),w,b
  5596  002558  E1EC               	bnz	l259
  5597  00255A  0586               	decf	beep@ms& (0+255),w,b
  5598  00255C  B0D8               	btfsc	status,0,c
  5599  00255E  D7E9               	goto	l259
  5600  002560                     u3430:
  5601  002560  FFFF               	dw	65535	; assembler added errata NOP
  5602                           
  5603                           ; BSR set to: 0
  5604  002562  0012               	return		;funcret
  5605  002564  FFFF               	dw	65535	; errata NOP
  5606  002566                     __end_of_beep:
  5607                           	opt callstack 0
  5608                           
  5609 ;; *************** function ___wmul *****************
  5610 ;; Defined at:
  5611 ;;		line 15 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/Umul16.c"
  5612 ;; Parameters:    Size  Location     Type
  5613 ;;  multiplier      2    0[BANK0 ] unsigned int 
  5614 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  5615 ;; Auto vars:     Size  Location     Type
  5616 ;;  product         2    4[BANK0 ] unsigned int 
  5617 ;; Return value:  Size  Location     Type
  5618 ;;                  2    0[BANK0 ] unsigned int 
  5619 ;; Registers used:
  5620 ;;		wreg, status,2, status,0, prodl, prodh
  5621 ;; Tracked objects:
  5622 ;;		On entry : 0/0
  5623 ;;		On exit  : 0/0
  5624 ;;		Unchanged: 0/0
  5625 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5626 ;;      Params:         0       4       0       0       0       0       0
  5627 ;;      Locals:         0       2       0       0       0       0       0
  5628 ;;      Temps:          0       0       0       0       0       0       0
  5629 ;;      Totals:         0       6       0       0       0       0       0
  5630 ;;Total ram usage:        6 bytes
  5631 ;; Hardware stack levels used:    1
  5632 ;; Hardware stack levels required when called:   10
  5633 ;; This function calls:
  5634 ;;		Nothing
  5635 ;; This function is called by:
  5636 ;;		_beep
  5637 ;;		_atoi
  5638 ;; This function uses a non-reentrant model
  5639 ;;
  5640                           
  5641                           	psect	text28
  5642  002BB2                     __ptext28:
  5643                           	opt callstack 0
  5644  002BB2                     ___wmul:
  5645                           	opt callstack 0
  5646  002BB2  FFFF               	dw	65535	; assembler added errata NOP
  5647                           
  5648                           ; BSR set to: 0
  5649                           ;incstack = 0
  5650  002BB4  0100               	movlb	0	; () banked
  5651  002BB6  5180               	movf	___wmul@multiplier& (0+255),w,b
  5652  002BB8  0382               	mulwf	___wmul@multiplicand& (0+255),b
  5653  002BBA  CFF3 F084          	movff	prodl,___wmul@product
  5654  002BBE  CFF4 F085          	movff	prodh,___wmul@product+1
  5655  002BC2  5180               	movf	___wmul@multiplier& (0+255),w,b
  5656  002BC4  0383               	mulwf	(___wmul@multiplicand+1)& (0+255),b
  5657  002BC6  50F3               	movf	prodl,w,c
  5658  002BC8  2785               	addwf	(___wmul@product+1)& (0+255),f,b
  5659  002BCA  5181               	movf	(___wmul@multiplier+1)& (0+255),w,b
  5660  002BCC  0382               	mulwf	___wmul@multiplicand& (0+255),b
  5661  002BCE  50F3               	movf	prodl,w,c
  5662  002BD0  2785               	addwf	(___wmul@product+1)& (0+255),f,b
  5663                           
  5664                           ; BSR set to: 0
  5665  002BD2  C084  F080         	movff	___wmul@product,?___wmul
  5666  002BD6  C085  F081         	movff	___wmul@product+1,?___wmul+1
  5667                           
  5668                           ; BSR set to: 0
  5669  002BDA  0012               	return		;funcret
  5670  002BDC  FFFF               	dw	65535	; errata NOP
  5671  002BDE                     __end_of___wmul:
  5672                           	opt callstack 0
  5673                           
  5674 ;; *************** function _getData *****************
  5675 ;; Defined at:
  5676 ;;		line 33 in file "eeprom.c"
  5677 ;; Parameters:    Size  Location     Type
  5678 ;;		None
  5679 ;; Auto vars:     Size  Location     Type
  5680 ;;  aux1            1    4[BANK0 ] unsigned char 
  5681 ;;  aux0            1    3[BANK0 ] unsigned char 
  5682 ;; Return value:  Size  Location     Type
  5683 ;;                  1    wreg      void 
  5684 ;; Registers used:
  5685 ;;		wreg, status,2, status,0, cstack
  5686 ;; Tracked objects:
  5687 ;;		On entry : 0/0
  5688 ;;		On exit  : 0/0
  5689 ;;		Unchanged: 0/0
  5690 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5691 ;;      Params:         0       0       0       0       0       0       0
  5692 ;;      Locals:         0       2       0       0       0       0       0
  5693 ;;      Temps:          0       2       0       0       0       0       0
  5694 ;;      Totals:         0       4       0       0       0       0       0
  5695 ;;Total ram usage:        4 bytes
  5696 ;; Hardware stack levels used:    1
  5697 ;; Hardware stack levels required when called:   11
  5698 ;; This function calls:
  5699 ;;		_readEEPROM
  5700 ;; This function is called by:
  5701 ;;		_main
  5702 ;; This function uses a non-reentrant model
  5703 ;;
  5704                           
  5705                           	psect	text29
  5706  002384                     __ptext29:
  5707                           	opt callstack 0
  5708  002384                     _getData:
  5709                           	opt callstack 0
  5710  002384  FFFF               	dw	65535	; assembler added errata NOP
  5711                           
  5712                           ;eeprom.c: 34:     unsigned char aux0 = readEEPROM(0);
  5713                           
  5714                           ; BSR set to: 0
  5715                           ;incstack = 0
  5716  002386  0E00               	movlw	0
  5717  002388  EC60  F016         	call	_readEEPROM
  5718  00238C  0100               	movlb	0	; () banked
  5719  00238E  6F83               	movwf	getData@aux0& (0+255),b
  5720                           
  5721                           ;eeprom.c: 35:     unsigned char aux1 = readEEPROM(1);
  5722  002390  0E01               	movlw	1
  5723  002392  EC60  F016         	call	_readEEPROM
  5724  002396  0100               	movlb	0	; () banked
  5725  002398  6F84               	movwf	getData@aux1& (0+255),b
  5726                           
  5727                           ; BSR set to: 0
  5728                           ;eeprom.c: 36:     frequency = 0;
  5729  00239A  0E00               	movlw	0
  5730  00239C  6FFB               	movwf	(_frequency+1)& (0+255),b
  5731  00239E  0E00               	movlw	0
  5732  0023A0  6FFA               	movwf	_frequency& (0+255),b
  5733                           
  5734                           ; BSR set to: 0
  5735                           ;eeprom.c: 37:     frequency = (aux1 << 8) | aux0;
  5736  0023A2  5183               	movf	getData@aux0& (0+255),w,b
  5737  0023A4  C084  F081         	movff	getData@aux1,??_getData
  5738  0023A8  6B82               	clrf	(??_getData+1)& (0+255),b
  5739  0023AA  C081  F082         	movff	??_getData,??_getData+1
  5740  0023AE  6B81               	clrf	??_getData& (0+255),b
  5741  0023B0  1181               	iorwf	??_getData& (0+255),w,b
  5742  0023B2  6FFA               	movwf	_frequency& (0+255),b
  5743  0023B4  5182               	movf	(??_getData+1)& (0+255),w,b
  5744  0023B6  6FFB               	movwf	(_frequency+1)& (0+255),b
  5745                           
  5746                           ; BSR set to: 0
  5747                           ;eeprom.c: 38:     months = readEEPROM(2);
  5748  0023B8  0E02               	movlw	2
  5749  0023BA  EC60  F016         	call	_readEEPROM
  5750  0023BE  0100               	movlb	0	; () banked
  5751  0023C0  6FFF               	movwf	_months& (0+255),b
  5752                           
  5753                           ; BSR set to: 0
  5754                           ;eeprom.c: 39:     days = readEEPROM(3);
  5755  0023C2  0E03               	movlw	3
  5756  0023C4  EC60  F016         	call	_readEEPROM
  5757  0023C8  0100               	movlb	0	; () banked
  5758  0023CA  6FFE               	movwf	_days& (0+255),b
  5759                           
  5760                           ; BSR set to: 0
  5761                           ;eeprom.c: 40:     hours = readEEPROM(4);
  5762  0023CC  0E04               	movlw	4
  5763  0023CE  EC60  F016         	call	_readEEPROM
  5764  0023D2  0100               	movlb	0	; () banked
  5765  0023D4  6FFD               	movwf	_hours& (0+255),b
  5766                           
  5767                           ; BSR set to: 0
  5768                           ;eeprom.c: 41:     minutes = readEEPROM(5);
  5769  0023D6  0E05               	movlw	5
  5770  0023D8  EC60  F016         	call	_readEEPROM
  5771  0023DC  0100               	movlb	0	; () banked
  5772  0023DE  6FFC               	movwf	_minutes& (0+255),b
  5773                           
  5774                           ; BSR set to: 0
  5775                           ;eeprom.c: 42:     functionalStat = readEEPROM(6);
  5776  0023E0  0E06               	movlw	6
  5777  0023E2  EC60  F016         	call	_readEEPROM
  5778  0023E6  6E7E               	movwf	_functionalStat,c
  5779  0023E8  0012               	return		;funcret
  5780  0023EA  FFFF               	dw	65535	; errata NOP
  5781  0023EC                     __end_of_getData:
  5782                           	opt callstack 0
  5783                           
  5784 ;; *************** function _readEEPROM *****************
  5785 ;; Defined at:
  5786 ;;		line 7 in file "eeprom.c"
  5787 ;; Parameters:    Size  Location     Type
  5788 ;;  address         1    wreg     unsigned char 
  5789 ;; Auto vars:     Size  Location     Type
  5790 ;;  address         1    0[BANK0 ] unsigned char 
  5791 ;; Return value:  Size  Location     Type
  5792 ;;                  1    wreg      unsigned char 
  5793 ;; Registers used:
  5794 ;;		wreg, status,2
  5795 ;; Tracked objects:
  5796 ;;		On entry : 0/0
  5797 ;;		On exit  : 0/0
  5798 ;;		Unchanged: 0/0
  5799 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5800 ;;      Params:         0       0       0       0       0       0       0
  5801 ;;      Locals:         0       1       0       0       0       0       0
  5802 ;;      Temps:          0       0       0       0       0       0       0
  5803 ;;      Totals:         0       1       0       0       0       0       0
  5804 ;;Total ram usage:        1 bytes
  5805 ;; Hardware stack levels used:    1
  5806 ;; Hardware stack levels required when called:   10
  5807 ;; This function calls:
  5808 ;;		Nothing
  5809 ;; This function is called by:
  5810 ;;		_getData
  5811 ;; This function uses a non-reentrant model
  5812 ;;
  5813                           
  5814                           	psect	text30
  5815  002CC0                     __ptext30:
  5816                           	opt callstack 0
  5817  002CC0                     _readEEPROM:
  5818                           	opt callstack 0
  5819  002CC0  FFFF               	dw	65535	; assembler added errata NOP
  5820                           
  5821                           ;incstack = 0
  5822                           ;readEEPROM@address stored from wreg
  5823  002CC2  0100               	movlb	0	; () banked
  5824  002CC4  6F80               	movwf	readEEPROM@address& (0+255),b
  5825                           
  5826                           ;eeprom.c: 8:     EEADR = address;
  5827  002CC6  C080  FFA9         	movff	readEEPROM@address,4009	;volatile
  5828                           
  5829                           ;eeprom.c: 9:     EECON1bits.EEPGD = 0;
  5830  002CCA  9EA6               	bcf	4006,7,c	;volsfr
  5831                           
  5832                           ;eeprom.c: 10:     EECON1bits.CFGS = 0;
  5833  002CCC  9CA6               	bcf	4006,6,c	;volsfr
  5834                           
  5835                           ;eeprom.c: 11:     EECON1bits.RD = 1;
  5836  002CCE  80A6               	bsf	4006,0,c	;volsfr
  5837                           
  5838                           ;eeprom.c: 12:     return EEDATA;
  5839  002CD0  50A8               	movf	4008,w,c	;volatile
  5840  002CD2  0012               	return		;funcret
  5841  002CD4  FFFF               	dw	65535	; errata NOP
  5842  002CD6                     __end_of_readEEPROM:
  5843                           	opt callstack 0
  5844                           
  5845 ;; *************** function _config *****************
  5846 ;; Defined at:
  5847 ;;		line 41 in file "main.c"
  5848 ;; Parameters:    Size  Location     Type
  5849 ;;		None
  5850 ;; Auto vars:     Size  Location     Type
  5851 ;;		None
  5852 ;; Return value:  Size  Location     Type
  5853 ;;                  1    wreg      void 
  5854 ;; Registers used:
  5855 ;;		wreg, status,2, status,0, cstack
  5856 ;; Tracked objects:
  5857 ;;		On entry : 0/0
  5858 ;;		On exit  : 0/0
  5859 ;;		Unchanged: 0/0
  5860 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5861 ;;      Params:         0       0       0       0       0       0       0
  5862 ;;      Locals:         0       0       0       0       0       0       0
  5863 ;;      Temps:          0       0       0       0       0       0       0
  5864 ;;      Totals:         0       0       0       0       0       0       0
  5865 ;;Total ram usage:        0 bytes
  5866 ;; Hardware stack levels used:    1
  5867 ;; Hardware stack levels required when called:   14
  5868 ;; This function calls:
  5869 ;;		_initLCD
  5870 ;; This function is called by:
  5871 ;;		_main
  5872 ;; This function uses a non-reentrant model
  5873 ;;
  5874                           
  5875                           	psect	text31
  5876  00260E                     __ptext31:
  5877                           	opt callstack 0
  5878  00260E                     _config:
  5879                           	opt callstack 0
  5880  00260E  FFFF               	dw	65535	; assembler added errata NOP
  5881                           
  5882                           ;main.c: 43:     OSCCON = 0b00000000;
  5883                           
  5884                           ;incstack = 0
  5885  002610  0E00               	movlw	0
  5886  002612  6ED3               	movwf	4051,c	;volatile
  5887                           
  5888                           ;main.c: 45:     INTCON = 0b01100000;
  5889  002614  0E60               	movlw	96
  5890  002616  6EF2               	movwf	4082,c	;volatile
  5891                           
  5892                           ;main.c: 46:     PIE1 = 0b00000011;
  5893  002618  0E03               	movlw	3
  5894  00261A  6E9D               	movwf	3997,c	;volatile
  5895                           
  5896                           ;main.c: 48:     TRISA = 0b00011111;
  5897  00261C  0E1F               	movlw	31
  5898  00261E  6E92               	movwf	3986,c	;volatile
  5899                           
  5900                           ;main.c: 49:     TRISB = 0b00000000;
  5901  002620  0E00               	movlw	0
  5902  002622  6E93               	movwf	3987,c	;volatile
  5903                           
  5904                           ;main.c: 50:     TRISC = 0b11111111;
  5905  002624  6894               	setf	3988,c	;volatile
  5906                           
  5907                           ;main.c: 51:     TRISD = 0b00000000;
  5908  002626  0E00               	movlw	0
  5909  002628  6E95               	movwf	3989,c	;volatile
  5910                           
  5911                           ;main.c: 52:     TRISE = 0b00001000;
  5912  00262A  0E08               	movlw	8
  5913  00262C  6E96               	movwf	3990,c	;volatile
  5914                           
  5915                           ;main.c: 53:     PORTA = 0x00;
  5916  00262E  0E00               	movlw	0
  5917  002630  6E80               	movwf	3968,c	;volatile
  5918                           
  5919                           ;main.c: 54:     PORTB = 0x00;
  5920  002632  0E00               	movlw	0
  5921  002634  6E81               	movwf	3969,c	;volatile
  5922                           
  5923                           ;main.c: 55:     PORTC = 0x00;
  5924  002636  0E00               	movlw	0
  5925  002638  6E82               	movwf	3970,c	;volatile
  5926                           
  5927                           ;main.c: 56:     PORTD = 0x00;
  5928  00263A  0E00               	movlw	0
  5929  00263C  6E83               	movwf	3971,c	;volatile
  5930                           
  5931                           ;main.c: 57:     PORTE = 0x00;
  5932  00263E  0E00               	movlw	0
  5933  002640  6E84               	movwf	3972,c	;volatile
  5934                           
  5935                           ;main.c: 59:     T1CON = 0b10110001;
  5936  002642  0EB1               	movlw	177
  5937  002644  6ECD               	movwf	4045,c	;volatile
  5938                           
  5939                           ;main.c: 61:     T0CON = 0b10000000;
  5940  002646  0E80               	movlw	128
  5941  002648  6ED5               	movwf	4053,c	;volatile
  5942                           
  5943                           ;main.c: 63:     ADCON0 = 0b11000001;
  5944  00264A  0EC1               	movlw	193
  5945  00264C  6EC2               	movwf	4034,c	;volatile
  5946                           
  5947                           ;main.c: 64:     ADCON1 = 0b01001101;
  5948  00264E  0E4D               	movlw	77
  5949  002650  6EC1               	movwf	4033,c	;volatile
  5950                           
  5951                           ;main.c: 66:     initLCD();
  5952  002652  EC81  F013         	call	_initLCD	;wreg free
  5953                           
  5954                           ;main.c: 68:     ADCON0bits.GO = 1;
  5955  002656  84C2               	bsf	4034,2,c	;volatile
  5956                           
  5957                           ;main.c: 69:     T1CONbits.TMR1ON = 1;
  5958  002658  80CD               	bsf	4045,0,c	;volatile
  5959                           
  5960                           ;main.c: 70:     INTCONbits.GIE = 1;
  5961  00265A  8EF2               	bsf	4082,7,c	;volatile
  5962  00265C  0012               	return		;funcret
  5963  00265E  FFFF               	dw	65535	; errata NOP
  5964  002660                     __end_of_config:
  5965                           	opt callstack 0
  5966                           
  5967 ;; *************** function _initLCD *****************
  5968 ;; Defined at:
  5969 ;;		line 5 in file "lcd.c"
  5970 ;; Parameters:    Size  Location     Type
  5971 ;;		None
  5972 ;; Auto vars:     Size  Location     Type
  5973 ;;		None
  5974 ;; Return value:  Size  Location     Type
  5975 ;;                  1    wreg      void 
  5976 ;; Registers used:
  5977 ;;		wreg, status,2, status,0, cstack
  5978 ;; Tracked objects:
  5979 ;;		On entry : 0/0
  5980 ;;		On exit  : 0/0
  5981 ;;		Unchanged: 0/0
  5982 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5983 ;;      Params:         0       0       0       0       0       0       0
  5984 ;;      Locals:         0       0       0       0       0       0       0
  5985 ;;      Temps:          0       2       0       0       0       0       0
  5986 ;;      Totals:         0       2       0       0       0       0       0
  5987 ;;Total ram usage:        2 bytes
  5988 ;; Hardware stack levels used:    1
  5989 ;; Hardware stack levels required when called:   13
  5990 ;; This function calls:
  5991 ;;		_OpenXLCD
  5992 ;;		_SendCMDLCD
  5993 ;; This function is called by:
  5994 ;;		_config
  5995 ;; This function uses a non-reentrant model
  5996 ;;
  5997                           
  5998                           	psect	text32
  5999  002702                     __ptext32:
  6000                           	opt callstack 0
  6001  002702                     _initLCD:
  6002                           	opt callstack 0
  6003  002702  FFFF               	dw	65535	; assembler added errata NOP
  6004                           
  6005                           ;lcd.c: 6:     OpenXLCD(0b00101100 & 0b00111000);
  6006                           
  6007                           ;incstack = 0
  6008  002704  0E28               	movlw	40
  6009  002706  EC9E  F00D         	call	_OpenXLCD
  6010                           
  6011                           ;lcd.c: 7:     _delay((unsigned long)((100)*(12000000/4000.0)));
  6012  00270A  0E02               	movlw	2
  6013  00270C  0100               	movlb	0	; () banked
  6014  00270E  6F84               	movwf	(??_initLCD+1)& (0+255),b
  6015  002710  0E25               	movlw	37
  6016  002712  6F83               	movwf	??_initLCD& (0+255),b
  6017  002714  0E63               	movlw	99
  6018  002716                     u4157:
  6019  002716  FFFF               	dw	65535	; errata NOP
  6020  002718  2EE8               	decfsz	wreg,f,c
  6021  00271A  D7FD               	bra	u4157
  6022  00271C  2F83               	decfsz	??_initLCD& (0+255),f,b
  6023  00271E  D7FB               	bra	u4157
  6024  002720  2F84               	decfsz	(??_initLCD+1)& (0+255),f,b
  6025  002722  D7F9               	bra	u4157
  6026  002724  F000               	nop	
  6027                           
  6028                           ;lcd.c: 8:     SendCMDLCD(0b00001101);
  6029  002726  0E0D               	movlw	13
  6030  002728  EC1A  F016         	call	_SendCMDLCD
  6031                           
  6032                           ;lcd.c: 9:     SendCMDLCD(0b00000110);
  6033  00272C  0E06               	movlw	6
  6034  00272E  EC1A  F016         	call	_SendCMDLCD
  6035                           
  6036                           ;lcd.c: 10:     _delay((unsigned long)((50)*(12000000/4000.0)));
  6037  002732  0E93               	movlw	147
  6038  002734  0100               	movlb	0	; () banked
  6039  002736  6F83               	movwf	??_initLCD& (0+255),b
  6040  002738  0E31               	movlw	49
  6041  00273A                     u4167:
  6042  00273A  FFFF               	dw	65535	; errata NOP
  6043  00273C  2EE8               	decfsz	wreg,f,c
  6044  00273E  D7FD               	bra	u4167
  6045  002740  2F83               	decfsz	??_initLCD& (0+255),f,b
  6046  002742  D7FB               	bra	u4167
  6047  002744  D000               	nop2	
  6048  002746  F000               	nop	
  6049  002748  0012               	return		;funcret
  6050  00274A  FFFF               	dw	65535	; errata NOP
  6051  00274C                     __end_of_initLCD:
  6052                           	opt callstack 0
  6053                           
  6054 ;; *************** function _SendCMDLCD *****************
  6055 ;; Defined at:
  6056 ;;		line 27 in file "lcd.c"
  6057 ;; Parameters:    Size  Location     Type
  6058 ;;  CMD             1    wreg     unsigned char 
  6059 ;; Auto vars:     Size  Location     Type
  6060 ;;  CMD             1    1[BANK0 ] unsigned char 
  6061 ;; Return value:  Size  Location     Type
  6062 ;;                  1    wreg      void 
  6063 ;; Registers used:
  6064 ;;		wreg, status,2, status,0, cstack
  6065 ;; Tracked objects:
  6066 ;;		On entry : 0/0
  6067 ;;		On exit  : 0/0
  6068 ;;		Unchanged: 0/0
  6069 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6070 ;;      Params:         0       0       0       0       0       0       0
  6071 ;;      Locals:         0       1       0       0       0       0       0
  6072 ;;      Temps:          0       0       0       0       0       0       0
  6073 ;;      Totals:         0       1       0       0       0       0       0
  6074 ;;Total ram usage:        1 bytes
  6075 ;; Hardware stack levels used:    1
  6076 ;; Hardware stack levels required when called:   12
  6077 ;; This function calls:
  6078 ;;		_BusyXLCD
  6079 ;;		_WriteCmdXLCD
  6080 ;; This function is called by:
  6081 ;;		_initLCD
  6082 ;; This function uses a non-reentrant model
  6083 ;;
  6084                           
  6085                           	psect	text33
  6086  002C34                     __ptext33:
  6087                           	opt callstack 0
  6088  002C34                     _SendCMDLCD:
  6089                           	opt callstack 0
  6090  002C34  FFFF               	dw	65535	; assembler added errata NOP
  6091                           
  6092                           ;incstack = 0
  6093                           ;SendCMDLCD@CMD stored from wreg
  6094  002C36  0100               	movlb	0	; () banked
  6095  002C38  6F81               	movwf	SendCMDLCD@CMD& (0+255),b
  6096  002C3A  FFFF               	dw	65535	; assembler added errata NOP
  6097                           
  6098                           ;lcd.c: 28:     while(BusyXLCD())continue;
  6099  002C3C  EC29  F016         	call	_BusyXLCD	;wreg free
  6100  002C40  0900               	iorlw	0
  6101  002C42  A4D8               	btfss	status,2,c
  6102  002C44  D7FA               	goto	l3799
  6103                           
  6104                           ;lcd.c: 29:     WriteCmdXLCD(CMD);
  6105  002C46  0100               	movlb	0	; () banked
  6106  002C48  5181               	movf	SendCMDLCD@CMD& (0+255),w,b
  6107  002C4A  ECEF  F013         	call	_WriteCmdXLCD
  6108  002C4E  0012               	return		;funcret
  6109  002C50  FFFF               	dw	65535	; errata NOP
  6110  002C52                     __end_of_SendCMDLCD:
  6111                           	opt callstack 0
  6112                           
  6113 ;; *************** function _OpenXLCD *****************
  6114 ;; Defined at:
  6115 ;;		line 40 in file "lcd_pic16.c"
  6116 ;; Parameters:    Size  Location     Type
  6117 ;;  lcdtype         1    wreg     unsigned char 
  6118 ;; Auto vars:     Size  Location     Type
  6119 ;;  lcdtype         1    2[BANK0 ] unsigned char 
  6120 ;; Return value:  Size  Location     Type
  6121 ;;                  1    wreg      void 
  6122 ;; Registers used:
  6123 ;;		wreg, status,2, status,0, cstack
  6124 ;; Tracked objects:
  6125 ;;		On entry : 0/0
  6126 ;;		On exit  : 0/0
  6127 ;;		Unchanged: 0/0
  6128 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6129 ;;      Params:         0       0       0       0       0       0       0
  6130 ;;      Locals:         0       1       0       0       0       0       0
  6131 ;;      Temps:          0       1       0       0       0       0       0
  6132 ;;      Totals:         0       2       0       0       0       0       0
  6133 ;;Total ram usage:        2 bytes
  6134 ;; Hardware stack levels used:    1
  6135 ;; Hardware stack levels required when called:   12
  6136 ;; This function calls:
  6137 ;;		_BusyXLCD
  6138 ;;		_DelayPORXLCD
  6139 ;;		_SetDDRamAddr
  6140 ;;		_WriteCmdXLCD
  6141 ;; This function is called by:
  6142 ;;		_initLCD
  6143 ;; This function uses a non-reentrant model
  6144 ;;
  6145                           
  6146                           	psect	text34
  6147  001B3C                     __ptext34:
  6148                           	opt callstack 0
  6149  001B3C                     _OpenXLCD:
  6150                           	opt callstack 0
  6151  001B3C  FFFF               	dw	65535	; assembler added errata NOP
  6152                           
  6153                           ;incstack = 0
  6154                           ;OpenXLCD@lcdtype stored from wreg
  6155  001B3E  0100               	movlb	0	; () banked
  6156  001B40  6F82               	movwf	OpenXLCD@lcdtype& (0+255),b
  6157                           
  6158                           ;lcd_pic16.c: 40: void OpenXLCD(unsigned char lcdtype);lcd_pic16.c: 41: {;lcd_pic16.c: 4
      +                          7:         PORTD &= 0x0f;
  6159  001B42  0E0F               	movlw	15
  6160  001B44  1683               	andwf	3971,f,c	;volatile
  6161                           
  6162                           ;lcd_pic16.c: 48:         TRISD &= 0x0F;
  6163  001B46  0E0F               	movlw	15
  6164  001B48  1695               	andwf	3989,f,c	;volatile
  6165                           
  6166                           ;lcd_pic16.c: 54:         TRISDbits.TRISD2 = 0;
  6167  001B4A  9495               	bcf	3989,2,c	;volatile
  6168                           
  6169                           ;lcd_pic16.c: 55:         TRISDbits.TRISD3 = 0;
  6170  001B4C  9695               	bcf	3989,3,c	;volatile
  6171                           
  6172                           ;lcd_pic16.c: 56:         TRISDbits.TRISD1 = 0;
  6173  001B4E  9295               	bcf	3989,1,c	;volatile
  6174                           
  6175                           ;lcd_pic16.c: 57:         PORTDbits.RD2 = 0;
  6176  001B50  9483               	bcf	3971,2,c	;volatile
  6177                           
  6178                           ;lcd_pic16.c: 58:         PORTDbits.RD3 = 0;
  6179  001B52  9683               	bcf	3971,3,c	;volatile
  6180                           
  6181                           ;lcd_pic16.c: 59:         PORTDbits.RD1 = 0;
  6182  001B54  9283               	bcf	3971,1,c	;volatile
  6183                           
  6184                           ;lcd_pic16.c: 62:         DelayPORXLCD();
  6185  001B56  EC46  F016         	call	_DelayPORXLCD	;wreg free
  6186                           
  6187                           ;lcd_pic16.c: 64:        WriteCmdXLCD(0x30);
  6188  001B5A  0E30               	movlw	48
  6189  001B5C  ECEF  F013         	call	_WriteCmdXLCD
  6190                           
  6191                           ;lcd_pic16.c: 65:          _delay((unsigned long)((5)*(12000000/4000.0)));
  6192  001B60  0E0F               	movlw	15
  6193  001B62  0100               	movlb	0	; () banked
  6194  001B64  6F81               	movwf	??_OpenXLCD& (0+255),b
  6195  001B66  0E9D               	movlw	157
  6196  001B68                     u4177:
  6197  001B68  FFFF               	dw	65535	; errata NOP
  6198  001B6A  2EE8               	decfsz	wreg,f,c
  6199  001B6C  D7FD               	bra	u4177
  6200  001B6E  2F81               	decfsz	??_OpenXLCD& (0+255),f,b
  6201  001B70  D7FB               	bra	u4177
  6202  001B72  D000               	nop2	
  6203  001B74  F000               	nop	
  6204                           
  6205                           ;lcd_pic16.c: 67:        WriteCmdXLCD(0x30);
  6206  001B76  0E30               	movlw	48
  6207  001B78  ECEF  F013         	call	_WriteCmdXLCD
  6208                           
  6209                           ;lcd_pic16.c: 68:          _delay((unsigned long)((1)*(12000000/4000.0)));
  6210  001B7C  0E03               	movlw	3
  6211  001B7E  0100               	movlb	0	; () banked
  6212  001B80  6F81               	movwf	??_OpenXLCD& (0+255),b
  6213  001B82  0EEB               	movlw	235
  6214  001B84                     u4187:
  6215  001B84  FFFF               	dw	65535	; errata NOP
  6216  001B86  2EE8               	decfsz	wreg,f,c
  6217  001B88  D7FD               	bra	u4187
  6218  001B8A  2F81               	decfsz	??_OpenXLCD& (0+255),f,b
  6219  001B8C  D7FB               	bra	u4187
  6220  001B8E  D000               	nop2	
  6221  001B90  F000               	nop	
  6222                           
  6223                           ;lcd_pic16.c: 71:        WriteCmdXLCD(0x32);
  6224  001B92  0E32               	movlw	50
  6225  001B94  ECEF  F013         	call	_WriteCmdXLCD
  6226  001B98                     l3753:
  6227  001B98  FFFF               	dw	65535	; assembler added errata NOP
  6228  001B9A  EC29  F016         	call	_BusyXLCD	;wreg free
  6229  001B9E  0900               	iorlw	0
  6230  001BA0  A4D8               	btfss	status,2,c
  6231  001BA2  D7FA               	goto	l3753
  6232  001BA4                     u3200:
  6233  001BA4  FFFF               	dw	65535	; assembler added errata NOP
  6234  001BA6  EC29  F016         	call	_BusyXLCD	;wreg free
  6235  001BAA  0900               	iorlw	0
  6236  001BAC  A4D8               	btfss	status,2,c
  6237  001BAE  D7FA               	goto	u3200
  6238                           
  6239                           ;lcd_pic16.c: 78:         WriteCmdXLCD(lcdtype);
  6240  001BB0  0100               	movlb	0	; () banked
  6241  001BB2  5182               	movf	OpenXLCD@lcdtype& (0+255),w,b
  6242  001BB4  ECEF  F013         	call	_WriteCmdXLCD
  6243  001BB8                     l3759:
  6244  001BB8  FFFF               	dw	65535	; assembler added errata NOP
  6245  001BBA  EC29  F016         	call	_BusyXLCD	;wreg free
  6246  001BBE  0900               	iorlw	0
  6247  001BC0  A4D8               	btfss	status,2,c
  6248  001BC2  D7FA               	goto	l3759
  6249                           
  6250                           ;lcd_pic16.c: 82:         WriteCmdXLCD(0b00001011&0b00001101&0b00001110);
  6251  001BC4  0E08               	movlw	8
  6252  001BC6  ECEF  F013         	call	_WriteCmdXLCD
  6253  001BCA                     l3763:
  6254  001BCA  FFFF               	dw	65535	; assembler added errata NOP
  6255  001BCC  EC29  F016         	call	_BusyXLCD	;wreg free
  6256  001BD0  0900               	iorlw	0
  6257  001BD2  A4D8               	btfss	status,2,c
  6258  001BD4  D7FA               	goto	l3763
  6259                           
  6260                           ;lcd_pic16.c: 84:         WriteCmdXLCD(0b00001111&0b00001111&0b00001111);
  6261  001BD6  0E0F               	movlw	15
  6262  001BD8  ECEF  F013         	call	_WriteCmdXLCD
  6263  001BDC                     l3767:
  6264  001BDC  FFFF               	dw	65535	; assembler added errata NOP
  6265  001BDE  EC29  F016         	call	_BusyXLCD	;wreg free
  6266  001BE2  0900               	iorlw	0
  6267  001BE4  A4D8               	btfss	status,2,c
  6268  001BE6  D7FA               	goto	l3767
  6269                           
  6270                           ;lcd_pic16.c: 88:         WriteCmdXLCD(0x01);
  6271  001BE8  0E01               	movlw	1
  6272  001BEA  ECEF  F013         	call	_WriteCmdXLCD
  6273  001BEE                     l3771:
  6274  001BEE  FFFF               	dw	65535	; assembler added errata NOP
  6275  001BF0  EC29  F016         	call	_BusyXLCD	;wreg free
  6276  001BF4  0900               	iorlw	0
  6277  001BF6  A4D8               	btfss	status,2,c
  6278  001BF8  D7FA               	goto	l3771
  6279                           
  6280                           ;lcd_pic16.c: 92:         WriteCmdXLCD(0b00000101);
  6281  001BFA  0E05               	movlw	5
  6282  001BFC  ECEF  F013         	call	_WriteCmdXLCD
  6283  001C00                     l3775:
  6284  001C00  FFFF               	dw	65535	; assembler added errata NOP
  6285  001C02  EC29  F016         	call	_BusyXLCD	;wreg free
  6286  001C06  0900               	iorlw	0
  6287  001C08  A4D8               	btfss	status,2,c
  6288  001C0A  D7FA               	goto	l3775
  6289                           
  6290                           ;lcd_pic16.c: 95:         WriteCmdXLCD(0x06);
  6291  001C0C  0E06               	movlw	6
  6292  001C0E  ECEF  F013         	call	_WriteCmdXLCD
  6293  001C12                     l3779:
  6294  001C12  FFFF               	dw	65535	; assembler added errata NOP
  6295  001C14  EC29  F016         	call	_BusyXLCD	;wreg free
  6296  001C18  0900               	iorlw	0
  6297  001C1A  A4D8               	btfss	status,2,c
  6298  001C1C  D7FA               	goto	l3779
  6299                           
  6300                           ;lcd_pic16.c: 98:         SetDDRamAddr(0x80);
  6301  001C1E  0E80               	movlw	128
  6302  001C20  ECA6  F013         	call	_SetDDRamAddr
  6303  001C24                     l3783:
  6304  001C24  FFFF               	dw	65535	; assembler added errata NOP
  6305  001C26  EC29  F016         	call	_BusyXLCD	;wreg free
  6306  001C2A  0900               	iorlw	0
  6307  001C2C  A4D8               	btfss	status,2,c
  6308  001C2E  D7FA               	goto	l3783
  6309                           
  6310                           ;lcd_pic16.c: 101:         WriteCmdXLCD(0b00001101);
  6311  001C30  0E0D               	movlw	13
  6312  001C32  ECEF  F013         	call	_WriteCmdXLCD
  6313  001C36  0012               	return		;funcret
  6314  001C38  FFFF               	dw	65535	; errata NOP
  6315  001C3A                     __end_of_OpenXLCD:
  6316                           	opt callstack 0
  6317                           
  6318 ;; *************** function _WriteCmdXLCD *****************
  6319 ;; Defined at:
  6320 ;;		line 164 in file "lcd_pic16.c"
  6321 ;; Parameters:    Size  Location     Type
  6322 ;;  cmd             1    wreg     unsigned char 
  6323 ;; Auto vars:     Size  Location     Type
  6324 ;;  cmd             1    0[BANK0 ] unsigned char 
  6325 ;; Return value:  Size  Location     Type
  6326 ;;                  1    wreg      void 
  6327 ;; Registers used:
  6328 ;;		wreg, status,2, status,0, cstack
  6329 ;; Tracked objects:
  6330 ;;		On entry : 0/0
  6331 ;;		On exit  : 0/0
  6332 ;;		Unchanged: 0/0
  6333 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6334 ;;      Params:         0       0       0       0       0       0       0
  6335 ;;      Locals:         0       1       0       0       0       0       0
  6336 ;;      Temps:          0       0       0       0       0       0       0
  6337 ;;      Totals:         0       1       0       0       0       0       0
  6338 ;;Total ram usage:        1 bytes
  6339 ;; Hardware stack levels used:    1
  6340 ;; Hardware stack levels required when called:   11
  6341 ;; This function calls:
  6342 ;;		_DelayFor18TCY
  6343 ;; This function is called by:
  6344 ;;		_OpenXLCD
  6345 ;;		_SendCMDLCD
  6346 ;; This function uses a non-reentrant model
  6347 ;;
  6348                           
  6349                           	psect	text35
  6350  0027DE                     __ptext35:
  6351                           	opt callstack 0
  6352  0027DE                     _WriteCmdXLCD:
  6353                           	opt callstack 0
  6354  0027DE  FFFF               	dw	65535	; assembler added errata NOP
  6355                           
  6356                           ;incstack = 0
  6357                           ;WriteCmdXLCD@cmd stored from wreg
  6358  0027E0  0100               	movlb	0	; () banked
  6359  0027E2  6F80               	movwf	WriteCmdXLCD@cmd& (0+255),b
  6360                           
  6361                           ;lcd_pic16.c: 178:         TRISD &= 0x0f;
  6362  0027E4  0E0F               	movlw	15
  6363  0027E6  1695               	andwf	3989,f,c	;volatile
  6364                           
  6365                           ;lcd_pic16.c: 179:         PORTD &= 0x0f;
  6366  0027E8  0E0F               	movlw	15
  6367  0027EA  1683               	andwf	3971,f,c	;volatile
  6368                           
  6369                           ;lcd_pic16.c: 180:         PORTD |= cmd&0xf0;
  6370  0027EC  0100               	movlb	0	; () banked
  6371  0027EE  5180               	movf	WriteCmdXLCD@cmd& (0+255),w,b
  6372  0027F0  0BF0               	andlw	240
  6373  0027F2  1283               	iorwf	3971,f,c	;volatile
  6374                           
  6375                           ; BSR set to: 0
  6376                           ;lcd_pic16.c: 186:         PORTDbits.RD2 = 0;
  6377  0027F4  9483               	bcf	3971,2,c	;volatile
  6378                           
  6379                           ; BSR set to: 0
  6380                           ;lcd_pic16.c: 187:         PORTDbits.RD3 = 0;
  6381  0027F6  9683               	bcf	3971,3,c	;volatile
  6382                           
  6383                           ; BSR set to: 0
  6384                           ;lcd_pic16.c: 188:         DelayFor18TCY();
  6385  0027F8  EC6B  F016         	call	_DelayFor18TCY	;wreg free
  6386                           
  6387                           ;lcd_pic16.c: 189:         PORTDbits.RD1 = 1;
  6388  0027FC  8283               	bsf	3971,1,c	;volatile
  6389                           
  6390                           ;lcd_pic16.c: 190:         DelayFor18TCY();
  6391  0027FE  EC6B  F016         	call	_DelayFor18TCY	;wreg free
  6392                           
  6393                           ;lcd_pic16.c: 191:         PORTDbits.RD1 = 0;
  6394  002802  9283               	bcf	3971,1,c	;volatile
  6395                           
  6396                           ;lcd_pic16.c: 193:         PORTD &= 0x0f;
  6397  002804  0E0F               	movlw	15
  6398  002806  1683               	andwf	3971,f,c	;volatile
  6399                           
  6400                           ;lcd_pic16.c: 194:         PORTD |= (cmd<<4)&0xf0;
  6401  002808  0100               	movlb	0	; () banked
  6402  00280A  3980               	swapf	WriteCmdXLCD@cmd& (0+255),w,b
  6403  00280C  0BF0               	andlw	240
  6404  00280E  0BF0               	andlw	240
  6405  002810  1283               	iorwf	3971,f,c	;volatile
  6406                           
  6407                           ; BSR set to: 0
  6408                           ;lcd_pic16.c: 199:         DelayFor18TCY();
  6409  002812  EC6B  F016         	call	_DelayFor18TCY	;wreg free
  6410                           
  6411                           ;lcd_pic16.c: 200:         PORTDbits.RD1 = 1;
  6412  002816  8283               	bsf	3971,1,c	;volatile
  6413                           
  6414                           ;lcd_pic16.c: 201:         DelayFor18TCY();
  6415  002818  EC6B  F016         	call	_DelayFor18TCY	;wreg free
  6416                           
  6417                           ;lcd_pic16.c: 202:         PORTDbits.RD1 = 0;
  6418  00281C  9283               	bcf	3971,1,c	;volatile
  6419                           
  6420                           ;lcd_pic16.c: 204:         TRISD |= 0xf0;
  6421  00281E  0EF0               	movlw	240
  6422  002820  1295               	iorwf	3989,f,c	;volatile
  6423  002822  0012               	return		;funcret
  6424  002824  FFFF               	dw	65535	; errata NOP
  6425  002826                     __end_of_WriteCmdXLCD:
  6426                           	opt callstack 0
  6427                           
  6428 ;; *************** function _SetDDRamAddr *****************
  6429 ;; Defined at:
  6430 ;;		line 217 in file "lcd_pic16.c"
  6431 ;; Parameters:    Size  Location     Type
  6432 ;;  DDaddr          1    wreg     unsigned char 
  6433 ;; Auto vars:     Size  Location     Type
  6434 ;;  DDaddr          1    0[BANK0 ] unsigned char 
  6435 ;; Return value:  Size  Location     Type
  6436 ;;                  1    wreg      void 
  6437 ;; Registers used:
  6438 ;;		wreg, status,2, status,0, cstack
  6439 ;; Tracked objects:
  6440 ;;		On entry : 0/0
  6441 ;;		On exit  : 0/0
  6442 ;;		Unchanged: 0/0
  6443 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6444 ;;      Params:         0       0       0       0       0       0       0
  6445 ;;      Locals:         0       1       0       0       0       0       0
  6446 ;;      Temps:          0       0       0       0       0       0       0
  6447 ;;      Totals:         0       1       0       0       0       0       0
  6448 ;;Total ram usage:        1 bytes
  6449 ;; Hardware stack levels used:    1
  6450 ;; Hardware stack levels required when called:   11
  6451 ;; This function calls:
  6452 ;;		_DelayFor18TCY
  6453 ;; This function is called by:
  6454 ;;		_OpenXLCD
  6455 ;;		_lcdVumeter
  6456 ;; This function uses a non-reentrant model
  6457 ;;
  6458                           
  6459                           	psect	text36
  6460  00274C                     __ptext36:
  6461                           	opt callstack 0
  6462  00274C                     _SetDDRamAddr:
  6463                           	opt callstack 0
  6464  00274C  FFFF               	dw	65535	; assembler added errata NOP
  6465                           
  6466                           ;incstack = 0
  6467                           ;SetDDRamAddr@DDaddr stored from wreg
  6468  00274E  0100               	movlb	0	; () banked
  6469  002750  6F80               	movwf	SetDDRamAddr@DDaddr& (0+255),b
  6470                           
  6471                           ;lcd_pic16.c: 217: void SetDDRamAddr(unsigned char DDaddr);lcd_pic16.c: 218: {;lcd_pic16
      +                          .c: 232:         TRISD &= 0x0f;
  6472  002752  0E0F               	movlw	15
  6473  002754  1695               	andwf	3989,f,c	;volatile
  6474                           
  6475                           ;lcd_pic16.c: 233:         PORTD &= 0x0f;
  6476  002756  0E0F               	movlw	15
  6477  002758  1683               	andwf	3971,f,c	;volatile
  6478                           
  6479                           ;lcd_pic16.c: 234:         PORTD |= ((DDaddr | 0b10000000) & 0xf0);
  6480  00275A  0100               	movlb	0	; () banked
  6481  00275C  5180               	movf	SetDDRamAddr@DDaddr& (0+255),w,b
  6482  00275E  0980               	iorlw	128
  6483  002760  0BF0               	andlw	240
  6484  002762  1283               	iorwf	3971,f,c	;volatile
  6485                           
  6486                           ; BSR set to: 0
  6487                           ;lcd_pic16.c: 240:         PORTDbits.RD2 = 0;
  6488  002764  9483               	bcf	3971,2,c	;volatile
  6489                           
  6490                           ; BSR set to: 0
  6491                           ;lcd_pic16.c: 241:         PORTDbits.RD3 = 0;
  6492  002766  9683               	bcf	3971,3,c	;volatile
  6493                           
  6494                           ; BSR set to: 0
  6495                           ;lcd_pic16.c: 242:         DelayFor18TCY();
  6496  002768  EC6B  F016         	call	_DelayFor18TCY	;wreg free
  6497                           
  6498                           ;lcd_pic16.c: 243:         PORTDbits.RD1 = 1;
  6499  00276C  8283               	bsf	3971,1,c	;volatile
  6500                           
  6501                           ;lcd_pic16.c: 244:         DelayFor18TCY();
  6502  00276E  EC6B  F016         	call	_DelayFor18TCY	;wreg free
  6503                           
  6504                           ;lcd_pic16.c: 245:         PORTDbits.RD1 = 0;
  6505  002772  9283               	bcf	3971,1,c	;volatile
  6506                           
  6507                           ;lcd_pic16.c: 247:         PORTD &= 0x0f;
  6508  002774  0E0F               	movlw	15
  6509  002776  1683               	andwf	3971,f,c	;volatile
  6510                           
  6511                           ;lcd_pic16.c: 248:         PORTD |= ((DDaddr<<4)&0xf0);
  6512  002778  0100               	movlb	0	; () banked
  6513  00277A  3980               	swapf	SetDDRamAddr@DDaddr& (0+255),w,b
  6514  00277C  0BF0               	andlw	240
  6515  00277E  0BF0               	andlw	240
  6516  002780  1283               	iorwf	3971,f,c	;volatile
  6517                           
  6518                           ; BSR set to: 0
  6519                           ;lcd_pic16.c: 253:         DelayFor18TCY();
  6520  002782  EC6B  F016         	call	_DelayFor18TCY	;wreg free
  6521                           
  6522                           ;lcd_pic16.c: 254:         PORTDbits.RD1 = 1;
  6523  002786  8283               	bsf	3971,1,c	;volatile
  6524                           
  6525                           ;lcd_pic16.c: 255:         DelayFor18TCY();
  6526  002788  EC6B  F016         	call	_DelayFor18TCY	;wreg free
  6527                           
  6528                           ;lcd_pic16.c: 256:         PORTDbits.RD1 = 0;
  6529  00278C  9283               	bcf	3971,1,c	;volatile
  6530                           
  6531                           ;lcd_pic16.c: 258:         TRISD |= 0xf0;
  6532  00278E  0EF0               	movlw	240
  6533  002790  1295               	iorwf	3989,f,c	;volatile
  6534  002792  0012               	return		;funcret
  6535  002794  FFFF               	dw	65535	; errata NOP
  6536  002796                     __end_of_SetDDRamAddr:
  6537                           	opt callstack 0
  6538                           
  6539 ;; *************** function _DelayFor18TCY *****************
  6540 ;; Defined at:
  6541 ;;		line 22 in file "lcd_pic16.c"
  6542 ;; Parameters:    Size  Location     Type
  6543 ;;		None
  6544 ;; Auto vars:     Size  Location     Type
  6545 ;;		None
  6546 ;; Return value:  Size  Location     Type
  6547 ;;                  1    wreg      void 
  6548 ;; Registers used:
  6549 ;;		wreg
  6550 ;; Tracked objects:
  6551 ;;		On entry : 0/0
  6552 ;;		On exit  : 0/0
  6553 ;;		Unchanged: 0/0
  6554 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6555 ;;      Params:         0       0       0       0       0       0       0
  6556 ;;      Locals:         0       0       0       0       0       0       0
  6557 ;;      Temps:          0       0       0       0       0       0       0
  6558 ;;      Totals:         0       0       0       0       0       0       0
  6559 ;;Total ram usage:        0 bytes
  6560 ;; Hardware stack levels used:    1
  6561 ;; Hardware stack levels required when called:   10
  6562 ;; This function calls:
  6563 ;;		Nothing
  6564 ;; This function is called by:
  6565 ;;		_WriteDataXLCD
  6566 ;;		_WriteCmdXLCD
  6567 ;;		_SetDDRamAddr
  6568 ;;		_SetCGRamAddr
  6569 ;;		_ReadDataXLCD
  6570 ;;		_ReadAddrXLCD
  6571 ;; This function uses a non-reentrant model
  6572 ;;
  6573                           
  6574                           	psect	text37
  6575  002CD6                     __ptext37:
  6576                           	opt callstack 0
  6577  002CD6                     _DelayFor18TCY:
  6578                           	opt callstack 0
  6579  002CD6  FFFF               	dw	65535	; assembler added errata NOP
  6580                           
  6581                           ;lcd_pic16.c: 24:    _delay((unsigned long)((18)*(12000000/4000000.0)));
  6582                           
  6583                           ;incstack = 0
  6584  002CD8  0E0D               	movlw	13
  6585  002CDA                     u4197:
  6586  002CDA  FFFF               	dw	65535	; errata NOP
  6587  002CDC  2EE8               	decfsz	wreg,f,c
  6588  002CDE  D7FD               	bra	u4197
  6589  002CE0  D000               	nop2	
  6590  002CE2  0012               	return		;funcret
  6591  002CE4  FFFF               	dw	65535	; errata NOP
  6592  002CE6                     __end_of_DelayFor18TCY:
  6593                           	opt callstack 0
  6594                           
  6595 ;; *************** function _DelayPORXLCD *****************
  6596 ;; Defined at:
  6597 ;;		line 27 in file "lcd_pic16.c"
  6598 ;; Parameters:    Size  Location     Type
  6599 ;;		None
  6600 ;; Auto vars:     Size  Location     Type
  6601 ;;		None
  6602 ;; Return value:  Size  Location     Type
  6603 ;;                  1    wreg      void 
  6604 ;; Registers used:
  6605 ;;		wreg
  6606 ;; Tracked objects:
  6607 ;;		On entry : 0/0
  6608 ;;		On exit  : 0/0
  6609 ;;		Unchanged: 0/0
  6610 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6611 ;;      Params:         0       0       0       0       0       0       0
  6612 ;;      Locals:         0       0       0       0       0       0       0
  6613 ;;      Temps:          0       1       0       0       0       0       0
  6614 ;;      Totals:         0       1       0       0       0       0       0
  6615 ;;Total ram usage:        1 bytes
  6616 ;; Hardware stack levels used:    1
  6617 ;; Hardware stack levels required when called:   10
  6618 ;; This function calls:
  6619 ;;		Nothing
  6620 ;; This function is called by:
  6621 ;;		_OpenXLCD
  6622 ;; This function uses a non-reentrant model
  6623 ;;
  6624                           
  6625                           	psect	text38
  6626  002C8C                     __ptext38:
  6627                           	opt callstack 0
  6628  002C8C                     _DelayPORXLCD:
  6629                           	opt callstack 0
  6630  002C8C  FFFF               	dw	65535	; assembler added errata NOP
  6631                           
  6632                           ;lcd_pic16.c: 29:    _delay((unsigned long)((20)*(12000000/4000.0)));
  6633                           
  6634                           ;incstack = 0
  6635  002C8E  0E3B               	movlw	59
  6636  002C90  0100               	movlb	0	; () banked
  6637  002C92  6F80               	movwf	??_DelayPORXLCD& (0+255),b
  6638  002C94  0E79               	movlw	121
  6639  002C96                     u4207:
  6640  002C96  FFFF               	dw	65535	; errata NOP
  6641  002C98  2EE8               	decfsz	wreg,f,c
  6642  002C9A  D7FD               	bra	u4207
  6643  002C9C  2F80               	decfsz	??_DelayPORXLCD& (0+255),f,b
  6644  002C9E  D7FB               	bra	u4207
  6645  002CA0  D000               	nop2	
  6646  002CA2  F000               	nop	
  6647  002CA4  0012               	return		;funcret
  6648  002CA6  FFFF               	dw	65535	; errata NOP
  6649  002CA8                     __end_of_DelayPORXLCD:
  6650                           	opt callstack 0
  6651                           
  6652 ;; *************** function _BusyXLCD *****************
  6653 ;; Defined at:
  6654 ;;		line 451 in file "lcd_pic16.c"
  6655 ;; Parameters:    Size  Location     Type
  6656 ;;		None
  6657 ;; Auto vars:     Size  Location     Type
  6658 ;;		None
  6659 ;; Return value:  Size  Location     Type
  6660 ;;                  1    wreg      unsigned char 
  6661 ;; Registers used:
  6662 ;;		wreg
  6663 ;; Tracked objects:
  6664 ;;		On entry : 0/0
  6665 ;;		On exit  : 0/0
  6666 ;;		Unchanged: 0/0
  6667 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6668 ;;      Params:         0       0       0       0       0       0       0
  6669 ;;      Locals:         0       0       0       0       0       0       0
  6670 ;;      Temps:          0       1       0       0       0       0       0
  6671 ;;      Totals:         0       1       0       0       0       0       0
  6672 ;;Total ram usage:        1 bytes
  6673 ;; Hardware stack levels used:    1
  6674 ;; Hardware stack levels required when called:   10
  6675 ;; This function calls:
  6676 ;;		Nothing
  6677 ;; This function is called by:
  6678 ;;		_OpenXLCD
  6679 ;;		_putsXLCD
  6680 ;;		_SendCMDLCD
  6681 ;;		_lcdVumeter
  6682 ;;		_putrsXLCD
  6683 ;; This function uses a non-reentrant model
  6684 ;;
  6685                           
  6686                           	psect	text39
  6687  002C52                     __ptext39:
  6688                           	opt callstack 0
  6689  002C52                     _BusyXLCD:
  6690                           	opt callstack 0
  6691  002C52  FFFF               	dw	65535	; assembler added errata NOP
  6692                           
  6693                           ;lcd_pic16.c: 504:         _delay((unsigned long)((5)*(12000000/4000.0)));
  6694                           
  6695                           ;incstack = 0
  6696  002C54  0E0F               	movlw	15
  6697  002C56  0100               	movlb	0	; () banked
  6698  002C58  6F80               	movwf	??_BusyXLCD& (0+255),b
  6699  002C5A  0E9D               	movlw	157
  6700  002C5C                     u4217:
  6701  002C5C  FFFF               	dw	65535	; errata NOP
  6702  002C5E  2EE8               	decfsz	wreg,f,c
  6703  002C60  D7FD               	bra	u4217
  6704  002C62  2F80               	decfsz	??_BusyXLCD& (0+255),f,b
  6705  002C64  D7FB               	bra	u4217
  6706  002C66  D000               	nop2	
  6707  002C68  F000               	nop	
  6708                           
  6709                           ;lcd_pic16.c: 505:         return 0;
  6710  002C6A  0E00               	movlw	0
  6711  002C6C  0012               	return		;funcret
  6712  002C6E  FFFF               	dw	65535	; errata NOP
  6713  002C70                     __end_of_BusyXLCD:
  6714                           	opt callstack 0
  6715                           
  6716 ;; *************** function _inter *****************
  6717 ;; Defined at:
  6718 ;;		line 74 in file "main.c"
  6719 ;; Parameters:    Size  Location     Type
  6720 ;;		None
  6721 ;; Auto vars:     Size  Location     Type
  6722 ;;		None
  6723 ;; Return value:  Size  Location     Type
  6724 ;;                  1    wreg      void 
  6725 ;; Registers used:
  6726 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6727 ;; Tracked objects:
  6728 ;;		On entry : 0/0
  6729 ;;		On exit  : 0/0
  6730 ;;		Unchanged: 0/0
  6731 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6732 ;;      Params:         0       0       0       0       0       0       0
  6733 ;;      Locals:         0       0       0       0       0       0       0
  6734 ;;      Temps:         10       0       0       0       0       0       0
  6735 ;;      Totals:        10       0       0       0       0       0       0
  6736 ;;Total ram usage:       10 bytes
  6737 ;; Hardware stack levels used:    1
  6738 ;; Hardware stack levels required when called:    9
  6739 ;; This function calls:
  6740 ;;		_time
  6741 ;;		_updateLCD
  6742 ;; This function is called by:
  6743 ;;		Interrupt level 2
  6744 ;; This function uses a non-reentrant model
  6745 ;;
  6746                           
  6747                           	psect	intcode
  6748  000008                     __pintcode:
  6749                           	opt callstack 0
  6750  000008                     _inter:
  6751                           	opt callstack 0
  6752  000008  FFFF               	dw	65535	; assembler added errata NOP
  6753                           
  6754                           ;incstack = 0
  6755  00000A  827F               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  6756  00000C  CFE1 F070          	movff	fsr1l,??_inter
  6757  000010  CFE2 F071          	movff	fsr1h,??_inter+1
  6758  000014  CFD9 F072          	movff	fsr2l,??_inter+2
  6759  000018  CFDA F073          	movff	fsr2h,??_inter+3
  6760  00001C  CFF3 F074          	movff	prodl,??_inter+4
  6761  000020  CFF4 F075          	movff	prodh,??_inter+5
  6762  000024  CFF6 F076          	movff	tblptrl,??_inter+6
  6763  000028  CFF7 F077          	movff	tblptrh,??_inter+7
  6764  00002C  CFF8 F078          	movff	tblptru,??_inter+8
  6765  000030  CFF5 F079          	movff	tablat,??_inter+9
  6766                           
  6767                           ;main.c: 76:     INTCONbits.GIE = 0;
  6768  000034  9EF2               	bcf	4082,7,c	;volatile
  6769                           
  6770                           ;main.c: 78:     if(PIR1bits.TMR1IF == 1){
  6771  000036  A09E               	btfss	3998,0,c	;volatile
  6772  000038  D013               	goto	i2l4373
  6773                           
  6774                           ;main.c: 79:         TMR1H = prTmr1H;
  6775  00003A  C07C  FFCF         	movff	_prTmr1H,4047	;volatile
  6776                           
  6777                           ;main.c: 80:         TMR1L = prTmr1L;
  6778  00003E  C07D  FFCE         	movff	_prTmr1L,4046	;volatile
  6779                           
  6780                           ;main.c: 81:         cntTmr1++;
  6781  000042  0101               	movlb	1	; () banked
  6782  000044  2B06               	incf	_cntTmr1& (0+255),f,b
  6783                           
  6784                           ; BSR set to: 1
  6785                           ;main.c: 82:         time();
  6786  000046  EC1E  F011         	call	_time	;wreg free
  6787                           
  6788                           ;main.c: 83:         if(cntTmr1 == 10){
  6789  00004A  0E0A               	movlw	10
  6790  00004C  0101               	movlb	1	; () banked
  6791  00004E  1906               	xorwf	_cntTmr1& (0+255),w,b
  6792  000050  A4D8               	btfss	status,2,c
  6793  000052  D004               	goto	i2l4371
  6794                           
  6795                           ; BSR set to: 1
  6796                           ;main.c: 84:             cntTmr1 = 0;
  6797  000054  0E00               	movlw	0
  6798  000056  6F06               	movwf	_cntTmr1& (0+255),b
  6799                           
  6800                           ; BSR set to: 1
  6801                           ;main.c: 85:             updateLCD();
  6802  000058  EC28  F010         	call	_updateLCD	;wreg free
  6803  00005C                     i2l4371:
  6804  00005C  FFFF               	dw	65535	; assembler added errata NOP
  6805                           
  6806                           ;main.c: 87:         PIR1bits.TMR1IF = 0;
  6807  00005E  909E               	bcf	3998,0,c	;volatile
  6808  000060                     i2l4373:
  6809  000060  FFFF               	dw	65535	; assembler added errata NOP
  6810                           
  6811                           ;main.c: 90:     if(INTCONbits.TMR0IF == 1){
  6812  000062  A4F2               	btfss	4082,2,c	;volatile
  6813  000064  D006               	goto	i2l227
  6814                           
  6815                           ;main.c: 91:         TMR0H = prTmr0H;
  6816  000066  C07A  FFD7         	movff	_prTmr0H,4055	;volatile
  6817                           
  6818                           ;main.c: 92:         TMR0L = prTmr0L;
  6819  00006A  C07B  FFD6         	movff	_prTmr0L,4054	;volatile
  6820                           
  6821                           ;main.c: 94:         ADCON0bits.GO = 1;
  6822  00006E  84C2               	bsf	4034,2,c	;volatile
  6823                           
  6824                           ;main.c: 95:         INTCONbits.TMR0IF = 0;
  6825  000070  94F2               	bcf	4082,2,c	;volatile
  6826  000072                     i2l227:
  6827  000072  FFFF               	dw	65535	; assembler added errata NOP
  6828                           
  6829                           ;main.c: 98:     INTCONbits.GIE = 1;
  6830  000074  8EF2               	bsf	4082,7,c	;volatile
  6831                           
  6832                           ;main.c: 99:     return;
  6833  000076  C079  FFF5         	movff	??_inter+9,tablat
  6834  00007A  C078  FFF8         	movff	??_inter+8,tblptru
  6835  00007E  C077  FFF7         	movff	??_inter+7,tblptrh
  6836  000082  C076  FFF6         	movff	??_inter+6,tblptrl
  6837  000086  C075  FFF4         	movff	??_inter+5,prodh
  6838  00008A  C074  FFF3         	movff	??_inter+4,prodl
  6839  00008E  C073  FFDA         	movff	??_inter+3,fsr2h
  6840  000092  C072  FFD9         	movff	??_inter+2,fsr2l
  6841  000096  C071  FFE2         	movff	??_inter+1,fsr1h
  6842  00009A  C070  FFE1         	movff	??_inter,fsr1l
  6843  00009E  927F               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  6844  0000A0  0011               	retfie		f
  6845  0000A2  FFFF               	dw	65535	; errata NOP
  6846  0000A4                     __end_of_inter:
  6847                           	opt callstack 0
  6848                           
  6849 ;; *************** function _updateLCD *****************
  6850 ;; Defined at:
  6851 ;;		line 14 in file "lcd.c"
  6852 ;; Parameters:    Size  Location     Type
  6853 ;;		None
  6854 ;; Auto vars:     Size  Location     Type
  6855 ;;  integ           1  110[COMRAM] unsigned char 
  6856 ;;  decim           1  109[COMRAM] unsigned char 
  6857 ;; Return value:  Size  Location     Type
  6858 ;;                  1    wreg      void 
  6859 ;; Registers used:
  6860 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6861 ;; Tracked objects:
  6862 ;;		On entry : 0/0
  6863 ;;		On exit  : 0/0
  6864 ;;		Unchanged: 0/0
  6865 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6866 ;;      Params:         0       0       0       0       0       0       0
  6867 ;;      Locals:         2       0       0       0       0       0       0
  6868 ;;      Temps:          0       0       0       0       0       0       0
  6869 ;;      Totals:         2       0       0       0       0       0       0
  6870 ;;Total ram usage:        2 bytes
  6871 ;; Hardware stack levels used:    1
  6872 ;; Hardware stack levels required when called:    8
  6873 ;; This function calls:
  6874 ;;		i2_SetDDRamAddr
  6875 ;;		i2___lwdiv
  6876 ;;		i2___lwmod
  6877 ;;		i2_putsXLCD
  6878 ;;		i2_sprintf
  6879 ;; This function is called by:
  6880 ;;		_inter
  6881 ;; This function uses a non-reentrant model
  6882 ;;
  6883                           
  6884                           	psect	text41
  6885  002050                     __ptext41:
  6886                           	opt callstack 0
  6887  002050                     _updateLCD:
  6888                           	opt callstack 0
  6889  002050  FFFF               	dw	65535	; assembler added errata NOP
  6890                           
  6891                           ;lcd.c: 15:     if(isOnConfig){
  6892                           
  6893                           ;incstack = 0
  6894  002052  0101               	movlb	1	; () banked
  6895  002054  5103               	movf	_isOnConfig& (0+255),w,b
  6896  002056  B4D8               	btfsc	status,2,c
  6897  002058  D031               	goto	i2l4295
  6898                           
  6899                           ; BSR set to: 1
  6900                           ;lcd.c: 16:         unsigned char decim = frequency % 10;
  6901  00205A  C0FA  F001         	movff	_frequency,i2___lwmod@dividend
  6902  00205E  C0FB  F002         	movff	_frequency+1,i2___lwmod@dividend+1
  6903  002062  0E00               	movlw	0
  6904  002064  6E04               	movwf	i2___lwmod@divisor+1,c
  6905  002066  0E0A               	movlw	10
  6906  002068  6E03               	movwf	i2___lwmod@divisor,c
  6907  00206A  EC59  F013         	call	i2___lwmod	;wreg free
  6908  00206E  5001               	movf	?i2___lwmod,w,c
  6909  002070  6E6E               	movwf	updateLCD@decim,c
  6910                           
  6911                           ;lcd.c: 17:         unsigned char integ = frequency / 10;
  6912  002072  C0FA  F001         	movff	_frequency,i2___lwdiv@dividend
  6913  002076  C0FB  F002         	movff	_frequency+1,i2___lwdiv@dividend+1
  6914  00207A  0E00               	movlw	0
  6915  00207C  6E04               	movwf	i2___lwdiv@divisor+1,c
  6916  00207E  0E0A               	movlw	10
  6917  002080  6E03               	movwf	i2___lwdiv@divisor,c
  6918  002082  EC57  F012         	call	i2___lwdiv	;wreg free
  6919  002086  5001               	movf	?i2___lwdiv,w,c
  6920  002088  6E6F               	movwf	updateLCD@integ,c
  6921                           
  6922                           ;lcd.c: 18:         sprintf(lineTwo,"Fcia. %3d.%d MHz",integ, decim);
  6923  00208A  0E27               	movlw	low _lineTwo
  6924  00208C  6E5C               	movwf	i2sprintf@s,c
  6925  00208E  0E01               	movlw	high _lineTwo
  6926  002090  6E5D               	movwf	i2sprintf@s+1,c
  6927  002092  0E17               	movlw	low STR_4
  6928  002094  6E5E               	movwf	i2sprintf@fmt,c
  6929  002096  0E06               	movlw	high STR_4
  6930  002098  6E5F               	movwf	i2sprintf@fmt+1,c
  6931  00209A  C06F  F060         	movff	updateLCD@integ,?i2_sprintf+4
  6932  00209E  6A61               	clrf	?i2_sprintf+5,c
  6933  0020A0  C06E  F062         	movff	updateLCD@decim,?i2_sprintf+6
  6934  0020A4  6A63               	clrf	?i2_sprintf+7,c
  6935  0020A6  EC30  F013         	call	i2_sprintf	;wreg free
  6936                           
  6937                           ;lcd.c: 19:         SetDDRamAddr(0x40);
  6938  0020AA  0E40               	movlw	64
  6939  0020AC  EC7B  F014         	call	i2_SetDDRamAddr
  6940                           
  6941                           ;lcd.c: 20:         putsXLCD(lineTwo);
  6942  0020B0  0E27               	movlw	low _lineTwo
  6943  0020B2  6E02               	movwf	i2putsXLCD@buffer,c
  6944  0020B4  0E01               	movlw	high _lineTwo
  6945  0020B6  6E03               	movwf	i2putsXLCD@buffer+1,c
  6946  0020B8  EC72  F015         	call	i2_putsXLCD	;wreg free
  6947  0020BC                     i2l4295:
  6948  0020BC  FFFF               	dw	65535	; assembler added errata NOP
  6949                           
  6950                           ;lcd.c: 22:     SetDDRamAddr(0x00);
  6951  0020BE  0E00               	movlw	0
  6952  0020C0  EC7B  F014         	call	i2_SetDDRamAddr
  6953                           
  6954                           ;lcd.c: 23:     putsXLCD(lineOne);
  6955  0020C4  0E38               	movlw	low _lineOne
  6956  0020C6  6E02               	movwf	i2putsXLCD@buffer,c
  6957  0020C8  0E01               	movlw	high _lineOne
  6958  0020CA  6E03               	movwf	i2putsXLCD@buffer+1,c
  6959  0020CC  EC72  F015         	call	i2_putsXLCD	;wreg free
  6960  0020D0  0012               	return		;funcret
  6961  0020D2  FFFF               	dw	65535	; errata NOP
  6962  0020D4                     __end_of_updateLCD:
  6963                           	opt callstack 0
  6964                           
  6965 ;; *************** function i2_sprintf *****************
  6966 ;; Defined at:
  6967 ;;		line 9 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/nf_sprintf.c"
  6968 ;; Parameters:    Size  Location     Type
  6969 ;;  s               2   91[COMRAM] PTR unsigned char 
  6970 ;;		 -> lineTwo(17), lineOne(17), 
  6971 ;;  fmt             2   93[COMRAM] PTR const unsigned char 
  6972 ;;		 -> STR_5(18), STR_4(17), STR_3(17), STR_2(17), 
  6973 ;;		 -> STR_1(17), 
  6974 ;; Auto vars:     Size  Location     Type
  6975 ;;  sprintf         6  103[COMRAM] struct _IO_FILE
  6976 ;;  sprintf         2  101[COMRAM] PTR void [1]
  6977 ;;		 -> ?i2_sprintf(2), ?_sprintf(2), 
  6978 ;;  sprintf         2    0        int 
  6979 ;; Return value:  Size  Location     Type
  6980 ;;                  2   91[COMRAM] int 
  6981 ;; Registers used:
  6982 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6983 ;; Tracked objects:
  6984 ;;		On entry : 0/0
  6985 ;;		On exit  : 0/0
  6986 ;;		Unchanged: 0/0
  6987 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6988 ;;      Params:         8       0       0       0       0       0       0
  6989 ;;      Locals:        10       0       0       0       0       0       0
  6990 ;;      Temps:          0       0       0       0       0       0       0
  6991 ;;      Totals:        18       0       0       0       0       0       0
  6992 ;;Total ram usage:       18 bytes
  6993 ;; Hardware stack levels used:    1
  6994 ;; Hardware stack levels required when called:    7
  6995 ;; This function calls:
  6996 ;;		i2_vfprintf
  6997 ;; This function is called by:
  6998 ;;		_updateLCD
  6999 ;; This function uses a non-reentrant model
  7000 ;;
  7001                           
  7002                           	psect	text42
  7003  002660                     __ptext42:
  7004                           	opt callstack 0
  7005  002660                     i2_sprintf:
  7006                           	opt callstack 0
  7007  002660  FFFF               	dw	65535	; assembler added errata NOP
  7008                           
  7009                           ;incstack = 0
  7010  002662  0E60               	movlw	low (?i2_sprintf+4)
  7011  002664  6E66               	movwf	i2sprintf@ap,c
  7012  002666  0E00               	movlw	high (?i2_sprintf+4)
  7013  002668  6E67               	movwf	i2sprintf@ap+1,c
  7014  00266A  C05C  F068         	movff	i2sprintf@s,i2sprintf@f
  7015  00266E  C05D  F069         	movff	i2sprintf@s+1,i2sprintf@f+1
  7016  002672  0E00               	movlw	0
  7017  002674  6E6B               	movwf	i2sprintf@f+3,c
  7018  002676  0E00               	movlw	0
  7019  002678  6E6A               	movwf	i2sprintf@f+2,c
  7020  00267A  0E00               	movlw	0
  7021  00267C  6E6D               	movwf	i2sprintf@f+5,c
  7022  00267E  0E00               	movlw	0
  7023  002680  6E6C               	movwf	i2sprintf@f+4,c
  7024  002682  0E68               	movlw	low i2sprintf@f
  7025  002684  6E54               	movwf	i2vfprintf@fp,c
  7026  002686  0E00               	movlw	high i2sprintf@f
  7027  002688  6E55               	movwf	i2vfprintf@fp+1,c
  7028  00268A  C05E  F056         	movff	i2sprintf@fmt,i2vfprintf@fmt
  7029  00268E  C05F  F057         	movff	i2sprintf@fmt+1,i2vfprintf@fmt+1
  7030  002692  0E66               	movlw	low i2sprintf@ap
  7031  002694  6E58               	movwf	i2vfprintf@ap,c
  7032  002696  0E00               	movlw	high i2sprintf@ap
  7033  002698  6E59               	movwf	i2vfprintf@ap+1,c
  7034  00269A  EC27  F012         	call	i2_vfprintf	;wreg free
  7035  00269E  506A               	movf	i2sprintf@f+2,w,c
  7036  0026A0  245C               	addwf	i2sprintf@s,w,c
  7037  0026A2  6ED9               	movwf	fsr2l,c
  7038  0026A4  506B               	movf	i2sprintf@f+3,w,c
  7039  0026A6  205D               	addwfc	i2sprintf@s+1,w,c
  7040  0026A8  6EDA               	movwf	fsr2h,c
  7041  0026AA  0E00               	movlw	0
  7042  0026AC  6EDF               	movwf	indf2,c
  7043  0026AE  0012               	return		;funcret
  7044  0026B0  FFFF               	dw	65535	; errata NOP
  7045  0026B2                     __end_ofi2_sprintf:
  7046                           	opt callstack 0
  7047                           
  7048 ;; *************** function i2_vfprintf *****************
  7049 ;; Defined at:
  7050 ;;		line 1368 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  7051 ;; Parameters:    Size  Location     Type
  7052 ;;  fp              2   83[COMRAM] PTR struct _IO_FILE
  7053 ;;		 -> i2sprintf@f(6), sprintf@f(6), 
  7054 ;;  fmt             2   85[COMRAM] PTR const unsigned char 
  7055 ;;		 -> STR_5(18), STR_4(17), STR_3(17), STR_2(17), 
  7056 ;;		 -> STR_1(17), 
  7057 ;;  ap              2   87[COMRAM] PTR PTR void 
  7058 ;;		 -> i2sprintf@ap(2), sprintf@ap(2), 
  7059 ;; Auto vars:     Size  Location     Type
  7060 ;;  vfprintf        2   89[COMRAM] PTR unsigned char 
  7061 ;;		 -> STR_5(18), STR_4(17), STR_3(17), STR_2(17), 
  7062 ;;		 -> STR_1(17), 
  7063 ;; Return value:  Size  Location     Type
  7064 ;;                  2   83[COMRAM] int 
  7065 ;; Registers used:
  7066 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7067 ;; Tracked objects:
  7068 ;;		On entry : 0/0
  7069 ;;		On exit  : 0/0
  7070 ;;		Unchanged: 0/0
  7071 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7072 ;;      Params:         6       0       0       0       0       0       0
  7073 ;;      Locals:         2       0       0       0       0       0       0
  7074 ;;      Temps:          0       0       0       0       0       0       0
  7075 ;;      Totals:         8       0       0       0       0       0       0
  7076 ;;Total ram usage:        8 bytes
  7077 ;; Hardware stack levels used:    1
  7078 ;; Hardware stack levels required when called:    6
  7079 ;; This function calls:
  7080 ;;		i2_vfpfcnvrt
  7081 ;; This function is called by:
  7082 ;;		i2_sprintf
  7083 ;; This function uses a non-reentrant model
  7084 ;;
  7085                           
  7086                           	psect	text43
  7087  00244E                     __ptext43:
  7088                           	opt callstack 0
  7089  00244E                     i2_vfprintf:
  7090                           	opt callstack 0
  7091  00244E  FFFF               	dw	65535	; assembler added errata NOP
  7092                           
  7093                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1368: int vfprintf(FILE *fp, 
      +                          const char *fmt, va_list ap);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1
      +                          369: {;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1371:     char *cfmt;;/
      +                          opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1373:     cfmt = (char *)fmt;
  7094                           
  7095                           ;incstack = 0
  7096  002450  C056  F05A         	movff	i2vfprintf@fmt,i2vfprintf@cfmt
  7097  002454  C057  F05B         	movff	i2vfprintf@fmt+1,i2vfprintf@cfmt+1
  7098                           
  7099                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1374:     nout = 0;
  7100  002458  0E00               	movlw	0
  7101  00245A  0101               	movlb	1	; () banked
  7102  00245C  6F01               	movwf	(_nout+1)& (0+255),b
  7103  00245E  0E00               	movlw	0
  7104  002460  6F00               	movwf	_nout& (0+255),b
  7105                           
  7106                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
  7107  002462  D014               	goto	i2l3905
  7108  002464                     i2l3903:
  7109  002464  FFFF               	dw	65535	; assembler added errata NOP
  7110                           
  7111                           ; BSR set to: 1
  7112                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1376:         nout += vfpfcnv
      +                          rt(fp, &cfmt, ap);
  7113  002466  C054  F040         	movff	i2vfprintf@fp,i2vfpfcnvrt@fp
  7114  00246A  C055  F041         	movff	i2vfprintf@fp+1,i2vfpfcnvrt@fp+1
  7115  00246E  0E5A               	movlw	low i2vfprintf@cfmt
  7116  002470  6E42               	movwf	i2vfpfcnvrt@fmt,c
  7117  002472  0E00               	movlw	high i2vfprintf@cfmt
  7118  002474  6E43               	movwf	i2vfpfcnvrt@fmt+1,c
  7119  002476  C058  F044         	movff	i2vfprintf@ap,i2vfpfcnvrt@ap
  7120  00247A  C059  F045         	movff	i2vfprintf@ap+1,i2vfpfcnvrt@ap+1
  7121  00247E  EC71  F004         	call	i2_vfpfcnvrt	;wreg free
  7122  002482  5040               	movf	?i2_vfpfcnvrt,w,c
  7123  002484  0101               	movlb	1	; () banked
  7124  002486  2700               	addwf	_nout& (0+255),f,b
  7125  002488  5041               	movf	?i2_vfpfcnvrt+1,w,c
  7126  00248A  2301               	addwfc	(_nout+1)& (0+255),f,b
  7127  00248C                     i2l3905:
  7128  00248C  FFFF               	dw	65535	; assembler added errata NOP
  7129                           
  7130                           ; BSR set to: 1
  7131                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
  7132  00248E  C05A  FFF6         	movff	i2vfprintf@cfmt,tblptrl
  7133  002492  C05B  FFF7         	movff	i2vfprintf@cfmt+1,tblptrh
  7134  002496                     	if	0	;tblptru may be non-zero
  7135  002496                     	endif
  7136  002496                     	if	0	;tblptru may be non-zero
  7137  002496                     	endif
  7138  002496  0008               	tblrd		*
  7139  002498  FFFF               	dw	65535	; errata NOP
  7140  00249A  50F5               	movf	tablat,w,c
  7141  00249C  0900               	iorlw	0
  7142  00249E  A4D8               	btfss	status,2,c
  7143  0024A0  D7E1               	goto	i2l3903
  7144                           
  7145                           ; BSR set to: 1
  7146                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1378:     return nout;
  7147  0024A2  C100  F054         	movff	_nout,?i2_vfprintf
  7148  0024A6  C101  F055         	movff	_nout+1,?i2_vfprintf+1
  7149                           
  7150                           ; BSR set to: 1
  7151  0024AA  0012               	return		;funcret
  7152  0024AC  FFFF               	dw	65535	; errata NOP
  7153  0024AE                     __end_ofi2_vfprintf:
  7154                           	opt callstack 0
  7155                           
  7156 ;; *************** function i2_vfpfcnvrt *****************
  7157 ;; Defined at:
  7158 ;;		line 670 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  7159 ;; Parameters:    Size  Location     Type
  7160 ;;  fp              2   63[COMRAM] PTR struct _IO_FILE
  7161 ;;		 -> i2sprintf@f(6), sprintf@f(6), 
  7162 ;;  fmt             2   65[COMRAM] PTR PTR unsigned char 
  7163 ;;		 -> i2vfprintf@cfmt(2), vfprintf@cfmt(2), 
  7164 ;;  ap              2   67[COMRAM] PTR PTR void 
  7165 ;;		 -> i2sprintf@ap(2), sprintf@ap(2), 
  7166 ;; Auto vars:     Size  Location     Type
  7167 ;;  vfpfcnvrt       8   73[COMRAM] long long 
  7168 ;;  vfpfcnvrt       8    0        unsigned long long 
  7169 ;;  vfpfcnvrt       4    0        unsigned long long 
  7170 ;;  vfpfcnvrt       3    0        PTR void 
  7171 ;;  vfpfcnvrt       3    0        unsigned char [3]
  7172 ;;  vfpfcnvrt       3    0        PTR unsigned char 
  7173 ;;  vfpfcnvrt       2    0        int 
  7174 ;;  vfpfcnvrt       2    0        int 
  7175 ;;  vfpfcnvrt       1    0        unsigned char 
  7176 ;; Return value:  Size  Location     Type
  7177 ;;                  2   63[COMRAM] int 
  7178 ;; Registers used:
  7179 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7180 ;; Tracked objects:
  7181 ;;		On entry : 0/0
  7182 ;;		On exit  : 0/0
  7183 ;;		Unchanged: 0/0
  7184 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7185 ;;      Params:         6       0       0       0       0       0       0
  7186 ;;      Locals:        10       0       0       0       0       0       0
  7187 ;;      Temps:          4       0       0       0       0       0       0
  7188 ;;      Totals:        20       0       0       0       0       0       0
  7189 ;;Total ram usage:       20 bytes
  7190 ;; Hardware stack levels used:    1
  7191 ;; Hardware stack levels required when called:    5
  7192 ;; This function calls:
  7193 ;;		i2_atoi
  7194 ;;		i2_dtoa
  7195 ;;		i2_fputc
  7196 ;;		i2_isdigit
  7197 ;; This function is called by:
  7198 ;;		i2_vfprintf
  7199 ;; This function uses a non-reentrant model
  7200 ;;
  7201                           
  7202                           	psect	text44
  7203  0008E2                     __ptext44:
  7204                           	opt callstack 0
  7205  0008E2                     i2_vfpfcnvrt:
  7206                           	opt callstack 0
  7207  0008E2  FFFF               	dw	65535	; assembler added errata NOP
  7208                           
  7209                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 670: static int vfpfcnvrt(FIL
      +                          E *fp, char *fmt[], va_list ap);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c
      +                          : 671: {;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 672:     char c, *cp,
      +                           ct[3];;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 673:     int done, i;;
      +                          /opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 674:     long long ll;;/opt/mi
      +                          crochip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 675:     unsigned long long llu;
  7210                           
  7211                           ; BSR set to: 1
  7212                           ;incstack = 0
  7213  0008E4  C042  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
  7214  0008E8  C043  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
  7215  0008EC  CFDE FFF6          	movff	postinc2,tblptrl
  7216  0008F0  CFDD FFF7          	movff	postdec2,tblptrh
  7217  0008F4                     	if	0	;tblptru may be non-zero
  7218  0008F4                     	endif
  7219  0008F4                     	if	0	;tblptru may be non-zero
  7220  0008F4                     	endif
  7221  0008F4  0008               	tblrd		*
  7222  0008F6  FFFF               	dw	65535	; errata NOP
  7223  0008F8  50F5               	movf	tablat,w,c
  7224  0008FA  0A25               	xorlw	37
  7225  0008FC  A4D8               	btfss	status,2,c
  7226  0008FE  D112               	goto	i2l3691
  7227                           
  7228                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 681:         ++*fmt;
  7229  000900  C042  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
  7230  000904  C043  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
  7231  000908  2ADE               	incf	postinc2,f,c
  7232  00090A  0E00               	movlw	0
  7233  00090C  22DD               	addwfc	postdec2,f,c
  7234                           
  7235                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 683:         flags = width = 
      +                          0;
  7236  00090E  0E00               	movlw	0
  7237  000910  0100               	movlb	0	; () banked
  7238  000912  6FF5               	movwf	(_width+1)& (0+255),b
  7239  000914  0E00               	movlw	0
  7240  000916  6FF4               	movwf	_width& (0+255),b
  7241  000918  C0F4  F0F8         	movff	_width,_flags
  7242  00091C  C0F5  F0F9         	movff	_width+1,_flags+1
  7243                           
  7244                           ; BSR set to: 0
  7245                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 684:         prec = -1;
  7246  000920  69F6               	setf	_prec& (0+255),b
  7247  000922  69F7               	setf	(_prec+1)& (0+255),b
  7248                           
  7249                           ; BSR set to: 0
  7250                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 723:         if ((*fmt)[0] ==
      +                           '*') {
  7251  000924  C042  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
  7252  000928  C043  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
  7253  00092C  CFDE FFF6          	movff	postinc2,tblptrl
  7254  000930  CFDD FFF7          	movff	postdec2,tblptrh
  7255  000934                     	if	0	;tblptru may be non-zero
  7256  000934                     	endif
  7257  000934                     	if	0	;tblptru may be non-zero
  7258  000934                     	endif
  7259  000934  0008               	tblrd		*
  7260  000936  FFFF               	dw	65535	; errata NOP
  7261  000938  50F5               	movf	tablat,w,c
  7262  00093A  0A2A               	xorlw	42
  7263  00093C  A4D8               	btfss	status,2,c
  7264  00093E  D023               	goto	i2l3655
  7265                           
  7266                           ; BSR set to: 0
  7267                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 724:             ++*fmt;
  7268  000940  C042  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
  7269  000944  C043  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
  7270  000948  2ADE               	incf	postinc2,f,c
  7271  00094A  0E00               	movlw	0
  7272  00094C  22DD               	addwfc	postdec2,f,c
  7273                           
  7274                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 725:             width = (*(i
      +                          nt *)__va_arg(*(int **)ap, (int)0));
  7275  00094E  C044  FFD9         	movff	i2vfpfcnvrt@ap,fsr2l
  7276  000952  C045  FFDA         	movff	i2vfpfcnvrt@ap+1,fsr2h
  7277  000956  CFDF F046          	movff	indf2,??i2_vfpfcnvrt
  7278  00095A  0E02               	movlw	2
  7279  00095C  26DE               	addwf	postinc2,f,c
  7280  00095E  CFDF F047          	movff	indf2,??i2_vfpfcnvrt+1
  7281  000962  0E00               	movlw	0
  7282  000964  22DD               	addwfc	postdec2,f,c
  7283  000966  C046  FFD9         	movff	??i2_vfpfcnvrt,fsr2l
  7284  00096A  C047  FFDA         	movff	??i2_vfpfcnvrt+1,fsr2h
  7285  00096E  CFDE F0F4          	movff	postinc2,_width
  7286  000972  CFDD F0F5          	movff	postdec2,_width+1
  7287                           
  7288                           ; BSR set to: 0
  7289                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 726:             if (width < 
      +                          0) {
  7290  000976  AFF5               	btfss	(_width+1)& (0+255),7,b
  7291  000978  D045               	goto	i2u315_40
  7292                           
  7293                           ; BSR set to: 0
  7294                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 727:                 flags |=
      +                           (1 << 0);
  7295  00097A  81F8               	bsf	_flags& (0+255),0,b
  7296                           
  7297                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 728:                 width = 
      +                          -width;
  7298  00097C  6DF4               	negf	_width& (0+255),b
  7299  00097E  1FF5               	comf	(_width+1)& (0+255),f,b
  7300  000980  B0D8               	btfsc	status,0,c
  7301  000982  2BF5               	incf	(_width+1)& (0+255),f,b
  7302  000984  D03F               	goto	i2u315_40
  7303  000986                     i2l3655:
  7304  000986  FFFF               	dw	65535	; assembler added errata NOP
  7305                           
  7306                           ; BSR set to: 0
  7307                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 731:             width = atoi
      +                          (*fmt);
  7308  000988  C042  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
  7309  00098C  C043  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
  7310  000990  CFDE F008          	movff	postinc2,i2atoi@s
  7311  000994  CFDD F009          	movff	postdec2,i2atoi@s+1
  7312  000998  ECBE  F009         	call	i2_atoi	;wreg free
  7313  00099C  C008  F0F4         	movff	?i2_atoi,_width
  7314  0009A0  C009  F0F5         	movff	?i2_atoi+1,_width+1
  7315                           
  7316                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 732:             while ((0 ? 
      +                          isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  7317  0009A4  D008               	goto	i2l3659
  7318  0009A6                     i2l3657:
  7319  0009A6  FFFF               	dw	65535	; assembler added errata NOP
  7320                           
  7321                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 733:                 ++*fmt;
  7322  0009A8  C042  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
  7323  0009AC  C043  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
  7324  0009B0  2ADE               	incf	postinc2,f,c
  7325  0009B2  0E00               	movlw	0
  7326  0009B4  22DD               	addwfc	postdec2,f,c
  7327  0009B6                     i2l3659:
  7328  0009B6  FFFF               	dw	65535	; assembler added errata NOP
  7329  0009B8  0ED0               	movlw	208
  7330  0009BA  6E46               	movwf	??i2_vfpfcnvrt& (0+255),c
  7331  0009BC  0EFF               	movlw	255
  7332  0009BE  6E47               	movwf	(??i2_vfpfcnvrt+1)& (0+255),c
  7333  0009C0  C042  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
  7334  0009C4  C043  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
  7335  0009C8  CFDE FFF6          	movff	postinc2,tblptrl
  7336  0009CC  CFDD FFF7          	movff	postdec2,tblptrh
  7337  0009D0                     	if	0	;tblptru may be non-zero
  7338  0009D0                     	endif
  7339  0009D0                     	if	0	;tblptru may be non-zero
  7340  0009D0                     	endif
  7341  0009D0  0008               	tblrd		*
  7342  0009D2  FFFF               	dw	65535	; errata NOP
  7343  0009D4  50F5               	movf	tablat,w,c
  7344  0009D6  6E48               	movwf	(??i2_vfpfcnvrt+2)& (0+255),c
  7345  0009D8  6A49               	clrf	(??i2_vfpfcnvrt+3)& (0+255),c
  7346  0009DA  5046               	movf	??i2_vfpfcnvrt,w,c
  7347  0009DC  2648               	addwf	??i2_vfpfcnvrt+2,f,c
  7348  0009DE  5047               	movf	??i2_vfpfcnvrt+1,w,c
  7349  0009E0  2249               	addwfc	??i2_vfpfcnvrt+3,f,c
  7350  0009E2  5049               	movf	??i2_vfpfcnvrt+3,w,c
  7351  0009E4  E106               	bnz	i2u313_40
  7352  0009E6  0E0A               	movlw	10
  7353  0009E8  5C48               	subwf	??i2_vfpfcnvrt+2,w,c
  7354  0009EA  B0D8               	btfsc	status,0,c
  7355  0009EC  D002               	goto	i2u313_40
  7356  0009EE  0E01               	movlw	1
  7357  0009F0  D002               	goto	i2u314_40
  7358  0009F2                     i2u313_40:
  7359  0009F2  FFFF               	dw	65535	; assembler added errata NOP
  7360  0009F4  0E00               	movlw	0
  7361  0009F6                     i2u314_40:
  7362  0009F6  FFFF               	dw	65535	; assembler added errata NOP
  7363  0009F8  6E52               	movwf	i2_vfpfcnvrt$1128,c
  7364  0009FA  6A53               	clrf	i2_vfpfcnvrt$1128+1,c
  7365  0009FC  5052               	movf	i2_vfpfcnvrt$1128,w,c
  7366  0009FE  1053               	iorwf	i2_vfpfcnvrt$1128+1,w,c
  7367  000A00  A4D8               	btfss	status,2,c
  7368  000A02  D7D1               	goto	i2l3657
  7369  000A04                     i2u315_40:
  7370  000A04  FFFF               	dw	65535	; assembler added errata NOP
  7371                           
  7372                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 825:         if ((*fmt[0] == 
      +                          'd') || (*fmt[0] == 'i')) {
  7373  000A06  C042  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
  7374  000A0A  C043  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
  7375  000A0E  CFDE FFF6          	movff	postinc2,tblptrl
  7376  000A12  CFDD FFF7          	movff	postdec2,tblptrh
  7377  000A16                     	if	0	;tblptru may be non-zero
  7378  000A16                     	endif
  7379  000A16                     	if	0	;tblptru may be non-zero
  7380  000A16                     	endif
  7381  000A16  0008               	tblrd		*
  7382  000A18  FFFF               	dw	65535	; errata NOP
  7383  000A1A  50F5               	movf	tablat,w,c
  7384  000A1C  0A64               	xorlw	100
  7385  000A1E  B4D8               	btfsc	status,2,c
  7386  000A20  D00E               	goto	i2u317_40
  7387  000A22  C042  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
  7388  000A26  C043  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
  7389  000A2A  CFDE FFF6          	movff	postinc2,tblptrl
  7390  000A2E  CFDD FFF7          	movff	postdec2,tblptrh
  7391  000A32                     	if	0	;tblptru may be non-zero
  7392  000A32                     	endif
  7393  000A32                     	if	0	;tblptru may be non-zero
  7394  000A32                     	endif
  7395  000A32  0008               	tblrd		*
  7396  000A34  FFFF               	dw	65535	; errata NOP
  7397  000A36  50F5               	movf	tablat,w,c
  7398  000A38  0A69               	xorlw	105
  7399  000A3A  A4D8               	btfss	status,2,c
  7400  000A3C  D040               	goto	i2l3675
  7401  000A3E                     i2u317_40:
  7402  000A3E  FFFF               	dw	65535	; assembler added errata NOP
  7403                           
  7404                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 827:             ++*fmt;
  7405  000A40  C042  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
  7406  000A44  C043  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
  7407  000A48  2ADE               	incf	postinc2,f,c
  7408  000A4A  0E00               	movlw	0
  7409  000A4C  22DD               	addwfc	postdec2,f,c
  7410                           
  7411                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 828:             ll = (long l
      +                          ong)(*(int *)__va_arg(*(int **)ap, (int)0));
  7412  000A4E  C044  FFD9         	movff	i2vfpfcnvrt@ap,fsr2l
  7413  000A52  C045  FFDA         	movff	i2vfpfcnvrt@ap+1,fsr2h
  7414  000A56  CFDF F046          	movff	indf2,??i2_vfpfcnvrt
  7415  000A5A  0E02               	movlw	2
  7416  000A5C  26DE               	addwf	postinc2,f,c
  7417  000A5E  CFDF F047          	movff	indf2,??i2_vfpfcnvrt+1
  7418  000A62  0E00               	movlw	0
  7419  000A64  22DD               	addwfc	postdec2,f,c
  7420  000A66  C046  FFD9         	movff	??i2_vfpfcnvrt,fsr2l
  7421  000A6A  C047  FFDA         	movff	??i2_vfpfcnvrt+1,fsr2h
  7422  000A6E  CFDE F04A          	movff	postinc2,i2vfpfcnvrt@ll
  7423  000A72  CFDD F04B          	movff	postdec2,i2vfpfcnvrt@ll+1
  7424  000A76  0E00               	movlw	0
  7425  000A78  BE4B               	btfsc	i2vfpfcnvrt@ll+1,7,c
  7426  000A7A  0EFF               	movlw	-1
  7427  000A7C  6E4C               	movwf	i2vfpfcnvrt@ll+2,c
  7428  000A7E  6E4D               	movwf	i2vfpfcnvrt@ll+3,c
  7429  000A80  6E4E               	movwf	i2vfpfcnvrt@ll+4,c
  7430  000A82  6E4F               	movwf	i2vfpfcnvrt@ll+5,c
  7431  000A84  6E50               	movwf	i2vfpfcnvrt@ll+6,c
  7432  000A86  6E51               	movwf	i2vfpfcnvrt@ll+7,c
  7433                           
  7434                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 830:             return dtoa(
      +                          fp, ll);
  7435  000A88  C040  F01C         	movff	i2vfpfcnvrt@fp,i2dtoa@fp
  7436  000A8C  C041  F01D         	movff	i2vfpfcnvrt@fp+1,i2dtoa@fp+1
  7437  000A90  C04A  F01E         	movff	i2vfpfcnvrt@ll,i2dtoa@d
  7438  000A94  C04B  F01F         	movff	i2vfpfcnvrt@ll+1,i2dtoa@d+1
  7439  000A98  C04C  F020         	movff	i2vfpfcnvrt@ll+2,i2dtoa@d+2
  7440  000A9C  C04D  F021         	movff	i2vfpfcnvrt@ll+3,i2dtoa@d+3
  7441  000AA0  C04E  F022         	movff	i2vfpfcnvrt@ll+4,i2dtoa@d+4
  7442  000AA4  C04F  F023         	movff	i2vfpfcnvrt@ll+5,i2dtoa@d+5
  7443  000AA8  C050  F024         	movff	i2vfpfcnvrt@ll+6,i2dtoa@d+6
  7444  000AAC  C051  F025         	movff	i2vfpfcnvrt@ll+7,i2dtoa@d+7
  7445  000AB0  ECE7  F006         	call	i2_dtoa	;wreg free
  7446  000AB4  C01C  F040         	movff	?i2_dtoa,?i2_vfpfcnvrt
  7447  000AB8  C01D  F041         	movff	?i2_dtoa+1,?i2_vfpfcnvrt+1
  7448  000ABC  D04F               	goto	i2l648
  7449  000ABE                     i2l3675:
  7450  000ABE  FFFF               	dw	65535	; assembler added errata NOP
  7451                           
  7452                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1350:         if ((*fmt)[0] =
      +                          = '%') {
  7453  000AC0  C042  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
  7454  000AC4  C043  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
  7455  000AC8  CFDE FFF6          	movff	postinc2,tblptrl
  7456  000ACC  CFDD FFF7          	movff	postdec2,tblptrh
  7457  000AD0                     	if	0	;tblptru may be non-zero
  7458  000AD0                     	endif
  7459  000AD0                     	if	0	;tblptru may be non-zero
  7460  000AD0                     	endif
  7461  000AD0  0008               	tblrd		*
  7462  000AD2  FFFF               	dw	65535	; errata NOP
  7463  000AD4  50F5               	movf	tablat,w,c
  7464  000AD6  0A25               	xorlw	37
  7465  000AD8  A4D8               	btfss	status,2,c
  7466  000ADA  D016               	goto	i2l3685
  7467                           
  7468                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1351:             ++*fmt;
  7469  000ADC  C042  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
  7470  000AE0  C043  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
  7471  000AE4  2ADE               	incf	postinc2,f,c
  7472  000AE6  0E00               	movlw	0
  7473  000AE8  22DD               	addwfc	postdec2,f,c
  7474                           
  7475                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1352:             fputc((int)
      +                          '%', fp);
  7476  000AEA  0E00               	movlw	0
  7477  000AEC  6E02               	movwf	i2fputc@c+1,c
  7478  000AEE  0E25               	movlw	37
  7479  000AF0  6E01               	movwf	i2fputc@c,c
  7480  000AF2  C040  F003         	movff	i2vfpfcnvrt@fp,i2fputc@fp
  7481  000AF6  C041  F004         	movff	i2vfpfcnvrt@fp+1,i2fputc@fp+1
  7482  000AFA  EC2E  F00F         	call	i2_fputc	;wreg free
  7483  000AFE                     i2l3681:
  7484  000AFE  FFFF               	dw	65535	; assembler added errata NOP
  7485                           
  7486                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1353:             return 1;
  7487  000B00  0E00               	movlw	0
  7488  000B02  6E41               	movwf	?i2_vfpfcnvrt+1,c
  7489  000B04  0E01               	movlw	1
  7490  000B06  D00B               	goto	L13
  7491  000B08                     i2l3685:
  7492  000B08  FFFF               	dw	65535	; assembler added errata NOP
  7493                           
  7494                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1357:         ++*fmt;
  7495  000B0A  C042  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
  7496  000B0E  C043  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
  7497  000B12  2ADE               	incf	postinc2,f,c
  7498  000B14  0E00               	movlw	0
  7499  000B16  22DD               	addwfc	postdec2,f,c
  7500                           
  7501                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1358:         return 0;
  7502  000B18  0E00               	movlw	0
  7503  000B1A  6E41               	movwf	?i2_vfpfcnvrt+1,c
  7504  000B1C  0E00               	movlw	0
  7505  000B1E                     L13:
  7506  000B1E  FFFF               	dw	65535	; assembler added errata NOP
  7507  000B20  6E40               	movwf	?i2_vfpfcnvrt,c
  7508  000B22  D01C               	goto	i2l648
  7509  000B24                     i2l3691:
  7510  000B24  FFFF               	dw	65535	; assembler added errata NOP
  7511                           
  7512                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1362:     fputc((int)(*fmt)[0
      +                          ], fp);
  7513  000B26  C042  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
  7514  000B2A  C043  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
  7515  000B2E  CFDE FFF6          	movff	postinc2,tblptrl
  7516  000B32  CFDD FFF7          	movff	postdec2,tblptrh
  7517  000B36                     	if	0	;tblptru may be non-zero
  7518  000B36                     	endif
  7519  000B36                     	if	0	;tblptru may be non-zero
  7520  000B36                     	endif
  7521  000B36  0008               	tblrd		*
  7522  000B38  FFFF               	dw	65535	; errata NOP
  7523  000B3A  50F5               	movf	tablat,w,c
  7524  000B3C  6E01               	movwf	i2fputc@c,c
  7525  000B3E  6A02               	clrf	i2fputc@c+1,c
  7526  000B40  C040  F003         	movff	i2vfpfcnvrt@fp,i2fputc@fp
  7527  000B44  C041  F004         	movff	i2vfpfcnvrt@fp+1,i2fputc@fp+1
  7528  000B48  EC2E  F00F         	call	i2_fputc	;wreg free
  7529                           
  7530                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1363:     ++*fmt;
  7531  000B4C  C042  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
  7532  000B50  C043  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
  7533  000B54  2ADE               	incf	postinc2,f,c
  7534  000B56  0E00               	movlw	0
  7535  000B58  22DD               	addwfc	postdec2,f,c
  7536  000B5A  D7D1               	goto	i2l3681
  7537  000B5C                     i2l648:
  7538  000B5C  FFFF               	dw	65535	; assembler added errata NOP
  7539  000B5E  0012               	return		;funcret
  7540  000B60  FFFF               	dw	65535	; errata NOP
  7541  000B62                     __end_ofi2_vfpfcnvrt:
  7542                           	opt callstack 0
  7543                           
  7544 ;; *************** function i2_dtoa *****************
  7545 ;; Defined at:
  7546 ;;		line 274 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  7547 ;; Parameters:    Size  Location     Type
  7548 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  7549 ;;		 -> i2sprintf@f(6), sprintf@f(6), 
  7550 ;;  d               8   29[COMRAM] long long 
  7551 ;; Auto vars:     Size  Location     Type
  7552 ;;  dtoa            8   53[COMRAM] long long 
  7553 ;;  dtoa            2   61[COMRAM] int 
  7554 ;;  dtoa            2   51[COMRAM] int 
  7555 ;;  dtoa            2   49[COMRAM] int 
  7556 ;;  dtoa            2   47[COMRAM] int 
  7557 ;; Return value:  Size  Location     Type
  7558 ;;                  2   27[COMRAM] int 
  7559 ;; Registers used:
  7560 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7561 ;; Tracked objects:
  7562 ;;		On entry : 0/0
  7563 ;;		On exit  : 0/0
  7564 ;;		Unchanged: 0/0
  7565 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7566 ;;      Params:        10       0       0       0       0       0       0
  7567 ;;      Locals:        18       0       0       0       0       0       0
  7568 ;;      Temps:          8       0       0       0       0       0       0
  7569 ;;      Totals:        36       0       0       0       0       0       0
  7570 ;;Total ram usage:       36 bytes
  7571 ;; Hardware stack levels used:    1
  7572 ;; Hardware stack levels required when called:    4
  7573 ;; This function calls:
  7574 ;;		i2___aodiv
  7575 ;;		i2___aomod
  7576 ;;		i2_abs
  7577 ;;		i2_pad
  7578 ;; This function is called by:
  7579 ;;		i2_vfpfcnvrt
  7580 ;; This function uses a non-reentrant model
  7581 ;;
  7582                           
  7583                           	psect	text45
  7584  000DCE                     __ptext45:
  7585                           	opt callstack 0
  7586  000DCE                     i2_dtoa:
  7587                           	opt callstack 0
  7588  000DCE  FFFF               	dw	65535	; assembler added errata NOP
  7589                           
  7590                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 274: static int dtoa(FILE *fp
      +                          , long long d);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 275: {;/opt/mic
      +                          rochip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 276:     int i, p, s, w;;/opt/microchi
      +                          p/xc8/v2.05/pic/sources/c99/common/doprnt.c: 277:     long long n;;/opt/microchip/xc8/v2
      +                          .05/pic/sources/c99/common/doprnt.c: 280:     n = d;
  7591                           
  7592                           ;incstack = 0
  7593  000DD0  C01E  F036         	movff	i2dtoa@d,i2dtoa@n
  7594  000DD4  C01F  F037         	movff	i2dtoa@d+1,i2dtoa@n+1
  7595  000DD8  C020  F038         	movff	i2dtoa@d+2,i2dtoa@n+2
  7596  000DDC  C021  F039         	movff	i2dtoa@d+3,i2dtoa@n+3
  7597  000DE0  C022  F03A         	movff	i2dtoa@d+4,i2dtoa@n+4
  7598  000DE4  C023  F03B         	movff	i2dtoa@d+5,i2dtoa@n+5
  7599  000DE8  C024  F03C         	movff	i2dtoa@d+6,i2dtoa@n+6
  7600  000DEC  C025  F03D         	movff	i2dtoa@d+7,i2dtoa@n+7
  7601                           
  7602                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 281:     s = n < 0 ? 1 : 0;
  7603  000DF0  AE3D               	btfss	i2dtoa@n+7,7,c
  7604  000DF2  D002               	goto	i2u287_40
  7605  000DF4  0E01               	movlw	1
  7606  000DF6  D002               	goto	i2u288_40
  7607  000DF8                     i2u287_40:
  7608  000DF8  FFFF               	dw	65535	; assembler added errata NOP
  7609  000DFA  0E00               	movlw	0
  7610  000DFC                     i2u288_40:
  7611  000DFC  FFFF               	dw	65535	; assembler added errata NOP
  7612  000DFE  6E34               	movwf	i2dtoa@s,c
  7613  000E00  6A35               	clrf	i2dtoa@s+1,c
  7614                           
  7615                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 282:     if (s) {
  7616  000E02  5034               	movf	i2dtoa@s,w,c
  7617  000E04  1035               	iorwf	i2dtoa@s+1,w,c
  7618  000E06  B4D8               	btfsc	status,2,c
  7619  000E08  D010               	goto	i2l3453
  7620                           
  7621                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 283:         n = -n;
  7622  000E0A  1E3D               	comf	i2dtoa@n+7,f,c
  7623  000E0C  1E3C               	comf	i2dtoa@n+6,f,c
  7624  000E0E  1E3B               	comf	i2dtoa@n+5,f,c
  7625  000E10  1E3A               	comf	i2dtoa@n+4,f,c
  7626  000E12  1E39               	comf	i2dtoa@n+3,f,c
  7627  000E14  1E38               	comf	i2dtoa@n+2,f,c
  7628  000E16  1E37               	comf	i2dtoa@n+1,f,c
  7629  000E18  6C36               	negf	i2dtoa@n,c
  7630  000E1A  0E00               	movlw	0
  7631  000E1C  2237               	addwfc	i2dtoa@n+1,f,c
  7632  000E1E  2238               	addwfc	i2dtoa@n+2,f,c
  7633  000E20  2239               	addwfc	i2dtoa@n+3,f,c
  7634  000E22  223A               	addwfc	i2dtoa@n+4,f,c
  7635  000E24  223B               	addwfc	i2dtoa@n+5,f,c
  7636  000E26  223C               	addwfc	i2dtoa@n+6,f,c
  7637  000E28  223D               	addwfc	i2dtoa@n+7,f,c
  7638  000E2A                     i2l3453:
  7639  000E2A  FFFF               	dw	65535	; assembler added errata NOP
  7640                           
  7641                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 287:     if (!(prec < 0)) {
  7642  000E2C  0100               	movlb	0	; () banked
  7643  000E2E  AFF7               	btfss	(_prec+1)& (0+255),7,b
  7644                           
  7645                           ; BSR set to: 0
  7646                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 288:         flags &= ~(1 << 
      +                          1);
  7647  000E30  93F8               	bcf	_flags& (0+255),1,b
  7648                           
  7649                           ; BSR set to: 0
  7650                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 290:     p = (0 < prec) ? pre
      +                          c : 1;
  7651  000E32  BFF7               	btfsc	(_prec+1)& (0+255),7,b
  7652  000E34  D005               	goto	i2u291_40
  7653  000E36  51F7               	movf	(_prec+1)& (0+255),w,b
  7654  000E38  E109               	bnz	i2l611
  7655  000E3A  05F6               	decf	_prec& (0+255),w,b
  7656  000E3C  B0D8               	btfsc	status,0,c
  7657  000E3E  D006               	goto	i2l611
  7658  000E40                     i2u291_40:
  7659  000E40  FFFF               	dw	65535	; assembler added errata NOP
  7660                           
  7661                           ; BSR set to: 0
  7662  000E42  0E00               	movlw	0
  7663  000E44  6E31               	movwf	i2dtoa@p+1,c
  7664  000E46  0E01               	movlw	1
  7665  000E48  6E30               	movwf	i2dtoa@p,c
  7666  000E4A  D005               	goto	i2l613
  7667  000E4C                     i2l611:
  7668  000E4C  FFFF               	dw	65535	; assembler added errata NOP
  7669                           
  7670                           ; BSR set to: 0
  7671  000E4E  C0F6  F030         	movff	_prec,i2dtoa@p
  7672  000E52  C0F7  F031         	movff	_prec+1,i2dtoa@p+1
  7673  000E56                     i2l613:
  7674  000E56  FFFF               	dw	65535	; assembler added errata NOP
  7675                           
  7676                           ; BSR set to: 0
  7677                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 291:     w = width;
  7678  000E58  C0F4  F032         	movff	_width,i2dtoa@w
  7679  000E5C  C0F5  F033         	movff	_width+1,i2dtoa@w+1
  7680                           
  7681                           ; BSR set to: 0
  7682                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 292:     if (s || (flags & (1
      +                           << 2))) {
  7683  000E60  5034               	movf	i2dtoa@s,w,c
  7684  000E62  1035               	iorwf	i2dtoa@s+1,w,c
  7685  000E64  A4D8               	btfss	status,2,c
  7686  000E66  D002               	goto	i2u293_40
  7687                           
  7688                           ; BSR set to: 0
  7689  000E68  A5F8               	btfss	_flags& (0+255),2,b
  7690  000E6A  D004               	goto	i2l3467
  7691  000E6C                     i2u293_40:
  7692  000E6C  FFFF               	dw	65535	; assembler added errata NOP
  7693                           
  7694                           ; BSR set to: 0
  7695                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 293:         --w;
  7696  000E6E  0632               	decf	i2dtoa@w,f,c
  7697  000E70  A0D8               	btfss	status,0,c
  7698  000E72  0633               	decf	i2dtoa@w+1,f,c
  7699  000E74                     i2l3467:
  7700  000E74  FFFF               	dw	65535	; assembler added errata NOP
  7701                           
  7702                           ; BSR set to: 0
  7703                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 297:     i = sizeof(dbuf) - 1
      +                          ;
  7704  000E76  0E00               	movlw	0
  7705  000E78  6E3F               	movwf	i2dtoa@i+1,c
  7706  000E7A  0E1F               	movlw	31
  7707  000E7C  6E3E               	movwf	i2dtoa@i,c
  7708                           
  7709                           ; BSR set to: 0
  7710                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 298:     dbuf[i] = '\0';
  7711  000E7E  0E00               	movlw	0
  7712  000E80  0101               	movlb	1	; () banked
  7713  000E82  6F26               	movwf	(_dbuf+31)& (0+255),b
  7714                           
  7715                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  7716  000E84  D07D               	goto	i2l3481
  7717  000E86                     i2l3471:
  7718  000E86  FFFF               	dw	65535	; assembler added errata NOP
  7719                           
  7720                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 300:         --i;
  7721  000E88  063E               	decf	i2dtoa@i,f,c
  7722  000E8A  A0D8               	btfss	status,0,c
  7723  000E8C  063F               	decf	i2dtoa@i+1,f,c
  7724                           
  7725                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 301:         dbuf[i] = '0' + 
      +                          abs(n % 10);
  7726  000E8E  0E07               	movlw	low _dbuf
  7727  000E90  243E               	addwf	i2dtoa@i,w,c
  7728  000E92  6ED9               	movwf	fsr2l,c
  7729  000E94  0E01               	movlw	high _dbuf
  7730  000E96  203F               	addwfc	i2dtoa@i+1,w,c
  7731  000E98  6EDA               	movwf	fsr2h,c
  7732  000E9A  C036  F001         	movff	i2dtoa@n,i2___aomod@dividend
  7733  000E9E  C037  F002         	movff	i2dtoa@n+1,i2___aomod@dividend+1
  7734  000EA2  C038  F003         	movff	i2dtoa@n+2,i2___aomod@dividend+2
  7735  000EA6  C039  F004         	movff	i2dtoa@n+3,i2___aomod@dividend+3
  7736  000EAA  C03A  F005         	movff	i2dtoa@n+4,i2___aomod@dividend+4
  7737  000EAE  C03B  F006         	movff	i2dtoa@n+5,i2___aomod@dividend+5
  7738  000EB2  C03C  F007         	movff	i2dtoa@n+6,i2___aomod@dividend+6
  7739  000EB6  C03D  F008         	movff	i2dtoa@n+7,i2___aomod@dividend+7
  7740  000EBA  0E0A               	movlw	10
  7741  000EBC  6E09               	movwf	i2___aomod@divisor,c
  7742  000EBE  0E00               	movlw	0
  7743  000EC0  6E0A               	movwf	i2___aomod@divisor+1,c
  7744  000EC2  0E00               	movlw	0
  7745  000EC4  6E0B               	movwf	i2___aomod@divisor+2,c
  7746  000EC6  0E00               	movlw	0
  7747  000EC8  6E0C               	movwf	i2___aomod@divisor+3,c
  7748  000ECA  0E00               	movlw	0
  7749  000ECC  6E0D               	movwf	i2___aomod@divisor+4,c
  7750  000ECE  0E00               	movlw	0
  7751  000ED0  6E0E               	movwf	i2___aomod@divisor+5,c
  7752  000ED2  0E00               	movlw	0
  7753  000ED4  6E0F               	movwf	i2___aomod@divisor+6,c
  7754  000ED6  0E00               	movlw	0
  7755  000ED8  6E10               	movwf	i2___aomod@divisor+7,c
  7756  000EDA  EC6B  F00C         	call	i2___aomod	;wreg free
  7757  000EDE  C001  F026         	movff	?i2___aomod,??i2_dtoa
  7758  000EE2  C002  F027         	movff	?i2___aomod+1,??i2_dtoa+1
  7759  000EE6  C003  F028         	movff	?i2___aomod+2,??i2_dtoa+2
  7760  000EEA  C004  F029         	movff	?i2___aomod+3,??i2_dtoa+3
  7761  000EEE  C005  F02A         	movff	?i2___aomod+4,??i2_dtoa+4
  7762  000EF2  C006  F02B         	movff	?i2___aomod+5,??i2_dtoa+5
  7763  000EF6  C007  F02C         	movff	?i2___aomod+6,??i2_dtoa+6
  7764  000EFA  C008  F02D         	movff	?i2___aomod+7,??i2_dtoa+7
  7765  000EFE  C026  F013         	movff	??i2_dtoa,i2abs@a
  7766  000F02  C028  F014         	movff	??i2_dtoa+2,i2abs@a+1
  7767  000F06  ECFE  F014         	call	i2_abs	;wreg free
  7768  000F0A  5013               	movf	?i2_abs,w,c
  7769  000F0C  0F30               	addlw	48
  7770  000F0E  6EDF               	movwf	indf2,c
  7771                           
  7772                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 302:         --p;
  7773  000F10  0630               	decf	i2dtoa@p,f,c
  7774  000F12  A0D8               	btfss	status,0,c
  7775  000F14  0631               	decf	i2dtoa@p+1,f,c
  7776                           
  7777                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 303:         --w;
  7778  000F16  0632               	decf	i2dtoa@w,f,c
  7779  000F18  A0D8               	btfss	status,0,c
  7780  000F1A  0633               	decf	i2dtoa@w+1,f,c
  7781                           
  7782                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 304:         n = n / 10;
  7783  000F1C  C036  F001         	movff	i2dtoa@n,i2___aodiv@dividend
  7784  000F20  C037  F002         	movff	i2dtoa@n+1,i2___aodiv@dividend+1
  7785  000F24  C038  F003         	movff	i2dtoa@n+2,i2___aodiv@dividend+2
  7786  000F28  C039  F004         	movff	i2dtoa@n+3,i2___aodiv@dividend+3
  7787  000F2C  C03A  F005         	movff	i2dtoa@n+4,i2___aodiv@dividend+4
  7788  000F30  C03B  F006         	movff	i2dtoa@n+5,i2___aodiv@dividend+5
  7789  000F34  C03C  F007         	movff	i2dtoa@n+6,i2___aodiv@dividend+6
  7790  000F38  C03D  F008         	movff	i2dtoa@n+7,i2___aodiv@dividend+7
  7791  000F3C  0E0A               	movlw	10
  7792  000F3E  6E09               	movwf	i2___aodiv@divisor,c
  7793  000F40  0E00               	movlw	0
  7794  000F42  6E0A               	movwf	i2___aodiv@divisor+1,c
  7795  000F44  0E00               	movlw	0
  7796  000F46  6E0B               	movwf	i2___aodiv@divisor+2,c
  7797  000F48  0E00               	movlw	0
  7798  000F4A  6E0C               	movwf	i2___aodiv@divisor+3,c
  7799  000F4C  0E00               	movlw	0
  7800  000F4E  6E0D               	movwf	i2___aodiv@divisor+4,c
  7801  000F50  0E00               	movlw	0
  7802  000F52  6E0E               	movwf	i2___aodiv@divisor+5,c
  7803  000F54  0E00               	movlw	0
  7804  000F56  6E0F               	movwf	i2___aodiv@divisor+6,c
  7805  000F58  0E00               	movlw	0
  7806  000F5A  6E10               	movwf	i2___aodiv@divisor+7,c
  7807  000F5C  EC20  F00B         	call	i2___aodiv	;wreg free
  7808  000F60  C001  F036         	movff	?i2___aodiv,i2dtoa@n
  7809  000F64  C002  F037         	movff	?i2___aodiv+1,i2dtoa@n+1
  7810  000F68  C003  F038         	movff	?i2___aodiv+2,i2dtoa@n+2
  7811  000F6C  C004  F039         	movff	?i2___aodiv+3,i2dtoa@n+3
  7812  000F70  C005  F03A         	movff	?i2___aodiv+4,i2dtoa@n+4
  7813  000F74  C006  F03B         	movff	?i2___aodiv+5,i2dtoa@n+5
  7814  000F78  C007  F03C         	movff	?i2___aodiv+6,i2dtoa@n+6
  7815  000F7C  C008  F03D         	movff	?i2___aodiv+7,i2dtoa@n+7
  7816  000F80                     i2l3481:
  7817  000F80  FFFF               	dw	65535	; assembler added errata NOP
  7818                           
  7819                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  7820  000F82  BE3F               	btfsc	i2dtoa@i+1,7,c
  7821  000F84  D021               	goto	i2u298_40
  7822  000F86  503F               	movf	i2dtoa@i+1,w,c
  7823  000F88  E103               	bnz	i2u294_40
  7824  000F8A  043E               	decf	i2dtoa@i,w,c
  7825  000F8C  A0D8               	btfss	status,0,c
  7826  000F8E  D01C               	goto	i2u298_40
  7827  000F90                     i2u294_40:
  7828  000F90  5036               	movf	i2dtoa@n,w,c
  7829  000F92  1037               	iorwf	i2dtoa@n+1,w,c
  7830  000F94  1038               	iorwf	i2dtoa@n+2,w,c
  7831  000F96  1039               	iorwf	i2dtoa@n+3,w,c
  7832  000F98  103A               	iorwf	i2dtoa@n+4,w,c
  7833  000F9A  103B               	iorwf	i2dtoa@n+5,w,c
  7834  000F9C  103C               	iorwf	i2dtoa@n+6,w,c
  7835  000F9E  103D               	iorwf	i2dtoa@n+7,w,c
  7836  000FA0  A4D8               	btfss	status,2,c
  7837  000FA2  D771               	goto	i2l3471
  7838  000FA4  BE31               	btfsc	i2dtoa@p+1,7,c
  7839  000FA6  D005               	goto	i2u296_40
  7840  000FA8  5031               	movf	i2dtoa@p+1,w,c
  7841  000FAA  E102               	bnz	i2u296_41
  7842  000FAC  0430               	decf	i2dtoa@p,w,c
  7843  000FAE  B0D8               	btfsc	status,0,c
  7844  000FB0                     i2u296_41:
  7845  000FB0  D76A               	goto	i2l3471
  7846  000FB2                     i2u296_40:
  7847  000FB2  FFFF               	dw	65535	; assembler added errata NOP
  7848  000FB4  BE33               	btfsc	i2dtoa@w+1,7,c
  7849  000FB6  D008               	goto	i2u298_40
  7850  000FB8  5033               	movf	i2dtoa@w+1,w,c
  7851  000FBA  E103               	bnz	i2u297_40
  7852  000FBC  0432               	decf	i2dtoa@w,w,c
  7853  000FBE  A0D8               	btfss	status,0,c
  7854  000FC0  D003               	goto	i2u298_40
  7855  000FC2                     i2u297_40:
  7856  000FC2  0100               	movlb	0	; () banked
  7857  000FC4  B3F8               	btfsc	_flags& (0+255),1,b
  7858  000FC6  D75F               	goto	i2l3471
  7859  000FC8                     i2u298_40:
  7860  000FC8  FFFF               	dw	65535	; assembler added errata NOP
  7861                           
  7862                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 308:     if (s || (flags & (1
      +                           << 2))) {
  7863  000FCA  5034               	movf	i2dtoa@s,w,c
  7864  000FCC  1035               	iorwf	i2dtoa@s+1,w,c
  7865  000FCE  A4D8               	btfss	status,2,c
  7866  000FD0  D003               	goto	i2u300_40
  7867  000FD2  0100               	movlb	0	; () banked
  7868  000FD4  A5F8               	btfss	_flags& (0+255),2,b
  7869  000FD6  D01A               	goto	i2l3505
  7870  000FD8                     i2u300_40:
  7871  000FD8  FFFF               	dw	65535	; assembler added errata NOP
  7872                           
  7873                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 309:         --i;
  7874  000FDA  063E               	decf	i2dtoa@i,f,c
  7875  000FDC  A0D8               	btfss	status,0,c
  7876  000FDE  063F               	decf	i2dtoa@i+1,f,c
  7877                           
  7878                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 310:         dbuf[i] = s ? '-
      +                          ' : '+';
  7879  000FE0  5034               	movf	i2dtoa@s,w,c
  7880  000FE2  1035               	iorwf	i2dtoa@s+1,w,c
  7881  000FE4  A4D8               	btfss	status,2,c
  7882  000FE6  D004               	goto	i2l3501
  7883  000FE8  0E00               	movlw	0
  7884  000FEA  6E2F               	movwf	i2_dtoa$1113+1,c
  7885  000FEC  0E2B               	movlw	43
  7886  000FEE  D004               	goto	L14
  7887  000FF0                     i2l3501:
  7888  000FF0  FFFF               	dw	65535	; assembler added errata NOP
  7889  000FF2  0E00               	movlw	0
  7890  000FF4  6E2F               	movwf	i2_dtoa$1113+1,c
  7891  000FF6  0E2D               	movlw	45
  7892  000FF8                     L14:
  7893  000FF8  FFFF               	dw	65535	; assembler added errata NOP
  7894  000FFA  6E2E               	movwf	i2_dtoa$1113,c
  7895  000FFC  0E07               	movlw	low _dbuf
  7896  000FFE  243E               	addwf	i2dtoa@i,w,c
  7897  001000  6ED9               	movwf	fsr2l,c
  7898  001002  0E01               	movlw	high _dbuf
  7899  001004  203F               	addwfc	i2dtoa@i+1,w,c
  7900  001006  6EDA               	movwf	fsr2h,c
  7901  001008  C02E  FFDF         	movff	i2_dtoa$1113,indf2
  7902  00100C                     i2l3505:
  7903  00100C  FFFF               	dw	65535	; assembler added errata NOP
  7904                           
  7905                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 314:     return pad(fp, &dbuf
      +                          [i], w);
  7906  00100E  C01C  F011         	movff	i2dtoa@fp,i2pad@fp
  7907  001012  C01D  F012         	movff	i2dtoa@fp+1,i2pad@fp+1
  7908  001016  0E07               	movlw	low _dbuf
  7909  001018  243E               	addwf	i2dtoa@i,w,c
  7910  00101A  6E13               	movwf	i2pad@buf,c
  7911  00101C  0E01               	movlw	high _dbuf
  7912  00101E  203F               	addwfc	i2dtoa@i+1,w,c
  7913  001020  6E14               	movwf	i2pad@buf+1,c
  7914  001022  C032  F015         	movff	i2dtoa@w,i2pad@p
  7915  001026  C033  F016         	movff	i2dtoa@w+1,i2pad@p+1
  7916  00102A  EC84  F00F         	call	i2_pad	;wreg free
  7917  00102E  C011  F01C         	movff	?i2_pad,?i2_dtoa
  7918  001032  C012  F01D         	movff	?i2_pad+1,?i2_dtoa+1
  7919  001036  0012               	return		;funcret
  7920  001038  FFFF               	dw	65535	; errata NOP
  7921  00103A                     __end_ofi2_dtoa:
  7922                           	opt callstack 0
  7923                           
  7924 ;; *************** function i2_pad *****************
  7925 ;; Defined at:
  7926 ;;		line 72 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  7927 ;; Parameters:    Size  Location     Type
  7928 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  7929 ;;		 -> i2sprintf@f(6), sprintf@f(6), 
  7930 ;;  buf             2   18[COMRAM] PTR unsigned char 
  7931 ;;		 -> dbuf(32), 
  7932 ;;  p               2   20[COMRAM] int 
  7933 ;; Auto vars:     Size  Location     Type
  7934 ;;  pad             2   25[COMRAM] int 
  7935 ;;  pad             2   23[COMRAM] int 
  7936 ;; Return value:  Size  Location     Type
  7937 ;;                  2   16[COMRAM] int 
  7938 ;; Registers used:
  7939 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7940 ;; Tracked objects:
  7941 ;;		On entry : 0/0
  7942 ;;		On exit  : 0/0
  7943 ;;		Unchanged: 0/0
  7944 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7945 ;;      Params:         6       0       0       0       0       0       0
  7946 ;;      Locals:         4       0       0       0       0       0       0
  7947 ;;      Temps:          1       0       0       0       0       0       0
  7948 ;;      Totals:        11       0       0       0       0       0       0
  7949 ;;Total ram usage:       11 bytes
  7950 ;; Hardware stack levels used:    1
  7951 ;; Hardware stack levels required when called:    3
  7952 ;; This function calls:
  7953 ;;		i2_fputc
  7954 ;;		i2_fputs
  7955 ;;		i2_strlen
  7956 ;; This function is called by:
  7957 ;;		i2_dtoa
  7958 ;; This function uses a non-reentrant model
  7959 ;;
  7960                           
  7961                           	psect	text46
  7962  001F08                     __ptext46:
  7963                           	opt callstack 0
  7964  001F08                     i2_pad:
  7965                           	opt callstack 0
  7966  001F08  FFFF               	dw	65535	; assembler added errata NOP
  7967                           
  7968                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 72: static int pad(FILE *fp, 
      +                          char *buf, int p);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 73: {;/opt/m
      +                          icrochip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 74:     int i, w;;/opt/microchip/xc8
      +                          /v2.05/pic/sources/c99/common/doprnt.c: 77:     if (flags & (1 << 0)) {
  7969                           
  7970                           ;incstack = 0
  7971  001F0A  0100               	movlb	0	; () banked
  7972  001F0C  A1F8               	btfss	_flags& (0+255),0,b
  7973  001F0E  D00A               	goto	i2l3261
  7974                           
  7975                           ; BSR set to: 0
  7976                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 78:         fputs((const char
      +                           *)buf, fp);
  7977  001F10  C013  F00A         	movff	i2pad@buf,i2fputs@s
  7978  001F14  C014  F00B         	movff	i2pad@buf+1,i2fputs@s+1
  7979  001F18  C011  F00C         	movff	i2pad@fp,i2fputs@fp
  7980  001F1C  C012  F00D         	movff	i2pad@fp+1,i2fputs@fp+1
  7981  001F20  EC9D  F014         	call	i2_fputs	;wreg free
  7982  001F24                     i2l3261:
  7983  001F24  FFFF               	dw	65535	; assembler added errata NOP
  7984                           
  7985                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 82:     w = (p < 0) ? 0 : p;
  7986  001F26  BE16               	btfsc	i2pad@p+1,7,c
  7987  001F28  D005               	goto	i2l3265
  7988  001F2A  C015  F01A         	movff	i2pad@p,i2pad@w
  7989  001F2E  C016  F01B         	movff	i2pad@p+1,i2pad@w+1
  7990  001F32  D005               	goto	i2l600
  7991  001F34                     i2l3265:
  7992  001F34  FFFF               	dw	65535	; assembler added errata NOP
  7993  001F36  0E00               	movlw	0
  7994  001F38  6E1B               	movwf	i2pad@w+1,c
  7995  001F3A  0E00               	movlw	0
  7996  001F3C  6E1A               	movwf	i2pad@w,c
  7997  001F3E                     i2l600:
  7998  001F3E  FFFF               	dw	65535	; assembler added errata NOP
  7999                           
  8000                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 83:     i = 0;
  8001  001F40  0E00               	movlw	0
  8002  001F42  6E19               	movwf	i2pad@i+1,c
  8003  001F44  0E00               	movlw	0
  8004  001F46  6E18               	movwf	i2pad@i,c
  8005                           
  8006                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
  8007  001F48  D00D               	goto	i2l3271
  8008  001F4A                     i2l3267:
  8009  001F4A  FFFF               	dw	65535	; assembler added errata NOP
  8010                           
  8011                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 85:         fputc(' ', fp);
  8012  001F4C  0E00               	movlw	0
  8013  001F4E  6E02               	movwf	i2fputc@c+1,c
  8014  001F50  0E20               	movlw	32
  8015  001F52  6E01               	movwf	i2fputc@c,c
  8016  001F54  C011  F003         	movff	i2pad@fp,i2fputc@fp
  8017  001F58  C012  F004         	movff	i2pad@fp+1,i2fputc@fp+1
  8018  001F5C  EC2E  F00F         	call	i2_fputc	;wreg free
  8019                           
  8020                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 86:         ++i;
  8021  001F60  4A18               	infsnz	i2pad@i,f,c
  8022  001F62  2A19               	incf	i2pad@i+1,f,c
  8023  001F64                     i2l3271:
  8024  001F64  FFFF               	dw	65535	; assembler added errata NOP
  8025                           
  8026                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
  8027  001F66  501A               	movf	i2pad@w,w,c
  8028  001F68  5C18               	subwf	i2pad@i,w,c
  8029  001F6A  5019               	movf	i2pad@i+1,w,c
  8030  001F6C  0A80               	xorlw	128
  8031  001F6E  6E17               	movwf	??i2_pad& (0+255),c
  8032  001F70  501B               	movf	i2pad@w+1,w,c
  8033  001F72  0A80               	xorlw	128
  8034  001F74  5817               	subwfb	??i2_pad& (0+255),w,c
  8035  001F76  A0D8               	btfss	status,0,c
  8036  001F78  D7E8               	goto	i2l3267
  8037                           
  8038                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 90:     if (!(flags & (1 << 0
      +                          ))) {
  8039  001F7A  0100               	movlb	0	; () banked
  8040  001F7C  B1F8               	btfsc	_flags& (0+255),0,b
  8041  001F7E  D00A               	goto	i2l3275
  8042                           
  8043                           ; BSR set to: 0
  8044                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 91:         fputs((const char
      +                           *)buf, fp);
  8045  001F80  C013  F00A         	movff	i2pad@buf,i2fputs@s
  8046  001F84  C014  F00B         	movff	i2pad@buf+1,i2fputs@s+1
  8047  001F88  C011  F00C         	movff	i2pad@fp,i2fputs@fp
  8048  001F8C  C012  F00D         	movff	i2pad@fp+1,i2fputs@fp+1
  8049  001F90  EC9D  F014         	call	i2_fputs	;wreg free
  8050  001F94                     i2l3275:
  8051  001F94  FFFF               	dw	65535	; assembler added errata NOP
  8052                           
  8053                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 94:     return strlen(buf) + 
      +                          w;
  8054  001F96  C013  F001         	movff	i2pad@buf,i2strlen@s
  8055  001F9A  C014  F002         	movff	i2pad@buf+1,i2strlen@s+1
  8056  001F9E  ECA9  F015         	call	i2_strlen	;wreg free
  8057  001FA2  501A               	movf	i2pad@w,w,c
  8058  001FA4  2401               	addwf	?i2_strlen,w,c
  8059  001FA6  6E11               	movwf	?i2_pad,c
  8060  001FA8  501B               	movf	i2pad@w+1,w,c
  8061  001FAA  2002               	addwfc	?i2_strlen+1,w,c
  8062  001FAC  6E12               	movwf	?i2_pad+1,c
  8063  001FAE  0012               	return		;funcret
  8064  001FB0  FFFF               	dw	65535	; errata NOP
  8065  001FB2                     __end_ofi2_pad:
  8066                           	opt callstack 0
  8067                           
  8068 ;; *************** function i2_strlen *****************
  8069 ;; Defined at:
  8070 ;;		line 12 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/strlen.c"
  8071 ;; Parameters:    Size  Location     Type
  8072 ;;  s               2    0[COMRAM] PTR const unsigned char 
  8073 ;;		 -> dbuf(32), 
  8074 ;; Auto vars:     Size  Location     Type
  8075 ;;  strlen          2    2[COMRAM] PTR const unsigned char 
  8076 ;;		 -> dbuf(32), 
  8077 ;; Return value:  Size  Location     Type
  8078 ;;                  2    0[COMRAM] unsigned int 
  8079 ;; Registers used:
  8080 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8081 ;; Tracked objects:
  8082 ;;		On entry : 0/0
  8083 ;;		On exit  : 0/0
  8084 ;;		Unchanged: 0/0
  8085 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8086 ;;      Params:         2       0       0       0       0       0       0
  8087 ;;      Locals:         2       0       0       0       0       0       0
  8088 ;;      Temps:          0       0       0       0       0       0       0
  8089 ;;      Totals:         4       0       0       0       0       0       0
  8090 ;;Total ram usage:        4 bytes
  8091 ;; Hardware stack levels used:    1
  8092 ;; This function calls:
  8093 ;;		Nothing
  8094 ;; This function is called by:
  8095 ;;		i2_pad
  8096 ;; This function uses a non-reentrant model
  8097 ;;
  8098                           
  8099                           	psect	text47
  8100  002B52                     __ptext47:
  8101                           	opt callstack 0
  8102  002B52                     i2_strlen:
  8103                           	opt callstack 0
  8104  002B52  FFFF               	dw	65535	; assembler added errata NOP
  8105                           
  8106                           ;incstack = 0
  8107  002B54  C001  F003         	movff	i2strlen@s,i2strlen@a
  8108  002B58  C002  F004         	movff	i2strlen@s+1,i2strlen@a+1
  8109  002B5C  D003               	goto	i2l3147
  8110  002B5E                     i2l3145:
  8111  002B5E  FFFF               	dw	65535	; assembler added errata NOP
  8112  002B60  4A01               	infsnz	i2strlen@s,f,c
  8113  002B62  2A02               	incf	i2strlen@s+1,f,c
  8114  002B64                     i2l3147:
  8115  002B64  FFFF               	dw	65535	; assembler added errata NOP
  8116  002B66  C001  FFD9         	movff	i2strlen@s,fsr2l
  8117  002B6A  C002  FFDA         	movff	i2strlen@s+1,fsr2h
  8118  002B6E  50DF               	movf	indf2,w,c
  8119  002B70  A4D8               	btfss	status,2,c
  8120  002B72  D7F5               	goto	i2l3145
  8121  002B74  5003               	movf	i2strlen@a,w,c
  8122  002B76  5C01               	subwf	i2strlen@s,w,c
  8123  002B78  6E01               	movwf	?i2_strlen,c
  8124  002B7A  5004               	movf	i2strlen@a+1,w,c
  8125  002B7C  5802               	subwfb	i2strlen@s+1,w,c
  8126  002B7E  6E02               	movwf	?i2_strlen+1,c
  8127  002B80  0012               	return		;funcret
  8128  002B82  FFFF               	dw	65535	; errata NOP
  8129  002B84                     __end_ofi2_strlen:
  8130                           	opt callstack 0
  8131                           
  8132 ;; *************** function i2_fputs *****************
  8133 ;; Defined at:
  8134 ;;		line 8 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/nf_fputs.c"
  8135 ;; Parameters:    Size  Location     Type
  8136 ;;  s               2    9[COMRAM] PTR const unsigned char 
  8137 ;;		 -> dbuf(32), 
  8138 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  8139 ;;		 -> i2sprintf@f(6), sprintf@f(6), 
  8140 ;; Auto vars:     Size  Location     Type
  8141 ;;  fputs           2   14[COMRAM] int 
  8142 ;;  fputs           1   13[COMRAM] unsigned char 
  8143 ;; Return value:  Size  Location     Type
  8144 ;;                  2    9[COMRAM] int 
  8145 ;; Registers used:
  8146 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  8147 ;; Tracked objects:
  8148 ;;		On entry : 0/0
  8149 ;;		On exit  : 0/0
  8150 ;;		Unchanged: 0/0
  8151 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8152 ;;      Params:         4       0       0       0       0       0       0
  8153 ;;      Locals:         3       0       0       0       0       0       0
  8154 ;;      Temps:          0       0       0       0       0       0       0
  8155 ;;      Totals:         7       0       0       0       0       0       0
  8156 ;;Total ram usage:        7 bytes
  8157 ;; Hardware stack levels used:    1
  8158 ;; Hardware stack levels required when called:    2
  8159 ;; This function calls:
  8160 ;;		i2_fputc
  8161 ;; This function is called by:
  8162 ;;		i2_pad
  8163 ;; This function uses a non-reentrant model
  8164 ;;
  8165                           
  8166                           	psect	text48
  8167  00293A                     __ptext48:
  8168                           	opt callstack 0
  8169  00293A                     i2_fputs:
  8170                           	opt callstack 0
  8171  00293A  FFFF               	dw	65535	; assembler added errata NOP
  8172                           
  8173                           ;incstack = 0
  8174  00293C  0E00               	movlw	0
  8175  00293E  6E10               	movwf	i2fputs@i+1,c
  8176  002940  0E00               	movlw	0
  8177  002942  6E0F               	movwf	i2fputs@i,c
  8178  002944  D00C               	goto	i2l3141
  8179  002946                     i2l3137:
  8180  002946  FFFF               	dw	65535	; assembler added errata NOP
  8181  002948  C00E  F001         	movff	i2fputs@c,i2fputc@c
  8182  00294C  6A02               	clrf	i2fputc@c+1,c
  8183  00294E  C00C  F003         	movff	i2fputs@fp,i2fputc@fp
  8184  002952  C00D  F004         	movff	i2fputs@fp+1,i2fputc@fp+1
  8185  002956  EC2E  F00F         	call	i2_fputc	;wreg free
  8186  00295A  4A0F               	infsnz	i2fputs@i,f,c
  8187  00295C  2A10               	incf	i2fputs@i+1,f,c
  8188  00295E                     i2l3141:
  8189  00295E  FFFF               	dw	65535	; assembler added errata NOP
  8190  002960  500F               	movf	i2fputs@i,w,c
  8191  002962  240A               	addwf	i2fputs@s,w,c
  8192  002964  6ED9               	movwf	fsr2l,c
  8193  002966  5010               	movf	i2fputs@i+1,w,c
  8194  002968  200B               	addwfc	i2fputs@s+1,w,c
  8195  00296A  6EDA               	movwf	fsr2h,c
  8196  00296C  50DF               	movf	indf2,w,c
  8197  00296E  6E0E               	movwf	i2fputs@c,c
  8198  002970  500E               	movf	i2fputs@c,w,c
  8199  002972  B4D8               	btfsc	status,2,c
  8200  002974  0012               	return		;funcret
  8201  002976  FFFF               	dw	65535	; assembler added errata NOP
  8202  002978  D7E6               	goto	i2l3137
  8203  00297A  FFFF               	dw	65535	; errata NOP
  8204  00297C                     __end_ofi2_fputs:
  8205                           	opt callstack 0
  8206                           
  8207 ;; *************** function i2_fputc *****************
  8208 ;; Defined at:
  8209 ;;		line 8 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/nf_fputc.c"
  8210 ;; Parameters:    Size  Location     Type
  8211 ;;  c               2    0[COMRAM] int 
  8212 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  8213 ;;		 -> i2sprintf@f(6), sprintf@f(6), 
  8214 ;; Auto vars:     Size  Location     Type
  8215 ;;		None
  8216 ;; Return value:  Size  Location     Type
  8217 ;;                  2    0[COMRAM] int 
  8218 ;; Registers used:
  8219 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  8220 ;; Tracked objects:
  8221 ;;		On entry : 0/0
  8222 ;;		On exit  : 0/0
  8223 ;;		Unchanged: 0/0
  8224 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8225 ;;      Params:         4       0       0       0       0       0       0
  8226 ;;      Locals:         0       0       0       0       0       0       0
  8227 ;;      Temps:          5       0       0       0       0       0       0
  8228 ;;      Totals:         9       0       0       0       0       0       0
  8229 ;;Total ram usage:        9 bytes
  8230 ;; Hardware stack levels used:    1
  8231 ;; Hardware stack levels required when called:    1
  8232 ;; This function calls:
  8233 ;;		i2_putch
  8234 ;; This function is called by:
  8235 ;;		i2_pad
  8236 ;;		i2_vfpfcnvrt
  8237 ;;		i2_fputs
  8238 ;; This function uses a non-reentrant model
  8239 ;;
  8240                           
  8241                           	psect	text49
  8242  001E5C                     __ptext49:
  8243                           	opt callstack 0
  8244  001E5C                     i2_fputc:
  8245                           	opt callstack 0
  8246  001E5C  FFFF               	dw	65535	; assembler added errata NOP
  8247                           
  8248                           ;incstack = 0
  8249  001E5E  5003               	movf	i2fputc@fp,w,c
  8250  001E60  1004               	iorwf	i2fputc@fp+1,w,c
  8251  001E62  B4D8               	btfsc	status,2,c
  8252  001E64  D004               	goto	i2u207_40
  8253  001E66  5003               	movf	i2fputc@fp,w,c
  8254  001E68  1004               	iorwf	i2fputc@fp+1,w,c
  8255  001E6A  A4D8               	btfss	status,2,c
  8256  001E6C  D005               	goto	i2l2999
  8257  001E6E                     i2u207_40:
  8258  001E6E  FFFF               	dw	65535	; assembler added errata NOP
  8259  001E70  5001               	movf	i2fputc@c,w,c
  8260  001E72  EC7E  F016         	call	i2_putch
  8261  001E76  D045               	goto	i2l1393
  8262  001E78                     i2l2999:
  8263  001E78  FFFF               	dw	65535	; assembler added errata NOP
  8264  001E7A  EE20 F004          	lfsr	2,4
  8265  001E7E  5003               	movf	i2fputc@fp,w,c
  8266  001E80  26D9               	addwf	fsr2l,f,c
  8267  001E82  5004               	movf	i2fputc@fp+1,w,c
  8268  001E84  22DA               	addwfc	fsr2h,f,c
  8269  001E86  50DE               	movf	postinc2,w,c
  8270  001E88  10DE               	iorwf	postinc2,w,c
  8271  001E8A  B4D8               	btfsc	status,2,c
  8272  001E8C  D016               	goto	i2u209_40
  8273  001E8E  EE20 F004          	lfsr	2,4
  8274  001E92  5003               	movf	i2fputc@fp,w,c
  8275  001E94  26D9               	addwf	fsr2l,f,c
  8276  001E96  5004               	movf	i2fputc@fp+1,w,c
  8277  001E98  22DA               	addwfc	fsr2h,f,c
  8278  001E9A  EE10 F002          	lfsr	1,2
  8279  001E9E  5003               	movf	i2fputc@fp,w,c
  8280  001EA0  26E1               	addwf	fsr1l,f,c
  8281  001EA2  5004               	movf	i2fputc@fp+1,w,c
  8282  001EA4  22E2               	addwfc	fsr1h,f,c
  8283  001EA6  50DE               	movf	postinc2,w,c
  8284  001EA8  5CE6               	subwf	postinc1,w,c
  8285  001EAA  50E6               	movf	postinc1,w,c
  8286  001EAC  0A80               	xorlw	128
  8287  001EAE  6E09               	movwf	(??i2_fputc+4)& (0+255),c
  8288  001EB0  50DE               	movf	postinc2,w,c
  8289  001EB2  0A80               	xorlw	128
  8290  001EB4  5809               	subwfb	(??i2_fputc+4)& (0+255),w,c
  8291  001EB6  B0D8               	btfsc	status,0,c
  8292  001EB8  D024               	goto	i2l1393
  8293  001EBA                     i2u209_40:
  8294  001EBA  FFFF               	dw	65535	; assembler added errata NOP
  8295  001EBC  EE20 F002          	lfsr	2,2
  8296  001EC0  5003               	movf	i2fputc@fp,w,c
  8297  001EC2  26D9               	addwf	fsr2l,f,c
  8298  001EC4  5004               	movf	i2fputc@fp+1,w,c
  8299  001EC6  22DA               	addwfc	fsr2h,f,c
  8300  001EC8  CFDE F005          	movff	postinc2,??i2_fputc
  8301  001ECC  CFDD F006          	movff	postdec2,??i2_fputc+1
  8302  001ED0  C003  FFD9         	movff	i2fputc@fp,fsr2l
  8303  001ED4  C004  FFDA         	movff	i2fputc@fp+1,fsr2h
  8304  001ED8  CFDE F007          	movff	postinc2,??i2_fputc+2
  8305  001EDC  CFDD F008          	movff	postdec2,??i2_fputc+3
  8306  001EE0  5005               	movf	??i2_fputc,w,c
  8307  001EE2  2407               	addwf	??i2_fputc+2,w,c
  8308  001EE4  6ED9               	movwf	fsr2l,c
  8309  001EE6  5006               	movf	??i2_fputc+1,w,c
  8310  001EE8  2008               	addwfc	??i2_fputc+3,w,c
  8311  001EEA  6EDA               	movwf	fsr2h,c
  8312  001EEC  C001  FFDF         	movff	i2fputc@c,indf2
  8313  001EF0  EE20 F002          	lfsr	2,2
  8314  001EF4  5003               	movf	i2fputc@fp,w,c
  8315  001EF6  26D9               	addwf	fsr2l,f,c
  8316  001EF8  5004               	movf	i2fputc@fp+1,w,c
  8317  001EFA  22DA               	addwfc	fsr2h,f,c
  8318  001EFC  2ADE               	incf	postinc2,f,c
  8319  001EFE  0E00               	movlw	0
  8320  001F00  22DD               	addwfc	postdec2,f,c
  8321  001F02                     i2l1393:
  8322  001F02  FFFF               	dw	65535	; assembler added errata NOP
  8323  001F04  0012               	return		;funcret
  8324  001F06  FFFF               	dw	65535	; errata NOP
  8325  001F08                     __end_ofi2_fputc:
  8326                           	opt callstack 0
  8327                           
  8328 ;; *************** function i2_putch *****************
  8329 ;; Defined at:
  8330 ;;		line 7 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/putch.c"
  8331 ;; Parameters:    Size  Location     Type
  8332 ;;  c               1    wreg     unsigned char 
  8333 ;; Auto vars:     Size  Location     Type
  8334 ;;  c               1  (no storage) unsigned char 
  8335 ;; Return value:  Size  Location     Type
  8336 ;;                  1    wreg      void 
  8337 ;; Registers used:
  8338 ;;		wreg
  8339 ;; Tracked objects:
  8340 ;;		On entry : 0/0
  8341 ;;		On exit  : 0/0
  8342 ;;		Unchanged: 0/0
  8343 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8344 ;;      Params:         0       0       0       0       0       0       0
  8345 ;;      Locals:         0       0       0       0       0       0       0
  8346 ;;      Temps:          0       0       0       0       0       0       0
  8347 ;;      Totals:         0       0       0       0       0       0       0
  8348 ;;Total ram usage:        0 bytes
  8349 ;; Hardware stack levels used:    1
  8350 ;; This function calls:
  8351 ;;		Nothing
  8352 ;; This function is called by:
  8353 ;;		i2_fputc
  8354 ;; This function uses a non-reentrant model
  8355 ;;
  8356                           
  8357                           	psect	text50
  8358  002CFC                     __ptext50:
  8359                           	opt callstack 0
  8360  002CFC                     i2_putch:
  8361                           	opt callstack 0
  8362  002CFC  FFFF               	dw	65535	; assembler added errata NOP
  8363                           
  8364                           ;incstack = 0
  8365  002CFE  0012               	return		;funcret
  8366  002D00  FFFF               	dw	65535	; errata NOP
  8367  002D02                     __end_ofi2_putch:
  8368                           	opt callstack 0
  8369                           
  8370 ;; *************** function i2_abs *****************
  8371 ;; Defined at:
  8372 ;;		line 1 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/abs.c"
  8373 ;; Parameters:    Size  Location     Type
  8374 ;;  a               2   18[COMRAM] int 
  8375 ;; Auto vars:     Size  Location     Type
  8376 ;;		None
  8377 ;; Return value:  Size  Location     Type
  8378 ;;                  2   18[COMRAM] int 
  8379 ;; Registers used:
  8380 ;;		wreg, status,2, status,0
  8381 ;; Tracked objects:
  8382 ;;		On entry : 0/0
  8383 ;;		On exit  : 0/0
  8384 ;;		Unchanged: 0/0
  8385 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8386 ;;      Params:         2       0       0       0       0       0       0
  8387 ;;      Locals:         0       0       0       0       0       0       0
  8388 ;;      Temps:          2       0       0       0       0       0       0
  8389 ;;      Totals:         4       0       0       0       0       0       0
  8390 ;;Total ram usage:        4 bytes
  8391 ;; Hardware stack levels used:    1
  8392 ;; This function calls:
  8393 ;;		Nothing
  8394 ;; This function is called by:
  8395 ;;		i2_dtoa
  8396 ;; This function uses a non-reentrant model
  8397 ;;
  8398                           
  8399                           	psect	text51
  8400  0029FC                     __ptext51:
  8401                           	opt callstack 0
  8402  0029FC                     i2_abs:
  8403                           	opt callstack 0
  8404  0029FC  FFFF               	dw	65535	; assembler added errata NOP
  8405                           
  8406                           ;incstack = 0
  8407  0029FE  BE14               	btfsc	i2abs@a+1,7,c
  8408  002A00  D005               	goto	i2u273_40
  8409  002A02  5014               	movf	i2abs@a+1,w,c
  8410  002A04  E111               	bnz	i2l1333
  8411  002A06  0413               	decf	i2abs@a,w,c
  8412  002A08  B0D8               	btfsc	status,0,c
  8413  002A0A  D00E               	goto	i2l1333
  8414  002A0C                     i2u273_40:
  8415  002A0C  FFFF               	dw	65535	; assembler added errata NOP
  8416  002A0E  C013  F015         	movff	i2abs@a,??i2_abs
  8417  002A12  C014  F016         	movff	i2abs@a+1,??i2_abs+1
  8418  002A16  1E15               	comf	??i2_abs,f,c
  8419  002A18  1E16               	comf	??i2_abs+1,f,c
  8420  002A1A  4A15               	infsnz	??i2_abs,f,c
  8421  002A1C  2A16               	incf	??i2_abs+1,f,c
  8422  002A1E  C015  F013         	movff	??i2_abs,?i2_abs
  8423  002A22  C016  F014         	movff	??i2_abs+1,?i2_abs+1
  8424  002A26  D005               	goto	i2l1336
  8425  002A28                     i2l1333:
  8426  002A28  FFFF               	dw	65535	; assembler added errata NOP
  8427  002A2A  C013  F013         	movff	i2abs@a,?i2_abs
  8428  002A2E  C014  F014         	movff	i2abs@a+1,?i2_abs+1
  8429  002A32                     i2l1336:
  8430  002A32  FFFF               	dw	65535	; assembler added errata NOP
  8431  002A34  0012               	return		;funcret
  8432  002A36  FFFF               	dw	65535	; errata NOP
  8433  002A38                     __end_ofi2_abs:
  8434                           	opt callstack 0
  8435                           
  8436 ;; *************** function i2___aomod *****************
  8437 ;; Defined at:
  8438 ;;		line 9 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/aomod.c"
  8439 ;; Parameters:    Size  Location     Type
  8440 ;;  dividend        8    0[COMRAM] long long 
  8441 ;;  divisor         8    8[COMRAM] long long 
  8442 ;; Auto vars:     Size  Location     Type
  8443 ;;  __aomod         1   17[COMRAM] unsigned char 
  8444 ;;  __aomod         1   16[COMRAM] unsigned char 
  8445 ;; Return value:  Size  Location     Type
  8446 ;;                  8    0[COMRAM] long long 
  8447 ;; Registers used:
  8448 ;;		wreg, status,2, status,0
  8449 ;; Tracked objects:
  8450 ;;		On entry : 0/0
  8451 ;;		On exit  : 0/0
  8452 ;;		Unchanged: 0/0
  8453 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8454 ;;      Params:        16       0       0       0       0       0       0
  8455 ;;      Locals:         2       0       0       0       0       0       0
  8456 ;;      Temps:          0       0       0       0       0       0       0
  8457 ;;      Totals:        18       0       0       0       0       0       0
  8458 ;;Total ram usage:       18 bytes
  8459 ;; Hardware stack levels used:    1
  8460 ;; This function calls:
  8461 ;;		Nothing
  8462 ;; This function is called by:
  8463 ;;		i2_dtoa
  8464 ;; This function uses a non-reentrant model
  8465 ;;
  8466                           
  8467                           	psect	text52
  8468  0018D6                     __ptext52:
  8469                           	opt callstack 0
  8470  0018D6                     i2___aomod:
  8471                           	opt callstack 0
  8472  0018D6  FFFF               	dw	65535	; assembler added errata NOP
  8473                           
  8474                           ;incstack = 0
  8475  0018D8  0E00               	movlw	0
  8476  0018DA  6E12               	movwf	i2___aomod@sign,c
  8477  0018DC  AE08               	btfss	i2___aomod@dividend+7,7,c
  8478  0018DE  D012               	goto	i2l3337
  8479  0018E0  1E08               	comf	i2___aomod@dividend+7,f,c
  8480  0018E2  1E07               	comf	i2___aomod@dividend+6,f,c
  8481  0018E4  1E06               	comf	i2___aomod@dividend+5,f,c
  8482  0018E6  1E05               	comf	i2___aomod@dividend+4,f,c
  8483  0018E8  1E04               	comf	i2___aomod@dividend+3,f,c
  8484  0018EA  1E03               	comf	i2___aomod@dividend+2,f,c
  8485  0018EC  1E02               	comf	i2___aomod@dividend+1,f,c
  8486  0018EE  6C01               	negf	i2___aomod@dividend,c
  8487  0018F0  0E00               	movlw	0
  8488  0018F2  2202               	addwfc	i2___aomod@dividend+1,f,c
  8489  0018F4  2203               	addwfc	i2___aomod@dividend+2,f,c
  8490  0018F6  2204               	addwfc	i2___aomod@dividend+3,f,c
  8491  0018F8  2205               	addwfc	i2___aomod@dividend+4,f,c
  8492  0018FA  2206               	addwfc	i2___aomod@dividend+5,f,c
  8493  0018FC  2207               	addwfc	i2___aomod@dividend+6,f,c
  8494  0018FE  2208               	addwfc	i2___aomod@dividend+7,f,c
  8495  001900  0E01               	movlw	1
  8496  001902  6E12               	movwf	i2___aomod@sign,c
  8497  001904                     i2l3337:
  8498  001904  FFFF               	dw	65535	; assembler added errata NOP
  8499  001906  AE10               	btfss	i2___aomod@divisor+7,7,c
  8500  001908  D010               	goto	i2l3341
  8501  00190A  1E10               	comf	i2___aomod@divisor+7,f,c
  8502  00190C  1E0F               	comf	i2___aomod@divisor+6,f,c
  8503  00190E  1E0E               	comf	i2___aomod@divisor+5,f,c
  8504  001910  1E0D               	comf	i2___aomod@divisor+4,f,c
  8505  001912  1E0C               	comf	i2___aomod@divisor+3,f,c
  8506  001914  1E0B               	comf	i2___aomod@divisor+2,f,c
  8507  001916  1E0A               	comf	i2___aomod@divisor+1,f,c
  8508  001918  6C09               	negf	i2___aomod@divisor,c
  8509  00191A  0E00               	movlw	0
  8510  00191C  220A               	addwfc	i2___aomod@divisor+1,f,c
  8511  00191E  220B               	addwfc	i2___aomod@divisor+2,f,c
  8512  001920  220C               	addwfc	i2___aomod@divisor+3,f,c
  8513  001922  220D               	addwfc	i2___aomod@divisor+4,f,c
  8514  001924  220E               	addwfc	i2___aomod@divisor+5,f,c
  8515  001926  220F               	addwfc	i2___aomod@divisor+6,f,c
  8516  001928  2210               	addwfc	i2___aomod@divisor+7,f,c
  8517  00192A                     i2l3341:
  8518  00192A  FFFF               	dw	65535	; assembler added errata NOP
  8519  00192C  5009               	movf	i2___aomod@divisor,w,c
  8520  00192E  100A               	iorwf	i2___aomod@divisor+1,w,c
  8521  001930  100B               	iorwf	i2___aomod@divisor+2,w,c
  8522  001932  100C               	iorwf	i2___aomod@divisor+3,w,c
  8523  001934  100D               	iorwf	i2___aomod@divisor+4,w,c
  8524  001936  100E               	iorwf	i2___aomod@divisor+5,w,c
  8525  001938  100F               	iorwf	i2___aomod@divisor+6,w,c
  8526  00193A  1010               	iorwf	i2___aomod@divisor+7,w,c
  8527  00193C  B4D8               	btfsc	status,2,c
  8528  00193E  D040               	goto	i2l3357
  8529  001940  0E01               	movlw	1
  8530  001942  6E11               	movwf	i2___aomod@counter,c
  8531  001944  D00B               	goto	i2l3347
  8532  001946                     i2l3345:
  8533  001946  FFFF               	dw	65535	; assembler added errata NOP
  8534  001948  90D8               	bcf	status,0,c
  8535  00194A  3609               	rlcf	i2___aomod@divisor,f,c
  8536  00194C  360A               	rlcf	i2___aomod@divisor+1,f,c
  8537  00194E  360B               	rlcf	i2___aomod@divisor+2,f,c
  8538  001950  360C               	rlcf	i2___aomod@divisor+3,f,c
  8539  001952  360D               	rlcf	i2___aomod@divisor+4,f,c
  8540  001954  360E               	rlcf	i2___aomod@divisor+5,f,c
  8541  001956  360F               	rlcf	i2___aomod@divisor+6,f,c
  8542  001958  3610               	rlcf	i2___aomod@divisor+7,f,c
  8543  00195A  2A11               	incf	i2___aomod@counter,f,c
  8544  00195C                     i2l3347:
  8545  00195C  FFFF               	dw	65535	; assembler added errata NOP
  8546  00195E  AE10               	btfss	i2___aomod@divisor+7,7,c
  8547  001960  D7F2               	goto	i2l3345
  8548  001962                     i2u270_40:
  8549  001962  FFFF               	dw	65535	; assembler added errata NOP
  8550  001964  5009               	movf	i2___aomod@divisor,w,c
  8551  001966  5C01               	subwf	i2___aomod@dividend,w,c
  8552  001968  500A               	movf	i2___aomod@divisor+1,w,c
  8553  00196A  5802               	subwfb	i2___aomod@dividend+1,w,c
  8554  00196C  500B               	movf	i2___aomod@divisor+2,w,c
  8555  00196E  5803               	subwfb	i2___aomod@dividend+2,w,c
  8556  001970  500C               	movf	i2___aomod@divisor+3,w,c
  8557  001972  5804               	subwfb	i2___aomod@dividend+3,w,c
  8558  001974  500D               	movf	i2___aomod@divisor+4,w,c
  8559  001976  5805               	subwfb	i2___aomod@dividend+4,w,c
  8560  001978  500E               	movf	i2___aomod@divisor+5,w,c
  8561  00197A  5806               	subwfb	i2___aomod@dividend+5,w,c
  8562  00197C  500F               	movf	i2___aomod@divisor+6,w,c
  8563  00197E  5807               	subwfb	i2___aomod@dividend+6,w,c
  8564  001980  5010               	movf	i2___aomod@divisor+7,w,c
  8565  001982  5808               	subwfb	i2___aomod@dividend+7,w,c
  8566  001984  A0D8               	btfss	status,0,c
  8567  001986  D010               	goto	i2l3353
  8568  001988  5009               	movf	i2___aomod@divisor,w,c
  8569  00198A  5E01               	subwf	i2___aomod@dividend,f,c
  8570  00198C  500A               	movf	i2___aomod@divisor+1,w,c
  8571  00198E  5A02               	subwfb	i2___aomod@dividend+1,f,c
  8572  001990  500B               	movf	i2___aomod@divisor+2,w,c
  8573  001992  5A03               	subwfb	i2___aomod@dividend+2,f,c
  8574  001994  500C               	movf	i2___aomod@divisor+3,w,c
  8575  001996  5A04               	subwfb	i2___aomod@dividend+3,f,c
  8576  001998  500D               	movf	i2___aomod@divisor+4,w,c
  8577  00199A  5A05               	subwfb	i2___aomod@dividend+4,f,c
  8578  00199C  500E               	movf	i2___aomod@divisor+5,w,c
  8579  00199E  5A06               	subwfb	i2___aomod@dividend+5,f,c
  8580  0019A0  500F               	movf	i2___aomod@divisor+6,w,c
  8581  0019A2  5A07               	subwfb	i2___aomod@dividend+6,f,c
  8582  0019A4  5010               	movf	i2___aomod@divisor+7,w,c
  8583  0019A6  5A08               	subwfb	i2___aomod@dividend+7,f,c
  8584  0019A8                     i2l3353:
  8585  0019A8  FFFF               	dw	65535	; assembler added errata NOP
  8586  0019AA  90D8               	bcf	status,0,c
  8587  0019AC  3210               	rrcf	i2___aomod@divisor+7,f,c
  8588  0019AE  320F               	rrcf	i2___aomod@divisor+6,f,c
  8589  0019B0  320E               	rrcf	i2___aomod@divisor+5,f,c
  8590  0019B2  320D               	rrcf	i2___aomod@divisor+4,f,c
  8591  0019B4  320C               	rrcf	i2___aomod@divisor+3,f,c
  8592  0019B6  320B               	rrcf	i2___aomod@divisor+2,f,c
  8593  0019B8  320A               	rrcf	i2___aomod@divisor+1,f,c
  8594  0019BA  3209               	rrcf	i2___aomod@divisor,f,c
  8595  0019BC  2E11               	decfsz	i2___aomod@counter,f,c
  8596  0019BE  D7D1               	goto	i2u270_40
  8597  0019C0                     i2l3357:
  8598  0019C0  FFFF               	dw	65535	; assembler added errata NOP
  8599  0019C2  5012               	movf	i2___aomod@sign,w,c
  8600  0019C4  B4D8               	btfsc	status,2,c
  8601  0019C6  D010               	goto	i2l3361
  8602  0019C8  1E08               	comf	i2___aomod@dividend+7,f,c
  8603  0019CA  1E07               	comf	i2___aomod@dividend+6,f,c
  8604  0019CC  1E06               	comf	i2___aomod@dividend+5,f,c
  8605  0019CE  1E05               	comf	i2___aomod@dividend+4,f,c
  8606  0019D0  1E04               	comf	i2___aomod@dividend+3,f,c
  8607  0019D2  1E03               	comf	i2___aomod@dividend+2,f,c
  8608  0019D4  1E02               	comf	i2___aomod@dividend+1,f,c
  8609  0019D6  6C01               	negf	i2___aomod@dividend,c
  8610  0019D8  0E00               	movlw	0
  8611  0019DA  2202               	addwfc	i2___aomod@dividend+1,f,c
  8612  0019DC  2203               	addwfc	i2___aomod@dividend+2,f,c
  8613  0019DE  2204               	addwfc	i2___aomod@dividend+3,f,c
  8614  0019E0  2205               	addwfc	i2___aomod@dividend+4,f,c
  8615  0019E2  2206               	addwfc	i2___aomod@dividend+5,f,c
  8616  0019E4  2207               	addwfc	i2___aomod@dividend+6,f,c
  8617  0019E6  2208               	addwfc	i2___aomod@dividend+7,f,c
  8618  0019E8                     i2l3361:
  8619  0019E8  FFFF               	dw	65535	; assembler added errata NOP
  8620  0019EA  C001  F001         	movff	i2___aomod@dividend,?i2___aomod
  8621  0019EE  C002  F002         	movff	i2___aomod@dividend+1,?i2___aomod+1
  8622  0019F2  C003  F003         	movff	i2___aomod@dividend+2,?i2___aomod+2
  8623  0019F6  C004  F004         	movff	i2___aomod@dividend+3,?i2___aomod+3
  8624  0019FA  C005  F005         	movff	i2___aomod@dividend+4,?i2___aomod+4
  8625  0019FE  C006  F006         	movff	i2___aomod@dividend+5,?i2___aomod+5
  8626  001A02  C007  F007         	movff	i2___aomod@dividend+6,?i2___aomod+6
  8627  001A06  C008  F008         	movff	i2___aomod@dividend+7,?i2___aomod+7
  8628  001A0A  0012               	return		;funcret
  8629  001A0C  FFFF               	dw	65535	; errata NOP
  8630  001A0E                     __end_ofi2___aomod:
  8631                           	opt callstack 0
  8632                           
  8633 ;; *************** function i2___aodiv *****************
  8634 ;; Defined at:
  8635 ;;		line 9 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/aodiv.c"
  8636 ;; Parameters:    Size  Location     Type
  8637 ;;  dividend        8    0[COMRAM] long long 
  8638 ;;  divisor         8    8[COMRAM] long long 
  8639 ;; Auto vars:     Size  Location     Type
  8640 ;;  __aodiv         8   18[COMRAM] long long 
  8641 ;;  __aodiv         1   17[COMRAM] unsigned char 
  8642 ;;  __aodiv         1   16[COMRAM] unsigned char 
  8643 ;; Return value:  Size  Location     Type
  8644 ;;                  8    0[COMRAM] long long 
  8645 ;; Registers used:
  8646 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8647 ;; Tracked objects:
  8648 ;;		On entry : 0/0
  8649 ;;		On exit  : 0/0
  8650 ;;		Unchanged: 0/0
  8651 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8652 ;;      Params:        16       0       0       0       0       0       0
  8653 ;;      Locals:        10       0       0       0       0       0       0
  8654 ;;      Temps:          0       0       0       0       0       0       0
  8655 ;;      Totals:        26       0       0       0       0       0       0
  8656 ;;Total ram usage:       26 bytes
  8657 ;; Hardware stack levels used:    1
  8658 ;; This function calls:
  8659 ;;		Nothing
  8660 ;; This function is called by:
  8661 ;;		i2_dtoa
  8662 ;; This function uses a non-reentrant model
  8663 ;;
  8664                           
  8665                           	psect	text53
  8666  001640                     __ptext53:
  8667                           	opt callstack 0
  8668  001640                     i2___aodiv:
  8669                           	opt callstack 0
  8670  001640  FFFF               	dw	65535	; assembler added errata NOP
  8671                           
  8672                           ;incstack = 0
  8673  001642  0E00               	movlw	0
  8674  001644  6E12               	movwf	i2___aodiv@sign,c
  8675  001646  AE10               	btfss	i2___aodiv@divisor+7,7,c
  8676  001648  D012               	goto	i2l3293
  8677  00164A  1E10               	comf	i2___aodiv@divisor+7,f,c
  8678  00164C  1E0F               	comf	i2___aodiv@divisor+6,f,c
  8679  00164E  1E0E               	comf	i2___aodiv@divisor+5,f,c
  8680  001650  1E0D               	comf	i2___aodiv@divisor+4,f,c
  8681  001652  1E0C               	comf	i2___aodiv@divisor+3,f,c
  8682  001654  1E0B               	comf	i2___aodiv@divisor+2,f,c
  8683  001656  1E0A               	comf	i2___aodiv@divisor+1,f,c
  8684  001658  6C09               	negf	i2___aodiv@divisor,c
  8685  00165A  0E00               	movlw	0
  8686  00165C  220A               	addwfc	i2___aodiv@divisor+1,f,c
  8687  00165E  220B               	addwfc	i2___aodiv@divisor+2,f,c
  8688  001660  220C               	addwfc	i2___aodiv@divisor+3,f,c
  8689  001662  220D               	addwfc	i2___aodiv@divisor+4,f,c
  8690  001664  220E               	addwfc	i2___aodiv@divisor+5,f,c
  8691  001666  220F               	addwfc	i2___aodiv@divisor+6,f,c
  8692  001668  2210               	addwfc	i2___aodiv@divisor+7,f,c
  8693  00166A  0E01               	movlw	1
  8694  00166C  6E12               	movwf	i2___aodiv@sign,c
  8695  00166E                     i2l3293:
  8696  00166E  FFFF               	dw	65535	; assembler added errata NOP
  8697  001670  AE08               	btfss	i2___aodiv@dividend+7,7,c
  8698  001672  D012               	goto	i2l3299
  8699  001674  1E08               	comf	i2___aodiv@dividend+7,f,c
  8700  001676  1E07               	comf	i2___aodiv@dividend+6,f,c
  8701  001678  1E06               	comf	i2___aodiv@dividend+5,f,c
  8702  00167A  1E05               	comf	i2___aodiv@dividend+4,f,c
  8703  00167C  1E04               	comf	i2___aodiv@dividend+3,f,c
  8704  00167E  1E03               	comf	i2___aodiv@dividend+2,f,c
  8705  001680  1E02               	comf	i2___aodiv@dividend+1,f,c
  8706  001682  6C01               	negf	i2___aodiv@dividend,c
  8707  001684  0E00               	movlw	0
  8708  001686  2202               	addwfc	i2___aodiv@dividend+1,f,c
  8709  001688  2203               	addwfc	i2___aodiv@dividend+2,f,c
  8710  00168A  2204               	addwfc	i2___aodiv@dividend+3,f,c
  8711  00168C  2205               	addwfc	i2___aodiv@dividend+4,f,c
  8712  00168E  2206               	addwfc	i2___aodiv@dividend+5,f,c
  8713  001690  2207               	addwfc	i2___aodiv@dividend+6,f,c
  8714  001692  2208               	addwfc	i2___aodiv@dividend+7,f,c
  8715  001694  0E01               	movlw	1
  8716  001696  1A12               	xorwf	i2___aodiv@sign,f,c
  8717  001698                     i2l3299:
  8718  001698  FFFF               	dw	65535	; assembler added errata NOP
  8719  00169A  EE20  F013         	lfsr	2,i2___aodiv@quotient
  8720  00169E  0E07               	movlw	7
  8721  0016A0                     i2u262_41:
  8722  0016A0  6ADE               	clrf	postinc2,c
  8723  0016A2  06E8               	decf	wreg,f,c
  8724  0016A4  E2FD               	bc	i2u262_41
  8725  0016A6  5009               	movf	i2___aodiv@divisor,w,c
  8726  0016A8  100A               	iorwf	i2___aodiv@divisor+1,w,c
  8727  0016AA  100B               	iorwf	i2___aodiv@divisor+2,w,c
  8728  0016AC  100C               	iorwf	i2___aodiv@divisor+3,w,c
  8729  0016AE  100D               	iorwf	i2___aodiv@divisor+4,w,c
  8730  0016B0  100E               	iorwf	i2___aodiv@divisor+5,w,c
  8731  0016B2  100F               	iorwf	i2___aodiv@divisor+6,w,c
  8732  0016B4  1010               	iorwf	i2___aodiv@divisor+7,w,c
  8733  0016B6  B4D8               	btfsc	status,2,c
  8734  0016B8  D04A               	goto	i2l3321
  8735  0016BA  0E01               	movlw	1
  8736  0016BC  6E11               	movwf	i2___aodiv@counter,c
  8737  0016BE  D00B               	goto	i2l3307
  8738  0016C0                     i2l3305:
  8739  0016C0  FFFF               	dw	65535	; assembler added errata NOP
  8740  0016C2  90D8               	bcf	status,0,c
  8741  0016C4  3609               	rlcf	i2___aodiv@divisor,f,c
  8742  0016C6  360A               	rlcf	i2___aodiv@divisor+1,f,c
  8743  0016C8  360B               	rlcf	i2___aodiv@divisor+2,f,c
  8744  0016CA  360C               	rlcf	i2___aodiv@divisor+3,f,c
  8745  0016CC  360D               	rlcf	i2___aodiv@divisor+4,f,c
  8746  0016CE  360E               	rlcf	i2___aodiv@divisor+5,f,c
  8747  0016D0  360F               	rlcf	i2___aodiv@divisor+6,f,c
  8748  0016D2  3610               	rlcf	i2___aodiv@divisor+7,f,c
  8749  0016D4  2A11               	incf	i2___aodiv@counter,f,c
  8750  0016D6                     i2l3307:
  8751  0016D6  FFFF               	dw	65535	; assembler added errata NOP
  8752  0016D8  AE10               	btfss	i2___aodiv@divisor+7,7,c
  8753  0016DA  D7F2               	goto	i2l3305
  8754  0016DC                     i2u264_40:
  8755  0016DC  FFFF               	dw	65535	; assembler added errata NOP
  8756  0016DE  90D8               	bcf	status,0,c
  8757  0016E0  3613               	rlcf	i2___aodiv@quotient,f,c
  8758  0016E2  3614               	rlcf	i2___aodiv@quotient+1,f,c
  8759  0016E4  3615               	rlcf	i2___aodiv@quotient+2,f,c
  8760  0016E6  3616               	rlcf	i2___aodiv@quotient+3,f,c
  8761  0016E8  3617               	rlcf	i2___aodiv@quotient+4,f,c
  8762  0016EA  3618               	rlcf	i2___aodiv@quotient+5,f,c
  8763  0016EC  3619               	rlcf	i2___aodiv@quotient+6,f,c
  8764  0016EE  361A               	rlcf	i2___aodiv@quotient+7,f,c
  8765  0016F0  5009               	movf	i2___aodiv@divisor,w,c
  8766  0016F2  5C01               	subwf	i2___aodiv@dividend,w,c
  8767  0016F4  500A               	movf	i2___aodiv@divisor+1,w,c
  8768  0016F6  5802               	subwfb	i2___aodiv@dividend+1,w,c
  8769  0016F8  500B               	movf	i2___aodiv@divisor+2,w,c
  8770  0016FA  5803               	subwfb	i2___aodiv@dividend+2,w,c
  8771  0016FC  500C               	movf	i2___aodiv@divisor+3,w,c
  8772  0016FE  5804               	subwfb	i2___aodiv@dividend+3,w,c
  8773  001700  500D               	movf	i2___aodiv@divisor+4,w,c
  8774  001702  5805               	subwfb	i2___aodiv@dividend+4,w,c
  8775  001704  500E               	movf	i2___aodiv@divisor+5,w,c
  8776  001706  5806               	subwfb	i2___aodiv@dividend+5,w,c
  8777  001708  500F               	movf	i2___aodiv@divisor+6,w,c
  8778  00170A  5807               	subwfb	i2___aodiv@dividend+6,w,c
  8779  00170C  5010               	movf	i2___aodiv@divisor+7,w,c
  8780  00170E  5808               	subwfb	i2___aodiv@dividend+7,w,c
  8781  001710  A0D8               	btfss	status,0,c
  8782  001712  D011               	goto	i2l3317
  8783  001714  5009               	movf	i2___aodiv@divisor,w,c
  8784  001716  5E01               	subwf	i2___aodiv@dividend,f,c
  8785  001718  500A               	movf	i2___aodiv@divisor+1,w,c
  8786  00171A  5A02               	subwfb	i2___aodiv@dividend+1,f,c
  8787  00171C  500B               	movf	i2___aodiv@divisor+2,w,c
  8788  00171E  5A03               	subwfb	i2___aodiv@dividend+2,f,c
  8789  001720  500C               	movf	i2___aodiv@divisor+3,w,c
  8790  001722  5A04               	subwfb	i2___aodiv@dividend+3,f,c
  8791  001724  500D               	movf	i2___aodiv@divisor+4,w,c
  8792  001726  5A05               	subwfb	i2___aodiv@dividend+4,f,c
  8793  001728  500E               	movf	i2___aodiv@divisor+5,w,c
  8794  00172A  5A06               	subwfb	i2___aodiv@dividend+5,f,c
  8795  00172C  500F               	movf	i2___aodiv@divisor+6,w,c
  8796  00172E  5A07               	subwfb	i2___aodiv@dividend+6,f,c
  8797  001730  5010               	movf	i2___aodiv@divisor+7,w,c
  8798  001732  5A08               	subwfb	i2___aodiv@dividend+7,f,c
  8799  001734  8013               	bsf	i2___aodiv@quotient,0,c
  8800  001736                     i2l3317:
  8801  001736  FFFF               	dw	65535	; assembler added errata NOP
  8802  001738  90D8               	bcf	status,0,c
  8803  00173A  3210               	rrcf	i2___aodiv@divisor+7,f,c
  8804  00173C  320F               	rrcf	i2___aodiv@divisor+6,f,c
  8805  00173E  320E               	rrcf	i2___aodiv@divisor+5,f,c
  8806  001740  320D               	rrcf	i2___aodiv@divisor+4,f,c
  8807  001742  320C               	rrcf	i2___aodiv@divisor+3,f,c
  8808  001744  320B               	rrcf	i2___aodiv@divisor+2,f,c
  8809  001746  320A               	rrcf	i2___aodiv@divisor+1,f,c
  8810  001748  3209               	rrcf	i2___aodiv@divisor,f,c
  8811  00174A  2E11               	decfsz	i2___aodiv@counter,f,c
  8812  00174C  D7C7               	goto	i2u264_40
  8813  00174E                     i2l3321:
  8814  00174E  FFFF               	dw	65535	; assembler added errata NOP
  8815  001750  5012               	movf	i2___aodiv@sign,w,c
  8816  001752  B4D8               	btfsc	status,2,c
  8817  001754  D010               	goto	i2l3325
  8818  001756  1E1A               	comf	i2___aodiv@quotient+7,f,c
  8819  001758  1E19               	comf	i2___aodiv@quotient+6,f,c
  8820  00175A  1E18               	comf	i2___aodiv@quotient+5,f,c
  8821  00175C  1E17               	comf	i2___aodiv@quotient+4,f,c
  8822  00175E  1E16               	comf	i2___aodiv@quotient+3,f,c
  8823  001760  1E15               	comf	i2___aodiv@quotient+2,f,c
  8824  001762  1E14               	comf	i2___aodiv@quotient+1,f,c
  8825  001764  6C13               	negf	i2___aodiv@quotient,c
  8826  001766  0E00               	movlw	0
  8827  001768  2214               	addwfc	i2___aodiv@quotient+1,f,c
  8828  00176A  2215               	addwfc	i2___aodiv@quotient+2,f,c
  8829  00176C  2216               	addwfc	i2___aodiv@quotient+3,f,c
  8830  00176E  2217               	addwfc	i2___aodiv@quotient+4,f,c
  8831  001770  2218               	addwfc	i2___aodiv@quotient+5,f,c
  8832  001772  2219               	addwfc	i2___aodiv@quotient+6,f,c
  8833  001774  221A               	addwfc	i2___aodiv@quotient+7,f,c
  8834  001776                     i2l3325:
  8835  001776  FFFF               	dw	65535	; assembler added errata NOP
  8836  001778  C013  F001         	movff	i2___aodiv@quotient,?i2___aodiv
  8837  00177C  C014  F002         	movff	i2___aodiv@quotient+1,?i2___aodiv+1
  8838  001780  C015  F003         	movff	i2___aodiv@quotient+2,?i2___aodiv+2
  8839  001784  C016  F004         	movff	i2___aodiv@quotient+3,?i2___aodiv+3
  8840  001788  C017  F005         	movff	i2___aodiv@quotient+4,?i2___aodiv+4
  8841  00178C  C018  F006         	movff	i2___aodiv@quotient+5,?i2___aodiv+5
  8842  001790  C019  F007         	movff	i2___aodiv@quotient+6,?i2___aodiv+6
  8843  001794  C01A  F008         	movff	i2___aodiv@quotient+7,?i2___aodiv+7
  8844  001798  0012               	return		;funcret
  8845  00179A  FFFF               	dw	65535	; errata NOP
  8846  00179C                     __end_ofi2___aodiv:
  8847                           	opt callstack 0
  8848                           
  8849 ;; *************** function i2_atoi *****************
  8850 ;; Defined at:
  8851 ;;		line 4 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/atoi.c"
  8852 ;; Parameters:    Size  Location     Type
  8853 ;;  s               2    7[COMRAM] PTR const unsigned char 
  8854 ;;		 -> STR_5(18), STR_4(17), STR_3(17), STR_2(17), 
  8855 ;;		 -> STR_1(17), 
  8856 ;; Auto vars:     Size  Location     Type
  8857 ;;  atoi            2   20[COMRAM] int 
  8858 ;;  atoi            2   13[COMRAM] int 
  8859 ;; Return value:  Size  Location     Type
  8860 ;;                  2    7[COMRAM] int 
  8861 ;; Registers used:
  8862 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8863 ;; Tracked objects:
  8864 ;;		On entry : 0/0
  8865 ;;		On exit  : 0/0
  8866 ;;		Unchanged: 0/0
  8867 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8868 ;;      Params:         2       0       0       0       0       0       0
  8869 ;;      Locals:         9       0       0       0       0       0       0
  8870 ;;      Temps:          4       0       0       0       0       0       0
  8871 ;;      Totals:        15       0       0       0       0       0       0
  8872 ;;Total ram usage:       15 bytes
  8873 ;; Hardware stack levels used:    1
  8874 ;; Hardware stack levels required when called:    1
  8875 ;; This function calls:
  8876 ;;		i2___wmul
  8877 ;;		i2_isdigit
  8878 ;;		i2_isspace
  8879 ;; This function is called by:
  8880 ;;		i2_vfpfcnvrt
  8881 ;; This function uses a non-reentrant model
  8882 ;;
  8883                           
  8884                           	psect	text54
  8885  00137C                     __ptext54:
  8886                           	opt callstack 0
  8887  00137C                     i2_atoi:
  8888                           	opt callstack 0
  8889  00137C  FFFF               	dw	65535	; assembler added errata NOP
  8890                           
  8891                           ;incstack = 0
  8892  00137E  0E00               	movlw	0
  8893  001380  6E16               	movwf	i2atoi@n+1,c
  8894  001382  0E00               	movlw	0
  8895  001384  6E15               	movwf	i2atoi@n,c
  8896  001386  0E00               	movlw	0
  8897  001388  6E0F               	movwf	i2atoi@neg+1,c
  8898  00138A  0E00               	movlw	0
  8899  00138C  6E0E               	movwf	i2atoi@neg,c
  8900  00138E  D003               	goto	i2l3513
  8901  001390                     i2l3511:
  8902  001390  FFFF               	dw	65535	; assembler added errata NOP
  8903  001392  4A08               	infsnz	i2atoi@s,f,c
  8904  001394  2A09               	incf	i2atoi@s+1,f,c
  8905  001396                     i2l3513:
  8906  001396  FFFF               	dw	65535	; assembler added errata NOP
  8907  001398  0E01               	movlw	1
  8908  00139A  6E14               	movwf	i2_atoi$1586,c
  8909  00139C  C008  FFF6         	movff	i2atoi@s,tblptrl
  8910  0013A0  C009  FFF7         	movff	i2atoi@s+1,tblptrh
  8911  0013A4                     	if	0	;tblptru may be non-zero
  8912  0013A4                     	endif
  8913  0013A4                     	if	0	;tblptru may be non-zero
  8914  0013A4                     	endif
  8915  0013A4  0008               	tblrd		*
  8916  0013A6  FFFF               	dw	65535	; errata NOP
  8917  0013A8  50F5               	movf	tablat,w,c
  8918  0013AA  0A20               	xorlw	32
  8919  0013AC  B4D8               	btfsc	status,2,c
  8920  0013AE  D019               	goto	i2l3521
  8921  0013B0  0EF7               	movlw	247
  8922  0013B2  6E0A               	movwf	??i2_atoi& (0+255),c
  8923  0013B4  0EFF               	movlw	255
  8924  0013B6  6E0B               	movwf	(??i2_atoi+1)& (0+255),c
  8925  0013B8  C008  FFF6         	movff	i2atoi@s,tblptrl
  8926  0013BC  C009  FFF7         	movff	i2atoi@s+1,tblptrh
  8927  0013C0                     	if	0	;tblptru may be non-zero
  8928  0013C0                     	endif
  8929  0013C0                     	if	0	;tblptru may be non-zero
  8930  0013C0                     	endif
  8931  0013C0  0008               	tblrd		*
  8932  0013C2  FFFF               	dw	65535	; errata NOP
  8933  0013C4  50F5               	movf	tablat,w,c
  8934  0013C6  6E0C               	movwf	(??i2_atoi+2)& (0+255),c
  8935  0013C8  6A0D               	clrf	(??i2_atoi+3)& (0+255),c
  8936  0013CA  500A               	movf	??i2_atoi,w,c
  8937  0013CC  260C               	addwf	??i2_atoi+2,f,c
  8938  0013CE  500B               	movf	??i2_atoi+1,w,c
  8939  0013D0  220D               	addwfc	??i2_atoi+3,f,c
  8940  0013D2  500D               	movf	??i2_atoi+3,w,c
  8941  0013D4  E104               	bnz	i2u303_40
  8942  0013D6  0E05               	movlw	5
  8943  0013D8  5C0C               	subwf	??i2_atoi+2,w,c
  8944  0013DA  A0D8               	btfss	status,0,c
  8945  0013DC  D002               	goto	i2l3521
  8946  0013DE                     i2u303_40:
  8947  0013DE  0E00               	movlw	0
  8948  0013E0  6E14               	movwf	i2_atoi$1586,c
  8949  0013E2                     i2l3521:
  8950  0013E2  FFFF               	dw	65535	; assembler added errata NOP
  8951  0013E4  C014  F010         	movff	i2_atoi$1586,i2_atoi$1585
  8952  0013E8  6A11               	clrf	i2_atoi$1585+1,c
  8953  0013EA  5010               	movf	i2_atoi$1585,w,c
  8954  0013EC  1011               	iorwf	i2_atoi$1585+1,w,c
  8955  0013EE  B4D8               	btfsc	status,2,c
  8956  0013F0  D00A               	goto	i2l3531
  8957  0013F2  D7CE               	goto	i2l3511
  8958  0013F4                     i2l3527:
  8959  0013F4  FFFF               	dw	65535	; assembler added errata NOP
  8960  0013F6  0E00               	movlw	0
  8961  0013F8  6E0F               	movwf	i2atoi@neg+1,c
  8962  0013FA  0E01               	movlw	1
  8963  0013FC  6E0E               	movwf	i2atoi@neg,c
  8964  0013FE                     i2l3529:
  8965  0013FE  FFFF               	dw	65535	; assembler added errata NOP
  8966  001400  4A08               	infsnz	i2atoi@s,f,c
  8967  001402  2A09               	incf	i2atoi@s+1,f,c
  8968  001404  D032               	goto	i2l3537
  8969  001406                     i2l3531:
  8970  001406  FFFF               	dw	65535	; assembler added errata NOP
  8971  001408  C008  FFF6         	movff	i2atoi@s,tblptrl
  8972  00140C  C009  FFF7         	movff	i2atoi@s+1,tblptrh
  8973  001410                     	if	0	;tblptru may be non-zero
  8974  001410                     	endif
  8975  001410                     	if	0	;tblptru may be non-zero
  8976  001410                     	endif
  8977  001410  0008               	tblrd		*
  8978  001412  FFFF               	dw	65535	; errata NOP
  8979  001414  50F5               	movf	tablat,w,c
  8980  001416  6E0A               	movwf	??i2_atoi& (0+255),c
  8981  001418  6A0B               	clrf	(??i2_atoi+1)& (0+255),c
  8982                           
  8983                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8984                           ; Switch size 1, requested type "simple"
  8985                           ; Number of cases is 1, Range of values is 0 to 0
  8986                           ; switch strategies available:
  8987                           ; Name         Instructions Cycles
  8988                           ; simple_byte            4     3 (average)
  8989                           ;	Chosen strategy is simple_byte
  8990  00141A  500B               	movf	??i2_atoi+1,w,c
  8991  00141C  0A00               	xorlw	0	; case 0
  8992  00141E  A4D8               	btfss	status,2,c
  8993  001420  D024               	goto	i2l3537
  8994                           
  8995                           ; Switch size 1, requested type "simple"
  8996                           ; Number of cases is 2, Range of values is 43 to 45
  8997                           ; switch strategies available:
  8998                           ; Name         Instructions Cycles
  8999                           ; simple_byte            7     4 (average)
  9000                           ;	Chosen strategy is simple_byte
  9001  001422  500A               	movf	??i2_atoi,w,c
  9002  001424  0A2B               	xorlw	43	; case 43
  9003  001426  B4D8               	btfsc	status,2,c
  9004  001428  D7EA               	goto	i2l3529
  9005  00142A  0A06               	xorlw	6	; case 45
  9006  00142C  B4D8               	btfsc	status,2,c
  9007  00142E  D7E2               	goto	i2l3527
  9008  001430  D01C               	goto	i2l3537
  9009  001432                     i2l3533:
  9010  001432  FFFF               	dw	65535	; assembler added errata NOP
  9011  001434  C015  F001         	movff	i2atoi@n,i2___wmul@multiplier
  9012  001438  C016  F002         	movff	i2atoi@n+1,i2___wmul@multiplier+1
  9013  00143C  0E00               	movlw	0
  9014  00143E  6E04               	movwf	i2___wmul@multiplicand+1,c
  9015  001440  0E0A               	movlw	10
  9016  001442  6E03               	movwf	i2___wmul@multiplicand,c
  9017  001444  EC05  F016         	call	i2___wmul	;wreg free
  9018  001448  C008  FFF6         	movff	i2atoi@s,tblptrl
  9019  00144C  C009  FFF7         	movff	i2atoi@s+1,tblptrh
  9020  001450                     	if	0	;tblptru may be non-zero
  9021  001450                     	endif
  9022  001450                     	if	0	;tblptru may be non-zero
  9023  001450                     	endif
  9024  001450  0008               	tblrd		*
  9025  001452  FFFF               	dw	65535	; errata NOP
  9026  001454  50F5               	movf	tablat,w,c
  9027  001456  5E01               	subwf	?i2___wmul,f,c
  9028  001458  0E00               	movlw	0
  9029  00145A  5A02               	subwfb	?i2___wmul+1,f,c
  9030  00145C  0E30               	movlw	48
  9031  00145E  2401               	addwf	?i2___wmul,w,c
  9032  001460  6E15               	movwf	i2atoi@n,c
  9033  001462  0E00               	movlw	0
  9034  001464  2002               	addwfc	?i2___wmul+1,w,c
  9035  001466  6E16               	movwf	i2atoi@n+1,c
  9036  001468  D7CA               	goto	i2l3529
  9037  00146A                     i2l3537:
  9038  00146A  FFFF               	dw	65535	; assembler added errata NOP
  9039  00146C  0ED0               	movlw	208
  9040  00146E  6E0A               	movwf	??i2_atoi& (0+255),c
  9041  001470  0EFF               	movlw	255
  9042  001472  6E0B               	movwf	(??i2_atoi+1)& (0+255),c
  9043  001474  C008  FFF6         	movff	i2atoi@s,tblptrl
  9044  001478  C009  FFF7         	movff	i2atoi@s+1,tblptrh
  9045  00147C                     	if	0	;tblptru may be non-zero
  9046  00147C                     	endif
  9047  00147C                     	if	0	;tblptru may be non-zero
  9048  00147C                     	endif
  9049  00147C  0008               	tblrd		*
  9050  00147E  FFFF               	dw	65535	; errata NOP
  9051  001480  50F5               	movf	tablat,w,c
  9052  001482  6E0C               	movwf	(??i2_atoi+2)& (0+255),c
  9053  001484  6A0D               	clrf	(??i2_atoi+3)& (0+255),c
  9054  001486  500A               	movf	??i2_atoi,w,c
  9055  001488  260C               	addwf	??i2_atoi+2,f,c
  9056  00148A  500B               	movf	??i2_atoi+1,w,c
  9057  00148C  220D               	addwfc	??i2_atoi+3,f,c
  9058  00148E  500D               	movf	??i2_atoi+3,w,c
  9059  001490  E106               	bnz	i2u305_40
  9060  001492  0E0A               	movlw	10
  9061  001494  5C0C               	subwf	??i2_atoi+2,w,c
  9062  001496  B0D8               	btfsc	status,0,c
  9063  001498  D002               	goto	i2u305_40
  9064  00149A  0E01               	movlw	1
  9065  00149C  D002               	goto	i2u306_40
  9066  00149E                     i2u305_40:
  9067  00149E  FFFF               	dw	65535	; assembler added errata NOP
  9068  0014A0  0E00               	movlw	0
  9069  0014A2                     i2u306_40:
  9070  0014A2  FFFF               	dw	65535	; assembler added errata NOP
  9071  0014A4  6E12               	movwf	i2_atoi$1587,c
  9072  0014A6  6A13               	clrf	i2_atoi$1587+1,c
  9073  0014A8  5012               	movf	i2_atoi$1587,w,c
  9074  0014AA  1013               	iorwf	i2_atoi$1587+1,w,c
  9075  0014AC  A4D8               	btfss	status,2,c
  9076  0014AE  D7C1               	goto	i2l3533
  9077  0014B0  500E               	movf	i2atoi@neg,w,c
  9078  0014B2  100F               	iorwf	i2atoi@neg+1,w,c
  9079  0014B4  A4D8               	btfss	status,2,c
  9080  0014B6  D00D               	goto	i2l1364
  9081  0014B8  C015  F00A         	movff	i2atoi@n,??i2_atoi
  9082  0014BC  C016  F00B         	movff	i2atoi@n+1,??i2_atoi+1
  9083  0014C0  1E0A               	comf	??i2_atoi,f,c
  9084  0014C2  1E0B               	comf	??i2_atoi+1,f,c
  9085  0014C4  4A0A               	infsnz	??i2_atoi,f,c
  9086  0014C6  2A0B               	incf	??i2_atoi+1,f,c
  9087  0014C8  C00A  F008         	movff	??i2_atoi,?i2_atoi
  9088  0014CC  C00B  F009         	movff	??i2_atoi+1,?i2_atoi+1
  9089  0014D0  D005               	goto	i2l1367
  9090  0014D2                     i2l1364:
  9091  0014D2  FFFF               	dw	65535	; assembler added errata NOP
  9092  0014D4  C015  F008         	movff	i2atoi@n,?i2_atoi
  9093  0014D8  C016  F009         	movff	i2atoi@n+1,?i2_atoi+1
  9094  0014DC                     i2l1367:
  9095  0014DC  FFFF               	dw	65535	; assembler added errata NOP
  9096  0014DE  0012               	return		;funcret
  9097  0014E0  FFFF               	dw	65535	; errata NOP
  9098  0014E2                     __end_ofi2_atoi:
  9099                           	opt callstack 0
  9100                           
  9101 ;; *************** function i2_isspace *****************
  9102 ;; Defined at:
  9103 ;;		line 5 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/isspace.c"
  9104 ;; Parameters:    Size  Location     Type
  9105 ;;  c               2    0[COMRAM] int 
  9106 ;; Auto vars:     Size  Location     Type
  9107 ;;		None
  9108 ;; Return value:  Size  Location     Type
  9109 ;;                  2    0[COMRAM] int 
  9110 ;; Registers used:
  9111 ;;		wreg, status,2, status,0
  9112 ;; Tracked objects:
  9113 ;;		On entry : 0/0
  9114 ;;		On exit  : 0/0
  9115 ;;		Unchanged: 0/0
  9116 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9117 ;;      Params:         2       0       0       0       0       0       0
  9118 ;;      Locals:         1       0       0       0       0       0       0
  9119 ;;      Temps:          4       0       0       0       0       0       0
  9120 ;;      Totals:         7       0       0       0       0       0       0
  9121 ;;Total ram usage:        7 bytes
  9122 ;; Hardware stack levels used:    1
  9123 ;; This function calls:
  9124 ;;		Nothing
  9125 ;; This function is called by:
  9126 ;;		i2_atoi
  9127 ;; This function uses a non-reentrant model
  9128 ;;
  9129                           
  9130                           	psect	text55
  9131  0028B2                     __ptext55:
  9132                           	opt callstack 0
  9133  0028B2                     i2_isspace:
  9134                           	opt callstack 0
  9135  0028B2  FFFF               	dw	65535	; assembler added errata NOP
  9136                           
  9137                           ;incstack = 0
  9138  0028B4  0E01               	movlw	1
  9139  0028B6  6E07               	movwf	i2_isspace$1603,c
  9140  0028B8  0E20               	movlw	32
  9141  0028BA  1801               	xorwf	i2isspace@c,w,c
  9142  0028BC  1002               	iorwf	i2isspace@c+1,w,c
  9143  0028BE  B4D8               	btfsc	status,2,c
  9144  0028C0  D014               	goto	i2l3381
  9145  0028C2  0EF7               	movlw	247
  9146  0028C4  6E03               	movwf	??i2_isspace& (0+255),c
  9147  0028C6  0EFF               	movlw	255
  9148  0028C8  6E04               	movwf	(??i2_isspace+1)& (0+255),c
  9149  0028CA  C001  F005         	movff	i2isspace@c,??i2_isspace+2
  9150  0028CE  C002  F006         	movff	i2isspace@c+1,??i2_isspace+3
  9151  0028D2  5003               	movf	??i2_isspace,w,c
  9152  0028D4  2605               	addwf	??i2_isspace+2,f,c
  9153  0028D6  5004               	movf	??i2_isspace+1,w,c
  9154  0028D8  2206               	addwfc	??i2_isspace+3,f,c
  9155  0028DA  5006               	movf	??i2_isspace+3,w,c
  9156  0028DC  E104               	bnz	i2u277_40
  9157  0028DE  0E05               	movlw	5
  9158  0028E0  5C05               	subwf	??i2_isspace+2,w,c
  9159  0028E2  A0D8               	btfss	status,0,c
  9160  0028E4  D002               	goto	i2l3381
  9161  0028E6                     i2u277_40:
  9162  0028E6  0E00               	movlw	0
  9163  0028E8  6E07               	movwf	i2_isspace$1603,c
  9164  0028EA                     i2l3381:
  9165  0028EA  FFFF               	dw	65535	; assembler added errata NOP
  9166  0028EC  C007  F001         	movff	i2_isspace$1603,?i2_isspace
  9167  0028F0  6A02               	clrf	?i2_isspace+1,c
  9168  0028F2  0012               	return		;funcret
  9169  0028F4  FFFF               	dw	65535	; errata NOP
  9170  0028F6                     __end_ofi2_isspace:
  9171                           	opt callstack 0
  9172                           
  9173 ;; *************** function i2_isdigit *****************
  9174 ;; Defined at:
  9175 ;;		line 5 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/isdigit.c"
  9176 ;; Parameters:    Size  Location     Type
  9177 ;;  c               2    0[COMRAM] int 
  9178 ;; Auto vars:     Size  Location     Type
  9179 ;;		None
  9180 ;; Return value:  Size  Location     Type
  9181 ;;                  2    0[COMRAM] int 
  9182 ;; Registers used:
  9183 ;;		wreg, status,2, status,0
  9184 ;; Tracked objects:
  9185 ;;		On entry : 0/0
  9186 ;;		On exit  : 0/0
  9187 ;;		Unchanged: 0/0
  9188 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9189 ;;      Params:         2       0       0       0       0       0       0
  9190 ;;      Locals:         0       0       0       0       0       0       0
  9191 ;;      Temps:          4       0       0       0       0       0       0
  9192 ;;      Totals:         6       0       0       0       0       0       0
  9193 ;;Total ram usage:        6 bytes
  9194 ;; Hardware stack levels used:    1
  9195 ;; This function calls:
  9196 ;;		Nothing
  9197 ;; This function is called by:
  9198 ;;		i2_vfpfcnvrt
  9199 ;;		i2_atoi
  9200 ;; This function uses a non-reentrant model
  9201 ;;
  9202                           
  9203                           	psect	text56
  9204  002AAC                     __ptext56:
  9205                           	opt callstack 0
  9206  002AAC                     i2_isdigit:
  9207                           	opt callstack 0
  9208  002AAC  FFFF               	dw	65535	; assembler added errata NOP
  9209                           
  9210                           ;incstack = 0
  9211  002AAE  0ED0               	movlw	208
  9212  002AB0  6E03               	movwf	??i2_isdigit& (0+255),c
  9213  002AB2  0EFF               	movlw	255
  9214  002AB4  6E04               	movwf	(??i2_isdigit+1)& (0+255),c
  9215  002AB6  C001  F005         	movff	i2isdigit@c,??i2_isdigit+2
  9216  002ABA  C002  F006         	movff	i2isdigit@c+1,??i2_isdigit+3
  9217  002ABE  5003               	movf	??i2_isdigit,w,c
  9218  002AC0  2605               	addwf	??i2_isdigit+2,f,c
  9219  002AC2  5004               	movf	??i2_isdigit+1,w,c
  9220  002AC4  2206               	addwfc	??i2_isdigit+3,f,c
  9221  002AC6  5006               	movf	??i2_isdigit+3,w,c
  9222  002AC8  E106               	bnz	i2u274_40
  9223  002ACA  0E0A               	movlw	10
  9224  002ACC  5C05               	subwf	??i2_isdigit+2,w,c
  9225  002ACE  B0D8               	btfsc	status,0,c
  9226  002AD0  D002               	goto	i2u274_40
  9227  002AD2  0E01               	movlw	1
  9228  002AD4  D002               	goto	i2u275_40
  9229  002AD6                     i2u274_40:
  9230  002AD6  FFFF               	dw	65535	; assembler added errata NOP
  9231  002AD8  0E00               	movlw	0
  9232  002ADA                     i2u275_40:
  9233  002ADA  FFFF               	dw	65535	; assembler added errata NOP
  9234  002ADC  6E01               	movwf	?i2_isdigit,c
  9235  002ADE  6A02               	clrf	?i2_isdigit+1,c
  9236  002AE0  0012               	return		;funcret
  9237  002AE2  FFFF               	dw	65535	; errata NOP
  9238  002AE4                     __end_ofi2_isdigit:
  9239                           	opt callstack 0
  9240                           
  9241 ;; *************** function i2___wmul *****************
  9242 ;; Defined at:
  9243 ;;		line 15 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/Umul16.c"
  9244 ;; Parameters:    Size  Location     Type
  9245 ;;  multiplier      2    0[COMRAM] unsigned int 
  9246 ;;  multiplicand    2    2[COMRAM] unsigned int 
  9247 ;; Auto vars:     Size  Location     Type
  9248 ;;  __wmul          2    4[COMRAM] unsigned int 
  9249 ;; Return value:  Size  Location     Type
  9250 ;;                  2    0[COMRAM] unsigned int 
  9251 ;; Registers used:
  9252 ;;		wreg, status,2, status,0, prodl, prodh
  9253 ;; Tracked objects:
  9254 ;;		On entry : 0/0
  9255 ;;		On exit  : 0/0
  9256 ;;		Unchanged: 0/0
  9257 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9258 ;;      Params:         4       0       0       0       0       0       0
  9259 ;;      Locals:         2       0       0       0       0       0       0
  9260 ;;      Temps:          0       0       0       0       0       0       0
  9261 ;;      Totals:         6       0       0       0       0       0       0
  9262 ;;Total ram usage:        6 bytes
  9263 ;; Hardware stack levels used:    1
  9264 ;; This function calls:
  9265 ;;		Nothing
  9266 ;; This function is called by:
  9267 ;;		i2_atoi
  9268 ;; This function uses a non-reentrant model
  9269 ;;
  9270                           
  9271                           	psect	text57
  9272  002C0A                     __ptext57:
  9273                           	opt callstack 0
  9274  002C0A                     i2___wmul:
  9275                           	opt callstack 0
  9276  002C0A  FFFF               	dw	65535	; assembler added errata NOP
  9277                           
  9278                           ;incstack = 0
  9279  002C0C  5001               	movf	i2___wmul@multiplier,w,c
  9280  002C0E  0203               	mulwf	i2___wmul@multiplicand,c
  9281  002C10  CFF3 F005          	movff	prodl,i2___wmul@product
  9282  002C14  CFF4 F006          	movff	prodh,i2___wmul@product+1
  9283  002C18  5001               	movf	i2___wmul@multiplier,w,c
  9284  002C1A  0204               	mulwf	i2___wmul@multiplicand+1,c
  9285  002C1C  50F3               	movf	prodl,w,c
  9286  002C1E  2606               	addwf	i2___wmul@product+1,f,c
  9287  002C20  5002               	movf	i2___wmul@multiplier+1,w,c
  9288  002C22  0203               	mulwf	i2___wmul@multiplicand,c
  9289  002C24  50F3               	movf	prodl,w,c
  9290  002C26  2606               	addwf	i2___wmul@product+1,f,c
  9291  002C28  C005  F001         	movff	i2___wmul@product,?i2___wmul
  9292  002C2C  C006  F002         	movff	i2___wmul@product+1,?i2___wmul+1
  9293  002C30  0012               	return		;funcret
  9294  002C32  FFFF               	dw	65535	; errata NOP
  9295  002C34                     __end_ofi2___wmul:
  9296                           	opt callstack 0
  9297                           
  9298 ;; *************** function i2_putsXLCD *****************
  9299 ;; Defined at:
  9300 ;;		line 419 in file "lcd_pic16.c"
  9301 ;; Parameters:    Size  Location     Type
  9302 ;;  buffer          2    1[COMRAM] PTR unsigned char 
  9303 ;;		 -> lineTwo(17), lineOne(17), 
  9304 ;; Auto vars:     Size  Location     Type
  9305 ;;		None
  9306 ;; Return value:  Size  Location     Type
  9307 ;;                  1    wreg      void 
  9308 ;; Registers used:
  9309 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  9310 ;; Tracked objects:
  9311 ;;		On entry : 0/0
  9312 ;;		On exit  : 0/0
  9313 ;;		Unchanged: 0/0
  9314 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9315 ;;      Params:         2       0       0       0       0       0       0
  9316 ;;      Locals:         0       0       0       0       0       0       0
  9317 ;;      Temps:          0       0       0       0       0       0       0
  9318 ;;      Totals:         2       0       0       0       0       0       0
  9319 ;;Total ram usage:        2 bytes
  9320 ;; Hardware stack levels used:    1
  9321 ;; Hardware stack levels required when called:    2
  9322 ;; This function calls:
  9323 ;;		i2_BusyXLCD
  9324 ;;		i2_WriteDataXLCD
  9325 ;; This function is called by:
  9326 ;;		_updateLCD
  9327 ;; This function uses a non-reentrant model
  9328 ;;
  9329                           
  9330                           	psect	text58
  9331  002AE4                     __ptext58:
  9332                           	opt callstack 0
  9333  002AE4                     i2_putsXLCD:
  9334                           	opt callstack 0
  9335  002AE4  FFFF               	dw	65535	; assembler added errata NOP
  9336                           
  9337                           ;lcd_pic16.c: 419: void putsXLCD(char *buffer);lcd_pic16.c: 420: {;lcd_pic16.c: 421:    
      +                               while(*buffer)
  9338                           
  9339                           ;incstack = 0
  9340  002AE6  D00F               	goto	i2l4055
  9341  002AE8                     i2l4049:
  9342  002AE8  FFFF               	dw	65535	; assembler added errata NOP
  9343  002AEA  EC54  F016         	call	i2_BusyXLCD	;wreg free
  9344  002AEE  0900               	iorlw	0
  9345  002AF0  A4D8               	btfss	status,2,c
  9346  002AF2  D7FA               	goto	i2l4049
  9347                           
  9348                           ;lcd_pic16.c: 424:                 WriteDataXLCD(*buffer);
  9349  002AF4  C002  FFD9         	movff	i2putsXLCD@buffer,fsr2l
  9350  002AF8  C003  FFDA         	movff	i2putsXLCD@buffer+1,fsr2h
  9351  002AFC  50DF               	movf	indf2,w,c
  9352  002AFE  ECBE  F014         	call	i2_WriteDataXLCD
  9353                           
  9354                           ;lcd_pic16.c: 425:                 buffer++;
  9355  002B02  4A02               	infsnz	i2putsXLCD@buffer,f,c
  9356  002B04  2A03               	incf	i2putsXLCD@buffer+1,f,c
  9357  002B06                     i2l4055:
  9358  002B06  FFFF               	dw	65535	; assembler added errata NOP
  9359                           
  9360                           ;lcd_pic16.c: 421:         while(*buffer)
  9361  002B08  C002  FFD9         	movff	i2putsXLCD@buffer,fsr2l
  9362  002B0C  C003  FFDA         	movff	i2putsXLCD@buffer+1,fsr2h
  9363  002B10  50DF               	movf	indf2,w,c
  9364  002B12  B4D8               	btfsc	status,2,c
  9365  002B14  0012               	return		;funcret
  9366  002B16  FFFF               	dw	65535	; assembler added errata NOP
  9367  002B18  D7E7               	goto	i2l4049
  9368  002B1A  FFFF               	dw	65535	; errata NOP
  9369  002B1C                     __end_ofi2_putsXLCD:
  9370                           	opt callstack 0
  9371                           
  9372 ;; *************** function i2_WriteDataXLCD *****************
  9373 ;; Defined at:
  9374 ;;		line 110 in file "lcd_pic16.c"
  9375 ;; Parameters:    Size  Location     Type
  9376 ;;  data            1    wreg     unsigned char 
  9377 ;; Auto vars:     Size  Location     Type
  9378 ;;  data            1    0[COMRAM] unsigned char 
  9379 ;; Return value:  Size  Location     Type
  9380 ;;                  1    wreg      void 
  9381 ;; Registers used:
  9382 ;;		wreg, status,2, status,0, cstack
  9383 ;; Tracked objects:
  9384 ;;		On entry : 0/0
  9385 ;;		On exit  : 0/0
  9386 ;;		Unchanged: 0/0
  9387 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9388 ;;      Params:         0       0       0       0       0       0       0
  9389 ;;      Locals:         1       0       0       0       0       0       0
  9390 ;;      Temps:          0       0       0       0       0       0       0
  9391 ;;      Totals:         1       0       0       0       0       0       0
  9392 ;;Total ram usage:        1 bytes
  9393 ;; Hardware stack levels used:    1
  9394 ;; Hardware stack levels required when called:    1
  9395 ;; This function calls:
  9396 ;;		i2_DelayFor18TCY
  9397 ;; This function is called by:
  9398 ;;		i2_putsXLCD
  9399 ;; This function uses a non-reentrant model
  9400 ;;
  9401                           
  9402                           	psect	text59
  9403  00297C                     __ptext59:
  9404                           	opt callstack 0
  9405  00297C                     i2_WriteDataXLCD:
  9406                           	opt callstack 0
  9407  00297C  FFFF               	dw	65535	; assembler added errata NOP
  9408                           
  9409                           ;incstack = 0
  9410                           ;i2WriteDataXLCD@data stored from wreg
  9411  00297E  6E01               	movwf	i2WriteDataXLCD@data,c
  9412                           
  9413                           ;lcd_pic16.c: 110: void WriteDataXLCD(char data);lcd_pic16.c: 111: {;lcd_pic16.c: 125:  
      +                                 TRISD &= 0x0f;
  9414  002980  0E0F               	movlw	15
  9415  002982  1695               	andwf	3989,f,c	;volatile
  9416                           
  9417                           ;lcd_pic16.c: 126:         PORTD &= 0x0f;
  9418  002984  0E0F               	movlw	15
  9419  002986  1683               	andwf	3971,f,c	;volatile
  9420                           
  9421                           ;lcd_pic16.c: 127:         PORTD |= data&0xf0;
  9422  002988  5001               	movf	i2WriteDataXLCD@data,w,c
  9423  00298A  0BF0               	andlw	240
  9424  00298C  1283               	iorwf	3971,f,c	;volatile
  9425                           
  9426                           ;lcd_pic16.c: 133:         PORTDbits.RD3 = 1;
  9427  00298E  8683               	bsf	3971,3,c	;volatile
  9428                           
  9429                           ;lcd_pic16.c: 134:         PORTDbits.RD2 = 0;
  9430  002990  9483               	bcf	3971,2,c	;volatile
  9431                           
  9432                           ;lcd_pic16.c: 135:         DelayFor18TCY();
  9433  002992  EC73  F016         	call	i2_DelayFor18TCY	;wreg free
  9434                           
  9435                           ;lcd_pic16.c: 136:         PORTDbits.RD1 = 1;
  9436  002996  8283               	bsf	3971,1,c	;volatile
  9437                           
  9438                           ;lcd_pic16.c: 137:         DelayFor18TCY();
  9439  002998  EC73  F016         	call	i2_DelayFor18TCY	;wreg free
  9440                           
  9441                           ;lcd_pic16.c: 138:         PORTDbits.RD1 = 0;
  9442  00299C  9283               	bcf	3971,1,c	;volatile
  9443                           
  9444                           ;lcd_pic16.c: 140:         PORTD &= 0x0f;
  9445  00299E  0E0F               	movlw	15
  9446  0029A0  1683               	andwf	3971,f,c	;volatile
  9447                           
  9448                           ;lcd_pic16.c: 141:         PORTD |= ((data<<4)&0xf0);
  9449  0029A2  3801               	swapf	i2WriteDataXLCD@data,w,c
  9450  0029A4  0BF0               	andlw	240
  9451  0029A6  0BF0               	andlw	240
  9452  0029A8  1283               	iorwf	3971,f,c	;volatile
  9453                           
  9454                           ;lcd_pic16.c: 146:         DelayFor18TCY();
  9455  0029AA  EC73  F016         	call	i2_DelayFor18TCY	;wreg free
  9456                           
  9457                           ;lcd_pic16.c: 147:         PORTDbits.RD1 = 1;
  9458  0029AE  8283               	bsf	3971,1,c	;volatile
  9459                           
  9460                           ;lcd_pic16.c: 148:         DelayFor18TCY();
  9461  0029B0  EC73  F016         	call	i2_DelayFor18TCY	;wreg free
  9462                           
  9463                           ;lcd_pic16.c: 149:         PORTDbits.RD1 = 0;
  9464  0029B4  9283               	bcf	3971,1,c	;volatile
  9465                           
  9466                           ;lcd_pic16.c: 151:         TRISD |= 0xf0;
  9467  0029B6  0EF0               	movlw	240
  9468  0029B8  1295               	iorwf	3989,f,c	;volatile
  9469  0029BA  0012               	return		;funcret
  9470  0029BC  FFFF               	dw	65535	; errata NOP
  9471  0029BE                     __end_ofi2_WriteDataXLCD:
  9472                           	opt callstack 0
  9473                           
  9474 ;; *************** function i2_BusyXLCD *****************
  9475 ;; Defined at:
  9476 ;;		line 451 in file "lcd_pic16.c"
  9477 ;; Parameters:    Size  Location     Type
  9478 ;;		None
  9479 ;; Auto vars:     Size  Location     Type
  9480 ;;		None
  9481 ;; Return value:  Size  Location     Type
  9482 ;;                  1    wreg      unsigned char 
  9483 ;; Registers used:
  9484 ;;		wreg
  9485 ;; Tracked objects:
  9486 ;;		On entry : 0/0
  9487 ;;		On exit  : 0/0
  9488 ;;		Unchanged: 0/0
  9489 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9490 ;;      Params:         0       0       0       0       0       0       0
  9491 ;;      Locals:         0       0       0       0       0       0       0
  9492 ;;      Temps:          1       0       0       0       0       0       0
  9493 ;;      Totals:         1       0       0       0       0       0       0
  9494 ;;Total ram usage:        1 bytes
  9495 ;; Hardware stack levels used:    1
  9496 ;; This function calls:
  9497 ;;		Nothing
  9498 ;; This function is called by:
  9499 ;;		i2_putsXLCD
  9500 ;; This function uses a non-reentrant model
  9501 ;;
  9502                           
  9503                           	psect	text60
  9504  002CA8                     __ptext60:
  9505                           	opt callstack 0
  9506  002CA8                     i2_BusyXLCD:
  9507                           	opt callstack 0
  9508  002CA8  FFFF               	dw	65535	; assembler added errata NOP
  9509                           
  9510                           ;lcd_pic16.c: 504:         _delay((unsigned long)((5)*(12000000/4000.0)));
  9511                           
  9512                           ;incstack = 0
  9513  002CAA  0E0F               	movlw	15
  9514  002CAC  6E01               	movwf	??i2_BusyXLCD& (0+255),c
  9515  002CAE  0E9E               	movlw	158
  9516  002CB0                     i2u422_47:
  9517  002CB0  FFFF               	dw	65535	; errata NOP
  9518  002CB2  2EE8               	decfsz	wreg,f,c
  9519  002CB4  D7FD               	bra	i2u422_47
  9520  002CB6  2E01               	decfsz	??i2_BusyXLCD& (0+255),f,c
  9521  002CB8  D7FB               	bra	i2u422_47
  9522                           
  9523                           ;lcd_pic16.c: 505:         return 0;
  9524  002CBA  0E00               	movlw	0
  9525  002CBC  0012               	return		;funcret
  9526  002CBE  FFFF               	dw	65535	; errata NOP
  9527  002CC0                     __end_ofi2_BusyXLCD:
  9528                           	opt callstack 0
  9529                           
  9530 ;; *************** function i2___lwmod *****************
  9531 ;; Defined at:
  9532 ;;		line 7 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/lwmod.c"
  9533 ;; Parameters:    Size  Location     Type
  9534 ;;  dividend        2    0[COMRAM] unsigned int 
  9535 ;;  divisor         2    2[COMRAM] unsigned int 
  9536 ;; Auto vars:     Size  Location     Type
  9537 ;;  __lwmod         1    4[COMRAM] unsigned char 
  9538 ;; Return value:  Size  Location     Type
  9539 ;;                  2    0[COMRAM] unsigned int 
  9540 ;; Registers used:
  9541 ;;		wreg, status,2, status,0
  9542 ;; Tracked objects:
  9543 ;;		On entry : 0/0
  9544 ;;		On exit  : 0/0
  9545 ;;		Unchanged: 0/0
  9546 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9547 ;;      Params:         4       0       0       0       0       0       0
  9548 ;;      Locals:         1       0       0       0       0       0       0
  9549 ;;      Temps:          0       0       0       0       0       0       0
  9550 ;;      Totals:         5       0       0       0       0       0       0
  9551 ;;Total ram usage:        5 bytes
  9552 ;; Hardware stack levels used:    1
  9553 ;; This function calls:
  9554 ;;		Nothing
  9555 ;; This function is called by:
  9556 ;;		_updateLCD
  9557 ;; This function uses a non-reentrant model
  9558 ;;
  9559                           
  9560                           	psect	text61
  9561  0026B2                     __ptext61:
  9562                           	opt callstack 0
  9563  0026B2                     i2___lwmod:
  9564                           	opt callstack 0
  9565  0026B2  FFFF               	dw	65535	; assembler added errata NOP
  9566                           
  9567                           ;incstack = 0
  9568  0026B4  5003               	movf	i2___lwmod@divisor,w,c
  9569  0026B6  1004               	iorwf	i2___lwmod@divisor+1,w,c
  9570  0026B8  B4D8               	btfsc	status,2,c
  9571  0026BA  D01C               	goto	i2l1159
  9572  0026BC  0E01               	movlw	1
  9573  0026BE  6E05               	movwf	i2___lwmod@counter,c
  9574  0026C0  D005               	goto	i2l4085
  9575  0026C2                     i2l4083:
  9576  0026C2  FFFF               	dw	65535	; assembler added errata NOP
  9577  0026C4  90D8               	bcf	status,0,c
  9578  0026C6  3603               	rlcf	i2___lwmod@divisor,f,c
  9579  0026C8  3604               	rlcf	i2___lwmod@divisor+1,f,c
  9580  0026CA  2A05               	incf	i2___lwmod@counter,f,c
  9581  0026CC                     i2l4085:
  9582  0026CC  FFFF               	dw	65535	; assembler added errata NOP
  9583  0026CE  AE04               	btfss	i2___lwmod@divisor+1,7,c
  9584  0026D0  D7F8               	goto	i2l4083
  9585  0026D2                     i2u357_40:
  9586  0026D2  FFFF               	dw	65535	; assembler added errata NOP
  9587  0026D4  5003               	movf	i2___lwmod@divisor,w,c
  9588  0026D6  5C01               	subwf	i2___lwmod@dividend,w,c
  9589  0026D8  5004               	movf	i2___lwmod@divisor+1,w,c
  9590  0026DA  5802               	subwfb	i2___lwmod@dividend+1,w,c
  9591  0026DC  A0D8               	btfss	status,0,c
  9592  0026DE  D004               	goto	i2l4091
  9593  0026E0  5003               	movf	i2___lwmod@divisor,w,c
  9594  0026E2  5E01               	subwf	i2___lwmod@dividend,f,c
  9595  0026E4  5004               	movf	i2___lwmod@divisor+1,w,c
  9596  0026E6  5A02               	subwfb	i2___lwmod@dividend+1,f,c
  9597  0026E8                     i2l4091:
  9598  0026E8  FFFF               	dw	65535	; assembler added errata NOP
  9599  0026EA  90D8               	bcf	status,0,c
  9600  0026EC  3204               	rrcf	i2___lwmod@divisor+1,f,c
  9601  0026EE  3203               	rrcf	i2___lwmod@divisor,f,c
  9602  0026F0  2E05               	decfsz	i2___lwmod@counter,f,c
  9603  0026F2  D7EF               	goto	i2u357_40
  9604  0026F4                     i2l1159:
  9605  0026F4  FFFF               	dw	65535	; assembler added errata NOP
  9606  0026F6  C001  F001         	movff	i2___lwmod@dividend,?i2___lwmod
  9607  0026FA  C002  F002         	movff	i2___lwmod@dividend+1,?i2___lwmod+1
  9608  0026FE  0012               	return		;funcret
  9609  002700  FFFF               	dw	65535	; errata NOP
  9610  002702                     __end_ofi2___lwmod:
  9611                           	opt callstack 0
  9612                           
  9613 ;; *************** function i2___lwdiv *****************
  9614 ;; Defined at:
  9615 ;;		line 7 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/lwdiv.c"
  9616 ;; Parameters:    Size  Location     Type
  9617 ;;  dividend        2    0[COMRAM] unsigned int 
  9618 ;;  divisor         2    2[COMRAM] unsigned int 
  9619 ;; Auto vars:     Size  Location     Type
  9620 ;;  __lwdiv         2    4[COMRAM] unsigned int 
  9621 ;;  __lwdiv         1    6[COMRAM] unsigned char 
  9622 ;; Return value:  Size  Location     Type
  9623 ;;                  2    0[COMRAM] unsigned int 
  9624 ;; Registers used:
  9625 ;;		wreg, status,2, status,0
  9626 ;; Tracked objects:
  9627 ;;		On entry : 0/0
  9628 ;;		On exit  : 0/0
  9629 ;;		Unchanged: 0/0
  9630 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9631 ;;      Params:         4       0       0       0       0       0       0
  9632 ;;      Locals:         3       0       0       0       0       0       0
  9633 ;;      Temps:          0       0       0       0       0       0       0
  9634 ;;      Totals:         7       0       0       0       0       0       0
  9635 ;;Total ram usage:        7 bytes
  9636 ;; Hardware stack levels used:    1
  9637 ;; This function calls:
  9638 ;;		Nothing
  9639 ;; This function is called by:
  9640 ;;		_updateLCD
  9641 ;; This function uses a non-reentrant model
  9642 ;;
  9643                           
  9644                           	psect	text62
  9645  0024AE                     __ptext62:
  9646                           	opt callstack 0
  9647  0024AE                     i2___lwdiv:
  9648                           	opt callstack 0
  9649  0024AE  FFFF               	dw	65535	; assembler added errata NOP
  9650                           
  9651                           ;incstack = 0
  9652  0024B0  0E00               	movlw	0
  9653  0024B2  6E06               	movwf	i2___lwdiv@quotient+1,c
  9654  0024B4  0E00               	movlw	0
  9655  0024B6  6E05               	movwf	i2___lwdiv@quotient,c
  9656  0024B8  5003               	movf	i2___lwdiv@divisor,w,c
  9657  0024BA  1004               	iorwf	i2___lwdiv@divisor+1,w,c
  9658  0024BC  B4D8               	btfsc	status,2,c
  9659  0024BE  D020               	goto	i2l1149
  9660  0024C0  0E01               	movlw	1
  9661  0024C2  6E07               	movwf	i2___lwdiv@counter,c
  9662  0024C4  D005               	goto	i2l4065
  9663  0024C6                     i2l4063:
  9664  0024C6  FFFF               	dw	65535	; assembler added errata NOP
  9665  0024C8  90D8               	bcf	status,0,c
  9666  0024CA  3603               	rlcf	i2___lwdiv@divisor,f,c
  9667  0024CC  3604               	rlcf	i2___lwdiv@divisor+1,f,c
  9668  0024CE  2A07               	incf	i2___lwdiv@counter,f,c
  9669  0024D0                     i2l4065:
  9670  0024D0  FFFF               	dw	65535	; assembler added errata NOP
  9671  0024D2  AE04               	btfss	i2___lwdiv@divisor+1,7,c
  9672  0024D4  D7F8               	goto	i2l4063
  9673  0024D6                     i2u354_40:
  9674  0024D6  FFFF               	dw	65535	; assembler added errata NOP
  9675  0024D8  90D8               	bcf	status,0,c
  9676  0024DA  3605               	rlcf	i2___lwdiv@quotient,f,c
  9677  0024DC  3606               	rlcf	i2___lwdiv@quotient+1,f,c
  9678  0024DE  5003               	movf	i2___lwdiv@divisor,w,c
  9679  0024E0  5C01               	subwf	i2___lwdiv@dividend,w,c
  9680  0024E2  5004               	movf	i2___lwdiv@divisor+1,w,c
  9681  0024E4  5802               	subwfb	i2___lwdiv@dividend+1,w,c
  9682  0024E6  A0D8               	btfss	status,0,c
  9683  0024E8  D005               	goto	i2l4075
  9684  0024EA  5003               	movf	i2___lwdiv@divisor,w,c
  9685  0024EC  5E01               	subwf	i2___lwdiv@dividend,f,c
  9686  0024EE  5004               	movf	i2___lwdiv@divisor+1,w,c
  9687  0024F0  5A02               	subwfb	i2___lwdiv@dividend+1,f,c
  9688  0024F2  8005               	bsf	i2___lwdiv@quotient,0,c
  9689  0024F4                     i2l4075:
  9690  0024F4  FFFF               	dw	65535	; assembler added errata NOP
  9691  0024F6  90D8               	bcf	status,0,c
  9692  0024F8  3204               	rrcf	i2___lwdiv@divisor+1,f,c
  9693  0024FA  3203               	rrcf	i2___lwdiv@divisor,f,c
  9694  0024FC  2E07               	decfsz	i2___lwdiv@counter,f,c
  9695  0024FE  D7EB               	goto	i2u354_40
  9696  002500                     i2l1149:
  9697  002500  FFFF               	dw	65535	; assembler added errata NOP
  9698  002502  C005  F001         	movff	i2___lwdiv@quotient,?i2___lwdiv
  9699  002506  C006  F002         	movff	i2___lwdiv@quotient+1,?i2___lwdiv+1
  9700  00250A  0012               	return		;funcret
  9701  00250C  FFFF               	dw	65535	; errata NOP
  9702  00250E                     __end_ofi2___lwdiv:
  9703                           	opt callstack 0
  9704                           
  9705 ;; *************** function i2_SetDDRamAddr *****************
  9706 ;; Defined at:
  9707 ;;		line 217 in file "lcd_pic16.c"
  9708 ;; Parameters:    Size  Location     Type
  9709 ;;  DDaddr          1    wreg     unsigned char 
  9710 ;; Auto vars:     Size  Location     Type
  9711 ;;  DDaddr          1    0[COMRAM] unsigned char 
  9712 ;; Return value:  Size  Location     Type
  9713 ;;                  1    wreg      void 
  9714 ;; Registers used:
  9715 ;;		wreg, status,2, status,0, cstack
  9716 ;; Tracked objects:
  9717 ;;		On entry : 0/0
  9718 ;;		On exit  : 0/0
  9719 ;;		Unchanged: 0/0
  9720 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9721 ;;      Params:         0       0       0       0       0       0       0
  9722 ;;      Locals:         1       0       0       0       0       0       0
  9723 ;;      Temps:          0       0       0       0       0       0       0
  9724 ;;      Totals:         1       0       0       0       0       0       0
  9725 ;;Total ram usage:        1 bytes
  9726 ;; Hardware stack levels used:    1
  9727 ;; Hardware stack levels required when called:    1
  9728 ;; This function calls:
  9729 ;;		i2_DelayFor18TCY
  9730 ;; This function is called by:
  9731 ;;		_updateLCD
  9732 ;; This function uses a non-reentrant model
  9733 ;;
  9734                           
  9735                           	psect	text63
  9736  0028F6                     __ptext63:
  9737                           	opt callstack 0
  9738  0028F6                     i2_SetDDRamAddr:
  9739                           	opt callstack 0
  9740  0028F6  FFFF               	dw	65535	; assembler added errata NOP
  9741                           
  9742                           ;incstack = 0
  9743                           ;i2SetDDRamAddr@DDaddr stored from wreg
  9744  0028F8  6E01               	movwf	i2SetDDRamAddr@DDaddr,c
  9745                           
  9746                           ;lcd_pic16.c: 217: void SetDDRamAddr(unsigned char DDaddr);lcd_pic16.c: 218: {;lcd_pic16
      +                          .c: 232:         TRISD &= 0x0f;
  9747  0028FA  0E0F               	movlw	15
  9748  0028FC  1695               	andwf	3989,f,c	;volatile
  9749                           
  9750                           ;lcd_pic16.c: 233:         PORTD &= 0x0f;
  9751  0028FE  0E0F               	movlw	15
  9752  002900  1683               	andwf	3971,f,c	;volatile
  9753                           
  9754                           ;lcd_pic16.c: 234:         PORTD |= ((DDaddr | 0b10000000) & 0xf0);
  9755  002902  5001               	movf	i2SetDDRamAddr@DDaddr,w,c
  9756  002904  0980               	iorlw	128
  9757  002906  0BF0               	andlw	240
  9758  002908  1283               	iorwf	3971,f,c	;volatile
  9759                           
  9760                           ;lcd_pic16.c: 240:         PORTDbits.RD2 = 0;
  9761  00290A  9483               	bcf	3971,2,c	;volatile
  9762                           
  9763                           ;lcd_pic16.c: 241:         PORTDbits.RD3 = 0;
  9764  00290C  9683               	bcf	3971,3,c	;volatile
  9765                           
  9766                           ;lcd_pic16.c: 242:         DelayFor18TCY();
  9767  00290E  EC73  F016         	call	i2_DelayFor18TCY	;wreg free
  9768                           
  9769                           ;lcd_pic16.c: 243:         PORTDbits.RD1 = 1;
  9770  002912  8283               	bsf	3971,1,c	;volatile
  9771                           
  9772                           ;lcd_pic16.c: 244:         DelayFor18TCY();
  9773  002914  EC73  F016         	call	i2_DelayFor18TCY	;wreg free
  9774                           
  9775                           ;lcd_pic16.c: 245:         PORTDbits.RD1 = 0;
  9776  002918  9283               	bcf	3971,1,c	;volatile
  9777                           
  9778                           ;lcd_pic16.c: 247:         PORTD &= 0x0f;
  9779  00291A  0E0F               	movlw	15
  9780  00291C  1683               	andwf	3971,f,c	;volatile
  9781                           
  9782                           ;lcd_pic16.c: 248:         PORTD |= ((DDaddr<<4)&0xf0);
  9783  00291E  3801               	swapf	i2SetDDRamAddr@DDaddr,w,c
  9784  002920  0BF0               	andlw	240
  9785  002922  0BF0               	andlw	240
  9786  002924  1283               	iorwf	3971,f,c	;volatile
  9787                           
  9788                           ;lcd_pic16.c: 253:         DelayFor18TCY();
  9789  002926  EC73  F016         	call	i2_DelayFor18TCY	;wreg free
  9790                           
  9791                           ;lcd_pic16.c: 254:         PORTDbits.RD1 = 1;
  9792  00292A  8283               	bsf	3971,1,c	;volatile
  9793                           
  9794                           ;lcd_pic16.c: 255:         DelayFor18TCY();
  9795  00292C  EC73  F016         	call	i2_DelayFor18TCY	;wreg free
  9796                           
  9797                           ;lcd_pic16.c: 256:         PORTDbits.RD1 = 0;
  9798  002930  9283               	bcf	3971,1,c	;volatile
  9799                           
  9800                           ;lcd_pic16.c: 258:         TRISD |= 0xf0;
  9801  002932  0EF0               	movlw	240
  9802  002934  1295               	iorwf	3989,f,c	;volatile
  9803  002936  0012               	return		;funcret
  9804  002938  FFFF               	dw	65535	; errata NOP
  9805  00293A                     __end_ofi2_SetDDRamAddr:
  9806                           	opt callstack 0
  9807                           
  9808 ;; *************** function i2_DelayFor18TCY *****************
  9809 ;; Defined at:
  9810 ;;		line 22 in file "lcd_pic16.c"
  9811 ;; Parameters:    Size  Location     Type
  9812 ;;		None
  9813 ;; Auto vars:     Size  Location     Type
  9814 ;;		None
  9815 ;; Return value:  Size  Location     Type
  9816 ;;                  1    wreg      void 
  9817 ;; Registers used:
  9818 ;;		wreg
  9819 ;; Tracked objects:
  9820 ;;		On entry : 0/0
  9821 ;;		On exit  : 0/0
  9822 ;;		Unchanged: 0/0
  9823 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9824 ;;      Params:         0       0       0       0       0       0       0
  9825 ;;      Locals:         0       0       0       0       0       0       0
  9826 ;;      Temps:          0       0       0       0       0       0       0
  9827 ;;      Totals:         0       0       0       0       0       0       0
  9828 ;;Total ram usage:        0 bytes
  9829 ;; Hardware stack levels used:    1
  9830 ;; This function calls:
  9831 ;;		Nothing
  9832 ;; This function is called by:
  9833 ;;		i2_WriteDataXLCD
  9834 ;;		i2_SetDDRamAddr
  9835 ;; This function uses a non-reentrant model
  9836 ;;
  9837                           
  9838                           	psect	text64
  9839  002CE6                     __ptext64:
  9840                           	opt callstack 0
  9841  002CE6                     i2_DelayFor18TCY:
  9842                           	opt callstack 0
  9843  002CE6  FFFF               	dw	65535	; assembler added errata NOP
  9844                           
  9845                           ;lcd_pic16.c: 24:    _delay((unsigned long)((18)*(12000000/4000000.0)));
  9846                           
  9847                           ;incstack = 0
  9848  002CE8  0E0D               	movlw	13
  9849  002CEA                     i2u423_47:
  9850  002CEA  FFFF               	dw	65535	; errata NOP
  9851  002CEC  2EE8               	decfsz	wreg,f,c
  9852  002CEE  D7FD               	bra	i2u423_47
  9853  002CF0  D000               	nop2	
  9854  002CF2  0012               	return		;funcret
  9855  002CF4  FFFF               	dw	65535	; errata NOP
  9856  002CF6                     __end_ofi2_DelayFor18TCY:
  9857                           	opt callstack 0
  9858                           
  9859 ;; *************** function _time *****************
  9860 ;; Defined at:
  9861 ;;		line 117 in file "main.c"
  9862 ;; Parameters:    Size  Location     Type
  9863 ;;		None
  9864 ;; Auto vars:     Size  Location     Type
  9865 ;;		None
  9866 ;; Return value:  Size  Location     Type
  9867 ;;                  1    wreg      void 
  9868 ;; Registers used:
  9869 ;;		wreg, status,2, status,0, cstack
  9870 ;; Tracked objects:
  9871 ;;		On entry : 0/0
  9872 ;;		On exit  : 0/0
  9873 ;;		Unchanged: 0/0
  9874 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9875 ;;      Params:         0       0       0       0       0       0       0
  9876 ;;      Locals:         0       0       0       0       0       0       0
  9877 ;;      Temps:          0       0       0       0       0       0       0
  9878 ;;      Totals:         0       0       0       0       0       0       0
  9879 ;;Total ram usage:        0 bytes
  9880 ;; Hardware stack levels used:    1
  9881 ;; Hardware stack levels required when called:    2
  9882 ;; This function calls:
  9883 ;;		i2_setData
  9884 ;; This function is called by:
  9885 ;;		_inter
  9886 ;; This function uses a non-reentrant model
  9887 ;;
  9888                           
  9889                           	psect	text65
  9890  00223C                     __ptext65:
  9891                           	opt callstack 0
  9892  00223C                     _time:
  9893                           	opt callstack 0
  9894  00223C  FFFF               	dw	65535	; assembler added errata NOP
  9895                           
  9896                           ;main.c: 118:     hundredMiliSeconds++;
  9897                           
  9898                           ;incstack = 0
  9899  00223E  0101               	movlb	1	; () banked
  9900  002240  2B04               	incf	_hundredMiliSeconds& (0+255),f,b
  9901                           
  9902                           ; BSR set to: 1
  9903                           ;main.c: 119:     if(hundredMiliSeconds >= 10){
  9904  002242  0E09               	movlw	9
  9905  002244  6504               	cpfsgt	_hundredMiliSeconds& (0+255),b
  9906  002246  D02F               	goto	i2l256
  9907                           
  9908                           ; BSR set to: 1
  9909                           ;main.c: 120:         hundredMiliSeconds = 0;
  9910  002248  0E00               	movlw	0
  9911  00224A  6F04               	movwf	_hundredMiliSeconds& (0+255),b
  9912                           
  9913                           ; BSR set to: 1
  9914                           ;main.c: 121:         seconds++;
  9915  00224C  2B05               	incf	_seconds& (0+255),f,b
  9916                           
  9917                           ; BSR set to: 1
  9918                           ;main.c: 122:         if(seconds >= 60){
  9919  00224E  0E3B               	movlw	59
  9920  002250  6505               	cpfsgt	_seconds& (0+255),b
  9921  002252  D029               	goto	i2l256
  9922                           
  9923                           ; BSR set to: 1
  9924                           ;main.c: 123:             seconds = 0;
  9925  002254  0E00               	movlw	0
  9926  002256  6F05               	movwf	_seconds& (0+255),b
  9927                           
  9928                           ; BSR set to: 1
  9929                           ;main.c: 124:             minutes++;
  9930  002258  0100               	movlb	0	; () banked
  9931  00225A  2BFC               	incf	_minutes& (0+255),f,b
  9932                           
  9933                           ; BSR set to: 0
  9934                           ;main.c: 125:             setData(0);
  9935  00225C  0E00               	movlw	0
  9936  00225E  EC56  F011         	call	i2_setData
  9937                           
  9938                           ;main.c: 126:             if(minutes >= 60){
  9939  002262  0E3B               	movlw	59
  9940  002264  0100               	movlb	0	; () banked
  9941  002266  65FC               	cpfsgt	_minutes& (0+255),b
  9942  002268  D01E               	goto	i2l256
  9943                           
  9944                           ; BSR set to: 0
  9945                           ;main.c: 127:                 minutes = 0;
  9946  00226A  0E00               	movlw	0
  9947  00226C  6FFC               	movwf	_minutes& (0+255),b
  9948                           
  9949                           ; BSR set to: 0
  9950                           ;main.c: 128:                 hours++;
  9951  00226E  2BFD               	incf	_hours& (0+255),f,b
  9952                           
  9953                           ; BSR set to: 0
  9954                           ;main.c: 129:                 if(hours >= 24){
  9955  002270  0E17               	movlw	23
  9956  002272  65FD               	cpfsgt	_hours& (0+255),b
  9957  002274  D018               	goto	i2l256
  9958                           
  9959                           ; BSR set to: 0
  9960                           ;main.c: 130:                     hours = 0;
  9961  002276  0E00               	movlw	0
  9962  002278  6FFD               	movwf	_hours& (0+255),b
  9963                           
  9964                           ; BSR set to: 0
  9965                           ;main.c: 131:                     days++;
  9966  00227A  2BFE               	incf	_days& (0+255),f,b
  9967                           
  9968                           ; BSR set to: 0
  9969                           ;main.c: 132:                     if(days >= 30){
  9970  00227C  0E1D               	movlw	29
  9971  00227E  65FE               	cpfsgt	_days& (0+255),b
  9972  002280  D003               	goto	i2l4277
  9973                           
  9974                           ; BSR set to: 0
  9975                           ;main.c: 133:                         days = 0;
  9976  002282  0E00               	movlw	0
  9977  002284  6FFE               	movwf	_days& (0+255),b
  9978                           
  9979                           ; BSR set to: 0
  9980                           ;main.c: 134:                         months++;
  9981  002286  2BFF               	incf	_months& (0+255),f,b
  9982  002288                     i2l4277:
  9983  002288  FFFF               	dw	65535	; assembler added errata NOP
  9984                           
  9985                           ; BSR set to: 0
  9986  00228A  0E0D               	movlw	13
  9987  00228C  19FE               	xorwf	_days& (0+255),w,b
  9988  00228E  A4D8               	btfss	status,2,c
  9989  002290  D006               	goto	i2l4283
  9990                           
  9991                           ; BSR set to: 0
  9992  002292  0E06               	movlw	6
  9993  002294  19FF               	xorwf	_months& (0+255),w,b
  9994  002296  A4D8               	btfss	status,2,c
  9995  002298  D002               	goto	i2l4283
  9996                           
  9997                           ; BSR set to: 0
  9998  00229A  0E00               	movlw	0
  9999  00229C  D002               	goto	L15
 10000  00229E                     i2l4283:
 10001  00229E  FFFF               	dw	65535	; assembler added errata NOP
 10002                           
 10003                           ; BSR set to: 0
 10004  0022A0  0E01               	movlw	1
 10005  0022A2                     L15:
 10006  0022A2  FFFF               	dw	65535	; assembler added errata NOP
 10007  0022A4  6E7E               	movwf	_functionalStat,c
 10008  0022A6                     i2l256:
 10009  0022A6  FFFF               	dw	65535	; assembler added errata NOP
 10010  0022A8  0012               	return		;funcret
 10011  0022AA  FFFF               	dw	65535	; errata NOP
 10012  0022AC                     __end_of_time:
 10013                           	opt callstack 0
 10014                           
 10015 ;; *************** function i2_setData *****************
 10016 ;; Defined at:
 10017 ;;		line 46 in file "eeprom.c"
 10018 ;; Parameters:    Size  Location     Type
 10019 ;;  full            1    wreg     unsigned char 
 10020 ;; Auto vars:     Size  Location     Type
 10021 ;;  full            1    4[COMRAM] unsigned char 
 10022 ;;  setData         1    3[COMRAM] unsigned char 
 10023 ;;  setData         1    2[COMRAM] unsigned char 
 10024 ;; Return value:  Size  Location     Type
 10025 ;;                  1    wreg      void 
 10026 ;; Registers used:
 10027 ;;		wreg, status,2, cstack
 10028 ;; Tracked objects:
 10029 ;;		On entry : 0/0
 10030 ;;		On exit  : 0/0
 10031 ;;		Unchanged: 0/0
 10032 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10033 ;;      Params:         0       0       0       0       0       0       0
 10034 ;;      Locals:         3       0       0       0       0       0       0
 10035 ;;      Temps:          0       0       0       0       0       0       0
 10036 ;;      Totals:         3       0       0       0       0       0       0
 10037 ;;Total ram usage:        3 bytes
 10038 ;; Hardware stack levels used:    1
 10039 ;; Hardware stack levels required when called:    1
 10040 ;; This function calls:
 10041 ;;		i2_writeEEPROM
 10042 ;; This function is called by:
 10043 ;;		_time
 10044 ;; This function uses a non-reentrant model
 10045 ;;
 10046                           
 10047                           	psect	text66
 10048  0022AC                     __ptext66:
 10049                           	opt callstack 0
 10050  0022AC                     i2_setData:
 10051                           	opt callstack 0
 10052  0022AC  FFFF               	dw	65535	; assembler added errata NOP
 10053                           
 10054                           ;incstack = 0
 10055                           ;i2setData@full stored from wreg
 10056  0022AE  6E05               	movwf	i2setData@full,c
 10057                           
 10058                           ;eeprom.c: 47:     unsigned char data0 = frequency & 0x00FF;
 10059  0022B0  C0FA  F003         	movff	_frequency,i2setData@data0
 10060                           
 10061                           ;eeprom.c: 48:     unsigned char data1 = frequency >> 8;
 10062  0022B4  0100               	movlb	0	; () banked
 10063  0022B6  51FB               	movf	(_frequency+1)& (0+255),w,b
 10064  0022B8  6E04               	movwf	i2setData@data1,c
 10065                           
 10066                           ; BSR set to: 0
 10067                           ;eeprom.c: 49:     if(full)writeEEPROM(data0 ,0);
 10068  0022BA  5005               	movf	i2setData@full,w,c
 10069  0022BC  B4D8               	btfsc	status,2,c
 10070  0022BE  D005               	goto	i2l4017
 10071                           
 10072                           ; BSR set to: 0
 10073  0022C0  0E00               	movlw	0
 10074  0022C2  6E01               	movwf	i2writeEEPROM@address,c
 10075  0022C4  5003               	movf	i2setData@data0,w,c
 10076  0022C6  ECEF  F015         	call	i2_writeEEPROM
 10077  0022CA                     i2l4017:
 10078  0022CA  FFFF               	dw	65535	; assembler added errata NOP
 10079                           
 10080                           ;eeprom.c: 50:     if(full)writeEEPROM(data1 ,1);
 10081  0022CC  5005               	movf	i2setData@full,w,c
 10082  0022CE  B4D8               	btfsc	status,2,c
 10083  0022D0  D005               	goto	i2l72
 10084  0022D2  0E01               	movlw	1
 10085  0022D4  6E01               	movwf	i2writeEEPROM@address,c
 10086  0022D6  5004               	movf	i2setData@data1,w,c
 10087  0022D8  ECEF  F015         	call	i2_writeEEPROM
 10088  0022DC                     i2l72:
 10089  0022DC  FFFF               	dw	65535	; assembler added errata NOP
 10090                           
 10091                           ;eeprom.c: 51:     writeEEPROM(months ,2);
 10092  0022DE  0E02               	movlw	2
 10093  0022E0  6E01               	movwf	i2writeEEPROM@address,c
 10094  0022E2  0100               	movlb	0	; () banked
 10095  0022E4  51FF               	movf	_months& (0+255),w,b
 10096  0022E6  ECEF  F015         	call	i2_writeEEPROM
 10097                           
 10098                           ;eeprom.c: 52:     writeEEPROM(days ,3);
 10099  0022EA  0E03               	movlw	3
 10100  0022EC  6E01               	movwf	i2writeEEPROM@address,c
 10101  0022EE  0100               	movlb	0	; () banked
 10102  0022F0  51FE               	movf	_days& (0+255),w,b
 10103  0022F2  ECEF  F015         	call	i2_writeEEPROM
 10104                           
 10105                           ;eeprom.c: 53:     writeEEPROM(hours ,4);
 10106  0022F6  0E04               	movlw	4
 10107  0022F8  6E01               	movwf	i2writeEEPROM@address,c
 10108  0022FA  0100               	movlb	0	; () banked
 10109  0022FC  51FD               	movf	_hours& (0+255),w,b
 10110  0022FE  ECEF  F015         	call	i2_writeEEPROM
 10111                           
 10112                           ;eeprom.c: 54:     writeEEPROM(minutes ,5);
 10113  002302  0E05               	movlw	5
 10114  002304  6E01               	movwf	i2writeEEPROM@address,c
 10115  002306  0100               	movlb	0	; () banked
 10116  002308  51FC               	movf	_minutes& (0+255),w,b
 10117  00230A  ECEF  F015         	call	i2_writeEEPROM
 10118                           
 10119                           ;eeprom.c: 55:     writeEEPROM(functionalStat ,6);
 10120  00230E  0E06               	movlw	6
 10121  002310  6E01               	movwf	i2writeEEPROM@address,c
 10122  002312  507E               	movf	_functionalStat,w,c
 10123  002314  ECEF  F015         	call	i2_writeEEPROM
 10124  002318  0012               	return		;funcret
 10125  00231A  FFFF               	dw	65535	; errata NOP
 10126  00231C                     __end_ofi2_setData:
 10127                           	opt callstack 0
 10128                           
 10129 ;; *************** function i2_writeEEPROM *****************
 10130 ;; Defined at:
 10131 ;;		line 15 in file "eeprom.c"
 10132 ;; Parameters:    Size  Location     Type
 10133 ;;  data            1    wreg     unsigned char 
 10134 ;;  address         1    0[COMRAM] unsigned char 
 10135 ;; Auto vars:     Size  Location     Type
 10136 ;;  data            1    1[COMRAM] unsigned char 
 10137 ;; Return value:  Size  Location     Type
 10138 ;;                  1    wreg      void 
 10139 ;; Registers used:
 10140 ;;		wreg, status,2
 10141 ;; Tracked objects:
 10142 ;;		On entry : 0/0
 10143 ;;		On exit  : 0/0
 10144 ;;		Unchanged: 0/0
 10145 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10146 ;;      Params:         1       0       0       0       0       0       0
 10147 ;;      Locals:         1       0       0       0       0       0       0
 10148 ;;      Temps:          0       0       0       0       0       0       0
 10149 ;;      Totals:         2       0       0       0       0       0       0
 10150 ;;Total ram usage:        2 bytes
 10151 ;; Hardware stack levels used:    1
 10152 ;; This function calls:
 10153 ;;		Nothing
 10154 ;; This function is called by:
 10155 ;;		i2_setData
 10156 ;; This function uses a non-reentrant model
 10157 ;;
 10158                           
 10159                           	psect	text67
 10160  002BDE                     __ptext67:
 10161                           	opt callstack 0
 10162  002BDE                     i2_writeEEPROM:
 10163                           	opt callstack 0
 10164  002BDE  FFFF               	dw	65535	; assembler added errata NOP
 10165                           
 10166                           ;incstack = 0
 10167                           ;i2writeEEPROM@data stored from wreg
 10168  002BE0  6E02               	movwf	i2writeEEPROM@data,c
 10169                           
 10170                           ;eeprom.c: 16:     EEADR = address;
 10171  002BE2  C001  FFA9         	movff	i2writeEEPROM@address,4009	;volatile
 10172                           
 10173                           ;eeprom.c: 17:     EEDATA = data;
 10174  002BE6  C002  FFA8         	movff	i2writeEEPROM@data,4008	;volatile
 10175                           
 10176                           ;eeprom.c: 19:     EECON1bits.EEPGD = 0;
 10177  002BEA  9EA6               	bcf	4006,7,c	;volsfr
 10178                           
 10179                           ;eeprom.c: 20:     EECON1bits.CFGS = 0;
 10180  002BEC  9CA6               	bcf	4006,6,c	;volsfr
 10181                           
 10182                           ;eeprom.c: 21:     EECON1bits.WREN = 1;
 10183  002BEE  84A6               	bsf	4006,2,c	;volsfr
 10184                           
 10185                           ;eeprom.c: 23:     INTCONbits.GIE = 0;
 10186  002BF0  9EF2               	bcf	4082,7,c	;volatile
 10187                           
 10188                           ;eeprom.c: 24:     EECON2 = 0x55;
 10189  002BF2  0E55               	movlw	85
 10190  002BF4  6EA7               	movwf	4007,c	;volsfr
 10191                           
 10192                           ;eeprom.c: 25:     EECON2 = 0xAA;
 10193  002BF6  0EAA               	movlw	170
 10194  002BF8  6EA7               	movwf	4007,c	;volsfr
 10195                           
 10196                           ;eeprom.c: 26:     EECON1bits.WR = 1;
 10197  002BFA  82A6               	bsf	4006,1,c	;volsfr
 10198                           
 10199                           ;eeprom.c: 27:     INTCONbits.GIE = 1;
 10200  002BFC  8EF2               	bsf	4082,7,c	;volatile
 10201  002BFE                     i2l62:
 10202  002BFE  FFFF               	dw	65535	; assembler added errata NOP
 10203  002C00  B8A1               	btfsc	4001,4,c	;volatile
 10204  002C02  0012               	return		;funcret
 10205  002C04  FFFF               	dw	65535	; assembler added errata NOP
 10206  002C06  D7FB               	goto	i2l62
 10207  002C08  FFFF               	dw	65535	; errata NOP
 10208  002C0A                     __end_ofi2_writeEEPROM:
 10209                           	opt callstack 0
 10210                           
 10211                           	psect	rparam
 10212  0000                     
 10213                           	psect	temp
 10214  00007F                     btemp:
 10215                           	opt callstack 0
 10216  00007F                     	ds	1
 10217  0000                     int$flags	set	btemp
 10218  0000                     wtemp8	set	btemp+1
 10219  0000                     ttemp5	set	btemp+1
 10220  0000                     ttemp6	set	btemp+4
 10221  0000                     ttemp7	set	btemp+8
 10222                           tosu	equ	0xFFF
 10223                           tosh	equ	0xFFE
 10224                           tosl	equ	0xFFD
 10225                           stkptr	equ	0xFFC
 10226                           pclatu	equ	0xFFB
 10227                           pclath	equ	0xFFA
 10228                           pcl	equ	0xFF9
 10229                           tblptru	equ	0xFF8
 10230                           tblptrh	equ	0xFF7
 10231                           tblptrl	equ	0xFF6
 10232                           tablat	equ	0xFF5
 10233                           prodh	equ	0xFF4
 10234                           prodl	equ	0xFF3
 10235                           indf0	equ	0xFEF
 10236                           postinc0	equ	0xFEE
 10237                           postdec0	equ	0xFED
 10238                           preinc0	equ	0xFEC
 10239                           plusw0	equ	0xFEB
 10240                           fsr0h	equ	0xFEA
 10241                           fsr0l	equ	0xFE9
 10242                           wreg	equ	0xFE8
 10243                           indf1	equ	0xFE7
 10244                           postinc1	equ	0xFE6
 10245                           postdec1	equ	0xFE5
 10246                           preinc1	equ	0xFE4
 10247                           plusw1	equ	0xFE3
 10248                           fsr1h	equ	0xFE2
 10249                           fsr1l	equ	0xFE1
 10250                           bsr	equ	0xFE0
 10251                           indf2	equ	0xFDF
 10252                           postinc2	equ	0xFDE
 10253                           postdec2	equ	0xFDD
 10254                           preinc2	equ	0xFDC
 10255                           plusw2	equ	0xFDB
 10256                           fsr2h	equ	0xFDA
 10257                           fsr2l	equ	0xFD9
 10258                           status	equ	0xFD8


Data Sizes:
    Strings     86
    Constant    4
    Data        9
    BSS         82
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126    121     126
    BANK0           128    116     128
    BANK1           256      0      74
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    i2sprintf@f.buffer	PTR unsigned char  size(2) Largest target is 0
		 -> lineTwo(BANK1[17]), lineOne(BANK1[17]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 18
		 -> STR_5(CODE[18]), STR_4(CODE[17]), STR_3(CODE[17]), STR_2(CODE[17]), 
		 -> STR_1(CODE[17]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 17
		 -> lineTwo(BANK1[17]), lineOne(BANK1[17]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 17
		 -> lineTwo(BANK1[17]), lineOne(BANK1[17]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    S1607_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 17
		 -> lineTwo(BANK1[17]), lineOne(BANK1[17]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 17
		 -> lineTwo(BANK1[17]), lineOne(BANK1[17]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 18
		 -> STR_5(CODE[18]), STR_4(CODE[17]), STR_3(CODE[17]), STR_2(CODE[17]), 
		 -> STR_1(CODE[17]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 18
		 -> STR_5(CODE[18]), STR_4(CODE[17]), STR_3(CODE[17]), STR_2(CODE[17]), 
		 -> STR_1(CODE[17]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 18
		 -> STR_5(CODE[18]), STR_4(CODE[17]), STR_3(CODE[17]), STR_2(CODE[17]), 
		 -> STR_1(CODE[17]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    putsXLCD@buffer	PTR unsigned char  size(2) Largest target is 17
		 -> lineTwo(BANK1[17]), lineOne(BANK1[17]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _inter in COMRAM

    _inter->_updateLCD
    _updateLCD->i2_sprintf
    i2_sprintf->i2_vfprintf
    i2_vfprintf->i2_vfpfcnvrt
    i2_vfpfcnvrt->i2_dtoa
    i2_dtoa->i2_pad
    i2_pad->i2_fputs
    i2_fputs->i2_fputc
    i2_abs->i2___aomod
    i2_atoi->i2_isspace
    i2_putsXLCD->i2_BusyXLCD
    i2_putsXLCD->i2_WriteDataXLCD
    _time->i2_setData
    i2_setData->i2_writeEEPROM

Critical Paths under _main in BANK0

    _main->_vumeter
    _vumeter->_lcdVumeter
    _lcdVumeter->_sprintf
    _putsXLCD->_BusyXLCD
    _putsXLCD->_WriteDataXLCD
    _setFrequency->_sprintf
    _writeFrequency->_codFreq
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _atoi->_isspace
    _setData->_writeEEPROM
    _beep->___wmul
    _getData->_readEEPROM
    _config->_initLCD
    _initLCD->_OpenXLCD
    _SendCMDLCD->_BusyXLCD
    _SendCMDLCD->_WriteCmdXLCD
    _OpenXLCD->_BusyXLCD
    _OpenXLCD->_DelayPORXLCD
    _OpenXLCD->_SetDDRamAddr
    _OpenXLCD->_WriteCmdXLCD

Critical Paths under _inter in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _inter in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _inter in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _inter in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _inter in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _inter in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0   32176
                                            113 BANK0      3     3      0
                               _beep
                             _config
                            _getData
                       _setFrequency
                            _sprintf
                            _vumeter
                     _writeFrequency
 ---------------------------------------------------------------------------------
 (1) _vumeter                                              1     1      0   10312
                                            112 BANK0      1     1      0
                         _lcdVumeter
 ---------------------------------------------------------------------------------
 (2) _lcdVumeter                                           3     3      0   10136
                                            109 BANK0      3     3      0
                           _BusyXLCD
                       _SetDDRamAddr
                      _WriteDataXLCD
                            ___lwdiv
                            ___lwmod
                           _putsXLCD
                            _sprintf
 ---------------------------------------------------------------------------------
 (3) _putsXLCD                                             2     0      2     265
                                              1 BANK0      2     0      2
                           _BusyXLCD
                      _WriteDataXLCD
 ---------------------------------------------------------------------------------
 (4) _WriteDataXLCD                                        1     1      0      44
                                              0 BANK0      1     1      0
                      _DelayFor18TCY
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              5     1      4     411
                                              0 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     414
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (1) _setFrequency                                         2     2      0   11120
                                            109 BANK0      2     2      0
                               _beep
                            _setData
                            _sprintf
                     _writeFrequency
 ---------------------------------------------------------------------------------
 (1) _writeFrequency                                      10     8      2     508
                                              2 BANK0     10     8      2
                            _codFreq
 ---------------------------------------------------------------------------------
 (2) _codFreq                                              2     0      2     144
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _sprintf                                             18    10      8    8867
                                             91 BANK0     18    10      8
                           _vfprintf
 ---------------------------------------------------------------------------------
 (4) _vfprintf                                             8     2      6    7947
                                             83 BANK0      8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (5) _vfpfcnvrt                                           46    40      6    7562
                                             63 BANK0     20    14      6
                               _atoi
                               _dtoa
                              _fputc
                            _isdigit
 ---------------------------------------------------------------------------------
 (6) _dtoa                                                36    26     10    4358
                                             27 BANK0     36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (7) _pad                                                 11     5      6    2709
                                             16 BANK0     11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (8) _strlen                                               4     2      2     166
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (8) _fputs                                                7     3      4    1235
                                              9 BANK0      7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (6) _fputc                                                9     5      4     834
                                              0 BANK0      9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (7) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (7) _abs                                                  4     2      2     142
                                             18 BANK0      4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (7) ___aomod                                             18     2     16     448
                                              0 BANK0     18     2     16
 ---------------------------------------------------------------------------------
 (7) ___aodiv                                             26    10     16     452
                                              0 BANK0     26    10     16
 ---------------------------------------------------------------------------------
 (6) _atoi                                                15    13      2    1396
                                              7 BANK0     15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (7) _isspace                                              7     5      2     207
                                              0 BANK0      7     5      2
 ---------------------------------------------------------------------------------
 (6) _isdigit                                              6     4      2     237
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (2) _setData                                              3     3      0     666
                                              2 BANK0      3     3      0
                        _writeEEPROM
 ---------------------------------------------------------------------------------
 (3) _writeEEPROM                                          2     1      1     576
                                              0 BANK0      2     1      1
 ---------------------------------------------------------------------------------
 (2) _beep                                                 2     0      2    1079
                                              6 BANK0      2     0      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (7) ___wmul                                               6     2      4     555
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) _getData                                              4     4      0      68
                                              1 BANK0      4     4      0
                         _readEEPROM
 ---------------------------------------------------------------------------------
 (2) _readEEPROM                                           1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _config                                               0     0      0     176
                            _initLCD
 ---------------------------------------------------------------------------------
 (2) _initLCD                                              2     2      0     176
                                              3 BANK0      2     2      0
                           _OpenXLCD
                         _SendCMDLCD
 ---------------------------------------------------------------------------------
 (3) _SendCMDLCD                                           1     1      0      66
                                              1 BANK0      1     1      0
                           _BusyXLCD
                       _WriteCmdXLCD
 ---------------------------------------------------------------------------------
 (3) _OpenXLCD                                             2     2      0     110
                                              1 BANK0      2     2      0
                           _BusyXLCD
                       _DelayPORXLCD
                       _SetDDRamAddr
                       _WriteCmdXLCD
 ---------------------------------------------------------------------------------
 (4) _WriteCmdXLCD                                         1     1      0      44
                                              0 BANK0      1     1      0
                      _DelayFor18TCY
 ---------------------------------------------------------------------------------
 (3) _SetDDRamAddr                                         1     1      0      44
                                              0 BANK0      1     1      0
                      _DelayFor18TCY
 ---------------------------------------------------------------------------------
 (5) _DelayFor18TCY                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _DelayPORXLCD                                         1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _BusyXLCD                                             1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _inter                                              10    10      0    6066
                                            111 COMRAM    10    10      0
                               _time
                          _updateLCD
 ---------------------------------------------------------------------------------
 (12) _updateLCD                                           2     2      0    5750
                                            109 COMRAM     2     2      0
                     i2_SetDDRamAddr
                          i2___lwdiv
                          i2___lwmod
                         i2_putsXLCD
                          i2_sprintf
 ---------------------------------------------------------------------------------
 (13) i2_sprintf                                          18    10      8    5094
                                             91 COMRAM    18    10      8
                         i2_vfprintf
 ---------------------------------------------------------------------------------
 (14) i2_vfprintf                                          8     2      6    4841
                                             83 COMRAM     8     2      6
                        i2_vfpfcnvrt
 ---------------------------------------------------------------------------------
 (15) i2_vfpfcnvrt                                        46    40      6    4629
                                             63 COMRAM    20    14      6
                             i2_atoi
                             i2_dtoa
                            i2_fputc
                          i2_isdigit
 ---------------------------------------------------------------------------------
 (16) i2_dtoa                                             36    26     10    2808
                                             27 COMRAM    36    26     10
                          i2___aodiv
                          i2___aomod
                              i2_abs
                              i2_pad
 ---------------------------------------------------------------------------------
 (17) i2_pad                                              11     5      6    1509
                                             16 COMRAM    11     5      6
                            i2_fputc
                            i2_fputs
                           i2_strlen
 ---------------------------------------------------------------------------------
 (18) i2_strlen                                            4     2      2     116
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (18) i2_fputs                                             7     3      4     635
                                              9 COMRAM     7     3      4
                            i2_fputc
 ---------------------------------------------------------------------------------
 (16) i2_fputc                                             9     5      4     434
                                              0 COMRAM     9     5      4
                            i2_putch
 ---------------------------------------------------------------------------------
 (17) i2_putch                                             1     1      0       0
 ---------------------------------------------------------------------------------
 (17) i2_abs                                               4     2      2      92
                                             18 COMRAM     4     2      2
                          i2___aomod (ARG)
 ---------------------------------------------------------------------------------
 (17) i2___aomod                                          18     2     16     348
                                              0 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (17) i2___aodiv                                          26    10     16     352
                                              0 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (16) i2_atoi                                             15    13      2     726
                                              7 COMRAM    15    13      2
                           i2___wmul
                          i2_isdigit
                          i2_isspace
 ---------------------------------------------------------------------------------
 (17) i2_isspace                                           7     5      2      94
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (16) i2_isdigit                                           6     4      2      74
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (17) i2___wmul                                            6     2      4     211
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (13) i2_putsXLCD                                          2     0      2     141
                                              1 COMRAM     2     0      2
                         i2_BusyXLCD
                    i2_WriteDataXLCD
 ---------------------------------------------------------------------------------
 (14) i2_WriteDataXLCD                                     1     1      0      44
                                              0 COMRAM     1     1      0
                    i2_DelayFor18TCY
 ---------------------------------------------------------------------------------
 (14) i2_BusyXLCD                                          1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (13) i2___lwmod                                           5     1      4     211
                                              0 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (13) i2___lwdiv                                           7     3      4     214
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (13) i2_SetDDRamAddr                                      1     1      0      44
                                              0 COMRAM     1     1      0
                    i2_DelayFor18TCY
 ---------------------------------------------------------------------------------
 (15) i2_DelayFor18TCY                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _time                                                0     0      0     316
                          i2_setData
 ---------------------------------------------------------------------------------
 (13) i2_setData                                           3     3      0     316
                                              2 COMRAM     3     3      0
                      i2_writeEEPROM
 ---------------------------------------------------------------------------------
 (14) i2_writeEEPROM                                       2     1      1     226
                                              0 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 18
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _beep
     ___wmul
   _config
     _initLCD
       _OpenXLCD
         _BusyXLCD
         _DelayPORXLCD
         _SetDDRamAddr
           _DelayFor18TCY
         _WriteCmdXLCD
           _DelayFor18TCY
       _SendCMDLCD
         _BusyXLCD
         _WriteCmdXLCD
           _DelayFor18TCY
   _getData
     _readEEPROM
   _setFrequency
     _beep
       ___wmul
     _setData
       _writeEEPROM
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
           _fputc
             _putch
           _isdigit
     _writeFrequency
       _codFreq
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _atoi
           ___wmul
           _isdigit
           _isspace
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
             _fputs
               _fputc
                 _putch
             _strlen
         _fputc
           _putch
         _isdigit
   _vumeter
     _lcdVumeter
       _BusyXLCD
       _SetDDRamAddr
         _DelayFor18TCY
       _WriteDataXLCD
         _DelayFor18TCY
       ___lwdiv
       ___lwmod
       _putsXLCD
         _BusyXLCD
         _WriteDataXLCD
           _DelayFor18TCY
       _sprintf
         _vfprintf
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _fputc
               _putch
             _isdigit
   _writeFrequency
     _codFreq

 _inter (ROOT)
   _time
     i2_setData
       i2_writeEEPROM
   _updateLCD
     i2_SetDDRamAddr
       i2_DelayFor18TCY
     i2___lwdiv
     i2___lwmod
     i2_putsXLCD
       i2_BusyXLCD
       i2_WriteDataXLCD
         i2_DelayFor18TCY
     i2_sprintf
       i2_vfprintf
         i2_vfpfcnvrt
           i2_atoi
             i2___wmul
             i2_isdigit
             i2_isspace
           i2_dtoa
             i2___aodiv
             i2___aomod
             i2_abs
               i2___aomod (ARG)
             i2_pad
               i2_fputc
                 i2_putch
               i2_fputs
                 i2_fputc
                   i2_putch
               i2_strlen
           i2_fputc
             i2_putch
           i2_isdigit

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      4A       7       28.9%
BITBANK0            80      0       0       4        0.0%
BANK0               80     74      80       5      100.0%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     79      7E       1      100.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     148      15        0.0%
DATA                 0      0     148       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Wed Aug  7 18:30:45 2019

                                                 _UN_BLOCKED 0603  
                                                         l62 2BA6  
                                                         l72 21FA  
                                        ___wmul@multiplicand 0082  
                                         i2___lwdiv@dividend 0001  
                                               __CFG_CP0$OFF 000000  
                                               __CFG_CP1$OFF 000000  
                                               __CFG_CP2$OFF 000000  
                                               __CFG_CP3$OFF 000000  
                                                __CFG_OSC$HS 000000  
                                                        l213 1B06  
                                                        l240 21B8  
                                                        l600 1D38  
                                                        l264 1066  
                                                        l259 2532  
                                                        l611 0BE0  
                                                        l613 0BEA  
                                                        l509 204A  
                                                        l567 1CA4  
                                                        l648 08DC  
                                               __CFG_CPB$OFF 000000  
                                               __CFG_CPD$OFF 000000  
                                         i2___aodiv@quotient 0013  
                                               __CFG_BOR$OFF 000000  
                                                        _abs 29BE  
                                                        _pad 1D00  
                                               __CFG_BORV$20 000000  
                                      __size_of_WriteCmdXLCD 0048  
                                                        wreg 000FE8  
                                            __end_of_BLOCKED 0605  
                                        __end_ofi2_vfpfcnvrt 0B62  
                                        i2WriteDataXLCD@data 0001  
                                               __CFG_LVP$OFF 000000  
                                               __CFG_WDT$OFF 000000  
                                                       ?_abs 0092  
                                                       l3011 1D1C  
                                                       l1333 29EC  
                                                       l3021 1D60  
                                                       l1149 2440  
                                                       l3111 1870  
                                                       l3103 180E  
                                                       l3015 1D2E  
                                                       l1159 2600  
                                                       l1336 29F6  
                                                       l3105 1824  
                                                       l3025 1D8E  
                                                       l3017 1D44  
                                                       l3131 28A6  
                                                       l3051 1512  
                                                       l3115 1888  
                                                       l3211 0DA0  
                                                       l4003 2038  
                                                       l1364 136C  
                                                       l1367 1376  
                                                       l3063 1564  
                                                       l3119 18B0  
                                                       l3207 0D84  
                                                       l3233 128C  
                                                       l3217 1228  
                                                       l3065 157A  
                                                       l3057 153C  
                                                       l1393 1E56  
                                                       l3243 1304  
                                                       l3235 1296  
                                                       l3227 127A  
                                                       l3219 122E  
                                                       l3083 161A  
                                                       l3075 15DA  
                                                       l3403 0700  
                                                       l4211 2160  
                                                       l3237 129E  
                                                       l3173 0C08  
                                                       l3405 0720  
                                                       l3239 12CA  
                                                       l3079 15F2  
                                                       l3095 17CC  
                                                       l3159 0BC0  
                                                       l3423 083A  
                                                       l3407 0730  
                                                       l4231 219C  
                                                       l4223 2184  
                                                       l4215 216C  
                                                       l3177 0C1A  
                                                       l3433 0886  
                                                       l4161 10DA  
                                                       l4153 109A  
                                                       l3099 17F2  
                                                       l3187 0D16  
                                                       l4235 21A8  
                                                       l4227 2190  
                                                       l4219 2178  
                                                       l4323 1A6A  
                                                       l3429 087A  
                                                       l4181 1170  
                                                       l4173 112E  
                                                       l4165 10F0  
                                                       l4157 10C6  
                                                       l4149 1084  
                                                       l3439 08A2  
                                                       l4351 1B0A  
                                                       l4335 1AA4  
                                                       l3633 2332  
                                                       l4185 1186  
                                                       l4177 1144  
                                                       l3635 2362  
                                                       l4347 1AFA  
                                                       l4189 119C  
                                                       l3821 2410  
                                                       ?_pad 0090  
                                                       l3831 2434  
                                                       l3753 1B98  
                                                       l3841 25D8  
                                                       l3771 1BEE  
                                                       l3763 1BCA  
                                                       l3819 2406  
                                                       l2981 284E  
                                                       l3783 1C24  
                                                       l3775 1C00  
                                                       l3767 1BDC  
                                                       l3759 1BB8  
                                                       l3927 21E6  
                                                       l2967 1DCC  
                                                       l3847 25F4  
                                                       l3839 25CE  
                                                       l3791 2A3C  
                                                       l2977 2834  
                                                       l2985 2B28  
                                                       l3961 1CA8  
                                                       l3779 1C12  
                                                       l2987 2B30  
                                                       l3957 1C6E  
                                                       l3797 2A5C  
                                                       l3799 2C3A  
                                                       l3997 2028  
                                                       STR_1 0628  
                                                       STR_2 064A  
                                                       STR_3 0639  
                                                       STR_4 0617  
                                                       STR_5 0605  
                                                       u2010 1DC2  
                                                       u2030 1E0E  
                                                       u2210 1580  
                                                       u2140 29D0  
                                                       u2150 2A9E  
                                                       u2310 28A2  
                                                       u3200 1BA4  
                                                       u2160 2AA2  
                                                       u2400 0C00  
                                                       u2410 0D28  
                                                       u2500 1276  
                                                       u2340 0B8E  
                                                       u2270 182A  
                                                       u2430 0D4A  
                                                       u2350 0B92  
                                                       u2191 1544  
                                                       u2431 0D48  
                                                       u4007 1A58  
                                                       u2520 1338  
                                                       u2440 0D5A  
                                                       u4017 1A7A  
                                                       u2530 133C  
                                                       u2450 0D5E  
                                                       u3330 2416  
                                                       u4107 1CB2  
                                                       u4027 1AC8  
                                                       u2380 0BD4  
                                                       u4117 1CCA  
                                                       u4037 1B18  
                                                       u3430 2560  
                                                       u2470 0D6C  
                                                       u4207 2C96  
                                                       u4127 1CEC  
                                                       u4047 10B4  
                                                       _PIE1 000F9D  
                                                       u3360 25DE  
                                                       u4217 2C5C  
                                                       u4137 2538  
                                                       u4057 10FE  
                                                       u2810 076E  
                                                       u4147 2542  
                                                       u4067 115E  
                                                       u2820 0772  
                                                       u3444 1C88  
                                                       u4157 2716  
                                                       u3445 1C80  
                                                       u4077 11AA  
                                                       u2830 0780  
                                                       u3710 11C0  
                                                       u4167 273A  
                                                       u4087 11D2  
                                                       u4177 1B68  
                                                       u4097 1C5A  
                                                       u2850 07BA  
                                                       u3650 1114  
                                                       u4187 1B84  
                                                       u4197 2CDA  
                                                       u3590 106C  
                                                       i2l62 2BFE  
                                                       i2l72 22DC  
                                                       u3997 1A22  
                                               __CFG_PWRT$ON 000000  
                                               _stereoEnable 0149  
                                               __CFG_STVR$ON 000000  
                                                       abs@a 0092  
                                                       _beep 250E  
                                                       _dbuf 0107  
                                                       _days 00FE  
                                                       _atoi 1212  
                                                       _main 1A0E  
                                                       _dtoa 0B62  
                                                       _prec 00F6  
                                                       _time 223C  
                                                       _nout 0100  
                                                       pad@i 0097  
                                                       pad@p 0094  
                                                       fsr1h 000FE2  
                                         i2___lwdiv@quotient 0005  
                                                       fsr2h 000FDA  
                                                       indf2 000FDF  
                                                       fsr1l 000FE1  
                                                       pad@w 0099  
                                                       fsr2l 000FD9  
                                                       btemp 007F  
                                                i2_atoi$1585 0010  
                                                i2_atoi$1586 0014  
                                                i2_atoi$1587 0012  
                                     __size_of_WriteDataXLCD 0048  
                                                       prodh 000FF4  
                                                       prodl 000FF3  
                                                       start 00A4  
                                            __end_ofi2_fputc 1F08  
                                            __end_ofi2_fputs 297C  
                                              lcdVumeter@lvl 00EF  
                                            __end_ofi2_putch 2D02  
                                                i2_dtoa$1113 002E  
                                               ___param_bank 000000  
                                                _writeEEPROM 2B84  
                                                      ??_abs 0094  
                                                      ??_pad 0096  
                                                 i2_putsXLCD 2AE4  
                                               _WriteCmdXLCD 27DE  
                                           ?i2_DelayFor18TCY 0001  
                                           ??_writeFrequency 0084  
                                                 i2_vfprintf 244E  
                                              __CFG_OSCS$OFF 000000  
                                                      ?_beep 0086  
                                            __end_of___aodiv 1640  
                                         writeEEPROM@address 0080  
                                                      ?_atoi 0087  
                                              ?_SetDDRamAddr 0001  
                                                      ?_main 0001  
                                                      ?_dtoa 009B  
                                            __end_of___aomod 18D6  
                                                      _EEADR 000FA9  
                                                      ?_time 0001  
                                                      _T0CON 000FD5  
                                                      _T1CON 000FCD  
                                            __end_of___lwdiv 244E  
                                            __end_of___lwmod 260E  
                                                      i2l227 0072  
                                                      i2l256 22A6  
                                                      i2l600 1F3E  
                                                      i2l611 0E4C  
                                                      i2l613 0E56  
                                                      i2l648 0B5C  
                                               vfpfcnvrt@fmt 00C1  
                                                      _TMR0H 000FD7  
                                                      _TMR1H 000FCF  
                                                      _TMR0L 000FD6  
                                                      _TMR1L 000FCE  
                                                      _PORTA 000F80  
                                                      _PORTB 000F81  
                                                      _PORTC 000F82  
                                                      _PORTD 000F83  
                                                      _PORTE 000F84  
                                                      _TRISA 000F92  
                                                      _TRISB 000F93  
                                                      _TRISC 000F94  
                                                      _TRISD 000F95  
                                                      _TRISE 000F96  
                                                      i2_abs 29FC  
                                            __end_of_codFreq 2C8C  
                                                      i2_pad 1F08  
                                              __CFG_WRT0$OFF 000000  
                                            __end_of_getData 23EC  
                                              __CFG_WRT1$OFF 000000  
                                              __CFG_WRT2$OFF 000000  
                                              __CFG_WRT3$OFF 000000  
                                             __CFG_EBTR0$OFF 000000  
                                             __CFG_EBTR1$OFF 000000  
                                             __CFG_EBTR2$OFF 000000  
                                             __CFG_EBTR3$OFF 000000  
                                              __CFG_WRTB$OFF 000000  
                                              __CFG_WRTC$OFF 000000  
                                              __CFG_WRTD$OFF 000000  
                                            __end_of_initLCD 274C  
                                             __CFG_EBTRB$OFF 000000  
                                                 i2isdigit@c 0001  
                                                      _flags 00F8  
                                       writeFrequency@buffer 0087  
                                                      _level 0102  
                                                      _fputc 1DAE  
                                                      _inter 0008  
                                                      _fputs 2826  
                                            __end_of_isdigit 2AAC  
                                                      _hours 00FD  
                                                      atoi@n 0094  
                                                      pad@fp 0090  
                                                      atoi@s 0087  
                                            __end_of_setData 223C  
                                                      _width 00F4  
                                                      _putch 2CF6  
                                                      main@i 00F3  
                                                      dtoa@d 009D  
                                                      dtoa@i 00BD  
                                                      dtoa@n 00B5  
                                                      dtoa@p 00AF  
                                                      dtoa@s 00B3  
                                                      dtoa@w 00B1  
                                            __end_of_isspace 28B2  
                                                ?i2_BusyXLCD 0001  
                                                      tablat 000FF5  
                                           __end_ofi2___wmul 2C34  
                                                      ttemp5 0080  
                                                      ttemp6 0083  
                                                      ttemp7 0087  
                                                      status 000FD8  
                                                 i2isspace@c 0001  
                                                      wtemp8 0080  
                                            __end_of_sprintf 25BC  
                                            __end_of_vumeter 21C6  
                                         __size_ofi2___aodiv 015C  
                                         __size_ofi2___aomod 0138  
                                         __size_ofi2___lwdiv 0060  
                                         __size_ofi2___lwmod 0050  
                                           __end_ofi2_strlen 2B84  
                                            __initialization 20D4  
                                          __end_of_FINAL_DAY 0602  
                                               __end_of_beep 2566  
                                               __end_of_atoi 137C  
                                               __end_of_main 1B3C  
                                               __end_of_dtoa 0DCE  
                                               __end_of_time 22AC  
                                           __end_of_BusyXLCD 2C70  
                                           ??i2_SetDDRamAddr 0001  
                                      __size_of_DelayPORXLCD 001C  
                                         __size_ofi2_isdigit 0038  
                                         __size_ofi2_setData 0070  
                                                i2_vfpfcnvrt 08E2  
                                             ??_SetDDRamAddr 0080  
                                         __size_ofi2_isspace 0044  
                                              i2vfpfcnvrt@ap 0044  
                                              i2vfpfcnvrt@fp 0040  
                                              i2vfpfcnvrt@ll 004A  
                                                 _SendCMDLCD 2C34  
                                                     ??_beep 0088  
                                           __end_of_OpenXLCD 1C3A  
                                                     ??_atoi 0089  
                                                     ??_main 00F1  
                                                     ??_dtoa 00A5  
                                                     ??_time 0006  
                                              __activetblptr 000002  
                                                 i2sprintf@f 0068  
                                              _WriteDataXLCD 2796  
                                                 i2sprintf@s 005C  
                                         __size_ofi2_sprintf 0052  
                                                     ?i2_abs 0013  
                                                     ?i2_pad 0011  
                                         _hundredMiliSeconds 0104  
                                                     _ADCON0 000FC2  
                                                     _ADCON1 000FC1  
                                                     ?_fputc 0080  
                                                     ?_inter 0001  
                                                     ?_fputs 0089  
                                                     _ADRESH 000FC4  
                                                     _EEDATA 000FA8  
                                                     _EECON2 000FA7  
                                                     ?_putch 0001  
                                                     i2l1149 2500  
                                                     i2l1333 2A28  
                                                     i2l1159 26F4  
                                                     i2l1336 2A32  
                                                     i2l1364 14D2  
                                                     i2l3141 295E  
                                                     i2l1367 14DC  
                                                     i2l4017 22CA  
                                                     i2l3305 16C0  
                                                     i2l3321 174E  
                                                     i2l1393 1F02  
                                                     i2l3137 2946  
                                                     i2l3145 2B5E  
                                                     i2l3307 16D6  
                                                     i2l3147 2B64  
                                                     i2l3325 1776  
                                                     i2l3317 1736  
                                                     i2l3341 192A  
                                                     i2l3261 1F24  
                                                     i2l3501 0FF0  
                                                     i2l4063 24C6  
                                                     i2l4055 2B06  
                                                     i2l3511 1390  
                                                     i2l3271 1F64  
                                                     i2l4065 24D0  
                                                     i2l4049 2AE8  
                                                     i2l3521 13E2  
                                                     i2l3513 1396  
                                                     i2l3361 19E8  
                                                     i2l3353 19A8  
                                                     i2l3345 1946  
                                                     i2l3337 1904  
                                                     i2l3265 1F34  
                                                     i2l3505 100C  
                                                     i2l4075 24F4  
                                                     i2l4091 26E8  
                                                     i2l4083 26C2  
                                                     i2l3531 1406  
                                                     i2l3347 195C  
                                                     i2l3275 1F94  
                                                     i2l3267 1F4A  
                                                     i2l4085 26CC  
                                                     i2l3381 28EA  
                                                     i2l3533 1432  
                                                     i2l3293 166E  
                                                     i2l3357 19C0  
                                                     i2l3453 0E2A  
                                                     i2l3527 13F4  
                                                     i2l3471 0E86  
                                                     i2l3537 146A  
                                                     i2l3529 13FE  
                                                     i2l3481 0F80  
                                                     i2l4283 229E  
                                                     i2l3299 1698  
                                                     i2l3467 0E74  
                                                     i2l4371 005C  
                                                     i2l4277 2288  
                                                     i2l4373 0060  
                                                     i2l3655 0986  
                                                     i2l3903 2464  
                                                     i2l4295 20BC  
                                                     i2l3681 0AFE  
                                                     i2l3657 09A6  
                                                     i2l3905 248C  
                                                     i2l3675 0ABE  
                                                     i2l3659 09B6  
                                                     i2l3691 0B24  
                                                     i2l3685 0B08  
                                                     _INTCON 000FF2  
                                                     i2l2999 1E78  
                                   __size_ofi2_WriteDataXLCD 0042  
                                                  ??i2_fputc 0005  
                                                  ??i2_fputs 000E  
                                                     _OSCCON 000FD3  
                                                  ??i2_putch 0001  
                                             __CFG_WDTPS$128 000000  
                                             i2___aodiv@sign 0012  
                                                     i2abs@a 0013  
                                                     i2_atoi 137C  
                                                     i2_dtoa 0DCE  
                                                     i2pad@i 0018  
                                                     i2pad@p 0015  
                                                     i2pad@w 001A  
                                               _DelayPORXLCD 2C8C  
                                               vfprintf@cfmt 00D9  
                                      __end_ofi2_writeEEPROM 2C0A  
                                             i2___aomod@sign 0012  
                                                  ??___aodiv 0090  
                                              i2vfprintf@fmt 0056  
                                                  ??___aomod 0090  
                                                     ___wmul 2BB2  
                                                  ??___lwdiv 0084  
                                                ?i2_putsXLCD 0002  
                                                     beep@ms 0086  
                                                  ??___lwmod 0084  
                                                     _config 260E  
                                                ?i2_vfprintf 0054  
                                                  ??_codFreq 0082  
                                                     clear_0 212C  
                                                     clear_1 2138  
                                                  ??_getData 0081  
                                                     _months 00FF  
                                        __size_ofi2_BusyXLCD 0018  
                                                     pad@buf 0092  
                                             ?_WriteDataXLCD 0001  
                                                     dtoa@fp 009B  
                                                     _strlen 2B1C  
                                                  ??_initLCD 0083  
                                                     fputc@c 0080  
                                                     fputs@c 008D  
                                                     fputs@i 008E  
                                               __pdataCOMRAM 007A  
                                          __end_ofi2___aodiv 179C  
                                                     fputs@s 0089  
                                                  ??_isdigit 0082  
                                          __end_ofi2___aomod 1A0E  
                                                  ??_setData 0082  
                                          __end_ofi2___lwdiv 250E  
                                               __mediumconst 0000  
                                                  ??_isspace 0082  
                                          __end_ofi2___lwmod 2702  
                                                     tblptrh 000FF7  
                                                     tblptrl 000FF6  
                                                     tblptru 000FF8  
                                                     putch@c 0001  
                                           __end_of_putsXLCD 2A72  
                                         i2___aomod@dividend 0001  
                                           __end_of_vfprintf 2384  
                                                  ??_sprintf 00E3  
                                                  ??_vumeter 00F0  
                                          __end_ofi2_isdigit 2AE4  
                                          __end_ofi2_setData 231C  
                                                 __accesstop 0080  
                                    __end_of__initialization 2140  
                                          __end_ofi2_isspace 28F6  
                                            lcdVumeter@decim 00ED  
                                            lcdVumeter@integ 00EE  
                                              ___rparam_used 000001  
                                            writeEEPROM@data 0081  
                                          __end_ofi2_sprintf 26B2  
                                              __end_ofi2_abs 2A38  
                                              __end_ofi2_pad 1FB2  
                                         i2___lwmod@dividend 0001  
                                             __pcstackCOMRAM 0001  
                                               __pidataBANK0 2D06  
                                               __pidataBANK1 2D0C  
                                              __end_of_fputc 1E5C  
                                              __end_of_inter 00A4  
                                              __end_of_fputs 286C  
                                              __end_of_putch 2CFC  
                                                ?_SendCMDLCD 0001  
                                                  ?i2___wmul 0001  
                                                    ??i2_abs 0015  
                                                    ??i2_pad 0017  
                                                setData@full 0084  
                                             i2vfpfcnvrt@fmt 0042  
                                                  ?i2_strlen 0001  
                                                    ??_fputc 0084  
                                                    ??_inter 0070  
                                                    ??_fputs 008D  
                                     __size_of_DelayFor18TCY 0010  
                                                    ??_putch 0080  
                                              ?_setFrequency 0001  
                                                 __pbssBANK0 00F4  
                                                 __pbssBANK1 0100  
                                                  ?_BusyXLCD 0001  
                                                i2sprintf@ap 0066  
                                        __size_ofi2_putsXLCD 0038  
                                        __size_ofi2_vfprintf 0060  
                                            WriteCmdXLCD@cmd 0080  
                                       __end_of_SetDDRamAddr 2796  
                                                    ?i2_atoi 0008  
                                                    ?i2_dtoa 001C  
                                                  ?_OpenXLCD 0001  
                                          ??i2_WriteDataXLCD 0001  
                                               ?_writeEEPROM 0080  
                                          WriteDataXLCD@data 0080  
                                           __CFG_CCP2MUX$OFF 000000  
                                                    ?___wmul 0080  
                                                    ?_config 0001  
                                            ??_WriteDataXLCD 0080  
                                                    _BLOCKED 0604  
                                             updateLCD@decim 006E  
                                                    ?_strlen 0080  
                                             updateLCD@integ 006F  
                                                 ??i2___wmul 0005  
                                                 _isOnConfig 0103  
                                                 _lcdVumeter 1FB2  
                                         __size_of_updateLCD 0084  
                                         __size_of_vfpfcnvrt 0286  
                                                 ??i2_strlen 0003  
                                             ??_setFrequency 00ED  
                                               ??i2_BusyXLCD 0001  
                                                 ??_BusyXLCD 0080  
                                                    i2_fputc 1E5C  
                                                    i2_fputs 293A  
                                                    i2atoi@n 0015  
                                                    i2pad@fp 0011  
                                                    i2atoi@s 0008  
                                                    i2_putch 2CFC  
                                                    i2dtoa@d 001E  
                                                    i2dtoa@i 003E  
                                                    i2dtoa@n 0036  
                                                    i2dtoa@p 0030  
                                                    i2dtoa@s 0034  
                                                    i2dtoa@w 0032  
                                                 _readEEPROM 2CC0  
                                        __size_of_SendCMDLCD 001E  
                                                 ??_OpenXLCD 0081  
                                            __size_ofi2_atoi 0166  
                                            __size_ofi2_dtoa 026C  
                                                    __Hparam 0000  
                                                    __Lparam 0000  
                                                    ___aodiv 14E2  
                                                    ___aomod 179C  
                                              _DelayFor18TCY 2CD6  
                                            __size_of___wmul 002C  
                                                  ?_putsXLCD 0081  
                                                    ___lwdiv 23EC  
                                                    ___lwmod 25BC  
                                                  ?_vfprintf 00D3  
                                             i2vfprintf@cfmt 005A  
                                               __psmallconst 0600  
                                            __size_of_config 0052  
                                                  _FINAL_DAY 0601  
                                               ?i2_vfpfcnvrt 0040  
                                                    _codFreq 2C70  
                                                    __pcinit 20D4  
                                                    _getData 2384  
                                                    __ramtop 0600  
                                                    __ptext0 1A0E  
                                                    __ptext1 214E  
                                                    __ptext2 1FB2  
                                                    __ptext3 2A38  
                                                    __ptext4 2796  
                                                    __ptext5 25BC  
                                                    __ptext6 23EC  
                                                    __ptext7 103A  
                                                    __ptext8 1C3A  
                                                    __ptext9 2C70  
                                                    _cntTmr1 0106  
                                         __end_ofi2_BusyXLCD 2CC0  
                                            __size_of_strlen 0036  
                                                    _initLCD 2702  
                                                  _T1CONbits 000FCD  
                                                    _lineOne 0138  
                                               __size_of_abs 003E  
                                                    _lineTwo 0127  
                                               __size_of_pad 00AE  
                                                    _isdigit 2A72  
                                                    _prTmr0H 007A  
                                                    _prTmr1H 007C  
                                                    _prTmr0L 007B  
                                                    _prTmr1L 007D  
                                                    _setData 21C6  
                                   __size_ofi2_DelayFor18TCY 0010  
                                                    _minutes 00FC  
                                                    _seconds 0105  
                                                    _isspace 286C  
                                                    atoi@neg 008D  
                                                    _sprintf 2566  
                                       end_of_initialization 2140  
                                                    _vumeter 214E  
                                         __end_of_UN_BLOCKED 0604  
                                                    fputc@fp 0082  
                                              __Lmediumconst 0000  
                                                    fputs@fp 008B  
                                        i2___wmul@multiplier 0001  
                                          __end_of_updateLCD 20D4  
                                          __end_of_vfpfcnvrt 08E2  
                                             ?_DelayFor18TCY 0001  
                                                    postdec1 000FE5  
                                                    postdec2 000FDD  
                                                    postinc0 000FEE  
                                                    postinc1 000FE6  
                                                    postinc2 000FDE  
                                               ??i2_putsXLCD 0004  
                                                 ??_putsXLCD 0083  
                                               ??i2_vfprintf 005A  
                                                 ??_vfprintf 00D9  
                                                    strlen@a 0082  
                                                    strlen@s 0080  
                                       i2writeEEPROM@address 0001  
                                                  _PORTAbits 000F80  
                                                  _PORTBbits 000F81  
                                                  _PORTCbits 000F82  
                                                  _PORTDbits 000F83  
                                                  _PORTEbits 000F84  
                                          i2___aodiv@divisor 0009  
                                          i2___aodiv@counter 0011  
                                                ?_lcdVumeter 0001  
                                                  _TRISDbits 000F95  
                                           i2putsXLCD@buffer 0002  
                                    __size_of_writeFrequency 00C6  
                                      __size_of_SetDDRamAddr 004A  
                                                  i2___aodiv 1640  
                                                  i2___aomod 18D6  
                                          readEEPROM@address 0080  
                                          i2___lwdiv@divisor 0003  
                                                  i2___lwdiv 24AE  
                                                  i2___lwmod 26B2  
                                          i2___lwdiv@counter 0007  
                                         __end_ofi2_putsXLCD 2B1C  
                                         __end_ofi2_vfprintf 24AE  
                                                ?_readEEPROM 0001  
                                                  i2_isdigit 2AAC  
                                                  i2_setData 22AC  
                                             __end_ofi2_atoi 14E2  
                                             __end_ofi2_dtoa 103A  
                                                  i2_isspace 28B2  
                                                  i2atoi@neg 000E  
                                                  i2_sprintf 2660  
                                        __end_of_FINAL_MONTH 0603  
                                       __size_of_writeEEPROM 002E  
                                       __end_of_setFrequency 1212  
                                                vfpfcnvrt@ap 00C3  
                                                vfpfcnvrt@fp 00BF  
                                                vfpfcnvrt@ll 00C9  
                                             __end_of___wmul 2BDE  
                                              __pidataCOMRAM 2D02  
                                               ??_SendCMDLCD 0081  
                                             __end_of_config 2660  
                                                  i2fputc@fp 0003  
                                                  i2fputs@fp 000C  
                                               _SetDDRamAddr 274C  
                                           i2___wmul@product 0005  
                                            vumeter@vumLevel 00F0  
                                         SetDDRamAddr@DDaddr 0080  
                                             __end_of_strlen 2B52  
                                        start_initialization 20D4  
                                          __size_ofi2___wmul 002A  
                                    __size_ofi2_SetDDRamAddr 0044  
                                                __end_of_abs 29FC  
                                                __end_of_pad 1DAE  
                                                 ?i2___aodiv 0001  
                                                 ?i2___aomod 0001  
                                     __size_ofi2_writeEEPROM 002C  
                                            i2_WriteDataXLCD 297C  
                                                 ?i2___lwdiv 0001  
                                                 ?i2___lwmod 0001  
                                          __size_ofi2_strlen 0032  
                                                  i2strlen@a 0003  
                                                  i2strlen@s 0001  
                                          ??i2_DelayFor18TCY 0001  
                                          __size_of_BusyXLCD 001E  
                                                   ??i2_atoi 000A  
                                               setData@data0 0082  
                                               setData@data1 0083  
                                                   ??i2_dtoa 0026  
                                         __end_of_SendCMDLCD 2C52  
                                                 ?i2_isdigit 0001  
                                            ??_DelayFor18TCY 0080  
                                                 ?i2_setData 0001  
                                                 ?i2_isspace 0001  
                                        __size_of_lcdVumeter 009E  
                                                vfprintf@fmt 00D5  
                                          __size_of_OpenXLCD 00FE  
                                               i2vfprintf@ap 0058  
                                               i2vfprintf@fp 0054  
                                                   ??___wmul 0084  
                                                 ?i2_sprintf 005C  
                                              ?_WriteCmdXLCD 0001  
                                                   ??_config 0085  
                                                __pdataBANK0 00FC  
                                                __pdataBANK1 0149  
                                          i2___aomod@divisor 0009  
                                                   ??_strlen 0082  
                                          i2___aomod@counter 0011  
                                       __size_ofi2_vfpfcnvrt 0280  
                                        __size_of_readEEPROM 0016  
                                               i2sprintf@fmt 005E  
                                                __pbssCOMRAM 007E  
                                              __pcstackBANK0 0080  
                                           ___aodiv@dividend 0080  
                                          i2___lwmod@divisor 0003  
                                          i2___lwmod@counter 0005  
                                                   ?i2_fputc 0001  
                                                   ?i2_fputs 000A  
                                                   ?i2_putch 0001  
                                                  _atoi$1585 008F  
                                                  _atoi$1586 0093  
                                                  _atoi$1587 0091  
                                                _FINAL_MONTH 0602  
                                             putsXLCD@buffer 0081  
                                           ___lwdiv@dividend 0080  
                                                  _dtoa$1113 00AD  
                                                  __pintcode 0008  
                                             ??_WriteCmdXLCD 0080  
                                                   ?___aodiv 0080  
                                                   ?___aomod 0080  
                                              i2_writeEEPROM 2BDE  
                                           ___aodiv@quotient 0092  
                                                   ?___lwdiv 0080  
                                                   ?___lwmod 0080  
                                                   ?_codFreq 0080  
                                                   ?_getData 0001  
                                              SendCMDLCD@CMD 0081  
                                          __size_of_putsXLCD 003A  
                                      __end_of_WriteDataXLCD 27DE  
                                          __size_of_vfprintf 0068  
                                                   ?_initLCD 0001  
                                                __smallconst 0600  
                                    __end_ofi2_WriteDataXLCD 29BE  
                                                   ?_isdigit 0080  
                                             __size_ofi2_abs 003C  
                                                   ?_setData 0001  
                                             __size_ofi2_pad 00AA  
                                                   ?_isspace 0080  
                                             _writeFrequency 1C3A  
                                                  _frequency 00FA  
                                           ___lwdiv@quotient 0084  
                                                ??i2___aodiv 0011  
                                                ??i2___aomod 0011  
                                                   ?_sprintf 00DB  
                                             __size_of_fputc 00AE  
                                             __size_of_inter 009C  
                                             __size_of_fputs 0046  
                                                ??i2___lwdiv 0005  
                                                ??i2___lwmod 0005  
                                             __size_of_putch 0006  
                                                   ?_vumeter 0001  
                                             ___wmul@product 0084  
                                              ?_DelayPORXLCD 0001  
                                                ??i2_isdigit 0003  
                                                ??i2_setData 0003  
                                                   i2u300_40 0FD8  
                                           i2_vfpfcnvrt$1128 0052  
                                      __size_of_setFrequency 01D8  
                                                ??i2_isspace 0003  
                                                   i2u303_40 13DE  
                                                   i2u207_40 1E6E  
                                                   i2u305_40 149E  
                                                   i2u209_40 1EBA  
                                                   i2u313_40 09F2  
                                                   i2u306_40 14A2  
                                                   i2u314_40 09F6  
                                                   i2u315_40 0A04  
                                                   i2u317_40 0A3E  
                                                   i2u270_40 1962  
                                                   i2u262_41 16A0  
                                                   i2u422_47 2CB0  
                                                   i2u423_47 2CEA  
                                                   i2u264_40 16DC  
                                                   i2u273_40 2A0C  
                                                   _PIR1bits 000F9E  
                                            OpenXLCD@lcdtype 0082  
                                                   i2u354_40 24D6  
                                                   i2u274_40 2AD6  
                                                   i2u275_40 2ADA  
                                                   i2u291_40 0E40  
                                                   _PIR2bits 000FA1  
                                                   i2u357_40 26D2  
                                                   i2u277_40 28E6  
                                                   i2u293_40 0E6C  
                                                   i2u294_40 0F90  
                                                   i2u287_40 0DF8  
                                                   i2u296_40 0FB2  
                                                   i2u288_40 0DFC  
                                                   i2u296_41 0FB0  
                                                   i2u297_40 0FC2  
                                                   i2u298_40 0FC8  
                                             ?i2_writeEEPROM 0001  
                                                ??i2_sprintf 0064  
                                                  _updateLCD 2050  
                                             _functionalStat 007E  
                                                  _vfpfcnvrt 065C  
                                                 _ADCON0bits 000FC2  
                                          ___wmul@multiplier 0080  
                                                   i2___wmul 2C0A  
                                     __end_of_writeFrequency 1D00  
                                               ??_lcdVumeter 00ED  
                                             i2_SetDDRamAddr 28F6  
                                               _isspace$1603 0086  
                                                   i2pad@buf 0013  
                                                   i2dtoa@fp 001C  
                                                   i2_strlen 2B52  
                                                  copy_data0 20FA  
                                                  copy_data1 211A  
                                                   i2fputc@c 0001  
                                                   i2fputs@c 000E  
                                                   i2fputs@i 000F  
                                                   i2fputs@s 000A  
                                               _setFrequency 103A  
                                                   _BusyXLCD 2C52  
                                               ??_readEEPROM 0080  
                                           __size_ofi2_fputc 00AC  
                                           __size_ofi2_fputs 0042  
                                             ??_DelayPORXLCD 0080  
                                           __size_ofi2_putch 0006  
                                                 _EECON1bits 000FA6  
                                                   _OpenXLCD 1B3C  
                                                   __Hrparam 0000  
                                             i2setData@data0 0003  
                                             i2setData@data1 0004  
                                                 vfprintf@ap 00D7  
                                                   __Lrparam 0000  
                                                 vfprintf@fp 00D3  
                                         __end_of_lcdVumeter 2050  
                                           __size_of___aodiv 015E  
                                           __size_of___aomod 013A  
                                      i2___wmul@multiplicand 0003  
                                                 ?_updateLCD 0001  
                                                 ?_vfpfcnvrt 00BF  
                                           __size_of___lwdiv 0062  
                                           __size_of___lwmod 0052  
                                            ___aodiv@divisor 0088  
                                           __size_of_codFreq 001C  
                                            ___aodiv@counter 0090  
                                           __size_of_getData 0068  
                                     __end_ofi2_SetDDRamAddr 293A  
                                            i2_DelayFor18TCY 2CE6  
                                            ?_writeFrequency 0082  
                                                 sprintf@fmt 00DD  
                                           ?i2_WriteDataXLCD 0001  
                                           __size_of_initLCD 004A  
                                         __end_of_readEEPROM 2CD6  
                                           __size_of_isdigit 003A  
                                            ___lwdiv@divisor 0082  
                                           __size_of_setData 0076  
                                           __size_of_isspace 0046  
                                            ___lwdiv@counter 0086  
                                                   __ptext10 2566  
                                                   __ptext11 231C  
                                                   __ptext20 179C  
                                                   __ptext12 065C  
                                                   __ptext21 14E2  
                                                   __ptext13 0B62  
                                                   __ptext30 2CC0  
                                                   __ptext22 1212  
                                                   __ptext14 1D00  
                                                   __ptext31 260E  
                                                   __ptext23 286C  
                                                   __ptext15 2B1C  
                                                   __ptext32 2702  
                                                   __ptext24 2A72  
                                                   __ptext16 2826  
                                                   __ptext41 2050  
                                                   __ptext33 2C34  
                                                   __ptext25 21C6  
                                                   __ptext17 1DAE  
                                                   __ptext50 2CFC  
                                                   __ptext42 2660  
                                                   __ptext34 1B3C  
                                                   __ptext26 2B84  
                                                   __ptext18 2CF6  
                                                   __ptext51 29FC  
                                                   __ptext43 244E  
                                                   __ptext35 27DE  
                                                   __ptext27 250E  
                                                   __ptext19 29BE  
                                                   __ptext60 2CA8  
                                                   __ptext52 18D6  
                                                   __ptext44 08E2  
                                                   __ptext36 274C  
                                                   __ptext28 2BB2  
                                                   __ptext61 26B2  
                                                   __ptext53 1640  
                                                   __ptext45 0DCE  
                                                   __ptext37 2CD6  
                                                   __ptext29 2384  
                                                   __ptext62 24AE  
                                                   __ptext54 137C  
                                                   __ptext46 1F08  
                                                   __ptext38 2C8C  
                                                   __ptext63 28F6  
                                                   __ptext55 28B2  
                                                   __ptext47 2B52  
                                                   __ptext39 2C52  
                                                   __ptext64 2CE6  
                                                   __ptext56 2AAC  
                                                   __ptext48 293A  
                                                   __ptext65 223C  
                                                   __ptext57 2C0A  
                                                   __ptext49 1E5C  
                                                   __ptext66 22AC  
                                                   __ptext58 2AE4  
                                                   __ptext67 2BDE  
                                                   __ptext59 297C  
                                       __end_of_WriteCmdXLCD 2826  
                                           __size_of_sprintf 0056  
                                           __size_of_vumeter 0078  
                                              __size_of_beep 0058  
                                                   codFreq@f 0080  
                                              __size_of_atoi 016A  
                                              __size_of_main 012E  
                                              __size_of_dtoa 026C  
                                              __size_of_time 0070  
                                            ??i2_writeEEPROM 0002  
                                              ??_writeEEPROM 0081  
                                                   int$flags 007F  
                                                   _putsXLCD 2A38  
                                                   _vfprintf 231C  
                                            writeFrequency@f 0082  
                                            writeFrequency@i 008B  
                                            writeFrequency@r 0089  
                                           ___aomod@dividend 0080  
                                                getData@aux0 0083  
                                                getData@aux1 0084  
                                            ?i2_SetDDRamAddr 0001  
                                             _vfpfcnvrt$1128 00D1  
                                                 _INTCONbits 000FF2  
                                              i2setData@full 0005  
                                                   isdigit@c 0080  
                                                   intlevel2 2D0A  
                                                  sprintf@ap 00E5  
                                           ___lwmod@dividend 0080  
                                                   isspace@c 0080  
                                          i2writeEEPROM@data 0002  
                                      __end_of_DelayFor18TCY 2CE6  
                                    __end_ofi2_DelayFor18TCY 2CF6  
                                            ___aomod@divisor 0088  
                                              ??i2_vfpfcnvrt 0046  
                                                ??_updateLCD 006E  
                                                ??_vfpfcnvrt 00C5  
                                            ___aomod@counter 0090  
                                        __end_of_writeEEPROM 2BB2  
                                                   sprintf@f 00E7  
                                                   sprintf@s 00DB  
                                       __end_of_DelayPORXLCD 2CA8  
                                       i2SetDDRamAddr@DDaddr 0001  
                                            ___lwmod@divisor 0082  
                                            ___lwmod@counter 0084  
                                             i2_isspace$1603 0007  
                                               ___aodiv@sign 0091  
                                                 i2_BusyXLCD 2CA8  
                                         i2___aodiv@dividend 0001  
                                               ___aomod@sign 0091  
