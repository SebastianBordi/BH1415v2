

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Wed Aug 21 14:06:21 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	16F886
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	eeprom_data,global,class=EEDATA,space=3,delta=2
     5                           	psect	idataBANK0,global,class=CODE,delta=2
     6                           	psect	strings,global,class=STRING,delta=2
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	inittext,global,class=CODE,delta=2
    12                           	psect	clrtext,global,class=CODE,delta=2
    13                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    14                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    16                           	psect	maintext,global,class=CODE,split=1,delta=2
    17                           	psect	text1,local,class=CODE,merge=1,delta=2
    18                           	psect	text2,local,class=CODE,merge=1,delta=2
    19                           	psect	text3,local,class=CODE,merge=1,delta=2
    20                           	psect	text4,local,class=CODE,merge=1,delta=2
    21                           	psect	text5,local,class=CODE,merge=1,delta=2
    22                           	psect	text6,local,class=CODE,merge=1,delta=2,group=2
    23                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    24                           	psect	text8,local,class=CODE,merge=1,delta=2,group=1
    25                           	psect	text9,local,class=CODE,merge=1,delta=2
    26                           	psect	text10,local,class=CODE,merge=1,delta=2
    27                           	psect	text11,local,class=CODE,merge=1,delta=2
    28                           	psect	text12,local,class=CODE,merge=1,delta=2,group=1
    29                           	psect	text13,local,class=CODE,merge=1,delta=2
    30                           	psect	text14,local,class=CODE,merge=1,delta=2
    31                           	psect	text15,local,class=CODE,merge=1,delta=2
    32                           	psect	text16,local,class=CODE,merge=1,delta=2
    33                           	psect	text17,local,class=CODE,merge=1,delta=2
    34                           	psect	text18,local,class=CODE,merge=1,delta=2
    35                           	psect	text19,local,class=CODE,merge=1,delta=2
    36                           	psect	text20,local,class=CODE,merge=1,delta=2
    37                           	psect	text21,local,class=CODE,merge=1,delta=2
    38                           	psect	text22,local,class=CODE,merge=1,delta=2
    39                           	psect	text23,local,class=CODE,merge=1,delta=2
    40                           	psect	text24,local,class=CODE,merge=1,delta=2
    41                           	psect	text25,local,class=CODE,merge=1,delta=2
    42                           	psect	text26,local,class=CODE,merge=1,delta=2
    43                           	psect	text27,local,class=CODE,merge=1,delta=2
    44                           	psect	intentry,global,class=CODE,delta=2
    45                           	psect	text28,local,class=CODE,merge=1,delta=2
    46                           	psect	text29,local,class=CODE,merge=1,delta=2
    47                           	psect	text30,local,class=CODE,merge=1,delta=2
    48                           	psect	text31,local,class=CODE,merge=1,delta=2
    49                           	psect	text32,local,class=CODE,merge=1,delta=2
    50                           	psect	text33,local,class=CODE,merge=1,delta=2
    51                           	psect	text34,local,class=CODE,merge=1,delta=2
    52                           	psect	text35,local,class=CODE,merge=1,delta=2
    53                           	psect	text36,local,class=CODE,merge=1,delta=2
    54                           	psect	text37,local,class=CODE,merge=1,delta=2
    55                           	psect	text38,local,class=CODE,merge=1,delta=2
    56                           	psect	text39,local,class=CODE,merge=1,delta=2
    57                           	psect	text40,local,class=CODE,merge=1,delta=2
    58                           	psect	text41,local,class=CODE,merge=1,delta=2
    59                           	dabs	1,0x7E,2
    60  0000                     
    61                           ; Version 2.05
    62                           ; Generated 20/12/2018 GMT
    63                           ; 
    64                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    65                           ; All rights reserved.
    66                           ; 
    67                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    68                           ; 
    69                           ; Redistribution and use in source and binary forms, with or without modification, are
    70                           ; permitted provided that the following conditions are met:
    71                           ; 
    72                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    73                           ;        conditions and the following disclaimer.
    74                           ; 
    75                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    76                           ;        of conditions and the following disclaimer in the documentation and/or other
    77                           ;        materials provided with the distribution.
    78                           ; 
    79                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    80                           ;        software without specific prior written permission.
    81                           ; 
    82                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    83                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    84                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    85                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    86                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    87                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    88                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    89                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    90                           ; 
    91                           ; 
    92                           ; Code-generator required, PIC16F886 Definitions
    93                           ; 
    94                           ; SFR Addresses
    95  0000                     	;# 
    96  0001                     	;# 
    97  0002                     	;# 
    98  0003                     	;# 
    99  0004                     	;# 
   100  0005                     	;# 
   101  0006                     	;# 
   102  0007                     	;# 
   103  0009                     	;# 
   104  000A                     	;# 
   105  000B                     	;# 
   106  000C                     	;# 
   107  000D                     	;# 
   108  000E                     	;# 
   109  000E                     	;# 
   110  000F                     	;# 
   111  0010                     	;# 
   112  0011                     	;# 
   113  0012                     	;# 
   114  0013                     	;# 
   115  0014                     	;# 
   116  0015                     	;# 
   117  0015                     	;# 
   118  0016                     	;# 
   119  0017                     	;# 
   120  0018                     	;# 
   121  0019                     	;# 
   122  001A                     	;# 
   123  001B                     	;# 
   124  001B                     	;# 
   125  001C                     	;# 
   126  001D                     	;# 
   127  001E                     	;# 
   128  001F                     	;# 
   129  0081                     	;# 
   130  0085                     	;# 
   131  0086                     	;# 
   132  0087                     	;# 
   133  0089                     	;# 
   134  008C                     	;# 
   135  008D                     	;# 
   136  008E                     	;# 
   137  008F                     	;# 
   138  0090                     	;# 
   139  0091                     	;# 
   140  0092                     	;# 
   141  0093                     	;# 
   142  0093                     	;# 
   143  0093                     	;# 
   144  0094                     	;# 
   145  0095                     	;# 
   146  0096                     	;# 
   147  0097                     	;# 
   148  0098                     	;# 
   149  0099                     	;# 
   150  009A                     	;# 
   151  009B                     	;# 
   152  009C                     	;# 
   153  009D                     	;# 
   154  009E                     	;# 
   155  009F                     	;# 
   156  0105                     	;# 
   157  0107                     	;# 
   158  0108                     	;# 
   159  0109                     	;# 
   160  010C                     	;# 
   161  010C                     	;# 
   162  010D                     	;# 
   163  010E                     	;# 
   164  010F                     	;# 
   165  0185                     	;# 
   166  0187                     	;# 
   167  0188                     	;# 
   168  0189                     	;# 
   169  018C                     	;# 
   170  018D                     	;# 
   171                           
   172                           	psect	eeprom_data
   173  0000  007E 0003 0000 0000 0000 0000 0001 0000 	db	126,3,0,0,0,0,1,0	;# 
   174  0000                     	;# 
   175  0001                     	;# 
   176  0002                     	;# 
   177  0003                     	;# 
   178  0004                     	;# 
   179  0005                     	;# 
   180  0006                     	;# 
   181  0007                     	;# 
   182  0009                     	;# 
   183  000A                     	;# 
   184  000B                     	;# 
   185  000C                     	;# 
   186  000D                     	;# 
   187  000E                     	;# 
   188  000E                     	;# 
   189  000F                     	;# 
   190  0010                     	;# 
   191  0011                     	;# 
   192  0012                     	;# 
   193  0013                     	;# 
   194  0014                     	;# 
   195  0015                     	;# 
   196  0015                     	;# 
   197  0016                     	;# 
   198  0017                     	;# 
   199  0018                     	;# 
   200  0019                     	;# 
   201  001A                     	;# 
   202  001B                     	;# 
   203  001B                     	;# 
   204  001C                     	;# 
   205  001D                     	;# 
   206  001E                     	;# 
   207  001F                     	;# 
   208  0081                     	;# 
   209  0085                     	;# 
   210  0086                     	;# 
   211  0087                     	;# 
   212  0089                     	;# 
   213  008C                     	;# 
   214  008D                     	;# 
   215  008E                     	;# 
   216  008F                     	;# 
   217  0090                     	;# 
   218  0091                     	;# 
   219  0092                     	;# 
   220  0093                     	;# 
   221  0093                     	;# 
   222  0093                     	;# 
   223  0094                     	;# 
   224  0095                     	;# 
   225  0096                     	;# 
   226  0097                     	;# 
   227  0098                     	;# 
   228  0099                     	;# 
   229  009A                     	;# 
   230  009B                     	;# 
   231  009C                     	;# 
   232  009D                     	;# 
   233  009E                     	;# 
   234  009F                     	;# 
   235  0105                     	;# 
   236  0107                     	;# 
   237  0108                     	;# 
   238  0109                     	;# 
   239  010C                     	;# 
   240  010C                     	;# 
   241  010D                     	;# 
   242  010E                     	;# 
   243  010F                     	;# 
   244  0185                     	;# 
   245  0187                     	;# 
   246  0188                     	;# 
   247  0189                     	;# 
   248  018C                     	;# 
   249  018D                     	;# 
   250  0008  007E 0003 0000 0000 0000 0000 0001 0000 	db	126,3,0,0,0,0,1,0	;# 
   251  0000                     	;# 
   252  0001                     	;# 
   253  0002                     	;# 
   254  0003                     	;# 
   255  0004                     	;# 
   256  0005                     	;# 
   257  0006                     	;# 
   258  0007                     	;# 
   259  0009                     	;# 
   260  000A                     	;# 
   261  000B                     	;# 
   262  000C                     	;# 
   263  000D                     	;# 
   264  000E                     	;# 
   265  000E                     	;# 
   266  000F                     	;# 
   267  0010                     	;# 
   268  0011                     	;# 
   269  0012                     	;# 
   270  0013                     	;# 
   271  0014                     	;# 
   272  0015                     	;# 
   273  0015                     	;# 
   274  0016                     	;# 
   275  0017                     	;# 
   276  0018                     	;# 
   277  0019                     	;# 
   278  001A                     	;# 
   279  001B                     	;# 
   280  001B                     	;# 
   281  001C                     	;# 
   282  001D                     	;# 
   283  001E                     	;# 
   284  001F                     	;# 
   285  0081                     	;# 
   286  0085                     	;# 
   287  0086                     	;# 
   288  0087                     	;# 
   289  0089                     	;# 
   290  008C                     	;# 
   291  008D                     	;# 
   292  008E                     	;# 
   293  008F                     	;# 
   294  0090                     	;# 
   295  0091                     	;# 
   296  0092                     	;# 
   297  0093                     	;# 
   298  0093                     	;# 
   299  0093                     	;# 
   300  0094                     	;# 
   301  0095                     	;# 
   302  0096                     	;# 
   303  0097                     	;# 
   304  0098                     	;# 
   305  0099                     	;# 
   306  009A                     	;# 
   307  009B                     	;# 
   308  009C                     	;# 
   309  009D                     	;# 
   310  009E                     	;# 
   311  009F                     	;# 
   312  0105                     	;# 
   313  0107                     	;# 
   314  0108                     	;# 
   315  0109                     	;# 
   316  010C                     	;# 
   317  010C                     	;# 
   318  010D                     	;# 
   319  010E                     	;# 
   320  010F                     	;# 
   321  0185                     	;# 
   322  0187                     	;# 
   323  0188                     	;# 
   324  0189                     	;# 
   325  018C                     	;# 
   326  018D                     	;# 
   327  0010  007E 0003 0000 0000 0000 0000 0001 0000 	db	126,3,0,0,0,0,1,0	;# 
   328  0000                     	;# 
   329  0001                     	;# 
   330  0002                     	;# 
   331  0003                     	;# 
   332  0004                     	;# 
   333  0005                     	;# 
   334  0006                     	;# 
   335  0007                     	;# 
   336  0009                     	;# 
   337  000A                     	;# 
   338  000B                     	;# 
   339  000C                     	;# 
   340  000D                     	;# 
   341  000E                     	;# 
   342  000E                     	;# 
   343  000F                     	;# 
   344  0010                     	;# 
   345  0011                     	;# 
   346  0012                     	;# 
   347  0013                     	;# 
   348  0014                     	;# 
   349  0015                     	;# 
   350  0015                     	;# 
   351  0016                     	;# 
   352  0017                     	;# 
   353  0018                     	;# 
   354  0019                     	;# 
   355  001A                     	;# 
   356  001B                     	;# 
   357  001B                     	;# 
   358  001C                     	;# 
   359  001D                     	;# 
   360  001E                     	;# 
   361  001F                     	;# 
   362  0081                     	;# 
   363  0085                     	;# 
   364  0086                     	;# 
   365  0087                     	;# 
   366  0089                     	;# 
   367  008C                     	;# 
   368  008D                     	;# 
   369  008E                     	;# 
   370  008F                     	;# 
   371  0090                     	;# 
   372  0091                     	;# 
   373  0092                     	;# 
   374  0093                     	;# 
   375  0093                     	;# 
   376  0093                     	;# 
   377  0094                     	;# 
   378  0095                     	;# 
   379  0096                     	;# 
   380  0097                     	;# 
   381  0098                     	;# 
   382  0099                     	;# 
   383  009A                     	;# 
   384  009B                     	;# 
   385  009C                     	;# 
   386  009D                     	;# 
   387  009E                     	;# 
   388  009F                     	;# 
   389  0105                     	;# 
   390  0107                     	;# 
   391  0108                     	;# 
   392  0109                     	;# 
   393  010C                     	;# 
   394  010C                     	;# 
   395  010D                     	;# 
   396  010E                     	;# 
   397  010F                     	;# 
   398  0185                     	;# 
   399  0187                     	;# 
   400  0188                     	;# 
   401  0189                     	;# 
   402  018C                     	;# 
   403  018D                     	;# 
   404  0018  007E 0003 0000 0000 0000 0000 0001 0000 	db	126,3,0,0,0,0,1,0	;# 
   405  0000                     	;# 
   406  0001                     	;# 
   407  0002                     	;# 
   408  0003                     	;# 
   409  0004                     	;# 
   410  0005                     	;# 
   411  0006                     	;# 
   412  0007                     	;# 
   413  0009                     	;# 
   414  000A                     	;# 
   415  000B                     	;# 
   416  000C                     	;# 
   417  000D                     	;# 
   418  000E                     	;# 
   419  000E                     	;# 
   420  000F                     	;# 
   421  0010                     	;# 
   422  0011                     	;# 
   423  0012                     	;# 
   424  0013                     	;# 
   425  0014                     	;# 
   426  0015                     	;# 
   427  0015                     	;# 
   428  0016                     	;# 
   429  0017                     	;# 
   430  0018                     	;# 
   431  0019                     	;# 
   432  001A                     	;# 
   433  001B                     	;# 
   434  001B                     	;# 
   435  001C                     	;# 
   436  001D                     	;# 
   437  001E                     	;# 
   438  001F                     	;# 
   439  0081                     	;# 
   440  0085                     	;# 
   441  0086                     	;# 
   442  0087                     	;# 
   443  0089                     	;# 
   444  008C                     	;# 
   445  008D                     	;# 
   446  008E                     	;# 
   447  008F                     	;# 
   448  0090                     	;# 
   449  0091                     	;# 
   450  0092                     	;# 
   451  0093                     	;# 
   452  0093                     	;# 
   453  0093                     	;# 
   454  0094                     	;# 
   455  0095                     	;# 
   456  0096                     	;# 
   457  0097                     	;# 
   458  0098                     	;# 
   459  0099                     	;# 
   460  009A                     	;# 
   461  009B                     	;# 
   462  009C                     	;# 
   463  009D                     	;# 
   464  009E                     	;# 
   465  009F                     	;# 
   466  0105                     	;# 
   467  0107                     	;# 
   468  0108                     	;# 
   469  0109                     	;# 
   470  010C                     	;# 
   471  010C                     	;# 
   472  010D                     	;# 
   473  010E                     	;# 
   474  010F                     	;# 
   475  0185                     	;# 
   476  0187                     	;# 
   477  0188                     	;# 
   478  0189                     	;# 
   479  018C                     	;# 
   480  018D                     	;# 
   481  0020  007E 0003 0000 0000 0000 0000 0001 0000 	db	126,3,0,0,0,0,1,0	;# 
   482  0000                     	;# 
   483  0001                     	;# 
   484  0002                     	;# 
   485  0003                     	;# 
   486  0004                     	;# 
   487  0005                     	;# 
   488  0006                     	;# 
   489  0007                     	;# 
   490  0009                     	;# 
   491  000A                     	;# 
   492  000B                     	;# 
   493  000C                     	;# 
   494  000D                     	;# 
   495  000E                     	;# 
   496  000E                     	;# 
   497  000F                     	;# 
   498  0010                     	;# 
   499  0011                     	;# 
   500  0012                     	;# 
   501  0013                     	;# 
   502  0014                     	;# 
   503  0015                     	;# 
   504  0015                     	;# 
   505  0016                     	;# 
   506  0017                     	;# 
   507  0018                     	;# 
   508  0019                     	;# 
   509  001A                     	;# 
   510  001B                     	;# 
   511  001B                     	;# 
   512  001C                     	;# 
   513  001D                     	;# 
   514  001E                     	;# 
   515  001F                     	;# 
   516  0081                     	;# 
   517  0085                     	;# 
   518  0086                     	;# 
   519  0087                     	;# 
   520  0089                     	;# 
   521  008C                     	;# 
   522  008D                     	;# 
   523  008E                     	;# 
   524  008F                     	;# 
   525  0090                     	;# 
   526  0091                     	;# 
   527  0092                     	;# 
   528  0093                     	;# 
   529  0093                     	;# 
   530  0093                     	;# 
   531  0094                     	;# 
   532  0095                     	;# 
   533  0096                     	;# 
   534  0097                     	;# 
   535  0098                     	;# 
   536  0099                     	;# 
   537  009A                     	;# 
   538  009B                     	;# 
   539  009C                     	;# 
   540  009D                     	;# 
   541  009E                     	;# 
   542  009F                     	;# 
   543  0105                     	;# 
   544  0107                     	;# 
   545  0108                     	;# 
   546  0109                     	;# 
   547  010C                     	;# 
   548  010C                     	;# 
   549  010D                     	;# 
   550  010E                     	;# 
   551  010F                     	;# 
   552  0185                     	;# 
   553  0187                     	;# 
   554  0188                     	;# 
   555  0189                     	;# 
   556  018C                     	;# 
   557  018D                     	;# 
   558                           
   559                           	psect	idataBANK0
   560  0A7C                     __pidataBANK0:	
   561                           
   562                           ;initializer for _stereoEnable
   563  0A7C  3401               	retlw	1
   564                           
   565                           ;initializer for _minutes
   566  0A7D  340F               	retlw	15
   567                           
   568                           ;initializer for _hours
   569  0A7E  3416               	retlw	22
   570                           
   571                           ;initializer for _days
   572  0A7F  3413               	retlw	19
   573                           
   574                           ;initializer for _months
   575  0A80  3403               	retlw	3
   576                           
   577                           ;initializer for _prTmr1H
   578  0A81  343C               	retlw	60
   579                           
   580                           ;initializer for _prTmr1L
   581  0A82  34B0               	retlw	176
   582                           
   583                           	psect	strings
   584  063D                     __pstrings:	
   585  063D                     stringtab:	
   586  063D                     __stringtab:	
   587  063D                     stringcode:	
   588                           ;	String table - string pointers are 1 byte each
   589                           
   590  063D                     stringdir:	
   591  063D  3006               	movlw	high stringdir
   592  063E  008A               	movwf	10
   593  063F  0804               	movf	4,w
   594  0640  0A84               	incf	4,f
   595  0641  0782               	addwf	2,f
   596  0642                     __stringbase:	
   597  0642  3400               	retlw	0
   598  0643                     __end_of__stringtab:	
   599  0643                     _dpowers:	
   600  0643  3401               	retlw	1
   601  0644  3400               	retlw	0
   602  0645  340A               	retlw	10
   603  0646  3400               	retlw	0
   604  0647  3464               	retlw	100
   605  0648  3400               	retlw	0
   606  0649  34E8               	retlw	232
   607  064A  3403               	retlw	3
   608  064B  3410               	retlw	16
   609  064C  3427               	retlw	39
   610  064D                     __end_of_dpowers:	
   611  064D                     _FINAL_DAY:	
   612  064D  340D               	retlw	13
   613  064E                     __end_of_FINAL_DAY:	
   614  064E                     _FINAL_MONTH:	
   615  064E  3406               	retlw	6
   616  064F                     __end_of_FINAL_MONTH:	
   617  064F                     _UN_BLOCKED:	
   618  064F  3401               	retlw	1
   619  0650                     __end_of_UN_BLOCKED:	
   620  0650                     _BLOCKED:	
   621  0650  3400               	retlw	0
   622  0651                     __end_of_BLOCKED:	
   623  0007                     _PORTCbits	set	7
   624  0006                     _PORTBbits	set	6
   625  000E                     _TMR1L	set	14
   626  000F                     _TMR1H	set	15
   627  000C                     _PIR1bits	set	12
   628  0010                     _T1CONbits	set	16
   629  001F                     _ADCON0	set	31
   630  0010                     _T1CON	set	16
   631  0007                     _PORTC	set	7
   632  0006                     _PORTB	set	6
   633  0005                     _PORTA	set	5
   634  000B                     _INTCON	set	11
   635  0005                     _PORTAbits	set	5
   636  000D                     _PIR2bits	set	13
   637  000B                     _INTCONbits	set	11
   638  0086                     _TRISBbits	set	134
   639  009F                     _ADCON1	set	159
   640  0087                     _TRISC	set	135
   641  0086                     _TRISB	set	134
   642  0085                     _TRISA	set	133
   643  008C                     _PIE1	set	140
   644  010C                     _EEDATA	set	268
   645  010D                     _EEADR	set	269
   646  0189                     _ANSELH	set	393
   647  0188                     _ANSEL	set	392
   648  018D                     _EECON2	set	397
   649  018C                     _EECON1bits	set	396
   650  0651                     STR_5:	
   651  0651  3446               	retlw	70	;'F'
   652  0652  3452               	retlw	82	;'R'
   653  0653  3445               	retlw	69	;'E'
   654  0654  3451               	retlw	81	;'Q'
   655  0655  342E               	retlw	46	;'.'
   656  0656  3420               	retlw	32	;' '
   657  0657  3420               	retlw	32	;' '
   658  0658  3425               	retlw	37	;'%'
   659  0659  3433               	retlw	51	;'3'
   660  065A  3464               	retlw	100	;'d'
   661  065B  342E               	retlw	46	;'.'
   662  065C  3425               	retlw	37	;'%'
   663  065D  3464               	retlw	100	;'d'
   664  065E  3420               	retlw	32	;' '
   665  065F  344D               	retlw	77	;'M'
   666  0660  3448               	retlw	72	;'H'
   667  0661  347A               	retlw	122	;'z'
   668  0662  3400               	retlw	0
   669  0663                     STR_1:	
   670  0663  344C               	retlw	76	;'L'
   671  0664  344F               	retlw	79	;'O'
   672  0665  3443               	retlw	67	;'C'
   673  0666  344B               	retlw	75	;'K'
   674  0667  3449               	retlw	73	;'I'
   675  0668  344E               	retlw	78	;'N'
   676  0669  3447               	retlw	71	;'G'
   677  066A  3420               	retlw	32	;' '
   678  066B  3420               	retlw	32	;' '
   679  066C  3420               	retlw	32	;' '
   680  066D  3420               	retlw	32	;' '
   681  066E  3420               	retlw	32	;' '
   682  066F  3420               	retlw	32	;' '
   683  0670  3420               	retlw	32	;' '
   684  0671  3420               	retlw	32	;' '
   685  0672  3420               	retlw	32	;' '
   686  0673  3400               	retlw	0
   687  0674                     STR_4:	
   688  0674  3453               	retlw	83	;'S'
   689  0675  3445               	retlw	69	;'E'
   690  0676  3454               	retlw	84	;'T'
   691  0677  3420               	retlw	32	;' '
   692  0678  3420               	retlw	32	;' '
   693  0679  3420               	retlw	32	;' '
   694  067A  3446               	retlw	70	;'F'
   695  067B  3452               	retlw	82	;'R'
   696  067C  3445               	retlw	69	;'E'
   697  067D  3451               	retlw	81	;'Q'
   698  067E  3455               	retlw	85	;'U'
   699  067F  3445               	retlw	69	;'E'
   700  0680  344E               	retlw	78	;'N'
   701  0681  3443               	retlw	67	;'C'
   702  0682  3459               	retlw	89	;'Y'
   703  0683  3420               	retlw	32	;' '
   704  0684  3400               	retlw	0
   705  0685                     STR_3:	
   706  0685  3441               	retlw	65	;'A'
   707  0686  344D               	retlw	77	;'M'
   708  0687  3450               	retlw	80	;'P'
   709  0688  3452               	retlw	82	;'R'
   710  0689  344F               	retlw	79	;'O'
   711  068A  3420               	retlw	32	;' '
   712  068B  3420               	retlw	32	;' '
   713  068C  3420               	retlw	32	;' '
   714  068D  3420               	retlw	32	;' '
   715  068E  3420               	retlw	32	;' '
   716  068F  3420               	retlw	32	;' '
   717  0690  3445               	retlw	69	;'E'
   718  0691  3458               	retlw	88	;'X'
   719  0692  342D               	retlw	45	;'-'
   720  0693  3446               	retlw	70	;'F'
   721  0694  344D               	retlw	77	;'M'
   722  0695  3400               	retlw	0
   723  0696                     STR_2:	
   724  0696  3420               	retlw	32	;' '
   725  0697  3420               	retlw	32	;' '
   726  0698  3420               	retlw	32	;' '
   727  0699  3420               	retlw	32	;' '
   728  069A  3420               	retlw	32	;' '
   729  069B  3420               	retlw	32	;' '
   730  069C  3420               	retlw	32	;' '
   731  069D  3446               	retlw	70	;'F'
   732  069E  3452               	retlw	82	;'R'
   733  069F  3445               	retlw	69	;'E'
   734  06A0  3451               	retlw	81	;'Q'
   735  06A1  3455               	retlw	85	;'U'
   736  06A2  3445               	retlw	69	;'E'
   737  06A3  344E               	retlw	78	;'N'
   738  06A4  3443               	retlw	67	;'C'
   739  06A5  3459               	retlw	89	;'Y'
   740  06A6  3400               	retlw	0
   741                           
   742                           ; #config settings
   743  0000                     
   744                           	psect	cinit
   745  0015                     start_initialization:	
   746  0015                     __initialization:	
   747                           
   748                           ; Initialize objects allocated to BANK0
   749  0015  1383               	bcf	3,7	;select IRP bank0
   750  0016  3053               	movlw	low (__pdataBANK0+7)
   751  0017  00FD               	movwf	btemp+-1
   752  0018  300A               	movlw	high __pidataBANK0
   753  0019  00FE               	movwf	btemp
   754  001A  307C               	movlw	low __pidataBANK0
   755  001B  00FF               	movwf	btemp+1
   756  001C  304C               	movlw	low __pdataBANK0
   757  001D  0084               	movwf	4
   758  001E  120A  158A  22E8  120A  118A  	fcall	init_ram0
   759                           
   760                           ; Clear objects allocated to BANK1
   761  0023  30A0               	movlw	low __pbssBANK1
   762  0024  0084               	movwf	4
   763  0025  30C2               	movlw	low (__pbssBANK1+34)
   764  0026  120A  158A  2283  120A  118A  	fcall	clear_ram0
   765                           
   766                           ; Clear objects allocated to BANK0
   767  002B  3044               	movlw	low __pbssBANK0
   768  002C  0084               	movwf	4
   769  002D  304C               	movlw	low (__pbssBANK0+8)
   770  002E  120A  158A  2283   	fcall	clear_ram0
   771  0031                     end_of_initialization:	
   772                           ;End of C runtime variable initialization code
   773                           
   774  0031                     __end_of__initialization:	
   775  0031  0183               	clrf	3
   776  0032  120A  118A  2C2A   	ljmp	_main	;jump to C main() function
   777                           
   778                           	psect	bssBANK0
   779  0044                     __pbssBANK0:	
   780  0044                     _frequency:	
   781  0044                     	ds	2
   782  0046                     _level:	
   783  0046                     	ds	1
   784  0047                     _isOnConfig:	
   785  0047                     	ds	1
   786  0048                     _functionalStat:	
   787  0048                     	ds	1
   788  0049                     _hundredMiliSeconds:	
   789  0049                     	ds	1
   790  004A                     _seconds:	
   791  004A                     	ds	1
   792  004B                     _cntTmr1:	
   793  004B                     	ds	1
   794                           
   795                           	psect	dataBANK0
   796  004C                     __pdataBANK0:	
   797  004C                     _stereoEnable:	
   798  004C                     	ds	1
   799  004D                     _minutes:	
   800  004D                     	ds	1
   801  004E                     _hours:	
   802  004E                     	ds	1
   803  004F                     _days:	
   804  004F                     	ds	1
   805  0050                     _months:	
   806  0050                     	ds	1
   807  0051                     _prTmr1H:	
   808  0051                     	ds	1
   809  0052                     _prTmr1L:	
   810  0052                     	ds	1
   811                           
   812                           	psect	bssBANK1
   813  00A0                     __pbssBANK1:	
   814  00A0                     _lineTwo:	
   815  00A0                     	ds	17
   816  00B1                     _lineOne:	
   817  00B1                     	ds	17
   818                           
   819                           	psect	inittext
   820  0AE4                     init_fetch0:	
   821                           ;	Called with low address in FSR and high address in W
   822                           
   823  0AE4  087E               	movf	126,w
   824  0AE5  008A               	movwf	10
   825  0AE6  087F               	movf	127,w
   826  0AE7  0082               	movwf	2
   827  0AE8                     init_ram0:	
   828                           ;Called with:
   829                           ;	high address of idata address in btemp 
   830                           ;	low address of idata address in btemp+1 
   831                           ;	low address of data in FSR
   832                           ;	high address + 1 of data in btemp-1
   833                           
   834  0AE8  22E4  120A  158A   	fcall	init_fetch0
   835  0AEB  0080               	movwf	0
   836  0AEC  0A84               	incf	4,f
   837  0AED  0804               	movf	4,w
   838  0AEE  067D               	xorwf	125,w
   839  0AEF  1903               	btfsc	3,2
   840  0AF0  3400               	retlw	0
   841  0AF1  0AFF               	incf	127,f
   842  0AF2  1903               	btfsc	3,2
   843  0AF3  0AFE               	incf	126,f
   844  0AF4  2AE8               	goto	init_ram0
   845                           
   846                           	psect	clrtext
   847  0A83                     clear_ram0:	
   848                           ;	Called with FSR containing the base address, and
   849                           ;	W with the last address+1
   850                           
   851  0A83  0064               	clrwdt	;clear the watchdog before getting into this loop
   852  0A84                     clrloop0:	
   853  0A84  0180               	clrf	0	;clear RAM location pointed to by FSR
   854  0A85  0A84               	incf	4,f	;increment pointer
   855  0A86  0604               	xorwf	4,w	;XOR with final address
   856  0A87  1903               	btfsc	3,2	;have we reached the end yet?
   857  0A88  3400               	retlw	0	;all done for this memory range, return
   858  0A89  0604               	xorwf	4,w	;XOR again to restore value
   859  0A8A  2A84               	goto	clrloop0	;do the next byte
   860                           
   861                           	psect	cstackBANK1
   862  00C2                     __pcstackBANK1:	
   863  00C2                     ?_beep:	
   864  00C2                     ??_initLCD:	
   865                           ; 1 bytes @ 0x0
   866                           
   867  00C2                     ___lwdiv@counter:	
   868                           ; 1 bytes @ 0x0
   869                           
   870  00C2                     beep@ms:	
   871                           ; 1 bytes @ 0x0
   872                           
   873  00C2                     writeFrequency@buffer:	
   874                           ; 2 bytes @ 0x0
   875                           
   876                           
   877                           ; 2 bytes @ 0x0
   878  00C2                     	ds	1
   879  00C3                     ___lwdiv@quotient:	
   880                           
   881                           ; 2 bytes @ 0x1
   882  00C3                     	ds	1
   883  00C4                     writeFrequency@r:	
   884                           
   885                           ; 2 bytes @ 0x2
   886  00C4                     	ds	1
   887  00C5                     ?___lwmod:	
   888  00C5                     ___lwmod@divisor:	
   889                           ; 2 bytes @ 0x3
   890                           
   891                           
   892                           ; 2 bytes @ 0x3
   893  00C5                     	ds	1
   894  00C6                     writeFrequency@i:	
   895                           
   896                           ; 1 bytes @ 0x4
   897  00C6                     	ds	1
   898  00C7                     ?_setTransStat:	
   899  00C7                     setTransStat@stat:	
   900                           ; 1 bytes @ 0x5
   901                           
   902  00C7                     ___lwmod@dividend:	
   903                           ; 2 bytes @ 0x5
   904                           
   905                           
   906                           ; 2 bytes @ 0x5
   907  00C7                     	ds	2
   908  00C9                     ??_setTransStat:	
   909  00C9                     ?_sprintf:	
   910                           ; 1 bytes @ 0x7
   911                           
   912  00C9                     sprintf@f:	
   913                           ; 2 bytes @ 0x7
   914                           
   915                           
   916                           ; 1 bytes @ 0x7
   917  00C9                     	ds	5
   918  00CE                     ??_sprintf:	
   919                           
   920                           ; 1 bytes @ 0xC
   921  00CE                     	ds	3
   922  00D1                     sprintf@ap:	
   923                           
   924                           ; 1 bytes @ 0xF
   925  00D1                     	ds	1
   926  00D2                     sprintf@prec:	
   927                           
   928                           ; 1 bytes @ 0x10
   929  00D2                     	ds	1
   930  00D3                     sprintf@flag:	
   931                           
   932                           ; 1 bytes @ 0x11
   933  00D3                     	ds	1
   934  00D4                     sprintf@val:	
   935                           
   936                           ; 2 bytes @ 0x12
   937  00D4                     	ds	2
   938  00D6                     sprintf@width:	
   939                           
   940                           ; 2 bytes @ 0x14
   941  00D6                     	ds	2
   942  00D8                     sprintf@sp:	
   943                           
   944                           ; 1 bytes @ 0x16
   945  00D8                     	ds	1
   946  00D9                     sprintf@c:	
   947                           
   948                           ; 1 bytes @ 0x17
   949  00D9                     	ds	1
   950  00DA                     ??_setFrequency:	
   951  00DA                     ??_updateLCD:	
   952                           ; 1 bytes @ 0x18
   953                           
   954                           
   955                           ; 1 bytes @ 0x18
   956  00DA                     	ds	5
   957  00DF                     updateLCD@decim:	
   958                           
   959                           ; 1 bytes @ 0x1D
   960  00DF                     	ds	1
   961  00E0                     updateLCD@integ:	
   962                           
   963                           ; 1 bytes @ 0x1E
   964  00E0                     	ds	1
   965  00E1                     ??_main:	
   966                           
   967                           ; 1 bytes @ 0x1F
   968  00E1                     	ds	2
   969  00E3                     main@i:	
   970                           
   971                           ; 1 bytes @ 0x21
   972  00E3                     	ds	1
   973                           
   974                           	psect	cstackCOMMON
   975  0070                     __pcstackCOMMON:	
   976  0070                     ?_isdigit:	
   977  0070                     ?i1_isdigit:	
   978                           ; 1 bit 
   979                           
   980  0070                     ?_config:	
   981                           ; 1 bit 
   982                           
   983  0070                     ?_setFrequency:	
   984                           ; 1 bytes @ 0x0
   985                           
   986  0070                     ?_SetDDRamAddr:	
   987                           ; 1 bytes @ 0x0
   988                           
   989  0070                     ?_putsXLCD:	
   990                           ; 1 bytes @ 0x0
   991                           
   992  0070                     ?_updateLCD:	
   993                           ; 1 bytes @ 0x0
   994                           
   995  0070                     ?_initLCD:	
   996                           ; 1 bytes @ 0x0
   997                           
   998  0070                     ?_time:	
   999                           ; 1 bytes @ 0x0
  1000                           
  1001  0070                     ?_WriteCmdXLCD:	
  1002                           ; 1 bytes @ 0x0
  1003                           
  1004  0070                     ?_BusyXLCD:	
  1005                           ; 1 bytes @ 0x0
  1006                           
  1007  0070                     ?_SendCMDLCD:	
  1008                           ; 1 bytes @ 0x0
  1009                           
  1010  0070                     ?_readEEPROM:	
  1011                           ; 1 bytes @ 0x0
  1012                           
  1013  0070                     ?_getData:	
  1014                           ; 1 bytes @ 0x0
  1015                           
  1016  0070                     ?_setData:	
  1017                           ; 1 bytes @ 0x0
  1018                           
  1019  0070                     ?_main:	
  1020                           ; 1 bytes @ 0x0
  1021                           
  1022  0070                     ?_inter:	
  1023                           ; 1 bytes @ 0x0
  1024                           
  1025  0070                     ?_DelayFor18TCY:	
  1026                           ; 1 bytes @ 0x0
  1027                           
  1028  0070                     ?_DelayPORXLCD:	
  1029                           ; 1 bytes @ 0x0
  1030                           
  1031  0070                     ?_OpenXLCD:	
  1032                           ; 1 bytes @ 0x0
  1033                           
  1034  0070                     ?_WriteDataXLCD:	
  1035                           ; 1 bytes @ 0x0
  1036                           
  1037  0070                     ?i1_writeEEPROM:	
  1038                           ; 1 bytes @ 0x0
  1039                           
  1040  0070                     ?i1_setData:	
  1041                           ; 1 bytes @ 0x0
  1042                           
  1043  0070                     ?i1_DelayFor18TCY:	
  1044                           ; 1 bytes @ 0x0
  1045                           
  1046  0070                     ??i1_DelayFor18TCY:	
  1047                           ; 1 bytes @ 0x0
  1048                           
  1049  0070                     ?i1_WriteDataXLCD:	
  1050                           ; 1 bytes @ 0x0
  1051                           
  1052  0070                     ?i1_SetDDRamAddr:	
  1053                           ; 1 bytes @ 0x0
  1054                           
  1055  0070                     ?i1_putsXLCD:	
  1056                           ; 1 bytes @ 0x0
  1057                           
  1058  0070                     ?i1_BusyXLCD:	
  1059                           ; 1 bytes @ 0x0
  1060                           
  1061  0070                     ??i1_BusyXLCD:	
  1062                           ; 1 bytes @ 0x0
  1063                           
  1064  0070                     ?i1_updateLCD:	
  1065                           ; 1 bytes @ 0x0
  1066                           
  1067  0070                     ??i1_isdigit:	
  1068                           ; 1 bytes @ 0x0
  1069                           
  1070  0070                     ?i1___wmul:	
  1071                           ; 1 bytes @ 0x0
  1072                           
  1073  0070                     ?i1___lwdiv:	
  1074                           ; 2 bytes @ 0x0
  1075                           
  1076  0070                     i1writeEEPROM@address:	
  1077                           ; 2 bytes @ 0x0
  1078                           
  1079  0070                     i1_isdigit$1068:	
  1080                           ; 1 bytes @ 0x0
  1081                           
  1082  0070                     i1___wmul@multiplier:	
  1083                           ; 1 bytes @ 0x0
  1084                           
  1085  0070                     i1___lwdiv@divisor:	
  1086                           ; 2 bytes @ 0x0
  1087                           
  1088                           
  1089                           ; 2 bytes @ 0x0
  1090  0070                     	ds	1
  1091  0071                     ??i1_writeEEPROM:	
  1092  0071                     ??i1_WriteDataXLCD:	
  1093                           ; 1 bytes @ 0x1
  1094                           
  1095  0071                     ??i1_SetDDRamAddr:	
  1096                           ; 1 bytes @ 0x1
  1097                           
  1098  0071                     i1writeEEPROM@data:	
  1099                           ; 1 bytes @ 0x1
  1100                           
  1101  0071                     i1isdigit@c:	
  1102                           ; 1 bytes @ 0x1
  1103                           
  1104                           
  1105                           ; 1 bytes @ 0x1
  1106  0071                     	ds	1
  1107  0072                     ??i1_setData:	
  1108  0072                     i1___wmul@multiplicand:	
  1109                           ; 1 bytes @ 0x2
  1110                           
  1111  0072                     i1___lwdiv@dividend:	
  1112                           ; 2 bytes @ 0x2
  1113                           
  1114                           
  1115                           ; 2 bytes @ 0x2
  1116  0072                     	ds	1
  1117  0073                     i1setData@data0:	
  1118  0073                     i1WriteDataXLCD@data:	
  1119                           ; 1 bytes @ 0x3
  1120                           
  1121  0073                     i1SetDDRamAddr@DDaddr:	
  1122                           ; 1 bytes @ 0x3
  1123                           
  1124                           
  1125                           ; 1 bytes @ 0x3
  1126  0073                     	ds	1
  1127  0074                     ??i1_putsXLCD:	
  1128  0074                     ??i1___wmul:	
  1129                           ; 1 bytes @ 0x4
  1130                           
  1131  0074                     ??i1___lwdiv:	
  1132                           ; 1 bytes @ 0x4
  1133                           
  1134  0074                     i1setData@data1:	
  1135                           ; 1 bytes @ 0x4
  1136                           
  1137  0074                     i1___wmul@product:	
  1138                           ; 1 bytes @ 0x4
  1139                           
  1140                           
  1141                           ; 2 bytes @ 0x4
  1142  0074                     	ds	1
  1143  0075                     i1setData@full:	
  1144  0075                     i1putsXLCD@buffer:	
  1145                           ; 1 bytes @ 0x5
  1146                           
  1147  0075                     i1___lwdiv@quotient:	
  1148                           ; 1 bytes @ 0x5
  1149                           
  1150                           
  1151                           ; 2 bytes @ 0x5
  1152  0075                     	ds	1
  1153  0076                     ??_time:	
  1154                           
  1155                           ; 1 bytes @ 0x6
  1156  0076                     	ds	1
  1157  0077                     i1___lwdiv@counter:	
  1158                           
  1159                           ; 1 bytes @ 0x7
  1160  0077                     	ds	1
  1161  0078                     ?i1___lwmod:	
  1162  0078                     i1___lwmod@divisor:	
  1163                           ; 2 bytes @ 0x8
  1164                           
  1165                           
  1166                           ; 2 bytes @ 0x8
  1167  0078                     	ds	2
  1168  007A                     i1___lwmod@dividend:	
  1169                           
  1170                           ; 2 bytes @ 0xA
  1171  007A                     	ds	2
  1172  007C                     ??i1___lwmod:	
  1173                           
  1174                           ; 1 bytes @ 0xC
  1175  007C                     	ds	1
  1176  007D                     i1___lwmod@counter:	
  1177                           
  1178                           ; 1 bytes @ 0xD
  1179  007D                     	ds	1
  1180                           
  1181                           	psect	cstackBANK0
  1182  0020                     __pcstackBANK0:	
  1183  0020                     ?i1_sprintf:	
  1184  0020                     i1sprintf@f:	
  1185                           ; 2 bytes @ 0x0
  1186                           
  1187                           
  1188                           ; 1 bytes @ 0x0
  1189  0020                     	ds	5
  1190  0025                     ??i1_sprintf:	
  1191                           
  1192                           ; 1 bytes @ 0x5
  1193  0025                     	ds	3
  1194  0028                     i1sprintf@ap:	
  1195                           
  1196                           ; 1 bytes @ 0x8
  1197  0028                     	ds	1
  1198  0029                     i1sprintf@prec:	
  1199                           
  1200                           ; 1 bytes @ 0x9
  1201  0029                     	ds	1
  1202  002A                     i1sprintf@flag:	
  1203                           
  1204                           ; 1 bytes @ 0xA
  1205  002A                     	ds	1
  1206  002B                     i1sprintf@val:	
  1207                           
  1208                           ; 2 bytes @ 0xB
  1209  002B                     	ds	2
  1210  002D                     i1sprintf@sp:	
  1211                           
  1212                           ; 1 bytes @ 0xD
  1213  002D                     	ds	1
  1214  002E                     i1sprintf@width:	
  1215                           
  1216                           ; 2 bytes @ 0xE
  1217  002E                     	ds	2
  1218  0030                     i1sprintf@c:	
  1219                           
  1220                           ; 1 bytes @ 0x10
  1221  0030                     	ds	1
  1222  0031                     ??i1_updateLCD:	
  1223                           
  1224                           ; 1 bytes @ 0x11
  1225  0031                     	ds	5
  1226  0036                     i1updateLCD@decim:	
  1227                           
  1228                           ; 1 bytes @ 0x16
  1229  0036                     	ds	1
  1230  0037                     i1updateLCD@integ:	
  1231                           
  1232                           ; 1 bytes @ 0x17
  1233  0037                     	ds	1
  1234  0038                     ??_inter:	
  1235                           
  1236                           ; 1 bytes @ 0x18
  1237  0038                     	ds	5
  1238  003D                     ??_BusyXLCD:	
  1239  003D                     ??_isdigit:	
  1240                           ; 1 bytes @ 0x1D
  1241                           
  1242  003D                     ??_readEEPROM:	
  1243                           ; 1 bytes @ 0x1D
  1244                           
  1245  003D                     ?_writeEEPROM:	
  1246                           ; 1 bytes @ 0x1D
  1247                           
  1248  003D                     ??_DelayFor18TCY:	
  1249                           ; 1 bytes @ 0x1D
  1250                           
  1251  003D                     ??_DelayPORXLCD:	
  1252                           ; 1 bytes @ 0x1D
  1253                           
  1254  003D                     ?_codFreq:	
  1255                           ; 1 bytes @ 0x1D
  1256                           
  1257  003D                     ?___wmul:	
  1258                           ; 2 bytes @ 0x1D
  1259                           
  1260  003D                     ?___lwdiv:	
  1261                           ; 2 bytes @ 0x1D
  1262                           
  1263  003D                     readEEPROM@address:	
  1264                           ; 2 bytes @ 0x1D
  1265                           
  1266  003D                     writeEEPROM@address:	
  1267                           ; 1 bytes @ 0x1D
  1268                           
  1269  003D                     _isdigit$1068:	
  1270                           ; 1 bytes @ 0x1D
  1271                           
  1272  003D                     codFreq@f:	
  1273                           ; 1 bytes @ 0x1D
  1274                           
  1275  003D                     ___wmul@multiplier:	
  1276                           ; 2 bytes @ 0x1D
  1277                           
  1278  003D                     ___lwdiv@divisor:	
  1279                           ; 2 bytes @ 0x1D
  1280                           
  1281                           
  1282                           ; 2 bytes @ 0x1D
  1283  003D                     	ds	1
  1284  003E                     ??_SetDDRamAddr:	
  1285  003E                     ??_WriteCmdXLCD:	
  1286                           ; 1 bytes @ 0x1E
  1287                           
  1288  003E                     ??_writeEEPROM:	
  1289                           ; 1 bytes @ 0x1E
  1290                           
  1291  003E                     ??_getData:	
  1292                           ; 1 bytes @ 0x1E
  1293                           
  1294  003E                     ??_WriteDataXLCD:	
  1295                           ; 1 bytes @ 0x1E
  1296                           
  1297  003E                     writeEEPROM@data:	
  1298                           ; 1 bytes @ 0x1E
  1299                           
  1300  003E                     isdigit@c:	
  1301                           ; 1 bytes @ 0x1E
  1302                           
  1303                           
  1304                           ; 1 bytes @ 0x1E
  1305  003E                     	ds	1
  1306  003F                     ?_writeFrequency:	
  1307  003F                     ??_setData:	
  1308                           ; 1 bytes @ 0x1F
  1309                           
  1310  003F                     ??_codFreq:	
  1311                           ; 1 bytes @ 0x1F
  1312                           
  1313  003F                     writeFrequency@f:	
  1314                           ; 1 bytes @ 0x1F
  1315                           
  1316  003F                     ___wmul@multiplicand:	
  1317                           ; 2 bytes @ 0x1F
  1318                           
  1319  003F                     ___lwdiv@dividend:	
  1320                           ; 2 bytes @ 0x1F
  1321                           
  1322                           
  1323                           ; 2 bytes @ 0x1F
  1324  003F                     	ds	1
  1325  0040                     setData@data0:	
  1326  0040                     WriteDataXLCD@data:	
  1327                           ; 1 bytes @ 0x20
  1328                           
  1329  0040                     WriteCmdXLCD@cmd:	
  1330                           ; 1 bytes @ 0x20
  1331                           
  1332  0040                     SetDDRamAddr@DDaddr:	
  1333                           ; 1 bytes @ 0x20
  1334                           
  1335                           
  1336                           ; 1 bytes @ 0x20
  1337  0040                     	ds	1
  1338  0041                     ??_writeFrequency:	
  1339  0041                     ??_putsXLCD:	
  1340                           ; 1 bytes @ 0x21
  1341                           
  1342  0041                     ??_SendCMDLCD:	
  1343                           ; 1 bytes @ 0x21
  1344                           
  1345  0041                     ??_OpenXLCD:	
  1346                           ; 1 bytes @ 0x21
  1347                           
  1348  0041                     ??___wmul:	
  1349                           ; 1 bytes @ 0x21
  1350                           
  1351  0041                     ??___lwdiv:	
  1352                           ; 1 bytes @ 0x21
  1353                           
  1354  0041                     setData@data1:	
  1355                           ; 1 bytes @ 0x21
  1356                           
  1357  0041                     SendCMDLCD@CMD:	
  1358                           ; 1 bytes @ 0x21
  1359                           
  1360  0041                     ___wmul@product:	
  1361                           ; 1 bytes @ 0x21
  1362                           
  1363                           
  1364                           ; 2 bytes @ 0x21
  1365  0041                     	ds	1
  1366  0042                     ??___lwmod:	
  1367  0042                     getData@aux0:	
  1368                           ; 1 bytes @ 0x22
  1369                           
  1370  0042                     setData@full:	
  1371                           ; 1 bytes @ 0x22
  1372                           
  1373  0042                     putsXLCD@buffer:	
  1374                           ; 1 bytes @ 0x22
  1375                           
  1376                           
  1377                           ; 1 bytes @ 0x22
  1378  0042                     	ds	1
  1379  0043                     ??_beep:	
  1380  0043                     getData@aux1:	
  1381                           ; 1 bytes @ 0x23
  1382                           
  1383  0043                     OpenXLCD@lcdtype:	
  1384                           ; 1 bytes @ 0x23
  1385                           
  1386  0043                     ___lwmod@counter:	
  1387                           ; 1 bytes @ 0x23
  1388                           
  1389                           
  1390                           ; 1 bytes @ 0x23
  1391  0043                     	ds	1
  1392  0044                     ??_config:	
  1393                           
  1394                           	psect	maintext
  1395  042A                     __pmaintext:	
  1396                           ; 1 bytes @ 0x24
  1397 ;;
  1398 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1399 ;;
  1400 ;; *************** function _main *****************
  1401 ;; Defined at:
  1402 ;;		line 5 in file "main.c"
  1403 ;; Parameters:    Size  Location     Type
  1404 ;;		None
  1405 ;; Auto vars:     Size  Location     Type
  1406 ;;  i               1   33[BANK1 ] unsigned char 
  1407 ;; Return value:  Size  Location     Type
  1408 ;;                  1    wreg      void 
  1409 ;; Registers used:
  1410 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1411 ;; Tracked objects:
  1412 ;;		On entry : B00/0
  1413 ;;		On exit  : 0/0
  1414 ;;		Unchanged: 0/0
  1415 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1416 ;;      Params:         0       0       0       0       0
  1417 ;;      Locals:         0       0       1       0       0
  1418 ;;      Temps:          0       0       2       0       0
  1419 ;;      Totals:         0       0       3       0       0
  1420 ;;Total ram usage:        3 bytes
  1421 ;; Hardware stack levels required when called:   10
  1422 ;; This function calls:
  1423 ;;		_SetDDRamAddr
  1424 ;;		_beep
  1425 ;;		_config
  1426 ;;		_getData
  1427 ;;		_putsXLCD
  1428 ;;		_setFrequency
  1429 ;;		_setTransStat
  1430 ;;		_sprintf
  1431 ;;		_updateLCD
  1432 ;;		_writeFrequency
  1433 ;; This function is called by:
  1434 ;;		Startup code after reset
  1435 ;; This function uses a non-reentrant model
  1436 ;;
  1437                           
  1438                           
  1439                           ;psect for function _main
  1440  042A                     _main:	
  1441                           
  1442                           ;main.c: 6:     char i = 0;
  1443                           
  1444                           ;incstack = 0
  1445 ;; hardware stack exceeded
  1446                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1447  042A  1683               	bsf	3,5	;RP0=1, select bank1
  1448  042B  1303               	bcf	3,6	;RP1=0, select bank1
  1449  042C  01E3               	clrf	main@i^(0+128)
  1450                           
  1451                           ;main.c: 7:     _delay((unsigned long)((100)*(4000000/4000.0)));
  1452  042D  3082               	movlw	130
  1453  042E  1683               	bsf	3,5	;RP0=1, select bank1
  1454  042F  1303               	bcf	3,6	;RP1=0, select bank1
  1455  0430  00E2               	movwf	(??_main^(0+128)+1)
  1456  0431  30DD               	movlw	221
  1457  0432  00E1               	movwf	??_main^(0+128)
  1458  0433                     u3107:	
  1459  0433  0BE1               	decfsz	??_main^(0+128),f
  1460  0434  2C33               	goto	u3107
  1461  0435  0BE2               	decfsz	(??_main^(0+128)+1),f
  1462  0436  2C33               	goto	u3107
  1463                           
  1464                           ;main.c: 8:     config();
  1465  0437  120A  158A  2412  120A  118A  	fcall	_config
  1466                           
  1467                           ;main.c: 9:     beep(100);
  1468  043C  3064               	movlw	100
  1469  043D  1683               	bsf	3,5	;RP0=1, select bank1
  1470  043E  1303               	bcf	3,6	;RP1=0, select bank1
  1471  043F  00C2               	movwf	beep@ms^(0+128)
  1472  0440  3000               	movlw	0
  1473  0441  00C3               	movwf	(beep@ms^(0+128)+1)
  1474  0442  120A  158A  2578  120A  118A  	fcall	_beep
  1475                           
  1476                           ;main.c: 10:     getData();
  1477  0447  120A  118A  2767  120A  118A  	fcall	_getData
  1478                           
  1479                           ;main.c: 11:     beep(10);
  1480  044C  300A               	movlw	10
  1481  044D  1683               	bsf	3,5	;RP0=1, select bank1
  1482  044E  1303               	bcf	3,6	;RP1=0, select bank1
  1483  044F  00C2               	movwf	beep@ms^(0+128)
  1484  0450  3000               	movlw	0
  1485  0451  00C3               	movwf	(beep@ms^(0+128)+1)
  1486  0452  120A  158A  2578  120A  118A  	fcall	_beep
  1487                           
  1488                           ;main.c: 12:     if(!PORTAbits.RA4){
  1489  0457  1283               	bcf	3,5	;RP0=0, select bank0
  1490  0458  1303               	bcf	3,6	;RP1=0, select bank0
  1491  0459  1A05               	btfsc	5,4	;volatile
  1492  045A  2C6F               	goto	l3592
  1493                           
  1494                           ;main.c: 13:         _delay((unsigned long)((25)*(4000000/4000.0)));
  1495  045B  3021               	movlw	33
  1496  045C  1683               	bsf	3,5	;RP0=1, select bank1
  1497  045D  1303               	bcf	3,6	;RP1=0, select bank1
  1498  045E  00E2               	movwf	(??_main^(0+128)+1)
  1499  045F  3075               	movlw	117
  1500  0460  00E1               	movwf	??_main^(0+128)
  1501  0461                     u3117:	
  1502  0461  0BE1               	decfsz	??_main^(0+128),f
  1503  0462  2C61               	goto	u3117
  1504  0463  0BE2               	decfsz	(??_main^(0+128)+1),f
  1505  0464  2C61               	goto	u3117
  1506  0465  2C66               	nop2
  1507                           
  1508                           ;main.c: 14:         if(!PORTAbits.RA4) setFrequency();
  1509  0466  1283               	bcf	3,5	;RP0=0, select bank0
  1510  0467  1303               	bcf	3,6	;RP1=0, select bank0
  1511  0468  1A05               	btfsc	5,4	;volatile
  1512  0469  2C6F               	goto	l3592
  1513  046A  120A  118A  2325  120A  118A  	fcall	_setFrequency
  1514  046F                     l3592:	
  1515                           
  1516                           ;main.c: 16:     _delay((unsigned long)((100)*(4000000/4000.0)));
  1517  046F  3082               	movlw	130
  1518  0470  1683               	bsf	3,5	;RP0=1, select bank1
  1519  0471  1303               	bcf	3,6	;RP1=0, select bank1
  1520  0472  00E2               	movwf	(??_main^(0+128)+1)
  1521  0473  30DD               	movlw	221
  1522  0474  00E1               	movwf	??_main^(0+128)
  1523  0475                     u3127:	
  1524  0475  0BE1               	decfsz	??_main^(0+128),f
  1525  0476  2C75               	goto	u3127
  1526  0477  0BE2               	decfsz	(??_main^(0+128)+1),f
  1527  0478  2C75               	goto	u3127
  1528                           
  1529                           ;main.c: 17:     writeFrequency(frequency);
  1530  0479  1283               	bcf	3,5	;RP0=0, select bank0
  1531  047A  1303               	bcf	3,6	;RP1=0, select bank0
  1532  047B  0845               	movf	_frequency+1,w
  1533  047C  00C0               	movwf	writeFrequency@f+1
  1534  047D  0844               	movf	_frequency,w
  1535  047E  00BF               	movwf	writeFrequency@f
  1536  047F  120A  118A  25BF  120A  118A  	fcall	_writeFrequency
  1537                           
  1538                           ;main.c: 18:     beep(100);
  1539  0484  3064               	movlw	100
  1540  0485  1683               	bsf	3,5	;RP0=1, select bank1
  1541  0486  1303               	bcf	3,6	;RP1=0, select bank1
  1542  0487  00C2               	movwf	beep@ms^(0+128)
  1543  0488  3000               	movlw	0
  1544  0489  00C3               	movwf	(beep@ms^(0+128)+1)
  1545  048A  120A  158A  2578  120A  118A  	fcall	_beep
  1546                           
  1547                           ;main.c: 19:     INTCONbits.GIE = 0;
  1548  048F  138B               	bcf	11,7	;volatile
  1549  0490                     l3604:	
  1550                           
  1551                           ;main.c: 21:         sprintf(lineOne,"LOCKING         ");
  1552  0490  3021               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1553  0491  1683               	bsf	3,5	;RP0=1, select bank1
  1554  0492  1303               	bcf	3,6	;RP1=0, select bank1
  1555  0493  00E1               	movwf	??_main^(0+128)
  1556  0494  0861               	movf	??_main^(0+128),w
  1557  0495  00C9               	movwf	sprintf@f^(0+128)
  1558  0496  30B1               	movlw	(low (_lineOne| 0))& (0+255)
  1559  0497  120A  118A  2035  120A  118A  	fcall	_sprintf
  1560                           
  1561                           ;main.c: 22:         sprintf(lineTwo,"       FREQUENCY");
  1562  049C  3054               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1563  049D  1683               	bsf	3,5	;RP0=1, select bank1
  1564  049E  1303               	bcf	3,6	;RP1=0, select bank1
  1565  049F  00E1               	movwf	??_main^(0+128)
  1566  04A0  0861               	movf	??_main^(0+128),w
  1567  04A1  00C9               	movwf	sprintf@f^(0+128)
  1568  04A2  30A0               	movlw	(low (_lineTwo| 0))& (0+255)
  1569  04A3  120A  118A  2035  120A  118A  	fcall	_sprintf
  1570                           
  1571                           ;main.c: 23:         SetDDRamAddr(0x00);
  1572  04A8  3000               	movlw	0
  1573  04A9  120A  158A  26A9  120A  118A  	fcall	_SetDDRamAddr
  1574                           
  1575                           ;main.c: 24:         putsXLCD(lineOne);
  1576  04AE  30B1               	movlw	(low (_lineOne| 0))& (0+255)
  1577  04AF  120A  158A  239C  120A  118A  	fcall	_putsXLCD
  1578                           
  1579                           ;main.c: 25:         SetDDRamAddr(0x40);
  1580  04B4  3040               	movlw	64
  1581  04B5  120A  158A  26A9  120A  118A  	fcall	_SetDDRamAddr
  1582                           
  1583                           ;main.c: 26:         putsXLCD(lineTwo);
  1584  04BA  30A0               	movlw	(low (_lineTwo| 0))& (0+255)
  1585  04BB  120A  158A  239C  120A  118A  	fcall	_putsXLCD
  1586                           
  1587                           ;main.c: 27:         _delay((unsigned long)((90)*(4000000/4000.0)));
  1588  04C0  3075               	movlw	117
  1589  04C1  1683               	bsf	3,5	;RP0=1, select bank1
  1590  04C2  1303               	bcf	3,6	;RP1=0, select bank1
  1591  04C3  00E2               	movwf	(??_main^(0+128)+1)
  1592  04C4  30E0               	movlw	224
  1593  04C5  00E1               	movwf	??_main^(0+128)
  1594  04C6                     u3137:	
  1595  04C6  0BE1               	decfsz	??_main^(0+128),f
  1596  04C7  2CC6               	goto	u3137
  1597  04C8  0BE2               	decfsz	(??_main^(0+128)+1),f
  1598  04C9  2CC6               	goto	u3137
  1599  04CA  0000               	nop
  1600                           
  1601                           ;main.c: 28:     }
  1602  04CB  3001               	movlw	1
  1603  04CC  1683               	bsf	3,5	;RP0=1, select bank1
  1604  04CD  1303               	bcf	3,6	;RP1=0, select bank1
  1605  04CE  00E1               	movwf	??_main^(0+128)
  1606  04CF  0861               	movf	??_main^(0+128),w
  1607  04D0  07E3               	addwf	main@i^(0+128),f
  1608  04D1  3032               	movlw	50
  1609  04D2  0263               	subwf	main@i^(0+128),w
  1610  04D3  1C03               	skipc
  1611  04D4  2C90               	goto	l3604
  1612                           
  1613                           ;main.c: 30:     INTCONbits.GIE = 1;
  1614  04D5  178B               	bsf	11,7	;volatile
  1615                           
  1616                           ;main.c: 32:     sprintf(lineOne,"AMPRO      EX-FM");
  1617  04D6  3043               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1618  04D7  00E1               	movwf	??_main^(0+128)
  1619  04D8  0861               	movf	??_main^(0+128),w
  1620  04D9  00C9               	movwf	sprintf@f^(0+128)
  1621  04DA  30B1               	movlw	(low (_lineOne| 0))& (0+255)
  1622  04DB  120A  118A  2035  120A  118A  	fcall	_sprintf
  1623                           
  1624                           ;main.c: 33:     updateLCD();
  1625  04E0  120A  118A  26A7  120A  118A  	fcall	_updateLCD
  1626  04E5                     l3622:	
  1627  04E5  1283               	bcf	3,5	;RP0=0, select bank0
  1628  04E6  1303               	bcf	3,6	;RP1=0, select bank0
  1629  04E7  0348               	decf	_functionalStat,w
  1630  04E8  1D03               	btfss	3,2
  1631  04E9  2CF1               	goto	l3626
  1632                           
  1633                           ;main.c: 36:             setTransStat(1);
  1634  04EA  3001               	movlw	1
  1635  04EB  1683               	bsf	3,5	;RP0=1, select bank1
  1636  04EC  1303               	bcf	3,6	;RP1=0, select bank1
  1637  04ED  00C7               	movwf	setTransStat@stat^(0+128)
  1638  04EE  3000               	movlw	0
  1639  04EF  00C8               	movwf	(setTransStat@stat^(0+128)+1)
  1640  04F0  2CF6               	goto	L1
  1641  04F1                     l3626:	
  1642                           ;main.c: 37:         }else{
  1643                           
  1644                           
  1645                           ;main.c: 38:             setTransStat(0);
  1646  04F1  3000               	movlw	0
  1647  04F2  1683               	bsf	3,5	;RP0=1, select bank1
  1648  04F3  1303               	bcf	3,6	;RP1=0, select bank1
  1649  04F4  00C7               	movwf	setTransStat@stat^(0+128)
  1650  04F5  00C8               	movwf	(setTransStat@stat+1)^(0+128)
  1651  04F6                     L1:	
  1652  04F6  120A  158A  246F  120A  118A  	fcall	_setTransStat
  1653                           
  1654                           ;main.c: 41:         _delay((unsigned long)((50)*(4000000/4000.0)));
  1655  04FB  3041               	movlw	65
  1656  04FC  1683               	bsf	3,5	;RP0=1, select bank1
  1657  04FD  1303               	bcf	3,6	;RP1=0, select bank1
  1658  04FE  00E2               	movwf	(??_main^(0+128)+1)
  1659  04FF  30ED               	movlw	237
  1660  0500  00E1               	movwf	??_main^(0+128)
  1661  0501                     u3147:	
  1662  0501  0BE1               	decfsz	??_main^(0+128),f
  1663  0502  2D01               	goto	u3147
  1664  0503  0BE2               	decfsz	(??_main^(0+128)+1),f
  1665  0504  2D01               	goto	u3147
  1666  0505  2D06               	nop2
  1667  0506  2CE5               	goto	l3622
  1668  0507                     __end_of_main:	
  1669                           
  1670                           	psect	text1
  1671  06A7                     __ptext1:	
  1672 ;; *************** function _updateLCD *****************
  1673 ;; Defined at:
  1674 ;;		line 14 in file "lcd.c"
  1675 ;; Parameters:    Size  Location     Type
  1676 ;;		None
  1677 ;; Auto vars:     Size  Location     Type
  1678 ;;  integ           1   30[BANK1 ] unsigned char 
  1679 ;;  decim           1   29[BANK1 ] unsigned char 
  1680 ;; Return value:  Size  Location     Type
  1681 ;;                  1    wreg      void 
  1682 ;; Registers used:
  1683 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1684 ;; Tracked objects:
  1685 ;;		On entry : 0/0
  1686 ;;		On exit  : 0/0
  1687 ;;		Unchanged: 0/0
  1688 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1689 ;;      Params:         0       0       0       0       0
  1690 ;;      Locals:         0       0       2       0       0
  1691 ;;      Temps:          0       0       5       0       0
  1692 ;;      Totals:         0       0       7       0       0
  1693 ;;Total ram usage:        7 bytes
  1694 ;; Hardware stack levels used:    1
  1695 ;; Hardware stack levels required when called:    8
  1696 ;; This function calls:
  1697 ;;		_SetDDRamAddr
  1698 ;;		___lwdiv
  1699 ;;		___lwmod
  1700 ;;		_putsXLCD
  1701 ;;		_sprintf
  1702 ;; This function is called by:
  1703 ;;		_main
  1704 ;; This function uses a non-reentrant model
  1705 ;;
  1706                           
  1707                           
  1708                           ;psect for function _updateLCD
  1709  06A7                     _updateLCD:	
  1710                           
  1711                           ;lcd.c: 16:         unsigned char decim = frequency % 10;
  1712                           
  1713                           ;incstack = 0
  1714 ;; hardware stack exceeded
  1715                           ; Regs used in _updateLCD: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1716  06A7  300A               	movlw	10
  1717  06A8  1683               	bsf	3,5	;RP0=1, select bank1
  1718  06A9  1303               	bcf	3,6	;RP1=0, select bank1
  1719  06AA  00C5               	movwf	___lwmod@divisor^(0+128)
  1720  06AB  3000               	movlw	0
  1721  06AC  00C6               	movwf	(___lwmod@divisor^(0+128)+1)
  1722  06AD  1283               	bcf	3,5	;RP0=0, select bank0
  1723  06AE  1303               	bcf	3,6	;RP1=0, select bank0
  1724  06AF  0845               	movf	_frequency+1,w
  1725  06B0  1683               	bsf	3,5	;RP0=1, select bank1
  1726  06B1  1303               	bcf	3,6	;RP1=0, select bank1
  1727  06B2  00C8               	movwf	(___lwmod@dividend+1)^(0+128)
  1728  06B3  1283               	bcf	3,5	;RP0=0, select bank0
  1729  06B4  1303               	bcf	3,6	;RP1=0, select bank0
  1730  06B5  0844               	movf	_frequency,w
  1731  06B6  1683               	bsf	3,5	;RP0=1, select bank1
  1732  06B7  1303               	bcf	3,6	;RP1=0, select bank1
  1733  06B8  00C7               	movwf	___lwmod@dividend^(0+128)
  1734  06B9  120A  158A  24A5  120A  118A  	fcall	___lwmod
  1735  06BE  1683               	bsf	3,5	;RP0=1, select bank1
  1736  06BF  1303               	bcf	3,6	;RP1=0, select bank1
  1737  06C0  0845               	movf	?___lwmod^(0+128),w
  1738  06C1  00DA               	movwf	??_updateLCD^(0+128)
  1739  06C2  085A               	movf	??_updateLCD^(0+128),w
  1740  06C3  00DF               	movwf	updateLCD@decim^(0+128)
  1741                           
  1742                           ;lcd.c: 17:         unsigned char integ = frequency / 10;
  1743  06C4  300A               	movlw	10
  1744  06C5  1283               	bcf	3,5	;RP0=0, select bank0
  1745  06C6  1303               	bcf	3,6	;RP1=0, select bank0
  1746  06C7  00BD               	movwf	___lwdiv@divisor
  1747  06C8  3000               	movlw	0
  1748  06C9  00BE               	movwf	___lwdiv@divisor+1
  1749  06CA  0845               	movf	_frequency+1,w
  1750  06CB  00C0               	movwf	___lwdiv@dividend+1
  1751  06CC  0844               	movf	_frequency,w
  1752  06CD  00BF               	movwf	___lwdiv@dividend
  1753  06CE  120A  158A  274E  120A  118A  	fcall	___lwdiv
  1754  06D3  1283               	bcf	3,5	;RP0=0, select bank0
  1755  06D4  1303               	bcf	3,6	;RP1=0, select bank0
  1756  06D5  083D               	movf	?___lwdiv,w
  1757  06D6  1683               	bsf	3,5	;RP0=1, select bank1
  1758  06D7  1303               	bcf	3,6	;RP1=0, select bank1
  1759  06D8  00DA               	movwf	??_updateLCD^(0+128)
  1760  06D9  085A               	movf	??_updateLCD^(0+128),w
  1761  06DA  00E0               	movwf	updateLCD@integ^(0+128)
  1762                           
  1763                           ;lcd.c: 18:         sprintf(lineTwo,"FREQ.  %3d.%d MHz",integ, decim);
  1764  06DB  300F               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  1765  06DC  00DA               	movwf	??_updateLCD^(0+128)
  1766  06DD  085A               	movf	??_updateLCD^(0+128),w
  1767  06DE  00C9               	movwf	sprintf@f^(0+128)
  1768  06DF  0860               	movf	updateLCD@integ^(0+128),w
  1769  06E0  00DB               	movwf	(??_updateLCD+1)^(0+128)
  1770  06E1  01DC               	clrf	((??_updateLCD+1)^(0+128)+1)
  1771  06E2  085B               	movf	(??_updateLCD+1)^(0+128),w
  1772  06E3  00CA               	movwf	(?_sprintf^(0+128)+1)
  1773  06E4  085C               	movf	(??_updateLCD+2)^(0+128),w
  1774  06E5  00CB               	movwf	((?_sprintf+1)^(0+128)+1)
  1775  06E6  085F               	movf	updateLCD@decim^(0+128),w
  1776  06E7  00DD               	movwf	(??_updateLCD+3)^(0+128)
  1777  06E8  01DE               	clrf	((??_updateLCD+3)^(0+128)+1)
  1778  06E9  085D               	movf	(??_updateLCD+3)^(0+128),w
  1779  06EA  00CC               	movwf	(?_sprintf^(0+128)+3)
  1780  06EB  085E               	movf	(??_updateLCD+4)^(0+128),w
  1781  06EC  00CD               	movwf	((?_sprintf+1)^(0+128)+3)
  1782  06ED  30A0               	movlw	(low (_lineTwo| 0))& (0+255)
  1783  06EE  120A  118A  2035  120A  118A  	fcall	_sprintf
  1784                           
  1785                           ;lcd.c: 19:         SetDDRamAddr(0x40);
  1786  06F3  3040               	movlw	64
  1787  06F4  120A  158A  26A9  120A  118A  	fcall	_SetDDRamAddr
  1788                           
  1789                           ;lcd.c: 20:         putsXLCD(lineTwo);
  1790  06F9  30A0               	movlw	(low (_lineTwo| 0))& (0+255)
  1791  06FA  120A  158A  239C  120A  118A  	fcall	_putsXLCD
  1792                           
  1793                           ;lcd.c: 22:     SetDDRamAddr(0x00);
  1794  06FF  3000               	movlw	0
  1795  0700  120A  158A  26A9  120A  118A  	fcall	_SetDDRamAddr
  1796                           
  1797                           ;lcd.c: 23:     putsXLCD(lineOne);
  1798  0705  30B1               	movlw	(low (_lineOne| 0))& (0+255)
  1799  0706  120A  158A  239C   	fcall	_putsXLCD
  1800  0709  0008               	return
  1801  070A                     __end_of_updateLCD:	
  1802                           
  1803                           	psect	text2
  1804  0B9C                     __ptext2:	
  1805 ;; *************** function _putsXLCD *****************
  1806 ;; Defined at:
  1807 ;;		line 419 in file "lcd_pic16.c"
  1808 ;; Parameters:    Size  Location     Type
  1809 ;;  buffer          1    wreg     PTR unsigned char 
  1810 ;;		 -> lineTwo(17), lineOne(17), 
  1811 ;; Auto vars:     Size  Location     Type
  1812 ;;  buffer          1   34[BANK0 ] PTR unsigned char 
  1813 ;;		 -> lineTwo(17), lineOne(17), 
  1814 ;; Return value:  Size  Location     Type
  1815 ;;                  1    wreg      void 
  1816 ;; Registers used:
  1817 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1818 ;; Tracked objects:
  1819 ;;		On entry : 0/0
  1820 ;;		On exit  : 0/0
  1821 ;;		Unchanged: 0/0
  1822 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1823 ;;      Params:         0       0       0       0       0
  1824 ;;      Locals:         0       1       0       0       0
  1825 ;;      Temps:          0       1       0       0       0
  1826 ;;      Totals:         0       2       0       0       0
  1827 ;;Total ram usage:        2 bytes
  1828 ;; Hardware stack levels used:    1
  1829 ;; Hardware stack levels required when called:    7
  1830 ;; This function calls:
  1831 ;;		_BusyXLCD
  1832 ;;		_WriteDataXLCD
  1833 ;; This function is called by:
  1834 ;;		_main
  1835 ;;		_updateLCD
  1836 ;; This function uses a non-reentrant model
  1837 ;;
  1838                           
  1839                           
  1840                           ;psect for function _putsXLCD
  1841  0B9C                     _putsXLCD:	
  1842                           
  1843                           ;incstack = 0
  1844 ;; hardware stack exceeded
  1845                           ; Regs used in _putsXLCD: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1846                           ;putsXLCD@buffer stored from wreg
  1847  0B9C  1283               	bcf	3,5	;RP0=0, select bank0
  1848  0B9D  1303               	bcf	3,6	;RP1=0, select bank0
  1849  0B9E  00C2               	movwf	putsXLCD@buffer
  1850  0B9F                     l2728:	
  1851                           ;lcd_pic16.c: 419: void putsXLCD(char *buffer);lcd_pic16.c: 420: {;lcd_pic16.c: 421:    
      +                               while(*buffer)
  1852                           
  1853                           
  1854                           ;lcd_pic16.c: 421:         while(*buffer)
  1855  0B9F  0842               	movf	putsXLCD@buffer,w
  1856  0BA0  0084               	movwf	4
  1857  0BA1  1383               	bcf	3,7	;select IRP bank0
  1858  0BA2  0800               	movf	0,w
  1859  0BA3  1903               	btfsc	3,2
  1860  0BA4  0008               	return
  1861  0BA5                     l2722:	
  1862  0BA5  120A  158A  22AA  120A  158A  	fcall	_BusyXLCD
  1863  0BAA  3A00               	xorlw	0
  1864  0BAB  1D03               	skipz
  1865  0BAC  2BA5               	goto	l2722
  1866                           
  1867                           ;lcd_pic16.c: 424:                 WriteDataXLCD(*buffer);
  1868  0BAD  1283               	bcf	3,5	;RP0=0, select bank0
  1869  0BAE  1303               	bcf	3,6	;RP1=0, select bank0
  1870  0BAF  0842               	movf	putsXLCD@buffer,w
  1871  0BB0  0084               	movwf	4
  1872  0BB1  1383               	bcf	3,7	;select IRP bank0
  1873  0BB2  0800               	movf	0,w
  1874  0BB3  120A  158A  265C  120A  158A  	fcall	_WriteDataXLCD
  1875                           
  1876                           ;lcd_pic16.c: 425:                 buffer++;
  1877  0BB8  3001               	movlw	1
  1878  0BB9  1283               	bcf	3,5	;RP0=0, select bank0
  1879  0BBA  1303               	bcf	3,6	;RP1=0, select bank0
  1880  0BBB  00C1               	movwf	??_putsXLCD
  1881  0BBC  0841               	movf	??_putsXLCD,w
  1882  0BBD  07C2               	addwf	putsXLCD@buffer,f
  1883  0BBE  2B9F               	goto	l2728
  1884  0BBF                     __end_of_putsXLCD:	
  1885                           
  1886                           	psect	text3
  1887  0E5C                     __ptext3:	
  1888 ;; *************** function _WriteDataXLCD *****************
  1889 ;; Defined at:
  1890 ;;		line 110 in file "lcd_pic16.c"
  1891 ;; Parameters:    Size  Location     Type
  1892 ;;  data            1    wreg     unsigned char 
  1893 ;; Auto vars:     Size  Location     Type
  1894 ;;  data            1   32[BANK0 ] unsigned char 
  1895 ;; Return value:  Size  Location     Type
  1896 ;;                  1    wreg      void 
  1897 ;; Registers used:
  1898 ;;		wreg, status,2, status,0, pclath, cstack
  1899 ;; Tracked objects:
  1900 ;;		On entry : 0/0
  1901 ;;		On exit  : 0/0
  1902 ;;		Unchanged: 0/0
  1903 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1904 ;;      Params:         0       0       0       0       0
  1905 ;;      Locals:         0       1       0       0       0
  1906 ;;      Temps:          0       2       0       0       0
  1907 ;;      Totals:         0       3       0       0       0
  1908 ;;Total ram usage:        3 bytes
  1909 ;; Hardware stack levels used:    1
  1910 ;; Hardware stack levels required when called:    6
  1911 ;; This function calls:
  1912 ;;		_DelayFor18TCY
  1913 ;; This function is called by:
  1914 ;;		_putsXLCD
  1915 ;;		_putrsXLCD
  1916 ;; This function uses a non-reentrant model
  1917 ;;
  1918                           
  1919                           
  1920                           ;psect for function _WriteDataXLCD
  1921  0E5C                     _WriteDataXLCD:	
  1922                           
  1923                           ;incstack = 0
  1924 ;; hardware stack exceeded
  1925                           ; Regs used in _WriteDataXLCD: [wreg+status,2+status,0+pclath+cstack]
  1926                           ;WriteDataXLCD@data stored from wreg
  1927  0E5C  1283               	bcf	3,5	;RP0=0, select bank0
  1928  0E5D  1303               	bcf	3,6	;RP1=0, select bank0
  1929  0E5E  00C0               	movwf	WriteDataXLCD@data
  1930                           
  1931                           ;lcd_pic16.c: 110: void WriteDataXLCD(char data);lcd_pic16.c: 111: {;lcd_pic16.c: 125:  
      +                                 TRISB &= 0x0f;
  1932  0E5F  300F               	movlw	15
  1933  0E60  00BE               	movwf	??_WriteDataXLCD
  1934  0E61  083E               	movf	??_WriteDataXLCD,w
  1935  0E62  1683               	bsf	3,5	;RP0=1, select bank1
  1936  0E63  1303               	bcf	3,6	;RP1=0, select bank1
  1937  0E64  0586               	andwf	6,f	;volatile
  1938                           
  1939                           ;lcd_pic16.c: 126:         PORTB &= 0x0f;
  1940  0E65  300F               	movlw	15
  1941  0E66  1283               	bcf	3,5	;RP0=0, select bank0
  1942  0E67  1303               	bcf	3,6	;RP1=0, select bank0
  1943  0E68  00BE               	movwf	??_WriteDataXLCD
  1944  0E69  083E               	movf	??_WriteDataXLCD,w
  1945  0E6A  0586               	andwf	6,f	;volatile
  1946                           
  1947                           ;lcd_pic16.c: 127:         PORTB |= data&0xf0;
  1948  0E6B  0840               	movf	WriteDataXLCD@data,w
  1949  0E6C  39F0               	andlw	240
  1950  0E6D  00BE               	movwf	??_WriteDataXLCD
  1951  0E6E  083E               	movf	??_WriteDataXLCD,w
  1952  0E6F  0486               	iorwf	6,f	;volatile
  1953                           
  1954                           ;lcd_pic16.c: 133:         PORTBbits.RB1 = 1;
  1955  0E70  1486               	bsf	6,1	;volatile
  1956                           
  1957                           ;lcd_pic16.c: 134:         PORTBbits.RB2 = 0;
  1958  0E71  1106               	bcf	6,2	;volatile
  1959                           
  1960                           ;lcd_pic16.c: 135:         DelayFor18TCY();
  1961  0E72  120A  158A  2275  120A  158A  	fcall	_DelayFor18TCY
  1962                           
  1963                           ;lcd_pic16.c: 136:         PORTBbits.RB3 = 1;
  1964  0E77  1283               	bcf	3,5	;RP0=0, select bank0
  1965  0E78  1303               	bcf	3,6	;RP1=0, select bank0
  1966  0E79  1586               	bsf	6,3	;volatile
  1967                           
  1968                           ;lcd_pic16.c: 137:         DelayFor18TCY();
  1969  0E7A  120A  158A  2275  120A  158A  	fcall	_DelayFor18TCY
  1970                           
  1971                           ;lcd_pic16.c: 138:         PORTBbits.RB3 = 0;
  1972  0E7F  1283               	bcf	3,5	;RP0=0, select bank0
  1973  0E80  1303               	bcf	3,6	;RP1=0, select bank0
  1974  0E81  1186               	bcf	6,3	;volatile
  1975                           
  1976                           ;lcd_pic16.c: 140:         PORTB &= 0x0f;
  1977  0E82  300F               	movlw	15
  1978  0E83  00BE               	movwf	??_WriteDataXLCD
  1979  0E84  083E               	movf	??_WriteDataXLCD,w
  1980  0E85  0586               	andwf	6,f	;volatile
  1981                           
  1982                           ;lcd_pic16.c: 141:         PORTB |= ((data<<4)&0xf0);
  1983  0E86  0840               	movf	WriteDataXLCD@data,w
  1984  0E87  00BE               	movwf	??_WriteDataXLCD
  1985  0E88  3003               	movlw	3
  1986  0E89                     u1455:	
  1987  0E89  1003               	clrc
  1988  0E8A  0DBE               	rlf	??_WriteDataXLCD,f
  1989  0E8B  3EFF               	addlw	-1
  1990  0E8C  1D03               	skipz
  1991  0E8D  2E89               	goto	u1455
  1992  0E8E  1003               	clrc
  1993  0E8F  0D3E               	rlf	??_WriteDataXLCD,w
  1994  0E90  39F0               	andlw	240
  1995  0E91  00BF               	movwf	??_WriteDataXLCD+1
  1996  0E92  083F               	movf	??_WriteDataXLCD+1,w
  1997  0E93  0486               	iorwf	6,f	;volatile
  1998                           
  1999                           ;lcd_pic16.c: 146:         DelayFor18TCY();
  2000  0E94  120A  158A  2275  120A  158A  	fcall	_DelayFor18TCY
  2001                           
  2002                           ;lcd_pic16.c: 147:         PORTBbits.RB3 = 1;
  2003  0E99  1283               	bcf	3,5	;RP0=0, select bank0
  2004  0E9A  1303               	bcf	3,6	;RP1=0, select bank0
  2005  0E9B  1586               	bsf	6,3	;volatile
  2006                           
  2007                           ;lcd_pic16.c: 148:         DelayFor18TCY();
  2008  0E9C  120A  158A  2275   	fcall	_DelayFor18TCY
  2009                           
  2010                           ;lcd_pic16.c: 149:         PORTBbits.RB3 = 0;
  2011  0E9F  1283               	bcf	3,5	;RP0=0, select bank0
  2012  0EA0  1303               	bcf	3,6	;RP1=0, select bank0
  2013  0EA1  1186               	bcf	6,3	;volatile
  2014                           
  2015                           ;lcd_pic16.c: 151:         TRISB |= 0xf0;
  2016  0EA2  30F0               	movlw	240
  2017  0EA3  00BE               	movwf	??_WriteDataXLCD
  2018  0EA4  083E               	movf	??_WriteDataXLCD,w
  2019  0EA5  1683               	bsf	3,5	;RP0=1, select bank1
  2020  0EA6  1303               	bcf	3,6	;RP1=0, select bank1
  2021  0EA7  0486               	iorwf	6,f	;volatile
  2022  0EA8  0008               	return
  2023  0EA9                     __end_of_WriteDataXLCD:	
  2024                           
  2025                           	psect	text4
  2026  0325                     __ptext4:	
  2027 ;; *************** function _setFrequency *****************
  2028 ;; Defined at:
  2029 ;;		line 135 in file "main.c"
  2030 ;; Parameters:    Size  Location     Type
  2031 ;;		None
  2032 ;; Auto vars:     Size  Location     Type
  2033 ;;		None
  2034 ;; Return value:  Size  Location     Type
  2035 ;;                  1    wreg      void 
  2036 ;; Registers used:
  2037 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2038 ;; Tracked objects:
  2039 ;;		On entry : 0/0
  2040 ;;		On exit  : 0/0
  2041 ;;		Unchanged: 0/0
  2042 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2043 ;;      Params:         0       0       0       0       0
  2044 ;;      Locals:         0       0       0       0       0
  2045 ;;      Temps:          0       0       3       0       0
  2046 ;;      Totals:         0       0       3       0       0
  2047 ;;Total ram usage:        3 bytes
  2048 ;; Hardware stack levels used:    1
  2049 ;; Hardware stack levels required when called:    7
  2050 ;; This function calls:
  2051 ;;		_beep
  2052 ;;		_setData
  2053 ;;		_sprintf
  2054 ;;		_writeFrequency
  2055 ;; This function is called by:
  2056 ;;		_main
  2057 ;; This function uses a non-reentrant model
  2058 ;;
  2059                           
  2060                           
  2061                           ;psect for function _setFrequency
  2062  0325                     _setFrequency:	
  2063                           
  2064                           ;main.c: 136:     isOnConfig = 1;
  2065                           
  2066                           ;incstack = 0
  2067                           ; Regs used in _setFrequency: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2068  0325  1283               	bcf	3,5	;RP0=0, select bank0
  2069  0326  1303               	bcf	3,6	;RP1=0, select bank0
  2070  0327  01C7               	clrf	_isOnConfig
  2071  0328  0AC7               	incf	_isOnConfig,f
  2072                           
  2073                           ;main.c: 137:     sprintf(lineOne,"SET   FREQUENCY ");
  2074  0329  3032               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  2075  032A  1683               	bsf	3,5	;RP0=1, select bank1
  2076  032B  1303               	bcf	3,6	;RP1=0, select bank1
  2077  032C  00DA               	movwf	??_setFrequency^(0+128)
  2078  032D  085A               	movf	??_setFrequency^(0+128),w
  2079  032E  00C9               	movwf	sprintf@f^(0+128)
  2080  032F  30B1               	movlw	(low (_lineOne| 0))& (0+255)
  2081  0330  120A  118A  2035  120A  118A  	fcall	_sprintf
  2082                           
  2083                           ;main.c: 138:     beep(200);
  2084  0335  30C8               	movlw	200
  2085  0336  1683               	bsf	3,5	;RP0=1, select bank1
  2086  0337  1303               	bcf	3,6	;RP1=0, select bank1
  2087  0338  00C2               	movwf	beep@ms^(0+128)
  2088  0339  3000               	movlw	0
  2089  033A  00C3               	movwf	(beep@ms^(0+128)+1)
  2090  033B  120A  158A  2578  120A  118A  	fcall	_beep
  2091  0340                     l221:	
  2092                           ;main.c: 139:     while(!PORTAbits.RA4)continue;
  2093                           
  2094  0340  1283               	bcf	3,5	;RP0=0, select bank0
  2095  0341  1303               	bcf	3,6	;RP1=0, select bank0
  2096  0342  1E05               	btfss	5,4	;volatile
  2097  0343  2B40               	goto	l221
  2098  0344                     l224:	
  2099                           ;main.c: 141:     while(1){
  2100                           
  2101                           
  2102                           ;main.c: 142:         if(!PORTAbits.RA5){
  2103  0344  1A85               	btfsc	5,5	;volatile
  2104  0345  2B9E               	goto	l225
  2105                           
  2106                           ;main.c: 143:             if(frequency < 1080)frequency++;
  2107  0346  3004               	movlw	4
  2108  0347  0245               	subwf	_frequency+1,w
  2109  0348  3038               	movlw	56
  2110  0349  1903               	skipnz
  2111  034A  0244               	subwf	_frequency,w
  2112  034B  1803               	skipnc
  2113  034C  2B53               	goto	l226
  2114  034D  3001               	movlw	1
  2115  034E  07C4               	addwf	_frequency,f
  2116  034F  1803               	skipnc
  2117  0350  0AC5               	incf	_frequency+1,f
  2118  0351  3000               	movlw	0
  2119  0352  07C5               	addwf	_frequency+1,f
  2120  0353                     l226:	
  2121                           
  2122                           ;main.c: 144:             if(frequency > 1080)frequency = 1080;
  2123  0353  3004               	movlw	4
  2124  0354  0245               	subwf	_frequency+1,w
  2125  0355  3039               	movlw	57
  2126  0356  1903               	skipnz
  2127  0357  0244               	subwf	_frequency,w
  2128  0358  1C03               	skipc
  2129  0359  2B5E               	goto	l3514
  2130  035A  3038               	movlw	56
  2131  035B  00C4               	movwf	_frequency
  2132  035C  3004               	movlw	4
  2133  035D  00C5               	movwf	_frequency+1
  2134  035E                     l3514:	
  2135                           
  2136                           ;main.c: 145:             beep(100);
  2137  035E  3064               	movlw	100
  2138  035F  1683               	bsf	3,5	;RP0=1, select bank1
  2139  0360  1303               	bcf	3,6	;RP1=0, select bank1
  2140  0361  00C2               	movwf	beep@ms^(0+128)
  2141  0362  3000               	movlw	0
  2142  0363  00C3               	movwf	(beep@ms^(0+128)+1)
  2143  0364  120A  158A  2578  120A  118A  	fcall	_beep
  2144                           
  2145                           ;main.c: 146:             _delay((unsigned long)((500)*(4000000/4000.0)));
  2146  0369  3003               	movlw	3
  2147  036A  1683               	bsf	3,5	;RP0=1, select bank1
  2148  036B  1303               	bcf	3,6	;RP1=0, select bank1
  2149  036C  00DC               	movwf	(??_setFrequency^(0+128)+2)
  2150  036D  308A               	movlw	138
  2151  036E  00DB               	movwf	(??_setFrequency^(0+128)+1)
  2152  036F  3055               	movlw	85
  2153  0370  00DA               	movwf	??_setFrequency^(0+128)
  2154  0371                     u3157:	
  2155  0371  0BDA               	decfsz	??_setFrequency^(0+128),f
  2156  0372  2B71               	goto	u3157
  2157  0373  0BDB               	decfsz	(??_setFrequency^(0+128)+1),f
  2158  0374  2B71               	goto	u3157
  2159  0375  0BDC               	decfsz	(??_setFrequency^(0+128)+2),f
  2160  0376  2B71               	goto	u3157
  2161  0377                     l3524:	
  2162                           ;main.c: 147:             while(!PORTAbits.RA5){
  2163                           
  2164                           
  2165                           ;main.c: 147:             while(!PORTAbits.RA5){
  2166  0377  1283               	bcf	3,5	;RP0=0, select bank0
  2167  0378  1303               	bcf	3,6	;RP1=0, select bank0
  2168  0379  1A85               	btfsc	5,5	;volatile
  2169  037A  2B9E               	goto	l225
  2170                           
  2171                           ;main.c: 148:                 if(frequency < 1080)frequency++;
  2172  037B  3004               	movlw	4
  2173  037C  0245               	subwf	_frequency+1,w
  2174  037D  3038               	movlw	56
  2175  037E  1903               	skipnz
  2176  037F  0244               	subwf	_frequency,w
  2177  0380  1803               	skipnc
  2178  0381  2B88               	goto	l230
  2179  0382  3001               	movlw	1
  2180  0383  07C4               	addwf	_frequency,f
  2181  0384  1803               	skipnc
  2182  0385  0AC5               	incf	_frequency+1,f
  2183  0386  3000               	movlw	0
  2184  0387  07C5               	addwf	_frequency+1,f
  2185  0388                     l230:	
  2186                           
  2187                           ;main.c: 149:                 if(frequency > 1080)frequency = 1080;
  2188  0388  3004               	movlw	4
  2189  0389  0245               	subwf	_frequency+1,w
  2190  038A  3039               	movlw	57
  2191  038B  1903               	skipnz
  2192  038C  0244               	subwf	_frequency,w
  2193  038D  1C03               	skipc
  2194  038E  2B93               	goto	l231
  2195  038F  3038               	movlw	56
  2196  0390  00C4               	movwf	_frequency
  2197  0391  3004               	movlw	4
  2198  0392  00C5               	movwf	_frequency+1
  2199  0393                     l231:	
  2200                           
  2201                           ;main.c: 150:                 _delay((unsigned long)((100)*(4000000/4000.0)));
  2202  0393  3082               	movlw	130
  2203  0394  1683               	bsf	3,5	;RP0=1, select bank1
  2204  0395  1303               	bcf	3,6	;RP1=0, select bank1
  2205  0396  00DB               	movwf	(??_setFrequency^(0+128)+1)
  2206  0397  30DD               	movlw	221
  2207  0398  00DA               	movwf	??_setFrequency^(0+128)
  2208  0399                     u3167:	
  2209  0399  0BDA               	decfsz	??_setFrequency^(0+128),f
  2210  039A  2B99               	goto	u3167
  2211  039B  0BDB               	decfsz	(??_setFrequency^(0+128)+1),f
  2212  039C  2B99               	goto	u3167
  2213  039D  2B77               	goto	l3524
  2214  039E                     l225:	
  2215                           ;main.c: 152:         }
  2216                           
  2217                           
  2218                           ;main.c: 154:         if(!PORTAbits.RA3){
  2219  039E  1985               	btfsc	5,3	;volatile
  2220  039F  2BF8               	goto	l233
  2221                           
  2222                           ;main.c: 155:             if(frequency > 880)frequency--;
  2223  03A0  3003               	movlw	3
  2224  03A1  0245               	subwf	_frequency+1,w
  2225  03A2  3071               	movlw	113
  2226  03A3  1903               	skipnz
  2227  03A4  0244               	subwf	_frequency,w
  2228  03A5  1C03               	skipc
  2229  03A6  2BAD               	goto	l234
  2230  03A7  3001               	movlw	1
  2231  03A8  02C4               	subwf	_frequency,f
  2232  03A9  3000               	movlw	0
  2233  03AA  1C03               	skipc
  2234  03AB  03C5               	decf	_frequency+1,f
  2235  03AC  02C5               	subwf	_frequency+1,f
  2236  03AD                     l234:	
  2237                           
  2238                           ;main.c: 156:             if(frequency < 880)frequency = 880;
  2239  03AD  3003               	movlw	3
  2240  03AE  0245               	subwf	_frequency+1,w
  2241  03AF  3070               	movlw	112
  2242  03B0  1903               	skipnz
  2243  03B1  0244               	subwf	_frequency,w
  2244  03B2  1803               	skipnc
  2245  03B3  2BB8               	goto	l3532
  2246  03B4  3070               	movlw	112
  2247  03B5  00C4               	movwf	_frequency
  2248  03B6  3003               	movlw	3
  2249  03B7  00C5               	movwf	_frequency+1
  2250  03B8                     l3532:	
  2251                           
  2252                           ;main.c: 157:             beep(100);
  2253  03B8  3064               	movlw	100
  2254  03B9  1683               	bsf	3,5	;RP0=1, select bank1
  2255  03BA  1303               	bcf	3,6	;RP1=0, select bank1
  2256  03BB  00C2               	movwf	beep@ms^(0+128)
  2257  03BC  3000               	movlw	0
  2258  03BD  00C3               	movwf	(beep@ms^(0+128)+1)
  2259  03BE  120A  158A  2578  120A  118A  	fcall	_beep
  2260                           
  2261                           ;main.c: 158:             _delay((unsigned long)((500)*(4000000/4000.0)));
  2262  03C3  3003               	movlw	3
  2263  03C4  1683               	bsf	3,5	;RP0=1, select bank1
  2264  03C5  1303               	bcf	3,6	;RP1=0, select bank1
  2265  03C6  00DC               	movwf	(??_setFrequency^(0+128)+2)
  2266  03C7  308A               	movlw	138
  2267  03C8  00DB               	movwf	(??_setFrequency^(0+128)+1)
  2268  03C9  3055               	movlw	85
  2269  03CA  00DA               	movwf	??_setFrequency^(0+128)
  2270  03CB                     u3177:	
  2271  03CB  0BDA               	decfsz	??_setFrequency^(0+128),f
  2272  03CC  2BCB               	goto	u3177
  2273  03CD  0BDB               	decfsz	(??_setFrequency^(0+128)+1),f
  2274  03CE  2BCB               	goto	u3177
  2275  03CF  0BDC               	decfsz	(??_setFrequency^(0+128)+2),f
  2276  03D0  2BCB               	goto	u3177
  2277  03D1                     l3542:	
  2278                           ;main.c: 159:             while(!PORTAbits.RA3){
  2279                           
  2280                           
  2281                           ;main.c: 159:             while(!PORTAbits.RA3){
  2282  03D1  1283               	bcf	3,5	;RP0=0, select bank0
  2283  03D2  1303               	bcf	3,6	;RP1=0, select bank0
  2284  03D3  1985               	btfsc	5,3	;volatile
  2285  03D4  2BF8               	goto	l233
  2286                           
  2287                           ;main.c: 160:                 if(frequency > 880)frequency--;
  2288  03D5  3003               	movlw	3
  2289  03D6  0245               	subwf	_frequency+1,w
  2290  03D7  3071               	movlw	113
  2291  03D8  1903               	skipnz
  2292  03D9  0244               	subwf	_frequency,w
  2293  03DA  1C03               	skipc
  2294  03DB  2BE2               	goto	l238
  2295  03DC  3001               	movlw	1
  2296  03DD  02C4               	subwf	_frequency,f
  2297  03DE  3000               	movlw	0
  2298  03DF  1C03               	skipc
  2299  03E0  03C5               	decf	_frequency+1,f
  2300  03E1  02C5               	subwf	_frequency+1,f
  2301  03E2                     l238:	
  2302                           
  2303                           ;main.c: 161:                 if(frequency < 880)frequency = 880;
  2304  03E2  3003               	movlw	3
  2305  03E3  0245               	subwf	_frequency+1,w
  2306  03E4  3070               	movlw	112
  2307  03E5  1903               	skipnz
  2308  03E6  0244               	subwf	_frequency,w
  2309  03E7  1803               	skipnc
  2310  03E8  2BED               	goto	l239
  2311  03E9  3070               	movlw	112
  2312  03EA  00C4               	movwf	_frequency
  2313  03EB  3003               	movlw	3
  2314  03EC  00C5               	movwf	_frequency+1
  2315  03ED                     l239:	
  2316                           
  2317                           ;main.c: 162:                 _delay((unsigned long)((100)*(4000000/4000.0)));
  2318  03ED  3082               	movlw	130
  2319  03EE  1683               	bsf	3,5	;RP0=1, select bank1
  2320  03EF  1303               	bcf	3,6	;RP1=0, select bank1
  2321  03F0  00DB               	movwf	(??_setFrequency^(0+128)+1)
  2322  03F1  30DD               	movlw	221
  2323  03F2  00DA               	movwf	??_setFrequency^(0+128)
  2324  03F3                     u3187:	
  2325  03F3  0BDA               	decfsz	??_setFrequency^(0+128),f
  2326  03F4  2BF3               	goto	u3187
  2327  03F5  0BDB               	decfsz	(??_setFrequency^(0+128)+1),f
  2328  03F6  2BF3               	goto	u3187
  2329  03F7  2BD1               	goto	l3542
  2330  03F8                     l233:	
  2331                           ;main.c: 164:         }
  2332                           
  2333                           
  2334                           ;main.c: 166:         if(!PORTAbits.RA4){
  2335  03F8  1A05               	btfsc	5,4	;volatile
  2336  03F9  2B44               	goto	l224
  2337                           
  2338                           ;main.c: 167:             _delay((unsigned long)((500)*(4000000/4000.0)));
  2339  03FA  3003               	movlw	3
  2340  03FB  1683               	bsf	3,5	;RP0=1, select bank1
  2341  03FC  1303               	bcf	3,6	;RP1=0, select bank1
  2342  03FD  00DC               	movwf	(??_setFrequency^(0+128)+2)
  2343  03FE  308A               	movlw	138
  2344  03FF  00DB               	movwf	(??_setFrequency^(0+128)+1)
  2345  0400  3055               	movlw	85
  2346  0401  00DA               	movwf	??_setFrequency^(0+128)
  2347  0402                     u3197:	
  2348  0402  0BDA               	decfsz	??_setFrequency^(0+128),f
  2349  0403  2C02               	goto	u3197
  2350  0404  0BDB               	decfsz	(??_setFrequency^(0+128)+1),f
  2351  0405  2C02               	goto	u3197
  2352  0406  0BDC               	decfsz	(??_setFrequency^(0+128)+2),f
  2353  0407  2C02               	goto	u3197
  2354                           
  2355                           ;main.c: 168:             if(!PORTAbits.RA4){
  2356  0408  1283               	bcf	3,5	;RP0=0, select bank0
  2357  0409  1303               	bcf	3,6	;RP1=0, select bank0
  2358  040A  1A05               	btfsc	5,4	;volatile
  2359  040B  2B44               	goto	l224
  2360                           
  2361                           ;main.c: 169:                 setData(1);
  2362  040C  3001               	movlw	1
  2363  040D  120A  118A  270A  120A  118A  	fcall	_setData
  2364                           
  2365                           ;main.c: 170:                 beep(1000);
  2366  0412  30E8               	movlw	232
  2367  0413  1683               	bsf	3,5	;RP0=1, select bank1
  2368  0414  1303               	bcf	3,6	;RP1=0, select bank1
  2369  0415  00C2               	movwf	beep@ms^(0+128)
  2370  0416  3003               	movlw	3
  2371  0417  00C3               	movwf	(beep@ms^(0+128)+1)
  2372  0418  120A  158A  2578  120A  118A  	fcall	_beep
  2373                           
  2374                           ;main.c: 175:     writeFrequency(frequency);
  2375                           
  2376                           ;main.c: 171:                 break;
  2377  041D  1283               	bcf	3,5	;RP0=0, select bank0
  2378  041E  1303               	bcf	3,6	;RP1=0, select bank0
  2379  041F  0845               	movf	_frequency+1,w
  2380  0420  00C0               	movwf	writeFrequency@f+1
  2381  0421  0844               	movf	_frequency,w
  2382  0422  00BF               	movwf	writeFrequency@f
  2383  0423  120A  118A  25BF   	fcall	_writeFrequency
  2384                           
  2385                           ;main.c: 176:     isOnConfig = 0;
  2386  0426  1283               	bcf	3,5	;RP0=0, select bank0
  2387  0427  1303               	bcf	3,6	;RP1=0, select bank0
  2388  0428  01C7               	clrf	_isOnConfig
  2389  0429  0008               	return
  2390  042A                     __end_of_setFrequency:	
  2391                           
  2392                           	psect	text5
  2393  0035                     __ptext5:	
  2394 ;; *************** function _sprintf *****************
  2395 ;; Defined at:
  2396 ;;		line 500 in file "/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt.c"
  2397 ;; Parameters:    Size  Location     Type
  2398 ;;  sp              1    wreg     PTR unsigned char 
  2399 ;;		 -> lineTwo(17), lineOne(17), 
  2400 ;;  f               1    7[BANK1 ] PTR const unsigned char 
  2401 ;;		 -> STR_5(18), STR_4(17), STR_3(17), STR_2(17), 
  2402 ;;		 -> STR_1(17), 
  2403 ;; Auto vars:     Size  Location     Type
  2404 ;;  sp              1   22[BANK1 ] PTR unsigned char 
  2405 ;;		 -> lineTwo(17), lineOne(17), 
  2406 ;;  tmpval          4    0        struct .
  2407 ;;  width           2   20[BANK1 ] int 
  2408 ;;  val             2   18[BANK1 ] unsigned int 
  2409 ;;  cp              2    0        PTR const unsigned char 
  2410 ;;  len             2    0        unsigned int 
  2411 ;;  c               1   23[BANK1 ] unsigned char 
  2412 ;;  flag            1   17[BANK1 ] unsigned char 
  2413 ;;  prec            1   16[BANK1 ] char 
  2414 ;;  ap              1   15[BANK1 ] PTR void [1]
  2415 ;;		 -> ?_sprintf(2), 
  2416 ;; Return value:  Size  Location     Type
  2417 ;;                  2    7[BANK1 ] int 
  2418 ;; Registers used:
  2419 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2420 ;; Tracked objects:
  2421 ;;		On entry : 0/0
  2422 ;;		On exit  : 0/0
  2423 ;;		Unchanged: 0/0
  2424 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2425 ;;      Params:         0       0       5       0       0
  2426 ;;      Locals:         0       0       9       0       0
  2427 ;;      Temps:          0       0       3       0       0
  2428 ;;      Totals:         0       0      17       0       0
  2429 ;;Total ram usage:       17 bytes
  2430 ;; Hardware stack levels used:    1
  2431 ;; Hardware stack levels required when called:    6
  2432 ;; This function calls:
  2433 ;;		___lwdiv
  2434 ;;		___lwmod
  2435 ;;		___wmul
  2436 ;;		_isdigit
  2437 ;; This function is called by:
  2438 ;;		_main
  2439 ;;		_setFrequency
  2440 ;;		_updateLCD
  2441 ;; This function uses a non-reentrant model
  2442 ;;
  2443                           
  2444                           
  2445                           ;psect for function _sprintf
  2446  0035                     _sprintf:	
  2447                           
  2448                           ;incstack = 0
  2449 ;; using string table level
  2450                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2451                           ;sprintf@sp stored from wreg
  2452  0035  1683               	bsf	3,5	;RP0=1, select bank1
  2453  0036  1303               	bcf	3,6	;RP1=0, select bank1
  2454  0037  00D8               	movwf	sprintf@sp^(0+128)
  2455                           
  2456                           ;/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt.c: 500: sprintf(char * sp, const
      +                           char * f, ...);/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt.c: 501: {;/opt/mi
      +                          crochip/xc8/v2.05/pic/sources/c90/common/doprnt.c: 502:  va_list ap;;/opt/microchip/xc8/
      +                          v2.05/pic/sources/c90/common/doprnt.c: 507:  char c;;/opt/microchip/xc8/v2.05/pic/source
      +                          s/c90/common/doprnt.c: 509:  int width;;/opt/microchip/xc8/v2.05/pic/sources/c90/common/
      +                          doprnt.c: 516:  signed char prec;;/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt
      +                          .c: 520:  unsigned char flag;
  2457  0038  30CA               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  2458  0039  00CE               	movwf	??_sprintf^(0+128)
  2459  003A  084E               	movf	??_sprintf^(0+128),w
  2460  003B  00D1               	movwf	sprintf@ap^(0+128)
  2461  003C                     l3444:	
  2462                           ;/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt.c: 548:  while((c = *f++)) {
  2463                           
  2464                           
  2465                           ;/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt.c: 548:  while((c = *f++)) {
  2466  003C  3001               	movlw	1
  2467  003D  07C9               	addwf	sprintf@f^(0+128),f
  2468  003E  30FF               	movlw	-1
  2469  003F  0749               	addwf	sprintf@f^(0+128),w
  2470  0040  0084               	movwf	4
  2471  0041  120A  118A  263D  120A  118A  	fcall	stringdir
  2472  0046  00CE               	movwf	??_sprintf^(0+128)
  2473  0047  084E               	movf	??_sprintf^(0+128),w
  2474  0048  00D9               	movwf	sprintf@c^(0+128)
  2475  0049  0859               	movf	sprintf@c^(0+128),w
  2476  004A  1903               	btfsc	3,2
  2477  004B  29B8               	goto	l3446
  2478                           
  2479                           ;/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt.c: 550:   if(c != '%')
  2480  004C  3025               	movlw	37
  2481  004D  0659               	xorwf	sprintf@c^(0+128),w
  2482  004E  1903               	btfsc	3,2
  2483  004F  285C               	goto	l3370
  2484                           
  2485                           ;/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt.c: 552:   {;/opt/microchip/xc8/v
      +                          2.05/pic/sources/c90/common/doprnt.c: 553:    ((*sp++ = (c)));
  2486  0050  0859               	movf	sprintf@c^(0+128),w
  2487  0051  00CE               	movwf	??_sprintf^(0+128)
  2488  0052  0858               	movf	sprintf@sp^(0+128),w
  2489  0053  0084               	movwf	4
  2490  0054  084E               	movf	??_sprintf^(0+128),w
  2491  0055  1383               	bcf	3,7	;select IRP bank0
  2492  0056  0080               	movwf	0
  2493  0057  3001               	movlw	1
  2494  0058  00CE               	movwf	??_sprintf^(0+128)
  2495  0059  084E               	movf	??_sprintf^(0+128),w
  2496  005A  07D8               	addwf	sprintf@sp^(0+128),f
  2497                           
  2498                           ;/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt.c: 554:    continue;
  2499  005B  283C               	goto	l3444
  2500  005C                     l3370:	
  2501                           
  2502                           ;/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt.c: 558:   width = 0;
  2503  005C  01D6               	clrf	sprintf@width^(0+128)
  2504  005D  01D7               	clrf	(sprintf@width+1)^(0+128)
  2505                           
  2506                           ;/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt.c: 560:   flag = 0;
  2507  005E  01D3               	clrf	sprintf@flag^(0+128)
  2508                           
  2509                           ;/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt.c: 609:   if(isdigit((unsigned)*
      +                          f)) {
  2510  005F  0849               	movf	sprintf@f^(0+128),w
  2511  0060  0084               	movwf	4
  2512  0061  120A  118A  263D  120A  118A  	fcall	stringdir
  2513  0066  120A  158A  22D4  120A  118A  	fcall	_isdigit
  2514  006B  1C03               	btfss	3,0
  2515  006C  28B9               	goto	l3386
  2516                           
  2517                           ;/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt.c: 610:    width = 0;
  2518  006D  1683               	bsf	3,5	;RP0=1, select bank1
  2519  006E  1303               	bcf	3,6	;RP1=0, select bank1
  2520  006F  01D6               	clrf	sprintf@width^(0+128)
  2521  0070  01D7               	clrf	(sprintf@width+1)^(0+128)
  2522  0071                     l3376:	
  2523                           
  2524                           ;/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt.c: 612:     width *= 10;
  2525  0071  300A               	movlw	10
  2526  0072  1283               	bcf	3,5	;RP0=0, select bank0
  2527  0073  1303               	bcf	3,6	;RP1=0, select bank0
  2528  0074  00BD               	movwf	___wmul@multiplier
  2529  0075  3000               	movlw	0
  2530  0076  00BE               	movwf	___wmul@multiplier+1
  2531  0077  1683               	bsf	3,5	;RP0=1, select bank1
  2532  0078  1303               	bcf	3,6	;RP1=0, select bank1
  2533  0079  0857               	movf	(sprintf@width+1)^(0+128),w
  2534  007A  1283               	bcf	3,5	;RP0=0, select bank0
  2535  007B  1303               	bcf	3,6	;RP1=0, select bank0
  2536  007C  00C0               	movwf	___wmul@multiplicand+1
  2537  007D  1683               	bsf	3,5	;RP0=1, select bank1
  2538  007E  1303               	bcf	3,6	;RP1=0, select bank1
  2539  007F  0856               	movf	sprintf@width^(0+128),w
  2540  0080  1283               	bcf	3,5	;RP0=0, select bank0
  2541  0081  1303               	bcf	3,6	;RP1=0, select bank0
  2542  0082  00BF               	movwf	___wmul@multiplicand
  2543  0083  120A  158A  2379  120A  118A  	fcall	___wmul
  2544  0088  1283               	bcf	3,5	;RP0=0, select bank0
  2545  0089  1303               	bcf	3,6	;RP1=0, select bank0
  2546  008A  083E               	movf	?___wmul+1,w
  2547  008B  1683               	bsf	3,5	;RP0=1, select bank1
  2548  008C  1303               	bcf	3,6	;RP1=0, select bank1
  2549  008D  00D7               	movwf	(sprintf@width+1)^(0+128)
  2550  008E  1283               	bcf	3,5	;RP0=0, select bank0
  2551  008F  1303               	bcf	3,6	;RP1=0, select bank0
  2552  0090  083D               	movf	?___wmul,w
  2553  0091  1683               	bsf	3,5	;RP0=1, select bank1
  2554  0092  1303               	bcf	3,6	;RP1=0, select bank1
  2555  0093  00D6               	movwf	sprintf@width^(0+128)
  2556                           
  2557                           ;/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt.c: 613:        width += *f++ - '
      +                          0';
  2558  0094  0849               	movf	sprintf@f^(0+128),w
  2559  0095  0084               	movwf	4
  2560  0096  120A  118A  263D  120A  118A  	fcall	stringdir
  2561  009B  3ED0               	addlw	208
  2562  009C  00CE               	movwf	??_sprintf^(0+128)
  2563  009D  30FF               	movlw	255
  2564  009E  1803               	skipnc
  2565  009F  3000               	movlw	0
  2566  00A0  00CF               	movwf	(??_sprintf^(0+128)+1)
  2567  00A1  084E               	movf	??_sprintf^(0+128),w
  2568  00A2  07D6               	addwf	sprintf@width^(0+128),f
  2569  00A3  1803               	skipnc
  2570  00A4  0AD7               	incf	(sprintf@width+1)^(0+128),f
  2571  00A5  084F               	movf	(??_sprintf+1)^(0+128),w
  2572  00A6  07D7               	addwf	(sprintf@width+1)^(0+128),f
  2573  00A7  3001               	movlw	1
  2574  00A8  00CE               	movwf	??_sprintf^(0+128)
  2575  00A9  084E               	movf	??_sprintf^(0+128),w
  2576  00AA  07C9               	addwf	sprintf@f^(0+128),f
  2577                           
  2578                           ;/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt.c: 614:    } while(isdigit((unsi
      +                          gned)*f));
  2579  00AB  0849               	movf	sprintf@f^(0+128),w
  2580  00AC  0084               	movwf	4
  2581  00AD  120A  118A  263D  120A  118A  	fcall	stringdir
  2582  00B2  120A  158A  22D4  120A  118A  	fcall	_isdigit
  2583  00B7  1803               	btfsc	3,0
  2584  00B8  2871               	goto	l3376
  2585  00B9                     l3386:	
  2586  00B9  3001               	movlw	1
  2587  00BA  1683               	bsf	3,5	;RP0=1, select bank1
  2588  00BB  1303               	bcf	3,6	;RP1=0, select bank1
  2589  00BC  07C9               	addwf	sprintf@f^(0+128),f
  2590  00BD  30FF               	movlw	-1
  2591  00BE  0749               	addwf	sprintf@f^(0+128),w
  2592  00BF  0084               	movwf	4
  2593  00C0  120A  118A  263D  120A  118A  	fcall	stringdir
  2594  00C5  00D9               	movwf	sprintf@c^(0+128)
  2595  00C6  00CE               	movwf	??_sprintf^(0+128)
  2596  00C7  01CF               	clrf	(??_sprintf^(0+128)+1)
  2597                           
  2598                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2599                           ; Switch size 1, requested type "simple"
  2600                           ; Number of cases is 1, Range of values is 0 to 0
  2601                           ; switch strategies available:
  2602                           ; Name         Instructions Cycles
  2603                           ; simple_byte            4     3 (average)
  2604                           ; direct_byte           11     8 (fixed)
  2605                           ; jumptable            260     6 (fixed)
  2606                           ;	Chosen strategy is simple_byte
  2607  00C8  084F               	movf	(??_sprintf+1)^(0+128),w
  2608  00C9  3A00               	xorlw	0	; case 0
  2609  00CA  1903               	skipnz
  2610  00CB  28CD               	goto	l3670
  2611  00CC  283C               	goto	l3444
  2612  00CD                     l3670:	
  2613                           
  2614                           ; Switch size 1, requested type "simple"
  2615                           ; Number of cases is 3, Range of values is 0 to 105
  2616                           ; switch strategies available:
  2617                           ; Name         Instructions Cycles
  2618                           ; simple_byte           10     6 (average)
  2619                           ; jumptable            260     6 (fixed)
  2620                           ;	Chosen strategy is simple_byte
  2621  00CD  084E               	movf	??_sprintf^(0+128),w
  2622  00CE  3A00               	xorlw	0	; case 0
  2623  00CF  1903               	skipnz
  2624  00D0  29B8               	goto	l3446
  2625  00D1  3A64               	xorlw	100	; case 100
  2626  00D2  1903               	skipnz
  2627  00D3  28D8               	goto	l3388
  2628  00D4  3A0D               	xorlw	13	; case 105
  2629  00D5  1903               	skipnz
  2630  00D6  28D8               	goto	l3388
  2631  00D7  283C               	goto	l3444
  2632  00D8                     l3388:	
  2633                           
  2634                           ;/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt.c: 1272:   {;/opt/microchip/xc8/
      +                          v2.05/pic/sources/c90/common/doprnt.c: 1278:     val = (int)(*(int *)__va_arg((*(int **)
      +                          ap), (int)0));
  2635  00D8  0851               	movf	sprintf@ap^(0+128),w
  2636  00D9  0084               	movwf	4
  2637  00DA  1383               	bcf	3,7	;select IRP bank0
  2638  00DB  0800               	movf	0,w
  2639  00DC  00D4               	movwf	sprintf@val^(0+128)
  2640  00DD  0A84               	incf	4,f
  2641  00DE  0800               	movf	0,w
  2642  00DF  00D5               	movwf	(sprintf@val+1)^(0+128)
  2643  00E0  3002               	movlw	2
  2644  00E1  00CE               	movwf	??_sprintf^(0+128)
  2645  00E2  084E               	movf	??_sprintf^(0+128),w
  2646  00E3  07D1               	addwf	sprintf@ap^(0+128),f
  2647                           
  2648                           ;/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt.c: 1280:    if((int)val < 0) {
  2649  00E4  1FD5               	btfss	(sprintf@val+1)^(0+128),7
  2650  00E5  28EF               	goto	l3398
  2651                           
  2652                           ;/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt.c: 1281:     flag |= 0x03;
  2653  00E6  3003               	movlw	3
  2654  00E7  00CE               	movwf	??_sprintf^(0+128)
  2655  00E8  084E               	movf	??_sprintf^(0+128),w
  2656  00E9  04D3               	iorwf	sprintf@flag^(0+128),f
  2657                           
  2658                           ;/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt.c: 1282:     val = -val;
  2659  00EA  09D4               	comf	sprintf@val^(0+128),f
  2660  00EB  09D5               	comf	(sprintf@val+1)^(0+128),f
  2661  00EC  0AD4               	incf	sprintf@val^(0+128),f
  2662  00ED  1903               	skipnz
  2663  00EE  0AD5               	incf	(sprintf@val+1)^(0+128),f
  2664  00EF                     l3398:	
  2665                           
  2666                           ;/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt.c: 1285:   };/opt/microchip/xc8/
      +                          v2.05/pic/sources/c90/common/doprnt.c: 1324:    for(c = 1 ; c != sizeof dpowers/sizeof d
      +                          powers[0] ; c++)
  2667  00EF  01D9               	clrf	sprintf@c^(0+128)
  2668  00F0  0AD9               	incf	sprintf@c^(0+128),f
  2669  00F1                     l3404:	
  2670                           
  2671                           ;/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt.c: 1325:     if(val < dpowers[c]
      +                          )
  2672  00F1  0859               	movf	sprintf@c^(0+128),w
  2673  00F2  00CE               	movwf	??_sprintf^(0+128)
  2674  00F3  074E               	addwf	??_sprintf^(0+128),w
  2675  00F4  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2676  00F5  0084               	movwf	4
  2677  00F6  120A  118A  263D  120A  118A  	fcall	stringdir
  2678  00FB  00CF               	movwf	(??_sprintf+1)^(0+128)
  2679  00FC  120A  118A  263D  120A  118A  	fcall	stringdir
  2680  0101  00D0               	movwf	((??_sprintf+1)^(0+128)+1)
  2681  0102  0850               	movf	(??_sprintf+2)^(0+128),w
  2682  0103  0255               	subwf	(sprintf@val+1)^(0+128),w
  2683  0104  1D03               	skipz
  2684  0105  2908               	goto	u2805
  2685  0106  084F               	movf	(??_sprintf+1)^(0+128),w
  2686  0107  0254               	subwf	sprintf@val^(0+128),w
  2687  0108                     u2805:	
  2688  0108  1C03               	btfss	3,0
  2689  0109  2912               	goto	l3410
  2690  010A  3001               	movlw	1
  2691  010B  00CE               	movwf	??_sprintf^(0+128)
  2692  010C  084E               	movf	??_sprintf^(0+128),w
  2693  010D  07D9               	addwf	sprintf@c^(0+128),f
  2694  010E  3005               	movlw	5
  2695  010F  0659               	xorwf	sprintf@c^(0+128),w
  2696  0110  1D03               	btfss	3,2
  2697  0111  28F1               	goto	l3404
  2698  0112                     l3410:	
  2699                           
  2700                           ;/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt.c: 1364:   if(width && flag & 0x
      +                          03)
  2701  0112  0856               	movf	sprintf@width^(0+128),w
  2702  0113  0457               	iorwf	(sprintf@width+1)^(0+128),w
  2703  0114  1903               	btfsc	3,2
  2704  0115  2920               	goto	l618
  2705  0116  0853               	movf	sprintf@flag^(0+128),w
  2706  0117  3903               	andlw	3
  2707  0118  1903               	btfsc	3,2
  2708  0119  2920               	goto	l618
  2709                           
  2710                           ;/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt.c: 1365:    width--;
  2711  011A  30FF               	movlw	255
  2712  011B  07D6               	addwf	sprintf@width^(0+128),f
  2713  011C  1803               	skipnc
  2714  011D  0AD7               	incf	(sprintf@width+1)^(0+128),f
  2715  011E  30FF               	movlw	255
  2716  011F  07D7               	addwf	(sprintf@width+1)^(0+128),f
  2717  0120                     l618:	
  2718                           
  2719                           ;/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt.c: 1400:   if(width > c)
  2720  0120  0857               	movf	(sprintf@width+1)^(0+128),w
  2721  0121  3A80               	xorlw	128
  2722  0122  3C80               	sublw	128
  2723  0123  1D03               	skipz
  2724  0124  2927               	goto	u2845
  2725  0125  0856               	movf	sprintf@width^(0+128),w
  2726  0126  0259               	subwf	sprintf@c^(0+128),w
  2727  0127                     u2845:	
  2728  0127  1803               	skipnc
  2729  0128  2935               	goto	l3418
  2730                           
  2731                           ;/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt.c: 1401:    width -= c;
  2732  0129  1683               	bsf	3,5	;RP0=1, select bank1
  2733  012A  1303               	bcf	3,6	;RP1=0, select bank1
  2734  012B  0859               	movf	sprintf@c^(0+128),w
  2735  012C  00CE               	movwf	??_sprintf^(0+128)
  2736  012D  01CF               	clrf	(??_sprintf^(0+128)+1)
  2737  012E  084E               	movf	??_sprintf^(0+128),w
  2738  012F  02D6               	subwf	sprintf@width^(0+128),f
  2739  0130  084F               	movf	(??_sprintf+1)^(0+128),w
  2740  0131  1C03               	skipc
  2741  0132  03D7               	decf	(sprintf@width+1)^(0+128),f
  2742  0133  02D7               	subwf	(sprintf@width+1)^(0+128),f
  2743  0134  2939               	goto	l3420
  2744  0135                     l3418:	
  2745                           
  2746                           ;/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt.c: 1403:    width = 0;
  2747  0135  1683               	bsf	3,5	;RP0=1, select bank1
  2748  0136  1303               	bcf	3,6	;RP1=0, select bank1
  2749  0137  01D6               	clrf	sprintf@width^(0+128)
  2750  0138  01D7               	clrf	(sprintf@width+1)^(0+128)
  2751  0139                     l3420:	
  2752                           
  2753                           ;/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt.c: 1441:   {;/opt/microchip/xc8/
      +                          v2.05/pic/sources/c90/common/doprnt.c: 1443:    if(width
  2754  0139  0856               	movf	sprintf@width^(0+128),w
  2755  013A  0457               	iorwf	(sprintf@width+1)^(0+128),w
  2756  013B  1903               	btfsc	3,2
  2757  013C  2952               	goto	l3428
  2758  013D                     l3422:	
  2759                           
  2760                           ;/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt.c: 1449:      ((*sp++ = (' ')));
  2761  013D  3020               	movlw	32
  2762  013E  00CE               	movwf	??_sprintf^(0+128)
  2763  013F  0858               	movf	sprintf@sp^(0+128),w
  2764  0140  0084               	movwf	4
  2765  0141  084E               	movf	??_sprintf^(0+128),w
  2766  0142  1383               	bcf	3,7	;select IRP bank0
  2767  0143  0080               	movwf	0
  2768  0144  3001               	movlw	1
  2769  0145  00CE               	movwf	??_sprintf^(0+128)
  2770  0146  084E               	movf	??_sprintf^(0+128),w
  2771  0147  07D8               	addwf	sprintf@sp^(0+128),f
  2772  0148  30FF               	movlw	255
  2773  0149  07D6               	addwf	sprintf@width^(0+128),f
  2774  014A  1803               	skipnc
  2775  014B  0AD7               	incf	(sprintf@width+1)^(0+128),f
  2776  014C  30FF               	movlw	255
  2777  014D  07D7               	addwf	(sprintf@width+1)^(0+128),f
  2778  014E  0856               	movf	sprintf@width^(0+128),w
  2779  014F  0457               	iorwf	(sprintf@width+1)^(0+128),w
  2780  0150  1D03               	btfss	3,2
  2781  0151  293D               	goto	l3422
  2782  0152                     l3428:	
  2783                           
  2784                           ;/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt.c: 1457:    if(flag & 0x03)
  2785  0152  0853               	movf	sprintf@flag^(0+128),w
  2786  0153  3903               	andlw	3
  2787  0154  1903               	btfsc	3,2
  2788  0155  2961               	goto	l3434
  2789                           
  2790                           ;/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt.c: 1458:     ((*sp++ = ('-')));
  2791  0156  302D               	movlw	45
  2792  0157  00CE               	movwf	??_sprintf^(0+128)
  2793  0158  0858               	movf	sprintf@sp^(0+128),w
  2794  0159  0084               	movwf	4
  2795  015A  084E               	movf	??_sprintf^(0+128),w
  2796  015B  1383               	bcf	3,7	;select IRP bank0
  2797  015C  0080               	movwf	0
  2798  015D  3001               	movlw	1
  2799  015E  00CE               	movwf	??_sprintf^(0+128)
  2800  015F  084E               	movf	??_sprintf^(0+128),w
  2801  0160  07D8               	addwf	sprintf@sp^(0+128),f
  2802  0161                     l3434:	
  2803                           
  2804                           ;/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt.c: 1488:   };/opt/microchip/xc8/
      +                          v2.05/pic/sources/c90/common/doprnt.c: 1491:   prec = c;
  2805  0161  0859               	movf	sprintf@c^(0+128),w
  2806  0162  00CE               	movwf	??_sprintf^(0+128)
  2807  0163  084E               	movf	??_sprintf^(0+128),w
  2808  0164  00D2               	movwf	sprintf@prec^(0+128)
  2809  0165                     l3442:	
  2810                           ;/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt.c: 1493:   while(prec--) {
  2811                           
  2812                           
  2813                           ;/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt.c: 1493:   while(prec--) {
  2814  0165  30FF               	movlw	255
  2815  0166  00CE               	movwf	??_sprintf^(0+128)
  2816  0167  084E               	movf	??_sprintf^(0+128),w
  2817  0168  07D2               	addwf	sprintf@prec^(0+128),f
  2818  0169  0A52               	incf	sprintf@prec^(0+128),w
  2819  016A  1903               	btfsc	3,2
  2820  016B  283C               	goto	l3444
  2821                           
  2822                           ;/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt.c: 1497:    {;/opt/microchip/xc8
      +                          /v2.05/pic/sources/c90/common/doprnt.c: 1508:     c = (val / dpowers[prec]) % 10 + '0';
  2823  016C  300A               	movlw	10
  2824  016D  00C5               	movwf	___lwmod@divisor^(0+128)
  2825  016E  3000               	movlw	0
  2826  016F  00C6               	movwf	(___lwmod@divisor^(0+128)+1)
  2827  0170  0852               	movf	sprintf@prec^(0+128),w
  2828  0171  00CE               	movwf	??_sprintf^(0+128)
  2829  0172  074E               	addwf	??_sprintf^(0+128),w
  2830  0173  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2831  0174  0084               	movwf	4
  2832  0175  120A  118A  263D  120A  118A  	fcall	stringdir
  2833  017A  1283               	bcf	3,5	;RP0=0, select bank0
  2834  017B  1303               	bcf	3,6	;RP1=0, select bank0
  2835  017C  00BD               	movwf	___lwdiv@divisor
  2836  017D  120A  118A  263D  120A  118A  	fcall	stringdir
  2837  0182  00BE               	movwf	___lwdiv@divisor+1
  2838  0183  1683               	bsf	3,5	;RP0=1, select bank1
  2839  0184  1303               	bcf	3,6	;RP1=0, select bank1
  2840  0185  0855               	movf	(sprintf@val+1)^(0+128),w
  2841  0186  1283               	bcf	3,5	;RP0=0, select bank0
  2842  0187  1303               	bcf	3,6	;RP1=0, select bank0
  2843  0188  00C0               	movwf	___lwdiv@dividend+1
  2844  0189  1683               	bsf	3,5	;RP0=1, select bank1
  2845  018A  1303               	bcf	3,6	;RP1=0, select bank1
  2846  018B  0854               	movf	sprintf@val^(0+128),w
  2847  018C  1283               	bcf	3,5	;RP0=0, select bank0
  2848  018D  1303               	bcf	3,6	;RP1=0, select bank0
  2849  018E  00BF               	movwf	___lwdiv@dividend
  2850  018F  120A  158A  274E  120A  118A  	fcall	___lwdiv
  2851  0194  1283               	bcf	3,5	;RP0=0, select bank0
  2852  0195  1303               	bcf	3,6	;RP1=0, select bank0
  2853  0196  083E               	movf	?___lwdiv+1,w
  2854  0197  1683               	bsf	3,5	;RP0=1, select bank1
  2855  0198  1303               	bcf	3,6	;RP1=0, select bank1
  2856  0199  00C8               	movwf	(___lwmod@dividend+1)^(0+128)
  2857  019A  1283               	bcf	3,5	;RP0=0, select bank0
  2858  019B  1303               	bcf	3,6	;RP1=0, select bank0
  2859  019C  083D               	movf	?___lwdiv,w
  2860  019D  1683               	bsf	3,5	;RP0=1, select bank1
  2861  019E  1303               	bcf	3,6	;RP1=0, select bank1
  2862  019F  00C7               	movwf	___lwmod@dividend^(0+128)
  2863  01A0  120A  158A  24A5  120A  118A  	fcall	___lwmod
  2864  01A5  1683               	bsf	3,5	;RP0=1, select bank1
  2865  01A6  1303               	bcf	3,6	;RP1=0, select bank1
  2866  01A7  0845               	movf	?___lwmod^(0+128),w
  2867  01A8  3E30               	addlw	48
  2868  01A9  00CF               	movwf	(??_sprintf+1)^(0+128)
  2869  01AA  084F               	movf	(??_sprintf+1)^(0+128),w
  2870  01AB  00D9               	movwf	sprintf@c^(0+128)
  2871                           
  2872                           ;/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt.c: 1542:    };/opt/microchip/xc8
      +                          /v2.05/pic/sources/c90/common/doprnt.c: 1543:    ((*sp++ = (c)));
  2873  01AC  0859               	movf	sprintf@c^(0+128),w
  2874  01AD  00CE               	movwf	??_sprintf^(0+128)
  2875  01AE  0858               	movf	sprintf@sp^(0+128),w
  2876  01AF  0084               	movwf	4
  2877  01B0  084E               	movf	??_sprintf^(0+128),w
  2878  01B1  1383               	bcf	3,7	;select IRP bank0
  2879  01B2  0080               	movwf	0
  2880  01B3  3001               	movlw	1
  2881  01B4  00CE               	movwf	??_sprintf^(0+128)
  2882  01B5  084E               	movf	??_sprintf^(0+128),w
  2883  01B6  07D8               	addwf	sprintf@sp^(0+128),f
  2884  01B7  2965               	goto	l3442
  2885  01B8                     l3446:	
  2886                           
  2887                           ;/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt.c: 1557:  *sp = 0;
  2888  01B8  0858               	movf	sprintf@sp^(0+128),w
  2889  01B9  0084               	movwf	4
  2890  01BA  1383               	bcf	3,7	;select IRP bank0
  2891  01BB  0180               	clrf	0
  2892  01BC  0008               	return
  2893  01BD                     __end_of_sprintf:	
  2894                           
  2895                           	psect	text6
  2896  0AD4                     __ptext6:	
  2897 ;; *************** function _isdigit *****************
  2898 ;; Defined at:
  2899 ;;		line 8 in file "/opt/microchip/xc8/v2.05/pic/sources/c90/common/isdigit.c"
  2900 ;; Parameters:    Size  Location     Type
  2901 ;;  c               1    wreg     unsigned char 
  2902 ;; Auto vars:     Size  Location     Type
  2903 ;;  c               1   30[BANK0 ] unsigned char 
  2904 ;; Return value:  Size  Location     Type
  2905 ;;		None               void
  2906 ;; Registers used:
  2907 ;;		wreg, status,2, status,0
  2908 ;; Tracked objects:
  2909 ;;		On entry : 0/0
  2910 ;;		On exit  : 0/0
  2911 ;;		Unchanged: 0/0
  2912 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2913 ;;      Params:         0       0       0       0       0
  2914 ;;      Locals:         0       2       0       0       0
  2915 ;;      Temps:          0       0       0       0       0
  2916 ;;      Totals:         0       2       0       0       0
  2917 ;;Total ram usage:        2 bytes
  2918 ;; Hardware stack levels used:    1
  2919 ;; Hardware stack levels required when called:    5
  2920 ;; This function calls:
  2921 ;;		Nothing
  2922 ;; This function is called by:
  2923 ;;		_sprintf
  2924 ;; This function uses a non-reentrant model
  2925 ;;
  2926                           
  2927                           
  2928                           ;psect for function _isdigit
  2929  0AD4                     _isdigit:	
  2930                           
  2931                           ;incstack = 0
  2932                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  2933                           ;isdigit@c stored from wreg
  2934  0AD4  1283               	bcf	3,5	;RP0=0, select bank0
  2935  0AD5  1303               	bcf	3,6	;RP1=0, select bank0
  2936  0AD6  00BE               	movwf	isdigit@c
  2937  0AD7  01BD               	clrf	_isdigit$1068
  2938  0AD8  303A               	movlw	58
  2939  0AD9  023E               	subwf	isdigit@c,w
  2940  0ADA  1803               	skipnc
  2941  0ADB  2AE2               	goto	l2414
  2942  0ADC  3030               	movlw	48
  2943  0ADD  023E               	subwf	isdigit@c,w
  2944  0ADE  1C03               	skipc
  2945  0ADF  2AE2               	goto	l2414
  2946  0AE0  01BD               	clrf	_isdigit$1068
  2947  0AE1  0ABD               	incf	_isdigit$1068,f
  2948  0AE2                     l2414:	
  2949  0AE2  0C3D               	rrf	_isdigit$1068,w
  2950  0AE3  0008               	return
  2951  0AE4                     __end_of_isdigit:	
  2952                           
  2953                           	psect	text7
  2954  0CA5                     __ptext7:	
  2955 ;; *************** function ___lwmod *****************
  2956 ;; Defined at:
  2957 ;;		line 5 in file "/opt/microchip/xc8/v2.05/pic/sources/c90/common/lwmod.c"
  2958 ;; Parameters:    Size  Location     Type
  2959 ;;  divisor         2    3[BANK1 ] unsigned int 
  2960 ;;  dividend        2    5[BANK1 ] unsigned int 
  2961 ;; Auto vars:     Size  Location     Type
  2962 ;;  counter         1   35[BANK0 ] unsigned char 
  2963 ;; Return value:  Size  Location     Type
  2964 ;;                  2    3[BANK1 ] unsigned int 
  2965 ;; Registers used:
  2966 ;;		wreg, status,2, status,0
  2967 ;; Tracked objects:
  2968 ;;		On entry : 0/0
  2969 ;;		On exit  : 0/0
  2970 ;;		Unchanged: 0/0
  2971 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2972 ;;      Params:         0       0       4       0       0
  2973 ;;      Locals:         0       1       0       0       0
  2974 ;;      Temps:          0       1       0       0       0
  2975 ;;      Totals:         0       2       4       0       0
  2976 ;;Total ram usage:        6 bytes
  2977 ;; Hardware stack levels used:    1
  2978 ;; Hardware stack levels required when called:    5
  2979 ;; This function calls:
  2980 ;;		Nothing
  2981 ;; This function is called by:
  2982 ;;		_updateLCD
  2983 ;;		_sprintf
  2984 ;; This function uses a non-reentrant model
  2985 ;;
  2986                           
  2987                           
  2988                           ;psect for function ___lwmod
  2989  0CA5                     ___lwmod:	
  2990                           
  2991                           ;incstack = 0
  2992                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  2993  0CA5  1683               	bsf	3,5	;RP0=1, select bank1
  2994  0CA6  1303               	bcf	3,6	;RP1=0, select bank1
  2995  0CA7  0845               	movf	___lwmod@divisor^(0+128),w
  2996  0CA8  0446               	iorwf	(___lwmod@divisor+1)^(0+128),w
  2997  0CA9  1903               	btfsc	3,2
  2998  0CAA  2CDE               	goto	l3346
  2999  0CAB  1283               	bcf	3,5	;RP0=0, select bank0
  3000  0CAC  1303               	bcf	3,6	;RP1=0, select bank0
  3001  0CAD  01C3               	clrf	___lwmod@counter
  3002  0CAE  0AC3               	incf	___lwmod@counter,f
  3003  0CAF                     l3336:	
  3004  0CAF  1683               	bsf	3,5	;RP0=1, select bank1
  3005  0CB0  1303               	bcf	3,6	;RP1=0, select bank1
  3006  0CB1  1BC6               	btfsc	(___lwmod@divisor+1)^(0+128),7
  3007  0CB2  2CC1               	goto	l3338
  3008  0CB3  3001               	movlw	1
  3009  0CB4                     u2705:	
  3010  0CB4  1003               	clrc
  3011  0CB5  0DC5               	rlf	___lwmod@divisor^(0+128),f
  3012  0CB6  0DC6               	rlf	(___lwmod@divisor+1)^(0+128),f
  3013  0CB7  3EFF               	addlw	-1
  3014  0CB8  1D03               	skipz
  3015  0CB9  2CB4               	goto	u2705
  3016  0CBA  3001               	movlw	1
  3017  0CBB  1283               	bcf	3,5	;RP0=0, select bank0
  3018  0CBC  1303               	bcf	3,6	;RP1=0, select bank0
  3019  0CBD  00C2               	movwf	??___lwmod
  3020  0CBE  0842               	movf	??___lwmod,w
  3021  0CBF  07C3               	addwf	___lwmod@counter,f
  3022  0CC0  2CAF               	goto	l3336
  3023  0CC1                     l3338:	
  3024  0CC1  1683               	bsf	3,5	;RP0=1, select bank1
  3025  0CC2  1303               	bcf	3,6	;RP1=0, select bank1
  3026  0CC3  0846               	movf	(___lwmod@divisor+1)^(0+128),w
  3027  0CC4  0248               	subwf	(___lwmod@dividend+1)^(0+128),w
  3028  0CC5  1D03               	skipz
  3029  0CC6  2CC9               	goto	u2725
  3030  0CC7  0845               	movf	___lwmod@divisor^(0+128),w
  3031  0CC8  0247               	subwf	___lwmod@dividend^(0+128),w
  3032  0CC9                     u2725:	
  3033  0CC9  1C03               	skipc
  3034  0CCA  2CD1               	goto	l3342
  3035  0CCB  0845               	movf	___lwmod@divisor^(0+128),w
  3036  0CCC  02C7               	subwf	___lwmod@dividend^(0+128),f
  3037  0CCD  0846               	movf	(___lwmod@divisor+1)^(0+128),w
  3038  0CCE  1C03               	skipc
  3039  0CCF  03C8               	decf	(___lwmod@dividend+1)^(0+128),f
  3040  0CD0  02C8               	subwf	(___lwmod@dividend+1)^(0+128),f
  3041  0CD1                     l3342:	
  3042  0CD1  3001               	movlw	1
  3043  0CD2                     u2735:	
  3044  0CD2  1003               	clrc
  3045  0CD3  0CC6               	rrf	(___lwmod@divisor+1)^(0+128),f
  3046  0CD4  0CC5               	rrf	___lwmod@divisor^(0+128),f
  3047  0CD5  3EFF               	addlw	-1
  3048  0CD6  1D03               	skipz
  3049  0CD7  2CD2               	goto	u2735
  3050  0CD8  3001               	movlw	1
  3051  0CD9  1283               	bcf	3,5	;RP0=0, select bank0
  3052  0CDA  1303               	bcf	3,6	;RP1=0, select bank0
  3053  0CDB  02C3               	subwf	___lwmod@counter,f
  3054  0CDC  1D03               	btfss	3,2
  3055  0CDD  2CC1               	goto	l3338
  3056  0CDE                     l3346:	
  3057  0CDE  1683               	bsf	3,5	;RP0=1, select bank1
  3058  0CDF  1303               	bcf	3,6	;RP1=0, select bank1
  3059  0CE0  0848               	movf	(___lwmod@dividend+1)^(0+128),w
  3060  0CE1  00C6               	movwf	(?___lwmod+1)^(0+128)
  3061  0CE2  0847               	movf	___lwmod@dividend^(0+128),w
  3062  0CE3  00C5               	movwf	?___lwmod^(0+128)
  3063  0CE4  0008               	return
  3064  0CE5                     __end_of___lwmod:	
  3065                           
  3066                           	psect	text8
  3067  0F4E                     __ptext8:	
  3068 ;; *************** function ___lwdiv *****************
  3069 ;; Defined at:
  3070 ;;		line 5 in file "/opt/microchip/xc8/v2.05/pic/sources/c90/common/lwdiv.c"
  3071 ;; Parameters:    Size  Location     Type
  3072 ;;  divisor         2   29[BANK0 ] unsigned int 
  3073 ;;  dividend        2   31[BANK0 ] unsigned int 
  3074 ;; Auto vars:     Size  Location     Type
  3075 ;;  quotient        2    1[BANK1 ] unsigned int 
  3076 ;;  counter         1    0[BANK1 ] unsigned char 
  3077 ;; Return value:  Size  Location     Type
  3078 ;;                  2   29[BANK0 ] unsigned int 
  3079 ;; Registers used:
  3080 ;;		wreg, status,2, status,0
  3081 ;; Tracked objects:
  3082 ;;		On entry : 0/0
  3083 ;;		On exit  : 0/0
  3084 ;;		Unchanged: 0/0
  3085 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3086 ;;      Params:         0       4       0       0       0
  3087 ;;      Locals:         0       0       3       0       0
  3088 ;;      Temps:          0       1       0       0       0
  3089 ;;      Totals:         0       5       3       0       0
  3090 ;;Total ram usage:        8 bytes
  3091 ;; Hardware stack levels used:    1
  3092 ;; Hardware stack levels required when called:    5
  3093 ;; This function calls:
  3094 ;;		Nothing
  3095 ;; This function is called by:
  3096 ;;		_updateLCD
  3097 ;;		_sprintf
  3098 ;; This function uses a non-reentrant model
  3099 ;;
  3100                           
  3101                           
  3102                           ;psect for function ___lwdiv
  3103  0F4E                     ___lwdiv:	
  3104                           
  3105                           ;incstack = 0
  3106                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  3107  0F4E  1683               	bsf	3,5	;RP0=1, select bank1
  3108  0F4F  1303               	bcf	3,6	;RP1=0, select bank1
  3109  0F50  01C3               	clrf	___lwdiv@quotient^(0+128)
  3110  0F51  01C4               	clrf	(___lwdiv@quotient+1)^(0+128)
  3111  0F52  1283               	bcf	3,5	;RP0=0, select bank0
  3112  0F53  1303               	bcf	3,6	;RP1=0, select bank0
  3113  0F54  083D               	movf	___lwdiv@divisor,w
  3114  0F55  043E               	iorwf	___lwdiv@divisor+1,w
  3115  0F56  1903               	btfsc	3,2
  3116  0F57  2F98               	goto	l3324
  3117  0F58  1683               	bsf	3,5	;RP0=1, select bank1
  3118  0F59  1303               	bcf	3,6	;RP1=0, select bank1
  3119  0F5A  01C2               	clrf	___lwdiv@counter^(0+128)
  3120  0F5B  0AC2               	incf	___lwdiv@counter^(0+128),f
  3121  0F5C                     l3312:	
  3122  0F5C  1283               	bcf	3,5	;RP0=0, select bank0
  3123  0F5D  1303               	bcf	3,6	;RP1=0, select bank0
  3124  0F5E  1BBE               	btfsc	___lwdiv@divisor+1,7
  3125  0F5F  2F6E               	goto	l3314
  3126  0F60  3001               	movlw	1
  3127  0F61                     u2635:	
  3128  0F61  1003               	clrc
  3129  0F62  0DBD               	rlf	___lwdiv@divisor,f
  3130  0F63  0DBE               	rlf	___lwdiv@divisor+1,f
  3131  0F64  3EFF               	addlw	-1
  3132  0F65  1D03               	skipz
  3133  0F66  2F61               	goto	u2635
  3134  0F67  3001               	movlw	1
  3135  0F68  00C1               	movwf	??___lwdiv
  3136  0F69  0841               	movf	??___lwdiv,w
  3137  0F6A  1683               	bsf	3,5	;RP0=1, select bank1
  3138  0F6B  1303               	bcf	3,6	;RP1=0, select bank1
  3139  0F6C  07C2               	addwf	___lwdiv@counter^(0+128),f
  3140  0F6D  2F5C               	goto	l3312
  3141  0F6E                     l3314:	
  3142  0F6E  3001               	movlw	1
  3143  0F6F  1683               	bsf	3,5	;RP0=1, select bank1
  3144  0F70  1303               	bcf	3,6	;RP1=0, select bank1
  3145  0F71                     u2655:	
  3146  0F71  1003               	clrc
  3147  0F72  0DC3               	rlf	___lwdiv@quotient^(0+128),f
  3148  0F73  0DC4               	rlf	(___lwdiv@quotient+1)^(0+128),f
  3149  0F74  3EFF               	addlw	-1
  3150  0F75  1D03               	skipz
  3151  0F76  2F71               	goto	u2655
  3152  0F77  1283               	bcf	3,5	;RP0=0, select bank0
  3153  0F78  1303               	bcf	3,6	;RP1=0, select bank0
  3154  0F79  083E               	movf	___lwdiv@divisor+1,w
  3155  0F7A  0240               	subwf	___lwdiv@dividend+1,w
  3156  0F7B  1D03               	skipz
  3157  0F7C  2F7F               	goto	u2665
  3158  0F7D  083D               	movf	___lwdiv@divisor,w
  3159  0F7E  023F               	subwf	___lwdiv@dividend,w
  3160  0F7F                     u2665:	
  3161  0F7F  1C03               	skipc
  3162  0F80  2F8A               	goto	l3320
  3163  0F81  083D               	movf	___lwdiv@divisor,w
  3164  0F82  02BF               	subwf	___lwdiv@dividend,f
  3165  0F83  083E               	movf	___lwdiv@divisor+1,w
  3166  0F84  1C03               	skipc
  3167  0F85  03C0               	decf	___lwdiv@dividend+1,f
  3168  0F86  02C0               	subwf	___lwdiv@dividend+1,f
  3169  0F87  1683               	bsf	3,5	;RP0=1, select bank1
  3170  0F88  1303               	bcf	3,6	;RP1=0, select bank1
  3171  0F89  1443               	bsf	___lwdiv@quotient^(0+128),0
  3172  0F8A                     l3320:	
  3173  0F8A  3001               	movlw	1
  3174  0F8B  1283               	bcf	3,5	;RP0=0, select bank0
  3175  0F8C                     u2675:	
  3176  0F8C  1003               	clrc
  3177  0F8D  0CBE               	rrf	___lwdiv@divisor+1,f
  3178  0F8E  0CBD               	rrf	___lwdiv@divisor,f
  3179  0F8F  3EFF               	addlw	-1
  3180  0F90  1D03               	skipz
  3181  0F91  2F8C               	goto	u2675
  3182  0F92  3001               	movlw	1
  3183  0F93  1683               	bsf	3,5	;RP0=1, select bank1
  3184  0F94  1303               	bcf	3,6	;RP1=0, select bank1
  3185  0F95  02C2               	subwf	___lwdiv@counter^(0+128),f
  3186  0F96  1D03               	btfss	3,2
  3187  0F97  2F6E               	goto	l3314
  3188  0F98                     l3324:	
  3189  0F98  1683               	bsf	3,5	;RP0=1, select bank1
  3190  0F99  1303               	bcf	3,6	;RP1=0, select bank1
  3191  0F9A  0844               	movf	(___lwdiv@quotient+1)^(0+128),w
  3192  0F9B  1283               	bcf	3,5	;RP0=0, select bank0
  3193  0F9C  1303               	bcf	3,6	;RP1=0, select bank0
  3194  0F9D  00BE               	movwf	?___lwdiv+1
  3195  0F9E  1683               	bsf	3,5	;RP0=1, select bank1
  3196  0F9F  1303               	bcf	3,6	;RP1=0, select bank1
  3197  0FA0  0843               	movf	___lwdiv@quotient^(0+128),w
  3198  0FA1  1283               	bcf	3,5	;RP0=0, select bank0
  3199  0FA2  1303               	bcf	3,6	;RP1=0, select bank0
  3200  0FA3  00BD               	movwf	?___lwdiv
  3201  0FA4  0008               	return
  3202  0FA5                     __end_of___lwdiv:	
  3203                           
  3204                           	psect	text9
  3205  070A                     __ptext9:	
  3206 ;; *************** function _setData *****************
  3207 ;; Defined at:
  3208 ;;		line 44 in file "eeprom.c"
  3209 ;; Parameters:    Size  Location     Type
  3210 ;;  full            1    wreg     unsigned char 
  3211 ;; Auto vars:     Size  Location     Type
  3212 ;;  full            1   34[BANK0 ] unsigned char 
  3213 ;;  data1           1   33[BANK0 ] unsigned char 
  3214 ;;  data0           1   32[BANK0 ] unsigned char 
  3215 ;; Return value:  Size  Location     Type
  3216 ;;                  1    wreg      void 
  3217 ;; Registers used:
  3218 ;;		wreg, status,2, status,0, pclath, cstack
  3219 ;; Tracked objects:
  3220 ;;		On entry : 0/0
  3221 ;;		On exit  : 0/0
  3222 ;;		Unchanged: 0/0
  3223 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3224 ;;      Params:         0       0       0       0       0
  3225 ;;      Locals:         0       3       0       0       0
  3226 ;;      Temps:          0       1       0       0       0
  3227 ;;      Totals:         0       4       0       0       0
  3228 ;;Total ram usage:        4 bytes
  3229 ;; Hardware stack levels used:    1
  3230 ;; Hardware stack levels required when called:    6
  3231 ;; This function calls:
  3232 ;;		_writeEEPROM
  3233 ;; This function is called by:
  3234 ;;		_setFrequency
  3235 ;; This function uses a non-reentrant model
  3236 ;;
  3237                           
  3238                           
  3239                           ;psect for function _setData
  3240  070A                     _setData:	
  3241                           
  3242                           ;incstack = 0
  3243                           ; Regs used in _setData: [wreg+status,2+status,0+pclath+cstack]
  3244                           ;setData@full stored from wreg
  3245  070A  1283               	bcf	3,5	;RP0=0, select bank0
  3246  070B  1303               	bcf	3,6	;RP1=0, select bank0
  3247  070C  00C2               	movwf	setData@full
  3248                           
  3249                           ;eeprom.c: 45:     unsigned char data0 = frequency & 0x00FF;
  3250  070D  0844               	movf	_frequency,w
  3251  070E  00BF               	movwf	??_setData
  3252  070F  083F               	movf	??_setData,w
  3253  0710  00C0               	movwf	setData@data0
  3254                           
  3255                           ;eeprom.c: 46:     unsigned char data1 = frequency >> 8;
  3256  0711  0845               	movf	_frequency+1,w
  3257  0712  00BF               	movwf	??_setData
  3258  0713  083F               	movf	??_setData,w
  3259  0714  00C1               	movwf	setData@data1
  3260                           
  3261                           ;eeprom.c: 47:     if(full)writeEEPROM(data0 ,0);
  3262  0715  0842               	movf	setData@full,w
  3263  0716  1903               	btfsc	3,2
  3264  0717  2F1F               	goto	l2610
  3265  0718  01BD               	clrf	writeEEPROM@address
  3266  0719  0840               	movf	setData@data0,w
  3267  071A  120A  158A  233B  120A  118A  	fcall	_writeEEPROM
  3268  071F                     l2610:	
  3269                           
  3270                           ;eeprom.c: 48:     if(full)writeEEPROM(data1 ,1);
  3271  071F  1283               	bcf	3,5	;RP0=0, select bank0
  3272  0720  1303               	bcf	3,6	;RP1=0, select bank0
  3273  0721  0842               	movf	setData@full,w
  3274  0722  1903               	btfsc	3,2
  3275  0723  2F2C               	goto	l68
  3276  0724  01BD               	clrf	writeEEPROM@address
  3277  0725  0ABD               	incf	writeEEPROM@address,f
  3278  0726  0841               	movf	setData@data1,w
  3279  0727  120A  158A  233B  120A  118A  	fcall	_writeEEPROM
  3280  072C                     l68:	
  3281                           
  3282                           ;eeprom.c: 49:     writeEEPROM(months ,2);
  3283  072C  3002               	movlw	2
  3284  072D  1283               	bcf	3,5	;RP0=0, select bank0
  3285  072E  1303               	bcf	3,6	;RP1=0, select bank0
  3286  072F  00BF               	movwf	??_setData
  3287  0730  083F               	movf	??_setData,w
  3288  0731  00BD               	movwf	writeEEPROM@address
  3289  0732  0850               	movf	_months,w
  3290  0733  120A  158A  233B  120A  118A  	fcall	_writeEEPROM
  3291                           
  3292                           ;eeprom.c: 50:     writeEEPROM(days ,3);
  3293  0738  3003               	movlw	3
  3294  0739  1283               	bcf	3,5	;RP0=0, select bank0
  3295  073A  1303               	bcf	3,6	;RP1=0, select bank0
  3296  073B  00BF               	movwf	??_setData
  3297  073C  083F               	movf	??_setData,w
  3298  073D  00BD               	movwf	writeEEPROM@address
  3299  073E  084F               	movf	_days,w
  3300  073F  120A  158A  233B  120A  118A  	fcall	_writeEEPROM
  3301                           
  3302                           ;eeprom.c: 51:     writeEEPROM(hours ,4);
  3303  0744  3004               	movlw	4
  3304  0745  1283               	bcf	3,5	;RP0=0, select bank0
  3305  0746  1303               	bcf	3,6	;RP1=0, select bank0
  3306  0747  00BF               	movwf	??_setData
  3307  0748  083F               	movf	??_setData,w
  3308  0749  00BD               	movwf	writeEEPROM@address
  3309  074A  084E               	movf	_hours,w
  3310  074B  120A  158A  233B  120A  118A  	fcall	_writeEEPROM
  3311                           
  3312                           ;eeprom.c: 52:     writeEEPROM(minutes ,5);
  3313  0750  3005               	movlw	5
  3314  0751  1283               	bcf	3,5	;RP0=0, select bank0
  3315  0752  1303               	bcf	3,6	;RP1=0, select bank0
  3316  0753  00BF               	movwf	??_setData
  3317  0754  083F               	movf	??_setData,w
  3318  0755  00BD               	movwf	writeEEPROM@address
  3319  0756  084D               	movf	_minutes,w
  3320  0757  120A  158A  233B  120A  118A  	fcall	_writeEEPROM
  3321                           
  3322                           ;eeprom.c: 53:     writeEEPROM(functionalStat ,6);
  3323  075C  3006               	movlw	6
  3324  075D  1283               	bcf	3,5	;RP0=0, select bank0
  3325  075E  1303               	bcf	3,6	;RP1=0, select bank0
  3326  075F  00BF               	movwf	??_setData
  3327  0760  083F               	movf	??_setData,w
  3328  0761  00BD               	movwf	writeEEPROM@address
  3329  0762  0848               	movf	_functionalStat,w
  3330  0763  120A  158A  233B   	fcall	_writeEEPROM
  3331  0766  0008               	return
  3332  0767                     __end_of_setData:	
  3333                           
  3334                           	psect	text10
  3335  0B3B                     __ptext10:	
  3336 ;; *************** function _writeEEPROM *****************
  3337 ;; Defined at:
  3338 ;;		line 14 in file "eeprom.c"
  3339 ;; Parameters:    Size  Location     Type
  3340 ;;  data            1    wreg     unsigned char 
  3341 ;;  address         1   29[BANK0 ] unsigned char 
  3342 ;; Auto vars:     Size  Location     Type
  3343 ;;  data            1   30[BANK0 ] unsigned char 
  3344 ;; Return value:  Size  Location     Type
  3345 ;;                  1    wreg      void 
  3346 ;; Registers used:
  3347 ;;		wreg
  3348 ;; Tracked objects:
  3349 ;;		On entry : 0/0
  3350 ;;		On exit  : 0/0
  3351 ;;		Unchanged: 0/0
  3352 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3353 ;;      Params:         0       1       0       0       0
  3354 ;;      Locals:         0       1       0       0       0
  3355 ;;      Temps:          0       0       0       0       0
  3356 ;;      Totals:         0       2       0       0       0
  3357 ;;Total ram usage:        2 bytes
  3358 ;; Hardware stack levels used:    1
  3359 ;; Hardware stack levels required when called:    5
  3360 ;; This function calls:
  3361 ;;		Nothing
  3362 ;; This function is called by:
  3363 ;;		_setData
  3364 ;; This function uses a non-reentrant model
  3365 ;;
  3366                           
  3367                           
  3368                           ;psect for function _writeEEPROM
  3369  0B3B                     _writeEEPROM:	
  3370                           
  3371                           ;incstack = 0
  3372                           ; Regs used in _writeEEPROM: [wreg]
  3373                           ;writeEEPROM@data stored from wreg
  3374  0B3B  1283               	bcf	3,5	;RP0=0, select bank0
  3375  0B3C  1303               	bcf	3,6	;RP1=0, select bank0
  3376  0B3D  00BE               	movwf	writeEEPROM@data
  3377                           
  3378                           ;eeprom.c: 15:     EEADR = address;
  3379  0B3E  083D               	movf	writeEEPROM@address,w
  3380  0B3F  1283               	bcf	3,5	;RP0=0, select bank2
  3381  0B40  1703               	bsf	3,6	;RP1=1, select bank2
  3382  0B41  008D               	movwf	13	;volatile
  3383                           
  3384                           ;eeprom.c: 16:     EEDATA = data;
  3385  0B42  1283               	bcf	3,5	;RP0=0, select bank0
  3386  0B43  1303               	bcf	3,6	;RP1=0, select bank0
  3387  0B44  083E               	movf	writeEEPROM@data,w
  3388  0B45  1283               	bcf	3,5	;RP0=0, select bank2
  3389  0B46  1703               	bsf	3,6	;RP1=1, select bank2
  3390  0B47  008C               	movwf	12	;volatile
  3391                           
  3392                           ;eeprom.c: 18:     EECON1bits.EEPGD = 0;
  3393  0B48  1683               	bsf	3,5	;RP0=1, select bank3
  3394  0B49  1703               	bsf	3,6	;RP1=1, select bank3
  3395  0B4A  138C               	bcf	12,7	;volsfr
  3396                           
  3397                           ;eeprom.c: 19:     EECON1bits.WREN = 1;
  3398  0B4B  150C               	bsf	12,2	;volsfr
  3399                           
  3400                           ;eeprom.c: 21:     INTCONbits.GIE = 0;
  3401  0B4C  138B               	bcf	11,7	;volatile
  3402                           
  3403                           ;eeprom.c: 22:     EECON2 = 0x55;
  3404  0B4D  3055               	movlw	85
  3405  0B4E  008D               	movwf	13	;volsfr
  3406                           
  3407                           ;eeprom.c: 23:     EECON2 = 0xAA;
  3408  0B4F  30AA               	movlw	170
  3409  0B50  008D               	movwf	13	;volsfr
  3410                           
  3411                           ;eeprom.c: 24:     EECON1bits.WR = 1;
  3412  0B51  148C               	bsf	12,1	;volsfr
  3413                           
  3414                           ;eeprom.c: 25:     INTCONbits.GIE = 1;
  3415  0B52  178B               	bsf	11,7	;volatile
  3416  0B53                     l58:	
  3417                           ;eeprom.c: 27:     while(PIR2bits.EEIF == 0) continue;
  3418                           
  3419  0B53  1283               	bcf	3,5	;RP0=0, select bank0
  3420  0B54  1303               	bcf	3,6	;RP1=0, select bank0
  3421  0B55  1A0D               	btfsc	13,4	;volatile
  3422  0B56  0008               	return
  3423  0B57  2B53               	goto	l58
  3424  0B58                     __end_of_writeEEPROM:	
  3425                           
  3426                           	psect	text11
  3427  0D78                     __ptext11:	
  3428 ;; *************** function _beep *****************
  3429 ;; Defined at:
  3430 ;;		line 124 in file "main.c"
  3431 ;; Parameters:    Size  Location     Type
  3432 ;;  ms              2    0[BANK1 ] int 
  3433 ;; Auto vars:     Size  Location     Type
  3434 ;;		None
  3435 ;; Return value:  Size  Location     Type
  3436 ;;                  1    wreg      void 
  3437 ;; Registers used:
  3438 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  3439 ;; Tracked objects:
  3440 ;;		On entry : 0/0
  3441 ;;		On exit  : 0/0
  3442 ;;		Unchanged: 0/0
  3443 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3444 ;;      Params:         0       0       2       0       0
  3445 ;;      Locals:         0       0       0       0       0
  3446 ;;      Temps:          0       1       0       0       0
  3447 ;;      Totals:         0       1       2       0       0
  3448 ;;Total ram usage:        3 bytes
  3449 ;; Hardware stack levels used:    1
  3450 ;; Hardware stack levels required when called:    6
  3451 ;; This function calls:
  3452 ;;		___wmul
  3453 ;; This function is called by:
  3454 ;;		_main
  3455 ;;		_setFrequency
  3456 ;; This function uses a non-reentrant model
  3457 ;;
  3458                           
  3459                           
  3460                           ;psect for function _beep
  3461  0D78                     _beep:	
  3462                           
  3463                           ;main.c: 125:     ms *= 5;
  3464                           
  3465                           ;incstack = 0
  3466                           ; Regs used in _beep: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  3467  0D78  3005               	movlw	5
  3468  0D79  1283               	bcf	3,5	;RP0=0, select bank0
  3469  0D7A  1303               	bcf	3,6	;RP1=0, select bank0
  3470  0D7B  00BD               	movwf	___wmul@multiplier
  3471  0D7C  3000               	movlw	0
  3472  0D7D  00BE               	movwf	___wmul@multiplier+1
  3473  0D7E  1683               	bsf	3,5	;RP0=1, select bank1
  3474  0D7F  1303               	bcf	3,6	;RP1=0, select bank1
  3475  0D80  0843               	movf	(beep@ms+1)^(0+128),w
  3476  0D81  1283               	bcf	3,5	;RP0=0, select bank0
  3477  0D82  1303               	bcf	3,6	;RP1=0, select bank0
  3478  0D83  00C0               	movwf	___wmul@multiplicand+1
  3479  0D84  1683               	bsf	3,5	;RP0=1, select bank1
  3480  0D85  1303               	bcf	3,6	;RP1=0, select bank1
  3481  0D86  0842               	movf	beep@ms^(0+128),w
  3482  0D87  1283               	bcf	3,5	;RP0=0, select bank0
  3483  0D88  1303               	bcf	3,6	;RP1=0, select bank0
  3484  0D89  00BF               	movwf	___wmul@multiplicand
  3485  0D8A  120A  158A  2379  120A  158A  	fcall	___wmul
  3486  0D8F  1283               	bcf	3,5	;RP0=0, select bank0
  3487  0D90  1303               	bcf	3,6	;RP1=0, select bank0
  3488  0D91  083E               	movf	?___wmul+1,w
  3489  0D92  1683               	bsf	3,5	;RP0=1, select bank1
  3490  0D93  1303               	bcf	3,6	;RP1=0, select bank1
  3491  0D94  00C3               	movwf	(beep@ms+1)^(0+128)
  3492  0D95  1283               	bcf	3,5	;RP0=0, select bank0
  3493  0D96  1303               	bcf	3,6	;RP1=0, select bank0
  3494  0D97  083D               	movf	?___wmul,w
  3495  0D98  1683               	bsf	3,5	;RP0=1, select bank1
  3496  0D99  1303               	bcf	3,6	;RP1=0, select bank1
  3497  0D9A  00C2               	movwf	beep@ms^(0+128)
  3498  0D9B                     l3352:	
  3499  0D9B  0843               	movf	(beep@ms+1)^(0+128),w
  3500  0D9C  3A80               	xorlw	128
  3501  0D9D  00FF               	movwf	127
  3502  0D9E  3080               	movlw	128
  3503  0D9F  027F               	subwf	127,w
  3504  0DA0  1D03               	skipz
  3505  0DA1  2DA4               	goto	u2755
  3506  0DA2  3001               	movlw	1
  3507  0DA3  0242               	subwf	beep@ms^(0+128),w
  3508  0DA4                     u2755:	
  3509  0DA4  1C03               	btfss	3,0
  3510  0DA5  0008               	return
  3511                           
  3512                           ;main.c: 127:         PORTBbits.RB0 = 1;
  3513  0DA6  1283               	bcf	3,5	;RP0=0, select bank0
  3514  0DA7  1303               	bcf	3,6	;RP1=0, select bank0
  3515  0DA8  1406               	bsf	6,0	;volatile
  3516                           
  3517                           ;main.c: 128:         _delay((unsigned long)((100)*(4000000/4000000.0)));
  3518  0DA9  3020               	movlw	32
  3519  0DAA  1283               	bcf	3,5	;RP0=0, select bank0
  3520  0DAB  1303               	bcf	3,6	;RP1=0, select bank0
  3521  0DAC  00C3               	movwf	??_beep
  3522  0DAD                     u3207:	
  3523  0DAD  0BC3               	decfsz	??_beep,f
  3524  0DAE  2DAD               	goto	u3207
  3525  0DAF  0000               	nop
  3526                           
  3527                           ;main.c: 129:         PORTBbits.RB0 = 0;
  3528  0DB0  1283               	bcf	3,5	;RP0=0, select bank0
  3529  0DB1  1303               	bcf	3,6	;RP1=0, select bank0
  3530  0DB2  1006               	bcf	6,0	;volatile
  3531                           
  3532                           ;main.c: 130:         _delay((unsigned long)((100)*(4000000/4000000.0)));
  3533  0DB3  3020               	movlw	32
  3534  0DB4  1283               	bcf	3,5	;RP0=0, select bank0
  3535  0DB5  1303               	bcf	3,6	;RP1=0, select bank0
  3536  0DB6  00C3               	movwf	??_beep
  3537  0DB7                     u3217:	
  3538  0DB7  0BC3               	decfsz	??_beep,f
  3539  0DB8  2DB7               	goto	u3217
  3540  0DB9  0000               	nop
  3541                           
  3542                           ;main.c: 131:     }
  3543  0DBA  30FF               	movlw	255
  3544  0DBB  1683               	bsf	3,5	;RP0=1, select bank1
  3545  0DBC  1303               	bcf	3,6	;RP1=0, select bank1
  3546  0DBD  07C2               	addwf	beep@ms^(0+128),f
  3547  0DBE  1803               	skipnc
  3548  0DBF  0AC3               	incf	(beep@ms+1)^(0+128),f
  3549  0DC0  30FF               	movlw	255
  3550  0DC1  07C3               	addwf	(beep@ms+1)^(0+128),f
  3551  0DC2  2D9B               	goto	l3352
  3552  0DC3                     __end_of_beep:	
  3553                           
  3554                           	psect	text12
  3555  0B79                     __ptext12:	
  3556 ;; *************** function ___wmul *****************
  3557 ;; Defined at:
  3558 ;;		line 15 in file "/opt/microchip/xc8/v2.05/pic/sources/c90/common/Umul16.c"
  3559 ;; Parameters:    Size  Location     Type
  3560 ;;  multiplier      2   29[BANK0 ] unsigned int 
  3561 ;;  multiplicand    2   31[BANK0 ] unsigned int 
  3562 ;; Auto vars:     Size  Location     Type
  3563 ;;  product         2   33[BANK0 ] unsigned int 
  3564 ;; Return value:  Size  Location     Type
  3565 ;;                  2   29[BANK0 ] unsigned int 
  3566 ;; Registers used:
  3567 ;;		wreg, status,2, status,0
  3568 ;; Tracked objects:
  3569 ;;		On entry : 0/0
  3570 ;;		On exit  : 0/0
  3571 ;;		Unchanged: 0/0
  3572 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3573 ;;      Params:         0       4       0       0       0
  3574 ;;      Locals:         0       2       0       0       0
  3575 ;;      Temps:          0       0       0       0       0
  3576 ;;      Totals:         0       6       0       0       0
  3577 ;;Total ram usage:        6 bytes
  3578 ;; Hardware stack levels used:    1
  3579 ;; Hardware stack levels required when called:    5
  3580 ;; This function calls:
  3581 ;;		Nothing
  3582 ;; This function is called by:
  3583 ;;		_beep
  3584 ;;		_sprintf
  3585 ;; This function uses a non-reentrant model
  3586 ;;
  3587                           
  3588                           
  3589                           ;psect for function ___wmul
  3590  0B79                     ___wmul:	
  3591                           
  3592                           ;incstack = 0
  3593                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  3594  0B79  1283               	bcf	3,5	;RP0=0, select bank0
  3595  0B7A  1303               	bcf	3,6	;RP1=0, select bank0
  3596  0B7B  01C1               	clrf	___wmul@product
  3597  0B7C  01C2               	clrf	___wmul@product+1
  3598  0B7D                     l2420:	
  3599  0B7D  1C3D               	btfss	___wmul@multiplier,0
  3600  0B7E  2B85               	goto	l633
  3601  0B7F  083F               	movf	___wmul@multiplicand,w
  3602  0B80  07C1               	addwf	___wmul@product,f
  3603  0B81  1803               	skipnc
  3604  0B82  0AC2               	incf	___wmul@product+1,f
  3605  0B83  0840               	movf	___wmul@multiplicand+1,w
  3606  0B84  07C2               	addwf	___wmul@product+1,f
  3607  0B85                     l633:	
  3608  0B85  3001               	movlw	1
  3609  0B86                     u1505:	
  3610  0B86  1003               	clrc
  3611  0B87  0DBF               	rlf	___wmul@multiplicand,f
  3612  0B88  0DC0               	rlf	___wmul@multiplicand+1,f
  3613  0B89  3EFF               	addlw	-1
  3614  0B8A  1D03               	skipz
  3615  0B8B  2B86               	goto	u1505
  3616  0B8C  3001               	movlw	1
  3617  0B8D                     u1515:	
  3618  0B8D  1003               	clrc
  3619  0B8E  0CBE               	rrf	___wmul@multiplier+1,f
  3620  0B8F  0CBD               	rrf	___wmul@multiplier,f
  3621  0B90  3EFF               	addlw	-1
  3622  0B91  1D03               	skipz
  3623  0B92  2B8D               	goto	u1515
  3624  0B93  083D               	movf	___wmul@multiplier,w
  3625  0B94  043E               	iorwf	___wmul@multiplier+1,w
  3626  0B95  1D03               	btfss	3,2
  3627  0B96  2B7D               	goto	l2420
  3628  0B97  0842               	movf	___wmul@product+1,w
  3629  0B98  00BE               	movwf	?___wmul+1
  3630  0B99  0841               	movf	___wmul@product,w
  3631  0B9A  00BD               	movwf	?___wmul
  3632  0B9B  0008               	return
  3633  0B9C                     __end_of___wmul:	
  3634                           
  3635                           	psect	text13
  3636  0767                     __ptext13:	
  3637 ;; *************** function _getData *****************
  3638 ;; Defined at:
  3639 ;;		line 31 in file "eeprom.c"
  3640 ;; Parameters:    Size  Location     Type
  3641 ;;		None
  3642 ;; Auto vars:     Size  Location     Type
  3643 ;;  aux1            1   35[BANK0 ] unsigned char 
  3644 ;;  aux0            1   34[BANK0 ] unsigned char 
  3645 ;; Return value:  Size  Location     Type
  3646 ;;                  1    wreg      void 
  3647 ;; Registers used:
  3648 ;;		wreg, status,2, btemp+1, pclath, cstack
  3649 ;; Tracked objects:
  3650 ;;		On entry : 0/0
  3651 ;;		On exit  : 0/0
  3652 ;;		Unchanged: 0/0
  3653 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3654 ;;      Params:         0       0       0       0       0
  3655 ;;      Locals:         0       2       0       0       0
  3656 ;;      Temps:          0       4       0       0       0
  3657 ;;      Totals:         0       6       0       0       0
  3658 ;;Total ram usage:        6 bytes
  3659 ;; Hardware stack levels used:    1
  3660 ;; Hardware stack levels required when called:    6
  3661 ;; This function calls:
  3662 ;;		_readEEPROM
  3663 ;; This function is called by:
  3664 ;;		_main
  3665 ;; This function uses a non-reentrant model
  3666 ;;
  3667                           
  3668                           
  3669                           ;psect for function _getData
  3670  0767                     _getData:	
  3671                           
  3672                           ;eeprom.c: 32:     unsigned char aux0 = readEEPROM(0);
  3673                           
  3674                           ;incstack = 0
  3675                           ; Regs used in _getData: [wreg+status,2+btemp+1+pclath+cstack]
  3676  0767  3000               	movlw	0
  3677  0768  120A  158A  22C5  120A  118A  	fcall	_readEEPROM
  3678  076D  1283               	bcf	3,5	;RP0=0, select bank0
  3679  076E  1303               	bcf	3,6	;RP1=0, select bank0
  3680  076F  00BE               	movwf	??_getData
  3681  0770  083E               	movf	??_getData,w
  3682  0771  00C2               	movwf	getData@aux0
  3683                           
  3684                           ;eeprom.c: 33:     unsigned char aux1 = readEEPROM(1);
  3685  0772  3001               	movlw	1
  3686  0773  120A  158A  22C5  120A  118A  	fcall	_readEEPROM
  3687  0778  1283               	bcf	3,5	;RP0=0, select bank0
  3688  0779  1303               	bcf	3,6	;RP1=0, select bank0
  3689  077A  00BE               	movwf	??_getData
  3690  077B  083E               	movf	??_getData,w
  3691  077C  00C3               	movwf	getData@aux1
  3692                           
  3693                           ;eeprom.c: 34:     frequency = 0;
  3694  077D  01C4               	clrf	_frequency
  3695  077E  01C5               	clrf	_frequency+1
  3696                           
  3697                           ;eeprom.c: 35:     frequency = (aux1 << 8) | aux0;
  3698  077F  0842               	movf	getData@aux0,w
  3699  0780  00BE               	movwf	??_getData
  3700  0781  01BF               	clrf	??_getData+1
  3701  0782  0843               	movf	getData@aux1,w
  3702  0783  00C0               	movwf	??_getData+2
  3703  0784  01C1               	clrf	??_getData+3
  3704  0785  0840               	movf	??_getData+2,w
  3705  0786  00C1               	movwf	??_getData+3
  3706  0787  01C0               	clrf	??_getData+2
  3707  0788  083E               	movf	??_getData,w
  3708  0789  0440               	iorwf	??_getData+2,w
  3709  078A  00C4               	movwf	_frequency
  3710  078B  083F               	movf	??_getData+1,w
  3711  078C  0441               	iorwf	??_getData+3,w
  3712  078D  00C5               	movwf	_frequency+1
  3713                           
  3714                           ;eeprom.c: 36:     months = readEEPROM(2);
  3715  078E  3002               	movlw	2
  3716  078F  120A  158A  22C5  120A  118A  	fcall	_readEEPROM
  3717  0794  1283               	bcf	3,5	;RP0=0, select bank0
  3718  0795  1303               	bcf	3,6	;RP1=0, select bank0
  3719  0796  00BE               	movwf	??_getData
  3720  0797  083E               	movf	??_getData,w
  3721  0798  00D0               	movwf	_months
  3722                           
  3723                           ;eeprom.c: 37:     days = readEEPROM(3);
  3724  0799  3003               	movlw	3
  3725  079A  120A  158A  22C5  120A  118A  	fcall	_readEEPROM
  3726  079F  1283               	bcf	3,5	;RP0=0, select bank0
  3727  07A0  1303               	bcf	3,6	;RP1=0, select bank0
  3728  07A1  00BE               	movwf	??_getData
  3729  07A2  083E               	movf	??_getData,w
  3730  07A3  00CF               	movwf	_days
  3731                           
  3732                           ;eeprom.c: 38:     hours = readEEPROM(4);
  3733  07A4  3004               	movlw	4
  3734  07A5  120A  158A  22C5  120A  118A  	fcall	_readEEPROM
  3735  07AA  1283               	bcf	3,5	;RP0=0, select bank0
  3736  07AB  1303               	bcf	3,6	;RP1=0, select bank0
  3737  07AC  00BE               	movwf	??_getData
  3738  07AD  083E               	movf	??_getData,w
  3739  07AE  00CE               	movwf	_hours
  3740                           
  3741                           ;eeprom.c: 39:     minutes = readEEPROM(5);
  3742  07AF  3005               	movlw	5
  3743  07B0  120A  158A  22C5  120A  118A  	fcall	_readEEPROM
  3744  07B5  1283               	bcf	3,5	;RP0=0, select bank0
  3745  07B6  1303               	bcf	3,6	;RP1=0, select bank0
  3746  07B7  00BE               	movwf	??_getData
  3747  07B8  083E               	movf	??_getData,w
  3748  07B9  00CD               	movwf	_minutes
  3749                           
  3750                           ;eeprom.c: 40:     functionalStat = readEEPROM(6);
  3751  07BA  3006               	movlw	6
  3752  07BB  120A  158A  22C5   	fcall	_readEEPROM
  3753  07BE  1283               	bcf	3,5	;RP0=0, select bank0
  3754  07BF  1303               	bcf	3,6	;RP1=0, select bank0
  3755  07C0  00BE               	movwf	??_getData
  3756  07C1  083E               	movf	??_getData,w
  3757  07C2  00C8               	movwf	_functionalStat
  3758  07C3  0008               	return
  3759  07C4                     __end_of_getData:	
  3760                           
  3761                           	psect	text14
  3762  0AC5                     __ptext14:	
  3763 ;; *************** function _readEEPROM *****************
  3764 ;; Defined at:
  3765 ;;		line 7 in file "eeprom.c"
  3766 ;; Parameters:    Size  Location     Type
  3767 ;;  address         1    wreg     unsigned char 
  3768 ;; Auto vars:     Size  Location     Type
  3769 ;;  address         1   29[BANK0 ] unsigned char 
  3770 ;; Return value:  Size  Location     Type
  3771 ;;                  1    wreg      unsigned char 
  3772 ;; Registers used:
  3773 ;;		wreg
  3774 ;; Tracked objects:
  3775 ;;		On entry : 0/0
  3776 ;;		On exit  : 0/0
  3777 ;;		Unchanged: 0/0
  3778 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3779 ;;      Params:         0       0       0       0       0
  3780 ;;      Locals:         0       1       0       0       0
  3781 ;;      Temps:          0       0       0       0       0
  3782 ;;      Totals:         0       1       0       0       0
  3783 ;;Total ram usage:        1 bytes
  3784 ;; Hardware stack levels used:    1
  3785 ;; Hardware stack levels required when called:    5
  3786 ;; This function calls:
  3787 ;;		Nothing
  3788 ;; This function is called by:
  3789 ;;		_getData
  3790 ;; This function uses a non-reentrant model
  3791 ;;
  3792                           
  3793                           
  3794                           ;psect for function _readEEPROM
  3795  0AC5                     _readEEPROM:	
  3796                           
  3797                           ;incstack = 0
  3798                           ; Regs used in _readEEPROM: [wreg]
  3799                           ;readEEPROM@address stored from wreg
  3800  0AC5  1283               	bcf	3,5	;RP0=0, select bank0
  3801  0AC6  1303               	bcf	3,6	;RP1=0, select bank0
  3802  0AC7  00BD               	movwf	readEEPROM@address
  3803                           
  3804                           ;eeprom.c: 8:     EEADR = address;
  3805  0AC8  083D               	movf	readEEPROM@address,w
  3806  0AC9  1283               	bcf	3,5	;RP0=0, select bank2
  3807  0ACA  1703               	bsf	3,6	;RP1=1, select bank2
  3808  0ACB  008D               	movwf	13	;volatile
  3809                           
  3810                           ;eeprom.c: 9:     EECON1bits.EEPGD = 0;
  3811  0ACC  1683               	bsf	3,5	;RP0=1, select bank3
  3812  0ACD  1703               	bsf	3,6	;RP1=1, select bank3
  3813  0ACE  138C               	bcf	12,7	;volsfr
  3814                           
  3815                           ;eeprom.c: 10:     EECON1bits.RD = 1;
  3816  0ACF  140C               	bsf	12,0	;volsfr
  3817                           
  3818                           ;eeprom.c: 11:     return EEDATA;
  3819  0AD0  1283               	bcf	3,5	;RP0=0, select bank2
  3820  0AD1  1703               	bsf	3,6	;RP1=1, select bank2
  3821  0AD2  080C               	movf	12,w	;volatile
  3822  0AD3  0008               	return
  3823  0AD4                     __end_of_readEEPROM:	
  3824                           
  3825                           	psect	text15
  3826  0C12                     __ptext15:	
  3827 ;; *************** function _config *****************
  3828 ;; Defined at:
  3829 ;;		line 45 in file "main.c"
  3830 ;; Parameters:    Size  Location     Type
  3831 ;;		None
  3832 ;; Auto vars:     Size  Location     Type
  3833 ;;		None
  3834 ;; Return value:  Size  Location     Type
  3835 ;;                  1    wreg      void 
  3836 ;; Registers used:
  3837 ;;		wreg, status,2, status,0, pclath, cstack
  3838 ;; Tracked objects:
  3839 ;;		On entry : 0/0
  3840 ;;		On exit  : 0/0
  3841 ;;		Unchanged: 0/0
  3842 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3843 ;;      Params:         0       0       0       0       0
  3844 ;;      Locals:         0       0       0       0       0
  3845 ;;      Temps:          0       0       0       0       0
  3846 ;;      Totals:         0       0       0       0       0
  3847 ;;Total ram usage:        0 bytes
  3848 ;; Hardware stack levels used:    1
  3849 ;; Hardware stack levels required when called:    9
  3850 ;; This function calls:
  3851 ;;		_initLCD
  3852 ;;		_setTransStat
  3853 ;; This function is called by:
  3854 ;;		_main
  3855 ;; This function uses a non-reentrant model
  3856 ;;
  3857                           
  3858                           
  3859                           ;psect for function _config
  3860  0C12                     _config:	
  3861                           
  3862                           ;main.c: 47:     INTCON = 0b01000000;
  3863                           
  3864                           ;incstack = 0
  3865 ;; hardware stack exceeded
  3866                           ; Regs used in _config: [wreg+status,2+status,0+pclath+cstack]
  3867  0C12  3040               	movlw	64
  3868  0C13  008B               	movwf	11	;volatile
  3869                           
  3870                           ;main.c: 48:     PIE1 = 0b00000001;
  3871  0C14  3001               	movlw	1
  3872  0C15  1683               	bsf	3,5	;RP0=1, select bank1
  3873  0C16  1303               	bcf	3,6	;RP1=0, select bank1
  3874  0C17  008C               	movwf	12	;volatile
  3875                           
  3876                           ;main.c: 50:     TRISA = 0b00111000;
  3877  0C18  3038               	movlw	56
  3878  0C19  0085               	movwf	5	;volatile
  3879                           
  3880                           ;main.c: 51:     TRISB = 0b00000000;
  3881  0C1A  0186               	clrf	6	;volatile
  3882                           
  3883                           ;main.c: 52:     TRISC = 0b00000000;
  3884  0C1B  0187               	clrf	7	;volatile
  3885                           
  3886                           ;main.c: 53:     PORTA = 0x00;
  3887  0C1C  1283               	bcf	3,5	;RP0=0, select bank0
  3888  0C1D  1303               	bcf	3,6	;RP1=0, select bank0
  3889  0C1E  0185               	clrf	5	;volatile
  3890                           
  3891                           ;main.c: 54:     PORTB = 0x00;
  3892  0C1F  0186               	clrf	6	;volatile
  3893                           
  3894                           ;main.c: 55:     PORTC = 0x00;
  3895  0C20  0187               	clrf	7	;volatile
  3896                           
  3897                           ;main.c: 57:     T1CON = 0b00010001;
  3898  0C21  3011               	movlw	17
  3899  0C22  0090               	movwf	16	;volatile
  3900                           
  3901                           ;main.c: 59:     ADCON0 = 0b00000000;
  3902  0C23  019F               	clrf	31	;volatile
  3903                           
  3904                           ;main.c: 60:     ADCON1 = 0b00000000;
  3905  0C24  1683               	bsf	3,5	;RP0=1, select bank1
  3906  0C25  1303               	bcf	3,6	;RP1=0, select bank1
  3907  0C26  019F               	clrf	31	;volatile
  3908                           
  3909                           ;main.c: 61:     ANSEL = 0b00000000;
  3910  0C27  1683               	bsf	3,5	;RP0=1, select bank3
  3911  0C28  1703               	bsf	3,6	;RP1=1, select bank3
  3912  0C29  0188               	clrf	8	;volatile
  3913                           
  3914                           ;main.c: 62:     ANSELH = 0b00000000;
  3915  0C2A  0189               	clrf	9	;volatile
  3916                           
  3917                           ;main.c: 64:     initLCD();
  3918  0C2B  120A  158A  23BF  120A  158A  	fcall	_initLCD
  3919                           
  3920                           ;main.c: 66:     T1CONbits.TMR1ON = 1;
  3921  0C30  1283               	bcf	3,5	;RP0=0, select bank0
  3922  0C31  1303               	bcf	3,6	;RP1=0, select bank0
  3923  0C32  1410               	bsf	16,0	;volatile
  3924                           
  3925                           ;main.c: 67:     INTCONbits.GIE = 1;
  3926  0C33  178B               	bsf	11,7	;volatile
  3927                           
  3928                           ;main.c: 69:     setTransStat(0);
  3929  0C34  3000               	movlw	0
  3930  0C35  1683               	bsf	3,5	;RP0=1, select bank1
  3931  0C36  1303               	bcf	3,6	;RP1=0, select bank1
  3932  0C37  00C7               	movwf	setTransStat@stat^(0+128)
  3933  0C38  00C8               	movwf	(setTransStat@stat+1)^(0+128)
  3934  0C39  120A  158A  246F   	fcall	_setTransStat
  3935  0C3C  0008               	return
  3936  0C3D                     __end_of_config:	
  3937                           
  3938                           	psect	text16
  3939  0C6F                     __ptext16:	
  3940 ;; *************** function _setTransStat *****************
  3941 ;; Defined at:
  3942 ;;		line 180 in file "main.c"
  3943 ;; Parameters:    Size  Location     Type
  3944 ;;  stat            2    5[BANK1 ] int 
  3945 ;; Auto vars:     Size  Location     Type
  3946 ;;		None
  3947 ;; Return value:  Size  Location     Type
  3948 ;;                  1    wreg      void 
  3949 ;; Registers used:
  3950 ;;		wreg, status,2, status,0, pclath, cstack
  3951 ;; Tracked objects:
  3952 ;;		On entry : 0/0
  3953 ;;		On exit  : 0/0
  3954 ;;		Unchanged: 0/0
  3955 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3956 ;;      Params:         0       0       2       0       0
  3957 ;;      Locals:         0       0       0       0       0
  3958 ;;      Temps:          0       0       2       0       0
  3959 ;;      Totals:         0       0       4       0       0
  3960 ;;Total ram usage:        4 bytes
  3961 ;; Hardware stack levels used:    1
  3962 ;; Hardware stack levels required when called:    7
  3963 ;; This function calls:
  3964 ;;		_writeFrequency
  3965 ;; This function is called by:
  3966 ;;		_main
  3967 ;;		_config
  3968 ;; This function uses a non-reentrant model
  3969 ;;
  3970                           
  3971                           
  3972                           ;psect for function _setTransStat
  3973  0C6F                     _setTransStat:	
  3974                           
  3975                           ;main.c: 181:     if(stat == 1){
  3976                           
  3977                           ;incstack = 0
  3978                           ; Regs used in _setTransStat: [wreg+status,2+status,0+pclath+cstack]
  3979  0C6F  1683               	bsf	3,5	;RP0=1, select bank1
  3980  0C70  1303               	bcf	3,6	;RP1=0, select bank1
  3981  0C71  0347               	decf	setTransStat@stat^(0+128),w
  3982  0C72  0448               	iorwf	(setTransStat@stat+1)^(0+128),w
  3983  0C73  1D03               	btfss	3,2
  3984  0C74  2C8D               	goto	l248
  3985                           
  3986                           ;main.c: 182:         PORTCbits.RC0 = 1;
  3987  0C75  1283               	bcf	3,5	;RP0=0, select bank0
  3988  0C76  1303               	bcf	3,6	;RP1=0, select bank0
  3989  0C77  1407               	bsf	7,0	;volatile
  3990                           
  3991                           ;main.c: 183:         PORTCbits.RC1 = 0;
  3992  0C78  1087               	bcf	7,1	;volatile
  3993                           
  3994                           ;main.c: 184:         _delay((unsigned long)((2)*(4000000/4000.0)));
  3995  0C79  3003               	movlw	3
  3996  0C7A  1683               	bsf	3,5	;RP0=1, select bank1
  3997  0C7B  1303               	bcf	3,6	;RP1=0, select bank1
  3998  0C7C  00CA               	movwf	(??_setTransStat^(0+128)+1)
  3999  0C7D  3097               	movlw	151
  4000  0C7E  00C9               	movwf	??_setTransStat^(0+128)
  4001  0C7F                     u3227:	
  4002  0C7F  0BC9               	decfsz	??_setTransStat^(0+128),f
  4003  0C80  2C7F               	goto	u3227
  4004  0C81  0BCA               	decfsz	(??_setTransStat^(0+128)+1),f
  4005  0C82  2C7F               	goto	u3227
  4006                           
  4007                           ;main.c: 185:         writeFrequency(frequency);
  4008  0C83  1283               	bcf	3,5	;RP0=0, select bank0
  4009  0C84  1303               	bcf	3,6	;RP1=0, select bank0
  4010  0C85  0845               	movf	_frequency+1,w
  4011  0C86  00C0               	movwf	writeFrequency@f+1
  4012  0C87  0844               	movf	_frequency,w
  4013  0C88  00BF               	movwf	writeFrequency@f
  4014  0C89  120A  118A  25BF   	fcall	_writeFrequency
  4015                           
  4016                           ;main.c: 186:     }else{
  4017  0C8C  0008               	return
  4018  0C8D                     l248:	
  4019                           
  4020                           ;main.c: 187:         PORTCbits.RC0 = 0;
  4021  0C8D  1283               	bcf	3,5	;RP0=0, select bank0
  4022  0C8E  1303               	bcf	3,6	;RP1=0, select bank0
  4023  0C8F  1007               	bcf	7,0	;volatile
  4024                           
  4025                           ;main.c: 188:         PORTCbits.RC1 = 1;
  4026  0C90  1487               	bsf	7,1	;volatile
  4027                           
  4028                           ;main.c: 189:         _delay((unsigned long)((2)*(4000000/4000.0)));
  4029  0C91  3003               	movlw	3
  4030  0C92  1683               	bsf	3,5	;RP0=1, select bank1
  4031  0C93  1303               	bcf	3,6	;RP1=0, select bank1
  4032  0C94  00CA               	movwf	(??_setTransStat^(0+128)+1)
  4033  0C95  3097               	movlw	151
  4034  0C96  00C9               	movwf	??_setTransStat^(0+128)
  4035  0C97                     u3237:	
  4036  0C97  0BC9               	decfsz	??_setTransStat^(0+128),f
  4037  0C98  2C97               	goto	u3237
  4038  0C99  0BCA               	decfsz	(??_setTransStat^(0+128)+1),f
  4039  0C9A  2C97               	goto	u3237
  4040                           
  4041                           ;main.c: 190:         writeFrequency(730);
  4042  0C9B  30DA               	movlw	218
  4043  0C9C  1283               	bcf	3,5	;RP0=0, select bank0
  4044  0C9D  1303               	bcf	3,6	;RP1=0, select bank0
  4045  0C9E  00BF               	movwf	writeFrequency@f
  4046  0C9F  3002               	movlw	2
  4047  0CA0  00C0               	movwf	writeFrequency@f+1
  4048  0CA1  120A  118A  25BF   	fcall	_writeFrequency
  4049  0CA4  0008               	return
  4050  0CA5                     __end_of_setTransStat:	
  4051                           
  4052                           	psect	text17
  4053  05BF                     __ptext17:	
  4054 ;; *************** function _writeFrequency *****************
  4055 ;; Defined at:
  4056 ;;		line 15 in file "bh1514.c"
  4057 ;; Parameters:    Size  Location     Type
  4058 ;;  f               2   31[BANK0 ] unsigned int 
  4059 ;; Auto vars:     Size  Location     Type
  4060 ;;  r               2    2[BANK1 ] unsigned int 
  4061 ;;  buffer          2    0[BANK1 ] unsigned int 
  4062 ;;  i               1    4[BANK1 ] unsigned char 
  4063 ;; Return value:  Size  Location     Type
  4064 ;;                  1    wreg      void 
  4065 ;; Registers used:
  4066 ;;		wreg, status,2, status,0, pclath, cstack
  4067 ;; Tracked objects:
  4068 ;;		On entry : 0/0
  4069 ;;		On exit  : 0/0
  4070 ;;		Unchanged: 0/0
  4071 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4072 ;;      Params:         0       2       0       0       0
  4073 ;;      Locals:         0       0       5       0       0
  4074 ;;      Temps:          0       2       0       0       0
  4075 ;;      Totals:         0       4       5       0       0
  4076 ;;Total ram usage:        9 bytes
  4077 ;; Hardware stack levels used:    1
  4078 ;; Hardware stack levels required when called:    6
  4079 ;; This function calls:
  4080 ;;		_codFreq
  4081 ;; This function is called by:
  4082 ;;		_main
  4083 ;;		_setFrequency
  4084 ;;		_setTransStat
  4085 ;; This function uses a non-reentrant model
  4086 ;;
  4087                           
  4088                           
  4089                           ;psect for function _writeFrequency
  4090  05BF                     _writeFrequency:	
  4091                           
  4092                           ;bh1514.c: 16:     unsigned int buffer;;bh1514.c: 17:     unsigned int r;;bh1514.c: 18: 
      +                              unsigned char i;;bh1514.c: 20:     buffer = codFreq(f);
  4093                           
  4094                           ;incstack = 0
  4095                           ; Regs used in _writeFrequency: [wreg+status,2+status,0+pclath+cstack]
  4096  05BF  1283               	bcf	3,5	;RP0=0, select bank0
  4097  05C0  1303               	bcf	3,6	;RP1=0, select bank0
  4098  05C1  0840               	movf	writeFrequency@f+1,w
  4099  05C2  00BE               	movwf	codFreq@f+1
  4100  05C3  083F               	movf	writeFrequency@f,w
  4101  05C4  00BD               	movwf	codFreq@f
  4102  05C5  120A  158A  228B  120A  118A  	fcall	_codFreq
  4103  05CA  1283               	bcf	3,5	;RP0=0, select bank0
  4104  05CB  1303               	bcf	3,6	;RP1=0, select bank0
  4105  05CC  083E               	movf	?_codFreq+1,w
  4106  05CD  1683               	bsf	3,5	;RP0=1, select bank1
  4107  05CE  1303               	bcf	3,6	;RP1=0, select bank1
  4108  05CF  00C3               	movwf	(writeFrequency@buffer+1)^(0+128)
  4109  05D0  1283               	bcf	3,5	;RP0=0, select bank0
  4110  05D1  1303               	bcf	3,6	;RP1=0, select bank0
  4111  05D2  083D               	movf	?_codFreq,w
  4112  05D3  1683               	bsf	3,5	;RP0=1, select bank1
  4113  05D4  1303               	bcf	3,6	;RP1=0, select bank1
  4114  05D5  00C2               	movwf	writeFrequency@buffer^(0+128)
  4115                           
  4116                           ;bh1514.c: 22:     PORTCbits.RC2 = 1;
  4117  05D6  1283               	bcf	3,5	;RP0=0, select bank0
  4118  05D7  1303               	bcf	3,6	;RP1=0, select bank0
  4119  05D8  1507               	bsf	7,2	;volatile
  4120                           
  4121                           ;bh1514.c: 23:     _delay((unsigned long)((1)*(4000000/4000.0)));
  4122  05D9  30C7               	movlw	199
  4123  05DA  1283               	bcf	3,5	;RP0=0, select bank0
  4124  05DB  1303               	bcf	3,6	;RP1=0, select bank0
  4125  05DC  00C1               	movwf	??_writeFrequency
  4126  05DD                     u3247:	
  4127  05DD  2DDE               	nop2
  4128  05DE  0BC1               	decfsz	??_writeFrequency,f
  4129  05DF  2DDD               	goto	u3247
  4130  05E0  2DE1               	nop2
  4131                           
  4132                           ;bh1514.c: 24:     for(i = 0; i < 16; i++){
  4133  05E1  1683               	bsf	3,5	;RP0=1, select bank1
  4134  05E2  1303               	bcf	3,6	;RP1=0, select bank1
  4135  05E3  01C6               	clrf	writeFrequency@i^(0+128)
  4136  05E4                     l3282:	
  4137                           
  4138                           ;bh1514.c: 25:         r = (buffer >> i) & 0x0001;
  4139  05E4  0843               	movf	(writeFrequency@buffer+1)^(0+128),w
  4140  05E5  1283               	bcf	3,5	;RP0=0, select bank0
  4141  05E6  1303               	bcf	3,6	;RP1=0, select bank0
  4142  05E7  00C2               	movwf	??_writeFrequency+1
  4143  05E8  1683               	bsf	3,5	;RP0=1, select bank1
  4144  05E9  1303               	bcf	3,6	;RP1=0, select bank1
  4145  05EA  0842               	movf	writeFrequency@buffer^(0+128),w
  4146  05EB  1283               	bcf	3,5	;RP0=0, select bank0
  4147  05EC  1303               	bcf	3,6	;RP1=0, select bank0
  4148  05ED  00C1               	movwf	??_writeFrequency
  4149  05EE  1683               	bsf	3,5	;RP0=1, select bank1
  4150  05EF  1303               	bcf	3,6	;RP1=0, select bank1
  4151  05F0  0A46               	incf	writeFrequency@i^(0+128),w
  4152  05F1  2DF7               	goto	u2594
  4153  05F2                     u2595:	
  4154  05F2  1283               	bcf	3,5	;RP0=0, select bank0
  4155  05F3  1303               	bcf	3,6	;RP1=0, select bank0
  4156  05F4  1003               	clrc
  4157  05F5  0CC2               	rrf	??_writeFrequency+1,f
  4158  05F6  0CC1               	rrf	??_writeFrequency,f
  4159  05F7                     u2594:	
  4160  05F7  3EFF               	addlw	-1
  4161  05F8  1D03               	skipz
  4162  05F9  2DF2               	goto	u2595
  4163  05FA  3001               	movlw	1
  4164  05FB  0541               	andwf	??_writeFrequency,w
  4165  05FC  1683               	bsf	3,5	;RP0=1, select bank1
  4166  05FD  1303               	bcf	3,6	;RP1=0, select bank1
  4167  05FE  00C4               	movwf	writeFrequency@r^(0+128)
  4168  05FF  3000               	movlw	0
  4169  0600  1283               	bcf	3,5	;RP0=0, select bank0
  4170  0601  1303               	bcf	3,6	;RP1=0, select bank0
  4171  0602  0542               	andwf	??_writeFrequency+1,w
  4172  0603  1683               	bsf	3,5	;RP0=1, select bank1
  4173  0604  1303               	bcf	3,6	;RP1=0, select bank1
  4174  0605  00C5               	movwf	(writeFrequency@r+1)^(0+128)
  4175                           
  4176                           ;bh1514.c: 26:         if(r == 1){
  4177  0606  0344               	decf	writeFrequency@r^(0+128),w
  4178  0607  0445               	iorwf	(writeFrequency@r+1)^(0+128),w
  4179  0608  1D03               	btfss	3,2
  4180  0609  2E0E               	goto	l506
  4181                           
  4182                           ;bh1514.c: 27:             PORTCbits.RC4 = 1;
  4183  060A  1283               	bcf	3,5	;RP0=0, select bank0
  4184  060B  1303               	bcf	3,6	;RP1=0, select bank0
  4185  060C  1607               	bsf	7,4	;volatile
  4186                           
  4187                           ;bh1514.c: 28:         }else{
  4188  060D  2E11               	goto	l3286
  4189  060E                     l506:	
  4190                           
  4191                           ;bh1514.c: 29:             PORTCbits.RC4 = 0;
  4192  060E  1283               	bcf	3,5	;RP0=0, select bank0
  4193  060F  1303               	bcf	3,6	;RP1=0, select bank0
  4194  0610  1207               	bcf	7,4	;volatile
  4195  0611                     l3286:	
  4196                           
  4197                           ;bh1514.c: 31:         _delay((unsigned long)((1)*(4000000/4000.0)));
  4198  0611  30C7               	movlw	199
  4199  0612  1283               	bcf	3,5	;RP0=0, select bank0
  4200  0613  1303               	bcf	3,6	;RP1=0, select bank0
  4201  0614  00C1               	movwf	??_writeFrequency
  4202  0615                     u3257:	
  4203  0615  2E16               	nop2
  4204  0616  0BC1               	decfsz	??_writeFrequency,f
  4205  0617  2E15               	goto	u3257
  4206  0618  2E19               	nop2
  4207                           
  4208                           ;bh1514.c: 32:         PORTCbits.RC3 = 1;
  4209  0619  1283               	bcf	3,5	;RP0=0, select bank0
  4210  061A  1303               	bcf	3,6	;RP1=0, select bank0
  4211  061B  1587               	bsf	7,3	;volatile
  4212                           
  4213                           ;bh1514.c: 33:         _delay((unsigned long)((1)*(4000000/4000.0)));
  4214  061C  30C7               	movlw	199
  4215  061D  1283               	bcf	3,5	;RP0=0, select bank0
  4216  061E  1303               	bcf	3,6	;RP1=0, select bank0
  4217  061F  00C1               	movwf	??_writeFrequency
  4218  0620                     u3267:	
  4219  0620  2E21               	nop2
  4220  0621  0BC1               	decfsz	??_writeFrequency,f
  4221  0622  2E20               	goto	u3267
  4222  0623  2E24               	nop2
  4223                           
  4224                           ;bh1514.c: 34:         PORTCbits.RC3 = 0;
  4225  0624  1283               	bcf	3,5	;RP0=0, select bank0
  4226  0625  1303               	bcf	3,6	;RP1=0, select bank0
  4227  0626  1187               	bcf	7,3	;volatile
  4228                           
  4229                           ;bh1514.c: 35:     }
  4230  0627  3001               	movlw	1
  4231  0628  00C1               	movwf	??_writeFrequency
  4232  0629  0841               	movf	??_writeFrequency,w
  4233  062A  1683               	bsf	3,5	;RP0=1, select bank1
  4234  062B  1303               	bcf	3,6	;RP1=0, select bank1
  4235  062C  07C6               	addwf	writeFrequency@i^(0+128),f
  4236  062D  3010               	movlw	16
  4237  062E  0246               	subwf	writeFrequency@i^(0+128),w
  4238  062F  1C03               	skipc
  4239  0630  2DE4               	goto	l3282
  4240                           
  4241                           ;bh1514.c: 36:     _delay((unsigned long)((1)*(4000000/4000.0)));
  4242  0631  30C7               	movlw	199
  4243  0632  1283               	bcf	3,5	;RP0=0, select bank0
  4244  0633  1303               	bcf	3,6	;RP1=0, select bank0
  4245  0634  00C1               	movwf	??_writeFrequency
  4246  0635                     u3277:	
  4247  0635  2E36               	nop2
  4248  0636  0BC1               	decfsz	??_writeFrequency,f
  4249  0637  2E35               	goto	u3277
  4250  0638  2E39               	nop2
  4251                           
  4252                           ;bh1514.c: 37:     PORTCbits.RC2 = 0;
  4253  0639  1283               	bcf	3,5	;RP0=0, select bank0
  4254  063A  1303               	bcf	3,6	;RP1=0, select bank0
  4255  063B  1107               	bcf	7,2	;volatile
  4256  063C  0008               	return
  4257  063D                     __end_of_writeFrequency:	
  4258                           
  4259                           	psect	text18
  4260  0A8B                     __ptext18:	
  4261 ;; *************** function _codFreq *****************
  4262 ;; Defined at:
  4263 ;;		line 6 in file "bh1514.c"
  4264 ;; Parameters:    Size  Location     Type
  4265 ;;  f               2   29[BANK0 ] unsigned int 
  4266 ;; Auto vars:     Size  Location     Type
  4267 ;;		None
  4268 ;; Return value:  Size  Location     Type
  4269 ;;                  2   29[BANK0 ] unsigned int 
  4270 ;; Registers used:
  4271 ;;		wreg
  4272 ;; Tracked objects:
  4273 ;;		On entry : 0/0
  4274 ;;		On exit  : 0/0
  4275 ;;		Unchanged: 0/0
  4276 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4277 ;;      Params:         0       2       0       0       0
  4278 ;;      Locals:         0       0       0       0       0
  4279 ;;      Temps:          0       0       0       0       0
  4280 ;;      Totals:         0       2       0       0       0
  4281 ;;Total ram usage:        2 bytes
  4282 ;; Hardware stack levels used:    1
  4283 ;; Hardware stack levels required when called:    5
  4284 ;; This function calls:
  4285 ;;		Nothing
  4286 ;; This function is called by:
  4287 ;;		_writeFrequency
  4288 ;; This function uses a non-reentrant model
  4289 ;;
  4290                           
  4291                           
  4292                           ;psect for function _codFreq
  4293  0A8B                     _codFreq:	
  4294                           
  4295                           ;bh1514.c: 8:         f = f | 0b0100100000000000;
  4296                           
  4297                           ;incstack = 0
  4298                           ; Regs used in _codFreq: [wreg]
  4299  0A8B  3000               	movlw	0
  4300  0A8C  1283               	bcf	3,5	;RP0=0, select bank0
  4301  0A8D  1303               	bcf	3,6	;RP1=0, select bank0
  4302  0A8E  043D               	iorwf	codFreq@f,w
  4303  0A8F  00BD               	movwf	codFreq@f
  4304  0A90  3048               	movlw	72
  4305  0A91  043E               	iorwf	codFreq@f+1,w
  4306  0A92  00BE               	movwf	codFreq@f+1
  4307                           
  4308                           ;bh1514.c: 12:     return f;
  4309                           
  4310                           ;bh1514.c: 9:     }else{
  4311  0A93  0008               	return
  4312  0A94                     __end_of_codFreq:	
  4313                           
  4314                           	psect	text19
  4315  0BBF                     __ptext19:	
  4316 ;; *************** function _initLCD *****************
  4317 ;; Defined at:
  4318 ;;		line 5 in file "lcd.c"
  4319 ;; Parameters:    Size  Location     Type
  4320 ;;		None
  4321 ;; Auto vars:     Size  Location     Type
  4322 ;;		None
  4323 ;; Return value:  Size  Location     Type
  4324 ;;                  1    wreg      void 
  4325 ;; Registers used:
  4326 ;;		wreg, status,2, status,0, pclath, cstack
  4327 ;; Tracked objects:
  4328 ;;		On entry : 0/0
  4329 ;;		On exit  : 0/0
  4330 ;;		Unchanged: 0/0
  4331 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4332 ;;      Params:         0       0       0       0       0
  4333 ;;      Locals:         0       0       0       0       0
  4334 ;;      Temps:          0       0       2       0       0
  4335 ;;      Totals:         0       0       2       0       0
  4336 ;;Total ram usage:        2 bytes
  4337 ;; Hardware stack levels used:    1
  4338 ;; Hardware stack levels required when called:    8
  4339 ;; This function calls:
  4340 ;;		_OpenXLCD
  4341 ;;		_SendCMDLCD
  4342 ;; This function is called by:
  4343 ;;		_config
  4344 ;; This function uses a non-reentrant model
  4345 ;;
  4346                           
  4347                           
  4348                           ;psect for function _initLCD
  4349  0BBF                     _initLCD:	
  4350                           
  4351                           ;lcd.c: 6:     OpenXLCD(0b00101100 & 0b00111000);
  4352                           
  4353                           ;incstack = 0
  4354 ;; hardware stack exceeded
  4355                           ; Regs used in _initLCD: [wreg+status,2+status,0+pclath+cstack]
  4356  0BBF  3028               	movlw	40
  4357  0BC0  120A  118A  2507  120A  158A  	fcall	_OpenXLCD
  4358                           
  4359                           ;lcd.c: 7:     _delay((unsigned long)((100)*(4000000/4000.0)));
  4360  0BC5  3082               	movlw	130
  4361  0BC6  1683               	bsf	3,5	;RP0=1, select bank1
  4362  0BC7  1303               	bcf	3,6	;RP1=0, select bank1
  4363  0BC8  00C3               	movwf	(??_initLCD^(0+128)+1)
  4364  0BC9  30DD               	movlw	221
  4365  0BCA  00C2               	movwf	??_initLCD^(0+128)
  4366  0BCB                     u3287:	
  4367  0BCB  0BC2               	decfsz	??_initLCD^(0+128),f
  4368  0BCC  2BCB               	goto	u3287
  4369  0BCD  0BC3               	decfsz	(??_initLCD^(0+128)+1),f
  4370  0BCE  2BCB               	goto	u3287
  4371                           
  4372                           ;lcd.c: 8:     SendCMDLCD(0b00001101);
  4373  0BCF  300D               	movlw	13
  4374  0BD0  120A  158A  22F5  120A  158A  	fcall	_SendCMDLCD
  4375                           
  4376                           ;lcd.c: 9:     SendCMDLCD(0b00000110);
  4377  0BD5  3006               	movlw	6
  4378  0BD6  120A  158A  22F5  120A  158A  	fcall	_SendCMDLCD
  4379                           
  4380                           ;lcd.c: 10:     _delay((unsigned long)((50)*(4000000/4000.0)));
  4381  0BDB  3041               	movlw	65
  4382  0BDC  1683               	bsf	3,5	;RP0=1, select bank1
  4383  0BDD  1303               	bcf	3,6	;RP1=0, select bank1
  4384  0BDE  00C3               	movwf	(??_initLCD^(0+128)+1)
  4385  0BDF  30ED               	movlw	237
  4386  0BE0  00C2               	movwf	??_initLCD^(0+128)
  4387  0BE1                     u3297:	
  4388  0BE1  0BC2               	decfsz	??_initLCD^(0+128),f
  4389  0BE2  2BE1               	goto	u3297
  4390  0BE3  0BC3               	decfsz	(??_initLCD^(0+128)+1),f
  4391  0BE4  2BE1               	goto	u3297
  4392  0BE5  2BE6               	nop2
  4393  0BE6  0008               	return
  4394  0BE7                     __end_of_initLCD:	
  4395                           
  4396                           	psect	text20
  4397  0AF5                     __ptext20:	
  4398 ;; *************** function _SendCMDLCD *****************
  4399 ;; Defined at:
  4400 ;;		line 27 in file "lcd.c"
  4401 ;; Parameters:    Size  Location     Type
  4402 ;;  CMD             1    wreg     unsigned char 
  4403 ;; Auto vars:     Size  Location     Type
  4404 ;;  CMD             1   33[BANK0 ] unsigned char 
  4405 ;; Return value:  Size  Location     Type
  4406 ;;                  1    wreg      void 
  4407 ;; Registers used:
  4408 ;;		wreg, status,2, status,0, pclath, cstack
  4409 ;; Tracked objects:
  4410 ;;		On entry : 0/0
  4411 ;;		On exit  : 0/0
  4412 ;;		Unchanged: 0/0
  4413 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4414 ;;      Params:         0       0       0       0       0
  4415 ;;      Locals:         0       1       0       0       0
  4416 ;;      Temps:          0       0       0       0       0
  4417 ;;      Totals:         0       1       0       0       0
  4418 ;;Total ram usage:        1 bytes
  4419 ;; Hardware stack levels used:    1
  4420 ;; Hardware stack levels required when called:    7
  4421 ;; This function calls:
  4422 ;;		_BusyXLCD
  4423 ;;		_WriteCmdXLCD
  4424 ;; This function is called by:
  4425 ;;		_initLCD
  4426 ;; This function uses a non-reentrant model
  4427 ;;
  4428                           
  4429                           
  4430                           ;psect for function _SendCMDLCD
  4431  0AF5                     _SendCMDLCD:	
  4432                           
  4433                           ;incstack = 0
  4434 ;; hardware stack exceeded
  4435                           ; Regs used in _SendCMDLCD: [wreg+status,2+status,0+pclath+cstack]
  4436                           ;SendCMDLCD@CMD stored from wreg
  4437  0AF5  1283               	bcf	3,5	;RP0=0, select bank0
  4438  0AF6  1303               	bcf	3,6	;RP1=0, select bank0
  4439  0AF7  00C1               	movwf	SendCMDLCD@CMD
  4440  0AF8                     l2402:	
  4441                           ;lcd.c: 28:     while(BusyXLCD())continue;
  4442                           
  4443  0AF8  120A  158A  22AA  120A  158A  	fcall	_BusyXLCD
  4444  0AFD  3A00               	xorlw	0
  4445  0AFE  1D03               	skipz
  4446  0AFF  2AF8               	goto	l2402
  4447                           
  4448                           ;lcd.c: 29:     WriteCmdXLCD(CMD);
  4449  0B00  1283               	bcf	3,5	;RP0=0, select bank0
  4450  0B01  1303               	bcf	3,6	;RP1=0, select bank0
  4451  0B02  0841               	movf	SendCMDLCD@CMD,w
  4452  0B03  120A  158A  260F   	fcall	_WriteCmdXLCD
  4453  0B06  0008               	return
  4454  0B07                     __end_of_SendCMDLCD:	
  4455                           
  4456                           	psect	text21
  4457  0507                     __ptext21:	
  4458 ;; *************** function _OpenXLCD *****************
  4459 ;; Defined at:
  4460 ;;		line 40 in file "lcd_pic16.c"
  4461 ;; Parameters:    Size  Location     Type
  4462 ;;  lcdtype         1    wreg     unsigned char 
  4463 ;; Auto vars:     Size  Location     Type
  4464 ;;  lcdtype         1   35[BANK0 ] unsigned char 
  4465 ;; Return value:  Size  Location     Type
  4466 ;;                  1    wreg      void 
  4467 ;; Registers used:
  4468 ;;		wreg, status,2, status,0, pclath, cstack
  4469 ;; Tracked objects:
  4470 ;;		On entry : 0/0
  4471 ;;		On exit  : 0/0
  4472 ;;		Unchanged: 0/0
  4473 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4474 ;;      Params:         0       0       0       0       0
  4475 ;;      Locals:         0       1       0       0       0
  4476 ;;      Temps:          0       2       0       0       0
  4477 ;;      Totals:         0       3       0       0       0
  4478 ;;Total ram usage:        3 bytes
  4479 ;; Hardware stack levels used:    1
  4480 ;; Hardware stack levels required when called:    7
  4481 ;; This function calls:
  4482 ;;		_BusyXLCD
  4483 ;;		_DelayPORXLCD
  4484 ;;		_SetDDRamAddr
  4485 ;;		_WriteCmdXLCD
  4486 ;; This function is called by:
  4487 ;;		_initLCD
  4488 ;; This function uses a non-reentrant model
  4489 ;;
  4490                           
  4491                           
  4492                           ;psect for function _OpenXLCD
  4493  0507                     _OpenXLCD:	
  4494                           
  4495                           ;incstack = 0
  4496 ;; hardware stack exceeded
  4497                           ; Regs used in _OpenXLCD: [wreg+status,2+status,0+pclath+cstack]
  4498                           ;OpenXLCD@lcdtype stored from wreg
  4499  0507  1283               	bcf	3,5	;RP0=0, select bank0
  4500  0508  1303               	bcf	3,6	;RP1=0, select bank0
  4501  0509  00C3               	movwf	OpenXLCD@lcdtype
  4502                           
  4503                           ;lcd_pic16.c: 40: void OpenXLCD(unsigned char lcdtype);lcd_pic16.c: 41: {;lcd_pic16.c: 4
      +                          7:         PORTB &= 0x0f;
  4504  050A  300F               	movlw	15
  4505  050B  00C1               	movwf	??_OpenXLCD
  4506  050C  0841               	movf	??_OpenXLCD,w
  4507  050D  0586               	andwf	6,f	;volatile
  4508                           
  4509                           ;lcd_pic16.c: 48:         TRISB &= 0x0F;
  4510  050E  300F               	movlw	15
  4511  050F  00C1               	movwf	??_OpenXLCD
  4512  0510  0841               	movf	??_OpenXLCD,w
  4513  0511  1683               	bsf	3,5	;RP0=1, select bank1
  4514  0512  1303               	bcf	3,6	;RP1=0, select bank1
  4515  0513  0586               	andwf	6,f	;volatile
  4516                           
  4517                           ;lcd_pic16.c: 54:         TRISBbits.TRISB2 = 0;
  4518  0514  1106               	bcf	6,2	;volatile
  4519                           
  4520                           ;lcd_pic16.c: 55:         TRISBbits.TRISB1 = 0;
  4521  0515  1086               	bcf	6,1	;volatile
  4522                           
  4523                           ;lcd_pic16.c: 56:         TRISBbits.TRISB3 = 0;
  4524  0516  1186               	bcf	6,3	;volatile
  4525                           
  4526                           ;lcd_pic16.c: 57:         PORTBbits.RB2 = 0;
  4527  0517  1283               	bcf	3,5	;RP0=0, select bank0
  4528  0518  1303               	bcf	3,6	;RP1=0, select bank0
  4529  0519  1106               	bcf	6,2	;volatile
  4530                           
  4531                           ;lcd_pic16.c: 58:         PORTBbits.RB1 = 0;
  4532  051A  1086               	bcf	6,1	;volatile
  4533                           
  4534                           ;lcd_pic16.c: 59:         PORTBbits.RB3 = 0;
  4535  051B  1186               	bcf	6,3	;volatile
  4536                           
  4537                           ;lcd_pic16.c: 62:         DelayPORXLCD();
  4538  051C  120A  158A  229E  120A  118A  	fcall	_DelayPORXLCD
  4539                           
  4540                           ;lcd_pic16.c: 64:        WriteCmdXLCD(0x30);
  4541  0521  3030               	movlw	48
  4542  0522  120A  158A  260F  120A  118A  	fcall	_WriteCmdXLCD
  4543                           
  4544                           ;lcd_pic16.c: 65:          _delay((unsigned long)((5)*(4000000/4000.0)));
  4545  0527  3007               	movlw	7
  4546  0528  1283               	bcf	3,5	;RP0=0, select bank0
  4547  0529  1303               	bcf	3,6	;RP1=0, select bank0
  4548  052A  00C2               	movwf	??_OpenXLCD+1
  4549  052B  307C               	movlw	124
  4550  052C  00C1               	movwf	??_OpenXLCD
  4551  052D                     u3307:	
  4552  052D  0BC1               	decfsz	??_OpenXLCD,f
  4553  052E  2D2D               	goto	u3307
  4554  052F  0BC2               	decfsz	??_OpenXLCD+1,f
  4555  0530  2D2D               	goto	u3307
  4556  0531  0000               	nop
  4557                           
  4558                           ;lcd_pic16.c: 67:        WriteCmdXLCD(0x30);
  4559  0532  3030               	movlw	48
  4560  0533  120A  158A  260F  120A  118A  	fcall	_WriteCmdXLCD
  4561                           
  4562                           ;lcd_pic16.c: 68:          _delay((unsigned long)((1)*(4000000/4000.0)));
  4563  0538  30C7               	movlw	199
  4564  0539  1283               	bcf	3,5	;RP0=0, select bank0
  4565  053A  1303               	bcf	3,6	;RP1=0, select bank0
  4566  053B  00C1               	movwf	??_OpenXLCD
  4567  053C                     u3317:	
  4568  053C  2D3D               	nop2
  4569  053D  0BC1               	decfsz	??_OpenXLCD,f
  4570  053E  2D3C               	goto	u3317
  4571  053F  2D40               	nop2
  4572                           
  4573                           ;lcd_pic16.c: 71:        WriteCmdXLCD(0x32);
  4574  0540  3032               	movlw	50
  4575  0541  120A  158A  260F  120A  118A  	fcall	_WriteCmdXLCD
  4576  0546                     l2340:	
  4577                           ;lcd_pic16.c: 72:       while( BusyXLCD() );
  4578                           
  4579  0546  120A  158A  22AA  120A  118A  	fcall	_BusyXLCD
  4580  054B  3A00               	xorlw	0
  4581  054C  1D03               	skipz
  4582  054D  2D46               	goto	l2340
  4583  054E                     l2342:	
  4584  054E  120A  158A  22AA  120A  118A  	fcall	_BusyXLCD
  4585  0553  3A00               	xorlw	0
  4586  0554  1D03               	skipz
  4587  0555  2D4E               	goto	l2342
  4588                           
  4589                           ;lcd_pic16.c: 78:         WriteCmdXLCD(lcdtype);
  4590  0556  1283               	bcf	3,5	;RP0=0, select bank0
  4591  0557  1303               	bcf	3,6	;RP1=0, select bank0
  4592  0558  0843               	movf	OpenXLCD@lcdtype,w
  4593  0559  120A  158A  260F  120A  118A  	fcall	_WriteCmdXLCD
  4594  055E                     l2346:	
  4595                           ;lcd_pic16.c: 81:         while(BusyXLCD());
  4596                           
  4597  055E  120A  158A  22AA  120A  118A  	fcall	_BusyXLCD
  4598  0563  3A00               	xorlw	0
  4599  0564  1D03               	skipz
  4600  0565  2D5E               	goto	l2346
  4601                           
  4602                           ;lcd_pic16.c: 82:         WriteCmdXLCD(0b00001011&0b00001101&0b00001110);
  4603  0566  3008               	movlw	8
  4604  0567  120A  158A  260F  120A  118A  	fcall	_WriteCmdXLCD
  4605  056C                     l2350:	
  4606                           ;lcd_pic16.c: 83:         while(BusyXLCD());
  4607                           
  4608  056C  120A  158A  22AA  120A  118A  	fcall	_BusyXLCD
  4609  0571  3A00               	xorlw	0
  4610  0572  1D03               	skipz
  4611  0573  2D6C               	goto	l2350
  4612                           
  4613                           ;lcd_pic16.c: 84:         WriteCmdXLCD(0b00001111&0b00001111&0b00001111);
  4614  0574  300F               	movlw	15
  4615  0575  120A  158A  260F  120A  118A  	fcall	_WriteCmdXLCD
  4616  057A                     l2354:	
  4617                           ;lcd_pic16.c: 87:         while(BusyXLCD());
  4618                           
  4619  057A  120A  158A  22AA  120A  118A  	fcall	_BusyXLCD
  4620  057F  3A00               	xorlw	0
  4621  0580  1D03               	skipz
  4622  0581  2D7A               	goto	l2354
  4623                           
  4624                           ;lcd_pic16.c: 88:         WriteCmdXLCD(0x01);
  4625  0582  3001               	movlw	1
  4626  0583  120A  158A  260F  120A  118A  	fcall	_WriteCmdXLCD
  4627  0588                     l2358:	
  4628                           ;lcd_pic16.c: 91:         while(BusyXLCD());
  4629                           
  4630  0588  120A  158A  22AA  120A  118A  	fcall	_BusyXLCD
  4631  058D  3A00               	xorlw	0
  4632  058E  1D03               	skipz
  4633  058F  2D88               	goto	l2358
  4634                           
  4635                           ;lcd_pic16.c: 92:         WriteCmdXLCD(0b00000101);
  4636  0590  3005               	movlw	5
  4637  0591  120A  158A  260F  120A  118A  	fcall	_WriteCmdXLCD
  4638  0596                     l2362:	
  4639                           ;lcd_pic16.c: 94:    while(BusyXLCD());
  4640                           
  4641  0596  120A  158A  22AA  120A  118A  	fcall	_BusyXLCD
  4642  059B  3A00               	xorlw	0
  4643  059C  1D03               	skipz
  4644  059D  2D96               	goto	l2362
  4645                           
  4646                           ;lcd_pic16.c: 95:         WriteCmdXLCD(0x06);
  4647  059E  3006               	movlw	6
  4648  059F  120A  158A  260F  120A  118A  	fcall	_WriteCmdXLCD
  4649  05A4                     l2366:	
  4650                           ;lcd_pic16.c: 97:         while(BusyXLCD());
  4651                           
  4652  05A4  120A  158A  22AA  120A  118A  	fcall	_BusyXLCD
  4653  05A9  3A00               	xorlw	0
  4654  05AA  1D03               	skipz
  4655  05AB  2DA4               	goto	l2366
  4656                           
  4657                           ;lcd_pic16.c: 98:         SetDDRamAddr(0x80);
  4658  05AC  3080               	movlw	128
  4659  05AD  120A  158A  26A9  120A  118A  	fcall	_SetDDRamAddr
  4660  05B2                     l2370:	
  4661                           ;lcd_pic16.c: 100:         while(BusyXLCD());
  4662                           
  4663  05B2  120A  158A  22AA  120A  118A  	fcall	_BusyXLCD
  4664  05B7  3A00               	xorlw	0
  4665  05B8  1D03               	skipz
  4666  05B9  2DB2               	goto	l2370
  4667                           
  4668                           ;lcd_pic16.c: 101:         WriteCmdXLCD(0b00001101);
  4669  05BA  300D               	movlw	13
  4670  05BB  120A  158A  260F   	fcall	_WriteCmdXLCD
  4671  05BE  0008               	return
  4672  05BF                     __end_of_OpenXLCD:	
  4673                           
  4674                           	psect	text22
  4675  0E0F                     __ptext22:	
  4676 ;; *************** function _WriteCmdXLCD *****************
  4677 ;; Defined at:
  4678 ;;		line 164 in file "lcd_pic16.c"
  4679 ;; Parameters:    Size  Location     Type
  4680 ;;  cmd             1    wreg     unsigned char 
  4681 ;; Auto vars:     Size  Location     Type
  4682 ;;  cmd             1   32[BANK0 ] unsigned char 
  4683 ;; Return value:  Size  Location     Type
  4684 ;;                  1    wreg      void 
  4685 ;; Registers used:
  4686 ;;		wreg, status,2, status,0, pclath, cstack
  4687 ;; Tracked objects:
  4688 ;;		On entry : 0/0
  4689 ;;		On exit  : 0/0
  4690 ;;		Unchanged: 0/0
  4691 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4692 ;;      Params:         0       0       0       0       0
  4693 ;;      Locals:         0       1       0       0       0
  4694 ;;      Temps:          0       2       0       0       0
  4695 ;;      Totals:         0       3       0       0       0
  4696 ;;Total ram usage:        3 bytes
  4697 ;; Hardware stack levels used:    1
  4698 ;; Hardware stack levels required when called:    6
  4699 ;; This function calls:
  4700 ;;		_DelayFor18TCY
  4701 ;; This function is called by:
  4702 ;;		_OpenXLCD
  4703 ;;		_SendCMDLCD
  4704 ;; This function uses a non-reentrant model
  4705 ;;
  4706                           
  4707                           
  4708                           ;psect for function _WriteCmdXLCD
  4709  0E0F                     _WriteCmdXLCD:	
  4710                           
  4711                           ;incstack = 0
  4712 ;; hardware stack exceeded
  4713                           ; Regs used in _WriteCmdXLCD: [wreg+status,2+status,0+pclath+cstack]
  4714                           ;WriteCmdXLCD@cmd stored from wreg
  4715  0E0F  1283               	bcf	3,5	;RP0=0, select bank0
  4716  0E10  1303               	bcf	3,6	;RP1=0, select bank0
  4717  0E11  00C0               	movwf	WriteCmdXLCD@cmd
  4718                           
  4719                           ;lcd_pic16.c: 178:         TRISB &= 0x0f;
  4720  0E12  300F               	movlw	15
  4721  0E13  00BE               	movwf	??_WriteCmdXLCD
  4722  0E14  083E               	movf	??_WriteCmdXLCD,w
  4723  0E15  1683               	bsf	3,5	;RP0=1, select bank1
  4724  0E16  1303               	bcf	3,6	;RP1=0, select bank1
  4725  0E17  0586               	andwf	6,f	;volatile
  4726                           
  4727                           ;lcd_pic16.c: 179:         PORTB &= 0x0f;
  4728  0E18  300F               	movlw	15
  4729  0E19  1283               	bcf	3,5	;RP0=0, select bank0
  4730  0E1A  1303               	bcf	3,6	;RP1=0, select bank0
  4731  0E1B  00BE               	movwf	??_WriteCmdXLCD
  4732  0E1C  083E               	movf	??_WriteCmdXLCD,w
  4733  0E1D  0586               	andwf	6,f	;volatile
  4734                           
  4735                           ;lcd_pic16.c: 180:         PORTB |= cmd&0xf0;
  4736  0E1E  0840               	movf	WriteCmdXLCD@cmd,w
  4737  0E1F  39F0               	andlw	240
  4738  0E20  00BE               	movwf	??_WriteCmdXLCD
  4739  0E21  083E               	movf	??_WriteCmdXLCD,w
  4740  0E22  0486               	iorwf	6,f	;volatile
  4741                           
  4742                           ;lcd_pic16.c: 186:         PORTBbits.RB2 = 0;
  4743  0E23  1106               	bcf	6,2	;volatile
  4744                           
  4745                           ;lcd_pic16.c: 187:         PORTBbits.RB1 = 0;
  4746  0E24  1086               	bcf	6,1	;volatile
  4747                           
  4748                           ;lcd_pic16.c: 188:         DelayFor18TCY();
  4749  0E25  120A  158A  2275  120A  158A  	fcall	_DelayFor18TCY
  4750                           
  4751                           ;lcd_pic16.c: 189:         PORTBbits.RB3 = 1;
  4752  0E2A  1283               	bcf	3,5	;RP0=0, select bank0
  4753  0E2B  1303               	bcf	3,6	;RP1=0, select bank0
  4754  0E2C  1586               	bsf	6,3	;volatile
  4755                           
  4756                           ;lcd_pic16.c: 190:         DelayFor18TCY();
  4757  0E2D  120A  158A  2275  120A  158A  	fcall	_DelayFor18TCY
  4758                           
  4759                           ;lcd_pic16.c: 191:         PORTBbits.RB3 = 0;
  4760  0E32  1283               	bcf	3,5	;RP0=0, select bank0
  4761  0E33  1303               	bcf	3,6	;RP1=0, select bank0
  4762  0E34  1186               	bcf	6,3	;volatile
  4763                           
  4764                           ;lcd_pic16.c: 193:         PORTB &= 0x0f;
  4765  0E35  300F               	movlw	15
  4766  0E36  00BE               	movwf	??_WriteCmdXLCD
  4767  0E37  083E               	movf	??_WriteCmdXLCD,w
  4768  0E38  0586               	andwf	6,f	;volatile
  4769                           
  4770                           ;lcd_pic16.c: 194:         PORTB |= (cmd<<4)&0xf0;
  4771  0E39  0840               	movf	WriteCmdXLCD@cmd,w
  4772  0E3A  00BE               	movwf	??_WriteCmdXLCD
  4773  0E3B  3003               	movlw	3
  4774  0E3C                     u1315:	
  4775  0E3C  1003               	clrc
  4776  0E3D  0DBE               	rlf	??_WriteCmdXLCD,f
  4777  0E3E  3EFF               	addlw	-1
  4778  0E3F  1D03               	skipz
  4779  0E40  2E3C               	goto	u1315
  4780  0E41  1003               	clrc
  4781  0E42  0D3E               	rlf	??_WriteCmdXLCD,w
  4782  0E43  39F0               	andlw	240
  4783  0E44  00BF               	movwf	??_WriteCmdXLCD+1
  4784  0E45  083F               	movf	??_WriteCmdXLCD+1,w
  4785  0E46  0486               	iorwf	6,f	;volatile
  4786                           
  4787                           ;lcd_pic16.c: 199:         DelayFor18TCY();
  4788  0E47  120A  158A  2275  120A  158A  	fcall	_DelayFor18TCY
  4789                           
  4790                           ;lcd_pic16.c: 200:         PORTBbits.RB3 = 1;
  4791  0E4C  1283               	bcf	3,5	;RP0=0, select bank0
  4792  0E4D  1303               	bcf	3,6	;RP1=0, select bank0
  4793  0E4E  1586               	bsf	6,3	;volatile
  4794                           
  4795                           ;lcd_pic16.c: 201:         DelayFor18TCY();
  4796  0E4F  120A  158A  2275   	fcall	_DelayFor18TCY
  4797                           
  4798                           ;lcd_pic16.c: 202:         PORTBbits.RB3 = 0;
  4799  0E52  1283               	bcf	3,5	;RP0=0, select bank0
  4800  0E53  1303               	bcf	3,6	;RP1=0, select bank0
  4801  0E54  1186               	bcf	6,3	;volatile
  4802                           
  4803                           ;lcd_pic16.c: 204:         TRISB |= 0xf0;
  4804  0E55  30F0               	movlw	240
  4805  0E56  00BE               	movwf	??_WriteCmdXLCD
  4806  0E57  083E               	movf	??_WriteCmdXLCD,w
  4807  0E58  1683               	bsf	3,5	;RP0=1, select bank1
  4808  0E59  1303               	bcf	3,6	;RP1=0, select bank1
  4809  0E5A  0486               	iorwf	6,f	;volatile
  4810  0E5B  0008               	return
  4811  0E5C                     __end_of_WriteCmdXLCD:	
  4812                           
  4813                           	psect	text23
  4814  0EA9                     __ptext23:	
  4815 ;; *************** function _SetDDRamAddr *****************
  4816 ;; Defined at:
  4817 ;;		line 217 in file "lcd_pic16.c"
  4818 ;; Parameters:    Size  Location     Type
  4819 ;;  DDaddr          1    wreg     unsigned char 
  4820 ;; Auto vars:     Size  Location     Type
  4821 ;;  DDaddr          1   32[BANK0 ] unsigned char 
  4822 ;; Return value:  Size  Location     Type
  4823 ;;                  1    wreg      void 
  4824 ;; Registers used:
  4825 ;;		wreg, status,2, status,0, pclath, cstack
  4826 ;; Tracked objects:
  4827 ;;		On entry : 0/0
  4828 ;;		On exit  : 0/0
  4829 ;;		Unchanged: 0/0
  4830 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4831 ;;      Params:         0       0       0       0       0
  4832 ;;      Locals:         0       1       0       0       0
  4833 ;;      Temps:          0       2       0       0       0
  4834 ;;      Totals:         0       3       0       0       0
  4835 ;;Total ram usage:        3 bytes
  4836 ;; Hardware stack levels used:    1
  4837 ;; Hardware stack levels required when called:    6
  4838 ;; This function calls:
  4839 ;;		_DelayFor18TCY
  4840 ;; This function is called by:
  4841 ;;		_main
  4842 ;;		_OpenXLCD
  4843 ;;		_updateLCD
  4844 ;; This function uses a non-reentrant model
  4845 ;;
  4846                           
  4847                           
  4848                           ;psect for function _SetDDRamAddr
  4849  0EA9                     _SetDDRamAddr:	
  4850                           
  4851                           ;incstack = 0
  4852                           ; Regs used in _SetDDRamAddr: [wreg+status,2+status,0+pclath+cstack]
  4853                           ;SetDDRamAddr@DDaddr stored from wreg
  4854  0EA9  1283               	bcf	3,5	;RP0=0, select bank0
  4855  0EAA  1303               	bcf	3,6	;RP1=0, select bank0
  4856  0EAB  00C0               	movwf	SetDDRamAddr@DDaddr
  4857                           
  4858                           ;lcd_pic16.c: 217: void SetDDRamAddr(unsigned char DDaddr);lcd_pic16.c: 218: {;lcd_pic16
      +                          .c: 232:         TRISB &= 0x0f;
  4859  0EAC  300F               	movlw	15
  4860  0EAD  00BE               	movwf	??_SetDDRamAddr
  4861  0EAE  083E               	movf	??_SetDDRamAddr,w
  4862  0EAF  1683               	bsf	3,5	;RP0=1, select bank1
  4863  0EB0  1303               	bcf	3,6	;RP1=0, select bank1
  4864  0EB1  0586               	andwf	6,f	;volatile
  4865                           
  4866                           ;lcd_pic16.c: 233:         PORTB &= 0x0f;
  4867  0EB2  300F               	movlw	15
  4868  0EB3  1283               	bcf	3,5	;RP0=0, select bank0
  4869  0EB4  1303               	bcf	3,6	;RP1=0, select bank0
  4870  0EB5  00BE               	movwf	??_SetDDRamAddr
  4871  0EB6  083E               	movf	??_SetDDRamAddr,w
  4872  0EB7  0586               	andwf	6,f	;volatile
  4873                           
  4874                           ;lcd_pic16.c: 234:         PORTB |= ((DDaddr | 0b10000000) & 0xf0);
  4875  0EB8  0840               	movf	SetDDRamAddr@DDaddr,w
  4876  0EB9  3880               	iorlw	128
  4877  0EBA  39F0               	andlw	240
  4878  0EBB  00BE               	movwf	??_SetDDRamAddr
  4879  0EBC  083E               	movf	??_SetDDRamAddr,w
  4880  0EBD  0486               	iorwf	6,f	;volatile
  4881                           
  4882                           ;lcd_pic16.c: 240:         PORTBbits.RB2 = 0;
  4883  0EBE  1106               	bcf	6,2	;volatile
  4884                           
  4885                           ;lcd_pic16.c: 241:         PORTBbits.RB1 = 0;
  4886  0EBF  1086               	bcf	6,1	;volatile
  4887                           
  4888                           ;lcd_pic16.c: 242:         DelayFor18TCY();
  4889  0EC0  120A  158A  2275  120A  158A  	fcall	_DelayFor18TCY
  4890                           
  4891                           ;lcd_pic16.c: 243:         PORTBbits.RB3 = 1;
  4892  0EC5  1283               	bcf	3,5	;RP0=0, select bank0
  4893  0EC6  1303               	bcf	3,6	;RP1=0, select bank0
  4894  0EC7  1586               	bsf	6,3	;volatile
  4895                           
  4896                           ;lcd_pic16.c: 244:         DelayFor18TCY();
  4897  0EC8  120A  158A  2275  120A  158A  	fcall	_DelayFor18TCY
  4898                           
  4899                           ;lcd_pic16.c: 245:         PORTBbits.RB3 = 0;
  4900  0ECD  1283               	bcf	3,5	;RP0=0, select bank0
  4901  0ECE  1303               	bcf	3,6	;RP1=0, select bank0
  4902  0ECF  1186               	bcf	6,3	;volatile
  4903                           
  4904                           ;lcd_pic16.c: 247:         PORTB &= 0x0f;
  4905  0ED0  300F               	movlw	15
  4906  0ED1  00BE               	movwf	??_SetDDRamAddr
  4907  0ED2  083E               	movf	??_SetDDRamAddr,w
  4908  0ED3  0586               	andwf	6,f	;volatile
  4909                           
  4910                           ;lcd_pic16.c: 248:         PORTB |= ((DDaddr<<4)&0xf0);
  4911  0ED4  0840               	movf	SetDDRamAddr@DDaddr,w
  4912  0ED5  00BE               	movwf	??_SetDDRamAddr
  4913  0ED6  3003               	movlw	3
  4914  0ED7                     u1305:	
  4915  0ED7  1003               	clrc
  4916  0ED8  0DBE               	rlf	??_SetDDRamAddr,f
  4917  0ED9  3EFF               	addlw	-1
  4918  0EDA  1D03               	skipz
  4919  0EDB  2ED7               	goto	u1305
  4920  0EDC  1003               	clrc
  4921  0EDD  0D3E               	rlf	??_SetDDRamAddr,w
  4922  0EDE  39F0               	andlw	240
  4923  0EDF  00BF               	movwf	??_SetDDRamAddr+1
  4924  0EE0  083F               	movf	??_SetDDRamAddr+1,w
  4925  0EE1  0486               	iorwf	6,f	;volatile
  4926                           
  4927                           ;lcd_pic16.c: 253:         DelayFor18TCY();
  4928  0EE2  120A  158A  2275  120A  158A  	fcall	_DelayFor18TCY
  4929                           
  4930                           ;lcd_pic16.c: 254:         PORTBbits.RB3 = 1;
  4931  0EE7  1283               	bcf	3,5	;RP0=0, select bank0
  4932  0EE8  1303               	bcf	3,6	;RP1=0, select bank0
  4933  0EE9  1586               	bsf	6,3	;volatile
  4934                           
  4935                           ;lcd_pic16.c: 255:         DelayFor18TCY();
  4936  0EEA  120A  158A  2275   	fcall	_DelayFor18TCY
  4937                           
  4938                           ;lcd_pic16.c: 256:         PORTBbits.RB3 = 0;
  4939  0EED  1283               	bcf	3,5	;RP0=0, select bank0
  4940  0EEE  1303               	bcf	3,6	;RP1=0, select bank0
  4941  0EEF  1186               	bcf	6,3	;volatile
  4942                           
  4943                           ;lcd_pic16.c: 258:         TRISB |= 0xf0;
  4944  0EF0  30F0               	movlw	240
  4945  0EF1  00BE               	movwf	??_SetDDRamAddr
  4946  0EF2  083E               	movf	??_SetDDRamAddr,w
  4947  0EF3  1683               	bsf	3,5	;RP0=1, select bank1
  4948  0EF4  1303               	bcf	3,6	;RP1=0, select bank1
  4949  0EF5  0486               	iorwf	6,f	;volatile
  4950  0EF6  0008               	return
  4951  0EF7                     __end_of_SetDDRamAddr:	
  4952                           
  4953                           	psect	text24
  4954  0A75                     __ptext24:	
  4955 ;; *************** function _DelayFor18TCY *****************
  4956 ;; Defined at:
  4957 ;;		line 22 in file "lcd_pic16.c"
  4958 ;; Parameters:    Size  Location     Type
  4959 ;;		None
  4960 ;; Auto vars:     Size  Location     Type
  4961 ;;		None
  4962 ;; Return value:  Size  Location     Type
  4963 ;;                  1    wreg      void 
  4964 ;; Registers used:
  4965 ;;		wreg
  4966 ;; Tracked objects:
  4967 ;;		On entry : 0/0
  4968 ;;		On exit  : 0/0
  4969 ;;		Unchanged: 0/0
  4970 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4971 ;;      Params:         0       0       0       0       0
  4972 ;;      Locals:         0       0       0       0       0
  4973 ;;      Temps:          0       1       0       0       0
  4974 ;;      Totals:         0       1       0       0       0
  4975 ;;Total ram usage:        1 bytes
  4976 ;; Hardware stack levels used:    1
  4977 ;; Hardware stack levels required when called:    5
  4978 ;; This function calls:
  4979 ;;		Nothing
  4980 ;; This function is called by:
  4981 ;;		_WriteDataXLCD
  4982 ;;		_WriteCmdXLCD
  4983 ;;		_SetDDRamAddr
  4984 ;;		_SetCGRamAddr
  4985 ;;		_ReadDataXLCD
  4986 ;;		_ReadAddrXLCD
  4987 ;; This function uses a non-reentrant model
  4988 ;;
  4989                           
  4990                           
  4991                           ;psect for function _DelayFor18TCY
  4992  0A75                     _DelayFor18TCY:	
  4993                           
  4994                           ;lcd_pic16.c: 24:    _delay((unsigned long)((18)*(4000000/4000000.0)));
  4995                           
  4996                           ;incstack = 0
  4997 ;; hardware stack exceeded
  4998                           ; Regs used in _DelayFor18TCY: [wreg]
  4999  0A75  3005               	movlw	5
  5000  0A76  1283               	bcf	3,5	;RP0=0, select bank0
  5001  0A77  1303               	bcf	3,6	;RP1=0, select bank0
  5002  0A78  00BD               	movwf	??_DelayFor18TCY
  5003  0A79                     u3327:	
  5004  0A79  0BBD               	decfsz	??_DelayFor18TCY,f
  5005  0A7A  2A79               	goto	u3327
  5006  0A7B  0008               	return
  5007  0A7C                     __end_of_DelayFor18TCY:	
  5008                           
  5009                           	psect	text25
  5010  0A9E                     __ptext25:	
  5011 ;; *************** function _DelayPORXLCD *****************
  5012 ;; Defined at:
  5013 ;;		line 27 in file "lcd_pic16.c"
  5014 ;; Parameters:    Size  Location     Type
  5015 ;;		None
  5016 ;; Auto vars:     Size  Location     Type
  5017 ;;		None
  5018 ;; Return value:  Size  Location     Type
  5019 ;;                  1    wreg      void 
  5020 ;; Registers used:
  5021 ;;		wreg
  5022 ;; Tracked objects:
  5023 ;;		On entry : 0/0
  5024 ;;		On exit  : 0/0
  5025 ;;		Unchanged: 0/0
  5026 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5027 ;;      Params:         0       0       0       0       0
  5028 ;;      Locals:         0       0       0       0       0
  5029 ;;      Temps:          0       2       0       0       0
  5030 ;;      Totals:         0       2       0       0       0
  5031 ;;Total ram usage:        2 bytes
  5032 ;; Hardware stack levels used:    1
  5033 ;; Hardware stack levels required when called:    5
  5034 ;; This function calls:
  5035 ;;		Nothing
  5036 ;; This function is called by:
  5037 ;;		_OpenXLCD
  5038 ;; This function uses a non-reentrant model
  5039 ;;
  5040                           
  5041                           
  5042                           ;psect for function _DelayPORXLCD
  5043  0A9E                     _DelayPORXLCD:	
  5044                           
  5045                           ;lcd_pic16.c: 29:    _delay((unsigned long)((20)*(4000000/4000.0)));
  5046                           
  5047                           ;incstack = 0
  5048 ;; hardware stack exceeded
  5049                           ; Regs used in _DelayPORXLCD: [wreg]
  5050  0A9E  301A               	movlw	26
  5051  0A9F  1283               	bcf	3,5	;RP0=0, select bank0
  5052  0AA0  1303               	bcf	3,6	;RP1=0, select bank0
  5053  0AA1  00BE               	movwf	??_DelayPORXLCD+1
  5054  0AA2  30F7               	movlw	247
  5055  0AA3  00BD               	movwf	??_DelayPORXLCD
  5056  0AA4                     u3337:	
  5057  0AA4  0BBD               	decfsz	??_DelayPORXLCD,f
  5058  0AA5  2AA4               	goto	u3337
  5059  0AA6  0BBE               	decfsz	??_DelayPORXLCD+1,f
  5060  0AA7  2AA4               	goto	u3337
  5061  0AA8  2AA9               	nop2
  5062  0AA9  0008               	return
  5063  0AAA                     __end_of_DelayPORXLCD:	
  5064                           
  5065                           	psect	text26
  5066  0AAA                     __ptext26:	
  5067 ;; *************** function _BusyXLCD *****************
  5068 ;; Defined at:
  5069 ;;		line 451 in file "lcd_pic16.c"
  5070 ;; Parameters:    Size  Location     Type
  5071 ;;		None
  5072 ;; Auto vars:     Size  Location     Type
  5073 ;;		None
  5074 ;; Return value:  Size  Location     Type
  5075 ;;                  1    wreg      unsigned char 
  5076 ;; Registers used:
  5077 ;;		wreg
  5078 ;; Tracked objects:
  5079 ;;		On entry : 0/0
  5080 ;;		On exit  : 0/0
  5081 ;;		Unchanged: 0/0
  5082 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5083 ;;      Params:         0       0       0       0       0
  5084 ;;      Locals:         0       0       0       0       0
  5085 ;;      Temps:          0       2       0       0       0
  5086 ;;      Totals:         0       2       0       0       0
  5087 ;;Total ram usage:        2 bytes
  5088 ;; Hardware stack levels used:    1
  5089 ;; Hardware stack levels required when called:    5
  5090 ;; This function calls:
  5091 ;;		Nothing
  5092 ;; This function is called by:
  5093 ;;		_OpenXLCD
  5094 ;;		_putsXLCD
  5095 ;;		_SendCMDLCD
  5096 ;;		_putrsXLCD
  5097 ;; This function uses a non-reentrant model
  5098 ;;
  5099                           
  5100                           
  5101                           ;psect for function _BusyXLCD
  5102  0AAA                     _BusyXLCD:	
  5103                           
  5104                           ;lcd_pic16.c: 504:         _delay((unsigned long)((5)*(4000000/4000.0)));
  5105                           
  5106                           ;incstack = 0
  5107                           ; Regs used in _BusyXLCD: [wreg]
  5108  0AAA  3007               	movlw	7
  5109  0AAB  1283               	bcf	3,5	;RP0=0, select bank0
  5110  0AAC  1303               	bcf	3,6	;RP1=0, select bank0
  5111  0AAD  00BE               	movwf	??_BusyXLCD+1
  5112  0AAE  307C               	movlw	124
  5113  0AAF  00BD               	movwf	??_BusyXLCD
  5114  0AB0                     u3347:	
  5115  0AB0  0BBD               	decfsz	??_BusyXLCD,f
  5116  0AB1  2AB0               	goto	u3347
  5117  0AB2  0BBE               	decfsz	??_BusyXLCD+1,f
  5118  0AB3  2AB0               	goto	u3347
  5119  0AB4  0000               	nop
  5120                           
  5121                           ;lcd_pic16.c: 505:         return 0;
  5122  0AB5  3000               	movlw	0
  5123  0AB6  0008               	return
  5124  0AB7                     __end_of_BusyXLCD:	
  5125                           
  5126                           	psect	text27
  5127  0BE7                     __ptext27:	
  5128 ;; *************** function _inter *****************
  5129 ;; Defined at:
  5130 ;;		line 73 in file "main.c"
  5131 ;; Parameters:    Size  Location     Type
  5132 ;;		None
  5133 ;; Auto vars:     Size  Location     Type
  5134 ;;		None
  5135 ;; Return value:  Size  Location     Type
  5136 ;;                  1    wreg      void 
  5137 ;; Registers used:
  5138 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5139 ;; Tracked objects:
  5140 ;;		On entry : 0/0
  5141 ;;		On exit  : 0/0
  5142 ;;		Unchanged: 0/0
  5143 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5144 ;;      Params:         0       0       0       0       0
  5145 ;;      Locals:         0       0       0       0       0
  5146 ;;      Temps:          0       5       0       0       0
  5147 ;;      Totals:         0       5       0       0       0
  5148 ;;Total ram usage:        5 bytes
  5149 ;; Hardware stack levels used:    1
  5150 ;; Hardware stack levels required when called:    4
  5151 ;; This function calls:
  5152 ;;		_time
  5153 ;;		i1_updateLCD
  5154 ;; This function is called by:
  5155 ;;		Interrupt level 1
  5156 ;; This function uses a non-reentrant model
  5157 ;;
  5158                           
  5159                           
  5160                           ;psect for function _inter
  5161  0BE7                     _inter:	
  5162                           
  5163                           ;main.c: 75:     INTCONbits.GIE = 0;
  5164  0BE7  138B               	bcf	11,7	;volatile
  5165                           
  5166                           ;main.c: 77:     if(PIR1bits.TMR1IF == 1){
  5167  0BE8  1C0C               	btfss	12,0	;volatile
  5168  0BE9  2C06               	goto	i1l3134
  5169                           
  5170                           ;main.c: 78:         TMR1H = prTmr1H;
  5171  0BEA  0851               	movf	_prTmr1H,w
  5172  0BEB  008F               	movwf	15	;volatile
  5173                           
  5174                           ;main.c: 79:         TMR1L = prTmr1L;
  5175  0BEC  0852               	movf	_prTmr1L,w
  5176  0BED  008E               	movwf	14	;volatile
  5177                           
  5178                           ;main.c: 80:         cntTmr1++;
  5179  0BEE  3001               	movlw	1
  5180  0BEF  00B8               	movwf	??_inter
  5181  0BF0  0838               	movf	??_inter,w
  5182  0BF1  07CB               	addwf	_cntTmr1,f
  5183                           
  5184                           ;main.c: 81:         time();
  5185  0BF2  120A  158A  24E5  120A  158A  	fcall	_time
  5186                           
  5187                           ;main.c: 82:         if(cntTmr1 == 10){
  5188  0BF7  300A               	movlw	10
  5189  0BF8  1283               	bcf	3,5	;RP0=0, select bank0
  5190  0BF9  1303               	bcf	3,6	;RP1=0, select bank0
  5191  0BFA  064B               	xorwf	_cntTmr1,w
  5192  0BFB  1D03               	btfss	3,2
  5193  0BFC  2C03               	goto	i1l3132
  5194                           
  5195                           ;main.c: 83:             cntTmr1 = 0;
  5196  0BFD  01CB               	clrf	_cntTmr1
  5197                           
  5198                           ;main.c: 85:             updateLCD();
  5199  0BFE  120A  158A  26F7  120A  158A  	fcall	i1_updateLCD
  5200  0C03                     i1l3132:	
  5201                           
  5202                           ;main.c: 87:         PIR1bits.TMR1IF = 0;
  5203  0C03  1283               	bcf	3,5	;RP0=0, select bank0
  5204  0C04  1303               	bcf	3,6	;RP1=0, select bank0
  5205  0C05  100C               	bcf	12,0	;volatile
  5206  0C06                     i1l3134:	
  5207                           
  5208                           ;main.c: 89:     INTCONbits.GIE = 1;
  5209  0C06  178B               	bsf	11,7	;volatile
  5210  0C07  083C               	movf	??_inter+4,w
  5211  0C08  00FF               	movwf	127
  5212  0C09  083B               	movf	??_inter+3,w
  5213  0C0A  008A               	movwf	10
  5214  0C0B  083A               	movf	??_inter+2,w
  5215  0C0C  0084               	movwf	4
  5216  0C0D  0E39               	swapf	(??_inter+1)^0,w
  5217  0C0E  0083               	movwf	3
  5218  0C0F  0EFE               	swapf	126,f
  5219  0C10  0E7E               	swapf	126,w
  5220  0C11  0009               	retfie
  5221  0C12                     __end_of_inter:	
  5222                           
  5223                           	psect	intentry
  5224  0004                     __pintentry:	
  5225                           ;incstack = 0
  5226 ;; hardware stack exceeded
  5227                           ; Regs used in _inter: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5228                           
  5229  0004                     interrupt_function:	
  5230  007E                     saved_w	set	btemp
  5231  0004  00FE               	movwf	btemp
  5232  0005  0E03               	swapf	3,w
  5233  0006  1283               	bcf	3,5	;RP0=0, select bank0
  5234  0007  1303               	bcf	3,6	;RP1=0, select bank0
  5235  0008  00B9               	movwf	??_inter+1
  5236  0009  0804               	movf	4,w
  5237  000A  00BA               	movwf	??_inter+2
  5238  000B  080A               	movf	10,w
  5239  000C  00BB               	movwf	??_inter+3
  5240  000D  087F               	movf	btemp+1,w
  5241  000E  00BC               	movwf	??_inter+4
  5242  000F  120A  158A  2BE7   	ljmp	_inter
  5243                           
  5244                           	psect	text28
  5245  0EF7                     __ptext28:	
  5246 ;; *************** function i1_updateLCD *****************
  5247 ;; Defined at:
  5248 ;;		line 14 in file "lcd.c"
  5249 ;; Parameters:    Size  Location     Type
  5250 ;;		None
  5251 ;; Auto vars:     Size  Location     Type
  5252 ;;  updateLCD       1   23[BANK0 ] unsigned char 
  5253 ;;  updateLCD       1   22[BANK0 ] unsigned char 
  5254 ;; Return value:  Size  Location     Type
  5255 ;;                  1    wreg      void 
  5256 ;; Registers used:
  5257 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5258 ;; Tracked objects:
  5259 ;;		On entry : 0/0
  5260 ;;		On exit  : 0/0
  5261 ;;		Unchanged: 0/0
  5262 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5263 ;;      Params:         0       0       0       0       0
  5264 ;;      Locals:         0       2       0       0       0
  5265 ;;      Temps:          0       5       0       0       0
  5266 ;;      Totals:         0       7       0       0       0
  5267 ;;Total ram usage:        7 bytes
  5268 ;; Hardware stack levels used:    1
  5269 ;; Hardware stack levels required when called:    3
  5270 ;; This function calls:
  5271 ;;		i1_SetDDRamAddr
  5272 ;;		i1___lwdiv
  5273 ;;		i1___lwmod
  5274 ;;		i1_putsXLCD
  5275 ;;		i1_sprintf
  5276 ;; This function is called by:
  5277 ;;		_inter
  5278 ;; This function uses a non-reentrant model
  5279 ;;
  5280                           
  5281                           
  5282                           ;psect for function i1_updateLCD
  5283  0EF7                     i1_updateLCD:	
  5284                           
  5285                           ;lcd.c: 16:         unsigned char decim = frequency % 10;
  5286                           
  5287                           ;incstack = 0
  5288 ;; hardware stack exceeded
  5289                           ; Regs used in i1_updateLCD: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5290  0EF7  300A               	movlw	10
  5291  0EF8  00F8               	movwf	i1___lwmod@divisor
  5292  0EF9  3000               	movlw	0
  5293  0EFA  00F9               	movwf	i1___lwmod@divisor+1
  5294  0EFB  1283               	bcf	3,5	;RP0=0, select bank0
  5295  0EFC  1303               	bcf	3,6	;RP1=0, select bank0
  5296  0EFD  0845               	movf	_frequency+1,w
  5297  0EFE  00FB               	movwf	i1___lwmod@dividend+1
  5298  0EFF  0844               	movf	_frequency,w
  5299  0F00  00FA               	movwf	i1___lwmod@dividend
  5300  0F01  120A  158A  243D  120A  158A  	fcall	i1___lwmod
  5301  0F06  0878               	movf	?i1___lwmod,w
  5302  0F07  1283               	bcf	3,5	;RP0=0, select bank0
  5303  0F08  1303               	bcf	3,6	;RP1=0, select bank0
  5304  0F09  00B1               	movwf	??i1_updateLCD
  5305  0F0A  0831               	movf	??i1_updateLCD,w
  5306  0F0B  00B6               	movwf	i1updateLCD@decim
  5307                           
  5308                           ;lcd.c: 17:         unsigned char integ = frequency / 10;
  5309  0F0C  300A               	movlw	10
  5310  0F0D  00F0               	movwf	i1___lwdiv@divisor
  5311  0F0E  3000               	movlw	0
  5312  0F0F  00F1               	movwf	i1___lwdiv@divisor+1
  5313  0F10  0845               	movf	_frequency+1,w
  5314  0F11  00F3               	movwf	i1___lwdiv@dividend+1
  5315  0F12  0844               	movf	_frequency,w
  5316  0F13  00F2               	movwf	i1___lwdiv@dividend
  5317  0F14  120A  118A  27C4  120A  158A  	fcall	i1___lwdiv
  5318  0F19  0870               	movf	?i1___lwdiv,w
  5319  0F1A  1283               	bcf	3,5	;RP0=0, select bank0
  5320  0F1B  1303               	bcf	3,6	;RP1=0, select bank0
  5321  0F1C  00B1               	movwf	??i1_updateLCD
  5322  0F1D  0831               	movf	??i1_updateLCD,w
  5323  0F1E  00B7               	movwf	i1updateLCD@integ
  5324                           
  5325                           ;lcd.c: 18:         sprintf(lineTwo,"FREQ.  %3d.%d MHz",integ, decim);
  5326  0F1F  300F               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  5327  0F20  00B1               	movwf	??i1_updateLCD
  5328  0F21  0831               	movf	??i1_updateLCD,w
  5329  0F22  00A0               	movwf	i1sprintf@f
  5330  0F23  0837               	movf	i1updateLCD@integ,w
  5331  0F24  00B2               	movwf	??i1_updateLCD+1
  5332  0F25  01B3               	clrf	??i1_updateLCD+2
  5333  0F26  0832               	movf	??i1_updateLCD+1,w
  5334  0F27  00A1               	movwf	?i1_sprintf+1
  5335  0F28  0833               	movf	??i1_updateLCD+2,w
  5336  0F29  00A2               	movwf	?i1_sprintf+2
  5337  0F2A  0836               	movf	i1updateLCD@decim,w
  5338  0F2B  00B4               	movwf	??i1_updateLCD+3
  5339  0F2C  01B5               	clrf	??i1_updateLCD+4
  5340  0F2D  0834               	movf	??i1_updateLCD+3,w
  5341  0F2E  00A3               	movwf	?i1_sprintf+3
  5342  0F2F  0835               	movf	??i1_updateLCD+4,w
  5343  0F30  00A4               	movwf	?i1_sprintf+4
  5344  0F31  30A0               	movlw	(low (_lineTwo| 0))& (0+255)
  5345  0F32  120A  118A  21BD  120A  158A  	fcall	i1_sprintf
  5346                           
  5347                           ;lcd.c: 19:         SetDDRamAddr(0x40);
  5348  0F37  3040               	movlw	64
  5349  0F38  120A  158A  25C3  120A  158A  	fcall	i1_SetDDRamAddr
  5350                           
  5351                           ;lcd.c: 20:         putsXLCD(lineTwo);
  5352  0F3D  30A0               	movlw	(low (_lineTwo| 0))& (0+255)
  5353  0F3E  120A  158A  231E  120A  158A  	fcall	i1_putsXLCD
  5354                           
  5355                           ;lcd.c: 22:     SetDDRamAddr(0x00);
  5356  0F43  3000               	movlw	0
  5357  0F44  120A  158A  25C3  120A  158A  	fcall	i1_SetDDRamAddr
  5358                           
  5359                           ;lcd.c: 23:     putsXLCD(lineOne);
  5360  0F49  30B1               	movlw	(low (_lineOne| 0))& (0+255)
  5361  0F4A  120A  158A  231E   	fcall	i1_putsXLCD
  5362  0F4D  0008               	return
  5363  0F4E                     __end_ofi1_updateLCD:	
  5364                           
  5365                           	psect	text29
  5366  01BD                     __ptext29:	
  5367 ;; *************** function i1_sprintf *****************
  5368 ;; Defined at:
  5369 ;;		line 500 in file "/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt.c"
  5370 ;; Parameters:    Size  Location     Type
  5371 ;;  sp              1    wreg     PTR unsigned char 
  5372 ;;		 -> lineTwo(17), lineOne(17), 
  5373 ;;  f               1    0[BANK0 ] PTR const unsigned char 
  5374 ;;		 -> STR_5(18), STR_4(17), STR_3(17), STR_2(17), 
  5375 ;;		 -> STR_1(17), 
  5376 ;; Auto vars:     Size  Location     Type
  5377 ;;  sp              1   13[BANK0 ] PTR unsigned char 
  5378 ;;		 -> lineTwo(17), lineOne(17), 
  5379 ;;  sprintf         4    0        struct .
  5380 ;;  sprintf         2   14[BANK0 ] int 
  5381 ;;  sprintf         2   11[BANK0 ] unsigned int 
  5382 ;;  sprintf         2    0        PTR const unsigned char 
  5383 ;;  sprintf         2    0        unsigned int 
  5384 ;;  sprintf         1   16[BANK0 ] unsigned char 
  5385 ;;  sprintf         1   10[BANK0 ] unsigned char 
  5386 ;;  sprintf         1    9[BANK0 ] char 
  5387 ;;  sprintf         1    8[BANK0 ] PTR void [1]
  5388 ;;		 -> ?i1_sprintf(2), ?_sprintf(2), 
  5389 ;; Return value:  Size  Location     Type
  5390 ;;                  2    0[BANK0 ] int 
  5391 ;; Registers used:
  5392 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5393 ;; Tracked objects:
  5394 ;;		On entry : 0/0
  5395 ;;		On exit  : 0/0
  5396 ;;		Unchanged: 0/0
  5397 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5398 ;;      Params:         0       5       0       0       0
  5399 ;;      Locals:         0       9       0       0       0
  5400 ;;      Temps:          0       3       0       0       0
  5401 ;;      Totals:         0      17       0       0       0
  5402 ;;Total ram usage:       17 bytes
  5403 ;; Hardware stack levels used:    1
  5404 ;; Hardware stack levels required when called:    1
  5405 ;; This function calls:
  5406 ;;		i1___lwdiv
  5407 ;;		i1___lwmod
  5408 ;;		i1___wmul
  5409 ;;		i1_isdigit
  5410 ;; This function is called by:
  5411 ;;		i1_updateLCD
  5412 ;; This function uses a non-reentrant model
  5413 ;;
  5414                           
  5415                           
  5416                           ;psect for function i1_sprintf
  5417  01BD                     i1_sprintf:	
  5418                           
  5419                           ;incstack = 0
  5420 ;; hardware stack exceeded
  5421                           ; Regs used in i1_sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5422                           ;i1sprintf@sp stored from wreg
  5423  01BD  1283               	bcf	3,5	;RP0=0, select bank0
  5424  01BE  1303               	bcf	3,6	;RP1=0, select bank0
  5425  01BF  00AD               	movwf	i1sprintf@sp
  5426                           
  5427                           ;/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt.c: 500: sprintf(char * sp, const
      +                           char * f, ...);/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt.c: 501: {;/opt/mi
      +                          crochip/xc8/v2.05/pic/sources/c90/common/doprnt.c: 502:  va_list ap;;/opt/microchip/xc8/
      +                          v2.05/pic/sources/c90/common/doprnt.c: 507:  char c;;/opt/microchip/xc8/v2.05/pic/source
      +                          s/c90/common/doprnt.c: 509:  int width;;/opt/microchip/xc8/v2.05/pic/sources/c90/common/
      +                          doprnt.c: 516:  signed char prec;;/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt
      +                          .c: 520:  unsigned char flag;
  5428  01C0  3021               	movlw	(low ((?i1_sprintf| 0+1)))& (0+255)
  5429  01C1  00A5               	movwf	??i1_sprintf
  5430  01C2  0825               	movf	??i1_sprintf,w
  5431  01C3  00A8               	movwf	i1sprintf@ap
  5432  01C4                     i1l2884:	
  5433                           ;/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt.c: 548:  while((c = *f++)) {
  5434                           
  5435                           
  5436                           ;/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt.c: 548:  while((c = *f++)) {
  5437  01C4  3001               	movlw	1
  5438  01C5  07A0               	addwf	i1sprintf@f,f
  5439  01C6  30FF               	movlw	-1
  5440  01C7  0720               	addwf	i1sprintf@f,w
  5441  01C8  0084               	movwf	4
  5442  01C9  120A  118A  263D  120A  118A  	fcall	stringdir
  5443  01CE  00A5               	movwf	??i1_sprintf
  5444  01CF  0825               	movf	??i1_sprintf,w
  5445  01D0  00B0               	movwf	i1sprintf@c
  5446  01D1  0830               	movf	i1sprintf@c,w
  5447  01D2  1903               	btfsc	3,2
  5448  01D3  2B20               	goto	i1l2886
  5449                           
  5450                           ;/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt.c: 550:   if(c != '%')
  5451  01D4  3025               	movlw	37
  5452  01D5  0630               	xorwf	i1sprintf@c,w
  5453  01D6  1903               	btfsc	3,2
  5454  01D7  29E4               	goto	i1l2810
  5455                           
  5456                           ;/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt.c: 552:   {;/opt/microchip/xc8/v
      +                          2.05/pic/sources/c90/common/doprnt.c: 553:    ((*sp++ = (c)));
  5457  01D8  0830               	movf	i1sprintf@c,w
  5458  01D9  00A5               	movwf	??i1_sprintf
  5459  01DA  082D               	movf	i1sprintf@sp,w
  5460  01DB  0084               	movwf	4
  5461  01DC  0825               	movf	??i1_sprintf,w
  5462  01DD  1383               	bcf	3,7	;select IRP bank0
  5463  01DE  0080               	movwf	0
  5464  01DF  3001               	movlw	1
  5465  01E0  00A5               	movwf	??i1_sprintf
  5466  01E1  0825               	movf	??i1_sprintf,w
  5467  01E2  07AD               	addwf	i1sprintf@sp,f
  5468                           
  5469                           ;/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt.c: 554:    continue;
  5470  01E3  29C4               	goto	i1l2884
  5471  01E4                     i1l2810:	
  5472                           
  5473                           ;/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt.c: 558:   width = 0;
  5474  01E4  01AE               	clrf	i1sprintf@width
  5475  01E5  01AF               	clrf	i1sprintf@width+1
  5476                           
  5477                           ;/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt.c: 560:   flag = 0;
  5478  01E6  01AA               	clrf	i1sprintf@flag
  5479                           
  5480                           ;/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt.c: 609:   if(isdigit((unsigned)*
      +                          f)) {
  5481  01E7  0820               	movf	i1sprintf@f,w
  5482  01E8  0084               	movwf	4
  5483  01E9  120A  118A  263D  120A  118A  	fcall	stringdir
  5484  01EE  120A  158A  22B7  120A  118A  	fcall	i1_isdigit
  5485  01F3  1C03               	btfss	3,0
  5486  01F4  2A33               	goto	i1l2826
  5487                           
  5488                           ;/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt.c: 610:    width = 0;
  5489  01F5  1283               	bcf	3,5	;RP0=0, select bank0
  5490  01F6  1303               	bcf	3,6	;RP1=0, select bank0
  5491  01F7  01AE               	clrf	i1sprintf@width
  5492  01F8  01AF               	clrf	i1sprintf@width+1
  5493  01F9                     i1l2816:	
  5494                           
  5495                           ;/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt.c: 612:     width *= 10;
  5496  01F9  300A               	movlw	10
  5497  01FA  00F0               	movwf	i1___wmul@multiplier
  5498  01FB  3000               	movlw	0
  5499  01FC  00F1               	movwf	i1___wmul@multiplier+1
  5500  01FD  1283               	bcf	3,5	;RP0=0, select bank0
  5501  01FE  1303               	bcf	3,6	;RP1=0, select bank0
  5502  01FF  082F               	movf	i1sprintf@width+1,w
  5503  0200  00F3               	movwf	i1___wmul@multiplicand+1
  5504  0201  082E               	movf	i1sprintf@width,w
  5505  0202  00F2               	movwf	i1___wmul@multiplicand
  5506  0203  120A  158A  2358  120A  118A  	fcall	i1___wmul
  5507  0208  0871               	movf	?i1___wmul+1,w
  5508  0209  1283               	bcf	3,5	;RP0=0, select bank0
  5509  020A  1303               	bcf	3,6	;RP1=0, select bank0
  5510  020B  00AF               	movwf	i1sprintf@width+1
  5511  020C  0870               	movf	?i1___wmul,w
  5512  020D  00AE               	movwf	i1sprintf@width
  5513                           
  5514                           ;/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt.c: 613:        width += *f++ - '
      +                          0';
  5515  020E  0820               	movf	i1sprintf@f,w
  5516  020F  0084               	movwf	4
  5517  0210  120A  118A  263D  120A  118A  	fcall	stringdir
  5518  0215  3ED0               	addlw	208
  5519  0216  00A5               	movwf	??i1_sprintf
  5520  0217  30FF               	movlw	255
  5521  0218  1803               	skipnc
  5522  0219  3000               	movlw	0
  5523  021A  00A6               	movwf	??i1_sprintf+1
  5524  021B  0825               	movf	??i1_sprintf,w
  5525  021C  07AE               	addwf	i1sprintf@width,f
  5526  021D  1803               	skipnc
  5527  021E  0AAF               	incf	i1sprintf@width+1,f
  5528  021F  0826               	movf	??i1_sprintf+1,w
  5529  0220  07AF               	addwf	i1sprintf@width+1,f
  5530  0221  3001               	movlw	1
  5531  0222  00A5               	movwf	??i1_sprintf
  5532  0223  0825               	movf	??i1_sprintf,w
  5533  0224  07A0               	addwf	i1sprintf@f,f
  5534                           
  5535                           ;/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt.c: 614:    } while(isdigit((unsi
      +                          gned)*f));
  5536  0225  0820               	movf	i1sprintf@f,w
  5537  0226  0084               	movwf	4
  5538  0227  120A  118A  263D  120A  118A  	fcall	stringdir
  5539  022C  120A  158A  22B7  120A  118A  	fcall	i1_isdigit
  5540  0231  1803               	btfsc	3,0
  5541  0232  29F9               	goto	i1l2816
  5542  0233                     i1l2826:	
  5543  0233  3001               	movlw	1
  5544  0234  1283               	bcf	3,5	;RP0=0, select bank0
  5545  0235  1303               	bcf	3,6	;RP1=0, select bank0
  5546  0236  07A0               	addwf	i1sprintf@f,f
  5547  0237  30FF               	movlw	-1
  5548  0238  0720               	addwf	i1sprintf@f,w
  5549  0239  0084               	movwf	4
  5550  023A  120A  118A  263D  120A  118A  	fcall	stringdir
  5551  023F  00B0               	movwf	i1sprintf@c
  5552  0240  00A5               	movwf	??i1_sprintf
  5553  0241  01A6               	clrf	??i1_sprintf+1
  5554                           
  5555                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5556                           ; Switch size 1, requested type "simple"
  5557                           ; Number of cases is 1, Range of values is 0 to 0
  5558                           ; switch strategies available:
  5559                           ; Name         Instructions Cycles
  5560                           ; simple_byte            4     3 (average)
  5561                           ; direct_byte           11     8 (fixed)
  5562                           ; jumptable            260     6 (fixed)
  5563                           ;	Chosen strategy is simple_byte
  5564  0242  0826               	movf	??i1_sprintf+1,w
  5565  0243  3A00               	xorlw	0	; case 0
  5566  0244  1903               	skipnz
  5567  0245  2A47               	goto	i1l3672
  5568  0246  29C4               	goto	i1l2884
  5569  0247                     i1l3672:	
  5570                           
  5571                           ; Switch size 1, requested type "simple"
  5572                           ; Number of cases is 3, Range of values is 0 to 105
  5573                           ; switch strategies available:
  5574                           ; Name         Instructions Cycles
  5575                           ; simple_byte           10     6 (average)
  5576                           ; jumptable            260     6 (fixed)
  5577                           ;	Chosen strategy is simple_byte
  5578  0247  0825               	movf	??i1_sprintf,w
  5579  0248  3A00               	xorlw	0	; case 0
  5580  0249  1903               	skipnz
  5581  024A  2B20               	goto	i1l2886
  5582  024B  3A64               	xorlw	100	; case 100
  5583  024C  1903               	skipnz
  5584  024D  2A52               	goto	i1l2828
  5585  024E  3A0D               	xorlw	13	; case 105
  5586  024F  1903               	skipnz
  5587  0250  2A52               	goto	i1l2828
  5588  0251  29C4               	goto	i1l2884
  5589  0252                     i1l2828:	
  5590                           
  5591                           ;/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt.c: 1272:   {;/opt/microchip/xc8/
      +                          v2.05/pic/sources/c90/common/doprnt.c: 1278:     val = (int)(*(int *)__va_arg((*(int **)
      +                          ap), (int)0));
  5592  0252  0828               	movf	i1sprintf@ap,w
  5593  0253  0084               	movwf	4
  5594  0254  1383               	bcf	3,7	;select IRP bank0
  5595  0255  0800               	movf	0,w
  5596  0256  00AB               	movwf	i1sprintf@val
  5597  0257  0A84               	incf	4,f
  5598  0258  0800               	movf	0,w
  5599  0259  00AC               	movwf	i1sprintf@val+1
  5600  025A  3002               	movlw	2
  5601  025B  00A5               	movwf	??i1_sprintf
  5602  025C  0825               	movf	??i1_sprintf,w
  5603  025D  07A8               	addwf	i1sprintf@ap,f
  5604                           
  5605                           ;/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt.c: 1280:    if((int)val < 0) {
  5606  025E  1FAC               	btfss	i1sprintf@val+1,7
  5607  025F  2A69               	goto	i1l2838
  5608                           
  5609                           ;/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt.c: 1281:     flag |= 0x03;
  5610  0260  3003               	movlw	3
  5611  0261  00A5               	movwf	??i1_sprintf
  5612  0262  0825               	movf	??i1_sprintf,w
  5613  0263  04AA               	iorwf	i1sprintf@flag,f
  5614                           
  5615                           ;/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt.c: 1282:     val = -val;
  5616  0264  09AB               	comf	i1sprintf@val,f
  5617  0265  09AC               	comf	i1sprintf@val+1,f
  5618  0266  0AAB               	incf	i1sprintf@val,f
  5619  0267  1903               	skipnz
  5620  0268  0AAC               	incf	i1sprintf@val+1,f
  5621  0269                     i1l2838:	
  5622                           
  5623                           ;/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt.c: 1285:   };/opt/microchip/xc8/
      +                          v2.05/pic/sources/c90/common/doprnt.c: 1324:    for(c = 1 ; c != sizeof dpowers/sizeof d
      +                          powers[0] ; c++)
  5624  0269  01B0               	clrf	i1sprintf@c
  5625  026A  0AB0               	incf	i1sprintf@c,f
  5626  026B                     i1l2844:	
  5627                           
  5628                           ;/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt.c: 1325:     if(val < dpowers[c]
      +                          )
  5629  026B  0830               	movf	i1sprintf@c,w
  5630  026C  00A5               	movwf	??i1_sprintf
  5631  026D  0725               	addwf	??i1_sprintf,w
  5632  026E  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  5633  026F  0084               	movwf	4
  5634  0270  120A  118A  263D  120A  118A  	fcall	stringdir
  5635  0275  00A6               	movwf	??i1_sprintf+1
  5636  0276  120A  118A  263D  120A  118A  	fcall	stringdir
  5637  027B  00A7               	movwf	??i1_sprintf+2
  5638  027C  0827               	movf	??i1_sprintf+2,w
  5639  027D  022C               	subwf	i1sprintf@val+1,w
  5640  027E  1D03               	skipz
  5641  027F  2A82               	goto	u216_25
  5642  0280  0826               	movf	??i1_sprintf+1,w
  5643  0281  022B               	subwf	i1sprintf@val,w
  5644  0282                     u216_25:	
  5645  0282  1C03               	btfss	3,0
  5646  0283  2A8C               	goto	i1l2850
  5647  0284  3001               	movlw	1
  5648  0285  00A5               	movwf	??i1_sprintf
  5649  0286  0825               	movf	??i1_sprintf,w
  5650  0287  07B0               	addwf	i1sprintf@c,f
  5651  0288  3005               	movlw	5
  5652  0289  0630               	xorwf	i1sprintf@c,w
  5653  028A  1D03               	btfss	3,2
  5654  028B  2A6B               	goto	i1l2844
  5655  028C                     i1l2850:	
  5656                           
  5657                           ;/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt.c: 1364:   if(width && flag & 0x
      +                          03)
  5658  028C  082E               	movf	i1sprintf@width,w
  5659  028D  042F               	iorwf	i1sprintf@width+1,w
  5660  028E  1903               	btfsc	3,2
  5661  028F  2A9A               	goto	i1l618
  5662  0290  082A               	movf	i1sprintf@flag,w
  5663  0291  3903               	andlw	3
  5664  0292  1903               	btfsc	3,2
  5665  0293  2A9A               	goto	i1l618
  5666                           
  5667                           ;/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt.c: 1365:    width--;
  5668  0294  30FF               	movlw	255
  5669  0295  07AE               	addwf	i1sprintf@width,f
  5670  0296  1803               	skipnc
  5671  0297  0AAF               	incf	i1sprintf@width+1,f
  5672  0298  30FF               	movlw	255
  5673  0299  07AF               	addwf	i1sprintf@width+1,f
  5674  029A                     i1l618:	
  5675                           
  5676                           ;/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt.c: 1400:   if(width > c)
  5677  029A  082F               	movf	i1sprintf@width+1,w
  5678  029B  3A80               	xorlw	128
  5679  029C  3C80               	sublw	128
  5680  029D  1D03               	skipz
  5681  029E  2AA1               	goto	u220_25
  5682  029F  082E               	movf	i1sprintf@width,w
  5683  02A0  0230               	subwf	i1sprintf@c,w
  5684  02A1                     u220_25:	
  5685  02A1  1803               	skipnc
  5686  02A2  2AAF               	goto	i1l2858
  5687                           
  5688                           ;/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt.c: 1401:    width -= c;
  5689  02A3  1283               	bcf	3,5	;RP0=0, select bank0
  5690  02A4  1303               	bcf	3,6	;RP1=0, select bank0
  5691  02A5  0830               	movf	i1sprintf@c,w
  5692  02A6  00A5               	movwf	??i1_sprintf
  5693  02A7  01A6               	clrf	??i1_sprintf+1
  5694  02A8  0825               	movf	??i1_sprintf,w
  5695  02A9  02AE               	subwf	i1sprintf@width,f
  5696  02AA  0826               	movf	??i1_sprintf+1,w
  5697  02AB  1C03               	skipc
  5698  02AC  03AF               	decf	i1sprintf@width+1,f
  5699  02AD  02AF               	subwf	i1sprintf@width+1,f
  5700  02AE  2AB3               	goto	i1l2860
  5701  02AF                     i1l2858:	
  5702                           
  5703                           ;/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt.c: 1403:    width = 0;
  5704  02AF  1283               	bcf	3,5	;RP0=0, select bank0
  5705  02B0  1303               	bcf	3,6	;RP1=0, select bank0
  5706  02B1  01AE               	clrf	i1sprintf@width
  5707  02B2  01AF               	clrf	i1sprintf@width+1
  5708  02B3                     i1l2860:	
  5709                           
  5710                           ;/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt.c: 1441:   {;/opt/microchip/xc8/
      +                          v2.05/pic/sources/c90/common/doprnt.c: 1443:    if(width
  5711  02B3  082E               	movf	i1sprintf@width,w
  5712  02B4  042F               	iorwf	i1sprintf@width+1,w
  5713  02B5  1903               	btfsc	3,2
  5714  02B6  2ACC               	goto	i1l2868
  5715  02B7                     i1l2862:	
  5716                           
  5717                           ;/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt.c: 1449:      ((*sp++ = (' ')));
  5718  02B7  3020               	movlw	32
  5719  02B8  00A5               	movwf	??i1_sprintf
  5720  02B9  082D               	movf	i1sprintf@sp,w
  5721  02BA  0084               	movwf	4
  5722  02BB  0825               	movf	??i1_sprintf,w
  5723  02BC  1383               	bcf	3,7	;select IRP bank0
  5724  02BD  0080               	movwf	0
  5725  02BE  3001               	movlw	1
  5726  02BF  00A5               	movwf	??i1_sprintf
  5727  02C0  0825               	movf	??i1_sprintf,w
  5728  02C1  07AD               	addwf	i1sprintf@sp,f
  5729  02C2  30FF               	movlw	255
  5730  02C3  07AE               	addwf	i1sprintf@width,f
  5731  02C4  1803               	skipnc
  5732  02C5  0AAF               	incf	i1sprintf@width+1,f
  5733  02C6  30FF               	movlw	255
  5734  02C7  07AF               	addwf	i1sprintf@width+1,f
  5735  02C8  082E               	movf	i1sprintf@width,w
  5736  02C9  042F               	iorwf	i1sprintf@width+1,w
  5737  02CA  1D03               	btfss	3,2
  5738  02CB  2AB7               	goto	i1l2862
  5739  02CC                     i1l2868:	
  5740                           
  5741                           ;/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt.c: 1457:    if(flag & 0x03)
  5742  02CC  082A               	movf	i1sprintf@flag,w
  5743  02CD  3903               	andlw	3
  5744  02CE  1903               	btfsc	3,2
  5745  02CF  2ADB               	goto	i1l2874
  5746                           
  5747                           ;/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt.c: 1458:     ((*sp++ = ('-')));
  5748  02D0  302D               	movlw	45
  5749  02D1  00A5               	movwf	??i1_sprintf
  5750  02D2  082D               	movf	i1sprintf@sp,w
  5751  02D3  0084               	movwf	4
  5752  02D4  0825               	movf	??i1_sprintf,w
  5753  02D5  1383               	bcf	3,7	;select IRP bank0
  5754  02D6  0080               	movwf	0
  5755  02D7  3001               	movlw	1
  5756  02D8  00A5               	movwf	??i1_sprintf
  5757  02D9  0825               	movf	??i1_sprintf,w
  5758  02DA  07AD               	addwf	i1sprintf@sp,f
  5759  02DB                     i1l2874:	
  5760                           
  5761                           ;/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt.c: 1488:   };/opt/microchip/xc8/
      +                          v2.05/pic/sources/c90/common/doprnt.c: 1491:   prec = c;
  5762  02DB  0830               	movf	i1sprintf@c,w
  5763  02DC  00A5               	movwf	??i1_sprintf
  5764  02DD  0825               	movf	??i1_sprintf,w
  5765  02DE  00A9               	movwf	i1sprintf@prec
  5766  02DF                     i1l2882:	
  5767                           ;/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt.c: 1493:   while(prec--) {
  5768                           
  5769                           
  5770                           ;/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt.c: 1493:   while(prec--) {
  5771  02DF  30FF               	movlw	255
  5772  02E0  00A5               	movwf	??i1_sprintf
  5773  02E1  0825               	movf	??i1_sprintf,w
  5774  02E2  07A9               	addwf	i1sprintf@prec,f
  5775  02E3  0A29               	incf	i1sprintf@prec,w
  5776  02E4  1903               	btfsc	3,2
  5777  02E5  29C4               	goto	i1l2884
  5778                           
  5779                           ;/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt.c: 1497:    {;/opt/microchip/xc8
      +                          /v2.05/pic/sources/c90/common/doprnt.c: 1508:     c = (val / dpowers[prec]) % 10 + '0';
  5780  02E6  300A               	movlw	10
  5781  02E7  00F8               	movwf	i1___lwmod@divisor
  5782  02E8  3000               	movlw	0
  5783  02E9  00F9               	movwf	i1___lwmod@divisor+1
  5784  02EA  0829               	movf	i1sprintf@prec,w
  5785  02EB  00A5               	movwf	??i1_sprintf
  5786  02EC  0725               	addwf	??i1_sprintf,w
  5787  02ED  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  5788  02EE  0084               	movwf	4
  5789  02EF  120A  118A  263D  120A  118A  	fcall	stringdir
  5790  02F4  00F0               	movwf	i1___lwdiv@divisor
  5791  02F5  120A  118A  263D  120A  118A  	fcall	stringdir
  5792  02FA  00F1               	movwf	i1___lwdiv@divisor+1
  5793  02FB  082C               	movf	i1sprintf@val+1,w
  5794  02FC  00F3               	movwf	i1___lwdiv@dividend+1
  5795  02FD  082B               	movf	i1sprintf@val,w
  5796  02FE  00F2               	movwf	i1___lwdiv@dividend
  5797  02FF  120A  118A  27C4  120A  118A  	fcall	i1___lwdiv
  5798  0304  0871               	movf	?i1___lwdiv+1,w
  5799  0305  00FB               	movwf	i1___lwmod@dividend+1
  5800  0306  0870               	movf	?i1___lwdiv,w
  5801  0307  00FA               	movwf	i1___lwmod@dividend
  5802  0308  120A  158A  243D  120A  118A  	fcall	i1___lwmod
  5803  030D  0878               	movf	?i1___lwmod,w
  5804  030E  3E30               	addlw	48
  5805  030F  1283               	bcf	3,5	;RP0=0, select bank0
  5806  0310  1303               	bcf	3,6	;RP1=0, select bank0
  5807  0311  00A6               	movwf	??i1_sprintf+1
  5808  0312  0826               	movf	??i1_sprintf+1,w
  5809  0313  00B0               	movwf	i1sprintf@c
  5810                           
  5811                           ;/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt.c: 1542:    };/opt/microchip/xc8
      +                          /v2.05/pic/sources/c90/common/doprnt.c: 1543:    ((*sp++ = (c)));
  5812  0314  0830               	movf	i1sprintf@c,w
  5813  0315  00A5               	movwf	??i1_sprintf
  5814  0316  082D               	movf	i1sprintf@sp,w
  5815  0317  0084               	movwf	4
  5816  0318  0825               	movf	??i1_sprintf,w
  5817  0319  1383               	bcf	3,7	;select IRP bank0
  5818  031A  0080               	movwf	0
  5819  031B  3001               	movlw	1
  5820  031C  00A5               	movwf	??i1_sprintf
  5821  031D  0825               	movf	??i1_sprintf,w
  5822  031E  07AD               	addwf	i1sprintf@sp,f
  5823  031F  2ADF               	goto	i1l2882
  5824  0320                     i1l2886:	
  5825                           
  5826                           ;/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt.c: 1557:  *sp = 0;
  5827  0320  082D               	movf	i1sprintf@sp,w
  5828  0321  0084               	movwf	4
  5829  0322  1383               	bcf	3,7	;select IRP bank0
  5830  0323  0180               	clrf	0
  5831  0324  0008               	return
  5832  0325                     __end_ofi1_sprintf:	
  5833                           
  5834                           	psect	text30
  5835  0AB7                     __ptext30:	
  5836 ;; *************** function i1_isdigit *****************
  5837 ;; Defined at:
  5838 ;;		line 8 in file "/opt/microchip/xc8/v2.05/pic/sources/c90/common/isdigit.c"
  5839 ;; Parameters:    Size  Location     Type
  5840 ;;  c               1    wreg     unsigned char 
  5841 ;; Auto vars:     Size  Location     Type
  5842 ;;  c               1    1[COMMON] unsigned char 
  5843 ;; Return value:  Size  Location     Type
  5844 ;;		None               void
  5845 ;; Registers used:
  5846 ;;		wreg, status,2, status,0
  5847 ;; Tracked objects:
  5848 ;;		On entry : 0/0
  5849 ;;		On exit  : 0/0
  5850 ;;		Unchanged: 0/0
  5851 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5852 ;;      Params:         0       0       0       0       0
  5853 ;;      Locals:         2       0       0       0       0
  5854 ;;      Temps:          0       0       0       0       0
  5855 ;;      Totals:         2       0       0       0       0
  5856 ;;Total ram usage:        2 bytes
  5857 ;; Hardware stack levels used:    1
  5858 ;; This function calls:
  5859 ;;		Nothing
  5860 ;; This function is called by:
  5861 ;;		i1_sprintf
  5862 ;; This function uses a non-reentrant model
  5863 ;;
  5864                           
  5865                           
  5866                           ;psect for function i1_isdigit
  5867  0AB7                     i1_isdigit:	
  5868                           
  5869                           ;incstack = 0
  5870 ;; hardware stack exceeded
  5871                           ; Regs used in i1_isdigit: [wreg+status,2+status,0]
  5872                           ;i1isdigit@c stored from wreg
  5873  0AB7  00F1               	movwf	i1isdigit@c
  5874  0AB8  01F0               	clrf	i1_isdigit$1068
  5875  0AB9  303A               	movlw	58
  5876  0ABA  0271               	subwf	i1isdigit@c,w
  5877  0ABB  1803               	skipnc
  5878  0ABC  2AC3               	goto	i1l2590
  5879  0ABD  3030               	movlw	48
  5880  0ABE  0271               	subwf	i1isdigit@c,w
  5881  0ABF  1C03               	skipc
  5882  0AC0  2AC3               	goto	i1l2590
  5883  0AC1  01F0               	clrf	i1_isdigit$1068
  5884  0AC2  0AF0               	incf	i1_isdigit$1068,f
  5885  0AC3                     i1l2590:	
  5886  0AC3  0C70               	rrf	i1_isdigit$1068,w
  5887  0AC4  0008               	return
  5888  0AC5                     __end_ofi1_isdigit:	
  5889                           
  5890                           	psect	text31
  5891  0B58                     __ptext31:	
  5892 ;; *************** function i1___wmul *****************
  5893 ;; Defined at:
  5894 ;;		line 15 in file "/opt/microchip/xc8/v2.05/pic/sources/c90/common/Umul16.c"
  5895 ;; Parameters:    Size  Location     Type
  5896 ;;  multiplier      2    0[COMMON] unsigned int 
  5897 ;;  multiplicand    2    2[COMMON] unsigned int 
  5898 ;; Auto vars:     Size  Location     Type
  5899 ;;  __wmul          2    4[COMMON] unsigned int 
  5900 ;; Return value:  Size  Location     Type
  5901 ;;                  2    0[COMMON] unsigned int 
  5902 ;; Registers used:
  5903 ;;		wreg, status,2, status,0
  5904 ;; Tracked objects:
  5905 ;;		On entry : 0/0
  5906 ;;		On exit  : 0/0
  5907 ;;		Unchanged: 0/0
  5908 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5909 ;;      Params:         4       0       0       0       0
  5910 ;;      Locals:         2       0       0       0       0
  5911 ;;      Temps:          0       0       0       0       0
  5912 ;;      Totals:         6       0       0       0       0
  5913 ;;Total ram usage:        6 bytes
  5914 ;; Hardware stack levels used:    1
  5915 ;; This function calls:
  5916 ;;		Nothing
  5917 ;; This function is called by:
  5918 ;;		i1_sprintf
  5919 ;; This function uses a non-reentrant model
  5920 ;;
  5921                           
  5922                           
  5923                           ;psect for function i1___wmul
  5924  0B58                     i1___wmul:	
  5925                           
  5926                           ;incstack = 0
  5927 ;; hardware stack exceeded
  5928                           ; Regs used in i1___wmul: [wreg+status,2+status,0]
  5929  0B58  01F4               	clrf	i1___wmul@product
  5930  0B59  01F5               	clrf	i1___wmul@product+1
  5931  0B5A                     i1l2522:	
  5932  0B5A  1C70               	btfss	i1___wmul@multiplier,0
  5933  0B5B  2B62               	goto	i1l633
  5934  0B5C  0872               	movf	i1___wmul@multiplicand,w
  5935  0B5D  07F4               	addwf	i1___wmul@product,f
  5936  0B5E  1803               	skipnc
  5937  0B5F  0AF5               	incf	i1___wmul@product+1,f
  5938  0B60  0873               	movf	i1___wmul@multiplicand+1,w
  5939  0B61  07F5               	addwf	i1___wmul@product+1,f
  5940  0B62                     i1l633:	
  5941  0B62  3001               	movlw	1
  5942  0B63                     u169_25:	
  5943  0B63  1003               	clrc
  5944  0B64  0DF2               	rlf	i1___wmul@multiplicand,f
  5945  0B65  0DF3               	rlf	i1___wmul@multiplicand+1,f
  5946  0B66  3EFF               	addlw	-1
  5947  0B67  1D03               	skipz
  5948  0B68  2B63               	goto	u169_25
  5949  0B69  3001               	movlw	1
  5950  0B6A                     u170_25:	
  5951  0B6A  1003               	clrc
  5952  0B6B  0CF1               	rrf	i1___wmul@multiplier+1,f
  5953  0B6C  0CF0               	rrf	i1___wmul@multiplier,f
  5954  0B6D  3EFF               	addlw	-1
  5955  0B6E  1D03               	skipz
  5956  0B6F  2B6A               	goto	u170_25
  5957  0B70  0870               	movf	i1___wmul@multiplier,w
  5958  0B71  0471               	iorwf	i1___wmul@multiplier+1,w
  5959  0B72  1D03               	btfss	3,2
  5960  0B73  2B5A               	goto	i1l2522
  5961  0B74  0875               	movf	i1___wmul@product+1,w
  5962  0B75  00F1               	movwf	?i1___wmul+1
  5963  0B76  0874               	movf	i1___wmul@product,w
  5964  0B77  00F0               	movwf	?i1___wmul
  5965  0B78  0008               	return
  5966  0B79                     __end_ofi1___wmul:	
  5967                           
  5968                           	psect	text32
  5969  0C3D                     __ptext32:	
  5970 ;; *************** function i1___lwmod *****************
  5971 ;; Defined at:
  5972 ;;		line 5 in file "/opt/microchip/xc8/v2.05/pic/sources/c90/common/lwmod.c"
  5973 ;; Parameters:    Size  Location     Type
  5974 ;;  divisor         2    8[COMMON] unsigned int 
  5975 ;;  dividend        2   10[COMMON] unsigned int 
  5976 ;; Auto vars:     Size  Location     Type
  5977 ;;  __lwmod         1   13[COMMON] unsigned char 
  5978 ;; Return value:  Size  Location     Type
  5979 ;;                  2    8[COMMON] unsigned int 
  5980 ;; Registers used:
  5981 ;;		wreg, status,2, status,0
  5982 ;; Tracked objects:
  5983 ;;		On entry : 0/0
  5984 ;;		On exit  : 0/0
  5985 ;;		Unchanged: 0/0
  5986 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5987 ;;      Params:         4       0       0       0       0
  5988 ;;      Locals:         1       0       0       0       0
  5989 ;;      Temps:          1       0       0       0       0
  5990 ;;      Totals:         6       0       0       0       0
  5991 ;;Total ram usage:        6 bytes
  5992 ;; Hardware stack levels used:    1
  5993 ;; This function calls:
  5994 ;;		Nothing
  5995 ;; This function is called by:
  5996 ;;		i1_updateLCD
  5997 ;;		i1_sprintf
  5998 ;; This function uses a non-reentrant model
  5999 ;;
  6000                           
  6001                           
  6002                           ;psect for function i1___lwmod
  6003  0C3D                     i1___lwmod:	
  6004                           
  6005                           ;incstack = 0
  6006 ;; hardware stack exceeded
  6007                           ; Regs used in i1___lwmod: [wreg+status,2+status,0]
  6008  0C3D  0878               	movf	i1___lwmod@divisor,w
  6009  0C3E  0479               	iorwf	i1___lwmod@divisor+1,w
  6010  0C3F  1903               	btfsc	3,2
  6011  0C40  2C6A               	goto	i1l2578
  6012  0C41  01FD               	clrf	i1___lwmod@counter
  6013  0C42  0AFD               	incf	i1___lwmod@counter,f
  6014  0C43                     i1l2568:	
  6015  0C43  1BF9               	btfsc	i1___lwmod@divisor+1,7
  6016  0C44  2C51               	goto	i1l2570
  6017  0C45  3001               	movlw	1
  6018  0C46                     u180_25:	
  6019  0C46  1003               	clrc
  6020  0C47  0DF8               	rlf	i1___lwmod@divisor,f
  6021  0C48  0DF9               	rlf	i1___lwmod@divisor+1,f
  6022  0C49  3EFF               	addlw	-1
  6023  0C4A  1D03               	skipz
  6024  0C4B  2C46               	goto	u180_25
  6025  0C4C  3001               	movlw	1
  6026  0C4D  00FC               	movwf	??i1___lwmod
  6027  0C4E  087C               	movf	??i1___lwmod,w
  6028  0C4F  07FD               	addwf	i1___lwmod@counter,f
  6029  0C50  2C43               	goto	i1l2568
  6030  0C51                     i1l2570:	
  6031  0C51  0879               	movf	i1___lwmod@divisor+1,w
  6032  0C52  027B               	subwf	i1___lwmod@dividend+1,w
  6033  0C53  1D03               	skipz
  6034  0C54  2C57               	goto	u182_25
  6035  0C55  0878               	movf	i1___lwmod@divisor,w
  6036  0C56  027A               	subwf	i1___lwmod@dividend,w
  6037  0C57                     u182_25:	
  6038  0C57  1C03               	skipc
  6039  0C58  2C5F               	goto	i1l2574
  6040  0C59  0878               	movf	i1___lwmod@divisor,w
  6041  0C5A  02FA               	subwf	i1___lwmod@dividend,f
  6042  0C5B  0879               	movf	i1___lwmod@divisor+1,w
  6043  0C5C  1C03               	skipc
  6044  0C5D  03FB               	decf	i1___lwmod@dividend+1,f
  6045  0C5E  02FB               	subwf	i1___lwmod@dividend+1,f
  6046  0C5F                     i1l2574:	
  6047  0C5F  3001               	movlw	1
  6048  0C60                     u183_25:	
  6049  0C60  1003               	clrc
  6050  0C61  0CF9               	rrf	i1___lwmod@divisor+1,f
  6051  0C62  0CF8               	rrf	i1___lwmod@divisor,f
  6052  0C63  3EFF               	addlw	-1
  6053  0C64  1D03               	skipz
  6054  0C65  2C60               	goto	u183_25
  6055  0C66  3001               	movlw	1
  6056  0C67  02FD               	subwf	i1___lwmod@counter,f
  6057  0C68  1D03               	btfss	3,2
  6058  0C69  2C51               	goto	i1l2570
  6059  0C6A                     i1l2578:	
  6060  0C6A  087B               	movf	i1___lwmod@dividend+1,w
  6061  0C6B  00F9               	movwf	?i1___lwmod+1
  6062  0C6C  087A               	movf	i1___lwmod@dividend,w
  6063  0C6D  00F8               	movwf	?i1___lwmod
  6064  0C6E  0008               	return
  6065  0C6F                     __end_ofi1___lwmod:	
  6066                           
  6067                           	psect	text33
  6068  07C4                     __ptext33:	
  6069 ;; *************** function i1___lwdiv *****************
  6070 ;; Defined at:
  6071 ;;		line 5 in file "/opt/microchip/xc8/v2.05/pic/sources/c90/common/lwdiv.c"
  6072 ;; Parameters:    Size  Location     Type
  6073 ;;  divisor         2    0[COMMON] unsigned int 
  6074 ;;  dividend        2    2[COMMON] unsigned int 
  6075 ;; Auto vars:     Size  Location     Type
  6076 ;;  __lwdiv         2    5[COMMON] unsigned int 
  6077 ;;  __lwdiv         1    7[COMMON] unsigned char 
  6078 ;; Return value:  Size  Location     Type
  6079 ;;                  2    0[COMMON] unsigned int 
  6080 ;; Registers used:
  6081 ;;		wreg, status,2, status,0
  6082 ;; Tracked objects:
  6083 ;;		On entry : 0/0
  6084 ;;		On exit  : 0/0
  6085 ;;		Unchanged: 0/0
  6086 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6087 ;;      Params:         4       0       0       0       0
  6088 ;;      Locals:         3       0       0       0       0
  6089 ;;      Temps:          1       0       0       0       0
  6090 ;;      Totals:         8       0       0       0       0
  6091 ;;Total ram usage:        8 bytes
  6092 ;; Hardware stack levels used:    1
  6093 ;; This function calls:
  6094 ;;		Nothing
  6095 ;; This function is called by:
  6096 ;;		i1_updateLCD
  6097 ;;		i1_sprintf
  6098 ;; This function uses a non-reentrant model
  6099 ;;
  6100                           
  6101                           
  6102                           ;psect for function i1___lwdiv
  6103  07C4                     i1___lwdiv:	
  6104                           
  6105                           ;incstack = 0
  6106 ;; hardware stack exceeded
  6107                           ; Regs used in i1___lwdiv: [wreg+status,2+status,0]
  6108  07C4  01F5               	clrf	i1___lwdiv@quotient
  6109  07C5  01F6               	clrf	i1___lwdiv@quotient+1
  6110  07C6  0870               	movf	i1___lwdiv@divisor,w
  6111  07C7  0471               	iorwf	i1___lwdiv@divisor+1,w
  6112  07C8  1903               	btfsc	3,2
  6113  07C9  2FFB               	goto	i1l2556
  6114  07CA  01F7               	clrf	i1___lwdiv@counter
  6115  07CB  0AF7               	incf	i1___lwdiv@counter,f
  6116  07CC                     i1l2544:	
  6117  07CC  1BF1               	btfsc	i1___lwdiv@divisor+1,7
  6118  07CD  2FDA               	goto	i1l2546
  6119  07CE  3001               	movlw	1
  6120  07CF                     u173_25:	
  6121  07CF  1003               	clrc
  6122  07D0  0DF0               	rlf	i1___lwdiv@divisor,f
  6123  07D1  0DF1               	rlf	i1___lwdiv@divisor+1,f
  6124  07D2  3EFF               	addlw	-1
  6125  07D3  1D03               	skipz
  6126  07D4  2FCF               	goto	u173_25
  6127  07D5  3001               	movlw	1
  6128  07D6  00F4               	movwf	??i1___lwdiv
  6129  07D7  0874               	movf	??i1___lwdiv,w
  6130  07D8  07F7               	addwf	i1___lwdiv@counter,f
  6131  07D9  2FCC               	goto	i1l2544
  6132  07DA                     i1l2546:	
  6133  07DA  3001               	movlw	1
  6134  07DB                     u175_25:	
  6135  07DB  1003               	clrc
  6136  07DC  0DF5               	rlf	i1___lwdiv@quotient,f
  6137  07DD  0DF6               	rlf	i1___lwdiv@quotient+1,f
  6138  07DE  3EFF               	addlw	-1
  6139  07DF  1D03               	skipz
  6140  07E0  2FDB               	goto	u175_25
  6141  07E1  0871               	movf	i1___lwdiv@divisor+1,w
  6142  07E2  0273               	subwf	i1___lwdiv@dividend+1,w
  6143  07E3  1D03               	skipz
  6144  07E4  2FE7               	goto	u176_25
  6145  07E5  0870               	movf	i1___lwdiv@divisor,w
  6146  07E6  0272               	subwf	i1___lwdiv@dividend,w
  6147  07E7                     u176_25:	
  6148  07E7  1C03               	skipc
  6149  07E8  2FF0               	goto	i1l2552
  6150  07E9  0870               	movf	i1___lwdiv@divisor,w
  6151  07EA  02F2               	subwf	i1___lwdiv@dividend,f
  6152  07EB  0871               	movf	i1___lwdiv@divisor+1,w
  6153  07EC  1C03               	skipc
  6154  07ED  03F3               	decf	i1___lwdiv@dividend+1,f
  6155  07EE  02F3               	subwf	i1___lwdiv@dividend+1,f
  6156  07EF  1475               	bsf	i1___lwdiv@quotient,0
  6157  07F0                     i1l2552:	
  6158  07F0  3001               	movlw	1
  6159  07F1                     u177_25:	
  6160  07F1  1003               	clrc
  6161  07F2  0CF1               	rrf	i1___lwdiv@divisor+1,f
  6162  07F3  0CF0               	rrf	i1___lwdiv@divisor,f
  6163  07F4  3EFF               	addlw	-1
  6164  07F5  1D03               	skipz
  6165  07F6  2FF1               	goto	u177_25
  6166  07F7  3001               	movlw	1
  6167  07F8  02F7               	subwf	i1___lwdiv@counter,f
  6168  07F9  1D03               	btfss	3,2
  6169  07FA  2FDA               	goto	i1l2546
  6170  07FB                     i1l2556:	
  6171  07FB  0876               	movf	i1___lwdiv@quotient+1,w
  6172  07FC  00F1               	movwf	?i1___lwdiv+1
  6173  07FD  0875               	movf	i1___lwdiv@quotient,w
  6174  07FE  00F0               	movwf	?i1___lwdiv
  6175  07FF  0008               	return
  6176  0800                     __end_ofi1___lwdiv:	
  6177                           
  6178                           	psect	text34
  6179  0B1E                     __ptext34:	
  6180 ;; *************** function i1_putsXLCD *****************
  6181 ;; Defined at:
  6182 ;;		line 419 in file "lcd_pic16.c"
  6183 ;; Parameters:    Size  Location     Type
  6184 ;;  buffer          1    wreg     PTR unsigned char 
  6185 ;;		 -> lineTwo(17), lineOne(17), 
  6186 ;; Auto vars:     Size  Location     Type
  6187 ;;  buffer          1    5[COMMON] PTR unsigned char 
  6188 ;;		 -> lineTwo(17), lineOne(17), 
  6189 ;; Return value:  Size  Location     Type
  6190 ;;                  1    wreg      void 
  6191 ;; Registers used:
  6192 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6193 ;; Tracked objects:
  6194 ;;		On entry : 0/0
  6195 ;;		On exit  : 0/0
  6196 ;;		Unchanged: 0/0
  6197 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6198 ;;      Params:         0       0       0       0       0
  6199 ;;      Locals:         1       0       0       0       0
  6200 ;;      Temps:          1       0       0       0       0
  6201 ;;      Totals:         2       0       0       0       0
  6202 ;;Total ram usage:        2 bytes
  6203 ;; Hardware stack levels used:    1
  6204 ;; Hardware stack levels required when called:    2
  6205 ;; This function calls:
  6206 ;;		i1_BusyXLCD
  6207 ;;		i1_WriteDataXLCD
  6208 ;; This function is called by:
  6209 ;;		i1_updateLCD
  6210 ;; This function uses a non-reentrant model
  6211 ;;
  6212                           
  6213                           
  6214                           ;psect for function i1_putsXLCD
  6215  0B1E                     i1_putsXLCD:	
  6216                           
  6217                           ;incstack = 0
  6218 ;; hardware stack exceeded
  6219                           ; Regs used in i1_putsXLCD: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6220                           ;i1putsXLCD@buffer stored from wreg
  6221  0B1E  00F5               	movwf	i1putsXLCD@buffer
  6222  0B1F                     i1l2800:	
  6223                           ;lcd_pic16.c: 419: void putsXLCD(char *buffer);lcd_pic16.c: 420: {;lcd_pic16.c: 421:    
      +                               while(*buffer)
  6224                           
  6225                           
  6226                           ;lcd_pic16.c: 421:         while(*buffer)
  6227  0B1F  0875               	movf	i1putsXLCD@buffer,w
  6228  0B20  0084               	movwf	4
  6229  0B21  1383               	bcf	3,7	;select IRP bank0
  6230  0B22  0800               	movf	0,w
  6231  0B23  1903               	btfsc	3,2
  6232  0B24  0008               	return
  6233  0B25                     i1l2794:	
  6234  0B25  120A  158A  2294  120A  158A  	fcall	i1_BusyXLCD
  6235  0B2A  3A00               	xorlw	0
  6236  0B2B  1D03               	skipz
  6237  0B2C  2B25               	goto	i1l2794
  6238                           
  6239                           ;lcd_pic16.c: 424:                 WriteDataXLCD(*buffer);
  6240  0B2D  0875               	movf	i1putsXLCD@buffer,w
  6241  0B2E  0084               	movwf	4
  6242  0B2F  1383               	bcf	3,7	;select IRP bank0
  6243  0B30  0800               	movf	0,w
  6244  0B31  120A  158A  252D  120A  158A  	fcall	i1_WriteDataXLCD
  6245                           
  6246                           ;lcd_pic16.c: 425:                 buffer++;
  6247  0B36  3001               	movlw	1
  6248  0B37  00F4               	movwf	??i1_putsXLCD
  6249  0B38  0874               	movf	??i1_putsXLCD,w
  6250  0B39  07F5               	addwf	i1putsXLCD@buffer,f
  6251  0B3A  2B1F               	goto	i1l2800
  6252  0B3B                     __end_ofi1_putsXLCD:	
  6253                           
  6254                           	psect	text35
  6255  0D2D                     __ptext35:	
  6256 ;; *************** function i1_WriteDataXLCD *****************
  6257 ;; Defined at:
  6258 ;;		line 110 in file "lcd_pic16.c"
  6259 ;; Parameters:    Size  Location     Type
  6260 ;;  data            1    wreg     unsigned char 
  6261 ;; Auto vars:     Size  Location     Type
  6262 ;;  data            1    3[COMMON] unsigned char 
  6263 ;; Return value:  Size  Location     Type
  6264 ;;                  1    wreg      void 
  6265 ;; Registers used:
  6266 ;;		wreg, status,2, status,0, pclath, cstack
  6267 ;; Tracked objects:
  6268 ;;		On entry : 0/0
  6269 ;;		On exit  : 0/0
  6270 ;;		Unchanged: 0/0
  6271 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6272 ;;      Params:         0       0       0       0       0
  6273 ;;      Locals:         1       0       0       0       0
  6274 ;;      Temps:          2       0       0       0       0
  6275 ;;      Totals:         3       0       0       0       0
  6276 ;;Total ram usage:        3 bytes
  6277 ;; Hardware stack levels used:    1
  6278 ;; Hardware stack levels required when called:    1
  6279 ;; This function calls:
  6280 ;;		i1_DelayFor18TCY
  6281 ;; This function is called by:
  6282 ;;		i1_putsXLCD
  6283 ;; This function uses a non-reentrant model
  6284 ;;
  6285                           
  6286                           
  6287                           ;psect for function i1_WriteDataXLCD
  6288  0D2D                     i1_WriteDataXLCD:	
  6289                           
  6290                           ;incstack = 0
  6291 ;; hardware stack exceeded
  6292                           ; Regs used in i1_WriteDataXLCD: [wreg+status,2+status,0+pclath+cstack]
  6293                           ;i1WriteDataXLCD@data stored from wreg
  6294  0D2D  00F3               	movwf	i1WriteDataXLCD@data
  6295                           
  6296                           ;lcd_pic16.c: 110: void WriteDataXLCD(char data);lcd_pic16.c: 111: {;lcd_pic16.c: 125:  
      +                                 TRISB &= 0x0f;
  6297  0D2E  300F               	movlw	15
  6298  0D2F  00F1               	movwf	??i1_WriteDataXLCD
  6299  0D30  0871               	movf	??i1_WriteDataXLCD,w
  6300  0D31  1683               	bsf	3,5	;RP0=1, select bank1
  6301  0D32  1303               	bcf	3,6	;RP1=0, select bank1
  6302  0D33  0586               	andwf	6,f	;volatile
  6303                           
  6304                           ;lcd_pic16.c: 126:         PORTB &= 0x0f;
  6305  0D34  300F               	movlw	15
  6306  0D35  00F1               	movwf	??i1_WriteDataXLCD
  6307  0D36  0871               	movf	??i1_WriteDataXLCD,w
  6308  0D37  1283               	bcf	3,5	;RP0=0, select bank0
  6309  0D38  1303               	bcf	3,6	;RP1=0, select bank0
  6310  0D39  0586               	andwf	6,f	;volatile
  6311                           
  6312                           ;lcd_pic16.c: 127:         PORTB |= data&0xf0;
  6313  0D3A  0873               	movf	i1WriteDataXLCD@data,w
  6314  0D3B  39F0               	andlw	240
  6315  0D3C  00F1               	movwf	??i1_WriteDataXLCD
  6316  0D3D  0871               	movf	??i1_WriteDataXLCD,w
  6317  0D3E  0486               	iorwf	6,f	;volatile
  6318                           
  6319                           ;lcd_pic16.c: 133:         PORTBbits.RB1 = 1;
  6320  0D3F  1486               	bsf	6,1	;volatile
  6321                           
  6322                           ;lcd_pic16.c: 134:         PORTBbits.RB2 = 0;
  6323  0D40  1106               	bcf	6,2	;volatile
  6324                           
  6325                           ;lcd_pic16.c: 135:         DelayFor18TCY();
  6326  0D41  120A  158A  226F  120A  158A  	fcall	i1_DelayFor18TCY
  6327                           
  6328                           ;lcd_pic16.c: 136:         PORTBbits.RB3 = 1;
  6329  0D46  1283               	bcf	3,5	;RP0=0, select bank0
  6330  0D47  1303               	bcf	3,6	;RP1=0, select bank0
  6331  0D48  1586               	bsf	6,3	;volatile
  6332                           
  6333                           ;lcd_pic16.c: 137:         DelayFor18TCY();
  6334  0D49  120A  158A  226F  120A  158A  	fcall	i1_DelayFor18TCY
  6335                           
  6336                           ;lcd_pic16.c: 138:         PORTBbits.RB3 = 0;
  6337  0D4E  1283               	bcf	3,5	;RP0=0, select bank0
  6338  0D4F  1303               	bcf	3,6	;RP1=0, select bank0
  6339  0D50  1186               	bcf	6,3	;volatile
  6340                           
  6341                           ;lcd_pic16.c: 140:         PORTB &= 0x0f;
  6342  0D51  300F               	movlw	15
  6343  0D52  00F1               	movwf	??i1_WriteDataXLCD
  6344  0D53  0871               	movf	??i1_WriteDataXLCD,w
  6345  0D54  0586               	andwf	6,f	;volatile
  6346                           
  6347                           ;lcd_pic16.c: 141:         PORTB |= ((data<<4)&0xf0);
  6348  0D55  0873               	movf	i1WriteDataXLCD@data,w
  6349  0D56  00F1               	movwf	??i1_WriteDataXLCD
  6350  0D57  3003               	movlw	3
  6351  0D58                     u167_25:	
  6352  0D58  1003               	clrc
  6353  0D59  0DF1               	rlf	??i1_WriteDataXLCD,f
  6354  0D5A  3EFF               	addlw	-1
  6355  0D5B  1D03               	skipz
  6356  0D5C  2D58               	goto	u167_25
  6357  0D5D  1003               	clrc
  6358  0D5E  0D71               	rlf	??i1_WriteDataXLCD,w
  6359  0D5F  39F0               	andlw	240
  6360  0D60  00F2               	movwf	??i1_WriteDataXLCD+1
  6361  0D61  0872               	movf	??i1_WriteDataXLCD+1,w
  6362  0D62  0486               	iorwf	6,f	;volatile
  6363                           
  6364                           ;lcd_pic16.c: 146:         DelayFor18TCY();
  6365  0D63  120A  158A  226F  120A  158A  	fcall	i1_DelayFor18TCY
  6366                           
  6367                           ;lcd_pic16.c: 147:         PORTBbits.RB3 = 1;
  6368  0D68  1283               	bcf	3,5	;RP0=0, select bank0
  6369  0D69  1303               	bcf	3,6	;RP1=0, select bank0
  6370  0D6A  1586               	bsf	6,3	;volatile
  6371                           
  6372                           ;lcd_pic16.c: 148:         DelayFor18TCY();
  6373  0D6B  120A  158A  226F   	fcall	i1_DelayFor18TCY
  6374                           
  6375                           ;lcd_pic16.c: 149:         PORTBbits.RB3 = 0;
  6376  0D6E  1283               	bcf	3,5	;RP0=0, select bank0
  6377  0D6F  1303               	bcf	3,6	;RP1=0, select bank0
  6378  0D70  1186               	bcf	6,3	;volatile
  6379                           
  6380                           ;lcd_pic16.c: 151:         TRISB |= 0xf0;
  6381  0D71  30F0               	movlw	240
  6382  0D72  00F1               	movwf	??i1_WriteDataXLCD
  6383  0D73  0871               	movf	??i1_WriteDataXLCD,w
  6384  0D74  1683               	bsf	3,5	;RP0=1, select bank1
  6385  0D75  1303               	bcf	3,6	;RP1=0, select bank1
  6386  0D76  0486               	iorwf	6,f	;volatile
  6387  0D77  0008               	return
  6388  0D78                     __end_ofi1_WriteDataXLCD:	
  6389                           
  6390                           	psect	text36
  6391  0A94                     __ptext36:	
  6392 ;; *************** function i1_BusyXLCD *****************
  6393 ;; Defined at:
  6394 ;;		line 451 in file "lcd_pic16.c"
  6395 ;; Parameters:    Size  Location     Type
  6396 ;;		None
  6397 ;; Auto vars:     Size  Location     Type
  6398 ;;		None
  6399 ;; Return value:  Size  Location     Type
  6400 ;;                  1    wreg      unsigned char 
  6401 ;; Registers used:
  6402 ;;		wreg
  6403 ;; Tracked objects:
  6404 ;;		On entry : 0/0
  6405 ;;		On exit  : 0/0
  6406 ;;		Unchanged: 0/0
  6407 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6408 ;;      Params:         0       0       0       0       0
  6409 ;;      Locals:         0       0       0       0       0
  6410 ;;      Temps:          2       0       0       0       0
  6411 ;;      Totals:         2       0       0       0       0
  6412 ;;Total ram usage:        2 bytes
  6413 ;; Hardware stack levels used:    1
  6414 ;; This function calls:
  6415 ;;		Nothing
  6416 ;; This function is called by:
  6417 ;;		i1_putsXLCD
  6418 ;; This function uses a non-reentrant model
  6419 ;;
  6420                           
  6421                           
  6422                           ;psect for function i1_BusyXLCD
  6423  0A94                     i1_BusyXLCD:	
  6424                           
  6425                           ;lcd_pic16.c: 504:         _delay((unsigned long)((5)*(4000000/4000.0)));
  6426                           
  6427                           ;incstack = 0
  6428 ;; hardware stack exceeded
  6429                           ; Regs used in i1_BusyXLCD: [wreg]
  6430  0A94  3007               	movlw	7
  6431  0A95  00F1               	movwf	??i1_BusyXLCD+1
  6432  0A96  307D               	movlw	125
  6433  0A97  00F0               	movwf	??i1_BusyXLCD
  6434  0A98                     u335_27:	
  6435  0A98  0BF0               	decfsz	??i1_BusyXLCD,f
  6436  0A99  2A98               	goto	u335_27
  6437  0A9A  0BF1               	decfsz	??i1_BusyXLCD+1,f
  6438  0A9B  2A98               	goto	u335_27
  6439                           
  6440                           ;lcd_pic16.c: 505:         return 0;
  6441  0A9C  3000               	movlw	0
  6442  0A9D  0008               	return
  6443  0A9E                     __end_ofi1_BusyXLCD:	
  6444                           
  6445                           	psect	text37
  6446  0DC3                     __ptext37:	
  6447 ;; *************** function i1_SetDDRamAddr *****************
  6448 ;; Defined at:
  6449 ;;		line 217 in file "lcd_pic16.c"
  6450 ;; Parameters:    Size  Location     Type
  6451 ;;  DDaddr          1    wreg     unsigned char 
  6452 ;; Auto vars:     Size  Location     Type
  6453 ;;  DDaddr          1    3[COMMON] unsigned char 
  6454 ;; Return value:  Size  Location     Type
  6455 ;;                  1    wreg      void 
  6456 ;; Registers used:
  6457 ;;		wreg, status,2, status,0, pclath, cstack
  6458 ;; Tracked objects:
  6459 ;;		On entry : 0/0
  6460 ;;		On exit  : 0/0
  6461 ;;		Unchanged: 0/0
  6462 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6463 ;;      Params:         0       0       0       0       0
  6464 ;;      Locals:         1       0       0       0       0
  6465 ;;      Temps:          2       0       0       0       0
  6466 ;;      Totals:         3       0       0       0       0
  6467 ;;Total ram usage:        3 bytes
  6468 ;; Hardware stack levels used:    1
  6469 ;; Hardware stack levels required when called:    1
  6470 ;; This function calls:
  6471 ;;		i1_DelayFor18TCY
  6472 ;; This function is called by:
  6473 ;;		i1_updateLCD
  6474 ;; This function uses a non-reentrant model
  6475 ;;
  6476                           
  6477                           
  6478                           ;psect for function i1_SetDDRamAddr
  6479  0DC3                     i1_SetDDRamAddr:	
  6480                           
  6481                           ;incstack = 0
  6482 ;; hardware stack exceeded
  6483                           ; Regs used in i1_SetDDRamAddr: [wreg+status,2+status,0+pclath+cstack]
  6484                           ;i1SetDDRamAddr@DDaddr stored from wreg
  6485  0DC3  00F3               	movwf	i1SetDDRamAddr@DDaddr
  6486                           
  6487                           ;lcd_pic16.c: 217: void SetDDRamAddr(unsigned char DDaddr);lcd_pic16.c: 218: {;lcd_pic16
      +                          .c: 232:         TRISB &= 0x0f;
  6488  0DC4  300F               	movlw	15
  6489  0DC5  00F1               	movwf	??i1_SetDDRamAddr
  6490  0DC6  0871               	movf	??i1_SetDDRamAddr,w
  6491  0DC7  1683               	bsf	3,5	;RP0=1, select bank1
  6492  0DC8  1303               	bcf	3,6	;RP1=0, select bank1
  6493  0DC9  0586               	andwf	6,f	;volatile
  6494                           
  6495                           ;lcd_pic16.c: 233:         PORTB &= 0x0f;
  6496  0DCA  300F               	movlw	15
  6497  0DCB  00F1               	movwf	??i1_SetDDRamAddr
  6498  0DCC  0871               	movf	??i1_SetDDRamAddr,w
  6499  0DCD  1283               	bcf	3,5	;RP0=0, select bank0
  6500  0DCE  1303               	bcf	3,6	;RP1=0, select bank0
  6501  0DCF  0586               	andwf	6,f	;volatile
  6502                           
  6503                           ;lcd_pic16.c: 234:         PORTB |= ((DDaddr | 0b10000000) & 0xf0);
  6504  0DD0  0873               	movf	i1SetDDRamAddr@DDaddr,w
  6505  0DD1  3880               	iorlw	128
  6506  0DD2  39F0               	andlw	240
  6507  0DD3  00F1               	movwf	??i1_SetDDRamAddr
  6508  0DD4  0871               	movf	??i1_SetDDRamAddr,w
  6509  0DD5  0486               	iorwf	6,f	;volatile
  6510                           
  6511                           ;lcd_pic16.c: 240:         PORTBbits.RB2 = 0;
  6512  0DD6  1106               	bcf	6,2	;volatile
  6513                           
  6514                           ;lcd_pic16.c: 241:         PORTBbits.RB1 = 0;
  6515  0DD7  1086               	bcf	6,1	;volatile
  6516                           
  6517                           ;lcd_pic16.c: 242:         DelayFor18TCY();
  6518  0DD8  120A  158A  226F  120A  158A  	fcall	i1_DelayFor18TCY
  6519                           
  6520                           ;lcd_pic16.c: 243:         PORTBbits.RB3 = 1;
  6521  0DDD  1283               	bcf	3,5	;RP0=0, select bank0
  6522  0DDE  1303               	bcf	3,6	;RP1=0, select bank0
  6523  0DDF  1586               	bsf	6,3	;volatile
  6524                           
  6525                           ;lcd_pic16.c: 244:         DelayFor18TCY();
  6526  0DE0  120A  158A  226F  120A  158A  	fcall	i1_DelayFor18TCY
  6527                           
  6528                           ;lcd_pic16.c: 245:         PORTBbits.RB3 = 0;
  6529  0DE5  1283               	bcf	3,5	;RP0=0, select bank0
  6530  0DE6  1303               	bcf	3,6	;RP1=0, select bank0
  6531  0DE7  1186               	bcf	6,3	;volatile
  6532                           
  6533                           ;lcd_pic16.c: 247:         PORTB &= 0x0f;
  6534  0DE8  300F               	movlw	15
  6535  0DE9  00F1               	movwf	??i1_SetDDRamAddr
  6536  0DEA  0871               	movf	??i1_SetDDRamAddr,w
  6537  0DEB  0586               	andwf	6,f	;volatile
  6538                           
  6539                           ;lcd_pic16.c: 248:         PORTB |= ((DDaddr<<4)&0xf0);
  6540  0DEC  0873               	movf	i1SetDDRamAddr@DDaddr,w
  6541  0DED  00F1               	movwf	??i1_SetDDRamAddr
  6542  0DEE  3003               	movlw	3
  6543  0DEF                     u209_25:	
  6544  0DEF  1003               	clrc
  6545  0DF0  0DF1               	rlf	??i1_SetDDRamAddr,f
  6546  0DF1  3EFF               	addlw	-1
  6547  0DF2  1D03               	skipz
  6548  0DF3  2DEF               	goto	u209_25
  6549  0DF4  1003               	clrc
  6550  0DF5  0D71               	rlf	??i1_SetDDRamAddr,w
  6551  0DF6  39F0               	andlw	240
  6552  0DF7  00F2               	movwf	??i1_SetDDRamAddr+1
  6553  0DF8  0872               	movf	??i1_SetDDRamAddr+1,w
  6554  0DF9  0486               	iorwf	6,f	;volatile
  6555                           
  6556                           ;lcd_pic16.c: 253:         DelayFor18TCY();
  6557  0DFA  120A  158A  226F  120A  158A  	fcall	i1_DelayFor18TCY
  6558                           
  6559                           ;lcd_pic16.c: 254:         PORTBbits.RB3 = 1;
  6560  0DFF  1283               	bcf	3,5	;RP0=0, select bank0
  6561  0E00  1303               	bcf	3,6	;RP1=0, select bank0
  6562  0E01  1586               	bsf	6,3	;volatile
  6563                           
  6564                           ;lcd_pic16.c: 255:         DelayFor18TCY();
  6565  0E02  120A  158A  226F   	fcall	i1_DelayFor18TCY
  6566                           
  6567                           ;lcd_pic16.c: 256:         PORTBbits.RB3 = 0;
  6568  0E05  1283               	bcf	3,5	;RP0=0, select bank0
  6569  0E06  1303               	bcf	3,6	;RP1=0, select bank0
  6570  0E07  1186               	bcf	6,3	;volatile
  6571                           
  6572                           ;lcd_pic16.c: 258:         TRISB |= 0xf0;
  6573  0E08  30F0               	movlw	240
  6574  0E09  00F1               	movwf	??i1_SetDDRamAddr
  6575  0E0A  0871               	movf	??i1_SetDDRamAddr,w
  6576  0E0B  1683               	bsf	3,5	;RP0=1, select bank1
  6577  0E0C  1303               	bcf	3,6	;RP1=0, select bank1
  6578  0E0D  0486               	iorwf	6,f	;volatile
  6579  0E0E  0008               	return
  6580  0E0F                     __end_ofi1_SetDDRamAddr:	
  6581                           
  6582                           	psect	text38
  6583  0A6F                     __ptext38:	
  6584 ;; *************** function i1_DelayFor18TCY *****************
  6585 ;; Defined at:
  6586 ;;		line 22 in file "lcd_pic16.c"
  6587 ;; Parameters:    Size  Location     Type
  6588 ;;		None
  6589 ;; Auto vars:     Size  Location     Type
  6590 ;;		None
  6591 ;; Return value:  Size  Location     Type
  6592 ;;                  1    wreg      void 
  6593 ;; Registers used:
  6594 ;;		wreg
  6595 ;; Tracked objects:
  6596 ;;		On entry : 0/0
  6597 ;;		On exit  : 0/0
  6598 ;;		Unchanged: 0/0
  6599 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6600 ;;      Params:         0       0       0       0       0
  6601 ;;      Locals:         0       0       0       0       0
  6602 ;;      Temps:          1       0       0       0       0
  6603 ;;      Totals:         1       0       0       0       0
  6604 ;;Total ram usage:        1 bytes
  6605 ;; Hardware stack levels used:    1
  6606 ;; This function calls:
  6607 ;;		Nothing
  6608 ;; This function is called by:
  6609 ;;		i1_WriteDataXLCD
  6610 ;;		i1_SetDDRamAddr
  6611 ;; This function uses a non-reentrant model
  6612 ;;
  6613                           
  6614                           
  6615                           ;psect for function i1_DelayFor18TCY
  6616  0A6F                     i1_DelayFor18TCY:	
  6617                           
  6618                           ;lcd_pic16.c: 24:    _delay((unsigned long)((18)*(4000000/4000000.0)));
  6619                           
  6620                           ;incstack = 0
  6621 ;; hardware stack exceeded
  6622                           ; Regs used in i1_DelayFor18TCY: [wreg]
  6623  0A6F  3005               	movlw	5
  6624  0A70  00F0               	movwf	??i1_DelayFor18TCY
  6625  0A71                     u336_27:	
  6626  0A71  0BF0               	decfsz	??i1_DelayFor18TCY,f
  6627  0A72  2A71               	goto	u336_27
  6628  0A73  2A74               	nop2
  6629  0A74  0008               	return
  6630  0A75                     __end_ofi1_DelayFor18TCY:	
  6631                           
  6632                           	psect	text39
  6633  0CE5                     __ptext39:	
  6634 ;; *************** function _time *****************
  6635 ;; Defined at:
  6636 ;;		line 94 in file "main.c"
  6637 ;; Parameters:    Size  Location     Type
  6638 ;;		None
  6639 ;; Auto vars:     Size  Location     Type
  6640 ;;		None
  6641 ;; Return value:  Size  Location     Type
  6642 ;;                  1    wreg      void 
  6643 ;; Registers used:
  6644 ;;		wreg, status,2, status,0, pclath, cstack
  6645 ;; Tracked objects:
  6646 ;;		On entry : 0/0
  6647 ;;		On exit  : 0/0
  6648 ;;		Unchanged: 0/0
  6649 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6650 ;;      Params:         0       0       0       0       0
  6651 ;;      Locals:         0       0       0       0       0
  6652 ;;      Temps:          1       0       0       0       0
  6653 ;;      Totals:         1       0       0       0       0
  6654 ;;Total ram usage:        1 bytes
  6655 ;; Hardware stack levels used:    1
  6656 ;; Hardware stack levels required when called:    2
  6657 ;; This function calls:
  6658 ;;		i1_setData
  6659 ;; This function is called by:
  6660 ;;		_inter
  6661 ;; This function uses a non-reentrant model
  6662 ;;
  6663                           
  6664                           
  6665                           ;psect for function _time
  6666  0CE5                     _time:	
  6667                           
  6668                           ;main.c: 95:     hundredMiliSeconds++;
  6669                           
  6670                           ;incstack = 0
  6671 ;; hardware stack exceeded
  6672                           ; Regs used in _time: [wreg+status,2+status,0+pclath+cstack]
  6673  0CE5  3001               	movlw	1
  6674  0CE6  00F6               	movwf	??_time
  6675  0CE7  0876               	movf	??_time,w
  6676  0CE8  1283               	bcf	3,5	;RP0=0, select bank0
  6677  0CE9  1303               	bcf	3,6	;RP1=0, select bank0
  6678  0CEA  07C9               	addwf	_hundredMiliSeconds,f
  6679                           
  6680                           ;main.c: 96:     if(hundredMiliSeconds >= 10){
  6681  0CEB  300A               	movlw	10
  6682  0CEC  0249               	subwf	_hundredMiliSeconds,w
  6683  0CED  1C03               	skipc
  6684  0CEE  0008               	return
  6685                           
  6686                           ;main.c: 97:         hundredMiliSeconds = 0;
  6687  0CEF  01C9               	clrf	_hundredMiliSeconds
  6688                           
  6689                           ;main.c: 98:         seconds++;
  6690  0CF0  3001               	movlw	1
  6691  0CF1  00F6               	movwf	??_time
  6692  0CF2  0876               	movf	??_time,w
  6693  0CF3  07CA               	addwf	_seconds,f
  6694                           
  6695                           ;main.c: 99:         if(seconds >= 60){
  6696  0CF4  303C               	movlw	60
  6697  0CF5  024A               	subwf	_seconds,w
  6698  0CF6  1C03               	skipc
  6699  0CF7  0008               	return
  6700                           
  6701                           ;main.c: 100:             seconds = 0;
  6702  0CF8  01CA               	clrf	_seconds
  6703                           
  6704                           ;main.c: 101:             minutes++;
  6705  0CF9  3001               	movlw	1
  6706  0CFA  00F6               	movwf	??_time
  6707  0CFB  0876               	movf	??_time,w
  6708  0CFC  07CD               	addwf	_minutes,f
  6709                           
  6710                           ;main.c: 102:             setData(0);
  6711  0CFD  3000               	movlw	0
  6712  0CFE  120A  158A  27A5  120A  158A  	fcall	i1_setData
  6713                           
  6714                           ;main.c: 103:             if(minutes >= 60){
  6715  0D03  303C               	movlw	60
  6716  0D04  1283               	bcf	3,5	;RP0=0, select bank0
  6717  0D05  1303               	bcf	3,6	;RP1=0, select bank0
  6718  0D06  024D               	subwf	_minutes,w
  6719  0D07  1C03               	skipc
  6720  0D08  0008               	return
  6721                           
  6722                           ;main.c: 104:                 minutes = 0;
  6723  0D09  01CD               	clrf	_minutes
  6724                           
  6725                           ;main.c: 105:                 hours++;
  6726  0D0A  3001               	movlw	1
  6727  0D0B  00F6               	movwf	??_time
  6728  0D0C  0876               	movf	??_time,w
  6729  0D0D  07CE               	addwf	_hours,f
  6730                           
  6731                           ;main.c: 106:                 if(hours >= 24){
  6732  0D0E  3018               	movlw	24
  6733  0D0F  024E               	subwf	_hours,w
  6734  0D10  1C03               	skipc
  6735  0D11  0008               	return
  6736                           
  6737                           ;main.c: 107:                     hours = 0;
  6738  0D12  01CE               	clrf	_hours
  6739                           
  6740                           ;main.c: 108:                     days++;
  6741  0D13  3001               	movlw	1
  6742  0D14  00F6               	movwf	??_time
  6743  0D15  0876               	movf	??_time,w
  6744  0D16  07CF               	addwf	_days,f
  6745                           
  6746                           ;main.c: 109:                     if(days >= 30){
  6747  0D17  301E               	movlw	30
  6748  0D18  024F               	subwf	_days,w
  6749  0D19  1C03               	skipc
  6750  0D1A  2D20               	goto	i1l3040
  6751                           
  6752                           ;main.c: 110:                         days = 0;
  6753  0D1B  01CF               	clrf	_days
  6754                           
  6755                           ;main.c: 111:                         months++;
  6756  0D1C  3001               	movlw	1
  6757  0D1D  00F6               	movwf	??_time
  6758  0D1E  0876               	movf	??_time,w
  6759  0D1F  07D0               	addwf	_months,f
  6760  0D20                     i1l3040:	
  6761  0D20  300D               	movlw	13
  6762  0D21  064F               	xorwf	_days,w
  6763  0D22  1D03               	btfss	3,2
  6764  0D23  2D2A               	goto	i1l211
  6765  0D24  3006               	movlw	6
  6766  0D25  0650               	xorwf	_months,w
  6767  0D26  1D03               	btfss	3,2
  6768  0D27  2D2A               	goto	i1l211
  6769  0D28  01C8               	clrf	_functionalStat
  6770                           
  6771                           ;main.c: 115:                     }else{
  6772  0D29  0008               	return
  6773  0D2A                     i1l211:	
  6774  0D2A  01C8               	clrf	_functionalStat
  6775  0D2B  0AC8               	incf	_functionalStat,f
  6776  0D2C  0008               	return
  6777  0D2D                     __end_of_time:	
  6778                           
  6779                           	psect	text40
  6780  0FA5                     __ptext40:	
  6781 ;; *************** function i1_setData *****************
  6782 ;; Defined at:
  6783 ;;		line 44 in file "eeprom.c"
  6784 ;; Parameters:    Size  Location     Type
  6785 ;;  full            1    wreg     unsigned char 
  6786 ;; Auto vars:     Size  Location     Type
  6787 ;;  full            1    5[COMMON] unsigned char 
  6788 ;;  setData         1    4[COMMON] unsigned char 
  6789 ;;  setData         1    3[COMMON] unsigned char 
  6790 ;; Return value:  Size  Location     Type
  6791 ;;                  1    wreg      void 
  6792 ;; Registers used:
  6793 ;;		wreg, status,2, status,0, pclath, cstack
  6794 ;; Tracked objects:
  6795 ;;		On entry : 0/0
  6796 ;;		On exit  : 0/0
  6797 ;;		Unchanged: 0/0
  6798 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6799 ;;      Params:         0       0       0       0       0
  6800 ;;      Locals:         3       0       0       0       0
  6801 ;;      Temps:          1       0       0       0       0
  6802 ;;      Totals:         4       0       0       0       0
  6803 ;;Total ram usage:        4 bytes
  6804 ;; Hardware stack levels used:    1
  6805 ;; Hardware stack levels required when called:    1
  6806 ;; This function calls:
  6807 ;;		i1_writeEEPROM
  6808 ;; This function is called by:
  6809 ;;		_time
  6810 ;; This function uses a non-reentrant model
  6811 ;;
  6812                           
  6813                           
  6814                           ;psect for function i1_setData
  6815  0FA5                     i1_setData:	
  6816                           
  6817                           ;incstack = 0
  6818 ;; hardware stack exceeded
  6819                           ; Regs used in i1_setData: [wreg+status,2+status,0+pclath+cstack]
  6820                           ;i1setData@full stored from wreg
  6821  0FA5  00F5               	movwf	i1setData@full
  6822                           
  6823                           ;eeprom.c: 45:     unsigned char data0 = frequency & 0x00FF;
  6824  0FA6  1283               	bcf	3,5	;RP0=0, select bank0
  6825  0FA7  1303               	bcf	3,6	;RP1=0, select bank0
  6826  0FA8  0844               	movf	_frequency,w
  6827  0FA9  00F2               	movwf	??i1_setData
  6828  0FAA  0872               	movf	??i1_setData,w
  6829  0FAB  00F3               	movwf	i1setData@data0
  6830                           
  6831                           ;eeprom.c: 46:     unsigned char data1 = frequency >> 8;
  6832  0FAC  0845               	movf	_frequency+1,w
  6833  0FAD  00F2               	movwf	??i1_setData
  6834  0FAE  0872               	movf	??i1_setData,w
  6835  0FAF  00F4               	movwf	i1setData@data1
  6836                           
  6837                           ;eeprom.c: 47:     if(full)writeEEPROM(data0 ,0);
  6838  0FB0  0875               	movf	i1setData@full,w
  6839  0FB1  1903               	btfsc	3,2
  6840  0FB2  2FBA               	goto	i1l2762
  6841  0FB3  01F0               	clrf	i1writeEEPROM@address
  6842  0FB4  0873               	movf	i1setData@data0,w
  6843  0FB5  120A  158A  2307  120A  158A  	fcall	i1_writeEEPROM
  6844  0FBA                     i1l2762:	
  6845                           
  6846                           ;eeprom.c: 48:     if(full)writeEEPROM(data1 ,1);
  6847  0FBA  0875               	movf	i1setData@full,w
  6848  0FBB  1903               	btfsc	3,2
  6849  0FBC  2FC5               	goto	i1l68
  6850  0FBD  01F0               	clrf	i1writeEEPROM@address
  6851  0FBE  0AF0               	incf	i1writeEEPROM@address,f
  6852  0FBF  0874               	movf	i1setData@data1,w
  6853  0FC0  120A  158A  2307  120A  158A  	fcall	i1_writeEEPROM
  6854  0FC5                     i1l68:	
  6855                           
  6856                           ;eeprom.c: 49:     writeEEPROM(months ,2);
  6857  0FC5  3002               	movlw	2
  6858  0FC6  00F2               	movwf	??i1_setData
  6859  0FC7  0872               	movf	??i1_setData,w
  6860  0FC8  00F0               	movwf	i1writeEEPROM@address
  6861  0FC9  1283               	bcf	3,5	;RP0=0, select bank0
  6862  0FCA  1303               	bcf	3,6	;RP1=0, select bank0
  6863  0FCB  0850               	movf	_months,w
  6864  0FCC  120A  158A  2307  120A  158A  	fcall	i1_writeEEPROM
  6865                           
  6866                           ;eeprom.c: 50:     writeEEPROM(days ,3);
  6867  0FD1  3003               	movlw	3
  6868  0FD2  00F2               	movwf	??i1_setData
  6869  0FD3  0872               	movf	??i1_setData,w
  6870  0FD4  00F0               	movwf	i1writeEEPROM@address
  6871  0FD5  1283               	bcf	3,5	;RP0=0, select bank0
  6872  0FD6  1303               	bcf	3,6	;RP1=0, select bank0
  6873  0FD7  084F               	movf	_days,w
  6874  0FD8  120A  158A  2307  120A  158A  	fcall	i1_writeEEPROM
  6875                           
  6876                           ;eeprom.c: 51:     writeEEPROM(hours ,4);
  6877  0FDD  3004               	movlw	4
  6878  0FDE  00F2               	movwf	??i1_setData
  6879  0FDF  0872               	movf	??i1_setData,w
  6880  0FE0  00F0               	movwf	i1writeEEPROM@address
  6881  0FE1  1283               	bcf	3,5	;RP0=0, select bank0
  6882  0FE2  1303               	bcf	3,6	;RP1=0, select bank0
  6883  0FE3  084E               	movf	_hours,w
  6884  0FE4  120A  158A  2307  120A  158A  	fcall	i1_writeEEPROM
  6885                           
  6886                           ;eeprom.c: 52:     writeEEPROM(minutes ,5);
  6887  0FE9  3005               	movlw	5
  6888  0FEA  00F2               	movwf	??i1_setData
  6889  0FEB  0872               	movf	??i1_setData,w
  6890  0FEC  00F0               	movwf	i1writeEEPROM@address
  6891  0FED  1283               	bcf	3,5	;RP0=0, select bank0
  6892  0FEE  1303               	bcf	3,6	;RP1=0, select bank0
  6893  0FEF  084D               	movf	_minutes,w
  6894  0FF0  120A  158A  2307  120A  158A  	fcall	i1_writeEEPROM
  6895                           
  6896                           ;eeprom.c: 53:     writeEEPROM(functionalStat ,6);
  6897  0FF5  3006               	movlw	6
  6898  0FF6  00F2               	movwf	??i1_setData
  6899  0FF7  0872               	movf	??i1_setData,w
  6900  0FF8  00F0               	movwf	i1writeEEPROM@address
  6901  0FF9  1283               	bcf	3,5	;RP0=0, select bank0
  6902  0FFA  1303               	bcf	3,6	;RP1=0, select bank0
  6903  0FFB  0848               	movf	_functionalStat,w
  6904  0FFC  120A  158A  2307   	fcall	i1_writeEEPROM
  6905  0FFF  0008               	return
  6906  1000                     __end_ofi1_setData:	
  6907                           
  6908                           	psect	text41
  6909  0B07                     __ptext41:	
  6910 ;; *************** function i1_writeEEPROM *****************
  6911 ;; Defined at:
  6912 ;;		line 14 in file "eeprom.c"
  6913 ;; Parameters:    Size  Location     Type
  6914 ;;  data            1    wreg     unsigned char 
  6915 ;;  address         1    0[COMMON] unsigned char 
  6916 ;; Auto vars:     Size  Location     Type
  6917 ;;  data            1    1[COMMON] unsigned char 
  6918 ;; Return value:  Size  Location     Type
  6919 ;;                  1    wreg      void 
  6920 ;; Registers used:
  6921 ;;		wreg
  6922 ;; Tracked objects:
  6923 ;;		On entry : 0/0
  6924 ;;		On exit  : 0/0
  6925 ;;		Unchanged: 0/0
  6926 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6927 ;;      Params:         1       0       0       0       0
  6928 ;;      Locals:         1       0       0       0       0
  6929 ;;      Temps:          0       0       0       0       0
  6930 ;;      Totals:         2       0       0       0       0
  6931 ;;Total ram usage:        2 bytes
  6932 ;; Hardware stack levels used:    1
  6933 ;; This function calls:
  6934 ;;		Nothing
  6935 ;; This function is called by:
  6936 ;;		i1_setData
  6937 ;; This function uses a non-reentrant model
  6938 ;;
  6939                           
  6940                           
  6941                           ;psect for function i1_writeEEPROM
  6942  0B07                     i1_writeEEPROM:	
  6943                           
  6944                           ;incstack = 0
  6945 ;; hardware stack exceeded
  6946                           ; Regs used in i1_writeEEPROM: [wreg]
  6947                           ;i1writeEEPROM@data stored from wreg
  6948  0B07  00F1               	movwf	i1writeEEPROM@data
  6949                           
  6950                           ;eeprom.c: 15:     EEADR = address;
  6951  0B08  0870               	movf	i1writeEEPROM@address,w
  6952  0B09  1283               	bcf	3,5	;RP0=0, select bank2
  6953  0B0A  1703               	bsf	3,6	;RP1=1, select bank2
  6954  0B0B  008D               	movwf	13	;volatile
  6955                           
  6956                           ;eeprom.c: 16:     EEDATA = data;
  6957  0B0C  0871               	movf	i1writeEEPROM@data,w
  6958  0B0D  008C               	movwf	12	;volatile
  6959                           
  6960                           ;eeprom.c: 18:     EECON1bits.EEPGD = 0;
  6961  0B0E  1683               	bsf	3,5	;RP0=1, select bank3
  6962  0B0F  1703               	bsf	3,6	;RP1=1, select bank3
  6963  0B10  138C               	bcf	12,7	;volsfr
  6964                           
  6965                           ;eeprom.c: 19:     EECON1bits.WREN = 1;
  6966  0B11  150C               	bsf	12,2	;volsfr
  6967                           
  6968                           ;eeprom.c: 21:     INTCONbits.GIE = 0;
  6969  0B12  138B               	bcf	11,7	;volatile
  6970                           
  6971                           ;eeprom.c: 22:     EECON2 = 0x55;
  6972  0B13  3055               	movlw	85
  6973  0B14  008D               	movwf	13	;volsfr
  6974                           
  6975                           ;eeprom.c: 23:     EECON2 = 0xAA;
  6976  0B15  30AA               	movlw	170
  6977  0B16  008D               	movwf	13	;volsfr
  6978                           
  6979                           ;eeprom.c: 24:     EECON1bits.WR = 1;
  6980  0B17  148C               	bsf	12,1	;volsfr
  6981                           
  6982                           ;eeprom.c: 25:     INTCONbits.GIE = 1;
  6983  0B18  178B               	bsf	11,7	;volatile
  6984  0B19                     i1l58:	
  6985                           ;eeprom.c: 27:     while(PIR2bits.EEIF == 0) continue;
  6986                           
  6987  0B19  1283               	bcf	3,5	;RP0=0, select bank0
  6988  0B1A  1303               	bcf	3,6	;RP1=0, select bank0
  6989  0B1B  1A0D               	btfsc	13,4	;volatile
  6990  0B1C  0008               	return
  6991  0B1D  2B19               	goto	i1l58
  6992  0B1E                     __end_ofi1_writeEEPROM:	
  6993  007E                     btemp	set	126	;btemp
  6994  007E                     wtemp0	set	126


Data Sizes:
    Strings     86
    Constant    14
    Data        7
    BSS         42
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     36      51
    BANK1            80     34      68
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 18
		 -> STR_5(CODE[18]), STR_4(CODE[17]), STR_3(CODE[17]), STR_2(CODE[17]), 
		 -> STR_1(CODE[17]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 17
		 -> lineTwo(BANK1[17]), lineOne(BANK1[17]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK1[2]), 

    putsXLCD@buffer	PTR unsigned char  size(1) Largest target is 17
		 -> lineTwo(BANK1[17]), lineOne(BANK1[17]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _inter in COMMON

    i1_updateLCD->i1___lwmod
    i1_sprintf->i1___lwmod
    i1___lwmod->i1___lwdiv
    i1_putsXLCD->i1_WriteDataXLCD
    i1_WriteDataXLCD->i1_DelayFor18TCY
    i1_SetDDRamAddr->i1_DelayFor18TCY
    _time->i1_setData
    i1_setData->i1_writeEEPROM

Critical Paths under _main in BANK0

    _main->_beep
    _main->_getData
    _updateLCD->___lwmod
    _putsXLCD->_WriteDataXLCD
    _WriteDataXLCD->_DelayFor18TCY
    _setFrequency->_beep
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _setData->_writeEEPROM
    _beep->___wmul
    _getData->_readEEPROM
    _setTransStat->_writeFrequency
    _writeFrequency->_codFreq
    _initLCD->_OpenXLCD
    _SendCMDLCD->_WriteCmdXLCD
    _OpenXLCD->_SetDDRamAddr
    _OpenXLCD->_WriteCmdXLCD
    _WriteCmdXLCD->_DelayFor18TCY
    _SetDDRamAddr->_DelayFor18TCY

Critical Paths under _inter in BANK0

    _inter->i1_updateLCD
    i1_updateLCD->i1_sprintf

Critical Paths under _main in BANK1

    _main->_updateLCD
    _updateLCD->_sprintf
    _setFrequency->_sprintf
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _config->_setTransStat
    _setTransStat->_writeFrequency

Critical Paths under _inter in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _inter in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _inter in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0   18755
                                             31 BANK1      3     3      0
                       _SetDDRamAddr
                               _beep
                             _config
                            _getData
                           _putsXLCD
                       _setFrequency
                       _setTransStat
                            _sprintf
                          _updateLCD
                     _writeFrequency
 ---------------------------------------------------------------------------------
 (1) _updateLCD                                            7     7      0    4908
                                             24 BANK1      7     7      0
                       _SetDDRamAddr
                            ___lwdiv
                            ___lwmod
                           _putsXLCD
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _putsXLCD                                             2     2      0     221
                                             33 BANK0      2     2      0
                           _BusyXLCD
                      _WriteDataXLCD
 ---------------------------------------------------------------------------------
 (3) _WriteDataXLCD                                        3     3      0      44
                                             30 BANK0      3     3      0
                      _DelayFor18TCY
 ---------------------------------------------------------------------------------
 (1) _setFrequency                                         3     3      0    5920
                                             24 BANK1      3     3      0
                               _beep
                            _setData
                            _sprintf
                     _writeFrequency
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             25    20      5    3382
                                              7 BANK1     17    12      5
                            ___lwdiv
                            ___lwmod
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (3) _isdigit                                              2     2      0      68
                                             29 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     592
                                             34 BANK0      2     2      0
                                              3 BANK1      4     0      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     601
                                             29 BANK0      5     1      4
                                              0 BANK1      3     3      0
 ---------------------------------------------------------------------------------
 (2) _setData                                              4     4      0     666
                                             31 BANK0      4     4      0
                        _writeEEPROM
 ---------------------------------------------------------------------------------
 (3) _writeEEPROM                                          2     1      1     576
                                             29 BANK0      2     1      1
 ---------------------------------------------------------------------------------
 (2) _beep                                                 3     1      2    1125
                                             35 BANK0      1     1      0
                                              0 BANK1      2     0      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     396
                                             29 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) _getData                                              6     6      0      68
                                             30 BANK0      6     6      0
                         _readEEPROM
 ---------------------------------------------------------------------------------
 (2) _readEEPROM                                           1     1      0      22
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _config                                               0     0      0    1224
                            _initLCD
                       _setTransStat
 ---------------------------------------------------------------------------------
 (1) _setTransStat                                         4     2      2    1048
                                              5 BANK1      4     2      2
                     _writeFrequency
 ---------------------------------------------------------------------------------
 (1) _writeFrequency                                       9     7      2     747
                                             31 BANK0      4     2      2
                                              0 BANK1      5     5      0
                            _codFreq
 ---------------------------------------------------------------------------------
 (2) _codFreq                                              2     0      2     189
                                             29 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _initLCD                                              2     2      0     176
                                              0 BANK1      2     2      0
                           _OpenXLCD
                         _SendCMDLCD
 ---------------------------------------------------------------------------------
 (3) _SendCMDLCD                                           1     1      0      66
                                             33 BANK0      1     1      0
                           _BusyXLCD
                       _WriteCmdXLCD
 ---------------------------------------------------------------------------------
 (3) _OpenXLCD                                             3     3      0     110
                                             33 BANK0      3     3      0
                           _BusyXLCD
                       _DelayPORXLCD
                       _SetDDRamAddr
                       _WriteCmdXLCD
 ---------------------------------------------------------------------------------
 (4) _WriteCmdXLCD                                         3     3      0      44
                                             30 BANK0      3     3      0
                      _DelayFor18TCY
 ---------------------------------------------------------------------------------
 (2) _SetDDRamAddr                                         3     3      0      44
                                             30 BANK0      3     3      0
                      _DelayFor18TCY
 ---------------------------------------------------------------------------------
 (4) _DelayFor18TCY                                        1     1      0       0
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _DelayPORXLCD                                         2     2      0       0
                                             29 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (3) _BusyXLCD                                             2     2      0       0
                                             29 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _inter                                                5     5      0    2541
                                             24 BANK0      5     5      0
                               _time
                        i1_updateLCD
 ---------------------------------------------------------------------------------
 (7) i1_updateLCD                                          7     7      0    2225
                                             17 BANK0      7     7      0
                     i1_SetDDRamAddr
                          i1___lwdiv
                          i1___lwmod
                         i1_putsXLCD
                          i1_sprintf
 ---------------------------------------------------------------------------------
 (8) i1_sprintf                                           25    20      5    1517
                                              0 BANK0     17    12      5
                          i1___lwdiv
                          i1___lwmod
                           i1___wmul
                          i1_isdigit
 ---------------------------------------------------------------------------------
 (9) i1_isdigit                                            2     2      0      68
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (9) i1___wmul                                             6     2      4     144
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (9) i1___lwmod                                            6     2      4     263
                                              8 COMMON     6     2      4
                          i1___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (9) i1___lwdiv                                            8     4      4     266
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (8) i1_putsXLCD                                           2     2      0      89
                                              4 COMMON     2     2      0
                         i1_BusyXLCD
                    i1_WriteDataXLCD
 ---------------------------------------------------------------------------------
 (9) i1_WriteDataXLCD                                      3     3      0      44
                                              1 COMMON     3     3      0
                    i1_DelayFor18TCY
 ---------------------------------------------------------------------------------
 (9) i1_BusyXLCD                                           2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (8) i1_SetDDRamAddr                                       3     3      0      44
                                              1 COMMON     3     3      0
                    i1_DelayFor18TCY
 ---------------------------------------------------------------------------------
 (10) i1_DelayFor18TCY                                     1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (7) _time                                                 1     1      0     316
                                              6 COMMON     1     1      0
                          i1_setData
 ---------------------------------------------------------------------------------
 (8) i1_setData                                            4     4      0     316
                                              2 COMMON     4     4      0
                      i1_writeEEPROM
 ---------------------------------------------------------------------------------
 (9) i1_writeEEPROM                                        2     1      1     226
                                              0 COMMON     2     1      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SetDDRamAddr
     _DelayFor18TCY
   _beep
     ___wmul
   _config
     _initLCD
       _OpenXLCD
         _BusyXLCD
         _DelayPORXLCD
         _SetDDRamAddr
           _DelayFor18TCY
         _WriteCmdXLCD
           _DelayFor18TCY
       _SendCMDLCD
         _BusyXLCD
         _WriteCmdXLCD
           _DelayFor18TCY
     _setTransStat
       _writeFrequency
         _codFreq
   _getData
     _readEEPROM
   _putsXLCD
     _BusyXLCD
     _WriteDataXLCD
       _DelayFor18TCY
   _setFrequency
     _beep
       ___wmul
     _setData
       _writeEEPROM
     _sprintf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
       ___wmul
       _isdigit
     _writeFrequency
       _codFreq
   _setTransStat
     _writeFrequency
       _codFreq
   _sprintf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)
     ___wmul
     _isdigit
   _updateLCD
     _SetDDRamAddr
       _DelayFor18TCY
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)
     _putsXLCD
       _BusyXLCD
       _WriteDataXLCD
         _DelayFor18TCY
     _sprintf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
       ___wmul
       _isdigit
   _writeFrequency
     _codFreq

 _inter (ROOT)
   _time
     i1_setData
       i1_writeEEPROM
   i1_updateLCD
     i1_SetDDRamAddr
       i1_DelayFor18TCY
     i1___lwdiv
     i1___lwmod
       i1___lwdiv (ARG)
     i1_putsXLCD
       i1_BusyXLCD
       i1_WriteDataXLCD
         i1_DelayFor18TCY
     i1_sprintf
       i1___lwdiv
       i1___lwmod
         i1___lwdiv (ARG)
       i1___wmul
       i1_isdigit

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50     22      44       7       85.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     24      33       5       63.8%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      85      12        0.0%
ABS                  0      0      85       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Wed Aug 21 14:06:21 2019

              __CFG_CP$ON 0000          ??i1_SetDDRamAddr 0071                         pc 0002  
              _UN_BLOCKED 064F                        l58 0B53                        l68 072C  
             __CFG_CPD$ON 0000       __end_ofi1_updateLCD 0F4E                        fsr 0004  
     ___wmul@multiplicand 003F          i1___wmul@product 0074                       l221 0340  
                     l230 0388                       l231 0393                       l224 0344  
                     l233 03F8                       l225 039E                       l234 03AD  
                     l226 0353                       l238 03E2                       l239 03ED  
                     l248 0C8D                       l506 060E                       l633 0B85  
                     l618 0120                       fsr0 0004                       indf 0000  
   __size_of_WriteCmdXLCD 004D           __end_of_BLOCKED 0651              __CFG_FOSC$XT 0000  
            __CFG_LVP$OFF 0000                      l2402 0AF8                      l2340 0546  
                    l2420 0B7D                      l2350 056C                      l2342 054E  
                    l2414 0AE2                      l3320 0F8A                      l3312 0F5C  
                    l2370 05B2                      l2362 0596                      l2354 057A  
                    l2346 055E                      l2610 071F                      l3314 0F6E  
                    l3410 0112                      l3324 0F98                      l3420 0139  
                    l3404 00F1                      l2366 05A4                      l2358 0588  
                    l3342 0CD1                      l3422 013D                      l3352 0D9B  
                    l3336 0CAF                      l3282 05E4                      l3338 0CC1  
                    l3346 0CDE                      l3442 0165                      l3434 0161  
                    l3418 0135                      l3370 005C                      l3514 035E  
                    l2722 0BA5                      l3428 0152                      l3444 003C  
                    l3532 03B8                      l3524 0377                      l3604 0490  
                    l3286 0611                      l3446 01B8                      l3542 03D1  
                    l3622 04E5                      l3376 0071                      l2728 0B9F  
                    l3386 00B9                      l3626 04F1                      l3388 00D8  
                    l3398 00EF                      l3670 00CD                      l3592 046F  
                    STR_1 0663                      STR_2 0696                      STR_3 0685  
                    STR_4 0674                      STR_5 0651                      u1305 0ED7  
                    u1315 0E3C                      u1505 0B86                      u1515 0B8D  
                    u3107 0433                      u3117 0461                      u3207 0DAD  
                    u1455 0E89                      u3127 0475                      u3217 0DB7  
                    u3137 04C6                      u3307 052D                      u3227 0C7F  
                    u3147 0501                      u3317 053C                      u3237 0C97  
                    u3157 0371                      u3327 0A79                      u3247 05DD  
                    u3167 0399                      _PIE1 008C                      u3337 0AA4  
                    u3257 0615                      u2705 0CB4                      u3177 03CB  
                    u3347 0AB0                      u3267 0620                      u2635 0F61  
                    u3187 03F3                      u3277 0635                      u2725 0CC9  
                    u2805 0108                      u3197 0402                      u3287 0BCB  
                    u2655 0F71                      u2735 0CD2                      u3297 0BE1  
                    u2665 0F7F                      u2594 05F7                      u2595 05F2  
                    u2755 0DA4                      u2675 0F8C                      u2845 0127  
                    i1l58 0B19                      i1l68 0FC5              __CFG_WRT$OFF 0000  
            _stereoEnable 004C                      _beep 0D78                      _days 004F  
                    _main 042A                      _time 0CE5                      btemp 007E  
  __size_of_WriteDataXLCD 004D                      start 0012         ??i1_WriteDataXLCD 0071  
           __CFG_IESO$OFF 0000             __CFG_MCLRE$ON 0000                i1_putsXLCD 0B1E  
             _writeEEPROM 0B3B              _WriteCmdXLCD 0E0F          ??_writeFrequency 0041  
                   ?_beep 00C2        writeEEPROM@address 003D             ?_SetDDRamAddr 0070  
                   ?_main 0070                     _EEADR 010D             __CFG_WDTE$OFF 0000  
                   ?_time 0070                     _ANSEL 0188                     _T1CON 0010  
         __end_of___lwdiv 0FA5                     i1l211 0D2A           __end_of___lwmod 0CE5  
                   i1l633 0B62                     i1l618 029A                     _TMR1H 000F  
                   _TMR1L 000E                     _PORTA 0005                     _PORTB 0006  
                   _PORTC 0007                     _TRISA 0085                     _TRISB 0086  
                   _TRISC 0087           __end_of_codFreq 0A94                i1isdigit@c 0071  
         __end_of_getData 07C4            __CFG_FCMEN$OFF 0000        i1___lwmod@dividend 007A  
         __end_of_initLCD 0BE7               ?i1_BusyXLCD 0070           __end_of_dpowers 064D  
    writeFrequency@buffer 00C2                     _level 0046                     _inter 0BE7  
         __end_of_isdigit 0AE4                     _hours 004E           __end_of_setData 0767  
                   main@i 00E3            __CFG_BOREN$OFF 0000                     pclath 000A  
        __end_ofi1___wmul 0B79                     status 0003       i1___wmul@multiplier 0070  
                   wtemp0 007E           __end_of_sprintf 01BD        __size_ofi1___lwdiv 003C  
      __size_ofi1___lwmod 0032               i1_updateLCD 0EF7           __initialization 0015  
   __end_ofi1_writeEEPROM 0B1E         __end_of_FINAL_DAY 064E              __end_of_beep 0DC3  
            __end_of_main 0507              __end_of_time 0D2D          __end_of_BusyXLCD 0AB7  
      __size_ofi1_isdigit 000E        __size_ofi1_setData 005B     __size_of_DelayPORXLCD 000C  
              i1sprintf@c 0030                i1sprintf@f 0020            ??_SetDDRamAddr 003E  
              _SendCMDLCD 0AF5                    ??_beep 0043          __end_of_OpenXLCD 05BF  
                  ??_main 00E1                    ??_time 0076        __size_ofi1_sprintf 0168  
           _WriteDataXLCD 0E5C  __size_ofi1_DelayFor18TCY 0006        _hundredMiliSeconds 0049  
                  _ADCON0 001F                    _ADCON1 009F                    ?_inter 0070  
                  _EEDATA 010C                    _EECON2 018D                    _ANSELH 0189  
                  i1l3040 0D20                    i1l3132 0C03                    i1l3134 0C06  
                  i1l2522 0B5A                    i1l2800 0B1F                    i1l2552 07F0  
                  i1l2544 07CC                    i1l2546 07DA                    i1l2570 0C51  
                  i1l2810 01E4                    i1l2556 07FB                    i1l2574 0C5F  
                  i1l2590 0AC3                    i1l2568 0C43                    i1l2816 01F9  
                  i1l2762 0FBA                    i1l2578 0C6A                    i1l2850 028C  
                  i1l2826 0233                    i1l2860 02B3                    i1l2844 026B  
                  i1l2828 0252                    i1l2862 02B7                    i1l2838 0269  
                  i1l3672 0247                    i1l2794 0B25                    i1l2882 02DF  
                  i1l2874 02DB                    i1l2858 02AF                    i1l2868 02CC  
                  i1l2884 01C4                    u220_25 02A1                    i1l2886 0320  
                  u216_25 0282                    _INTCON 000B                    u209_25 0DEF  
                  u170_25 0B6A                    u180_25 0C46                    u173_25 07CF  
                  u182_25 0C57                    u167_25 0D58                    u175_25 07DB  
                  u183_25 0C60                    u335_27 0A98                    u176_25 07E7  
                  u336_27 0A71                    u177_25 07F1                    u169_25 0B63  
           i1sprintf@flag 002A             i1sprintf@prec 0029            __CFG_PWRTE$OFF 0000  
            _DelayPORXLCD 0A9E               ?i1_putsXLCD 0070                    ___wmul 0B79  
               ??___lwdiv 0041       __size_ofi1_BusyXLCD 000A                    beep@ms 00C2  
               ??___lwmod 0042                    _config 0C12                 ??_codFreq 003F  
               ??_getData 003E                    _months 0050            ?_WriteDataXLCD 0070  
               ??_initLCD 00C2         __end_ofi1___lwdiv 0800         __end_ofi1___lwmod 0C6F  
               ??_isdigit 003D                 ??_setData 003F                    saved_w 007E  
        __end_of_putsXLCD 0BBF                 ??_sprintf 00CE         __end_ofi1_isdigit 0AC5  
       __end_ofi1_setData 1000   __end_of__initialization 0031         __end_ofi1_sprintf 0325  
         writeEEPROM@data 003E            __pcstackCOMMON 0070              __pidataBANK0 0A7C  
           __end_of_inter 0C12               ?_SendCMDLCD 0070                 ?i1___wmul 0070  
    i1SetDDRamAddr@DDaddr 0073               setData@full 0042               i1sprintf@ap 0028  
             i1sprintf@sp 002D           i1_WriteDataXLCD 0D2D       __size_ofi1_putsXLCD 001D  
                 ??_inter 0038    __size_of_DelayFor18TCY 0007              sprintf@width 00D6  
       ??i1_DelayFor18TCY 0070             ?_setFrequency 0070                __pbssBANK0 0044  
              __pbssBANK1 00A0                 ?_BusyXLCD 0070           WriteCmdXLCD@cmd 0040  
    __end_of_SetDDRamAddr 0EF7                 ?_OpenXLCD 0070                __pmaintext 042A  
            ?_writeEEPROM 003D         WriteDataXLCD@data 0040                   ?___wmul 003D  
              __pintentry 0004                   ?_config 0070           ??_WriteDataXLCD 003E  
                 _BLOCKED 0650            updateLCD@decim 00DF                ??i1___wmul 0074  
          updateLCD@integ 00E0                _isOnConfig 0047             ?_setTransStat 00C7  
      __size_of_updateLCD 0063              ??i1_BusyXLCD 0070            ??_setFrequency 00DA  
              __stringtab 063D                ??_BusyXLCD 003D            i1sprintf@width 002E  
              _readEEPROM 0AC5       __size_of_SendCMDLCD 0012                ??_OpenXLCD 0041  
            ?i1_updateLCD 0070             _DelayFor18TCY 0A75           __size_of___wmul 0023  
               ?_putsXLCD 0070                   ___lwdiv 0F4E                   ___lwmod 0CA5  
         __size_of_config 002B        __end_ofi1_BusyXLCD 0A9E                 _FINAL_DAY 064D  
                 _codFreq 0A8B                   _getData 0767                   __ptext1 06A7  
                 __ptext2 0B9C                   __ptext3 0E5C                   __ptext4 0325  
                 __ptext5 0035                   __ptext6 0AD4                   __ptext7 0CA5  
                 __ptext8 0F4E                   __ptext9 070A                   _cntTmr1 004B  
 __end_ofi1_WriteDataXLCD 0D78                   _initLCD 0BBF                 _T1CONbits 0010  
          ??_setTransStat 00C9                   _dpowers 0643         i1___lwdiv@divisor 0070  
                 _lineOne 00B1                   _lineTwo 00A0                   _isdigit 0AD4  
       i1___lwdiv@counter 0077                   _prTmr1H 0051                   _prTmr1L 0052  
                 _setData 070A                   _minutes 004D   __size_ofi1_SetDDRamAddr 004C  
                 _seconds 004A                   _sprintf 0035                   clrloop0 0A84  
    end_of_initialization 0031        __end_of_UN_BLOCKED 0650              ??i1_putsXLCD 0074  
       __end_of_updateLCD 070A            ?_DelayFor18TCY 0070                ??_putsXLCD 0041  
   i1___wmul@multiplicand 0072                 _PORTAbits 0005                 _PORTBbits 0006  
               _PORTCbits 0007                 _TRISBbits 0086   __size_of_writeFrequency 007E  
   __size_of_SetDDRamAddr 004E                 i1___lwdiv 07C4                 i1___lwmod 0C3D  
  __size_ofi1_writeEEPROM 0017         readEEPROM@address 003D        __end_ofi1_putsXLCD 0B3B  
             ?_readEEPROM 0070                 i1_isdigit 0AB7                 i1_setData 0FA5  
               i1_sprintf 01BD       __end_of_FINAL_MONTH 064F      __size_of_writeEEPROM 001D  
    __end_of_setFrequency 042A            __end_of___wmul 0B9C              ??_SendCMDLCD 0041  
          __end_of_config 0C3D         i1___lwmod@divisor 0078         i1___lwmod@counter 007D  
            _SetDDRamAddr 0EA9           i1_DelayFor18TCY 0A6F          ?i1_WriteDataXLCD 0070  
      SetDDRamAddr@DDaddr 0040       start_initialization 0015         __size_ofi1___wmul 0021  
              ?i1___lwdiv 0070                ?i1___lwmod 0078         __size_of_BusyXLCD 000D  
              ?i1_isdigit 0070              setData@data0 0040              setData@data1 0041  
              ?i1_setData 0070        __end_of_SendCMDLCD 0B07      __end_of_setTransStat 0CA5  
            i1sprintf@val 002B           ??_DelayFor18TCY 003D         __size_of_OpenXLCD 00B8  
              ?i1_sprintf 0020             i1_writeEEPROM 0B07                  ??___wmul 0041  
    __size_ofi1_updateLCD 0057                init_fetch0 0AE4             ?_WriteCmdXLCD 0070  
                ??_config 0044               __pdataBANK0 004C       __size_of_readEEPROM 000F  
          i1_SetDDRamAddr 0DC3                 ___latbits 0002             __pcstackBANK0 0020  
           __pcstackBANK1 00C2              _isdigit$1068 003D          i1updateLCD@decim 0036  
        i1updateLCD@integ 0037               sprintf@flag 00D3               sprintf@prec 00D2  
             _FINAL_MONTH 064E            putsXLCD@buffer 0042            i1setData@data0 0073  
          i1setData@data1 0074          ___lwdiv@dividend 003F            ?i1_writeEEPROM 0070  
 __end_ofi1_DelayFor18TCY 0A75            ??_WriteCmdXLCD 003E                  ?___lwdiv 003D  
                ?___lwmod 00C5                  ?_codFreq 003D                  ?_getData 0070  
           SendCMDLCD@CMD 0041                 __pstrings 063D         __size_of_putsXLCD 0023  
   __end_of_WriteDataXLCD 0EA9    __end_ofi1_SetDDRamAddr 0E0F                  ?_initLCD 0070  
                ?_isdigit 0070                  ?_setData 0070            _writeFrequency 05BF  
               _frequency 0044       i1WriteDataXLCD@data 0073          ___lwdiv@quotient 00C3  
             ??i1___lwdiv 0074               ??i1___lwmod 007C                  ?_sprintf 00C9  
          __size_of_inter 002B            i1_isdigit$1068 0070         interrupt_function 0004  
          ___wmul@product 0041               ??i1_isdigit 0070                 clear_ram0 0A83  
             ??i1_setData 0072             ?_DelayPORXLCD 0070     __size_of_setFrequency 0105  
                _PIR1bits 000C           OpenXLCD@lcdtype 0043                  _PIR2bits 000D  
        setTransStat@stat 00C7               ??i1_sprintf 0025                 _updateLCD 06A7  
          _functionalStat 0048               __stringbase 0642         ___wmul@multiplier 003D  
                i1___wmul 0B58           ?i1_SetDDRamAddr 0070    __end_of_writeFrequency 063D  
            _setFrequency 0325                  _BusyXLCD 0AAA     __size_of_setTransStat 0036  
            ??_readEEPROM 003D            ??_DelayPORXLCD 003D                _EECON1bits 018C  
                _OpenXLCD 0507           ??i1_writeEEPROM 0071          ?i1_DelayFor18TCY 0070  
              ?_updateLCD 0070          __size_of___lwdiv 0057          __size_of___lwmod 0040  
    i1writeEEPROM@address 0070        __end_of__stringtab 0643          __size_of_codFreq 0009  
        __size_of_getData 005D           ?_writeFrequency 003F                sprintf@val 00D4  
        __size_of_initLCD 0028        __end_of_readEEPROM 0AD4              _setTransStat 0C6F  
        __size_of_isdigit 0010           ___lwdiv@divisor 003D          __size_of_setData 005D  
           i1setData@full 0075           ___lwdiv@counter 00C2                  __ptext10 0B3B  
                __ptext11 0D78                  __ptext20 0AF5                  __ptext12 0B79  
                __ptext21 0507                  __ptext13 0767                  __ptext30 0AB7  
                __ptext22 0E0F                  __ptext14 0AC5                  __ptext31 0B58  
                __ptext23 0EA9                  __ptext15 0C12                  __ptext40 0FA5  
                __ptext32 0C3D                  __ptext24 0A75                  __ptext16 0C6F  
                __ptext41 0B07                  __ptext33 07C4                  __ptext25 0A9E  
                __ptext17 05BF                  __ptext34 0B1E                  __ptext26 0AAA  
                __ptext18 0A8B                  __ptext35 0D2D                  __ptext27 0BE7  
                __ptext19 0BBF                  __ptext36 0A94                  __ptext28 0EF7  
                __ptext37 0DC3                  __ptext29 01BD                  __ptext38 0A6F  
                __ptext39 0CE5         __CFG_BOR4V$BOR40V 0000      __end_of_WriteCmdXLCD 0E5C  
        __size_of_sprintf 0188        i1___lwdiv@dividend 0072             __size_of_beep 004B  
       i1writeEEPROM@data 0071                  codFreq@f 003D             __size_of_main 00DD  
           __size_of_time 0048             ??_writeEEPROM 003E                  _putsXLCD 0B9C  
         writeFrequency@f 003F           writeFrequency@i 00C6           writeFrequency@r 00C4  
      i1___lwdiv@quotient 0075               getData@aux0 0042               getData@aux1 0043  
              _INTCONbits 000B                  init_ram0 0AE8                  isdigit@c 003E  
__size_ofi1_WriteDataXLCD 004B                  intlevel1 0000                 sprintf@ap 00D1  
               sprintf@sp 00D8          ___lwmod@dividend 00C7             ??i1_updateLCD 0031  
               stringcode 063D     __end_of_DelayFor18TCY 0A7C               ??_updateLCD 00DA  
     __end_of_writeEEPROM 0B58                  sprintf@c 00D9                  sprintf@f 00C9  
    __end_of_DelayPORXLCD 0AAA          i1putsXLCD@buffer 0075           ___lwmod@divisor 00C5  
         ___lwmod@counter 0043                  stringdir 063D                  stringtab 063D  
              i1_BusyXLCD 0A94  
