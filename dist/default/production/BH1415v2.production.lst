

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Wed Sep 18 09:59:58 2019

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F886
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	eeprom_data,global,class=EEDATA,space=3,delta=2
     5                           	psect	idataBANK0,global,class=CODE,delta=2
     6                           	psect	strings,global,class=STRING,delta=2
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	inittext,global,class=CODE,delta=2
    12                           	psect	clrtext,global,class=CODE,delta=2
    13                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    14                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    16                           	psect	maintext,global,class=CODE,split=1,delta=2
    17                           	psect	text1,local,class=CODE,merge=1,delta=2
    18                           	psect	text2,local,class=CODE,merge=1,delta=2
    19                           	psect	text3,local,class=CODE,merge=1,delta=2
    20                           	psect	text4,local,class=CODE,merge=1,delta=2
    21                           	psect	text5,local,class=CODE,merge=1,delta=2
    22                           	psect	text6,local,class=CODE,merge=1,delta=2
    23                           	psect	text7,local,class=CODE,merge=1,delta=2
    24                           	psect	text8,local,class=CODE,merge=1,delta=2
    25                           	psect	text9,local,class=CODE,merge=1,delta=2
    26                           	psect	text10,local,class=CODE,merge=1,delta=2
    27                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    28                           	psect	text12,local,class=CODE,merge=1,delta=2,group=1
    29                           	psect	text13,local,class=CODE,merge=1,delta=2,group=1
    30                           	psect	text14,local,class=CODE,merge=1,delta=2,group=1
    31                           	psect	text15,local,class=CODE,merge=1,delta=2
    32                           	psect	text16,local,class=CODE,merge=1,delta=2
    33                           	psect	text17,local,class=CODE,merge=1,delta=2
    34                           	psect	text18,local,class=CODE,merge=1,delta=2
    35                           	psect	text19,local,class=CODE,merge=1,delta=2
    36                           	psect	text20,local,class=CODE,merge=1,delta=2
    37                           	psect	text21,local,class=CODE,merge=1,delta=2
    38                           	psect	text22,local,class=CODE,merge=1,delta=2
    39                           	psect	text23,local,class=CODE,merge=1,delta=2
    40                           	psect	text24,local,class=CODE,merge=1,delta=2
    41                           	psect	text25,local,class=CODE,merge=1,delta=2
    42                           	psect	text26,local,class=CODE,merge=1,delta=2
    43                           	psect	text27,local,class=CODE,merge=1,delta=2
    44                           	psect	text28,local,class=CODE,merge=1,delta=2
    45                           	psect	text29,local,class=CODE,merge=1,delta=2
    46                           	psect	text30,local,class=CODE,merge=1,delta=2
    47                           	psect	intentry,global,class=CODE,delta=2
    48                           	psect	text31,local,class=CODE,merge=1,delta=2
    49                           	psect	text32,local,class=CODE,merge=1,delta=2
    50                           	psect	text33,local,class=CODE,merge=1,delta=2
    51                           	psect	text34,local,class=CODE,merge=1,delta=2
    52                           	psect	text35,local,class=CODE,merge=1,delta=2
    53                           	psect	text36,local,class=CODE,merge=1,delta=2
    54                           	psect	text37,local,class=CODE,merge=1,delta=2
    55                           	psect	text38,local,class=CODE,merge=1,delta=2
    56                           	psect	text39,local,class=CODE,merge=1,delta=2
    57                           	psect	text40,local,class=CODE,merge=1,delta=2
    58                           	psect	text41,local,class=CODE,merge=1,delta=2
    59                           	psect	text42,local,class=CODE,merge=1,delta=2
    60                           	psect	text43,local,class=CODE,merge=1,delta=2
    61                           	psect	text44,local,class=CODE,merge=1,delta=2
    62                           	dabs	1,0x7E,2
    63  0000                     
    64                           ; Version 2.10
    65                           ; Generated 31/07/2019 GMT
    66                           ; 
    67                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    68                           ; All rights reserved.
    69                           ; 
    70                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    71                           ; 
    72                           ; Redistribution and use in source and binary forms, with or without modification, are
    73                           ; permitted provided that the following conditions are met:
    74                           ; 
    75                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    76                           ;        conditions and the following disclaimer.
    77                           ; 
    78                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    79                           ;        of conditions and the following disclaimer in the documentation and/or other
    80                           ;        materials provided with the distribution.
    81                           ; 
    82                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    83                           ;        software without specific prior written permission.
    84                           ; 
    85                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    86                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    87                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    88                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    89                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    90                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    91                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    92                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    93                           ; 
    94                           ; 
    95                           ; Code-generator required, PIC16F886 Definitions
    96                           ; 
    97                           ; SFR Addresses
    98  0000                     	;# 
    99  0001                     	;# 
   100  0002                     	;# 
   101  0003                     	;# 
   102  0004                     	;# 
   103  0005                     	;# 
   104  0006                     	;# 
   105  0007                     	;# 
   106  0009                     	;# 
   107  000A                     	;# 
   108  000B                     	;# 
   109  000C                     	;# 
   110  000D                     	;# 
   111  000E                     	;# 
   112  000E                     	;# 
   113  000F                     	;# 
   114  0010                     	;# 
   115  0011                     	;# 
   116  0012                     	;# 
   117  0013                     	;# 
   118  0014                     	;# 
   119  0015                     	;# 
   120  0015                     	;# 
   121  0016                     	;# 
   122  0017                     	;# 
   123  0018                     	;# 
   124  0019                     	;# 
   125  001A                     	;# 
   126  001B                     	;# 
   127  001B                     	;# 
   128  001C                     	;# 
   129  001D                     	;# 
   130  001E                     	;# 
   131  001F                     	;# 
   132  0081                     	;# 
   133  0085                     	;# 
   134  0086                     	;# 
   135  0087                     	;# 
   136  0089                     	;# 
   137  008C                     	;# 
   138  008D                     	;# 
   139  008E                     	;# 
   140  008F                     	;# 
   141  0090                     	;# 
   142  0091                     	;# 
   143  0092                     	;# 
   144  0093                     	;# 
   145  0093                     	;# 
   146  0093                     	;# 
   147  0094                     	;# 
   148  0095                     	;# 
   149  0096                     	;# 
   150  0097                     	;# 
   151  0098                     	;# 
   152  0099                     	;# 
   153  009A                     	;# 
   154  009B                     	;# 
   155  009C                     	;# 
   156  009D                     	;# 
   157  009E                     	;# 
   158  009F                     	;# 
   159  0105                     	;# 
   160  0107                     	;# 
   161  0108                     	;# 
   162  0109                     	;# 
   163  010C                     	;# 
   164  010C                     	;# 
   165  010D                     	;# 
   166  010E                     	;# 
   167  010F                     	;# 
   168  0185                     	;# 
   169  0187                     	;# 
   170  0188                     	;# 
   171  0189                     	;# 
   172  018C                     	;# 
   173  018D                     	;# 
   174                           
   175                           	psect	eeprom_data
   176  0000  00D3 0003 0000 0000 0000 0000 0001 0000 	db	211,3,0,0,0,0,1,0	;# 
   177  0000                     	;# 
   178  0001                     	;# 
   179  0002                     	;# 
   180  0003                     	;# 
   181  0004                     	;# 
   182  0005                     	;# 
   183  0006                     	;# 
   184  0007                     	;# 
   185  0009                     	;# 
   186  000A                     	;# 
   187  000B                     	;# 
   188  000C                     	;# 
   189  000D                     	;# 
   190  000E                     	;# 
   191  000E                     	;# 
   192  000F                     	;# 
   193  0010                     	;# 
   194  0011                     	;# 
   195  0012                     	;# 
   196  0013                     	;# 
   197  0014                     	;# 
   198  0015                     	;# 
   199  0015                     	;# 
   200  0016                     	;# 
   201  0017                     	;# 
   202  0018                     	;# 
   203  0019                     	;# 
   204  001A                     	;# 
   205  001B                     	;# 
   206  001B                     	;# 
   207  001C                     	;# 
   208  001D                     	;# 
   209  001E                     	;# 
   210  001F                     	;# 
   211  0081                     	;# 
   212  0085                     	;# 
   213  0086                     	;# 
   214  0087                     	;# 
   215  0089                     	;# 
   216  008C                     	;# 
   217  008D                     	;# 
   218  008E                     	;# 
   219  008F                     	;# 
   220  0090                     	;# 
   221  0091                     	;# 
   222  0092                     	;# 
   223  0093                     	;# 
   224  0093                     	;# 
   225  0093                     	;# 
   226  0094                     	;# 
   227  0095                     	;# 
   228  0096                     	;# 
   229  0097                     	;# 
   230  0098                     	;# 
   231  0099                     	;# 
   232  009A                     	;# 
   233  009B                     	;# 
   234  009C                     	;# 
   235  009D                     	;# 
   236  009E                     	;# 
   237  009F                     	;# 
   238  0105                     	;# 
   239  0107                     	;# 
   240  0108                     	;# 
   241  0109                     	;# 
   242  010C                     	;# 
   243  010C                     	;# 
   244  010D                     	;# 
   245  010E                     	;# 
   246  010F                     	;# 
   247  0185                     	;# 
   248  0187                     	;# 
   249  0188                     	;# 
   250  0189                     	;# 
   251  018C                     	;# 
   252  018D                     	;# 
   253  0008  00D3 0003 0000 0000 0000 0000 0001 0000 	db	211,3,0,0,0,0,1,0	;# 
   254  0000                     	;# 
   255  0001                     	;# 
   256  0002                     	;# 
   257  0003                     	;# 
   258  0004                     	;# 
   259  0005                     	;# 
   260  0006                     	;# 
   261  0007                     	;# 
   262  0009                     	;# 
   263  000A                     	;# 
   264  000B                     	;# 
   265  000C                     	;# 
   266  000D                     	;# 
   267  000E                     	;# 
   268  000E                     	;# 
   269  000F                     	;# 
   270  0010                     	;# 
   271  0011                     	;# 
   272  0012                     	;# 
   273  0013                     	;# 
   274  0014                     	;# 
   275  0015                     	;# 
   276  0015                     	;# 
   277  0016                     	;# 
   278  0017                     	;# 
   279  0018                     	;# 
   280  0019                     	;# 
   281  001A                     	;# 
   282  001B                     	;# 
   283  001B                     	;# 
   284  001C                     	;# 
   285  001D                     	;# 
   286  001E                     	;# 
   287  001F                     	;# 
   288  0081                     	;# 
   289  0085                     	;# 
   290  0086                     	;# 
   291  0087                     	;# 
   292  0089                     	;# 
   293  008C                     	;# 
   294  008D                     	;# 
   295  008E                     	;# 
   296  008F                     	;# 
   297  0090                     	;# 
   298  0091                     	;# 
   299  0092                     	;# 
   300  0093                     	;# 
   301  0093                     	;# 
   302  0093                     	;# 
   303  0094                     	;# 
   304  0095                     	;# 
   305  0096                     	;# 
   306  0097                     	;# 
   307  0098                     	;# 
   308  0099                     	;# 
   309  009A                     	;# 
   310  009B                     	;# 
   311  009C                     	;# 
   312  009D                     	;# 
   313  009E                     	;# 
   314  009F                     	;# 
   315  0105                     	;# 
   316  0107                     	;# 
   317  0108                     	;# 
   318  0109                     	;# 
   319  010C                     	;# 
   320  010C                     	;# 
   321  010D                     	;# 
   322  010E                     	;# 
   323  010F                     	;# 
   324  0185                     	;# 
   325  0187                     	;# 
   326  0188                     	;# 
   327  0189                     	;# 
   328  018C                     	;# 
   329  018D                     	;# 
   330  0010  00D3 0003 0000 0000 0000 0000 0001 0000 	db	211,3,0,0,0,0,1,0	;# 
   331  0000                     	;# 
   332  0001                     	;# 
   333  0002                     	;# 
   334  0003                     	;# 
   335  0004                     	;# 
   336  0005                     	;# 
   337  0006                     	;# 
   338  0007                     	;# 
   339  0009                     	;# 
   340  000A                     	;# 
   341  000B                     	;# 
   342  000C                     	;# 
   343  000D                     	;# 
   344  000E                     	;# 
   345  000E                     	;# 
   346  000F                     	;# 
   347  0010                     	;# 
   348  0011                     	;# 
   349  0012                     	;# 
   350  0013                     	;# 
   351  0014                     	;# 
   352  0015                     	;# 
   353  0015                     	;# 
   354  0016                     	;# 
   355  0017                     	;# 
   356  0018                     	;# 
   357  0019                     	;# 
   358  001A                     	;# 
   359  001B                     	;# 
   360  001B                     	;# 
   361  001C                     	;# 
   362  001D                     	;# 
   363  001E                     	;# 
   364  001F                     	;# 
   365  0081                     	;# 
   366  0085                     	;# 
   367  0086                     	;# 
   368  0087                     	;# 
   369  0089                     	;# 
   370  008C                     	;# 
   371  008D                     	;# 
   372  008E                     	;# 
   373  008F                     	;# 
   374  0090                     	;# 
   375  0091                     	;# 
   376  0092                     	;# 
   377  0093                     	;# 
   378  0093                     	;# 
   379  0093                     	;# 
   380  0094                     	;# 
   381  0095                     	;# 
   382  0096                     	;# 
   383  0097                     	;# 
   384  0098                     	;# 
   385  0099                     	;# 
   386  009A                     	;# 
   387  009B                     	;# 
   388  009C                     	;# 
   389  009D                     	;# 
   390  009E                     	;# 
   391  009F                     	;# 
   392  0105                     	;# 
   393  0107                     	;# 
   394  0108                     	;# 
   395  0109                     	;# 
   396  010C                     	;# 
   397  010C                     	;# 
   398  010D                     	;# 
   399  010E                     	;# 
   400  010F                     	;# 
   401  0185                     	;# 
   402  0187                     	;# 
   403  0188                     	;# 
   404  0189                     	;# 
   405  018C                     	;# 
   406  018D                     	;# 
   407  0018  00D3 0003 0000 0000 0000 0000 0001 0000 	db	211,3,0,0,0,0,1,0	;# 
   408  0000                     	;# 
   409  0001                     	;# 
   410  0002                     	;# 
   411  0003                     	;# 
   412  0004                     	;# 
   413  0005                     	;# 
   414  0006                     	;# 
   415  0007                     	;# 
   416  0009                     	;# 
   417  000A                     	;# 
   418  000B                     	;# 
   419  000C                     	;# 
   420  000D                     	;# 
   421  000E                     	;# 
   422  000E                     	;# 
   423  000F                     	;# 
   424  0010                     	;# 
   425  0011                     	;# 
   426  0012                     	;# 
   427  0013                     	;# 
   428  0014                     	;# 
   429  0015                     	;# 
   430  0015                     	;# 
   431  0016                     	;# 
   432  0017                     	;# 
   433  0018                     	;# 
   434  0019                     	;# 
   435  001A                     	;# 
   436  001B                     	;# 
   437  001B                     	;# 
   438  001C                     	;# 
   439  001D                     	;# 
   440  001E                     	;# 
   441  001F                     	;# 
   442  0081                     	;# 
   443  0085                     	;# 
   444  0086                     	;# 
   445  0087                     	;# 
   446  0089                     	;# 
   447  008C                     	;# 
   448  008D                     	;# 
   449  008E                     	;# 
   450  008F                     	;# 
   451  0090                     	;# 
   452  0091                     	;# 
   453  0092                     	;# 
   454  0093                     	;# 
   455  0093                     	;# 
   456  0093                     	;# 
   457  0094                     	;# 
   458  0095                     	;# 
   459  0096                     	;# 
   460  0097                     	;# 
   461  0098                     	;# 
   462  0099                     	;# 
   463  009A                     	;# 
   464  009B                     	;# 
   465  009C                     	;# 
   466  009D                     	;# 
   467  009E                     	;# 
   468  009F                     	;# 
   469  0105                     	;# 
   470  0107                     	;# 
   471  0108                     	;# 
   472  0109                     	;# 
   473  010C                     	;# 
   474  010C                     	;# 
   475  010D                     	;# 
   476  010E                     	;# 
   477  010F                     	;# 
   478  0185                     	;# 
   479  0187                     	;# 
   480  0188                     	;# 
   481  0189                     	;# 
   482  018C                     	;# 
   483  018D                     	;# 
   484  0020  00D3 0003 0000 0000 0000 0000 0001 0000 	db	211,3,0,0,0,0,1,0	;# 
   485  0000                     	;# 
   486  0001                     	;# 
   487  0002                     	;# 
   488  0003                     	;# 
   489  0004                     	;# 
   490  0005                     	;# 
   491  0006                     	;# 
   492  0007                     	;# 
   493  0009                     	;# 
   494  000A                     	;# 
   495  000B                     	;# 
   496  000C                     	;# 
   497  000D                     	;# 
   498  000E                     	;# 
   499  000E                     	;# 
   500  000F                     	;# 
   501  0010                     	;# 
   502  0011                     	;# 
   503  0012                     	;# 
   504  0013                     	;# 
   505  0014                     	;# 
   506  0015                     	;# 
   507  0015                     	;# 
   508  0016                     	;# 
   509  0017                     	;# 
   510  0018                     	;# 
   511  0019                     	;# 
   512  001A                     	;# 
   513  001B                     	;# 
   514  001B                     	;# 
   515  001C                     	;# 
   516  001D                     	;# 
   517  001E                     	;# 
   518  001F                     	;# 
   519  0081                     	;# 
   520  0085                     	;# 
   521  0086                     	;# 
   522  0087                     	;# 
   523  0089                     	;# 
   524  008C                     	;# 
   525  008D                     	;# 
   526  008E                     	;# 
   527  008F                     	;# 
   528  0090                     	;# 
   529  0091                     	;# 
   530  0092                     	;# 
   531  0093                     	;# 
   532  0093                     	;# 
   533  0093                     	;# 
   534  0094                     	;# 
   535  0095                     	;# 
   536  0096                     	;# 
   537  0097                     	;# 
   538  0098                     	;# 
   539  0099                     	;# 
   540  009A                     	;# 
   541  009B                     	;# 
   542  009C                     	;# 
   543  009D                     	;# 
   544  009E                     	;# 
   545  009F                     	;# 
   546  0105                     	;# 
   547  0107                     	;# 
   548  0108                     	;# 
   549  0109                     	;# 
   550  010C                     	;# 
   551  010C                     	;# 
   552  010D                     	;# 
   553  010E                     	;# 
   554  010F                     	;# 
   555  0185                     	;# 
   556  0187                     	;# 
   557  0188                     	;# 
   558  0189                     	;# 
   559  018C                     	;# 
   560  018D                     	;# 
   561                           
   562                           	psect	idataBANK0
   563  17B5                     __pidataBANK0:	
   564                           
   565                           ;initializer for _frequency
   566  17B5  346F               	retlw	111
   567  17B6  3400               	retlw	0
   568                           
   569                           ;initializer for _stereoEnable
   570  17B7  3401               	retlw	1
   571                           
   572                           ;initializer for _minutes
   573  17B8  340F               	retlw	15
   574                           
   575                           ;initializer for _hours
   576  17B9  3416               	retlw	22
   577                           
   578                           ;initializer for _days
   579  17BA  3413               	retlw	19
   580                           
   581                           ;initializer for _months
   582  17BB  3403               	retlw	3
   583                           
   584                           ;initializer for _prTmr1H
   585  17BC  343C               	retlw	60
   586                           
   587                           ;initializer for _prTmr1L
   588  17BD  34B0               	retlw	176
   589                           
   590                           	psect	strings
   591  0800                     __pstrings:	
   592  0800                     stringtab:	
   593  0800                     __stringtab:	
   594  0800                     stringcode:	
   595                           ;	String table - string pointers are 1 byte each
   596                           
   597  0800                     stringdir:	
   598  0800  3008               	movlw	high stringdir
   599  0801  008A               	movwf	10
   600  0802  0804               	movf	4,w
   601  0803  0A84               	incf	4,f
   602  0804  0782               	addwf	2,f
   603  0805                     __stringbase:	
   604  0805  3400               	retlw	0
   605  0806                     __end_of__stringtab:	
   606  0806                     _dpowers:	
   607  0806  3401               	retlw	1
   608  0807  3400               	retlw	0
   609  0808  340A               	retlw	10
   610  0809  3400               	retlw	0
   611  080A  3464               	retlw	100
   612  080B  3400               	retlw	0
   613  080C  34E8               	retlw	232
   614  080D  3403               	retlw	3
   615  080E  3410               	retlw	16
   616  080F  3427               	retlw	39
   617  0810                     __end_of_dpowers:	
   618  0810                     _FINAL_DAY:	
   619  0810  340D               	retlw	13
   620  0811                     __end_of_FINAL_DAY:	
   621  0811                     _FINAL_MONTH:	
   622  0811  3406               	retlw	6
   623  0812                     __end_of_FINAL_MONTH:	
   624  0812                     _UN_BLOCKED:	
   625  0812  3401               	retlw	1
   626  0813                     __end_of_UN_BLOCKED:	
   627  0813                     _BLOCKED:	
   628  0813  3400               	retlw	0
   629  0814                     __end_of_BLOCKED:	
   630  0006                     _PORTBbits	set	6
   631  000E                     _TMR1L	set	14
   632  000F                     _TMR1H	set	15
   633  000C                     _PIR1bits	set	12
   634  0010                     _T1CONbits	set	16
   635  0007                     _PORTCbits	set	7
   636  001F                     _ADCON0	set	31
   637  0010                     _T1CON	set	16
   638  0007                     _PORTC	set	7
   639  0006                     _PORTB	set	6
   640  0005                     _PORTA	set	5
   641  000B                     _INTCON	set	11
   642  0005                     _PORTAbits	set	5
   643  000D                     _PIR2bits	set	13
   644  000B                     _INTCONbits	set	11
   645  0086                     _TRISBbits	set	134
   646  009F                     _ADCON1	set	159
   647  0087                     _TRISC	set	135
   648  0086                     _TRISB	set	134
   649  0085                     _TRISA	set	133
   650  008C                     _PIE1	set	140
   651  010C                     _EEDATA	set	268
   652  010D                     _EEADR	set	269
   653  0189                     _ANSELH	set	393
   654  0188                     _ANSEL	set	392
   655  018D                     _EECON2	set	397
   656  018C                     _EECON1bits	set	396
   657  0814                     STR_9:	
   658  0814  3446               	retlw	70	;'F'
   659  0815  3452               	retlw	82	;'R'
   660  0816  3445               	retlw	69	;'E'
   661  0817  3451               	retlw	81	;'Q'
   662  0818  342E               	retlw	46	;'.'
   663  0819  3420               	retlw	32	;' '
   664  081A  3420               	retlw	32	;' '
   665  081B  3425               	retlw	37	;'%'
   666  081C  3433               	retlw	51	;'3'
   667  081D  3464               	retlw	100	;'d'
   668  081E  342E               	retlw	46	;'.'
   669  081F  3425               	retlw	37	;'%'
   670  0820  3464               	retlw	100	;'d'
   671  0821  3420               	retlw	32	;' '
   672  0822  344D               	retlw	77	;'M'
   673  0823  3448               	retlw	72	;'H'
   674  0824  347A               	retlw	122	;'z'
   675  0825  3400               	retlw	0
   676  0826                     STR_10:	
   677  0826  344C               	retlw	76	;'L'
   678  0827  344F               	retlw	79	;'O'
   679  0828  3443               	retlw	67	;'C'
   680  0829  344B               	retlw	75	;'K'
   681  082A  3449               	retlw	73	;'I'
   682  082B  344E               	retlw	78	;'N'
   683  082C  3447               	retlw	71	;'G'
   684  082D  3420               	retlw	32	;' '
   685  082E  3420               	retlw	32	;' '
   686  082F  3420               	retlw	32	;' '
   687  0830  3420               	retlw	32	;' '
   688  0831  3420               	retlw	32	;' '
   689  0832  3420               	retlw	32	;' '
   690  0833  3420               	retlw	32	;' '
   691  0834  3420               	retlw	32	;' '
   692  0835  3420               	retlw	32	;' '
   693  0836  3400               	retlw	0
   694  0837                     STR_1:	
   695  0837  3454               	retlw	84	;'T'
   696  0838  3445               	retlw	69	;'E'
   697  0839  3453               	retlw	83	;'S'
   698  083A  3454               	retlw	84	;'T'
   699  083B  3449               	retlw	73	;'I'
   700  083C  344E               	retlw	78	;'N'
   701  083D  3447               	retlw	71	;'G'
   702  083E  3420               	retlw	32	;' '
   703  083F  3420               	retlw	32	;' '
   704  0840  3420               	retlw	32	;' '
   705  0841  3420               	retlw	32	;' '
   706  0842  3420               	retlw	32	;' '
   707  0843  3420               	retlw	32	;' '
   708  0844  3420               	retlw	32	;' '
   709  0845  3420               	retlw	32	;' '
   710  0846  3420               	retlw	32	;' '
   711  0847  3400               	retlw	0
   712  0848                     STR_7:	
   713  0848  3453               	retlw	83	;'S'
   714  0849  3445               	retlw	69	;'E'
   715  084A  3454               	retlw	84	;'T'
   716  084B  3420               	retlw	32	;' '
   717  084C  3420               	retlw	32	;' '
   718  084D  3420               	retlw	32	;' '
   719  084E  3446               	retlw	70	;'F'
   720  084F  3452               	retlw	82	;'R'
   721  0850  3445               	retlw	69	;'E'
   722  0851  3451               	retlw	81	;'Q'
   723  0852  3455               	retlw	85	;'U'
   724  0853  3445               	retlw	69	;'E'
   725  0854  344E               	retlw	78	;'N'
   726  0855  3443               	retlw	67	;'C'
   727  0856  3459               	retlw	89	;'Y'
   728  0857  3420               	retlw	32	;' '
   729  0858  3400               	retlw	0
   730  0859                     STR_4:	
   731  0859  3420               	retlw	32	;' '
   732  085A  3420               	retlw	32	;' '
   733  085B  3420               	retlw	32	;' '
   734  085C  3420               	retlw	32	;' '
   735  085D  3420               	retlw	32	;' '
   736  085E  3454               	retlw	84	;'T'
   737  085F  3445               	retlw	69	;'E'
   738  0860  344D               	retlw	77	;'M'
   739  0861  3450               	retlw	80	;'P'
   740  0862  3445               	retlw	69	;'E'
   741  0863  3452               	retlw	82	;'R'
   742  0864  3441               	retlw	65	;'A'
   743  0865  3454               	retlw	84	;'T'
   744  0866  3455               	retlw	85	;'U'
   745  0867  3452               	retlw	82	;'R'
   746  0868  3445               	retlw	69	;'E'
   747  0869  3400               	retlw	0
   748  086A                     STR_8:	
   749  086A  3441               	retlw	65	;'A'
   750  086B  344D               	retlw	77	;'M'
   751  086C  3450               	retlw	80	;'P'
   752  086D  3452               	retlw	82	;'R'
   753  086E  344F               	retlw	79	;'O'
   754  086F  3420               	retlw	32	;' '
   755  0870  3420               	retlw	32	;' '
   756  0871  3420               	retlw	32	;' '
   757  0872  3420               	retlw	32	;' '
   758  0873  3420               	retlw	32	;' '
   759  0874  3420               	retlw	32	;' '
   760  0875  3445               	retlw	69	;'E'
   761  0876  3458               	retlw	88	;'X'
   762  0877  342D               	retlw	45	;'-'
   763  0878  3446               	retlw	70	;'F'
   764  0879  344D               	retlw	77	;'M'
   765  087A  3400               	retlw	0
   766  087B                     STR_6:	
   767  087B  3420               	retlw	32	;' '
   768  087C  3420               	retlw	32	;' '
   769  087D  3420               	retlw	32	;' '
   770  087E  3420               	retlw	32	;' '
   771  087F  3420               	retlw	32	;' '
   772  0880  3420               	retlw	32	;' '
   773  0881  3420               	retlw	32	;' '
   774  0882  3420               	retlw	32	;' '
   775  0883  3420               	retlw	32	;' '
   776  0884  3420               	retlw	32	;' '
   777  0885  3420               	retlw	32	;' '
   778  0886  3420               	retlw	32	;' '
   779  0887  3420               	retlw	32	;' '
   780  0888  3453               	retlw	83	;'S'
   781  0889  3457               	retlw	87	;'W'
   782  088A  3452               	retlw	82	;'R'
   783  088B  3400               	retlw	0
   784  088C                     STR_11:	
   785  088C  3420               	retlw	32	;' '
   786  088D  3420               	retlw	32	;' '
   787  088E  3420               	retlw	32	;' '
   788  088F  3420               	retlw	32	;' '
   789  0890  3420               	retlw	32	;' '
   790  0891  3420               	retlw	32	;' '
   791  0892  3420               	retlw	32	;' '
   792  0893  3446               	retlw	70	;'F'
   793  0894  3452               	retlw	82	;'R'
   794  0895  3445               	retlw	69	;'E'
   795  0896  3451               	retlw	81	;'Q'
   796  0897  3455               	retlw	85	;'U'
   797  0898  3445               	retlw	69	;'E'
   798  0899  344E               	retlw	78	;'N'
   799  089A  3443               	retlw	67	;'C'
   800  089B  3459               	retlw	89	;'Y'
   801  089C  3400               	retlw	0
   802  089D                     STR_2:	
   803  089D  3420               	retlw	32	;' '
   804  089E  3420               	retlw	32	;' '
   805  089F  3420               	retlw	32	;' '
   806  08A0  3420               	retlw	32	;' '
   807  08A1  3420               	retlw	32	;' '
   808  08A2  3420               	retlw	32	;' '
   809  08A3  3420               	retlw	32	;' '
   810  08A4  3420               	retlw	32	;' '
   811  08A5  3420               	retlw	32	;' '
   812  08A6  3420               	retlw	32	;' '
   813  08A7  3453               	retlw	83	;'S'
   814  08A8  3455               	retlw	85	;'U'
   815  08A9  3450               	retlw	80	;'P'
   816  08AA  3450               	retlw	80	;'P'
   817  08AB  344C               	retlw	76	;'L'
   818  08AC  3459               	retlw	89	;'Y'
   819  08AD  3400               	retlw	0
   820  0837                     
   821                           ; #config settings
   822  0000                     
   823                           	psect	cinit
   824  0015                     start_initialization:	
   825  0015                     __initialization:	
   826                           
   827                           ; Initialize objects allocated to BANK0
   828  0015  1383               	bcf	3,7	;select IRP bank0
   829  0016  304D               	movlw	low (__pdataBANK0+9)
   830  0017  00FD               	movwf	btemp+-1
   831  0018  3017               	movlw	high __pidataBANK0
   832  0019  00FE               	movwf	btemp
   833  001A  30B5               	movlw	low __pidataBANK0
   834  001B  00FF               	movwf	btemp+1
   835  001C  3044               	movlw	low __pdataBANK0
   836  001D  0084               	movwf	4
   837  001E  120A  158A  20C2  120A  118A  	fcall	init_ram0
   838                           
   839                           ; Clear objects allocated to BANK1
   840  0023  30A0               	movlw	low __pbssBANK1
   841  0024  0084               	movwf	4
   842  0025  30C3               	movlw	low (__pbssBANK1+35)
   843  0026  160A  118A  27AD  120A  118A  	fcall	clear_ram0
   844                           
   845                           ; Clear objects allocated to BANK0
   846  002B  01CD               	clrf	__pbssBANK0& (0+127)
   847  002C  01CE               	clrf	(__pbssBANK0+1)& (0+127)
   848  002D  01CF               	clrf	(__pbssBANK0+2)& (0+127)
   849  002E  01D0               	clrf	(__pbssBANK0+3)& (0+127)
   850  002F  01D1               	clrf	(__pbssBANK0+4)& (0+127)
   851  0030  01D2               	clrf	(__pbssBANK0+5)& (0+127)
   852  0031                     end_of_initialization:	
   853                           ;End of C runtime variable initialization code
   854                           
   855  0031                     __end_of__initialization:	
   856  0031  0183               	clrf	3
   857  0032  120A  158A  2F4D   	ljmp	_main	;jump to C main() function
   858                           
   859                           	psect	bssBANK0
   860  004D                     __pbssBANK0:	
   861  004D                     _level:	
   862  004D                     	ds	1
   863  004E                     _isOnConfig:	
   864  004E                     	ds	1
   865  004F                     _functionalStat:	
   866  004F                     	ds	1
   867  0050                     _hundredMiliSeconds:	
   868  0050                     	ds	1
   869  0051                     _seconds:	
   870  0051                     	ds	1
   871  0052                     _cntTmr1:	
   872  0052                     	ds	1
   873                           
   874                           	psect	dataBANK0
   875  0044                     __pdataBANK0:	
   876  0044                     _frequency:	
   877  0044                     	ds	2
   878  0046                     _stereoEnable:	
   879  0046                     	ds	1
   880  0047                     _minutes:	
   881  0047                     	ds	1
   882  0048                     _hours:	
   883  0048                     	ds	1
   884  0049                     _days:	
   885  0049                     	ds	1
   886  004A                     _months:	
   887  004A                     	ds	1
   888  004B                     _prTmr1H:	
   889  004B                     	ds	1
   890  004C                     _prTmr1L:	
   891  004C                     	ds	1
   892                           
   893                           	psect	bssBANK1
   894  00A0                     __pbssBANK1:	
   895  00A0                     _i:	
   896  00A0                     	ds	1
   897  00A1                     _lineTwo:	
   898  00A1                     	ds	17
   899  00B2                     _lineOne:	
   900  00B2                     	ds	17
   901                           
   902                           	psect	inittext
   903  08BE                     init_fetch0:	
   904                           ;	Called with low address in FSR and high address in W
   905                           
   906  08BE  087E               	movf	btemp,w
   907  08BF  008A               	movwf	10
   908  08C0  087F               	movf	btemp+1,w
   909  08C1  0082               	movwf	2
   910  08C2                     init_ram0:	
   911                           ;Called with:
   912                           ;	high address of idata address in btemp 
   913                           ;	low address of idata address in btemp+1 
   914                           ;	low address of data in FSR
   915                           ;	high address + 1 of data in btemp-1
   916                           
   917  08C2  120A  158A  20BE  120A  158A  	fcall	init_fetch0
   918  08C7  0080               	movwf	0
   919  08C8  0A84               	incf	4,f
   920  08C9  0804               	movf	4,w
   921  08CA  067D               	xorwf	btemp+-1,w
   922  08CB  1903               	btfsc	3,2
   923  08CC  3400               	retlw	0
   924  08CD  0AFF               	incf	btemp+1,f
   925  08CE  1903               	btfsc	3,2
   926  08CF  0AFE               	incf	btemp,f
   927  08D0  28C2               	goto	init_ram0
   928                           
   929                           	psect	clrtext
   930  17AD                     clear_ram0:	
   931                           ;	Called with FSR containing the base address, and
   932                           ;	W with the last address+1
   933                           
   934  17AD  0064               	clrwdt	;clear the watchdog before getting into this loop
   935  17AE                     clrloop0:	
   936  17AE  0180               	clrf	0	;clear RAM location pointed to by FSR
   937  17AF  0A84               	incf	4,f	;increment pointer
   938  17B0  0604               	xorwf	4,w	;XOR with final address
   939  17B1  1903               	btfsc	3,2	;have we reached the end yet?
   940  17B2  3400               	retlw	0	;all done for this memory range, return
   941  17B3  0604               	xorwf	4,w	;XOR again to restore value
   942  17B4  2FAE               	goto	clrloop0	;do the next byte
   943                           
   944                           	psect	cstackBANK1
   945  00C3                     __pcstackBANK1:	
   946  00C3                     ?_beep:	
   947  00C3                     ??_initLCD:	
   948                           ; 1 bytes @ 0x0
   949                           
   950  00C3                     ___lwdiv@counter:	
   951                           ; 1 bytes @ 0x0
   952                           
   953  00C3                     beep@ms:	
   954                           ; 1 bytes @ 0x0
   955                           
   956                           
   957                           ; 2 bytes @ 0x0
   958  00C3                     	ds	1
   959  00C4                     ___lwdiv@quotient:	
   960                           
   961                           ; 2 bytes @ 0x1
   962  00C4                     	ds	1
   963  00C5                     ?_writeFrequency:	
   964  00C5                     writeFrequency@f:	
   965                           ; 1 bytes @ 0x2
   966                           
   967                           
   968                           ; 2 bytes @ 0x2
   969  00C5                     	ds	1
   970  00C6                     ?___lwmod:	
   971  00C6                     ___lwmod@divisor:	
   972                           ; 2 bytes @ 0x3
   973                           
   974                           
   975                           ; 2 bytes @ 0x3
   976  00C6                     	ds	1
   977  00C7                     ??_writeFrequency:	
   978                           
   979                           ; 1 bytes @ 0x4
   980  00C7                     	ds	1
   981  00C8                     ___lwmod@dividend:	
   982                           
   983                           ; 2 bytes @ 0x5
   984  00C8                     	ds	2
   985  00CA                     ?_sprintf:	
   986  00CA                     sprintf@f:	
   987                           ; 2 bytes @ 0x7
   988                           
   989  00CA                     writeFrequency@buffer:	
   990                           ; 1 bytes @ 0x7
   991                           
   992                           
   993                           ; 2 bytes @ 0x7
   994  00CA                     	ds	2
   995  00CC                     writeFrequency@r:	
   996                           
   997                           ; 2 bytes @ 0x9
   998  00CC                     	ds	3
   999  00CF                     ??_sprintf:	
  1000                           
  1001                           ; 1 bytes @ 0xC
  1002  00CF                     	ds	3
  1003  00D2                     sprintf@ap:	
  1004                           
  1005                           ; 1 bytes @ 0xF
  1006  00D2                     	ds	1
  1007  00D3                     sprintf@prec:	
  1008                           
  1009                           ; 1 bytes @ 0x10
  1010  00D3                     	ds	1
  1011  00D4                     sprintf@flag:	
  1012                           
  1013                           ; 1 bytes @ 0x11
  1014  00D4                     	ds	1
  1015  00D5                     sprintf@val:	
  1016                           
  1017                           ; 2 bytes @ 0x12
  1018  00D5                     	ds	2
  1019  00D7                     sprintf@width:	
  1020                           
  1021                           ; 2 bytes @ 0x14
  1022  00D7                     	ds	2
  1023  00D9                     sprintf@sp:	
  1024                           
  1025                           ; 1 bytes @ 0x16
  1026  00D9                     	ds	1
  1027  00DA                     sprintf@c:	
  1028                           
  1029                           ; 1 bytes @ 0x17
  1030  00DA                     	ds	1
  1031  00DB                     ??_start:	
  1032  00DB                     ??_lockingScreen:	
  1033                           ; 1 bytes @ 0x18
  1034                           
  1035  00DB                     ??_principalScreen:	
  1036                           ; 1 bytes @ 0x18
  1037                           
  1038                           
  1039                           ; 1 bytes @ 0x18
  1040  00DB                     	ds	1
  1041  00DC                     ??_setFrequency:	
  1042                           
  1043                           ; 1 bytes @ 0x19
  1044  00DC                     	ds	2
  1045  00DE                     start@i:	
  1046                           
  1047                           ; 1 bytes @ 0x1B
  1048  00DE                     	ds	2
  1049  00E0                     principalScreen@decim:	
  1050                           
  1051                           ; 1 bytes @ 0x1D
  1052  00E0                     	ds	1
  1053  00E1                     principalScreen@integ:	
  1054                           
  1055                           ; 1 bytes @ 0x1E
  1056  00E1                     	ds	1
  1057  00E2                     ??_main:	
  1058                           
  1059                           ; 1 bytes @ 0x1F
  1060  00E2                     	ds	3
  1061                           
  1062                           	psect	cstackCOMMON
  1063  0070                     __pcstackCOMMON:	
  1064  0070                     ?_isdigit:	
  1065  0070                     ?i1_isdigit:	
  1066                           ; 1 bit 
  1067                           
  1068  0070                     ?_config:	
  1069                           ; 1 bit 
  1070                           
  1071  0070                     ?_setFrequency:	
  1072                           ; 1 bytes @ 0x0
  1073                           
  1074  0070                     ?_start:	
  1075                           ; 1 bytes @ 0x0
  1076                           
  1077  0070                     ?_lockingScreen:	
  1078                           ; 1 bytes @ 0x0
  1079                           
  1080  0070                     ?_principalScreen:	
  1081                           ; 1 bytes @ 0x0
  1082                           
  1083  0070                     ?_initLCD:	
  1084                           ; 1 bytes @ 0x0
  1085                           
  1086  0070                     ?_SetDDRamAddr:	
  1087                           ; 1 bytes @ 0x0
  1088                           
  1089  0070                     ?_putsXLCD:	
  1090                           ; 1 bytes @ 0x0
  1091                           
  1092  0070                     ?_time:	
  1093                           ; 1 bytes @ 0x0
  1094                           
  1095  0070                     ?_updateLCD:	
  1096                           ; 1 bytes @ 0x0
  1097                           
  1098  0070                     ?_putrsXLCD:	
  1099                           ; 1 bytes @ 0x0
  1100                           
  1101  0070                     ?_WriteCmdXLCD:	
  1102                           ; 1 bytes @ 0x0
  1103                           
  1104  0070                     ?_BusyXLCD:	
  1105                           ; 1 bytes @ 0x0
  1106                           
  1107  0070                     ?_SendCMDLCD:	
  1108                           ; 1 bytes @ 0x0
  1109                           
  1110  0070                     ?_readEEPROM:	
  1111                           ; 1 bytes @ 0x0
  1112                           
  1113  0070                     ?_getData:	
  1114                           ; 1 bytes @ 0x0
  1115                           
  1116  0070                     ?_setData:	
  1117                           ; 1 bytes @ 0x0
  1118                           
  1119  0070                     ?_main:	
  1120                           ; 1 bytes @ 0x0
  1121                           
  1122  0070                     ?_inter:	
  1123                           ; 1 bytes @ 0x0
  1124                           
  1125  0070                     ?_DelayFor18TCY:	
  1126                           ; 1 bytes @ 0x0
  1127                           
  1128  0070                     ?_DelayPORXLCD:	
  1129                           ; 1 bytes @ 0x0
  1130                           
  1131  0070                     ?_OpenXLCD:	
  1132                           ; 1 bytes @ 0x0
  1133                           
  1134  0070                     ?_WriteDataXLCD:	
  1135                           ; 1 bytes @ 0x0
  1136                           
  1137  0070                     ?i1_writeEEPROM:	
  1138                           ; 1 bytes @ 0x0
  1139                           
  1140  0070                     ?i1_setData:	
  1141                           ; 1 bytes @ 0x0
  1142                           
  1143  0070                     ?i1_DelayFor18TCY:	
  1144                           ; 1 bytes @ 0x0
  1145                           
  1146  0070                     ??i1_DelayFor18TCY:	
  1147                           ; 1 bytes @ 0x0
  1148                           
  1149  0070                     ?i1_WriteDataXLCD:	
  1150                           ; 1 bytes @ 0x0
  1151                           
  1152  0070                     ?i1_SetDDRamAddr:	
  1153                           ; 1 bytes @ 0x0
  1154                           
  1155  0070                     ?i1_putsXLCD:	
  1156                           ; 1 bytes @ 0x0
  1157                           
  1158  0070                     ?i1_BusyXLCD:	
  1159                           ; 1 bytes @ 0x0
  1160                           
  1161  0070                     ??i1_BusyXLCD:	
  1162                           ; 1 bytes @ 0x0
  1163                           
  1164  0070                     ??i1_isdigit:	
  1165                           ; 1 bytes @ 0x0
  1166                           
  1167  0070                     ?i1___wmul:	
  1168                           ; 1 bytes @ 0x0
  1169                           
  1170  0070                     ?i1___lwdiv:	
  1171                           ; 2 bytes @ 0x0
  1172                           
  1173  0070                     setData@full:	
  1174                           ; 2 bytes @ 0x0
  1175                           
  1176  0070                     i1writeEEPROM@address:	
  1177                           ; 1 bytes @ 0x0
  1178                           
  1179  0070                     i1_isdigit$1104:	
  1180                           ; 1 bytes @ 0x0
  1181                           
  1182  0070                     i1___wmul@multiplier:	
  1183                           ; 1 bytes @ 0x0
  1184                           
  1185  0070                     i1___lwdiv@divisor:	
  1186                           ; 2 bytes @ 0x0
  1187                           
  1188                           
  1189                           ; 2 bytes @ 0x0
  1190  0070                     	ds	1
  1191  0071                     ??i1_writeEEPROM:	
  1192  0071                     ??i1_WriteDataXLCD:	
  1193                           ; 1 bytes @ 0x1
  1194                           
  1195  0071                     ??i1_SetDDRamAddr:	
  1196                           ; 1 bytes @ 0x1
  1197                           
  1198  0071                     i1writeEEPROM@data:	
  1199                           ; 1 bytes @ 0x1
  1200                           
  1201  0071                     i1isdigit@c:	
  1202                           ; 1 bytes @ 0x1
  1203                           
  1204                           
  1205                           ; 1 bytes @ 0x1
  1206  0071                     	ds	1
  1207  0072                     ??i1_setData:	
  1208  0072                     i1___wmul@multiplicand:	
  1209                           ; 1 bytes @ 0x2
  1210                           
  1211  0072                     i1___lwdiv@dividend:	
  1212                           ; 2 bytes @ 0x2
  1213                           
  1214                           
  1215                           ; 2 bytes @ 0x2
  1216  0072                     	ds	1
  1217  0073                     i1setData@data0:	
  1218  0073                     i1WriteDataXLCD@data:	
  1219                           ; 1 bytes @ 0x3
  1220                           
  1221  0073                     i1SetDDRamAddr@DDaddr:	
  1222                           ; 1 bytes @ 0x3
  1223                           
  1224                           
  1225                           ; 1 bytes @ 0x3
  1226  0073                     	ds	1
  1227  0074                     ??i1_putsXLCD:	
  1228  0074                     ??i1___wmul:	
  1229                           ; 1 bytes @ 0x4
  1230                           
  1231  0074                     ??i1___lwdiv:	
  1232                           ; 1 bytes @ 0x4
  1233                           
  1234  0074                     i1setData@data1:	
  1235                           ; 1 bytes @ 0x4
  1236                           
  1237  0074                     i1___wmul@product:	
  1238                           ; 1 bytes @ 0x4
  1239                           
  1240                           
  1241                           ; 2 bytes @ 0x4
  1242  0074                     	ds	1
  1243  0075                     ??_time:	
  1244  0075                     i1putsXLCD@buffer:	
  1245                           ; 1 bytes @ 0x5
  1246                           
  1247  0075                     i1___lwdiv@quotient:	
  1248                           ; 1 bytes @ 0x5
  1249                           
  1250                           
  1251                           ; 2 bytes @ 0x5
  1252  0075                     	ds	2
  1253  0077                     i1___lwdiv@counter:	
  1254                           
  1255                           ; 1 bytes @ 0x7
  1256  0077                     	ds	1
  1257  0078                     ?i1___lwmod:	
  1258  0078                     i1___lwmod@divisor:	
  1259                           ; 2 bytes @ 0x8
  1260                           
  1261                           
  1262                           ; 2 bytes @ 0x8
  1263  0078                     	ds	2
  1264  007A                     i1___lwmod@dividend:	
  1265                           
  1266                           ; 2 bytes @ 0xA
  1267  007A                     	ds	2
  1268  007C                     ??i1___lwmod:	
  1269                           
  1270                           ; 1 bytes @ 0xC
  1271  007C                     	ds	1
  1272  007D                     i1___lwmod@counter:	
  1273                           
  1274                           ; 1 bytes @ 0xD
  1275  007D                     	ds	1
  1276                           
  1277                           	psect	cstackBANK0
  1278  0020                     __pcstackBANK0:	
  1279  0020                     ?i1_sprintf:	
  1280  0020                     i1sprintf@f:	
  1281                           ; 2 bytes @ 0x0
  1282                           
  1283                           
  1284                           ; 1 bytes @ 0x0
  1285  0020                     	ds	5
  1286  0025                     ??i1_sprintf:	
  1287                           
  1288                           ; 1 bytes @ 0x5
  1289  0025                     	ds	3
  1290  0028                     i1sprintf@ap:	
  1291                           
  1292                           ; 1 bytes @ 0x8
  1293  0028                     	ds	1
  1294  0029                     i1sprintf@prec:	
  1295                           
  1296                           ; 1 bytes @ 0x9
  1297  0029                     	ds	1
  1298  002A                     i1sprintf@flag:	
  1299                           
  1300                           ; 1 bytes @ 0xA
  1301  002A                     	ds	1
  1302  002B                     i1sprintf@val:	
  1303                           
  1304                           ; 2 bytes @ 0xB
  1305  002B                     	ds	2
  1306  002D                     i1sprintf@sp:	
  1307                           
  1308                           ; 1 bytes @ 0xD
  1309  002D                     	ds	1
  1310  002E                     i1sprintf@width:	
  1311                           
  1312                           ; 2 bytes @ 0xE
  1313  002E                     	ds	2
  1314  0030                     i1sprintf@c:	
  1315                           
  1316                           ; 1 bytes @ 0x10
  1317  0030                     	ds	1
  1318  0031                     ??_updateLCD:	
  1319                           
  1320                           ; 1 bytes @ 0x11
  1321  0031                     	ds	5
  1322  0036                     updateLCD@decim:	
  1323                           
  1324                           ; 1 bytes @ 0x16
  1325  0036                     	ds	1
  1326  0037                     updateLCD@integ:	
  1327                           
  1328                           ; 1 bytes @ 0x17
  1329  0037                     	ds	1
  1330  0038                     ??_inter:	
  1331                           
  1332                           ; 1 bytes @ 0x18
  1333  0038                     	ds	5
  1334  003D                     ?_setTransStat:	
  1335  003D                     ??_BusyXLCD:	
  1336                           ; 1 bytes @ 0x1D
  1337                           
  1338  003D                     ??_isdigit:	
  1339                           ; 1 bytes @ 0x1D
  1340                           
  1341  003D                     ??_readEEPROM:	
  1342                           ; 1 bytes @ 0x1D
  1343                           
  1344  003D                     ?_writeEEPROM:	
  1345                           ; 1 bytes @ 0x1D
  1346                           
  1347  003D                     ??_DelayFor18TCY:	
  1348                           ; 1 bytes @ 0x1D
  1349                           
  1350  003D                     ??_DelayPORXLCD:	
  1351                           ; 1 bytes @ 0x1D
  1352                           
  1353  003D                     ?_codFreq:	
  1354                           ; 1 bytes @ 0x1D
  1355                           
  1356  003D                     ?___wmul:	
  1357                           ; 2 bytes @ 0x1D
  1358                           
  1359  003D                     ?___lwdiv:	
  1360                           ; 2 bytes @ 0x1D
  1361                           
  1362  003D                     readEEPROM@address:	
  1363                           ; 2 bytes @ 0x1D
  1364                           
  1365  003D                     writeEEPROM@address:	
  1366                           ; 1 bytes @ 0x1D
  1367                           
  1368  003D                     _isdigit$1104:	
  1369                           ; 1 bytes @ 0x1D
  1370                           
  1371  003D                     setTransStat@stat:	
  1372                           ; 1 bytes @ 0x1D
  1373                           
  1374  003D                     codFreq@f:	
  1375                           ; 2 bytes @ 0x1D
  1376                           
  1377  003D                     ___wmul@multiplier:	
  1378                           ; 2 bytes @ 0x1D
  1379                           
  1380  003D                     ___lwdiv@divisor:	
  1381                           ; 2 bytes @ 0x1D
  1382                           
  1383                           
  1384                           ; 2 bytes @ 0x1D
  1385  003D                     	ds	1
  1386  003E                     ??_SetDDRamAddr:	
  1387  003E                     ??_WriteCmdXLCD:	
  1388                           ; 1 bytes @ 0x1E
  1389                           
  1390  003E                     ??_writeEEPROM:	
  1391                           ; 1 bytes @ 0x1E
  1392                           
  1393  003E                     ??_getData:	
  1394                           ; 1 bytes @ 0x1E
  1395                           
  1396  003E                     ??_WriteDataXLCD:	
  1397                           ; 1 bytes @ 0x1E
  1398                           
  1399  003E                     writeEEPROM@data:	
  1400                           ; 1 bytes @ 0x1E
  1401                           
  1402  003E                     isdigit@c:	
  1403                           ; 1 bytes @ 0x1E
  1404                           
  1405                           
  1406                           ; 1 bytes @ 0x1E
  1407  003E                     	ds	1
  1408  003F                     ??_setTransStat:	
  1409  003F                     ??_setData:	
  1410                           ; 1 bytes @ 0x1F
  1411                           
  1412  003F                     ??_codFreq:	
  1413                           ; 1 bytes @ 0x1F
  1414                           
  1415  003F                     codFreq@fr:	
  1416                           ; 1 bytes @ 0x1F
  1417                           
  1418  003F                     ___wmul@multiplicand:	
  1419                           ; 2 bytes @ 0x1F
  1420                           
  1421  003F                     ___lwdiv@dividend:	
  1422                           ; 2 bytes @ 0x1F
  1423                           
  1424                           
  1425                           ; 2 bytes @ 0x1F
  1426  003F                     	ds	1
  1427  0040                     setData@data0:	
  1428  0040                     WriteDataXLCD@data:	
  1429                           ; 1 bytes @ 0x20
  1430                           
  1431  0040                     WriteCmdXLCD@cmd:	
  1432                           ; 1 bytes @ 0x20
  1433                           
  1434  0040                     SetDDRamAddr@DDaddr:	
  1435                           ; 1 bytes @ 0x20
  1436                           
  1437                           
  1438                           ; 1 bytes @ 0x20
  1439  0040                     	ds	1
  1440  0041                     ??_putsXLCD:	
  1441  0041                     ??_putrsXLCD:	
  1442                           ; 1 bytes @ 0x21
  1443                           
  1444  0041                     ??_SendCMDLCD:	
  1445                           ; 1 bytes @ 0x21
  1446                           
  1447  0041                     ??_OpenXLCD:	
  1448                           ; 1 bytes @ 0x21
  1449                           
  1450  0041                     ??___wmul:	
  1451                           ; 1 bytes @ 0x21
  1452                           
  1453  0041                     ??___lwdiv:	
  1454                           ; 1 bytes @ 0x21
  1455                           
  1456  0041                     setData@data1:	
  1457                           ; 1 bytes @ 0x21
  1458                           
  1459  0041                     SendCMDLCD@CMD:	
  1460                           ; 1 bytes @ 0x21
  1461                           
  1462  0041                     ___wmul@product:	
  1463                           ; 1 bytes @ 0x21
  1464                           
  1465                           
  1466                           ; 2 bytes @ 0x21
  1467  0041                     	ds	1
  1468  0042                     ??___lwmod:	
  1469  0042                     getData@aux0:	
  1470                           ; 1 bytes @ 0x22
  1471                           
  1472  0042                     putsXLCD@buffer:	
  1473                           ; 1 bytes @ 0x22
  1474                           
  1475  0042                     putrsXLCD@buffer:	
  1476                           ; 1 bytes @ 0x22
  1477                           
  1478                           
  1479                           ; 1 bytes @ 0x22
  1480  0042                     	ds	1
  1481  0043                     ??_beep:	
  1482  0043                     getData@aux1:	
  1483                           ; 1 bytes @ 0x23
  1484                           
  1485  0043                     OpenXLCD@lcdtype:	
  1486                           ; 1 bytes @ 0x23
  1487                           
  1488  0043                     ___lwmod@counter:	
  1489                           ; 1 bytes @ 0x23
  1490                           
  1491                           
  1492                           ; 1 bytes @ 0x23
  1493  0043                     	ds	1
  1494  0044                     ??_config:	
  1495                           
  1496                           	psect	maintext
  1497  0F4D                     __pmaintext:	
  1498                           ; 1 bytes @ 0x24
  1499 ;;
  1500 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1501 ;;
  1502 ;; *************** function _main *****************
  1503 ;; Defined at:
  1504 ;;		line 5 in file "main.c"
  1505 ;; Parameters:    Size  Location     Type
  1506 ;;		None
  1507 ;; Auto vars:     Size  Location     Type
  1508 ;;  index           1    0        unsigned char 
  1509 ;; Return value:  Size  Location     Type
  1510 ;;                  1    wreg      void 
  1511 ;; Registers used:
  1512 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1513 ;; Tracked objects:
  1514 ;;		On entry : B00/0
  1515 ;;		On exit  : 0/0
  1516 ;;		Unchanged: 0/0
  1517 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1518 ;;      Params:         0       0       0       0       0
  1519 ;;      Locals:         0       0       0       0       0
  1520 ;;      Temps:          0       0       3       0       0
  1521 ;;      Totals:         0       0       3       0       0
  1522 ;;Total ram usage:        3 bytes
  1523 ;; Hardware stack levels required when called:   10
  1524 ;; This function calls:
  1525 ;;		_beep
  1526 ;;		_config
  1527 ;;		_getData
  1528 ;;		_lockingScreen
  1529 ;;		_principalScreen
  1530 ;;		_setFrequency
  1531 ;;		_start
  1532 ;;		_writeFrequency
  1533 ;; This function is called by:
  1534 ;;		Startup code after reset
  1535 ;; This function uses a non-reentrant model
  1536 ;;
  1537                           
  1538                           
  1539                           ;psect for function _main
  1540  0F4D                     _main:	
  1541  0F4D                     l4007:	
  1542                           ;incstack = 0
  1543 ;; hardware stack exceeded
  1544                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1545                           
  1546                           
  1547                           ;main.c: 6:     unsigned char index;;main.c: 7:     _delay((unsigned long)((100)*(400000
      +                          0/4000.0)));
  1548  0F4D  3082               	movlw	130
  1549  0F4E  1683               	bsf	3,5	;RP0=1, select bank1
  1550  0F4F  1303               	bcf	3,6	;RP1=0, select bank1
  1551  0F50  00E3               	movwf	(??_main^(0+128)+1)
  1552  0F51  30DD               	movlw	221
  1553  0F52  00E2               	movwf	??_main^(0+128)
  1554  0F53                     u3387:	
  1555  0F53  0BE2               	decfsz	??_main^(0+128),f
  1556  0F54  2F53               	goto	u3387
  1557  0F55  0BE3               	decfsz	(??_main^(0+128)+1),f
  1558  0F56  2F53               	goto	u3387
  1559  0F57                     l4009:	
  1560                           
  1561                           ;main.c: 8:     config();
  1562  0F57  120A  158A  225F  120A  158A  	fcall	_config
  1563  0F5C                     l4011:	
  1564                           
  1565                           ;main.c: 9:     _delay((unsigned long)((100)*(4000000/4000.0)));
  1566  0F5C  3082               	movlw	130
  1567  0F5D  1683               	bsf	3,5	;RP0=1, select bank1
  1568  0F5E  1303               	bcf	3,6	;RP1=0, select bank1
  1569  0F5F  00E3               	movwf	(??_main^(0+128)+1)
  1570  0F60  30DD               	movlw	221
  1571  0F61  00E2               	movwf	??_main^(0+128)
  1572  0F62                     u3397:	
  1573  0F62  0BE2               	decfsz	??_main^(0+128),f
  1574  0F63  2F62               	goto	u3397
  1575  0F64  0BE3               	decfsz	(??_main^(0+128)+1),f
  1576  0F65  2F62               	goto	u3397
  1577  0F66                     l4013:	
  1578                           
  1579                           ;main.c: 10:     beep(100);
  1580  0F66  3064               	movlw	100
  1581  0F67  1683               	bsf	3,5	;RP0=1, select bank1
  1582  0F68  1303               	bcf	3,6	;RP1=0, select bank1
  1583  0F69  00C3               	movwf	beep@ms^(0+128)
  1584  0F6A  3000               	movlw	0
  1585  0F6B  00C4               	movwf	(beep@ms^(0+128)+1)
  1586  0F6C  120A  158A  248E  120A  158A  	fcall	_beep
  1587  0F71                     l4015:	
  1588                           
  1589                           ;main.c: 11:     getData();
  1590  0F71  120A  158A  268F  120A  158A  	fcall	_getData
  1591  0F76                     l4017:	
  1592                           
  1593                           ;main.c: 12:     beep(10);
  1594  0F76  300A               	movlw	10
  1595  0F77  1683               	bsf	3,5	;RP0=1, select bank1
  1596  0F78  1303               	bcf	3,6	;RP1=0, select bank1
  1597  0F79  00C3               	movwf	beep@ms^(0+128)
  1598  0F7A  3000               	movlw	0
  1599  0F7B  00C4               	movwf	(beep@ms^(0+128)+1)
  1600  0F7C  120A  158A  248E  120A  158A  	fcall	_beep
  1601  0F81                     l4019:	
  1602                           
  1603                           ;main.c: 13:     if(!PORTAbits.RA4){
  1604  0F81  1283               	bcf	3,5	;RP0=0, select bank0
  1605  0F82  1303               	bcf	3,6	;RP1=0, select bank0
  1606  0F83  1A05               	btfsc	5,4	;volatile
  1607  0F84  2F86               	goto	u3331
  1608  0F85  2F87               	goto	u3330
  1609  0F86                     u3331:	
  1610  0F86  2F9D               	goto	l194
  1611  0F87                     u3330:	
  1612  0F87                     l4021:	
  1613                           
  1614                           ;main.c: 14:         _delay((unsigned long)((25)*(4000000/4000.0)));
  1615  0F87  3021               	movlw	33
  1616  0F88  1683               	bsf	3,5	;RP0=1, select bank1
  1617  0F89  1303               	bcf	3,6	;RP1=0, select bank1
  1618  0F8A  00E3               	movwf	(??_main^(0+128)+1)
  1619  0F8B  3075               	movlw	117
  1620  0F8C  00E2               	movwf	??_main^(0+128)
  1621  0F8D                     u3407:	
  1622  0F8D  0BE2               	decfsz	??_main^(0+128),f
  1623  0F8E  2F8D               	goto	u3407
  1624  0F8F  0BE3               	decfsz	(??_main^(0+128)+1),f
  1625  0F90  2F8D               	goto	u3407
  1626  0F91  2F92               	nop2
  1627  0F92                     l4023:	
  1628                           
  1629                           ;main.c: 15:         if(!PORTAbits.RA4) setFrequency();
  1630  0F92  1283               	bcf	3,5	;RP0=0, select bank0
  1631  0F93  1303               	bcf	3,6	;RP1=0, select bank0
  1632  0F94  1A05               	btfsc	5,4	;volatile
  1633  0F95  2F97               	goto	u3341
  1634  0F96  2F98               	goto	u3340
  1635  0F97                     u3341:	
  1636  0F97  2F9D               	goto	l194
  1637  0F98                     u3340:	
  1638  0F98                     l4025:	
  1639  0F98  120A  118A  2361  120A  158A  	fcall	_setFrequency
  1640  0F9D                     l194:	
  1641                           ;main.c: 16:     }
  1642                           
  1643                           
  1644                           ;main.c: 17:     start();
  1645  0F9D  120A  118A  2499  120A  158A  	fcall	_start
  1646                           
  1647                           ;main.c: 18:     lockingScreen();
  1648  0FA2  120A  118A  27CF  120A  158A  	fcall	_lockingScreen
  1649  0FA7                     l4027:	
  1650                           
  1651                           ;main.c: 19:     writeFrequency(frequency);
  1652  0FA7  1283               	bcf	3,5	;RP0=0, select bank0
  1653  0FA8  1303               	bcf	3,6	;RP1=0, select bank0
  1654  0FA9  0845               	movf	_frequency+1,w
  1655  0FAA  1683               	bsf	3,5	;RP0=1, select bank1
  1656  0FAB  1303               	bcf	3,6	;RP1=0, select bank1
  1657  0FAC  00C6               	movwf	(writeFrequency@f+1)^(0+128)
  1658  0FAD  1283               	bcf	3,5	;RP0=0, select bank0
  1659  0FAE  1303               	bcf	3,6	;RP1=0, select bank0
  1660  0FAF  0844               	movf	_frequency,w
  1661  0FB0  1683               	bsf	3,5	;RP0=1, select bank1
  1662  0FB1  1303               	bcf	3,6	;RP1=0, select bank1
  1663  0FB2  00C5               	movwf	writeFrequency@f^(0+128)
  1664  0FB3  120A  118A  25CC  120A  158A  	fcall	_writeFrequency
  1665  0FB8                     l4029:	
  1666                           
  1667                           ;main.c: 22:     principalScreen();
  1668  0FB8  120A  118A  276A  120A  158A  	fcall	_principalScreen
  1669  0FBD                     l4031:	
  1670                           
  1671                           ;main.c: 29:         if(!PORTAbits.RA4){
  1672  0FBD  1283               	bcf	3,5	;RP0=0, select bank0
  1673  0FBE  1303               	bcf	3,6	;RP1=0, select bank0
  1674  0FBF  1A05               	btfsc	5,4	;volatile
  1675  0FC0  2FC2               	goto	u3351
  1676  0FC1  2FC3               	goto	u3350
  1677  0FC2                     u3351:	
  1678  0FC2  2FBD               	goto	l4031
  1679  0FC3                     u3350:	
  1680  0FC3                     l4033:	
  1681                           
  1682                           ;main.c: 30:             _delay((unsigned long)((500)*(4000000/4000.0)));
  1683  0FC3  3003               	movlw	3
  1684  0FC4  1683               	bsf	3,5	;RP0=1, select bank1
  1685  0FC5  1303               	bcf	3,6	;RP1=0, select bank1
  1686  0FC6  00E4               	movwf	(??_main^(0+128)+2)
  1687  0FC7  308A               	movlw	138
  1688  0FC8  00E3               	movwf	(??_main^(0+128)+1)
  1689  0FC9  3055               	movlw	85
  1690  0FCA  00E2               	movwf	??_main^(0+128)
  1691  0FCB                     u3417:	
  1692  0FCB  0BE2               	decfsz	??_main^(0+128),f
  1693  0FCC  2FCB               	goto	u3417
  1694  0FCD  0BE3               	decfsz	(??_main^(0+128)+1),f
  1695  0FCE  2FCB               	goto	u3417
  1696  0FCF  0BE4               	decfsz	(??_main^(0+128)+2),f
  1697  0FD0  2FCB               	goto	u3417
  1698  0FD1                     l4035:	
  1699                           
  1700                           ;main.c: 31:             for(i = 0; i < 10; i++){
  1701  0FD1  1683               	bsf	3,5	;RP0=1, select bank1
  1702  0FD2  1303               	bcf	3,6	;RP1=0, select bank1
  1703  0FD3  01A0               	clrf	_i^(0+128)
  1704  0FD4                     l4037:	
  1705  0FD4  300A               	movlw	10
  1706  0FD5  0220               	subwf	_i^(0+128),w
  1707  0FD6  1C03               	skipc
  1708  0FD7  2FD9               	goto	u3361
  1709  0FD8  2FDA               	goto	u3360
  1710  0FD9                     u3361:	
  1711  0FD9  2FDB               	goto	l4041
  1712  0FDA                     u3360:	
  1713  0FDA  2FEC               	goto	l199
  1714  0FDB                     l4041:	
  1715                           
  1716                           ;main.c: 32:                 _delay((unsigned long)((100)*(4000000/4000.0)));
  1717  0FDB  3082               	movlw	130
  1718  0FDC  1683               	bsf	3,5	;RP0=1, select bank1
  1719  0FDD  1303               	bcf	3,6	;RP1=0, select bank1
  1720  0FDE  00E3               	movwf	(??_main^(0+128)+1)
  1721  0FDF  30DD               	movlw	221
  1722  0FE0  00E2               	movwf	??_main^(0+128)
  1723  0FE1                     u3427:	
  1724  0FE1  0BE2               	decfsz	??_main^(0+128),f
  1725  0FE2  2FE1               	goto	u3427
  1726  0FE3  0BE3               	decfsz	(??_main^(0+128)+1),f
  1727  0FE4  2FE1               	goto	u3427
  1728  0FE5                     l4043:	
  1729                           
  1730                           ;main.c: 33:             }
  1731  0FE5  3001               	movlw	1
  1732  0FE6  1683               	bsf	3,5	;RP0=1, select bank1
  1733  0FE7  1303               	bcf	3,6	;RP1=0, select bank1
  1734  0FE8  00E2               	movwf	??_main^(0+128)
  1735  0FE9  0862               	movf	??_main^(0+128),w
  1736  0FEA  07A0               	addwf	_i^(0+128),f
  1737  0FEB  2FD4               	goto	l4037
  1738  0FEC                     l199:	
  1739                           
  1740                           ;main.c: 34:             if(!PORTAbits.RA4){
  1741  0FEC  1283               	bcf	3,5	;RP0=0, select bank0
  1742  0FED  1303               	bcf	3,6	;RP1=0, select bank0
  1743  0FEE  1A05               	btfsc	5,4	;volatile
  1744  0FEF  2FF1               	goto	u3371
  1745  0FF0  2FF2               	goto	u3370
  1746  0FF1                     u3371:	
  1747  0FF1  2FBD               	goto	l4031
  1748  0FF2                     u3370:	
  1749  0FF2                     l4047:	
  1750                           
  1751                           ;main.c: 35:                 setFrequency();
  1752  0FF2  120A  118A  2361  120A  158A  	fcall	_setFrequency
  1753                           
  1754                           ;main.c: 36:                 principalScreen();
  1755  0FF7  120A  118A  276A  120A  158A  	fcall	_principalScreen
  1756  0FFC  2FBD               	goto	l4031
  1757  0FFD  120A  118A  2812   	ljmp	start
  1758  1000                     __end_of_main:	
  1759                           
  1760                           	psect	text1
  1761  0499                     __ptext1:	
  1762 ;; *************** function _start *****************
  1763 ;; Defined at:
  1764 ;;		line 73 in file "main.c"
  1765 ;; Parameters:    Size  Location     Type
  1766 ;;		None
  1767 ;; Auto vars:     Size  Location     Type
  1768 ;;  i               1   27[BANK1 ] unsigned char 
  1769 ;; Return value:  Size  Location     Type
  1770 ;;                  1    wreg      void 
  1771 ;; Registers used:
  1772 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1773 ;; Tracked objects:
  1774 ;;		On entry : 0/0
  1775 ;;		On exit  : 0/0
  1776 ;;		Unchanged: 0/0
  1777 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1778 ;;      Params:         0       0       0       0       0
  1779 ;;      Locals:         0       0       1       0       0
  1780 ;;      Temps:          0       0       3       0       0
  1781 ;;      Totals:         0       0       4       0       0
  1782 ;;Total ram usage:        4 bytes
  1783 ;; Hardware stack levels used:    1
  1784 ;; Hardware stack levels required when called:    8
  1785 ;; This function calls:
  1786 ;;		_SetDDRamAddr
  1787 ;;		_beep
  1788 ;;		_putsXLCD
  1789 ;;		_sprintf
  1790 ;; This function is called by:
  1791 ;;		_main
  1792 ;; This function uses a non-reentrant model
  1793 ;;
  1794                           
  1795                           
  1796                           ;psect for function _start
  1797  0499                     _start:	
  1798  0499                     l3899:	
  1799                           ;incstack = 0
  1800 ;; hardware stack exceeded
  1801                           ; Regs used in _start: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1802                           
  1803  0499                     l3901:	
  1804                           
  1805                           ;main.c: 75:     INTCONbits.GIE = 0;
  1806  0499  138B               	bcf	11,7	;volatile
  1807                           
  1808                           ;main.c: 78:     for(i = 0; i < 10; i++){
  1809  049A  1683               	bsf	3,5	;RP0=1, select bank1
  1810  049B  1303               	bcf	3,6	;RP1=0, select bank1
  1811  049C  01DE               	clrf	start@i^(0+128)
  1812  049D                     l3907:	
  1813                           
  1814                           ;main.c: 79:         PORTCbits.RC1 = !PORTCbits.RC1;
  1815  049D  1003               	clrc
  1816  049E  1283               	bcf	3,5	;RP0=0, select bank0
  1817  049F  1303               	bcf	3,6	;RP1=0, select bank0
  1818  04A0  1C87               	btfss	7,1	;volatile
  1819  04A1  1403               	setc
  1820  04A2  1803               	btfsc	3,0
  1821  04A3  2CA5               	goto	u3241
  1822  04A4  2CA9               	goto	u3240
  1823  04A5                     u3241:	
  1824  04A5  1283               	bcf	3,5	;RP0=0, select bank0
  1825  04A6  1303               	bcf	3,6	;RP1=0, select bank0
  1826  04A7  1487               	bsf	7,1	;volatile
  1827  04A8  2CAC               	goto	u3254
  1828  04A9                     u3240:	
  1829  04A9  1283               	bcf	3,5	;RP0=0, select bank0
  1830  04AA  1303               	bcf	3,6	;RP1=0, select bank0
  1831  04AB  1087               	bcf	7,1	;volatile
  1832  04AC                     u3254:	
  1833  04AC                     l3909:	
  1834                           
  1835                           ;main.c: 80:         sprintf(lineOne,"TESTING         ");
  1836  04AC  3032               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1837  04AD  1683               	bsf	3,5	;RP0=1, select bank1
  1838  04AE  1303               	bcf	3,6	;RP1=0, select bank1
  1839  04AF  00DB               	movwf	??_start^(0+128)
  1840  04B0  085B               	movf	??_start^(0+128),w
  1841  04B1  00CA               	movwf	sprintf@f^(0+128)
  1842  04B2  30B2               	movlw	(low (_lineOne| 0))& (0+255)
  1843  04B3  120A  118A  2035  120A  118A  	fcall	_sprintf
  1844  04B8                     l3911:	
  1845                           
  1846                           ;main.c: 81:         sprintf(lineTwo,"          SUPPLY");
  1847  04B8  3098               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1848  04B9  1683               	bsf	3,5	;RP0=1, select bank1
  1849  04BA  1303               	bcf	3,6	;RP1=0, select bank1
  1850  04BB  00DB               	movwf	??_start^(0+128)
  1851  04BC  085B               	movf	??_start^(0+128),w
  1852  04BD  00CA               	movwf	sprintf@f^(0+128)
  1853  04BE  30A1               	movlw	(low (_lineTwo| 0))& (0+255)
  1854  04BF  120A  118A  2035  120A  118A  	fcall	_sprintf
  1855  04C4                     l3913:	
  1856                           
  1857                           ;main.c: 82:         SetDDRamAddr(0x00);
  1858  04C4  3000               	movlw	0
  1859  04C5  120A  158A  24DD  120A  118A  	fcall	_SetDDRamAddr
  1860  04CA                     l3915:	
  1861                           
  1862                           ;main.c: 83:         putsXLCD(lineOne);
  1863  04CA  30B2               	movlw	(low (_lineOne| 0))& (0+255)
  1864  04CB  120A  158A  2208  120A  118A  	fcall	_putsXLCD
  1865  04D0                     l3917:	
  1866                           
  1867                           ;main.c: 84:         SetDDRamAddr(0x40);
  1868  04D0  3040               	movlw	64
  1869  04D1  120A  158A  24DD  120A  118A  	fcall	_SetDDRamAddr
  1870  04D6                     l3919:	
  1871                           
  1872                           ;main.c: 85:         putsXLCD(lineTwo);
  1873  04D6  30A1               	movlw	(low (_lineTwo| 0))& (0+255)
  1874  04D7  120A  158A  2208  120A  118A  	fcall	_putsXLCD
  1875  04DC                     l3921:	
  1876                           
  1877                           ;main.c: 86:         _delay((unsigned long)((100)*(4000000/4000.0)));
  1878  04DC  3082               	movlw	130
  1879  04DD  1683               	bsf	3,5	;RP0=1, select bank1
  1880  04DE  1303               	bcf	3,6	;RP1=0, select bank1
  1881  04DF  00DC               	movwf	(??_start^(0+128)+1)
  1882  04E0  30DD               	movlw	221
  1883  04E1  00DB               	movwf	??_start^(0+128)
  1884  04E2                     u3437:	
  1885  04E2  0BDB               	decfsz	??_start^(0+128),f
  1886  04E3  2CE2               	goto	u3437
  1887  04E4  0BDC               	decfsz	(??_start^(0+128)+1),f
  1888  04E5  2CE2               	goto	u3437
  1889  04E6                     l3923:	
  1890                           
  1891                           ;main.c: 87:     }
  1892  04E6  3001               	movlw	1
  1893  04E7  1683               	bsf	3,5	;RP0=1, select bank1
  1894  04E8  1303               	bcf	3,6	;RP1=0, select bank1
  1895  04E9  00DB               	movwf	??_start^(0+128)
  1896  04EA  085B               	movf	??_start^(0+128),w
  1897  04EB  07DE               	addwf	start@i^(0+128),f
  1898  04EC                     l3925:	
  1899  04EC  300A               	movlw	10
  1900  04ED  025E               	subwf	start@i^(0+128),w
  1901  04EE  1C03               	skipc
  1902  04EF  2CF1               	goto	u3261
  1903  04F0  2CF2               	goto	u3260
  1904  04F1                     u3261:	
  1905  04F1  2C9D               	goto	l3907
  1906  04F2                     u3260:	
  1907  04F2                     l210:	
  1908                           
  1909                           ;main.c: 88:     PORTCbits.RC1 = 0;
  1910  04F2  1283               	bcf	3,5	;RP0=0, select bank0
  1911  04F3  1303               	bcf	3,6	;RP1=0, select bank0
  1912  04F4  1087               	bcf	7,1	;volatile
  1913  04F5                     l3927:	
  1914                           
  1915                           ;main.c: 90:     for(i = 0; i < 18; i++){
  1916  04F5  1683               	bsf	3,5	;RP0=1, select bank1
  1917  04F6  1303               	bcf	3,6	;RP1=0, select bank1
  1918  04F7  01DE               	clrf	start@i^(0+128)
  1919  04F8                     l3933:	
  1920                           
  1921                           ;main.c: 91:         PORTCbits.RC3 = !PORTCbits.RC3;
  1922  04F8  1003               	clrc
  1923  04F9  1283               	bcf	3,5	;RP0=0, select bank0
  1924  04FA  1303               	bcf	3,6	;RP1=0, select bank0
  1925  04FB  1D87               	btfss	7,3	;volatile
  1926  04FC  1403               	setc
  1927  04FD  1803               	btfsc	3,0
  1928  04FE  2D00               	goto	u3271
  1929  04FF  2D04               	goto	u3270
  1930  0500                     u3271:	
  1931  0500  1283               	bcf	3,5	;RP0=0, select bank0
  1932  0501  1303               	bcf	3,6	;RP1=0, select bank0
  1933  0502  1587               	bsf	7,3	;volatile
  1934  0503  2D07               	goto	u3284
  1935  0504                     u3270:	
  1936  0504  1283               	bcf	3,5	;RP0=0, select bank0
  1937  0505  1303               	bcf	3,6	;RP1=0, select bank0
  1938  0506  1187               	bcf	7,3	;volatile
  1939  0507                     u3284:	
  1940  0507                     l3935:	
  1941                           
  1942                           ;main.c: 92:         sprintf(lineOne,"TESTING         ");
  1943  0507  3032               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1944  0508  1683               	bsf	3,5	;RP0=1, select bank1
  1945  0509  1303               	bcf	3,6	;RP1=0, select bank1
  1946  050A  00DB               	movwf	??_start^(0+128)
  1947  050B  085B               	movf	??_start^(0+128),w
  1948  050C  00CA               	movwf	sprintf@f^(0+128)
  1949  050D  30B2               	movlw	(low (_lineOne| 0))& (0+255)
  1950  050E  120A  118A  2035  120A  118A  	fcall	_sprintf
  1951  0513                     l3937:	
  1952                           
  1953                           ;main.c: 93:         sprintf(lineTwo,"     TEMPERATURE");
  1954  0513  3054               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1955  0514  1683               	bsf	3,5	;RP0=1, select bank1
  1956  0515  1303               	bcf	3,6	;RP1=0, select bank1
  1957  0516  00DB               	movwf	??_start^(0+128)
  1958  0517  085B               	movf	??_start^(0+128),w
  1959  0518  00CA               	movwf	sprintf@f^(0+128)
  1960  0519  30A1               	movlw	(low (_lineTwo| 0))& (0+255)
  1961  051A  120A  118A  2035  120A  118A  	fcall	_sprintf
  1962  051F                     l3939:	
  1963                           
  1964                           ;main.c: 94:         SetDDRamAddr(0x00);
  1965  051F  3000               	movlw	0
  1966  0520  120A  158A  24DD  120A  118A  	fcall	_SetDDRamAddr
  1967  0525                     l3941:	
  1968                           
  1969                           ;main.c: 95:         putsXLCD(lineOne);
  1970  0525  30B2               	movlw	(low (_lineOne| 0))& (0+255)
  1971  0526  120A  158A  2208  120A  118A  	fcall	_putsXLCD
  1972  052B                     l3943:	
  1973                           
  1974                           ;main.c: 96:         SetDDRamAddr(0x40);
  1975  052B  3040               	movlw	64
  1976  052C  120A  158A  24DD  120A  118A  	fcall	_SetDDRamAddr
  1977  0531                     l3945:	
  1978                           
  1979                           ;main.c: 97:         putsXLCD(lineTwo);
  1980  0531  30A1               	movlw	(low (_lineTwo| 0))& (0+255)
  1981  0532  120A  158A  2208  120A  118A  	fcall	_putsXLCD
  1982  0537                     l3947:	
  1983                           
  1984                           ;main.c: 98:         _delay((unsigned long)((100)*(4000000/4000.0)));
  1985  0537  3082               	movlw	130
  1986  0538  1683               	bsf	3,5	;RP0=1, select bank1
  1987  0539  1303               	bcf	3,6	;RP1=0, select bank1
  1988  053A  00DC               	movwf	(??_start^(0+128)+1)
  1989  053B  30DD               	movlw	221
  1990  053C  00DB               	movwf	??_start^(0+128)
  1991  053D                     u3447:	
  1992  053D  0BDB               	decfsz	??_start^(0+128),f
  1993  053E  2D3D               	goto	u3447
  1994  053F  0BDC               	decfsz	(??_start^(0+128)+1),f
  1995  0540  2D3D               	goto	u3447
  1996  0541                     l3949:	
  1997                           
  1998                           ;main.c: 99:     }
  1999  0541  3001               	movlw	1
  2000  0542  1683               	bsf	3,5	;RP0=1, select bank1
  2001  0543  1303               	bcf	3,6	;RP1=0, select bank1
  2002  0544  00DB               	movwf	??_start^(0+128)
  2003  0545  085B               	movf	??_start^(0+128),w
  2004  0546  07DE               	addwf	start@i^(0+128),f
  2005  0547                     l3951:	
  2006  0547  3012               	movlw	18
  2007  0548  025E               	subwf	start@i^(0+128),w
  2008  0549  1C03               	skipc
  2009  054A  2D4C               	goto	u3291
  2010  054B  2D4D               	goto	u3290
  2011  054C                     u3291:	
  2012  054C  2CF8               	goto	l3933
  2013  054D                     u3290:	
  2014  054D                     l212:	
  2015                           
  2016                           ;main.c: 100:     PORTCbits.RC3 = 0;
  2017  054D  1283               	bcf	3,5	;RP0=0, select bank0
  2018  054E  1303               	bcf	3,6	;RP1=0, select bank0
  2019  054F  1187               	bcf	7,3	;volatile
  2020  0550                     l3953:	
  2021                           
  2022                           ;main.c: 102:     for(i = 0; i < 15; i++){
  2023  0550  1683               	bsf	3,5	;RP0=1, select bank1
  2024  0551  1303               	bcf	3,6	;RP1=0, select bank1
  2025  0552  01DE               	clrf	start@i^(0+128)
  2026  0553                     l3959:	
  2027                           
  2028                           ;main.c: 103:         PORTCbits.RC2 = !PORTCbits.RC2;
  2029  0553  1003               	clrc
  2030  0554  1283               	bcf	3,5	;RP0=0, select bank0
  2031  0555  1303               	bcf	3,6	;RP1=0, select bank0
  2032  0556  1D07               	btfss	7,2	;volatile
  2033  0557  1403               	setc
  2034  0558  1803               	btfsc	3,0
  2035  0559  2D5B               	goto	u3301
  2036  055A  2D5F               	goto	u3300
  2037  055B                     u3301:	
  2038  055B  1283               	bcf	3,5	;RP0=0, select bank0
  2039  055C  1303               	bcf	3,6	;RP1=0, select bank0
  2040  055D  1507               	bsf	7,2	;volatile
  2041  055E  2D62               	goto	u3314
  2042  055F                     u3300:	
  2043  055F  1283               	bcf	3,5	;RP0=0, select bank0
  2044  0560  1303               	bcf	3,6	;RP1=0, select bank0
  2045  0561  1107               	bcf	7,2	;volatile
  2046  0562                     u3314:	
  2047  0562                     l3961:	
  2048                           
  2049                           ;main.c: 104:         sprintf(lineOne,"TESTING         ");
  2050  0562  3032               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  2051  0563  1683               	bsf	3,5	;RP0=1, select bank1
  2052  0564  1303               	bcf	3,6	;RP1=0, select bank1
  2053  0565  00DB               	movwf	??_start^(0+128)
  2054  0566  085B               	movf	??_start^(0+128),w
  2055  0567  00CA               	movwf	sprintf@f^(0+128)
  2056  0568  30B2               	movlw	(low (_lineOne| 0))& (0+255)
  2057  0569  120A  118A  2035  120A  118A  	fcall	_sprintf
  2058  056E                     l3963:	
  2059                           
  2060                           ;main.c: 105:         sprintf(lineTwo,"             SWR");
  2061  056E  3076               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  2062  056F  1683               	bsf	3,5	;RP0=1, select bank1
  2063  0570  1303               	bcf	3,6	;RP1=0, select bank1
  2064  0571  00DB               	movwf	??_start^(0+128)
  2065  0572  085B               	movf	??_start^(0+128),w
  2066  0573  00CA               	movwf	sprintf@f^(0+128)
  2067  0574  30A1               	movlw	(low (_lineTwo| 0))& (0+255)
  2068  0575  120A  118A  2035  120A  118A  	fcall	_sprintf
  2069  057A                     l3965:	
  2070                           
  2071                           ;main.c: 106:         SetDDRamAddr(0x00);
  2072  057A  3000               	movlw	0
  2073  057B  120A  158A  24DD  120A  118A  	fcall	_SetDDRamAddr
  2074  0580                     l3967:	
  2075                           
  2076                           ;main.c: 107:         putsXLCD(lineOne);
  2077  0580  30B2               	movlw	(low (_lineOne| 0))& (0+255)
  2078  0581  120A  158A  2208  120A  118A  	fcall	_putsXLCD
  2079  0586                     l3969:	
  2080                           
  2081                           ;main.c: 108:         SetDDRamAddr(0x40);
  2082  0586  3040               	movlw	64
  2083  0587  120A  158A  24DD  120A  118A  	fcall	_SetDDRamAddr
  2084  058C                     l3971:	
  2085                           
  2086                           ;main.c: 109:         putsXLCD(lineTwo);
  2087  058C  30A1               	movlw	(low (_lineTwo| 0))& (0+255)
  2088  058D  120A  158A  2208  120A  118A  	fcall	_putsXLCD
  2089  0592                     l3973:	
  2090                           
  2091                           ;main.c: 110:         _delay((unsigned long)((100)*(4000000/4000.0)));
  2092  0592  3082               	movlw	130
  2093  0593  1683               	bsf	3,5	;RP0=1, select bank1
  2094  0594  1303               	bcf	3,6	;RP1=0, select bank1
  2095  0595  00DC               	movwf	(??_start^(0+128)+1)
  2096  0596  30DD               	movlw	221
  2097  0597  00DB               	movwf	??_start^(0+128)
  2098  0598                     u3457:	
  2099  0598  0BDB               	decfsz	??_start^(0+128),f
  2100  0599  2D98               	goto	u3457
  2101  059A  0BDC               	decfsz	(??_start^(0+128)+1),f
  2102  059B  2D98               	goto	u3457
  2103  059C                     l3975:	
  2104                           
  2105                           ;main.c: 111:     }
  2106  059C  3001               	movlw	1
  2107  059D  1683               	bsf	3,5	;RP0=1, select bank1
  2108  059E  1303               	bcf	3,6	;RP1=0, select bank1
  2109  059F  00DB               	movwf	??_start^(0+128)
  2110  05A0  085B               	movf	??_start^(0+128),w
  2111  05A1  07DE               	addwf	start@i^(0+128),f
  2112  05A2                     l3977:	
  2113  05A2  300F               	movlw	15
  2114  05A3  025E               	subwf	start@i^(0+128),w
  2115  05A4  1C03               	skipc
  2116  05A5  2DA7               	goto	u3321
  2117  05A6  2DA8               	goto	u3320
  2118  05A7                     u3321:	
  2119  05A7  2D53               	goto	l3959
  2120  05A8                     u3320:	
  2121  05A8                     l214:	
  2122                           
  2123                           ;main.c: 112:     PORTCbits.RC2 = 0;
  2124  05A8  1283               	bcf	3,5	;RP0=0, select bank0
  2125  05A9  1303               	bcf	3,6	;RP1=0, select bank0
  2126  05AA  1107               	bcf	7,2	;volatile
  2127  05AB                     l3979:	
  2128                           
  2129                           ;main.c: 113:     beep(250);
  2130  05AB  30FA               	movlw	250
  2131  05AC  1683               	bsf	3,5	;RP0=1, select bank1
  2132  05AD  1303               	bcf	3,6	;RP1=0, select bank1
  2133  05AE  00C3               	movwf	beep@ms^(0+128)
  2134  05AF  3000               	movlw	0
  2135  05B0  00C4               	movwf	(beep@ms^(0+128)+1)
  2136  05B1  120A  158A  248E  120A  118A  	fcall	_beep
  2137  05B6                     l3981:	
  2138                           
  2139                           ;main.c: 114:     INTCONbits.GIE = 1;
  2140  05B6  178B               	bsf	11,7	;volatile
  2141  05B7                     l3983:	
  2142                           
  2143                           ;main.c: 115:     _delay((unsigned long)((500)*(4000000/4000.0)));
  2144  05B7  3003               	movlw	3
  2145  05B8  1683               	bsf	3,5	;RP0=1, select bank1
  2146  05B9  1303               	bcf	3,6	;RP1=0, select bank1
  2147  05BA  00DD               	movwf	(??_start^(0+128)+2)
  2148  05BB  308A               	movlw	138
  2149  05BC  00DC               	movwf	(??_start^(0+128)+1)
  2150  05BD  3055               	movlw	85
  2151  05BE  00DB               	movwf	??_start^(0+128)
  2152  05BF                     u3467:	
  2153  05BF  0BDB               	decfsz	??_start^(0+128),f
  2154  05C0  2DBF               	goto	u3467
  2155  05C1  0BDC               	decfsz	(??_start^(0+128)+1),f
  2156  05C2  2DBF               	goto	u3467
  2157  05C3  0BDD               	decfsz	(??_start^(0+128)+2),f
  2158  05C4  2DBF               	goto	u3467
  2159  05C5                     l3985:	
  2160                           
  2161                           ;main.c: 116:     PORTCbits.RC1 = 1;
  2162  05C5  1283               	bcf	3,5	;RP0=0, select bank0
  2163  05C6  1303               	bcf	3,6	;RP1=0, select bank0
  2164  05C7  1487               	bsf	7,1	;volatile
  2165  05C8                     l3987:	
  2166                           
  2167                           ;main.c: 117:     PORTCbits.RC3 = 1;
  2168  05C8  1587               	bsf	7,3	;volatile
  2169  05C9                     l3989:	
  2170                           
  2171                           ;main.c: 118:     PORTCbits.RC2 = 1;
  2172  05C9  1507               	bsf	7,2	;volatile
  2173  05CA                     l3991:	
  2174                           
  2175                           ;main.c: 119:     INTCONbits.GIE = 1;
  2176  05CA  178B               	bsf	11,7	;volatile
  2177  05CB                     l215:	
  2178  05CB  0008               	return
  2179  05CC                     __end_of_start:	
  2180                           
  2181                           	psect	text2
  2182  0361                     __ptext2:	
  2183 ;; *************** function _setFrequency *****************
  2184 ;; Defined at:
  2185 ;;		line 179 in file "main.c"
  2186 ;; Parameters:    Size  Location     Type
  2187 ;;		None
  2188 ;; Auto vars:     Size  Location     Type
  2189 ;;		None
  2190 ;; Return value:  Size  Location     Type
  2191 ;;                  1    wreg      void 
  2192 ;; Registers used:
  2193 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2194 ;; Tracked objects:
  2195 ;;		On entry : 0/0
  2196 ;;		On exit  : 0/0
  2197 ;;		Unchanged: 0/0
  2198 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2199 ;;      Params:         0       0       0       0       0
  2200 ;;      Locals:         0       0       0       0       0
  2201 ;;      Temps:          0       0       3       0       0
  2202 ;;      Totals:         0       0       3       0       0
  2203 ;;Total ram usage:        3 bytes
  2204 ;; Hardware stack levels used:    1
  2205 ;; Hardware stack levels required when called:    9
  2206 ;; This function calls:
  2207 ;;		_SetDDRamAddr
  2208 ;;		_beep
  2209 ;;		_lockingScreen
  2210 ;;		_putsXLCD
  2211 ;;		_setData
  2212 ;;		_sprintf
  2213 ;;		_writeFrequency
  2214 ;; This function is called by:
  2215 ;;		_main
  2216 ;; This function uses a non-reentrant model
  2217 ;;
  2218                           
  2219                           
  2220                           ;psect for function _setFrequency
  2221  0361                     _setFrequency:	
  2222  0361                     l3839:	
  2223                           ;incstack = 0
  2224 ;; hardware stack exceeded
  2225                           ; Regs used in _setFrequency: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2226                           
  2227                           
  2228                           ;main.c: 180:     isOnConfig = 1;
  2229  0361  1283               	bcf	3,5	;RP0=0, select bank0
  2230  0362  1303               	bcf	3,6	;RP1=0, select bank0
  2231  0363  01CE               	clrf	_isOnConfig
  2232  0364  0ACE               	incf	_isOnConfig,f
  2233  0365                     l3841:	
  2234                           
  2235                           ;main.c: 181:     sprintf(lineOne,"SET   FREQUENCY ");
  2236  0365  3043               	movlw	(low ((STR_7-__stringbase)| (0+32768)))& (0+255)
  2237  0366  1683               	bsf	3,5	;RP0=1, select bank1
  2238  0367  1303               	bcf	3,6	;RP1=0, select bank1
  2239  0368  00DC               	movwf	??_setFrequency^(0+128)
  2240  0369  085C               	movf	??_setFrequency^(0+128),w
  2241  036A  00CA               	movwf	sprintf@f^(0+128)
  2242  036B  30B2               	movlw	(low (_lineOne| 0))& (0+255)
  2243  036C  120A  118A  2035  120A  118A  	fcall	_sprintf
  2244  0371                     l3843:	
  2245                           
  2246                           ;main.c: 182:     SetDDRamAddr(0x00);
  2247  0371  3000               	movlw	0
  2248  0372  120A  158A  24DD  120A  118A  	fcall	_SetDDRamAddr
  2249  0377                     l3845:	
  2250                           
  2251                           ;main.c: 183:     putsXLCD(lineOne);
  2252  0377  30B2               	movlw	(low (_lineOne| 0))& (0+255)
  2253  0378  120A  158A  2208  120A  118A  	fcall	_putsXLCD
  2254                           
  2255                           ;main.c: 184:     beep(200);
  2256  037D  30C8               	movlw	200
  2257  037E  1683               	bsf	3,5	;RP0=1, select bank1
  2258  037F  1303               	bcf	3,6	;RP1=0, select bank1
  2259  0380  00C3               	movwf	beep@ms^(0+128)
  2260  0381  3000               	movlw	0
  2261  0382  00C4               	movwf	(beep@ms^(0+128)+1)
  2262  0383  120A  158A  248E  120A  118A  	fcall	_beep
  2263  0388                     l239:	
  2264                           ;main.c: 185:     while(!PORTAbits.RA4)continue;
  2265                           
  2266  0388  1283               	bcf	3,5	;RP0=0, select bank0
  2267  0389  1303               	bcf	3,6	;RP1=0, select bank0
  2268  038A  1E05               	btfss	5,4	;volatile
  2269  038B  2B8D               	goto	u3091
  2270  038C  2B8E               	goto	u3090
  2271  038D                     u3091:	
  2272  038D  2B88               	goto	l239
  2273  038E                     u3090:	
  2274  038E                     l242:	
  2275                           ;main.c: 187:     while(1){
  2276                           
  2277                           
  2278                           ;main.c: 188:         if(!PORTAbits.RA3){
  2279  038E  1985               	btfsc	5,3	;volatile
  2280  038F  2B91               	goto	u3101
  2281  0390  2B92               	goto	u3100
  2282  0391                     u3101:	
  2283  0391  2BF2               	goto	l243
  2284  0392                     u3100:	
  2285  0392                     l3847:	
  2286                           
  2287                           ;main.c: 189:             if(frequency < 1080)frequency++;
  2288  0392  3004               	movlw	4
  2289  0393  0245               	subwf	_frequency+1,w
  2290  0394  3038               	movlw	56
  2291  0395  1903               	skipnz
  2292  0396  0244               	subwf	_frequency,w
  2293  0397  1803               	skipnc
  2294  0398  2B9A               	goto	u3111
  2295  0399  2B9B               	goto	u3110
  2296  039A                     u3111:	
  2297  039A  2BA1               	goto	l244
  2298  039B                     u3110:	
  2299  039B                     l3849:	
  2300  039B  3001               	movlw	1
  2301  039C  07C4               	addwf	_frequency,f
  2302  039D  1803               	skipnc
  2303  039E  0AC5               	incf	_frequency+1,f
  2304  039F  3000               	movlw	0
  2305  03A0  07C5               	addwf	_frequency+1,f
  2306  03A1                     l244:	
  2307                           
  2308                           ;main.c: 190:             if(frequency > 1080)frequency = 1080;
  2309  03A1  3004               	movlw	4
  2310  03A2  0245               	subwf	_frequency+1,w
  2311  03A3  3039               	movlw	57
  2312  03A4  1903               	skipnz
  2313  03A5  0244               	subwf	_frequency,w
  2314  03A6  1C03               	skipc
  2315  03A7  2BA9               	goto	u3121
  2316  03A8  2BAA               	goto	u3120
  2317  03A9                     u3121:	
  2318  03A9  2BAE               	goto	l3853
  2319  03AA                     u3120:	
  2320  03AA                     l3851:	
  2321  03AA  3038               	movlw	56
  2322  03AB  00C4               	movwf	_frequency
  2323  03AC  3004               	movlw	4
  2324  03AD  00C5               	movwf	_frequency+1
  2325  03AE                     l3853:	
  2326                           
  2327                           ;main.c: 191:             beep(100);
  2328  03AE  3064               	movlw	100
  2329  03AF  1683               	bsf	3,5	;RP0=1, select bank1
  2330  03B0  1303               	bcf	3,6	;RP1=0, select bank1
  2331  03B1  00C3               	movwf	beep@ms^(0+128)
  2332  03B2  3000               	movlw	0
  2333  03B3  00C4               	movwf	(beep@ms^(0+128)+1)
  2334  03B4  120A  158A  248E  120A  118A  	fcall	_beep
  2335  03B9                     l3855:	
  2336                           
  2337                           ;main.c: 192:             _delay((unsigned long)((150)*(4000000/4000.0)));
  2338  03B9  30C3               	movlw	195
  2339  03BA  1683               	bsf	3,5	;RP0=1, select bank1
  2340  03BB  1303               	bcf	3,6	;RP1=0, select bank1
  2341  03BC  00DD               	movwf	(??_setFrequency^(0+128)+1)
  2342  03BD  30CC               	movlw	204
  2343  03BE  00DC               	movwf	??_setFrequency^(0+128)
  2344  03BF                     u3477:	
  2345  03BF  0BDC               	decfsz	??_setFrequency^(0+128),f
  2346  03C0  2BBF               	goto	u3477
  2347  03C1  0BDD               	decfsz	(??_setFrequency^(0+128)+1),f
  2348  03C2  2BBF               	goto	u3477
  2349  03C3  0000               	nop
  2350                           
  2351                           ;main.c: 193:             while(!PORTAbits.RA3){
  2352  03C4  2BEC               	goto	l3863
  2353  03C5                     l3857:	
  2354                           
  2355                           ;main.c: 194:                 if(frequency < 1080)frequency++;
  2356  03C5  3004               	movlw	4
  2357  03C6  0245               	subwf	_frequency+1,w
  2358  03C7  3038               	movlw	56
  2359  03C8  1903               	skipnz
  2360  03C9  0244               	subwf	_frequency,w
  2361  03CA  1803               	skipnc
  2362  03CB  2BCD               	goto	u3131
  2363  03CC  2BCE               	goto	u3130
  2364  03CD                     u3131:	
  2365  03CD  2BD4               	goto	l248
  2366  03CE                     u3130:	
  2367  03CE                     l3859:	
  2368  03CE  3001               	movlw	1
  2369  03CF  07C4               	addwf	_frequency,f
  2370  03D0  1803               	skipnc
  2371  03D1  0AC5               	incf	_frequency+1,f
  2372  03D2  3000               	movlw	0
  2373  03D3  07C5               	addwf	_frequency+1,f
  2374  03D4                     l248:	
  2375                           
  2376                           ;main.c: 195:                 if(frequency > 1080)frequency = 1080;
  2377  03D4  3004               	movlw	4
  2378  03D5  0245               	subwf	_frequency+1,w
  2379  03D6  3039               	movlw	57
  2380  03D7  1903               	skipnz
  2381  03D8  0244               	subwf	_frequency,w
  2382  03D9  1C03               	skipc
  2383  03DA  2BDC               	goto	u3141
  2384  03DB  2BDD               	goto	u3140
  2385  03DC                     u3141:	
  2386  03DC  2BE1               	goto	l249
  2387  03DD                     u3140:	
  2388  03DD                     l3861:	
  2389  03DD  3038               	movlw	56
  2390  03DE  00C4               	movwf	_frequency
  2391  03DF  3004               	movlw	4
  2392  03E0  00C5               	movwf	_frequency+1
  2393  03E1                     l249:	
  2394                           
  2395                           ;main.c: 196:                 _delay((unsigned long)((50)*(4000000/4000.0)));
  2396  03E1  3041               	movlw	65
  2397  03E2  1683               	bsf	3,5	;RP0=1, select bank1
  2398  03E3  1303               	bcf	3,6	;RP1=0, select bank1
  2399  03E4  00DD               	movwf	(??_setFrequency^(0+128)+1)
  2400  03E5  30ED               	movlw	237
  2401  03E6  00DC               	movwf	??_setFrequency^(0+128)
  2402  03E7                     u3487:	
  2403  03E7  0BDC               	decfsz	??_setFrequency^(0+128),f
  2404  03E8  2BE7               	goto	u3487
  2405  03E9  0BDD               	decfsz	(??_setFrequency^(0+128)+1),f
  2406  03EA  2BE7               	goto	u3487
  2407  03EB  2BEC               	nop2
  2408  03EC                     l3863:	
  2409                           
  2410                           ;main.c: 193:             while(!PORTAbits.RA3){
  2411  03EC  1283               	bcf	3,5	;RP0=0, select bank0
  2412  03ED  1303               	bcf	3,6	;RP1=0, select bank0
  2413  03EE  1D85               	btfss	5,3	;volatile
  2414  03EF  2BF1               	goto	u3151
  2415  03F0  2BF2               	goto	u3150
  2416  03F1                     u3151:	
  2417  03F1  2BC5               	goto	l3857
  2418  03F2                     u3150:	
  2419  03F2                     l243:	
  2420                           ;main.c: 198:         }
  2421                           
  2422                           
  2423                           ;main.c: 200:         if(!PORTAbits.RA5){
  2424  03F2  1A85               	btfsc	5,5	;volatile
  2425  03F3  2BF5               	goto	u3161
  2426  03F4  2BF6               	goto	u3160
  2427  03F5                     u3161:	
  2428  03F5  2C56               	goto	l251
  2429  03F6                     u3160:	
  2430  03F6                     l3865:	
  2431                           
  2432                           ;main.c: 201:             if(frequency > 880)frequency--;
  2433  03F6  3003               	movlw	3
  2434  03F7  0245               	subwf	_frequency+1,w
  2435  03F8  3071               	movlw	113
  2436  03F9  1903               	skipnz
  2437  03FA  0244               	subwf	_frequency,w
  2438  03FB  1C03               	skipc
  2439  03FC  2BFE               	goto	u3171
  2440  03FD  2BFF               	goto	u3170
  2441  03FE                     u3171:	
  2442  03FE  2C05               	goto	l252
  2443  03FF                     u3170:	
  2444  03FF                     l3867:	
  2445  03FF  3001               	movlw	1
  2446  0400  02C4               	subwf	_frequency,f
  2447  0401  3000               	movlw	0
  2448  0402  1C03               	skipc
  2449  0403  03C5               	decf	_frequency+1,f
  2450  0404  02C5               	subwf	_frequency+1,f
  2451  0405                     l252:	
  2452                           
  2453                           ;main.c: 202:             if(frequency < 880)frequency = 880;
  2454  0405  3003               	movlw	3
  2455  0406  0245               	subwf	_frequency+1,w
  2456  0407  3070               	movlw	112
  2457  0408  1903               	skipnz
  2458  0409  0244               	subwf	_frequency,w
  2459  040A  1803               	skipnc
  2460  040B  2C0D               	goto	u3181
  2461  040C  2C0E               	goto	u3180
  2462  040D                     u3181:	
  2463  040D  2C12               	goto	l3871
  2464  040E                     u3180:	
  2465  040E                     l3869:	
  2466  040E  3070               	movlw	112
  2467  040F  00C4               	movwf	_frequency
  2468  0410  3003               	movlw	3
  2469  0411  00C5               	movwf	_frequency+1
  2470  0412                     l3871:	
  2471                           
  2472                           ;main.c: 203:             beep(100);
  2473  0412  3064               	movlw	100
  2474  0413  1683               	bsf	3,5	;RP0=1, select bank1
  2475  0414  1303               	bcf	3,6	;RP1=0, select bank1
  2476  0415  00C3               	movwf	beep@ms^(0+128)
  2477  0416  3000               	movlw	0
  2478  0417  00C4               	movwf	(beep@ms^(0+128)+1)
  2479  0418  120A  158A  248E  120A  118A  	fcall	_beep
  2480  041D                     l3873:	
  2481                           
  2482                           ;main.c: 204:             _delay((unsigned long)((150)*(4000000/4000.0)));
  2483  041D  30C3               	movlw	195
  2484  041E  1683               	bsf	3,5	;RP0=1, select bank1
  2485  041F  1303               	bcf	3,6	;RP1=0, select bank1
  2486  0420  00DD               	movwf	(??_setFrequency^(0+128)+1)
  2487  0421  30CC               	movlw	204
  2488  0422  00DC               	movwf	??_setFrequency^(0+128)
  2489  0423                     u3497:	
  2490  0423  0BDC               	decfsz	??_setFrequency^(0+128),f
  2491  0424  2C23               	goto	u3497
  2492  0425  0BDD               	decfsz	(??_setFrequency^(0+128)+1),f
  2493  0426  2C23               	goto	u3497
  2494  0427  0000               	nop
  2495                           
  2496                           ;main.c: 205:             while(!PORTAbits.RA5){
  2497  0428  2C50               	goto	l3881
  2498  0429                     l3875:	
  2499                           
  2500                           ;main.c: 206:                 if(frequency > 880)frequency--;
  2501  0429  3003               	movlw	3
  2502  042A  0245               	subwf	_frequency+1,w
  2503  042B  3071               	movlw	113
  2504  042C  1903               	skipnz
  2505  042D  0244               	subwf	_frequency,w
  2506  042E  1C03               	skipc
  2507  042F  2C31               	goto	u3191
  2508  0430  2C32               	goto	u3190
  2509  0431                     u3191:	
  2510  0431  2C38               	goto	l256
  2511  0432                     u3190:	
  2512  0432                     l3877:	
  2513  0432  3001               	movlw	1
  2514  0433  02C4               	subwf	_frequency,f
  2515  0434  3000               	movlw	0
  2516  0435  1C03               	skipc
  2517  0436  03C5               	decf	_frequency+1,f
  2518  0437  02C5               	subwf	_frequency+1,f
  2519  0438                     l256:	
  2520                           
  2521                           ;main.c: 207:                 if(frequency < 880)frequency = 880;
  2522  0438  3003               	movlw	3
  2523  0439  0245               	subwf	_frequency+1,w
  2524  043A  3070               	movlw	112
  2525  043B  1903               	skipnz
  2526  043C  0244               	subwf	_frequency,w
  2527  043D  1803               	skipnc
  2528  043E  2C40               	goto	u3201
  2529  043F  2C41               	goto	u3200
  2530  0440                     u3201:	
  2531  0440  2C45               	goto	l257
  2532  0441                     u3200:	
  2533  0441                     l3879:	
  2534  0441  3070               	movlw	112
  2535  0442  00C4               	movwf	_frequency
  2536  0443  3003               	movlw	3
  2537  0444  00C5               	movwf	_frequency+1
  2538  0445                     l257:	
  2539                           
  2540                           ;main.c: 208:                 _delay((unsigned long)((50)*(4000000/4000.0)));
  2541  0445  3041               	movlw	65
  2542  0446  1683               	bsf	3,5	;RP0=1, select bank1
  2543  0447  1303               	bcf	3,6	;RP1=0, select bank1
  2544  0448  00DD               	movwf	(??_setFrequency^(0+128)+1)
  2545  0449  30ED               	movlw	237
  2546  044A  00DC               	movwf	??_setFrequency^(0+128)
  2547  044B                     u3507:	
  2548  044B  0BDC               	decfsz	??_setFrequency^(0+128),f
  2549  044C  2C4B               	goto	u3507
  2550  044D  0BDD               	decfsz	(??_setFrequency^(0+128)+1),f
  2551  044E  2C4B               	goto	u3507
  2552  044F  2C50               	nop2
  2553  0450                     l3881:	
  2554                           
  2555                           ;main.c: 205:             while(!PORTAbits.RA5){
  2556  0450  1283               	bcf	3,5	;RP0=0, select bank0
  2557  0451  1303               	bcf	3,6	;RP1=0, select bank0
  2558  0452  1E85               	btfss	5,5	;volatile
  2559  0453  2C55               	goto	u3211
  2560  0454  2C56               	goto	u3210
  2561  0455                     u3211:	
  2562  0455  2C29               	goto	l3875
  2563  0456                     u3210:	
  2564  0456                     l251:	
  2565                           ;main.c: 210:         }
  2566                           
  2567                           
  2568                           ;main.c: 212:         if(!PORTAbits.RA4){
  2569  0456  1A05               	btfsc	5,4	;volatile
  2570  0457  2C59               	goto	u3221
  2571  0458  2C5A               	goto	u3220
  2572  0459                     u3221:	
  2573  0459  2B8E               	goto	l242
  2574  045A                     u3220:	
  2575  045A                     l3883:	
  2576                           
  2577                           ;main.c: 213:             _delay((unsigned long)((500)*(4000000/4000.0)));
  2578  045A  3003               	movlw	3
  2579  045B  1683               	bsf	3,5	;RP0=1, select bank1
  2580  045C  1303               	bcf	3,6	;RP1=0, select bank1
  2581  045D  00DE               	movwf	(??_setFrequency^(0+128)+2)
  2582  045E  308A               	movlw	138
  2583  045F  00DD               	movwf	(??_setFrequency^(0+128)+1)
  2584  0460  3055               	movlw	85
  2585  0461  00DC               	movwf	??_setFrequency^(0+128)
  2586  0462                     u3517:	
  2587  0462  0BDC               	decfsz	??_setFrequency^(0+128),f
  2588  0463  2C62               	goto	u3517
  2589  0464  0BDD               	decfsz	(??_setFrequency^(0+128)+1),f
  2590  0465  2C62               	goto	u3517
  2591  0466  0BDE               	decfsz	(??_setFrequency^(0+128)+2),f
  2592  0467  2C62               	goto	u3517
  2593  0468                     l3885:	
  2594                           
  2595                           ;main.c: 214:             if(!PORTAbits.RA4){
  2596  0468  1283               	bcf	3,5	;RP0=0, select bank0
  2597  0469  1303               	bcf	3,6	;RP1=0, select bank0
  2598  046A  1A05               	btfsc	5,4	;volatile
  2599  046B  2C6D               	goto	u3231
  2600  046C  2C6E               	goto	u3230
  2601  046D                     u3231:	
  2602  046D  2B8E               	goto	l242
  2603  046E                     u3230:	
  2604  046E                     l3887:	
  2605                           
  2606                           ;main.c: 215:                 setData(1);
  2607  046E  3001               	movlw	1
  2608  046F  120A  158A  25D9  120A  118A  	fcall	_setData
  2609  0474                     l3889:	
  2610                           
  2611                           ;main.c: 216:                 beep(1000);
  2612  0474  30E8               	movlw	232
  2613  0475  1683               	bsf	3,5	;RP0=1, select bank1
  2614  0476  1303               	bcf	3,6	;RP1=0, select bank1
  2615  0477  00C3               	movwf	beep@ms^(0+128)
  2616  0478  3003               	movlw	3
  2617  0479  00C4               	movwf	(beep@ms^(0+128)+1)
  2618  047A  120A  158A  248E  120A  118A  	fcall	_beep
  2619  047F                     l3891:	
  2620                           ;main.c: 217:                 break;
  2621                           
  2622                           
  2623                           ;main.c: 222:     isOnConfig = 0;
  2624  047F  1283               	bcf	3,5	;RP0=0, select bank0
  2625  0480  1303               	bcf	3,6	;RP1=0, select bank0
  2626  0481  01CE               	clrf	_isOnConfig
  2627  0482                     l3893:	
  2628                           
  2629                           ;main.c: 223:     lockingScreen();
  2630  0482  120A  118A  27CF  120A  118A  	fcall	_lockingScreen
  2631  0487                     l3895:	
  2632                           
  2633                           ;main.c: 224:     writeFrequency(frequency);
  2634  0487  1283               	bcf	3,5	;RP0=0, select bank0
  2635  0488  1303               	bcf	3,6	;RP1=0, select bank0
  2636  0489  0845               	movf	_frequency+1,w
  2637  048A  1683               	bsf	3,5	;RP0=1, select bank1
  2638  048B  1303               	bcf	3,6	;RP1=0, select bank1
  2639  048C  00C6               	movwf	(writeFrequency@f+1)^(0+128)
  2640  048D  1283               	bcf	3,5	;RP0=0, select bank0
  2641  048E  1303               	bcf	3,6	;RP1=0, select bank0
  2642  048F  0844               	movf	_frequency,w
  2643  0490  1683               	bsf	3,5	;RP0=1, select bank1
  2644  0491  1303               	bcf	3,6	;RP1=0, select bank1
  2645  0492  00C5               	movwf	writeFrequency@f^(0+128)
  2646  0493  120A  118A  25CC  120A  118A  	fcall	_writeFrequency
  2647  0498                     l263:	
  2648  0498  0008               	return
  2649  0499                     __end_of_setFrequency:	
  2650                           
  2651                           	psect	text3
  2652  05CC                     __ptext3:	
  2653 ;; *************** function _writeFrequency *****************
  2654 ;; Defined at:
  2655 ;;		line 12 in file "bh1514.c"
  2656 ;; Parameters:    Size  Location     Type
  2657 ;;  f               2    2[BANK1 ] unsigned int 
  2658 ;; Auto vars:     Size  Location     Type
  2659 ;;  r               2    9[BANK1 ] unsigned int 
  2660 ;;  buffer          2    7[BANK1 ] unsigned int 
  2661 ;; Return value:  Size  Location     Type
  2662 ;;                  1    wreg      void 
  2663 ;; Registers used:
  2664 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  2665 ;; Tracked objects:
  2666 ;;		On entry : 0/0
  2667 ;;		On exit  : 0/0
  2668 ;;		Unchanged: 0/0
  2669 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2670 ;;      Params:         0       0       2       0       0
  2671 ;;      Locals:         0       0       4       0       0
  2672 ;;      Temps:          0       0       3       0       0
  2673 ;;      Totals:         0       0       9       0       0
  2674 ;;Total ram usage:        9 bytes
  2675 ;; Hardware stack levels used:    1
  2676 ;; Hardware stack levels required when called:    7
  2677 ;; This function calls:
  2678 ;;		_beep
  2679 ;;		_codFreq
  2680 ;; This function is called by:
  2681 ;;		_main
  2682 ;;		_setFrequency
  2683 ;; This function uses a non-reentrant model
  2684 ;;
  2685                           
  2686                           
  2687                           ;psect for function _writeFrequency
  2688  05CC                     _writeFrequency:	
  2689  05CC                     l3737:	
  2690                           ;incstack = 0
  2691                           ; Regs used in _writeFrequency: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  2692                           
  2693                           
  2694                           ;bh1514.c: 13:     unsigned int buffer;;bh1514.c: 14:     unsigned int r;;bh1514.c: 16: 
      +                              PORTCbits.RC4 = 0;
  2695  05CC  1283               	bcf	3,5	;RP0=0, select bank0
  2696  05CD  1303               	bcf	3,6	;RP1=0, select bank0
  2697  05CE  1207               	bcf	7,4	;volatile
  2698                           
  2699                           ;bh1514.c: 17:     PORTCbits.RC0 = 0;
  2700  05CF  1007               	bcf	7,0	;volatile
  2701  05D0                     l3739:	
  2702                           
  2703                           ;bh1514.c: 19:     buffer = codFreq(f);
  2704  05D0  1683               	bsf	3,5	;RP0=1, select bank1
  2705  05D1  1303               	bcf	3,6	;RP1=0, select bank1
  2706  05D2  0846               	movf	(writeFrequency@f+1)^(0+128),w
  2707  05D3  1283               	bcf	3,5	;RP0=0, select bank0
  2708  05D4  1303               	bcf	3,6	;RP1=0, select bank0
  2709  05D5  00BE               	movwf	codFreq@f+1
  2710  05D6  1683               	bsf	3,5	;RP0=1, select bank1
  2711  05D7  1303               	bcf	3,6	;RP1=0, select bank1
  2712  05D8  0845               	movf	writeFrequency@f^(0+128),w
  2713  05D9  1283               	bcf	3,5	;RP0=0, select bank0
  2714  05DA  1303               	bcf	3,6	;RP1=0, select bank0
  2715  05DB  00BD               	movwf	codFreq@f
  2716  05DC  160A  118A  27E1  120A  118A  	fcall	_codFreq
  2717  05E1  1283               	bcf	3,5	;RP0=0, select bank0
  2718  05E2  1303               	bcf	3,6	;RP1=0, select bank0
  2719  05E3  083E               	movf	?_codFreq+1,w
  2720  05E4  1683               	bsf	3,5	;RP0=1, select bank1
  2721  05E5  1303               	bcf	3,6	;RP1=0, select bank1
  2722  05E6  00CB               	movwf	(writeFrequency@buffer+1)^(0+128)
  2723  05E7  1283               	bcf	3,5	;RP0=0, select bank0
  2724  05E8  1303               	bcf	3,6	;RP1=0, select bank0
  2725  05E9  083D               	movf	?_codFreq,w
  2726  05EA  1683               	bsf	3,5	;RP0=1, select bank1
  2727  05EB  1303               	bcf	3,6	;RP1=0, select bank1
  2728  05EC  00CA               	movwf	writeFrequency@buffer^(0+128)
  2729  05ED                     l3741:	
  2730                           
  2731                           ;bh1514.c: 20:     PORTCbits.RC6 = 0;
  2732  05ED  1283               	bcf	3,5	;RP0=0, select bank0
  2733  05EE  1303               	bcf	3,6	;RP1=0, select bank0
  2734  05EF  1307               	bcf	7,6	;volatile
  2735  05F0                     l3743:	
  2736                           
  2737                           ;bh1514.c: 21:     PORTCbits.RC7 = 0;
  2738  05F0  1387               	bcf	7,7	;volatile
  2739  05F1                     l3745:	
  2740                           
  2741                           ;bh1514.c: 22:     PORTCbits.RC5 = 1;
  2742  05F1  1687               	bsf	7,5	;volatile
  2743  05F2                     l3747:	
  2744                           
  2745                           ;bh1514.c: 23:     _delay((unsigned long)((1)*(4000000/4000.0)));
  2746  05F2  30C7               	movlw	199
  2747  05F3  1683               	bsf	3,5	;RP0=1, select bank1
  2748  05F4  1303               	bcf	3,6	;RP1=0, select bank1
  2749  05F5  00C7               	movwf	??_writeFrequency^(0+128)
  2750  05F6                     u3527:	
  2751  05F6  2DF7               	nop2
  2752  05F7  0BC7               	decfsz	??_writeFrequency^(0+128),f
  2753  05F8  2DF6               	goto	u3527
  2754  05F9  2DFA               	nop2
  2755  05FA                     l3749:	
  2756                           
  2757                           ;bh1514.c: 25:     for(i = 0; i < 16; i++){
  2758  05FA  1683               	bsf	3,5	;RP0=1, select bank1
  2759  05FB  1303               	bcf	3,6	;RP1=0, select bank1
  2760  05FC  01A0               	clrf	_i^(0+128)
  2761  05FD                     l3751:	
  2762  05FD  3010               	movlw	16
  2763  05FE  0220               	subwf	_i^(0+128),w
  2764  05FF  1C03               	skipc
  2765  0600  2E02               	goto	u3051
  2766  0601  2E03               	goto	u3050
  2767  0602                     u3051:	
  2768  0602  2E04               	goto	l3755
  2769  0603                     u3050:	
  2770  0603  2E42               	goto	l3773
  2771  0604                     l3755:	
  2772                           
  2773                           ;bh1514.c: 26:         r = (buffer >> i) & 0x0001;
  2774  0604  084B               	movf	(writeFrequency@buffer+1)^(0+128),w
  2775  0605  00C8               	movwf	(??_writeFrequency^(0+128)+1)
  2776  0606  084A               	movf	writeFrequency@buffer^(0+128),w
  2777  0607  00C7               	movwf	??_writeFrequency^(0+128)
  2778  0608  0A20               	incf	_i^(0+128),w
  2779  0609  2E0D               	goto	u3064
  2780  060A                     u3065:	
  2781  060A  1003               	clrc
  2782  060B  0CC8               	rrf	(??_writeFrequency^(0+128)+1),f
  2783  060C  0CC7               	rrf	??_writeFrequency^(0+128),f
  2784  060D                     u3064:	
  2785  060D  3EFF               	addlw	-1
  2786  060E  1D03               	skipz
  2787  060F  2E0A               	goto	u3065
  2788  0610  3001               	movlw	1
  2789  0611  0547               	andwf	??_writeFrequency^(0+128),w
  2790  0612  00CC               	movwf	writeFrequency@r^(0+128)
  2791  0613  3000               	movlw	0
  2792  0614  0548               	andwf	(??_writeFrequency+1)^(0+128),w
  2793  0615  00CD               	movwf	(writeFrequency@r+1)^(0+128)
  2794  0616                     l3757:	
  2795                           
  2796                           ;bh1514.c: 27:         _delay((unsigned long)((1)*(4000000/4000.0)));
  2797  0616  30C7               	movlw	199
  2798  0617  1683               	bsf	3,5	;RP0=1, select bank1
  2799  0618  1303               	bcf	3,6	;RP1=0, select bank1
  2800  0619  00C7               	movwf	??_writeFrequency^(0+128)
  2801  061A                     u3537:	
  2802  061A  2E1B               	nop2
  2803  061B  0BC7               	decfsz	??_writeFrequency^(0+128),f
  2804  061C  2E1A               	goto	u3537
  2805  061D  2E1E               	nop2
  2806  061E                     l3759:	
  2807                           
  2808                           ;bh1514.c: 28:         PORTCbits.RC6 = 0;
  2809  061E  1283               	bcf	3,5	;RP0=0, select bank0
  2810  061F  1303               	bcf	3,6	;RP1=0, select bank0
  2811  0620  1307               	bcf	7,6	;volatile
  2812  0621                     l3761:	
  2813                           
  2814                           ;bh1514.c: 29:         if(r == 1){
  2815  0621  1683               	bsf	3,5	;RP0=1, select bank1
  2816  0622  1303               	bcf	3,6	;RP1=0, select bank1
  2817  0623  034C               	decf	writeFrequency@r^(0+128),w
  2818  0624  044D               	iorwf	(writeFrequency@r+1)^(0+128),w
  2819  0625  1D03               	btfss	3,2
  2820  0626  2E28               	goto	u3071
  2821  0627  2E29               	goto	u3070
  2822  0628                     u3071:	
  2823  0628  2E2D               	goto	l537
  2824  0629                     u3070:	
  2825  0629                     l3763:	
  2826                           
  2827                           ;bh1514.c: 30:             PORTCbits.RC7 = 1;
  2828  0629  1283               	bcf	3,5	;RP0=0, select bank0
  2829  062A  1303               	bcf	3,6	;RP1=0, select bank0
  2830  062B  1787               	bsf	7,7	;volatile
  2831                           
  2832                           ;bh1514.c: 31:         }else{
  2833  062C  2E30               	goto	l3765
  2834  062D                     l537:	
  2835                           
  2836                           ;bh1514.c: 32:             PORTCbits.RC7 = 0;
  2837  062D  1283               	bcf	3,5	;RP0=0, select bank0
  2838  062E  1303               	bcf	3,6	;RP1=0, select bank0
  2839  062F  1387               	bcf	7,7	;volatile
  2840  0630                     l3765:	
  2841                           
  2842                           ;bh1514.c: 34:         _delay((unsigned long)((1)*(4000000/4000.0)));
  2843  0630  30C7               	movlw	199
  2844  0631  1683               	bsf	3,5	;RP0=1, select bank1
  2845  0632  1303               	bcf	3,6	;RP1=0, select bank1
  2846  0633  00C7               	movwf	??_writeFrequency^(0+128)
  2847  0634                     u3547:	
  2848  0634  2E35               	nop2
  2849  0635  0BC7               	decfsz	??_writeFrequency^(0+128),f
  2850  0636  2E34               	goto	u3547
  2851  0637  2E38               	nop2
  2852  0638                     l3767:	
  2853                           
  2854                           ;bh1514.c: 35:         PORTCbits.RC6 = 1;
  2855  0638  1283               	bcf	3,5	;RP0=0, select bank0
  2856  0639  1303               	bcf	3,6	;RP1=0, select bank0
  2857  063A  1707               	bsf	7,6	;volatile
  2858  063B                     l3769:	
  2859                           
  2860                           ;bh1514.c: 36:     }
  2861  063B  3001               	movlw	1
  2862  063C  1683               	bsf	3,5	;RP0=1, select bank1
  2863  063D  1303               	bcf	3,6	;RP1=0, select bank1
  2864  063E  00C7               	movwf	??_writeFrequency^(0+128)
  2865  063F  0847               	movf	??_writeFrequency^(0+128),w
  2866  0640  07A0               	addwf	_i^(0+128),f
  2867  0641  2DFD               	goto	l3751
  2868  0642                     l3773:	
  2869                           
  2870                           ;bh1514.c: 38:     _delay((unsigned long)((1)*(4000000/4000.0)));
  2871  0642  30C7               	movlw	199
  2872  0643  1683               	bsf	3,5	;RP0=1, select bank1
  2873  0644  1303               	bcf	3,6	;RP1=0, select bank1
  2874  0645  00C7               	movwf	??_writeFrequency^(0+128)
  2875  0646                     u3557:	
  2876  0646  2E47               	nop2
  2877  0647  0BC7               	decfsz	??_writeFrequency^(0+128),f
  2878  0648  2E46               	goto	u3557
  2879  0649  2E4A               	nop2
  2880  064A                     l3775:	
  2881                           
  2882                           ;bh1514.c: 39:     PORTCbits.RC5 = 0;
  2883  064A  1283               	bcf	3,5	;RP0=0, select bank0
  2884  064B  1303               	bcf	3,6	;RP1=0, select bank0
  2885  064C  1287               	bcf	7,5	;volatile
  2886  064D                     l3777:	
  2887                           
  2888                           ;bh1514.c: 41:     beep(20);
  2889  064D  3014               	movlw	20
  2890  064E  1683               	bsf	3,5	;RP0=1, select bank1
  2891  064F  1303               	bcf	3,6	;RP1=0, select bank1
  2892  0650  00C3               	movwf	beep@ms^(0+128)
  2893  0651  3000               	movlw	0
  2894  0652  00C4               	movwf	(beep@ms^(0+128)+1)
  2895  0653  120A  158A  248E  120A  118A  	fcall	_beep
  2896  0658                     l3779:	
  2897                           
  2898                           ;bh1514.c: 42:     _delay((unsigned long)((500)*(4000000/4000.0)));
  2899  0658  3003               	movlw	3
  2900  0659  1683               	bsf	3,5	;RP0=1, select bank1
  2901  065A  1303               	bcf	3,6	;RP1=0, select bank1
  2902  065B  00C9               	movwf	(??_writeFrequency^(0+128)+2)
  2903  065C  308A               	movlw	138
  2904  065D  00C8               	movwf	(??_writeFrequency^(0+128)+1)
  2905  065E  3055               	movlw	85
  2906  065F  00C7               	movwf	??_writeFrequency^(0+128)
  2907  0660                     u3567:	
  2908  0660  0BC7               	decfsz	??_writeFrequency^(0+128),f
  2909  0661  2E60               	goto	u3567
  2910  0662  0BC8               	decfsz	(??_writeFrequency^(0+128)+1),f
  2911  0663  2E60               	goto	u3567
  2912  0664  0BC9               	decfsz	(??_writeFrequency^(0+128)+2),f
  2913  0665  2E60               	goto	u3567
  2914                           
  2915                           ;bh1514.c: 43:     beep(20);
  2916  0666  3014               	movlw	20
  2917  0667  1683               	bsf	3,5	;RP0=1, select bank1
  2918  0668  1303               	bcf	3,6	;RP1=0, select bank1
  2919  0669  00C3               	movwf	beep@ms^(0+128)
  2920  066A  3000               	movlw	0
  2921  066B  00C4               	movwf	(beep@ms^(0+128)+1)
  2922  066C  120A  158A  248E  120A  118A  	fcall	_beep
  2923  0671                     l3781:	
  2924                           
  2925                           ;bh1514.c: 44:     _delay((unsigned long)((500)*(4000000/4000.0)));
  2926  0671  3003               	movlw	3
  2927  0672  1683               	bsf	3,5	;RP0=1, select bank1
  2928  0673  1303               	bcf	3,6	;RP1=0, select bank1
  2929  0674  00C9               	movwf	(??_writeFrequency^(0+128)+2)
  2930  0675  308A               	movlw	138
  2931  0676  00C8               	movwf	(??_writeFrequency^(0+128)+1)
  2932  0677  3055               	movlw	85
  2933  0678  00C7               	movwf	??_writeFrequency^(0+128)
  2934  0679                     u3577:	
  2935  0679  0BC7               	decfsz	??_writeFrequency^(0+128),f
  2936  067A  2E79               	goto	u3577
  2937  067B  0BC8               	decfsz	(??_writeFrequency^(0+128)+1),f
  2938  067C  2E79               	goto	u3577
  2939  067D  0BC9               	decfsz	(??_writeFrequency^(0+128)+2),f
  2940  067E  2E79               	goto	u3577
  2941  067F                     l3783:	
  2942                           
  2943                           ;bh1514.c: 45:     for(i = 0; i < 100; i++){
  2944  067F  1683               	bsf	3,5	;RP0=1, select bank1
  2945  0680  1303               	bcf	3,6	;RP1=0, select bank1
  2946  0681  01A0               	clrf	_i^(0+128)
  2947  0682                     l3785:	
  2948  0682  3064               	movlw	100
  2949  0683  0220               	subwf	_i^(0+128),w
  2950  0684  1C03               	skipc
  2951  0685  2E87               	goto	u3081
  2952  0686  2E88               	goto	u3080
  2953  0687                     u3081:	
  2954  0687  2E89               	goto	l3789
  2955  0688                     u3080:	
  2956  0688  2E9A               	goto	l540
  2957  0689                     l3789:	
  2958                           
  2959                           ;bh1514.c: 46:         _delay((unsigned long)((100)*(4000000/4000.0)));
  2960  0689  3082               	movlw	130
  2961  068A  1683               	bsf	3,5	;RP0=1, select bank1
  2962  068B  1303               	bcf	3,6	;RP1=0, select bank1
  2963  068C  00C8               	movwf	(??_writeFrequency^(0+128)+1)
  2964  068D  30DD               	movlw	221
  2965  068E  00C7               	movwf	??_writeFrequency^(0+128)
  2966  068F                     u3587:	
  2967  068F  0BC7               	decfsz	??_writeFrequency^(0+128),f
  2968  0690  2E8F               	goto	u3587
  2969  0691  0BC8               	decfsz	(??_writeFrequency^(0+128)+1),f
  2970  0692  2E8F               	goto	u3587
  2971  0693                     l3791:	
  2972                           
  2973                           ;bh1514.c: 47:     }
  2974  0693  3001               	movlw	1
  2975  0694  1683               	bsf	3,5	;RP0=1, select bank1
  2976  0695  1303               	bcf	3,6	;RP1=0, select bank1
  2977  0696  00C7               	movwf	??_writeFrequency^(0+128)
  2978  0697  0847               	movf	??_writeFrequency^(0+128),w
  2979  0698  07A0               	addwf	_i^(0+128),f
  2980  0699  2E82               	goto	l3785
  2981  069A                     l540:	
  2982                           
  2983                           ;bh1514.c: 49:     PORTCbits.RC0 = 1;
  2984  069A  1283               	bcf	3,5	;RP0=0, select bank0
  2985  069B  1303               	bcf	3,6	;RP1=0, select bank0
  2986  069C  1407               	bsf	7,0	;volatile
  2987  069D                     l541:	
  2988                           ;bh1514.c: 51:     return;
  2989                           
  2990  069D  0008               	return
  2991  069E                     __end_of_writeFrequency:	
  2992                           
  2993                           	psect	text4
  2994  17E1                     __ptext4:	
  2995 ;; *************** function _codFreq *****************
  2996 ;; Defined at:
  2997 ;;		line 6 in file "bh1514.c"
  2998 ;; Parameters:    Size  Location     Type
  2999 ;;  f               2   29[BANK0 ] unsigned int 
  3000 ;; Auto vars:     Size  Location     Type
  3001 ;;  fr              2   31[BANK0 ] unsigned int 
  3002 ;; Return value:  Size  Location     Type
  3003 ;;                  2   29[BANK0 ] unsigned int 
  3004 ;; Registers used:
  3005 ;;		wreg
  3006 ;; Tracked objects:
  3007 ;;		On entry : 0/0
  3008 ;;		On exit  : 0/0
  3009 ;;		Unchanged: 0/0
  3010 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3011 ;;      Params:         0       2       0       0       0
  3012 ;;      Locals:         0       2       0       0       0
  3013 ;;      Temps:          0       0       0       0       0
  3014 ;;      Totals:         0       4       0       0       0
  3015 ;;Total ram usage:        4 bytes
  3016 ;; Hardware stack levels used:    1
  3017 ;; Hardware stack levels required when called:    5
  3018 ;; This function calls:
  3019 ;;		Nothing
  3020 ;; This function is called by:
  3021 ;;		_writeFrequency
  3022 ;; This function uses a non-reentrant model
  3023 ;;
  3024                           
  3025                           
  3026                           ;psect for function _codFreq
  3027  17E1                     _codFreq:	
  3028  17E1                     l3721:	
  3029                           ;incstack = 0
  3030                           ; Regs used in _codFreq: [wreg]
  3031                           
  3032                           
  3033                           ;bh1514.c: 7:     unsigned int fr;;bh1514.c: 8:         fr = f | 0b0100100000000000;
  3034  17E1  3000               	movlw	0
  3035  17E2  1283               	bcf	3,5	;RP0=0, select bank0
  3036  17E3  1303               	bcf	3,6	;RP1=0, select bank0
  3037  17E4  043D               	iorwf	codFreq@f,w
  3038  17E5  00BF               	movwf	codFreq@fr
  3039  17E6  3048               	movlw	72
  3040  17E7  043E               	iorwf	codFreq@f+1,w
  3041  17E8  00C0               	movwf	codFreq@fr+1
  3042                           
  3043                           ;bh1514.c: 9:     return fr;
  3044  17E9  0840               	movf	codFreq@fr+1,w
  3045  17EA  00BE               	movwf	?_codFreq+1
  3046  17EB  083F               	movf	codFreq@fr,w
  3047  17EC  00BD               	movwf	?_codFreq
  3048  17ED                     l532:	
  3049  17ED  0008               	return
  3050  17EE                     __end_of_codFreq:	
  3051                           
  3052                           	psect	text5
  3053  0C8E                     __ptext5:	
  3054 ;; *************** function _beep *****************
  3055 ;; Defined at:
  3056 ;;		line 168 in file "main.c"
  3057 ;; Parameters:    Size  Location     Type
  3058 ;;  ms              2    0[BANK1 ] int 
  3059 ;; Auto vars:     Size  Location     Type
  3060 ;;		None
  3061 ;; Return value:  Size  Location     Type
  3062 ;;                  1    wreg      void 
  3063 ;; Registers used:
  3064 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  3065 ;; Tracked objects:
  3066 ;;		On entry : 0/0
  3067 ;;		On exit  : 0/0
  3068 ;;		Unchanged: 0/0
  3069 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3070 ;;      Params:         0       0       2       0       0
  3071 ;;      Locals:         0       0       0       0       0
  3072 ;;      Temps:          0       1       0       0       0
  3073 ;;      Totals:         0       1       2       0       0
  3074 ;;Total ram usage:        3 bytes
  3075 ;; Hardware stack levels used:    1
  3076 ;; Hardware stack levels required when called:    6
  3077 ;; This function calls:
  3078 ;;		___wmul
  3079 ;; This function is called by:
  3080 ;;		_main
  3081 ;;		_start
  3082 ;;		_setFrequency
  3083 ;;		_writeFrequency
  3084 ;; This function uses a non-reentrant model
  3085 ;;
  3086                           
  3087                           
  3088                           ;psect for function _beep
  3089  0C8E                     _beep:	
  3090  0C8E                     l3617:	
  3091                           ;incstack = 0
  3092                           ; Regs used in _beep: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  3093                           
  3094                           
  3095                           ;main.c: 169:     ms *= 5;
  3096  0C8E  3005               	movlw	5
  3097  0C8F  1283               	bcf	3,5	;RP0=0, select bank0
  3098  0C90  1303               	bcf	3,6	;RP1=0, select bank0
  3099  0C91  00BD               	movwf	___wmul@multiplier
  3100  0C92  3000               	movlw	0
  3101  0C93  00BE               	movwf	___wmul@multiplier+1
  3102  0C94  1683               	bsf	3,5	;RP0=1, select bank1
  3103  0C95  1303               	bcf	3,6	;RP1=0, select bank1
  3104  0C96  0844               	movf	(beep@ms+1)^(0+128),w
  3105  0C97  1283               	bcf	3,5	;RP0=0, select bank0
  3106  0C98  1303               	bcf	3,6	;RP1=0, select bank0
  3107  0C99  00C0               	movwf	___wmul@multiplicand+1
  3108  0C9A  1683               	bsf	3,5	;RP0=1, select bank1
  3109  0C9B  1303               	bcf	3,6	;RP1=0, select bank1
  3110  0C9C  0843               	movf	beep@ms^(0+128),w
  3111  0C9D  1283               	bcf	3,5	;RP0=0, select bank0
  3112  0C9E  1303               	bcf	3,6	;RP1=0, select bank0
  3113  0C9F  00BF               	movwf	___wmul@multiplicand
  3114  0CA0  120A  158A  21B9  120A  158A  	fcall	___wmul
  3115  0CA5  1283               	bcf	3,5	;RP0=0, select bank0
  3116  0CA6  1303               	bcf	3,6	;RP1=0, select bank0
  3117  0CA7  083E               	movf	?___wmul+1,w
  3118  0CA8  1683               	bsf	3,5	;RP0=1, select bank1
  3119  0CA9  1303               	bcf	3,6	;RP1=0, select bank1
  3120  0CAA  00C4               	movwf	(beep@ms+1)^(0+128)
  3121  0CAB  1283               	bcf	3,5	;RP0=0, select bank0
  3122  0CAC  1303               	bcf	3,6	;RP1=0, select bank0
  3123  0CAD  083D               	movf	?___wmul,w
  3124  0CAE  1683               	bsf	3,5	;RP0=1, select bank1
  3125  0CAF  1303               	bcf	3,6	;RP1=0, select bank1
  3126  0CB0  00C3               	movwf	beep@ms^(0+128)
  3127  0CB1                     l3619:	
  3128  0CB1  0844               	movf	(beep@ms+1)^(0+128),w
  3129  0CB2  3A80               	xorlw	128
  3130  0CB3  00FF               	movwf	btemp+1
  3131  0CB4  3080               	movlw	128
  3132  0CB5  027F               	subwf	btemp+1,w
  3133  0CB6  1D03               	skipz
  3134  0CB7  2CBA               	goto	u2905
  3135  0CB8  3001               	movlw	1
  3136  0CB9  0243               	subwf	beep@ms^(0+128),w
  3137  0CBA                     u2905:	
  3138  0CBA  1803               	skipnc
  3139  0CBB  2CBD               	goto	u2901
  3140  0CBC  2CBE               	goto	u2900
  3141  0CBD                     u2901:	
  3142  0CBD  2CBF               	goto	l234
  3143  0CBE                     u2900:	
  3144  0CBE  2CDC               	goto	l236
  3145  0CBF                     l234:	
  3146                           
  3147                           ;main.c: 171:         PORTBbits.RB0 = 1;
  3148  0CBF  1283               	bcf	3,5	;RP0=0, select bank0
  3149  0CC0  1303               	bcf	3,6	;RP1=0, select bank0
  3150  0CC1  1406               	bsf	6,0	;volatile
  3151  0CC2                     l3623:	
  3152                           
  3153                           ;main.c: 172:         _delay((unsigned long)((100)*(4000000/4000000.0)));
  3154  0CC2  3020               	movlw	32
  3155  0CC3  1283               	bcf	3,5	;RP0=0, select bank0
  3156  0CC4  1303               	bcf	3,6	;RP1=0, select bank0
  3157  0CC5  00C3               	movwf	??_beep
  3158  0CC6                     u3597:	
  3159  0CC6  0BC3               	decfsz	??_beep,f
  3160  0CC7  2CC6               	goto	u3597
  3161  0CC8  0000               	nop
  3162  0CC9                     l3625:	
  3163                           
  3164                           ;main.c: 173:         PORTBbits.RB0 = 0;
  3165  0CC9  1283               	bcf	3,5	;RP0=0, select bank0
  3166  0CCA  1303               	bcf	3,6	;RP1=0, select bank0
  3167  0CCB  1006               	bcf	6,0	;volatile
  3168                           
  3169                           ;main.c: 174:         _delay((unsigned long)((100)*(4000000/4000000.0)));
  3170  0CCC  3020               	movlw	32
  3171  0CCD  1283               	bcf	3,5	;RP0=0, select bank0
  3172  0CCE  1303               	bcf	3,6	;RP1=0, select bank0
  3173  0CCF  00C3               	movwf	??_beep
  3174  0CD0                     u3607:	
  3175  0CD0  0BC3               	decfsz	??_beep,f
  3176  0CD1  2CD0               	goto	u3607
  3177  0CD2  0000               	nop
  3178                           
  3179                           ;main.c: 175:     }
  3180  0CD3  30FF               	movlw	255
  3181  0CD4  1683               	bsf	3,5	;RP0=1, select bank1
  3182  0CD5  1303               	bcf	3,6	;RP1=0, select bank1
  3183  0CD6  07C3               	addwf	beep@ms^(0+128),f
  3184  0CD7  1803               	skipnc
  3185  0CD8  0AC4               	incf	(beep@ms+1)^(0+128),f
  3186  0CD9  30FF               	movlw	255
  3187  0CDA  07C4               	addwf	(beep@ms+1)^(0+128),f
  3188  0CDB  2CB1               	goto	l3619
  3189  0CDC                     l236:	
  3190  0CDC  0008               	return
  3191  0CDD                     __end_of_beep:	
  3192                           
  3193                           	psect	text6
  3194  0DD9                     __ptext6:	
  3195 ;; *************** function _setData *****************
  3196 ;; Defined at:
  3197 ;;		line 44 in file "eeprom.c"
  3198 ;; Parameters:    Size  Location     Type
  3199 ;;  full            1    wreg     unsigned char 
  3200 ;; Auto vars:     Size  Location     Type
  3201 ;;  full            1    0[COMMON] unsigned char 
  3202 ;;  data1           1   33[BANK0 ] unsigned char 
  3203 ;;  data0           1   32[BANK0 ] unsigned char 
  3204 ;; Return value:  Size  Location     Type
  3205 ;;                  1    wreg      void 
  3206 ;; Registers used:
  3207 ;;		wreg, status,2, status,0, pclath, cstack
  3208 ;; Tracked objects:
  3209 ;;		On entry : 0/0
  3210 ;;		On exit  : 0/0
  3211 ;;		Unchanged: 0/0
  3212 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3213 ;;      Params:         0       0       0       0       0
  3214 ;;      Locals:         0       2       0       0       0
  3215 ;;      Temps:          0       1       0       0       0
  3216 ;;      Totals:         0       3       0       0       0
  3217 ;;Total ram usage:        3 bytes
  3218 ;; Hardware stack levels used:    1
  3219 ;; Hardware stack levels required when called:    6
  3220 ;; This function calls:
  3221 ;;		_writeEEPROM
  3222 ;; This function is called by:
  3223 ;;		_setFrequency
  3224 ;; This function uses a non-reentrant model
  3225 ;;
  3226                           
  3227                           
  3228                           ;psect for function _setData
  3229  0DD9                     _setData:	
  3230  0DD9                     l2843:	
  3231                           ;incstack = 0
  3232                           ; Regs used in _setData: [wreg+status,2+status,0+pclath+cstack]
  3233                           
  3234                           
  3235                           ;eeprom.c: 45:     unsigned char data0 = frequency & 0x00FF;
  3236  0DD9  1283               	bcf	3,5	;RP0=0, select bank0
  3237  0DDA  1303               	bcf	3,6	;RP1=0, select bank0
  3238  0DDB  0844               	movf	_frequency,w
  3239  0DDC  00BF               	movwf	??_setData
  3240  0DDD  083F               	movf	??_setData,w
  3241  0DDE  00C0               	movwf	setData@data0
  3242  0DDF                     l2845:	
  3243                           
  3244                           ;eeprom.c: 46:     unsigned char data1 = frequency >> 8;
  3245  0DDF  0845               	movf	_frequency+1,w
  3246  0DE0  00BF               	movwf	??_setData
  3247  0DE1  083F               	movf	??_setData,w
  3248  0DE2  00C1               	movwf	setData@data1
  3249  0DE3                     l2847:	
  3250                           
  3251                           ;eeprom.c: 47:     writeEEPROM(data0 ,0);
  3252  0DE3  01BD               	clrf	writeEEPROM@address
  3253  0DE4  0840               	movf	setData@data0,w
  3254  0DE5  120A  158A  212D  120A  158A  	fcall	_writeEEPROM
  3255  0DEA                     l2849:	
  3256                           
  3257                           ;eeprom.c: 48:     writeEEPROM(data1 ,1);
  3258  0DEA  1283               	bcf	3,5	;RP0=0, select bank0
  3259  0DEB  1303               	bcf	3,6	;RP1=0, select bank0
  3260  0DEC  01BD               	clrf	writeEEPROM@address
  3261  0DED  0ABD               	incf	writeEEPROM@address,f
  3262  0DEE  0841               	movf	setData@data1,w
  3263  0DEF  120A  158A  212D  120A  158A  	fcall	_writeEEPROM
  3264  0DF4                     l2851:	
  3265                           
  3266                           ;eeprom.c: 49:     writeEEPROM(months ,2);
  3267  0DF4  3002               	movlw	2
  3268  0DF5  1283               	bcf	3,5	;RP0=0, select bank0
  3269  0DF6  1303               	bcf	3,6	;RP1=0, select bank0
  3270  0DF7  00BF               	movwf	??_setData
  3271  0DF8  083F               	movf	??_setData,w
  3272  0DF9  00BD               	movwf	writeEEPROM@address
  3273  0DFA  084A               	movf	_months,w
  3274  0DFB  120A  158A  212D  120A  158A  	fcall	_writeEEPROM
  3275  0E00                     l2853:	
  3276                           
  3277                           ;eeprom.c: 50:     writeEEPROM(days ,3);
  3278  0E00  3003               	movlw	3
  3279  0E01  1283               	bcf	3,5	;RP0=0, select bank0
  3280  0E02  1303               	bcf	3,6	;RP1=0, select bank0
  3281  0E03  00BF               	movwf	??_setData
  3282  0E04  083F               	movf	??_setData,w
  3283  0E05  00BD               	movwf	writeEEPROM@address
  3284  0E06  0849               	movf	_days,w
  3285  0E07  120A  158A  212D  120A  158A  	fcall	_writeEEPROM
  3286  0E0C                     l2855:	
  3287                           
  3288                           ;eeprom.c: 51:     writeEEPROM(hours ,4);
  3289  0E0C  3004               	movlw	4
  3290  0E0D  1283               	bcf	3,5	;RP0=0, select bank0
  3291  0E0E  1303               	bcf	3,6	;RP1=0, select bank0
  3292  0E0F  00BF               	movwf	??_setData
  3293  0E10  083F               	movf	??_setData,w
  3294  0E11  00BD               	movwf	writeEEPROM@address
  3295  0E12  0848               	movf	_hours,w
  3296  0E13  120A  158A  212D  120A  158A  	fcall	_writeEEPROM
  3297  0E18                     l2857:	
  3298                           
  3299                           ;eeprom.c: 52:     writeEEPROM(minutes ,5);
  3300  0E18  3005               	movlw	5
  3301  0E19  1283               	bcf	3,5	;RP0=0, select bank0
  3302  0E1A  1303               	bcf	3,6	;RP1=0, select bank0
  3303  0E1B  00BF               	movwf	??_setData
  3304  0E1C  083F               	movf	??_setData,w
  3305  0E1D  00BD               	movwf	writeEEPROM@address
  3306  0E1E  0847               	movf	_minutes,w
  3307  0E1F  120A  158A  212D  120A  158A  	fcall	_writeEEPROM
  3308  0E24                     l2859:	
  3309                           
  3310                           ;eeprom.c: 53:     writeEEPROM(functionalStat ,6);
  3311  0E24  3006               	movlw	6
  3312  0E25  1283               	bcf	3,5	;RP0=0, select bank0
  3313  0E26  1303               	bcf	3,6	;RP1=0, select bank0
  3314  0E27  00BF               	movwf	??_setData
  3315  0E28  083F               	movf	??_setData,w
  3316  0E29  00BD               	movwf	writeEEPROM@address
  3317  0E2A  084F               	movf	_functionalStat,w
  3318  0E2B  120A  158A  212D  120A  158A  	fcall	_writeEEPROM
  3319  0E30                     l69:	
  3320  0E30  0008               	return
  3321  0E31                     __end_of_setData:	
  3322                           
  3323                           	psect	text7
  3324  092D                     __ptext7:	
  3325 ;; *************** function _writeEEPROM *****************
  3326 ;; Defined at:
  3327 ;;		line 14 in file "eeprom.c"
  3328 ;; Parameters:    Size  Location     Type
  3329 ;;  data            1    wreg     unsigned char 
  3330 ;;  address         1   29[BANK0 ] unsigned char 
  3331 ;; Auto vars:     Size  Location     Type
  3332 ;;  data            1   30[BANK0 ] unsigned char 
  3333 ;; Return value:  Size  Location     Type
  3334 ;;                  1    wreg      void 
  3335 ;; Registers used:
  3336 ;;		wreg
  3337 ;; Tracked objects:
  3338 ;;		On entry : 0/0
  3339 ;;		On exit  : 0/0
  3340 ;;		Unchanged: 0/0
  3341 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3342 ;;      Params:         0       1       0       0       0
  3343 ;;      Locals:         0       1       0       0       0
  3344 ;;      Temps:          0       0       0       0       0
  3345 ;;      Totals:         0       2       0       0       0
  3346 ;;Total ram usage:        2 bytes
  3347 ;; Hardware stack levels used:    1
  3348 ;; Hardware stack levels required when called:    5
  3349 ;; This function calls:
  3350 ;;		Nothing
  3351 ;; This function is called by:
  3352 ;;		_setData
  3353 ;; This function uses a non-reentrant model
  3354 ;;
  3355                           
  3356                           
  3357                           ;psect for function _writeEEPROM
  3358  092D                     _writeEEPROM:	
  3359                           
  3360                           ;incstack = 0
  3361                           ; Regs used in _writeEEPROM: [wreg]
  3362                           ;writeEEPROM@data stored from wreg
  3363  092D  1283               	bcf	3,5	;RP0=0, select bank0
  3364  092E  1303               	bcf	3,6	;RP1=0, select bank0
  3365  092F  00BE               	movwf	writeEEPROM@data
  3366  0930                     l2523:	
  3367                           
  3368                           ;eeprom.c: 15:     EEADR = address;
  3369  0930  083D               	movf	writeEEPROM@address,w
  3370  0931  1283               	bcf	3,5	;RP0=0, select bank2
  3371  0932  1703               	bsf	3,6	;RP1=1, select bank2
  3372  0933  008D               	movwf	13	;volatile
  3373                           
  3374                           ;eeprom.c: 16:     EEDATA = data;
  3375  0934  1283               	bcf	3,5	;RP0=0, select bank0
  3376  0935  1303               	bcf	3,6	;RP1=0, select bank0
  3377  0936  083E               	movf	writeEEPROM@data,w
  3378  0937  1283               	bcf	3,5	;RP0=0, select bank2
  3379  0938  1703               	bsf	3,6	;RP1=1, select bank2
  3380  0939  008C               	movwf	12	;volatile
  3381  093A                     l2525:	
  3382                           
  3383                           ;eeprom.c: 18:     EECON1bits.EEPGD = 0;
  3384  093A  1683               	bsf	3,5	;RP0=1, select bank3
  3385  093B  1703               	bsf	3,6	;RP1=1, select bank3
  3386  093C  138C               	bcf	12,7	;volsfr
  3387  093D                     l2527:	
  3388                           
  3389                           ;eeprom.c: 19:     EECON1bits.WREN = 1;
  3390  093D  150C               	bsf	12,2	;volsfr
  3391  093E                     l2529:	
  3392                           
  3393                           ;eeprom.c: 21:     INTCONbits.GIE = 0;
  3394  093E  138B               	bcf	11,7	;volatile
  3395                           
  3396                           ;eeprom.c: 22:     EECON2 = 0x55;
  3397  093F  3055               	movlw	85
  3398  0940  008D               	movwf	13	;volsfr
  3399                           
  3400                           ;eeprom.c: 23:     EECON2 = 0xAA;
  3401  0941  30AA               	movlw	170
  3402  0942  008D               	movwf	13	;volsfr
  3403  0943                     l2531:	
  3404                           
  3405                           ;eeprom.c: 24:     EECON1bits.WR = 1;
  3406  0943  148C               	bsf	12,1	;volsfr
  3407  0944                     l2533:	
  3408                           
  3409                           ;eeprom.c: 25:     INTCONbits.GIE = 1;
  3410  0944  178B               	bsf	11,7	;volatile
  3411  0945                     l60:	
  3412                           ;eeprom.c: 27:     while(PIR2bits.EEIF == 0) continue;
  3413                           
  3414  0945  1283               	bcf	3,5	;RP0=0, select bank0
  3415  0946  1303               	bcf	3,6	;RP1=0, select bank0
  3416  0947  1E0D               	btfss	13,4	;volatile
  3417  0948  294A               	goto	u1591
  3418  0949  294B               	goto	u1590
  3419  094A                     u1591:	
  3420  094A  2945               	goto	l60
  3421  094B                     u1590:	
  3422  094B                     l63:	
  3423  094B  0008               	return
  3424  094C                     __end_of_writeEEPROM:	
  3425                           
  3426                           	psect	text8
  3427  07CF                     __ptext8:	
  3428 ;; *************** function _lockingScreen *****************
  3429 ;; Defined at:
  3430 ;;		line 250 in file "main.c"
  3431 ;; Parameters:    Size  Location     Type
  3432 ;;		None
  3433 ;; Auto vars:     Size  Location     Type
  3434 ;;		None
  3435 ;; Return value:  Size  Location     Type
  3436 ;;                  1    wreg      void 
  3437 ;; Registers used:
  3438 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3439 ;; Tracked objects:
  3440 ;;		On entry : 0/0
  3441 ;;		On exit  : 0/0
  3442 ;;		Unchanged: 0/0
  3443 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3444 ;;      Params:         0       0       0       0       0
  3445 ;;      Locals:         0       0       0       0       0
  3446 ;;      Temps:          0       0       1       0       0
  3447 ;;      Totals:         0       0       1       0       0
  3448 ;;Total ram usage:        1 bytes
  3449 ;; Hardware stack levels used:    1
  3450 ;; Hardware stack levels required when called:    8
  3451 ;; This function calls:
  3452 ;;		_SetDDRamAddr
  3453 ;;		_putsXLCD
  3454 ;;		_sprintf
  3455 ;; This function is called by:
  3456 ;;		_main
  3457 ;;		_setFrequency
  3458 ;; This function uses a non-reentrant model
  3459 ;;
  3460                           
  3461                           
  3462                           ;psect for function _lockingScreen
  3463  07CF                     _lockingScreen:	
  3464  07CF                     l3725:	
  3465                           ;incstack = 0
  3466 ;; hardware stack exceeded
  3467                           ; Regs used in _lockingScreen: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3468                           
  3469                           
  3470                           ;main.c: 252:     sprintf(lineOne,"LOCKING         ");
  3471  07CF  3021               	movlw	(low ((STR_10-__stringbase)| (0+32768)))& (0+255)
  3472  07D0  1683               	bsf	3,5	;RP0=1, select bank1
  3473  07D1  1303               	bcf	3,6	;RP1=0, select bank1
  3474  07D2  00DB               	movwf	??_lockingScreen^(0+128)
  3475  07D3  085B               	movf	??_lockingScreen^(0+128),w
  3476  07D4  00CA               	movwf	sprintf@f^(0+128)
  3477  07D5  30B2               	movlw	(low (_lineOne| 0))& (0+255)
  3478  07D6  120A  118A  2035  120A  118A  	fcall	_sprintf
  3479                           
  3480                           ;main.c: 253:     sprintf(lineTwo,"       FREQUENCY");
  3481  07DB  3087               	movlw	(low ((STR_11-__stringbase)| (0+32768)))& (0+255)
  3482  07DC  1683               	bsf	3,5	;RP0=1, select bank1
  3483  07DD  1303               	bcf	3,6	;RP1=0, select bank1
  3484  07DE  00DB               	movwf	??_lockingScreen^(0+128)
  3485  07DF  085B               	movf	??_lockingScreen^(0+128),w
  3486  07E0  00CA               	movwf	sprintf@f^(0+128)
  3487  07E1  30A1               	movlw	(low (_lineTwo| 0))& (0+255)
  3488  07E2  120A  118A  2035  120A  118A  	fcall	_sprintf
  3489  07E7                     l3727:	
  3490                           
  3491                           ;main.c: 254:     SetDDRamAddr(0x00);
  3492  07E7  3000               	movlw	0
  3493  07E8  120A  158A  24DD  120A  118A  	fcall	_SetDDRamAddr
  3494  07ED                     l3729:	
  3495                           
  3496                           ;main.c: 255:     putsXLCD(lineOne);
  3497  07ED  30B2               	movlw	(low (_lineOne| 0))& (0+255)
  3498  07EE  120A  158A  2208  120A  118A  	fcall	_putsXLCD
  3499  07F3                     l3731:	
  3500                           
  3501                           ;main.c: 256:     SetDDRamAddr(0x40);
  3502  07F3  3040               	movlw	64
  3503  07F4  120A  158A  24DD  120A  118A  	fcall	_SetDDRamAddr
  3504  07F9                     l3733:	
  3505                           
  3506                           ;main.c: 257:     putsXLCD(lineTwo);
  3507  07F9  30A1               	movlw	(low (_lineTwo| 0))& (0+255)
  3508  07FA  120A  158A  2208  120A  118A  	fcall	_putsXLCD
  3509  07FF                     l274:	
  3510  07FF  0008               	return
  3511  0800                     __end_of_lockingScreen:	
  3512                           
  3513                           	psect	text9
  3514  076A                     __ptext9:	
  3515 ;; *************** function _principalScreen *****************
  3516 ;; Defined at:
  3517 ;;		line 240 in file "main.c"
  3518 ;; Parameters:    Size  Location     Type
  3519 ;;		None
  3520 ;; Auto vars:     Size  Location     Type
  3521 ;;  integ           1   30[BANK1 ] unsigned char 
  3522 ;;  decim           1   29[BANK1 ] unsigned char 
  3523 ;; Return value:  Size  Location     Type
  3524 ;;                  1    wreg      void 
  3525 ;; Registers used:
  3526 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3527 ;; Tracked objects:
  3528 ;;		On entry : 0/0
  3529 ;;		On exit  : 0/0
  3530 ;;		Unchanged: 0/0
  3531 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3532 ;;      Params:         0       0       0       0       0
  3533 ;;      Locals:         0       0       2       0       0
  3534 ;;      Temps:          0       0       5       0       0
  3535 ;;      Totals:         0       0       7       0       0
  3536 ;;Total ram usage:        7 bytes
  3537 ;; Hardware stack levels used:    1
  3538 ;; Hardware stack levels required when called:    8
  3539 ;; This function calls:
  3540 ;;		_SetDDRamAddr
  3541 ;;		___lwdiv
  3542 ;;		___lwmod
  3543 ;;		_putrsXLCD
  3544 ;;		_putsXLCD
  3545 ;;		_sprintf
  3546 ;; This function is called by:
  3547 ;;		_main
  3548 ;; This function uses a non-reentrant model
  3549 ;;
  3550                           
  3551                           
  3552                           ;psect for function _principalScreen
  3553  076A                     _principalScreen:	
  3554  076A                     l3993:	
  3555                           ;incstack = 0
  3556 ;; hardware stack exceeded
  3557                           ; Regs used in _principalScreen: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3558                           
  3559                           
  3560                           ;main.c: 241:     SetDDRamAddr(0x00);
  3561  076A  3000               	movlw	0
  3562  076B  120A  158A  24DD  120A  118A  	fcall	_SetDDRamAddr
  3563  0770                     l3995:	
  3564                           
  3565                           ;main.c: 242:     putrsXLCD("AMPRO      EX-FM");
  3566  0770  3065               	movlw	(low ((STR_8-__stringbase)| (0+32768)))& (0+255)
  3567  0771  120A  158A  2230  120A  118A  	fcall	_putrsXLCD
  3568  0776                     l3997:	
  3569                           
  3570                           ;main.c: 243:     unsigned char decim = frequency % 10;
  3571  0776  300A               	movlw	10
  3572  0777  1683               	bsf	3,5	;RP0=1, select bank1
  3573  0778  1303               	bcf	3,6	;RP1=0, select bank1
  3574  0779  00C6               	movwf	___lwmod@divisor^(0+128)
  3575  077A  3000               	movlw	0
  3576  077B  00C7               	movwf	(___lwmod@divisor^(0+128)+1)
  3577  077C  1283               	bcf	3,5	;RP0=0, select bank0
  3578  077D  1303               	bcf	3,6	;RP1=0, select bank0
  3579  077E  0845               	movf	_frequency+1,w
  3580  077F  1683               	bsf	3,5	;RP0=1, select bank1
  3581  0780  1303               	bcf	3,6	;RP1=0, select bank1
  3582  0781  00C9               	movwf	(___lwmod@dividend+1)^(0+128)
  3583  0782  1283               	bcf	3,5	;RP0=0, select bank0
  3584  0783  1303               	bcf	3,6	;RP1=0, select bank0
  3585  0784  0844               	movf	_frequency,w
  3586  0785  1683               	bsf	3,5	;RP0=1, select bank1
  3587  0786  1303               	bcf	3,6	;RP1=0, select bank1
  3588  0787  00C8               	movwf	___lwmod@dividend^(0+128)
  3589  0788  120A  158A  230D  120A  118A  	fcall	___lwmod
  3590  078D  1683               	bsf	3,5	;RP0=1, select bank1
  3591  078E  1303               	bcf	3,6	;RP1=0, select bank1
  3592  078F  0846               	movf	?___lwmod^(0+128),w
  3593  0790  00DB               	movwf	??_principalScreen^(0+128)
  3594  0791  085B               	movf	??_principalScreen^(0+128),w
  3595  0792  00E0               	movwf	principalScreen@decim^(0+128)
  3596  0793                     l3999:	
  3597                           
  3598                           ;main.c: 244:     unsigned char integ = frequency / 10;
  3599  0793  300A               	movlw	10
  3600  0794  1283               	bcf	3,5	;RP0=0, select bank0
  3601  0795  1303               	bcf	3,6	;RP1=0, select bank0
  3602  0796  00BD               	movwf	___lwdiv@divisor
  3603  0797  3000               	movlw	0
  3604  0798  00BE               	movwf	___lwdiv@divisor+1
  3605  0799  0845               	movf	_frequency+1,w
  3606  079A  00C0               	movwf	___lwdiv@dividend+1
  3607  079B  0844               	movf	_frequency,w
  3608  079C  00BF               	movwf	___lwdiv@dividend
  3609  079D  120A  158A  26EE  120A  118A  	fcall	___lwdiv
  3610  07A2  1283               	bcf	3,5	;RP0=0, select bank0
  3611  07A3  1303               	bcf	3,6	;RP1=0, select bank0
  3612  07A4  083D               	movf	?___lwdiv,w
  3613  07A5  1683               	bsf	3,5	;RP0=1, select bank1
  3614  07A6  1303               	bcf	3,6	;RP1=0, select bank1
  3615  07A7  00DB               	movwf	??_principalScreen^(0+128)
  3616  07A8  085B               	movf	??_principalScreen^(0+128),w
  3617  07A9  00E1               	movwf	principalScreen@integ^(0+128)
  3618  07AA                     l4001:	
  3619                           
  3620                           ;main.c: 245:     sprintf(lineTwo,"FREQ.  %3d.%d MHz",integ, decim);
  3621  07AA  300F               	movlw	(low ((STR_9-__stringbase)| (0+32768)))& (0+255)
  3622  07AB  00DB               	movwf	??_principalScreen^(0+128)
  3623  07AC  085B               	movf	??_principalScreen^(0+128),w
  3624  07AD  00CA               	movwf	sprintf@f^(0+128)
  3625  07AE  0861               	movf	principalScreen@integ^(0+128),w
  3626  07AF  00DC               	movwf	(??_principalScreen+1)^(0+128)
  3627  07B0  01DD               	clrf	((??_principalScreen+1)^(0+128)+1)
  3628  07B1  085C               	movf	(??_principalScreen+1)^(0+128),w
  3629  07B2  00CB               	movwf	(?_sprintf^(0+128)+1)
  3630  07B3  085D               	movf	(??_principalScreen+2)^(0+128),w
  3631  07B4  00CC               	movwf	((?_sprintf+1)^(0+128)+1)
  3632  07B5  0860               	movf	principalScreen@decim^(0+128),w
  3633  07B6  00DE               	movwf	(??_principalScreen+3)^(0+128)
  3634  07B7  01DF               	clrf	((??_principalScreen+3)^(0+128)+1)
  3635  07B8  085E               	movf	(??_principalScreen+3)^(0+128),w
  3636  07B9  00CD               	movwf	(?_sprintf^(0+128)+3)
  3637  07BA  085F               	movf	(??_principalScreen+4)^(0+128),w
  3638  07BB  00CE               	movwf	((?_sprintf+1)^(0+128)+3)
  3639  07BC  30A1               	movlw	(low (_lineTwo| 0))& (0+255)
  3640  07BD  120A  118A  2035  120A  118A  	fcall	_sprintf
  3641  07C2                     l4003:	
  3642                           
  3643                           ;main.c: 246:     SetDDRamAddr(0x40);
  3644  07C2  3040               	movlw	64
  3645  07C3  120A  158A  24DD  120A  118A  	fcall	_SetDDRamAddr
  3646  07C8                     l4005:	
  3647                           
  3648                           ;main.c: 247:     putsXLCD(lineTwo);
  3649  07C8  30A1               	movlw	(low (_lineTwo| 0))& (0+255)
  3650  07C9  120A  158A  2208  120A  118A  	fcall	_putsXLCD
  3651  07CE                     l271:	
  3652  07CE  0008               	return
  3653  07CF                     __end_of_principalScreen:	
  3654                           
  3655                           	psect	text10
  3656  0035                     __ptext10:	
  3657 ;; *************** function _sprintf *****************
  3658 ;; Defined at:
  3659 ;;		line 505 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c"
  3660 ;; Parameters:    Size  Location     Type
  3661 ;;  sp              1    wreg     PTR unsigned char 
  3662 ;;		 -> lineTwo(17), lineOne(17), 
  3663 ;;  f               1    7[BANK1 ] PTR const unsigned char 
  3664 ;;		 -> STR_12(18), STR_11(17), STR_10(17), STR_9(18), 
  3665 ;;		 -> STR_7(17), STR_6(17), STR_5(17), STR_4(17), 
  3666 ;;		 -> STR_3(17), STR_2(17), STR_1(17), 
  3667 ;; Auto vars:     Size  Location     Type
  3668 ;;  sp              1   22[BANK1 ] PTR unsigned char 
  3669 ;;		 -> lineTwo(17), lineOne(17), 
  3670 ;;  tmpval          4    0        struct .
  3671 ;;  width           2   20[BANK1 ] int 
  3672 ;;  val             2   18[BANK1 ] unsigned int 
  3673 ;;  cp              2    0        PTR const unsigned char 
  3674 ;;  len             2    0        unsigned int 
  3675 ;;  c               1   23[BANK1 ] unsigned char 
  3676 ;;  flag            1   17[BANK1 ] unsigned char 
  3677 ;;  prec            1   16[BANK1 ] char 
  3678 ;;  ap              1   15[BANK1 ] PTR void [1]
  3679 ;;		 -> ?_sprintf(2), 
  3680 ;; Return value:  Size  Location     Type
  3681 ;;                  2    7[BANK1 ] int 
  3682 ;; Registers used:
  3683 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3684 ;; Tracked objects:
  3685 ;;		On entry : 0/0
  3686 ;;		On exit  : 0/0
  3687 ;;		Unchanged: 0/0
  3688 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3689 ;;      Params:         0       0       5       0       0
  3690 ;;      Locals:         0       0       9       0       0
  3691 ;;      Temps:          0       0       3       0       0
  3692 ;;      Totals:         0       0      17       0       0
  3693 ;;Total ram usage:       17 bytes
  3694 ;; Hardware stack levels used:    1
  3695 ;; Hardware stack levels required when called:    6
  3696 ;; This function calls:
  3697 ;;		___lwdiv
  3698 ;;		___lwmod
  3699 ;;		___wmul
  3700 ;;		_isdigit
  3701 ;; This function is called by:
  3702 ;;		_start
  3703 ;;		_setFrequency
  3704 ;;		_principalScreen
  3705 ;;		_lockingScreen
  3706 ;; This function uses a non-reentrant model
  3707 ;;
  3708                           
  3709                           
  3710                           ;psect for function _sprintf
  3711  0035                     _sprintf:	
  3712                           
  3713                           ;incstack = 0
  3714 ;; using string table level
  3715                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3716                           ;sprintf@sp stored from wreg
  3717  0035  1683               	bsf	3,5	;RP0=1, select bank1
  3718  0036  1303               	bcf	3,6	;RP1=0, select bank1
  3719  0037  00D9               	movwf	sprintf@sp^(0+128)
  3720  0038                     l3629:	
  3721                           
  3722                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 505: sprint
      +                          f(char * sp, const char * f, ...);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources
      +                          \c90\common\doprnt.c: 506: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\
      +                          common\doprnt.c: 507:  va_list ap;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\source
      +                          s\c90\common\doprnt.c: 512:  char c;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sour
      +                          ces\c90\common\doprnt.c: 514:  int width;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic
      +                          \sources\c90\common\doprnt.c: 521:  signed char prec;
  3723  0038  30CB               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  3724  0039  00CF               	movwf	??_sprintf^(0+128)
  3725  003A  084F               	movf	??_sprintf^(0+128),w
  3726  003B  00D2               	movwf	sprintf@ap^(0+128)
  3727                           
  3728                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 553:  while
      +                          ((c = *f++)) {
  3729  003C  29C4               	goto	l3711
  3730  003D                     l3631:	
  3731                           
  3732                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 555:   if(c
      +                           != '%')
  3733  003D  3025               	movlw	37
  3734  003E  065A               	xorwf	sprintf@c^(0+128),w
  3735  003F  1903               	btfsc	3,2
  3736  0040  2842               	goto	u2911
  3737  0041  2843               	goto	u2910
  3738  0042                     u2911:	
  3739  0042  284F               	goto	l3637
  3740  0043                     u2910:	
  3741  0043                     l3633:	
  3742                           
  3743                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 557:   {;C:
      +                          \Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 558:    ((*sp+
      +                          + = (c)));
  3744  0043  085A               	movf	sprintf@c^(0+128),w
  3745  0044  00CF               	movwf	??_sprintf^(0+128)
  3746  0045  0859               	movf	sprintf@sp^(0+128),w
  3747  0046  0084               	movwf	4
  3748  0047  084F               	movf	??_sprintf^(0+128),w
  3749  0048  1383               	bcf	3,7	;select IRP bank0
  3750  0049  0080               	movwf	0
  3751  004A                     l3635:	
  3752  004A  3001               	movlw	1
  3753  004B  00CF               	movwf	??_sprintf^(0+128)
  3754  004C  084F               	movf	??_sprintf^(0+128),w
  3755  004D  07D9               	addwf	sprintf@sp^(0+128),f
  3756                           
  3757                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 559:    con
      +                          tinue;
  3758  004E  29C4               	goto	l3711
  3759  004F                     l3637:	
  3760                           
  3761                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 563:   widt
      +                          h = 0;
  3762  004F  01D7               	clrf	sprintf@width^(0+128)
  3763  0050  01D8               	clrf	(sprintf@width+1)^(0+128)
  3764                           
  3765                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 565:   flag
      +                           = 0;
  3766  0051  01D4               	clrf	sprintf@flag^(0+128)
  3767  0052                     l3639:	
  3768                           
  3769                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 614:   if(i
      +                          sdigit((unsigned)*f)) {
  3770  0052  084A               	movf	sprintf@f^(0+128),w
  3771  0053  0084               	movwf	4
  3772  0054  120A  158A  2000  120A  118A  	fcall	stringdir
  3773  0059  120A  158A  20D1  120A  118A  	fcall	_isdigit
  3774  005E  1C03               	btfss	3,0
  3775  005F  2861               	goto	u2921
  3776  0060  2862               	goto	u2920
  3777  0061                     u2921:	
  3778  0061  28B0               	goto	l3653
  3779  0062                     u2920:	
  3780  0062                     l3641:	
  3781                           
  3782                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 615:    wid
      +                          th = 0;
  3783  0062  1683               	bsf	3,5	;RP0=1, select bank1
  3784  0063  1303               	bcf	3,6	;RP1=0, select bank1
  3785  0064  01D7               	clrf	sprintf@width^(0+128)
  3786  0065  01D8               	clrf	(sprintf@width+1)^(0+128)
  3787  0066                     l3643:	
  3788                           
  3789                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 617:     wi
      +                          dth *= 10;
  3790  0066  300A               	movlw	10
  3791  0067  1283               	bcf	3,5	;RP0=0, select bank0
  3792  0068  1303               	bcf	3,6	;RP1=0, select bank0
  3793  0069  00BD               	movwf	___wmul@multiplier
  3794  006A  3000               	movlw	0
  3795  006B  00BE               	movwf	___wmul@multiplier+1
  3796  006C  1683               	bsf	3,5	;RP0=1, select bank1
  3797  006D  1303               	bcf	3,6	;RP1=0, select bank1
  3798  006E  0858               	movf	(sprintf@width+1)^(0+128),w
  3799  006F  1283               	bcf	3,5	;RP0=0, select bank0
  3800  0070  1303               	bcf	3,6	;RP1=0, select bank0
  3801  0071  00C0               	movwf	___wmul@multiplicand+1
  3802  0072  1683               	bsf	3,5	;RP0=1, select bank1
  3803  0073  1303               	bcf	3,6	;RP1=0, select bank1
  3804  0074  0857               	movf	sprintf@width^(0+128),w
  3805  0075  1283               	bcf	3,5	;RP0=0, select bank0
  3806  0076  1303               	bcf	3,6	;RP1=0, select bank0
  3807  0077  00BF               	movwf	___wmul@multiplicand
  3808  0078  120A  158A  21B9  120A  118A  	fcall	___wmul
  3809  007D  1283               	bcf	3,5	;RP0=0, select bank0
  3810  007E  1303               	bcf	3,6	;RP1=0, select bank0
  3811  007F  083E               	movf	?___wmul+1,w
  3812  0080  1683               	bsf	3,5	;RP0=1, select bank1
  3813  0081  1303               	bcf	3,6	;RP1=0, select bank1
  3814  0082  00D8               	movwf	(sprintf@width+1)^(0+128)
  3815  0083  1283               	bcf	3,5	;RP0=0, select bank0
  3816  0084  1303               	bcf	3,6	;RP1=0, select bank0
  3817  0085  083D               	movf	?___wmul,w
  3818  0086  1683               	bsf	3,5	;RP0=1, select bank1
  3819  0087  1303               	bcf	3,6	;RP1=0, select bank1
  3820  0088  00D7               	movwf	sprintf@width^(0+128)
  3821  0089                     l3645:	
  3822                           
  3823                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 618:       
      +                           width += *f++ - '0';
  3824  0089  084A               	movf	sprintf@f^(0+128),w
  3825  008A  0084               	movwf	4
  3826  008B  120A  158A  2000  120A  118A  	fcall	stringdir
  3827  0090  3ED0               	addlw	208
  3828  0091  00CF               	movwf	??_sprintf^(0+128)
  3829  0092  30FF               	movlw	255
  3830  0093  1803               	skipnc
  3831  0094  3000               	movlw	0
  3832  0095  00D0               	movwf	(??_sprintf^(0+128)+1)
  3833  0096  084F               	movf	??_sprintf^(0+128),w
  3834  0097  07D7               	addwf	sprintf@width^(0+128),f
  3835  0098  1803               	skipnc
  3836  0099  0AD8               	incf	(sprintf@width+1)^(0+128),f
  3837  009A  0850               	movf	(??_sprintf+1)^(0+128),w
  3838  009B  07D8               	addwf	(sprintf@width+1)^(0+128),f
  3839  009C                     l3647:	
  3840  009C  3001               	movlw	1
  3841  009D  00CF               	movwf	??_sprintf^(0+128)
  3842  009E  084F               	movf	??_sprintf^(0+128),w
  3843  009F  07CA               	addwf	sprintf@f^(0+128),f
  3844  00A0                     l3649:	
  3845                           
  3846                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 619:    } w
      +                          hile(isdigit((unsigned)*f));
  3847  00A0  084A               	movf	sprintf@f^(0+128),w
  3848  00A1  0084               	movwf	4
  3849  00A2  120A  158A  2000  120A  118A  	fcall	stringdir
  3850  00A7  120A  158A  20D1  120A  118A  	fcall	_isdigit
  3851  00AC  1803               	btfsc	3,0
  3852  00AD  28AF               	goto	u2931
  3853  00AE  28B0               	goto	u2930
  3854  00AF                     u2931:	
  3855  00AF  2866               	goto	l3643
  3856  00B0                     u2930:	
  3857  00B0                     l3653:	
  3858  00B0  3001               	movlw	1
  3859  00B1  1683               	bsf	3,5	;RP0=1, select bank1
  3860  00B2  1303               	bcf	3,6	;RP1=0, select bank1
  3861  00B3  07CA               	addwf	sprintf@f^(0+128),f
  3862  00B4  30FF               	movlw	-1
  3863  00B5  074A               	addwf	sprintf@f^(0+128),w
  3864  00B6  0084               	movwf	4
  3865  00B7  120A  158A  2000  120A  118A  	fcall	stringdir
  3866  00BC  00DA               	movwf	sprintf@c^(0+128)
  3867  00BD  00CF               	movwf	??_sprintf^(0+128)
  3868  00BE  01D0               	clrf	(??_sprintf^(0+128)+1)
  3869                           
  3870                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3871                           ; Switch size 1, requested type "simple"
  3872                           ; Number of cases is 1, Range of values is 0 to 0
  3873                           ; switch strategies available:
  3874                           ; Name         Instructions Cycles
  3875                           ; simple_byte            4     3 (average)
  3876                           ; direct_byte           11     8 (fixed)
  3877                           ; jumptable            260     6 (fixed)
  3878                           ;	Chosen strategy is simple_byte
  3879  00BF  0850               	movf	(??_sprintf+1)^(0+128),w
  3880  00C0  3A00               	xorlw	0	; case 0
  3881  00C1  1903               	skipnz
  3882  00C2  28C4               	goto	l4089
  3883  00C3  29C4               	goto	l3711
  3884  00C4                     l4089:	
  3885                           
  3886                           ; Switch size 1, requested type "simple"
  3887                           ; Number of cases is 3, Range of values is 0 to 105
  3888                           ; switch strategies available:
  3889                           ; Name         Instructions Cycles
  3890                           ; simple_byte           10     6 (average)
  3891                           ; jumptable            260     6 (fixed)
  3892                           ;	Chosen strategy is simple_byte
  3893  00C4  084F               	movf	??_sprintf^(0+128),w
  3894  00C5  3A00               	xorlw	0	; case 0
  3895  00C6  1903               	skipnz
  3896  00C7  29D6               	goto	l3713
  3897  00C8  3A64               	xorlw	100	; case 100
  3898  00C9  1903               	skipnz
  3899  00CA  28CF               	goto	l3655
  3900  00CB  3A0D               	xorlw	13	; case 105
  3901  00CC  1903               	skipnz
  3902  00CD  28CF               	goto	l3655
  3903  00CE  29C4               	goto	l3711
  3904  00CF                     l3655:	
  3905                           
  3906                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1279:   {;C
      +                          :\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1285:     val
      +                           = (unsigned int)(*(int *)__va_arg((*(int **)ap), (int)0));
  3907  00CF  0852               	movf	sprintf@ap^(0+128),w
  3908  00D0  0084               	movwf	4
  3909  00D1  1383               	bcf	3,7	;select IRP bank0
  3910  00D2  0800               	movf	0,w
  3911  00D3  00D5               	movwf	sprintf@val^(0+128)
  3912  00D4  0A84               	incf	4,f
  3913  00D5  0800               	movf	0,w
  3914  00D6  00D6               	movwf	(sprintf@val+1)^(0+128)
  3915  00D7                     l3657:	
  3916  00D7  3002               	movlw	2
  3917  00D8  00CF               	movwf	??_sprintf^(0+128)
  3918  00D9  084F               	movf	??_sprintf^(0+128),w
  3919  00DA  07D2               	addwf	sprintf@ap^(0+128),f
  3920  00DB                     l3659:	
  3921                           
  3922                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1287:    if
      +                          ((int)val < 0) {
  3923  00DB  1FD6               	btfss	(sprintf@val+1)^(0+128),7
  3924  00DC  28DE               	goto	u2941
  3925  00DD  28DF               	goto	u2940
  3926  00DE                     u2941:	
  3927  00DE  28E8               	goto	l3665
  3928  00DF                     u2940:	
  3929  00DF                     l3661:	
  3930                           
  3931                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1288:     f
      +                          lag |= 0x03;
  3932  00DF  3003               	movlw	3
  3933  00E0  00CF               	movwf	??_sprintf^(0+128)
  3934  00E1  084F               	movf	??_sprintf^(0+128),w
  3935  00E2  04D4               	iorwf	sprintf@flag^(0+128),f
  3936  00E3                     l3663:	
  3937                           
  3938                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1289:     v
      +                          al = -val;
  3939  00E3  09D5               	comf	sprintf@val^(0+128),f
  3940  00E4  09D6               	comf	(sprintf@val+1)^(0+128),f
  3941  00E5  0AD5               	incf	sprintf@val^(0+128),f
  3942  00E6  1903               	skipnz
  3943  00E7  0AD6               	incf	(sprintf@val+1)^(0+128),f
  3944  00E8                     l3665:	
  3945                           
  3946                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1292:   };C
      +                          :\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1331:    for(
      +                          c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  3947  00E8  01DA               	clrf	sprintf@c^(0+128)
  3948  00E9  0ADA               	incf	sprintf@c^(0+128),f
  3949  00EA                     l3671:	
  3950                           
  3951                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1332:     i
      +                          f(val < dpowers[c])
  3952  00EA  085A               	movf	sprintf@c^(0+128),w
  3953  00EB  00CF               	movwf	??_sprintf^(0+128)
  3954  00EC  074F               	addwf	??_sprintf^(0+128),w
  3955  00ED  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  3956  00EE  0084               	movwf	4
  3957  00EF  120A  158A  2000  120A  118A  	fcall	stringdir
  3958  00F4  00D0               	movwf	(??_sprintf+1)^(0+128)
  3959  00F5  120A  158A  2000  120A  118A  	fcall	stringdir
  3960  00FA  00D1               	movwf	((??_sprintf+1)^(0+128)+1)
  3961  00FB  0851               	movf	(??_sprintf+2)^(0+128),w
  3962  00FC  0256               	subwf	(sprintf@val+1)^(0+128),w
  3963  00FD  1D03               	skipz
  3964  00FE  2901               	goto	u2955
  3965  00FF  0850               	movf	(??_sprintf+1)^(0+128),w
  3966  0100  0255               	subwf	sprintf@val^(0+128),w
  3967  0101                     u2955:	
  3968  0101  1803               	skipnc
  3969  0102  2904               	goto	u2951
  3970  0103  2905               	goto	u2950
  3971  0104                     u2951:	
  3972  0104  2906               	goto	l3675
  3973  0105                     u2950:	
  3974  0105  2910               	goto	l3677
  3975  0106                     l3675:	
  3976  0106  3001               	movlw	1
  3977  0107  00CF               	movwf	??_sprintf^(0+128)
  3978  0108  084F               	movf	??_sprintf^(0+128),w
  3979  0109  07DA               	addwf	sprintf@c^(0+128),f
  3980  010A  3005               	movlw	5
  3981  010B  065A               	xorwf	sprintf@c^(0+128),w
  3982  010C  1D03               	btfss	3,2
  3983  010D  290F               	goto	u2961
  3984  010E  2910               	goto	u2960
  3985  010F                     u2961:	
  3986  010F  28EA               	goto	l3671
  3987  0110                     u2960:	
  3988  0110                     l3677:	
  3989                           
  3990                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1371:   if(
      +                          width && flag & 0x03)
  3991  0110  0857               	movf	sprintf@width^(0+128),w
  3992  0111  0458               	iorwf	(sprintf@width+1)^(0+128),w
  3993  0112  1903               	btfsc	3,2
  3994  0113  2915               	goto	u2971
  3995  0114  2916               	goto	u2970
  3996  0115                     u2971:	
  3997  0115  2922               	goto	l651
  3998  0116                     u2970:	
  3999  0116                     l3679:	
  4000  0116  0854               	movf	sprintf@flag^(0+128),w
  4001  0117  3903               	andlw	3
  4002  0118  1903               	btfsc	3,2
  4003  0119  291B               	goto	u2981
  4004  011A  291C               	goto	u2980
  4005  011B                     u2981:	
  4006  011B  2922               	goto	l651
  4007  011C                     u2980:	
  4008  011C                     l3681:	
  4009                           
  4010                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1372:    wi
      +                          dth--;
  4011  011C  30FF               	movlw	255
  4012  011D  07D7               	addwf	sprintf@width^(0+128),f
  4013  011E  1803               	skipnc
  4014  011F  0AD8               	incf	(sprintf@width+1)^(0+128),f
  4015  0120  30FF               	movlw	255
  4016  0121  07D8               	addwf	(sprintf@width+1)^(0+128),f
  4017  0122                     l651:	
  4018                           
  4019                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1407:   if(
      +                          width > c)
  4020  0122  0858               	movf	(sprintf@width+1)^(0+128),w
  4021  0123  3A80               	xorlw	128
  4022  0124  3C80               	sublw	128
  4023  0125  1D03               	skipz
  4024  0126  2929               	goto	u2995
  4025  0127  0857               	movf	sprintf@width^(0+128),w
  4026  0128  025A               	subwf	sprintf@c^(0+128),w
  4027  0129                     u2995:	
  4028  0129  1803               	skipnc
  4029  012A  292C               	goto	u2991
  4030  012B  292D               	goto	u2990
  4031  012C                     u2991:	
  4032  012C  2939               	goto	l3685
  4033  012D                     u2990:	
  4034  012D                     l3683:	
  4035                           
  4036                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1408:    wi
      +                          dth -= c;
  4037  012D  1683               	bsf	3,5	;RP0=1, select bank1
  4038  012E  1303               	bcf	3,6	;RP1=0, select bank1
  4039  012F  085A               	movf	sprintf@c^(0+128),w
  4040  0130  00CF               	movwf	??_sprintf^(0+128)
  4041  0131  01D0               	clrf	(??_sprintf^(0+128)+1)
  4042  0132  084F               	movf	??_sprintf^(0+128),w
  4043  0133  02D7               	subwf	sprintf@width^(0+128),f
  4044  0134  0850               	movf	(??_sprintf+1)^(0+128),w
  4045  0135  1C03               	skipc
  4046  0136  03D8               	decf	(sprintf@width+1)^(0+128),f
  4047  0137  02D8               	subwf	(sprintf@width+1)^(0+128),f
  4048  0138  293D               	goto	l3687
  4049  0139                     l3685:	
  4050                           
  4051                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1410:    wi
      +                          dth = 0;
  4052  0139  1683               	bsf	3,5	;RP0=1, select bank1
  4053  013A  1303               	bcf	3,6	;RP1=0, select bank1
  4054  013B  01D7               	clrf	sprintf@width^(0+128)
  4055  013C  01D8               	clrf	(sprintf@width+1)^(0+128)
  4056  013D                     l3687:	
  4057                           
  4058                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1448:   {;C
      +                          :\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1450:    if(w
      +                          idth
  4059  013D  0857               	movf	sprintf@width^(0+128),w
  4060  013E  0458               	iorwf	(sprintf@width+1)^(0+128),w
  4061  013F  1903               	btfsc	3,2
  4062  0140  2942               	goto	u3001
  4063  0141  2943               	goto	u3000
  4064  0142                     u3001:	
  4065  0142  295A               	goto	l3695
  4066  0143                     u3000:	
  4067  0143                     l3689:	
  4068                           
  4069                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1456:      
      +                          ((*sp++ = (' ')));
  4070  0143  3020               	movlw	32
  4071  0144  00CF               	movwf	??_sprintf^(0+128)
  4072  0145  0859               	movf	sprintf@sp^(0+128),w
  4073  0146  0084               	movwf	4
  4074  0147  084F               	movf	??_sprintf^(0+128),w
  4075  0148  1383               	bcf	3,7	;select IRP bank0
  4076  0149  0080               	movwf	0
  4077  014A                     l3691:	
  4078  014A  3001               	movlw	1
  4079  014B  00CF               	movwf	??_sprintf^(0+128)
  4080  014C  084F               	movf	??_sprintf^(0+128),w
  4081  014D  07D9               	addwf	sprintf@sp^(0+128),f
  4082  014E                     l3693:	
  4083  014E  30FF               	movlw	255
  4084  014F  07D7               	addwf	sprintf@width^(0+128),f
  4085  0150  1803               	skipnc
  4086  0151  0AD8               	incf	(sprintf@width+1)^(0+128),f
  4087  0152  30FF               	movlw	255
  4088  0153  07D8               	addwf	(sprintf@width+1)^(0+128),f
  4089  0154  0857               	movf	sprintf@width^(0+128),w
  4090  0155  0458               	iorwf	(sprintf@width+1)^(0+128),w
  4091  0156  1D03               	btfss	3,2
  4092  0157  2959               	goto	u3011
  4093  0158  295A               	goto	u3010
  4094  0159                     u3011:	
  4095  0159  2943               	goto	l3689
  4096  015A                     u3010:	
  4097  015A                     l3695:	
  4098                           
  4099                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1464:    if
      +                          (flag & 0x03)
  4100  015A  0854               	movf	sprintf@flag^(0+128),w
  4101  015B  3903               	andlw	3
  4102  015C  1903               	btfsc	3,2
  4103  015D  295F               	goto	u3021
  4104  015E  2960               	goto	u3020
  4105  015F                     u3021:	
  4106  015F  296B               	goto	l3701
  4107  0160                     u3020:	
  4108  0160                     l3697:	
  4109                           
  4110                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1465:     (
      +                          (*sp++ = ('-')));
  4111  0160  302D               	movlw	45
  4112  0161  00CF               	movwf	??_sprintf^(0+128)
  4113  0162  0859               	movf	sprintf@sp^(0+128),w
  4114  0163  0084               	movwf	4
  4115  0164  084F               	movf	??_sprintf^(0+128),w
  4116  0165  1383               	bcf	3,7	;select IRP bank0
  4117  0166  0080               	movwf	0
  4118  0167                     l3699:	
  4119  0167  3001               	movlw	1
  4120  0168  00CF               	movwf	??_sprintf^(0+128)
  4121  0169  084F               	movf	??_sprintf^(0+128),w
  4122  016A  07D9               	addwf	sprintf@sp^(0+128),f
  4123  016B                     l3701:	
  4124                           
  4125                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1495:   };C
      +                          :\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1498:   prec 
      +                          = c;
  4126  016B  085A               	movf	sprintf@c^(0+128),w
  4127  016C  00CF               	movwf	??_sprintf^(0+128)
  4128  016D  084F               	movf	??_sprintf^(0+128),w
  4129  016E  00D3               	movwf	sprintf@prec^(0+128)
  4130                           
  4131                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1500:   whi
      +                          le(prec--) {
  4132  016F  29BB               	goto	l3709
  4133  0170                     l3703:	
  4134                           
  4135                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1504:    {;
      +                          C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1515:     c 
      +                          = (val / dpowers[(unsigned char)prec]) % 10 + '0';
  4136  0170  300A               	movlw	10
  4137  0171  00C6               	movwf	___lwmod@divisor^(0+128)
  4138  0172  3000               	movlw	0
  4139  0173  00C7               	movwf	(___lwmod@divisor^(0+128)+1)
  4140  0174  0853               	movf	sprintf@prec^(0+128),w
  4141  0175  00CF               	movwf	??_sprintf^(0+128)
  4142  0176  074F               	addwf	??_sprintf^(0+128),w
  4143  0177  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  4144  0178  0084               	movwf	4
  4145  0179  120A  158A  2000  120A  118A  	fcall	stringdir
  4146  017E  1283               	bcf	3,5	;RP0=0, select bank0
  4147  017F  1303               	bcf	3,6	;RP1=0, select bank0
  4148  0180  00BD               	movwf	___lwdiv@divisor
  4149  0181  120A  158A  2000  120A  118A  	fcall	stringdir
  4150  0186  00BE               	movwf	___lwdiv@divisor+1
  4151  0187  1683               	bsf	3,5	;RP0=1, select bank1
  4152  0188  1303               	bcf	3,6	;RP1=0, select bank1
  4153  0189  0856               	movf	(sprintf@val+1)^(0+128),w
  4154  018A  1283               	bcf	3,5	;RP0=0, select bank0
  4155  018B  1303               	bcf	3,6	;RP1=0, select bank0
  4156  018C  00C0               	movwf	___lwdiv@dividend+1
  4157  018D  1683               	bsf	3,5	;RP0=1, select bank1
  4158  018E  1303               	bcf	3,6	;RP1=0, select bank1
  4159  018F  0855               	movf	sprintf@val^(0+128),w
  4160  0190  1283               	bcf	3,5	;RP0=0, select bank0
  4161  0191  1303               	bcf	3,6	;RP1=0, select bank0
  4162  0192  00BF               	movwf	___lwdiv@dividend
  4163  0193  120A  158A  26EE  120A  118A  	fcall	___lwdiv
  4164  0198  1283               	bcf	3,5	;RP0=0, select bank0
  4165  0199  1303               	bcf	3,6	;RP1=0, select bank0
  4166  019A  083E               	movf	?___lwdiv+1,w
  4167  019B  1683               	bsf	3,5	;RP0=1, select bank1
  4168  019C  1303               	bcf	3,6	;RP1=0, select bank1
  4169  019D  00C9               	movwf	(___lwmod@dividend+1)^(0+128)
  4170  019E  1283               	bcf	3,5	;RP0=0, select bank0
  4171  019F  1303               	bcf	3,6	;RP1=0, select bank0
  4172  01A0  083D               	movf	?___lwdiv,w
  4173  01A1  1683               	bsf	3,5	;RP0=1, select bank1
  4174  01A2  1303               	bcf	3,6	;RP1=0, select bank1
  4175  01A3  00C8               	movwf	___lwmod@dividend^(0+128)
  4176  01A4  120A  158A  230D  120A  118A  	fcall	___lwmod
  4177  01A9  1683               	bsf	3,5	;RP0=1, select bank1
  4178  01AA  1303               	bcf	3,6	;RP1=0, select bank1
  4179  01AB  0846               	movf	?___lwmod^(0+128),w
  4180  01AC  3E30               	addlw	48
  4181  01AD  00D0               	movwf	(??_sprintf+1)^(0+128)
  4182  01AE  0850               	movf	(??_sprintf+1)^(0+128),w
  4183  01AF  00DA               	movwf	sprintf@c^(0+128)
  4184  01B0                     l3705:	
  4185                           
  4186                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1549:    };
      +                          C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1550:    ((*
      +                          sp++ = (c)));
  4187  01B0  085A               	movf	sprintf@c^(0+128),w
  4188  01B1  00CF               	movwf	??_sprintf^(0+128)
  4189  01B2  0859               	movf	sprintf@sp^(0+128),w
  4190  01B3  0084               	movwf	4
  4191  01B4  084F               	movf	??_sprintf^(0+128),w
  4192  01B5  1383               	bcf	3,7	;select IRP bank0
  4193  01B6  0080               	movwf	0
  4194  01B7                     l3707:	
  4195  01B7  3001               	movlw	1
  4196  01B8  00CF               	movwf	??_sprintf^(0+128)
  4197  01B9  084F               	movf	??_sprintf^(0+128),w
  4198  01BA  07D9               	addwf	sprintf@sp^(0+128),f
  4199  01BB                     l3709:	
  4200                           
  4201                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1500:   whi
      +                          le(prec--) {
  4202  01BB  30FF               	movlw	255
  4203  01BC  00CF               	movwf	??_sprintf^(0+128)
  4204  01BD  084F               	movf	??_sprintf^(0+128),w
  4205  01BE  07D3               	addwf	sprintf@prec^(0+128),f
  4206  01BF  0A53               	incf	sprintf@prec^(0+128),w
  4207  01C0  1D03               	btfss	3,2
  4208  01C1  29C3               	goto	u3031
  4209  01C2  29C4               	goto	u3030
  4210  01C3                     u3031:	
  4211  01C3  2970               	goto	l3703
  4212  01C4                     u3030:	
  4213  01C4                     l3711:	
  4214                           
  4215                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 553:  while
      +                          ((c = *f++)) {
  4216  01C4  3001               	movlw	1
  4217  01C5  07CA               	addwf	sprintf@f^(0+128),f
  4218  01C6  30FF               	movlw	-1
  4219  01C7  074A               	addwf	sprintf@f^(0+128),w
  4220  01C8  0084               	movwf	4
  4221  01C9  120A  158A  2000  120A  118A  	fcall	stringdir
  4222  01CE  00CF               	movwf	??_sprintf^(0+128)
  4223  01CF  084F               	movf	??_sprintf^(0+128),w
  4224  01D0  00DA               	movwf	sprintf@c^(0+128)
  4225  01D1  085A               	movf	sprintf@c^(0+128),w
  4226  01D2  1D03               	btfss	3,2
  4227  01D3  29D5               	goto	u3041
  4228  01D4  29D6               	goto	u3040
  4229  01D5                     u3041:	
  4230  01D5  283D               	goto	l3631
  4231  01D6                     u3040:	
  4232  01D6                     l3713:	
  4233                           
  4234                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1564:  *sp 
      +                          = 0;
  4235  01D6  0859               	movf	sprintf@sp^(0+128),w
  4236  01D7  0084               	movwf	4
  4237  01D8  1383               	bcf	3,7	;select IRP bank0
  4238  01D9  0180               	clrf	0
  4239  01DA                     l662:	
  4240  01DA  0008               	return
  4241  01DB                     __end_of_sprintf:	
  4242                           
  4243                           	psect	text11
  4244  08D1                     __ptext11:	
  4245 ;; *************** function _isdigit *****************
  4246 ;; Defined at:
  4247 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\isdigit.c"
  4248 ;; Parameters:    Size  Location     Type
  4249 ;;  c               1    wreg     unsigned char 
  4250 ;; Auto vars:     Size  Location     Type
  4251 ;;  c               1   30[BANK0 ] unsigned char 
  4252 ;; Return value:  Size  Location     Type
  4253 ;;		None               void
  4254 ;; Registers used:
  4255 ;;		wreg, status,2, status,0
  4256 ;; Tracked objects:
  4257 ;;		On entry : 0/0
  4258 ;;		On exit  : 0/0
  4259 ;;		Unchanged: 0/0
  4260 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4261 ;;      Params:         0       0       0       0       0
  4262 ;;      Locals:         0       2       0       0       0
  4263 ;;      Temps:          0       0       0       0       0
  4264 ;;      Totals:         0       2       0       0       0
  4265 ;;Total ram usage:        2 bytes
  4266 ;; Hardware stack levels used:    1
  4267 ;; Hardware stack levels required when called:    5
  4268 ;; This function calls:
  4269 ;;		Nothing
  4270 ;; This function is called by:
  4271 ;;		_sprintf
  4272 ;; This function uses a non-reentrant model
  4273 ;;
  4274                           
  4275                           
  4276                           ;psect for function _isdigit
  4277  08D1                     _isdigit:	
  4278                           
  4279                           ;incstack = 0
  4280                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  4281                           ;isdigit@c stored from wreg
  4282  08D1  1283               	bcf	3,5	;RP0=0, select bank0
  4283  08D2  1303               	bcf	3,6	;RP1=0, select bank0
  4284  08D3  00BE               	movwf	isdigit@c
  4285  08D4                     l2447:	
  4286  08D4  01BD               	clrf	_isdigit$1104
  4287  08D5                     l2449:	
  4288  08D5  303A               	movlw	58
  4289  08D6  023E               	subwf	isdigit@c,w
  4290  08D7  1803               	skipnc
  4291  08D8  28DA               	goto	u1401
  4292  08D9  28DB               	goto	u1400
  4293  08DA                     u1401:	
  4294  08DA  28E3               	goto	l2455
  4295  08DB                     u1400:	
  4296  08DB                     l2451:	
  4297  08DB  3030               	movlw	48
  4298  08DC  023E               	subwf	isdigit@c,w
  4299  08DD  1C03               	skipc
  4300  08DE  28E0               	goto	u1411
  4301  08DF  28E1               	goto	u1410
  4302  08E0                     u1411:	
  4303  08E0  28E3               	goto	l2455
  4304  08E1                     u1410:	
  4305  08E1                     l2453:	
  4306  08E1  01BD               	clrf	_isdigit$1104
  4307  08E2  0ABD               	incf	_isdigit$1104,f
  4308  08E3                     l2455:	
  4309  08E3  0C3D               	rrf	_isdigit$1104,w
  4310  08E4                     l1113:	
  4311  08E4  0008               	return
  4312  08E5                     __end_of_isdigit:	
  4313                           
  4314                           	psect	text12
  4315  09B9                     __ptext12:	
  4316 ;; *************** function ___wmul *****************
  4317 ;; Defined at:
  4318 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\Umul16.c"
  4319 ;; Parameters:    Size  Location     Type
  4320 ;;  multiplier      2   29[BANK0 ] unsigned int 
  4321 ;;  multiplicand    2   31[BANK0 ] unsigned int 
  4322 ;; Auto vars:     Size  Location     Type
  4323 ;;  product         2   33[BANK0 ] unsigned int 
  4324 ;; Return value:  Size  Location     Type
  4325 ;;                  2   29[BANK0 ] unsigned int 
  4326 ;; Registers used:
  4327 ;;		wreg, status,2, status,0
  4328 ;; Tracked objects:
  4329 ;;		On entry : 0/0
  4330 ;;		On exit  : 0/0
  4331 ;;		Unchanged: 0/0
  4332 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4333 ;;      Params:         0       4       0       0       0
  4334 ;;      Locals:         0       2       0       0       0
  4335 ;;      Temps:          0       0       0       0       0
  4336 ;;      Totals:         0       6       0       0       0
  4337 ;;Total ram usage:        6 bytes
  4338 ;; Hardware stack levels used:    1
  4339 ;; Hardware stack levels required when called:    5
  4340 ;; This function calls:
  4341 ;;		Nothing
  4342 ;; This function is called by:
  4343 ;;		_beep
  4344 ;;		_sprintf
  4345 ;; This function uses a non-reentrant model
  4346 ;;
  4347                           
  4348                           
  4349                           ;psect for function ___wmul
  4350  09B9                     ___wmul:	
  4351  09B9                     l3555:	
  4352                           ;incstack = 0
  4353                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  4354                           
  4355  09B9  1283               	bcf	3,5	;RP0=0, select bank0
  4356  09BA  1303               	bcf	3,6	;RP1=0, select bank0
  4357  09BB  01C1               	clrf	___wmul@product
  4358  09BC  01C2               	clrf	___wmul@product+1
  4359  09BD                     l3557:	
  4360  09BD  1C3D               	btfss	___wmul@multiplier,0
  4361  09BE  29C0               	goto	u2731
  4362  09BF  29C1               	goto	u2730
  4363  09C0                     u2731:	
  4364  09C0  29C7               	goto	l666
  4365  09C1                     u2730:	
  4366  09C1                     l3559:	
  4367  09C1  083F               	movf	___wmul@multiplicand,w
  4368  09C2  07C1               	addwf	___wmul@product,f
  4369  09C3  1803               	skipnc
  4370  09C4  0AC2               	incf	___wmul@product+1,f
  4371  09C5  0840               	movf	___wmul@multiplicand+1,w
  4372  09C6  07C2               	addwf	___wmul@product+1,f
  4373  09C7                     l666:	
  4374  09C7  3001               	movlw	1
  4375  09C8                     u2745:	
  4376  09C8  1003               	clrc
  4377  09C9  0DBF               	rlf	___wmul@multiplicand,f
  4378  09CA  0DC0               	rlf	___wmul@multiplicand+1,f
  4379  09CB  3EFF               	addlw	-1
  4380  09CC  1D03               	skipz
  4381  09CD  29C8               	goto	u2745
  4382  09CE                     l3561:	
  4383  09CE  3001               	movlw	1
  4384  09CF                     u2755:	
  4385  09CF  1003               	clrc
  4386  09D0  0CBE               	rrf	___wmul@multiplier+1,f
  4387  09D1  0CBD               	rrf	___wmul@multiplier,f
  4388  09D2  3EFF               	addlw	-1
  4389  09D3  1D03               	skipz
  4390  09D4  29CF               	goto	u2755
  4391  09D5                     l3563:	
  4392  09D5  083D               	movf	___wmul@multiplier,w
  4393  09D6  043E               	iorwf	___wmul@multiplier+1,w
  4394  09D7  1D03               	btfss	3,2
  4395  09D8  29DA               	goto	u2761
  4396  09D9  29DB               	goto	u2760
  4397  09DA                     u2761:	
  4398  09DA  29BD               	goto	l3557
  4399  09DB                     u2760:	
  4400  09DB                     l3565:	
  4401  09DB  0842               	movf	___wmul@product+1,w
  4402  09DC  00BE               	movwf	?___wmul+1
  4403  09DD  0841               	movf	___wmul@product,w
  4404  09DE  00BD               	movwf	?___wmul
  4405  09DF                     l668:	
  4406  09DF  0008               	return
  4407  09E0                     __end_of___wmul:	
  4408                           
  4409                           	psect	text13
  4410  0B0D                     __ptext13:	
  4411 ;; *************** function ___lwmod *****************
  4412 ;; Defined at:
  4413 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\lwmod.c"
  4414 ;; Parameters:    Size  Location     Type
  4415 ;;  divisor         2    3[BANK1 ] unsigned int 
  4416 ;;  dividend        2    5[BANK1 ] unsigned int 
  4417 ;; Auto vars:     Size  Location     Type
  4418 ;;  counter         1   35[BANK0 ] unsigned char 
  4419 ;; Return value:  Size  Location     Type
  4420 ;;                  2    3[BANK1 ] unsigned int 
  4421 ;; Registers used:
  4422 ;;		wreg, status,2, status,0
  4423 ;; Tracked objects:
  4424 ;;		On entry : 0/0
  4425 ;;		On exit  : 0/0
  4426 ;;		Unchanged: 0/0
  4427 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4428 ;;      Params:         0       0       4       0       0
  4429 ;;      Locals:         0       1       0       0       0
  4430 ;;      Temps:          0       1       0       0       0
  4431 ;;      Totals:         0       2       4       0       0
  4432 ;;Total ram usage:        6 bytes
  4433 ;; Hardware stack levels used:    1
  4434 ;; Hardware stack levels required when called:    5
  4435 ;; This function calls:
  4436 ;;		Nothing
  4437 ;; This function is called by:
  4438 ;;		_principalScreen
  4439 ;;		_sprintf
  4440 ;; This function uses a non-reentrant model
  4441 ;;
  4442                           
  4443                           
  4444                           ;psect for function ___lwmod
  4445  0B0D                     ___lwmod:	
  4446  0B0D                     l3595:	
  4447                           ;incstack = 0
  4448                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  4449                           
  4450  0B0D  1683               	bsf	3,5	;RP0=1, select bank1
  4451  0B0E  1303               	bcf	3,6	;RP1=0, select bank1
  4452  0B0F  0846               	movf	___lwmod@divisor^(0+128),w
  4453  0B10  0447               	iorwf	(___lwmod@divisor+1)^(0+128),w
  4454  0B11  1903               	btfsc	3,2
  4455  0B12  2B14               	goto	u2841
  4456  0B13  2B15               	goto	u2840
  4457  0B14                     u2841:	
  4458  0B14  2B4E               	goto	l3613
  4459  0B15                     u2840:	
  4460  0B15                     l3597:	
  4461  0B15  1283               	bcf	3,5	;RP0=0, select bank0
  4462  0B16  1303               	bcf	3,6	;RP1=0, select bank0
  4463  0B17  01C3               	clrf	___lwmod@counter
  4464  0B18  0AC3               	incf	___lwmod@counter,f
  4465  0B19  2B27               	goto	l3603
  4466  0B1A                     l3599:	
  4467  0B1A  3001               	movlw	1
  4468  0B1B                     u2855:	
  4469  0B1B  1003               	clrc
  4470  0B1C  0DC6               	rlf	___lwmod@divisor^(0+128),f
  4471  0B1D  0DC7               	rlf	(___lwmod@divisor+1)^(0+128),f
  4472  0B1E  3EFF               	addlw	-1
  4473  0B1F  1D03               	skipz
  4474  0B20  2B1B               	goto	u2855
  4475  0B21                     l3601:	
  4476  0B21  3001               	movlw	1
  4477  0B22  1283               	bcf	3,5	;RP0=0, select bank0
  4478  0B23  1303               	bcf	3,6	;RP1=0, select bank0
  4479  0B24  00C2               	movwf	??___lwmod
  4480  0B25  0842               	movf	??___lwmod,w
  4481  0B26  07C3               	addwf	___lwmod@counter,f
  4482  0B27                     l3603:	
  4483  0B27  1683               	bsf	3,5	;RP0=1, select bank1
  4484  0B28  1303               	bcf	3,6	;RP1=0, select bank1
  4485  0B29  1FC7               	btfss	(___lwmod@divisor+1)^(0+128),7
  4486  0B2A  2B2C               	goto	u2861
  4487  0B2B  2B2D               	goto	u2860
  4488  0B2C                     u2861:	
  4489  0B2C  2B1A               	goto	l3599
  4490  0B2D                     u2860:	
  4491  0B2D                     l3605:	
  4492  0B2D  1683               	bsf	3,5	;RP0=1, select bank1
  4493  0B2E  1303               	bcf	3,6	;RP1=0, select bank1
  4494  0B2F  0847               	movf	(___lwmod@divisor+1)^(0+128),w
  4495  0B30  0249               	subwf	(___lwmod@dividend+1)^(0+128),w
  4496  0B31  1D03               	skipz
  4497  0B32  2B35               	goto	u2875
  4498  0B33  0846               	movf	___lwmod@divisor^(0+128),w
  4499  0B34  0248               	subwf	___lwmod@dividend^(0+128),w
  4500  0B35                     u2875:	
  4501  0B35  1C03               	skipc
  4502  0B36  2B38               	goto	u2871
  4503  0B37  2B39               	goto	u2870
  4504  0B38                     u2871:	
  4505  0B38  2B3F               	goto	l3609
  4506  0B39                     u2870:	
  4507  0B39                     l3607:	
  4508  0B39  0846               	movf	___lwmod@divisor^(0+128),w
  4509  0B3A  02C8               	subwf	___lwmod@dividend^(0+128),f
  4510  0B3B  0847               	movf	(___lwmod@divisor+1)^(0+128),w
  4511  0B3C  1C03               	skipc
  4512  0B3D  03C9               	decf	(___lwmod@dividend+1)^(0+128),f
  4513  0B3E  02C9               	subwf	(___lwmod@dividend+1)^(0+128),f
  4514  0B3F                     l3609:	
  4515  0B3F  3001               	movlw	1
  4516  0B40                     u2885:	
  4517  0B40  1003               	clrc
  4518  0B41  0CC7               	rrf	(___lwmod@divisor+1)^(0+128),f
  4519  0B42  0CC6               	rrf	___lwmod@divisor^(0+128),f
  4520  0B43  3EFF               	addlw	-1
  4521  0B44  1D03               	skipz
  4522  0B45  2B40               	goto	u2885
  4523  0B46                     l3611:	
  4524  0B46  3001               	movlw	1
  4525  0B47  1283               	bcf	3,5	;RP0=0, select bank0
  4526  0B48  1303               	bcf	3,6	;RP1=0, select bank0
  4527  0B49  02C3               	subwf	___lwmod@counter,f
  4528  0B4A  1D03               	btfss	3,2
  4529  0B4B  2B4D               	goto	u2891
  4530  0B4C  2B4E               	goto	u2890
  4531  0B4D                     u2891:	
  4532  0B4D  2B2D               	goto	l3605
  4533  0B4E                     u2890:	
  4534  0B4E                     l3613:	
  4535  0B4E  1683               	bsf	3,5	;RP0=1, select bank1
  4536  0B4F  1303               	bcf	3,6	;RP1=0, select bank1
  4537  0B50  0849               	movf	(___lwmod@dividend+1)^(0+128),w
  4538  0B51  00C7               	movwf	(?___lwmod+1)^(0+128)
  4539  0B52  0848               	movf	___lwmod@dividend^(0+128),w
  4540  0B53  00C6               	movwf	?___lwmod^(0+128)
  4541  0B54                     l948:	
  4542  0B54  0008               	return
  4543  0B55                     __end_of___lwmod:	
  4544                           
  4545                           	psect	text14
  4546  0EEE                     __ptext14:	
  4547 ;; *************** function ___lwdiv *****************
  4548 ;; Defined at:
  4549 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\lwdiv.c"
  4550 ;; Parameters:    Size  Location     Type
  4551 ;;  divisor         2   29[BANK0 ] unsigned int 
  4552 ;;  dividend        2   31[BANK0 ] unsigned int 
  4553 ;; Auto vars:     Size  Location     Type
  4554 ;;  quotient        2    1[BANK1 ] unsigned int 
  4555 ;;  counter         1    0[BANK1 ] unsigned char 
  4556 ;; Return value:  Size  Location     Type
  4557 ;;                  2   29[BANK0 ] unsigned int 
  4558 ;; Registers used:
  4559 ;;		wreg, status,2, status,0
  4560 ;; Tracked objects:
  4561 ;;		On entry : 0/0
  4562 ;;		On exit  : 0/0
  4563 ;;		Unchanged: 0/0
  4564 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4565 ;;      Params:         0       4       0       0       0
  4566 ;;      Locals:         0       0       3       0       0
  4567 ;;      Temps:          0       1       0       0       0
  4568 ;;      Totals:         0       5       3       0       0
  4569 ;;Total ram usage:        8 bytes
  4570 ;; Hardware stack levels used:    1
  4571 ;; Hardware stack levels required when called:    5
  4572 ;; This function calls:
  4573 ;;		Nothing
  4574 ;; This function is called by:
  4575 ;;		_principalScreen
  4576 ;;		_sprintf
  4577 ;; This function uses a non-reentrant model
  4578 ;;
  4579                           
  4580                           
  4581                           ;psect for function ___lwdiv
  4582  0EEE                     ___lwdiv:	
  4583  0EEE                     l3569:	
  4584                           ;incstack = 0
  4585                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  4586                           
  4587  0EEE  1683               	bsf	3,5	;RP0=1, select bank1
  4588  0EEF  1303               	bcf	3,6	;RP1=0, select bank1
  4589  0EF0  01C4               	clrf	___lwdiv@quotient^(0+128)
  4590  0EF1  01C5               	clrf	(___lwdiv@quotient+1)^(0+128)
  4591  0EF2                     l3571:	
  4592  0EF2  1283               	bcf	3,5	;RP0=0, select bank0
  4593  0EF3  1303               	bcf	3,6	;RP1=0, select bank0
  4594  0EF4  083D               	movf	___lwdiv@divisor,w
  4595  0EF5  043E               	iorwf	___lwdiv@divisor+1,w
  4596  0EF6  1903               	btfsc	3,2
  4597  0EF7  2EF9               	goto	u2771
  4598  0EF8  2EFA               	goto	u2770
  4599  0EF9                     u2771:	
  4600  0EF9  2F40               	goto	l3591
  4601  0EFA                     u2770:	
  4602  0EFA                     l3573:	
  4603  0EFA  1683               	bsf	3,5	;RP0=1, select bank1
  4604  0EFB  1303               	bcf	3,6	;RP1=0, select bank1
  4605  0EFC  01C3               	clrf	___lwdiv@counter^(0+128)
  4606  0EFD  0AC3               	incf	___lwdiv@counter^(0+128),f
  4607  0EFE  2F0C               	goto	l3579
  4608  0EFF                     l3575:	
  4609  0EFF  3001               	movlw	1
  4610  0F00                     u2785:	
  4611  0F00  1003               	clrc
  4612  0F01  0DBD               	rlf	___lwdiv@divisor,f
  4613  0F02  0DBE               	rlf	___lwdiv@divisor+1,f
  4614  0F03  3EFF               	addlw	-1
  4615  0F04  1D03               	skipz
  4616  0F05  2F00               	goto	u2785
  4617  0F06                     l3577:	
  4618  0F06  3001               	movlw	1
  4619  0F07  00C1               	movwf	??___lwdiv
  4620  0F08  0841               	movf	??___lwdiv,w
  4621  0F09  1683               	bsf	3,5	;RP0=1, select bank1
  4622  0F0A  1303               	bcf	3,6	;RP1=0, select bank1
  4623  0F0B  07C3               	addwf	___lwdiv@counter^(0+128),f
  4624  0F0C                     l3579:	
  4625  0F0C  1283               	bcf	3,5	;RP0=0, select bank0
  4626  0F0D  1303               	bcf	3,6	;RP1=0, select bank0
  4627  0F0E  1FBE               	btfss	___lwdiv@divisor+1,7
  4628  0F0F  2F11               	goto	u2791
  4629  0F10  2F12               	goto	u2790
  4630  0F11                     u2791:	
  4631  0F11  2EFF               	goto	l3575
  4632  0F12                     u2790:	
  4633  0F12                     l3581:	
  4634  0F12  3001               	movlw	1
  4635  0F13  1683               	bsf	3,5	;RP0=1, select bank1
  4636  0F14  1303               	bcf	3,6	;RP1=0, select bank1
  4637  0F15                     u2805:	
  4638  0F15  1003               	clrc
  4639  0F16  0DC4               	rlf	___lwdiv@quotient^(0+128),f
  4640  0F17  0DC5               	rlf	(___lwdiv@quotient+1)^(0+128),f
  4641  0F18  3EFF               	addlw	-1
  4642  0F19  1D03               	skipz
  4643  0F1A  2F15               	goto	u2805
  4644  0F1B  1283               	bcf	3,5	;RP0=0, select bank0
  4645  0F1C  1303               	bcf	3,6	;RP1=0, select bank0
  4646  0F1D  083E               	movf	___lwdiv@divisor+1,w
  4647  0F1E  0240               	subwf	___lwdiv@dividend+1,w
  4648  0F1F  1D03               	skipz
  4649  0F20  2F23               	goto	u2815
  4650  0F21  083D               	movf	___lwdiv@divisor,w
  4651  0F22  023F               	subwf	___lwdiv@dividend,w
  4652  0F23                     u2815:	
  4653  0F23  1C03               	skipc
  4654  0F24  2F26               	goto	u2811
  4655  0F25  2F27               	goto	u2810
  4656  0F26                     u2811:	
  4657  0F26  2F30               	goto	l3587
  4658  0F27                     u2810:	
  4659  0F27                     l3583:	
  4660  0F27  083D               	movf	___lwdiv@divisor,w
  4661  0F28  02BF               	subwf	___lwdiv@dividend,f
  4662  0F29  083E               	movf	___lwdiv@divisor+1,w
  4663  0F2A  1C03               	skipc
  4664  0F2B  03C0               	decf	___lwdiv@dividend+1,f
  4665  0F2C  02C0               	subwf	___lwdiv@dividend+1,f
  4666  0F2D                     l3585:	
  4667  0F2D  1683               	bsf	3,5	;RP0=1, select bank1
  4668  0F2E  1303               	bcf	3,6	;RP1=0, select bank1
  4669  0F2F  1444               	bsf	___lwdiv@quotient^(0+128),0
  4670  0F30                     l3587:	
  4671  0F30  3001               	movlw	1
  4672  0F31  1283               	bcf	3,5	;RP0=0, select bank0
  4673  0F32                     u2825:	
  4674  0F32  1003               	clrc
  4675  0F33  0CBE               	rrf	___lwdiv@divisor+1,f
  4676  0F34  0CBD               	rrf	___lwdiv@divisor,f
  4677  0F35  3EFF               	addlw	-1
  4678  0F36  1D03               	skipz
  4679  0F37  2F32               	goto	u2825
  4680  0F38                     l3589:	
  4681  0F38  3001               	movlw	1
  4682  0F39  1683               	bsf	3,5	;RP0=1, select bank1
  4683  0F3A  1303               	bcf	3,6	;RP1=0, select bank1
  4684  0F3B  02C3               	subwf	___lwdiv@counter^(0+128),f
  4685  0F3C  1D03               	btfss	3,2
  4686  0F3D  2F3F               	goto	u2831
  4687  0F3E  2F40               	goto	u2830
  4688  0F3F                     u2831:	
  4689  0F3F  2F12               	goto	l3581
  4690  0F40                     u2830:	
  4691  0F40                     l3591:	
  4692  0F40  1683               	bsf	3,5	;RP0=1, select bank1
  4693  0F41  1303               	bcf	3,6	;RP1=0, select bank1
  4694  0F42  0845               	movf	(___lwdiv@quotient+1)^(0+128),w
  4695  0F43  1283               	bcf	3,5	;RP0=0, select bank0
  4696  0F44  1303               	bcf	3,6	;RP1=0, select bank0
  4697  0F45  00BE               	movwf	?___lwdiv+1
  4698  0F46  1683               	bsf	3,5	;RP0=1, select bank1
  4699  0F47  1303               	bcf	3,6	;RP1=0, select bank1
  4700  0F48  0844               	movf	___lwdiv@quotient^(0+128),w
  4701  0F49  1283               	bcf	3,5	;RP0=0, select bank0
  4702  0F4A  1303               	bcf	3,6	;RP1=0, select bank0
  4703  0F4B  00BD               	movwf	?___lwdiv
  4704  0F4C                     l938:	
  4705  0F4C  0008               	return
  4706  0F4D                     __end_of___lwdiv:	
  4707                           
  4708                           	psect	text15
  4709  0A08                     __ptext15:	
  4710 ;; *************** function _putsXLCD *****************
  4711 ;; Defined at:
  4712 ;;		line 419 in file "lcd_pic16.c"
  4713 ;; Parameters:    Size  Location     Type
  4714 ;;  buffer          1    wreg     PTR unsigned char 
  4715 ;;		 -> lineTwo(17), lineOne(17), 
  4716 ;; Auto vars:     Size  Location     Type
  4717 ;;  buffer          1   34[BANK0 ] PTR unsigned char 
  4718 ;;		 -> lineTwo(17), lineOne(17), 
  4719 ;; Return value:  Size  Location     Type
  4720 ;;                  1    wreg      void 
  4721 ;; Registers used:
  4722 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4723 ;; Tracked objects:
  4724 ;;		On entry : 0/0
  4725 ;;		On exit  : 0/0
  4726 ;;		Unchanged: 0/0
  4727 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4728 ;;      Params:         0       0       0       0       0
  4729 ;;      Locals:         0       1       0       0       0
  4730 ;;      Temps:          0       1       0       0       0
  4731 ;;      Totals:         0       2       0       0       0
  4732 ;;Total ram usage:        2 bytes
  4733 ;; Hardware stack levels used:    1
  4734 ;; Hardware stack levels required when called:    7
  4735 ;; This function calls:
  4736 ;;		_BusyXLCD
  4737 ;;		_WriteDataXLCD
  4738 ;; This function is called by:
  4739 ;;		_start
  4740 ;;		_setFrequency
  4741 ;;		_principalScreen
  4742 ;;		_lockingScreen
  4743 ;; This function uses a non-reentrant model
  4744 ;;
  4745                           
  4746                           
  4747                           ;psect for function _putsXLCD
  4748  0A08                     _putsXLCD:	
  4749                           
  4750                           ;incstack = 0
  4751 ;; hardware stack exceeded
  4752                           ; Regs used in _putsXLCD: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4753                           ;putsXLCD@buffer stored from wreg
  4754  0A08  1283               	bcf	3,5	;RP0=0, select bank0
  4755  0A09  1303               	bcf	3,6	;RP1=0, select bank0
  4756  0A0A  00C2               	movwf	putsXLCD@buffer
  4757  0A0B                     l2639:	
  4758                           
  4759                           ;lcd_pic16.c: 419: void putsXLCD(char *buffer);lcd_pic16.c: 420: {;lcd_pic16.c: 421:    
      +                               while(*buffer)
  4760  0A0B  2A27               	goto	l2647
  4761  0A0C                     l2641:	
  4762  0A0C  160A  118A  27D4  120A  158A  	fcall	_BusyXLCD
  4763  0A11  3A00               	xorlw	0
  4764  0A12  1D03               	skipz
  4765  0A13  2A15               	goto	u1751
  4766  0A14  2A16               	goto	u1750
  4767  0A15                     u1751:	
  4768  0A15  2A0C               	goto	l2641
  4769  0A16                     u1750:	
  4770  0A16                     l2643:	
  4771                           
  4772                           ;lcd_pic16.c: 424:                 WriteDataXLCD(*buffer);
  4773  0A16  1283               	bcf	3,5	;RP0=0, select bank0
  4774  0A17  1303               	bcf	3,6	;RP1=0, select bank0
  4775  0A18  0842               	movf	putsXLCD@buffer,w
  4776  0A19  0084               	movwf	4
  4777  0A1A  1383               	bcf	3,7	;select IRP bank0
  4778  0A1B  0800               	movf	0,w
  4779  0A1C  120A  158A  243F  120A  158A  	fcall	_WriteDataXLCD
  4780  0A21                     l2645:	
  4781                           
  4782                           ;lcd_pic16.c: 425:                 buffer++;
  4783  0A21  3001               	movlw	1
  4784  0A22  1283               	bcf	3,5	;RP0=0, select bank0
  4785  0A23  1303               	bcf	3,6	;RP1=0, select bank0
  4786  0A24  00C1               	movwf	??_putsXLCD
  4787  0A25  0841               	movf	??_putsXLCD,w
  4788  0A26  07C2               	addwf	putsXLCD@buffer,f
  4789  0A27                     l2647:	
  4790                           
  4791                           ;lcd_pic16.c: 421:         while(*buffer)
  4792  0A27  0842               	movf	putsXLCD@buffer,w
  4793  0A28  0084               	movwf	4
  4794  0A29  1383               	bcf	3,7	;select IRP bank0
  4795  0A2A  0800               	movf	0,w
  4796  0A2B  1D03               	btfss	3,2
  4797  0A2C  2A2E               	goto	u1761
  4798  0A2D  2A2F               	goto	u1760
  4799  0A2E                     u1761:	
  4800  0A2E  2A0C               	goto	l2641
  4801  0A2F                     u1760:	
  4802  0A2F                     l398:	
  4803  0A2F  0008               	return
  4804  0A30                     __end_of_putsXLCD:	
  4805                           
  4806                           	psect	text16
  4807  0A30                     __ptext16:	
  4808 ;; *************** function _putrsXLCD *****************
  4809 ;; Defined at:
  4810 ;;		line 435 in file "lcd_pic16.c"
  4811 ;; Parameters:    Size  Location     Type
  4812 ;;  buffer          1    wreg     PTR const unsigned char 
  4813 ;;		 -> STR_8(17), 
  4814 ;; Auto vars:     Size  Location     Type
  4815 ;;  buffer          1   34[BANK0 ] PTR const unsigned char 
  4816 ;;		 -> STR_8(17), 
  4817 ;; Return value:  Size  Location     Type
  4818 ;;                  1    wreg      void 
  4819 ;; Registers used:
  4820 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4821 ;; Tracked objects:
  4822 ;;		On entry : 0/0
  4823 ;;		On exit  : 0/0
  4824 ;;		Unchanged: 0/0
  4825 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4826 ;;      Params:         0       0       0       0       0
  4827 ;;      Locals:         0       1       0       0       0
  4828 ;;      Temps:          0       1       0       0       0
  4829 ;;      Totals:         0       2       0       0       0
  4830 ;;Total ram usage:        2 bytes
  4831 ;; Hardware stack levels used:    1
  4832 ;; Hardware stack levels required when called:    7
  4833 ;; This function calls:
  4834 ;;		_BusyXLCD
  4835 ;;		_WriteDataXLCD
  4836 ;; This function is called by:
  4837 ;;		_principalScreen
  4838 ;; This function uses a non-reentrant model
  4839 ;;
  4840                           
  4841                           
  4842                           ;psect for function _putrsXLCD
  4843  0A30                     _putrsXLCD:	
  4844                           
  4845                           ;incstack = 0
  4846 ;; hardware stack exceeded
  4847                           ; Regs used in _putrsXLCD: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4848                           ;putrsXLCD@buffer stored from wreg
  4849  0A30  1283               	bcf	3,5	;RP0=0, select bank0
  4850  0A31  1303               	bcf	3,6	;RP1=0, select bank0
  4851  0A32  00C2               	movwf	putrsXLCD@buffer
  4852  0A33                     l2953:	
  4853                           
  4854                           ;lcd_pic16.c: 435: void putrsXLCD(const char *buffer);lcd_pic16.c: 436: {;lcd_pic16.c: 4
      +                          37:         while(*buffer)
  4855  0A33  2A52               	goto	l2961
  4856  0A34                     l2955:	
  4857  0A34  160A  118A  27D4  120A  158A  	fcall	_BusyXLCD
  4858  0A39  3A00               	xorlw	0
  4859  0A3A  1D03               	skipz
  4860  0A3B  2A3D               	goto	u2131
  4861  0A3C  2A3E               	goto	u2130
  4862  0A3D                     u2131:	
  4863  0A3D  2A34               	goto	l2955
  4864  0A3E                     u2130:	
  4865  0A3E                     l2957:	
  4866                           
  4867                           ;lcd_pic16.c: 440:                 WriteDataXLCD(*buffer);
  4868  0A3E  1283               	bcf	3,5	;RP0=0, select bank0
  4869  0A3F  1303               	bcf	3,6	;RP1=0, select bank0
  4870  0A40  0842               	movf	putrsXLCD@buffer,w
  4871  0A41  0084               	movwf	4
  4872  0A42  120A  158A  2000  120A  158A  	fcall	stringdir
  4873  0A47  120A  158A  243F  120A  158A  	fcall	_WriteDataXLCD
  4874  0A4C                     l2959:	
  4875                           
  4876                           ;lcd_pic16.c: 441:                 buffer++;
  4877  0A4C  3001               	movlw	1
  4878  0A4D  1283               	bcf	3,5	;RP0=0, select bank0
  4879  0A4E  1303               	bcf	3,6	;RP1=0, select bank0
  4880  0A4F  00C1               	movwf	??_putrsXLCD
  4881  0A50  0841               	movf	??_putrsXLCD,w
  4882  0A51  07C2               	addwf	putrsXLCD@buffer,f
  4883  0A52                     l2961:	
  4884                           
  4885                           ;lcd_pic16.c: 437:         while(*buffer)
  4886  0A52  0842               	movf	putrsXLCD@buffer,w
  4887  0A53  0084               	movwf	4
  4888  0A54  120A  158A  2000  120A  158A  	fcall	stringdir
  4889  0A59  3A00               	xorlw	0
  4890  0A5A  1D03               	skipz
  4891  0A5B  2A5D               	goto	u2141
  4892  0A5C  2A5E               	goto	u2140
  4893  0A5D                     u2141:	
  4894  0A5D  2A34               	goto	l2955
  4895  0A5E                     u2140:	
  4896  0A5E                     l407:	
  4897  0A5E  0008               	return
  4898  0A5F                     __end_of_putrsXLCD:	
  4899                           
  4900                           	psect	text17
  4901  0C3F                     __ptext17:	
  4902 ;; *************** function _WriteDataXLCD *****************
  4903 ;; Defined at:
  4904 ;;		line 110 in file "lcd_pic16.c"
  4905 ;; Parameters:    Size  Location     Type
  4906 ;;  data            1    wreg     unsigned char 
  4907 ;; Auto vars:     Size  Location     Type
  4908 ;;  data            1   32[BANK0 ] unsigned char 
  4909 ;; Return value:  Size  Location     Type
  4910 ;;                  1    wreg      void 
  4911 ;; Registers used:
  4912 ;;		wreg, status,2, status,0, pclath, cstack
  4913 ;; Tracked objects:
  4914 ;;		On entry : 0/0
  4915 ;;		On exit  : 0/0
  4916 ;;		Unchanged: 0/0
  4917 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4918 ;;      Params:         0       0       0       0       0
  4919 ;;      Locals:         0       1       0       0       0
  4920 ;;      Temps:          0       2       0       0       0
  4921 ;;      Totals:         0       3       0       0       0
  4922 ;;Total ram usage:        3 bytes
  4923 ;; Hardware stack levels used:    1
  4924 ;; Hardware stack levels required when called:    6
  4925 ;; This function calls:
  4926 ;;		_DelayFor18TCY
  4927 ;; This function is called by:
  4928 ;;		_putsXLCD
  4929 ;;		_putrsXLCD
  4930 ;; This function uses a non-reentrant model
  4931 ;;
  4932                           
  4933                           
  4934                           ;psect for function _WriteDataXLCD
  4935  0C3F                     _WriteDataXLCD:	
  4936                           
  4937                           ;incstack = 0
  4938 ;; hardware stack exceeded
  4939                           ; Regs used in _WriteDataXLCD: [wreg+status,2+status,0+pclath+cstack]
  4940                           ;WriteDataXLCD@data stored from wreg
  4941  0C3F  1283               	bcf	3,5	;RP0=0, select bank0
  4942  0C40  1303               	bcf	3,6	;RP1=0, select bank0
  4943  0C41  00C0               	movwf	WriteDataXLCD@data
  4944  0C42                     l2423:	
  4945                           
  4946                           ;lcd_pic16.c: 110: void WriteDataXLCD(char data);lcd_pic16.c: 111: {;lcd_pic16.c: 125:  
      +                                 TRISB &= 0x0f;
  4947  0C42  300F               	movlw	15
  4948  0C43  00BE               	movwf	??_WriteDataXLCD
  4949  0C44  083E               	movf	??_WriteDataXLCD,w
  4950  0C45  1683               	bsf	3,5	;RP0=1, select bank1
  4951  0C46  1303               	bcf	3,6	;RP1=0, select bank1
  4952  0C47  0586               	andwf	6,f	;volatile
  4953                           
  4954                           ;lcd_pic16.c: 126:         PORTB &= 0x0f;
  4955  0C48  300F               	movlw	15
  4956  0C49  1283               	bcf	3,5	;RP0=0, select bank0
  4957  0C4A  1303               	bcf	3,6	;RP1=0, select bank0
  4958  0C4B  00BE               	movwf	??_WriteDataXLCD
  4959  0C4C  083E               	movf	??_WriteDataXLCD,w
  4960  0C4D  0586               	andwf	6,f	;volatile
  4961                           
  4962                           ;lcd_pic16.c: 127:         PORTB |= data&0xf0;
  4963  0C4E  0840               	movf	WriteDataXLCD@data,w
  4964  0C4F  39F0               	andlw	240
  4965  0C50  00BE               	movwf	??_WriteDataXLCD
  4966  0C51  083E               	movf	??_WriteDataXLCD,w
  4967  0C52  0486               	iorwf	6,f	;volatile
  4968  0C53                     l2425:	
  4969                           
  4970                           ;lcd_pic16.c: 133:         PORTBbits.RB1 = 1;
  4971  0C53  1486               	bsf	6,1	;volatile
  4972  0C54                     l2427:	
  4973                           
  4974                           ;lcd_pic16.c: 134:         PORTBbits.RB2 = 0;
  4975  0C54  1106               	bcf	6,2	;volatile
  4976  0C55                     l2429:	
  4977                           
  4978                           ;lcd_pic16.c: 135:         DelayFor18TCY();
  4979  0C55  160A  118A  27A6  120A  158A  	fcall	_DelayFor18TCY
  4980  0C5A                     l2431:	
  4981                           
  4982                           ;lcd_pic16.c: 136:         PORTBbits.RB3 = 1;
  4983  0C5A  1283               	bcf	3,5	;RP0=0, select bank0
  4984  0C5B  1303               	bcf	3,6	;RP1=0, select bank0
  4985  0C5C  1586               	bsf	6,3	;volatile
  4986  0C5D                     l2433:	
  4987                           
  4988                           ;lcd_pic16.c: 137:         DelayFor18TCY();
  4989  0C5D  160A  118A  27A6  120A  158A  	fcall	_DelayFor18TCY
  4990  0C62                     l2435:	
  4991                           
  4992                           ;lcd_pic16.c: 138:         PORTBbits.RB3 = 0;
  4993  0C62  1283               	bcf	3,5	;RP0=0, select bank0
  4994  0C63  1303               	bcf	3,6	;RP1=0, select bank0
  4995  0C64  1186               	bcf	6,3	;volatile
  4996                           
  4997                           ;lcd_pic16.c: 140:         PORTB &= 0x0f;
  4998  0C65  300F               	movlw	15
  4999  0C66  00BE               	movwf	??_WriteDataXLCD
  5000  0C67  083E               	movf	??_WriteDataXLCD,w
  5001  0C68  0586               	andwf	6,f	;volatile
  5002                           
  5003                           ;lcd_pic16.c: 141:         PORTB |= ((data<<4)&0xf0);
  5004  0C69  0840               	movf	WriteDataXLCD@data,w
  5005  0C6A  00BE               	movwf	??_WriteDataXLCD
  5006  0C6B  3003               	movlw	3
  5007  0C6C                     u1395:	
  5008  0C6C  1003               	clrc
  5009  0C6D  0DBE               	rlf	??_WriteDataXLCD,f
  5010  0C6E  3EFF               	addlw	-1
  5011  0C6F  1D03               	skipz
  5012  0C70  2C6C               	goto	u1395
  5013  0C71  1003               	clrc
  5014  0C72  0D3E               	rlf	??_WriteDataXLCD,w
  5015  0C73  39F0               	andlw	240
  5016  0C74  00BF               	movwf	??_WriteDataXLCD+1
  5017  0C75  083F               	movf	??_WriteDataXLCD+1,w
  5018  0C76  0486               	iorwf	6,f	;volatile
  5019  0C77                     l2437:	
  5020                           
  5021                           ;lcd_pic16.c: 146:         DelayFor18TCY();
  5022  0C77  160A  118A  27A6  120A  158A  	fcall	_DelayFor18TCY
  5023  0C7C                     l2439:	
  5024                           
  5025                           ;lcd_pic16.c: 147:         PORTBbits.RB3 = 1;
  5026  0C7C  1283               	bcf	3,5	;RP0=0, select bank0
  5027  0C7D  1303               	bcf	3,6	;RP1=0, select bank0
  5028  0C7E  1586               	bsf	6,3	;volatile
  5029  0C7F                     l2441:	
  5030                           
  5031                           ;lcd_pic16.c: 148:         DelayFor18TCY();
  5032  0C7F  160A  118A  27A6  120A  158A  	fcall	_DelayFor18TCY
  5033  0C84                     l2443:	
  5034                           
  5035                           ;lcd_pic16.c: 149:         PORTBbits.RB3 = 0;
  5036  0C84  1283               	bcf	3,5	;RP0=0, select bank0
  5037  0C85  1303               	bcf	3,6	;RP1=0, select bank0
  5038  0C86  1186               	bcf	6,3	;volatile
  5039                           
  5040                           ;lcd_pic16.c: 151:         TRISB |= 0xf0;
  5041  0C87  30F0               	movlw	240
  5042  0C88  00BE               	movwf	??_WriteDataXLCD
  5043  0C89  083E               	movf	??_WriteDataXLCD,w
  5044  0C8A  1683               	bsf	3,5	;RP0=1, select bank1
  5045  0C8B  1303               	bcf	3,6	;RP1=0, select bank1
  5046  0C8C  0486               	iorwf	6,f	;volatile
  5047  0C8D                     l374:	
  5048  0C8D  0008               	return
  5049  0C8E                     __end_of_WriteDataXLCD:	
  5050                           
  5051                           	psect	text18
  5052  0E8F                     __ptext18:	
  5053 ;; *************** function _getData *****************
  5054 ;; Defined at:
  5055 ;;		line 31 in file "eeprom.c"
  5056 ;; Parameters:    Size  Location     Type
  5057 ;;		None
  5058 ;; Auto vars:     Size  Location     Type
  5059 ;;  aux1            1   35[BANK0 ] unsigned char 
  5060 ;;  aux0            1   34[BANK0 ] unsigned char 
  5061 ;; Return value:  Size  Location     Type
  5062 ;;                  1    wreg      void 
  5063 ;; Registers used:
  5064 ;;		wreg, status,2, btemp+1, pclath, cstack
  5065 ;; Tracked objects:
  5066 ;;		On entry : 0/0
  5067 ;;		On exit  : 0/0
  5068 ;;		Unchanged: 0/0
  5069 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5070 ;;      Params:         0       0       0       0       0
  5071 ;;      Locals:         0       2       0       0       0
  5072 ;;      Temps:          0       4       0       0       0
  5073 ;;      Totals:         0       6       0       0       0
  5074 ;;Total ram usage:        6 bytes
  5075 ;; Hardware stack levels used:    1
  5076 ;; Hardware stack levels required when called:    6
  5077 ;; This function calls:
  5078 ;;		_readEEPROM
  5079 ;; This function is called by:
  5080 ;;		_main
  5081 ;; This function uses a non-reentrant model
  5082 ;;
  5083                           
  5084                           
  5085                           ;psect for function _getData
  5086  0E8F                     _getData:	
  5087  0E8F                     l3109:	
  5088                           ;incstack = 0
  5089                           ; Regs used in _getData: [wreg+status,2+btemp+1+pclath+cstack]
  5090                           
  5091                           
  5092                           ;eeprom.c: 32:     unsigned char aux0 = readEEPROM(0);
  5093  0E8F  3000               	movlw	0
  5094  0E90  120A  158A  20AF  120A  158A  	fcall	_readEEPROM
  5095  0E95  1283               	bcf	3,5	;RP0=0, select bank0
  5096  0E96  1303               	bcf	3,6	;RP1=0, select bank0
  5097  0E97  00BE               	movwf	??_getData
  5098  0E98  083E               	movf	??_getData,w
  5099  0E99  00C2               	movwf	getData@aux0
  5100                           
  5101                           ;eeprom.c: 33:     unsigned char aux1 = readEEPROM(1);
  5102  0E9A  3001               	movlw	1
  5103  0E9B  120A  158A  20AF  120A  158A  	fcall	_readEEPROM
  5104  0EA0  1283               	bcf	3,5	;RP0=0, select bank0
  5105  0EA1  1303               	bcf	3,6	;RP1=0, select bank0
  5106  0EA2  00BE               	movwf	??_getData
  5107  0EA3  083E               	movf	??_getData,w
  5108  0EA4  00C3               	movwf	getData@aux1
  5109  0EA5                     l3111:	
  5110                           
  5111                           ;eeprom.c: 34:     frequency = 0;
  5112  0EA5  01C4               	clrf	_frequency
  5113  0EA6  01C5               	clrf	_frequency+1
  5114  0EA7                     l3113:	
  5115                           
  5116                           ;eeprom.c: 35:     frequency = (aux1 << 8) | aux0;
  5117  0EA7  0842               	movf	getData@aux0,w
  5118  0EA8  00BE               	movwf	??_getData
  5119  0EA9  01BF               	clrf	??_getData+1
  5120  0EAA  0843               	movf	getData@aux1,w
  5121  0EAB  00C0               	movwf	??_getData+2
  5122  0EAC  01C1               	clrf	??_getData+3
  5123  0EAD  0840               	movf	??_getData+2,w
  5124  0EAE  00C1               	movwf	??_getData+3
  5125  0EAF  01C0               	clrf	??_getData+2
  5126  0EB0  083E               	movf	??_getData,w
  5127  0EB1  0440               	iorwf	??_getData+2,w
  5128  0EB2  00C4               	movwf	_frequency
  5129  0EB3  083F               	movf	??_getData+1,w
  5130  0EB4  0441               	iorwf	??_getData+3,w
  5131  0EB5  00C5               	movwf	_frequency+1
  5132  0EB6                     l3115:	
  5133                           
  5134                           ;eeprom.c: 36:     months = readEEPROM(2);
  5135  0EB6  3002               	movlw	2
  5136  0EB7  120A  158A  20AF  120A  158A  	fcall	_readEEPROM
  5137  0EBC  1283               	bcf	3,5	;RP0=0, select bank0
  5138  0EBD  1303               	bcf	3,6	;RP1=0, select bank0
  5139  0EBE  00BE               	movwf	??_getData
  5140  0EBF  083E               	movf	??_getData,w
  5141  0EC0  00CA               	movwf	_months
  5142  0EC1                     l3117:	
  5143                           
  5144                           ;eeprom.c: 37:     days = readEEPROM(3);
  5145  0EC1  3003               	movlw	3
  5146  0EC2  120A  158A  20AF  120A  158A  	fcall	_readEEPROM
  5147  0EC7  1283               	bcf	3,5	;RP0=0, select bank0
  5148  0EC8  1303               	bcf	3,6	;RP1=0, select bank0
  5149  0EC9  00BE               	movwf	??_getData
  5150  0ECA  083E               	movf	??_getData,w
  5151  0ECB  00C9               	movwf	_days
  5152  0ECC                     l3119:	
  5153                           
  5154                           ;eeprom.c: 38:     hours = readEEPROM(4);
  5155  0ECC  3004               	movlw	4
  5156  0ECD  120A  158A  20AF  120A  158A  	fcall	_readEEPROM
  5157  0ED2  1283               	bcf	3,5	;RP0=0, select bank0
  5158  0ED3  1303               	bcf	3,6	;RP1=0, select bank0
  5159  0ED4  00BE               	movwf	??_getData
  5160  0ED5  083E               	movf	??_getData,w
  5161  0ED6  00C8               	movwf	_hours
  5162  0ED7                     l3121:	
  5163                           
  5164                           ;eeprom.c: 39:     minutes = readEEPROM(5);
  5165  0ED7  3005               	movlw	5
  5166  0ED8  120A  158A  20AF  120A  158A  	fcall	_readEEPROM
  5167  0EDD  1283               	bcf	3,5	;RP0=0, select bank0
  5168  0EDE  1303               	bcf	3,6	;RP1=0, select bank0
  5169  0EDF  00BE               	movwf	??_getData
  5170  0EE0  083E               	movf	??_getData,w
  5171  0EE1  00C7               	movwf	_minutes
  5172  0EE2                     l3123:	
  5173                           
  5174                           ;eeprom.c: 40:     functionalStat = readEEPROM(6);
  5175  0EE2  3006               	movlw	6
  5176  0EE3  120A  158A  20AF  120A  158A  	fcall	_readEEPROM
  5177  0EE8  1283               	bcf	3,5	;RP0=0, select bank0
  5178  0EE9  1303               	bcf	3,6	;RP1=0, select bank0
  5179  0EEA  00BE               	movwf	??_getData
  5180  0EEB  083E               	movf	??_getData,w
  5181  0EEC  00CF               	movwf	_functionalStat
  5182  0EED                     l66:	
  5183  0EED  0008               	return
  5184  0EEE                     __end_of_getData:	
  5185                           
  5186                           	psect	text19
  5187  08AF                     __ptext19:	
  5188 ;; *************** function _readEEPROM *****************
  5189 ;; Defined at:
  5190 ;;		line 7 in file "eeprom.c"
  5191 ;; Parameters:    Size  Location     Type
  5192 ;;  address         1    wreg     unsigned char 
  5193 ;; Auto vars:     Size  Location     Type
  5194 ;;  address         1   29[BANK0 ] unsigned char 
  5195 ;; Return value:  Size  Location     Type
  5196 ;;                  1    wreg      unsigned char 
  5197 ;; Registers used:
  5198 ;;		wreg
  5199 ;; Tracked objects:
  5200 ;;		On entry : 0/0
  5201 ;;		On exit  : 0/0
  5202 ;;		Unchanged: 0/0
  5203 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5204 ;;      Params:         0       0       0       0       0
  5205 ;;      Locals:         0       1       0       0       0
  5206 ;;      Temps:          0       0       0       0       0
  5207 ;;      Totals:         0       1       0       0       0
  5208 ;;Total ram usage:        1 bytes
  5209 ;; Hardware stack levels used:    1
  5210 ;; Hardware stack levels required when called:    5
  5211 ;; This function calls:
  5212 ;;		Nothing
  5213 ;; This function is called by:
  5214 ;;		_getData
  5215 ;; This function uses a non-reentrant model
  5216 ;;
  5217                           
  5218                           
  5219                           ;psect for function _readEEPROM
  5220  08AF                     _readEEPROM:	
  5221                           
  5222                           ;incstack = 0
  5223                           ; Regs used in _readEEPROM: [wreg]
  5224                           ;readEEPROM@address stored from wreg
  5225  08AF  1283               	bcf	3,5	;RP0=0, select bank0
  5226  08B0  1303               	bcf	3,6	;RP1=0, select bank0
  5227  08B1  00BD               	movwf	readEEPROM@address
  5228  08B2                     l2835:	
  5229                           
  5230                           ;eeprom.c: 8:     EEADR = address;
  5231  08B2  083D               	movf	readEEPROM@address,w
  5232  08B3  1283               	bcf	3,5	;RP0=0, select bank2
  5233  08B4  1703               	bsf	3,6	;RP1=1, select bank2
  5234  08B5  008D               	movwf	13	;volatile
  5235  08B6                     l2837:	
  5236                           
  5237                           ;eeprom.c: 9:     EECON1bits.EEPGD = 0;
  5238  08B6  1683               	bsf	3,5	;RP0=1, select bank3
  5239  08B7  1703               	bsf	3,6	;RP1=1, select bank3
  5240  08B8  138C               	bcf	12,7	;volsfr
  5241  08B9                     l2839:	
  5242                           
  5243                           ;eeprom.c: 10:     EECON1bits.RD = 1;
  5244  08B9  140C               	bsf	12,0	;volsfr
  5245                           
  5246                           ;eeprom.c: 11:     return EEDATA;
  5247  08BA  1283               	bcf	3,5	;RP0=0, select bank2
  5248  08BB  1703               	bsf	3,6	;RP1=1, select bank2
  5249  08BC  080C               	movf	12,w	;volatile
  5250  08BD                     l57:	
  5251  08BD  0008               	return
  5252  08BE                     __end_of_readEEPROM:	
  5253                           
  5254                           	psect	text20
  5255  0A5F                     __ptext20:	
  5256 ;; *************** function _config *****************
  5257 ;; Defined at:
  5258 ;;		line 42 in file "main.c"
  5259 ;; Parameters:    Size  Location     Type
  5260 ;;		None
  5261 ;; Auto vars:     Size  Location     Type
  5262 ;;		None
  5263 ;; Return value:  Size  Location     Type
  5264 ;;                  1    wreg      void 
  5265 ;; Registers used:
  5266 ;;		wreg, status,2, status,0, pclath, cstack
  5267 ;; Tracked objects:
  5268 ;;		On entry : 0/0
  5269 ;;		On exit  : 0/0
  5270 ;;		Unchanged: 0/0
  5271 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5272 ;;      Params:         0       0       0       0       0
  5273 ;;      Locals:         0       0       0       0       0
  5274 ;;      Temps:          0       0       0       0       0
  5275 ;;      Totals:         0       0       0       0       0
  5276 ;;Total ram usage:        0 bytes
  5277 ;; Hardware stack levels used:    1
  5278 ;; Hardware stack levels required when called:    9
  5279 ;; This function calls:
  5280 ;;		_initLCD
  5281 ;;		_setTransStat
  5282 ;; This function is called by:
  5283 ;;		_main
  5284 ;; This function uses a non-reentrant model
  5285 ;;
  5286                           
  5287                           
  5288                           ;psect for function _config
  5289  0A5F                     _config:	
  5290  0A5F                     l3807:	
  5291                           ;incstack = 0
  5292 ;; hardware stack exceeded
  5293                           ; Regs used in _config: [wreg+status,2+status,0+pclath+cstack]
  5294                           
  5295                           
  5296                           ;main.c: 44:     INTCON = 0b01000000;
  5297  0A5F  3040               	movlw	64
  5298  0A60  008B               	movwf	11	;volatile
  5299                           
  5300                           ;main.c: 45:     PIE1 = 0b00000001;
  5301  0A61  3001               	movlw	1
  5302  0A62  1683               	bsf	3,5	;RP0=1, select bank1
  5303  0A63  1303               	bcf	3,6	;RP1=0, select bank1
  5304  0A64  008C               	movwf	12	;volatile
  5305                           
  5306                           ;main.c: 47:     TRISA = 0b00111000;
  5307  0A65  3038               	movlw	56
  5308  0A66  0085               	movwf	5	;volatile
  5309  0A67                     l3809:	
  5310                           
  5311                           ;main.c: 48:     TRISB = 0b00000000;
  5312  0A67  0186               	clrf	6	;volatile
  5313  0A68                     l3811:	
  5314                           
  5315                           ;main.c: 49:     TRISC = 0b00000000;
  5316  0A68  0187               	clrf	7	;volatile
  5317  0A69                     l3813:	
  5318                           
  5319                           ;main.c: 50:     PORTA = 0x00;
  5320  0A69  1283               	bcf	3,5	;RP0=0, select bank0
  5321  0A6A  1303               	bcf	3,6	;RP1=0, select bank0
  5322  0A6B  0185               	clrf	5	;volatile
  5323  0A6C                     l3815:	
  5324                           
  5325                           ;main.c: 51:     PORTB = 0x00;
  5326  0A6C  0186               	clrf	6	;volatile
  5327                           
  5328                           ;main.c: 52:     PORTC = 0x0E;
  5329  0A6D  300E               	movlw	14
  5330  0A6E  0087               	movwf	7	;volatile
  5331                           
  5332                           ;main.c: 54:     T1CON = 0b00010001;
  5333  0A6F  3011               	movlw	17
  5334  0A70  0090               	movwf	16	;volatile
  5335  0A71                     l3817:	
  5336                           
  5337                           ;main.c: 56:     ADCON0 = 0b00000000;
  5338  0A71  019F               	clrf	31	;volatile
  5339  0A72                     l3819:	
  5340                           
  5341                           ;main.c: 57:     ADCON1 = 0b00000000;
  5342  0A72  1683               	bsf	3,5	;RP0=1, select bank1
  5343  0A73  1303               	bcf	3,6	;RP1=0, select bank1
  5344  0A74  019F               	clrf	31	;volatile
  5345  0A75                     l3821:	
  5346                           
  5347                           ;main.c: 58:     ANSEL = 0b00000000;
  5348  0A75  1683               	bsf	3,5	;RP0=1, select bank3
  5349  0A76  1703               	bsf	3,6	;RP1=1, select bank3
  5350  0A77  0188               	clrf	8	;volatile
  5351  0A78                     l3823:	
  5352                           
  5353                           ;main.c: 59:     ANSELH = 0b00000000;
  5354  0A78  0189               	clrf	9	;volatile
  5355  0A79                     l3825:	
  5356                           
  5357                           ;main.c: 61:     PORTCbits.RC0 = 0;
  5358  0A79  1283               	bcf	3,5	;RP0=0, select bank0
  5359  0A7A  1303               	bcf	3,6	;RP1=0, select bank0
  5360  0A7B  1007               	bcf	7,0	;volatile
  5361  0A7C                     l3827:	
  5362                           
  5363                           ;main.c: 62:     PORTCbits.RC4 = 1;
  5364  0A7C  1607               	bsf	7,4	;volatile
  5365  0A7D                     l3829:	
  5366                           
  5367                           ;main.c: 64:     initLCD();
  5368  0A7D  120A  158A  21E0  120A  158A  	fcall	_initLCD
  5369  0A82                     l3831:	
  5370                           
  5371                           ;main.c: 66:     T1CONbits.TMR1ON = 1;
  5372  0A82  1283               	bcf	3,5	;RP0=0, select bank0
  5373  0A83  1303               	bcf	3,6	;RP1=0, select bank0
  5374  0A84  1410               	bsf	16,0	;volatile
  5375  0A85                     l3833:	
  5376                           
  5377                           ;main.c: 67:     INTCONbits.GIE = 1;
  5378  0A85  178B               	bsf	11,7	;volatile
  5379  0A86                     l3835:	
  5380                           
  5381                           ;main.c: 69:     setTransStat(0);
  5382  0A86  3000               	movlw	0
  5383  0A87  00BD               	movwf	setTransStat@stat
  5384  0A88  00BE               	movwf	setTransStat@stat+1
  5385  0A89  120A  158A  2114  120A  158A  	fcall	_setTransStat
  5386  0A8E                     l206:	
  5387  0A8E  0008               	return
  5388  0A8F                     __end_of_config:	
  5389                           
  5390                           	psect	text21
  5391  0914                     __ptext21:	
  5392 ;; *************** function _setTransStat *****************
  5393 ;; Defined at:
  5394 ;;		line 228 in file "main.c"
  5395 ;; Parameters:    Size  Location     Type
  5396 ;;  stat            2   29[BANK0 ] int 
  5397 ;; Auto vars:     Size  Location     Type
  5398 ;;		None
  5399 ;; Return value:  Size  Location     Type
  5400 ;;                  1    wreg      void 
  5401 ;; Registers used:
  5402 ;;		wreg, status,2, status,0
  5403 ;; Tracked objects:
  5404 ;;		On entry : 0/0
  5405 ;;		On exit  : 0/0
  5406 ;;		Unchanged: 0/0
  5407 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5408 ;;      Params:         0       2       0       0       0
  5409 ;;      Locals:         0       0       0       0       0
  5410 ;;      Temps:          0       2       0       0       0
  5411 ;;      Totals:         0       4       0       0       0
  5412 ;;Total ram usage:        4 bytes
  5413 ;; Hardware stack levels used:    1
  5414 ;; Hardware stack levels required when called:    5
  5415 ;; This function calls:
  5416 ;;		Nothing
  5417 ;; This function is called by:
  5418 ;;		_config
  5419 ;; This function uses a non-reentrant model
  5420 ;;
  5421                           
  5422                           
  5423                           ;psect for function _setTransStat
  5424  0914                     _setTransStat:	
  5425  0914                     l2945:	
  5426                           ;incstack = 0
  5427                           ; Regs used in _setTransStat: [wreg+status,2+status,0]
  5428                           
  5429                           
  5430                           ;main.c: 229:     if(stat == 1){
  5431  0914  1283               	bcf	3,5	;RP0=0, select bank0
  5432  0915  1303               	bcf	3,6	;RP1=0, select bank0
  5433  0916  033D               	decf	setTransStat@stat,w
  5434  0917  043E               	iorwf	setTransStat@stat+1,w
  5435  0918  1D03               	btfss	3,2
  5436  0919  291B               	goto	u2121
  5437  091A  291C               	goto	u2120
  5438  091B                     u2121:	
  5439  091B  2929               	goto	l266
  5440  091C                     u2120:	
  5441  091C                     l2947:	
  5442                           
  5443                           ;main.c: 230:         PORTCbits.RC0 = 1;
  5444  091C  1407               	bsf	7,0	;volatile
  5445                           
  5446                           ;main.c: 231:         PORTCbits.RC4 = 0;
  5447  091D  1207               	bcf	7,4	;volatile
  5448  091E                     l2949:	
  5449                           
  5450                           ;main.c: 232:         _delay((unsigned long)((2)*(4000000/4000.0)));
  5451  091E  3003               	movlw	3
  5452  091F  1283               	bcf	3,5	;RP0=0, select bank0
  5453  0920  1303               	bcf	3,6	;RP1=0, select bank0
  5454  0921  00C0               	movwf	??_setTransStat+1
  5455  0922  3097               	movlw	151
  5456  0923  00BF               	movwf	??_setTransStat
  5457  0924                     u3617:	
  5458  0924  0BBF               	decfsz	??_setTransStat,f
  5459  0925  2924               	goto	u3617
  5460  0926  0BC0               	decfsz	??_setTransStat+1,f
  5461  0927  2924               	goto	u3617
  5462                           
  5463                           ;main.c: 233:     }else{
  5464  0928  292C               	goto	l268
  5465  0929                     l266:	
  5466                           
  5467                           ;main.c: 234:         PORTCbits.RC0 = 0;
  5468  0929  1007               	bcf	7,0	;volatile
  5469                           
  5470                           ;main.c: 235:         PORTCbits.RC4 = 1;
  5471  092A  1607               	bsf	7,4	;volatile
  5472  092B  291E               	goto	l2949
  5473  092C                     l268:	
  5474  092C  0008               	return
  5475  092D                     __end_of_setTransStat:	
  5476                           
  5477                           	psect	text22
  5478  09E0                     __ptext22:	
  5479 ;; *************** function _initLCD *****************
  5480 ;; Defined at:
  5481 ;;		line 5 in file "lcd.c"
  5482 ;; Parameters:    Size  Location     Type
  5483 ;;		None
  5484 ;; Auto vars:     Size  Location     Type
  5485 ;;		None
  5486 ;; Return value:  Size  Location     Type
  5487 ;;                  1    wreg      void 
  5488 ;; Registers used:
  5489 ;;		wreg, status,2, status,0, pclath, cstack
  5490 ;; Tracked objects:
  5491 ;;		On entry : 0/0
  5492 ;;		On exit  : 0/0
  5493 ;;		Unchanged: 0/0
  5494 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5495 ;;      Params:         0       0       0       0       0
  5496 ;;      Locals:         0       0       0       0       0
  5497 ;;      Temps:          0       0       2       0       0
  5498 ;;      Totals:         0       0       2       0       0
  5499 ;;Total ram usage:        2 bytes
  5500 ;; Hardware stack levels used:    1
  5501 ;; Hardware stack levels required when called:    8
  5502 ;; This function calls:
  5503 ;;		_OpenXLCD
  5504 ;;		_SendCMDLCD
  5505 ;; This function is called by:
  5506 ;;		_config
  5507 ;; This function uses a non-reentrant model
  5508 ;;
  5509                           
  5510                           
  5511                           ;psect for function _initLCD
  5512  09E0                     _initLCD:	
  5513  09E0                     l3795:	
  5514                           ;incstack = 0
  5515 ;; hardware stack exceeded
  5516                           ; Regs used in _initLCD: [wreg+status,2+status,0+pclath+cstack]
  5517                           
  5518                           
  5519                           ;lcd.c: 6:     OpenXLCD(0b00101100 & 0b00111000);
  5520  09E0  3028               	movlw	40
  5521  09E1  120A  118A  269E  120A  158A  	fcall	_OpenXLCD
  5522  09E6                     l3797:	
  5523                           
  5524                           ;lcd.c: 7:     _delay((unsigned long)((100)*(4000000/4000.0)));
  5525  09E6  3082               	movlw	130
  5526  09E7  1683               	bsf	3,5	;RP0=1, select bank1
  5527  09E8  1303               	bcf	3,6	;RP1=0, select bank1
  5528  09E9  00C4               	movwf	(??_initLCD^(0+128)+1)
  5529  09EA  30DD               	movlw	221
  5530  09EB  00C3               	movwf	??_initLCD^(0+128)
  5531  09EC                     u3627:	
  5532  09EC  0BC3               	decfsz	??_initLCD^(0+128),f
  5533  09ED  29EC               	goto	u3627
  5534  09EE  0BC4               	decfsz	(??_initLCD^(0+128)+1),f
  5535  09EF  29EC               	goto	u3627
  5536  09F0                     l3799:	
  5537                           
  5538                           ;lcd.c: 8:     SendCMDLCD(0b00001101);
  5539  09F0  300D               	movlw	13
  5540  09F1  120A  158A  20E5  120A  158A  	fcall	_SendCMDLCD
  5541  09F6                     l3801:	
  5542                           
  5543                           ;lcd.c: 9:     SendCMDLCD(0b00000110);
  5544  09F6  3006               	movlw	6
  5545  09F7  120A  158A  20E5  120A  158A  	fcall	_SendCMDLCD
  5546  09FC                     l3803:	
  5547                           
  5548                           ;lcd.c: 10:     _delay((unsigned long)((50)*(4000000/4000.0)));
  5549  09FC  3041               	movlw	65
  5550  09FD  1683               	bsf	3,5	;RP0=1, select bank1
  5551  09FE  1303               	bcf	3,6	;RP1=0, select bank1
  5552  09FF  00C4               	movwf	(??_initLCD^(0+128)+1)
  5553  0A00  30ED               	movlw	237
  5554  0A01  00C3               	movwf	??_initLCD^(0+128)
  5555  0A02                     u3637:	
  5556  0A02  0BC3               	decfsz	??_initLCD^(0+128),f
  5557  0A03  2A02               	goto	u3637
  5558  0A04  0BC4               	decfsz	(??_initLCD^(0+128)+1),f
  5559  0A05  2A02               	goto	u3637
  5560  0A06  2A07               	nop2
  5561  0A07                     l471:	
  5562  0A07  0008               	return
  5563  0A08                     __end_of_initLCD:	
  5564                           
  5565                           	psect	text23
  5566  08E5                     __ptext23:	
  5567 ;; *************** function _SendCMDLCD *****************
  5568 ;; Defined at:
  5569 ;;		line 27 in file "lcd.c"
  5570 ;; Parameters:    Size  Location     Type
  5571 ;;  CMD             1    wreg     unsigned char 
  5572 ;; Auto vars:     Size  Location     Type
  5573 ;;  CMD             1   33[BANK0 ] unsigned char 
  5574 ;; Return value:  Size  Location     Type
  5575 ;;                  1    wreg      void 
  5576 ;; Registers used:
  5577 ;;		wreg, status,2, status,0, pclath, cstack
  5578 ;; Tracked objects:
  5579 ;;		On entry : 0/0
  5580 ;;		On exit  : 0/0
  5581 ;;		Unchanged: 0/0
  5582 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5583 ;;      Params:         0       0       0       0       0
  5584 ;;      Locals:         0       1       0       0       0
  5585 ;;      Temps:          0       0       0       0       0
  5586 ;;      Totals:         0       1       0       0       0
  5587 ;;Total ram usage:        1 bytes
  5588 ;; Hardware stack levels used:    1
  5589 ;; Hardware stack levels required when called:    7
  5590 ;; This function calls:
  5591 ;;		_BusyXLCD
  5592 ;;		_WriteCmdXLCD
  5593 ;; This function is called by:
  5594 ;;		_initLCD
  5595 ;; This function uses a non-reentrant model
  5596 ;;
  5597                           
  5598                           
  5599                           ;psect for function _SendCMDLCD
  5600  08E5                     _SendCMDLCD:	
  5601                           
  5602                           ;incstack = 0
  5603 ;; hardware stack exceeded
  5604                           ; Regs used in _SendCMDLCD: [wreg+status,2+status,0+pclath+cstack]
  5605                           ;SendCMDLCD@CMD stored from wreg
  5606  08E5  1283               	bcf	3,5	;RP0=0, select bank0
  5607  08E6  1303               	bcf	3,6	;RP1=0, select bank0
  5608  08E7  00C1               	movwf	SendCMDLCD@CMD
  5609  08E8                     l2711:	
  5610  08E8                     l2713:	
  5611                           ;lcd.c: 28:     while(BusyXLCD())continue;
  5612                           
  5613  08E8  160A  118A  27D4  120A  158A  	fcall	_BusyXLCD
  5614  08ED  3A00               	xorlw	0
  5615  08EE  1D03               	skipz
  5616  08EF  28F1               	goto	u1861
  5617  08F0  28F2               	goto	u1860
  5618  08F1                     u1861:	
  5619  08F1  28E8               	goto	l2713
  5620  08F2                     u1860:	
  5621  08F2                     l2715:	
  5622                           
  5623                           ;lcd.c: 29:     WriteCmdXLCD(CMD);
  5624  08F2  1283               	bcf	3,5	;RP0=0, select bank0
  5625  08F3  1303               	bcf	3,6	;RP1=0, select bank0
  5626  08F4  0841               	movf	SendCMDLCD@CMD,w
  5627  08F5  120A  158A  23F0  120A  158A  	fcall	_WriteCmdXLCD
  5628  08FA                     l481:	
  5629  08FA  0008               	return
  5630  08FB                     __end_of_SendCMDLCD:	
  5631                           
  5632                           	psect	text24
  5633  069E                     __ptext24:	
  5634 ;; *************** function _OpenXLCD *****************
  5635 ;; Defined at:
  5636 ;;		line 40 in file "lcd_pic16.c"
  5637 ;; Parameters:    Size  Location     Type
  5638 ;;  lcdtype         1    wreg     unsigned char 
  5639 ;; Auto vars:     Size  Location     Type
  5640 ;;  lcdtype         1   35[BANK0 ] unsigned char 
  5641 ;; Return value:  Size  Location     Type
  5642 ;;                  1    wreg      void 
  5643 ;; Registers used:
  5644 ;;		wreg, status,2, status,0, pclath, cstack
  5645 ;; Tracked objects:
  5646 ;;		On entry : 0/0
  5647 ;;		On exit  : 0/0
  5648 ;;		Unchanged: 0/0
  5649 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5650 ;;      Params:         0       0       0       0       0
  5651 ;;      Locals:         0       1       0       0       0
  5652 ;;      Temps:          0       2       0       0       0
  5653 ;;      Totals:         0       3       0       0       0
  5654 ;;Total ram usage:        3 bytes
  5655 ;; Hardware stack levels used:    1
  5656 ;; Hardware stack levels required when called:    7
  5657 ;; This function calls:
  5658 ;;		_BusyXLCD
  5659 ;;		_DelayPORXLCD
  5660 ;;		_SetDDRamAddr
  5661 ;;		_WriteCmdXLCD
  5662 ;; This function is called by:
  5663 ;;		_initLCD
  5664 ;; This function uses a non-reentrant model
  5665 ;;
  5666                           
  5667                           
  5668                           ;psect for function _OpenXLCD
  5669  069E                     _OpenXLCD:	
  5670                           
  5671                           ;incstack = 0
  5672 ;; hardware stack exceeded
  5673                           ; Regs used in _OpenXLCD: [wreg+status,2+status,0+pclath+cstack]
  5674                           ;OpenXLCD@lcdtype stored from wreg
  5675  069E  1283               	bcf	3,5	;RP0=0, select bank0
  5676  069F  1303               	bcf	3,6	;RP1=0, select bank0
  5677  06A0  00C3               	movwf	OpenXLCD@lcdtype
  5678  06A1                     l2649:	
  5679                           
  5680                           ;lcd_pic16.c: 40: void OpenXLCD(unsigned char lcdtype);lcd_pic16.c: 41: {;lcd_pic16.c: 4
      +                          7:         PORTB &= 0x0f;
  5681  06A1  300F               	movlw	15
  5682  06A2  00C1               	movwf	??_OpenXLCD
  5683  06A3  0841               	movf	??_OpenXLCD,w
  5684  06A4  0586               	andwf	6,f	;volatile
  5685                           
  5686                           ;lcd_pic16.c: 48:         TRISB &= 0x0F;
  5687  06A5  300F               	movlw	15
  5688  06A6  00C1               	movwf	??_OpenXLCD
  5689  06A7  0841               	movf	??_OpenXLCD,w
  5690  06A8  1683               	bsf	3,5	;RP0=1, select bank1
  5691  06A9  1303               	bcf	3,6	;RP1=0, select bank1
  5692  06AA  0586               	andwf	6,f	;volatile
  5693  06AB                     l2651:	
  5694                           
  5695                           ;lcd_pic16.c: 54:         TRISBbits.TRISB2 = 0;
  5696  06AB  1106               	bcf	6,2	;volatile
  5697  06AC                     l2653:	
  5698                           
  5699                           ;lcd_pic16.c: 55:         TRISBbits.TRISB1 = 0;
  5700  06AC  1086               	bcf	6,1	;volatile
  5701  06AD                     l2655:	
  5702                           
  5703                           ;lcd_pic16.c: 56:         TRISBbits.TRISB3 = 0;
  5704  06AD  1186               	bcf	6,3	;volatile
  5705  06AE                     l2657:	
  5706                           
  5707                           ;lcd_pic16.c: 57:         PORTBbits.RB2 = 0;
  5708  06AE  1283               	bcf	3,5	;RP0=0, select bank0
  5709  06AF  1303               	bcf	3,6	;RP1=0, select bank0
  5710  06B0  1106               	bcf	6,2	;volatile
  5711  06B1                     l2659:	
  5712                           
  5713                           ;lcd_pic16.c: 58:         PORTBbits.RB1 = 0;
  5714  06B1  1086               	bcf	6,1	;volatile
  5715  06B2                     l2661:	
  5716                           
  5717                           ;lcd_pic16.c: 59:         PORTBbits.RB3 = 0;
  5718  06B2  1186               	bcf	6,3	;volatile
  5719  06B3                     l2663:	
  5720                           
  5721                           ;lcd_pic16.c: 62:         DelayPORXLCD();
  5722  06B3  160A  118A  27C8  120A  118A  	fcall	_DelayPORXLCD
  5723  06B8                     l2665:	
  5724                           
  5725                           ;lcd_pic16.c: 64:        WriteCmdXLCD(0x30);
  5726  06B8  3030               	movlw	48
  5727  06B9  120A  158A  23F0  120A  118A  	fcall	_WriteCmdXLCD
  5728  06BE                     l2667:	
  5729                           
  5730                           ;lcd_pic16.c: 65:          _delay((unsigned long)((5)*(4000000/4000.0)));
  5731  06BE  3007               	movlw	7
  5732  06BF  1283               	bcf	3,5	;RP0=0, select bank0
  5733  06C0  1303               	bcf	3,6	;RP1=0, select bank0
  5734  06C1  00C2               	movwf	??_OpenXLCD+1
  5735  06C2  307C               	movlw	124
  5736  06C3  00C1               	movwf	??_OpenXLCD
  5737  06C4                     u3647:	
  5738  06C4  0BC1               	decfsz	??_OpenXLCD,f
  5739  06C5  2EC4               	goto	u3647
  5740  06C6  0BC2               	decfsz	??_OpenXLCD+1,f
  5741  06C7  2EC4               	goto	u3647
  5742  06C8  0000               	nop
  5743  06C9                     l2669:	
  5744                           
  5745                           ;lcd_pic16.c: 67:        WriteCmdXLCD(0x30);
  5746  06C9  3030               	movlw	48
  5747  06CA  120A  158A  23F0  120A  118A  	fcall	_WriteCmdXLCD
  5748  06CF                     l2671:	
  5749                           
  5750                           ;lcd_pic16.c: 68:          _delay((unsigned long)((1)*(4000000/4000.0)));
  5751  06CF  30C7               	movlw	199
  5752  06D0  1283               	bcf	3,5	;RP0=0, select bank0
  5753  06D1  1303               	bcf	3,6	;RP1=0, select bank0
  5754  06D2  00C1               	movwf	??_OpenXLCD
  5755  06D3                     u3657:	
  5756  06D3  2ED4               	nop2
  5757  06D4  0BC1               	decfsz	??_OpenXLCD,f
  5758  06D5  2ED3               	goto	u3657
  5759  06D6  2ED7               	nop2
  5760  06D7                     l2673:	
  5761                           
  5762                           ;lcd_pic16.c: 71:        WriteCmdXLCD(0x32);
  5763  06D7  3032               	movlw	50
  5764  06D8  120A  158A  23F0  120A  118A  	fcall	_WriteCmdXLCD
  5765  06DD                     l2675:	
  5766                           ;lcd_pic16.c: 72:       while( BusyXLCD() );
  5767                           
  5768  06DD  160A  118A  27D4  120A  118A  	fcall	_BusyXLCD
  5769  06E2  3A00               	xorlw	0
  5770  06E3  1D03               	skipz
  5771  06E4  2EE6               	goto	u1771
  5772  06E5  2EE7               	goto	u1770
  5773  06E6                     u1771:	
  5774  06E6  2EDD               	goto	l2675
  5775  06E7                     u1770:	
  5776  06E7                     l2677:	
  5777  06E7  160A  118A  27D4  120A  118A  	fcall	_BusyXLCD
  5778  06EC  3A00               	xorlw	0
  5779  06ED  1D03               	skipz
  5780  06EE  2EF0               	goto	u1781
  5781  06EF  2EF1               	goto	u1780
  5782  06F0                     u1781:	
  5783  06F0  2EE7               	goto	l2677
  5784  06F1                     u1780:	
  5785  06F1                     l2679:	
  5786                           
  5787                           ;lcd_pic16.c: 78:         WriteCmdXLCD(lcdtype);
  5788  06F1  1283               	bcf	3,5	;RP0=0, select bank0
  5789  06F2  1303               	bcf	3,6	;RP1=0, select bank0
  5790  06F3  0843               	movf	OpenXLCD@lcdtype,w
  5791  06F4  120A  158A  23F0  120A  118A  	fcall	_WriteCmdXLCD
  5792  06F9                     l2681:	
  5793                           ;lcd_pic16.c: 81:         while(BusyXLCD());
  5794                           
  5795  06F9  160A  118A  27D4  120A  118A  	fcall	_BusyXLCD
  5796  06FE  3A00               	xorlw	0
  5797  06FF  1D03               	skipz
  5798  0700  2F02               	goto	u1791
  5799  0701  2F03               	goto	u1790
  5800  0702                     u1791:	
  5801  0702  2EF9               	goto	l2681
  5802  0703                     u1790:	
  5803  0703                     l2683:	
  5804                           
  5805                           ;lcd_pic16.c: 82:         WriteCmdXLCD(0b00001011&0b00001101&0b00001110);
  5806  0703  3008               	movlw	8
  5807  0704  120A  158A  23F0  120A  118A  	fcall	_WriteCmdXLCD
  5808  0709                     l2685:	
  5809                           ;lcd_pic16.c: 83:         while(BusyXLCD());
  5810                           
  5811  0709  160A  118A  27D4  120A  118A  	fcall	_BusyXLCD
  5812  070E  3A00               	xorlw	0
  5813  070F  1D03               	skipz
  5814  0710  2F12               	goto	u1801
  5815  0711  2F13               	goto	u1800
  5816  0712                     u1801:	
  5817  0712  2F09               	goto	l2685
  5818  0713                     u1800:	
  5819  0713                     l2687:	
  5820                           
  5821                           ;lcd_pic16.c: 84:         WriteCmdXLCD(0b00001111&0b00001111&0b00001111);
  5822  0713  300F               	movlw	15
  5823  0714  120A  158A  23F0  120A  118A  	fcall	_WriteCmdXLCD
  5824  0719                     l2689:	
  5825                           ;lcd_pic16.c: 87:         while(BusyXLCD());
  5826                           
  5827  0719  160A  118A  27D4  120A  118A  	fcall	_BusyXLCD
  5828  071E  3A00               	xorlw	0
  5829  071F  1D03               	skipz
  5830  0720  2F22               	goto	u1811
  5831  0721  2F23               	goto	u1810
  5832  0722                     u1811:	
  5833  0722  2F19               	goto	l2689
  5834  0723                     u1810:	
  5835  0723                     l2691:	
  5836                           
  5837                           ;lcd_pic16.c: 88:         WriteCmdXLCD(0x01);
  5838  0723  3001               	movlw	1
  5839  0724  120A  158A  23F0  120A  118A  	fcall	_WriteCmdXLCD
  5840  0729                     l2693:	
  5841                           ;lcd_pic16.c: 91:         while(BusyXLCD());
  5842                           
  5843  0729  160A  118A  27D4  120A  118A  	fcall	_BusyXLCD
  5844  072E  3A00               	xorlw	0
  5845  072F  1D03               	skipz
  5846  0730  2F32               	goto	u1821
  5847  0731  2F33               	goto	u1820
  5848  0732                     u1821:	
  5849  0732  2F29               	goto	l2693
  5850  0733                     u1820:	
  5851  0733                     l2695:	
  5852                           
  5853                           ;lcd_pic16.c: 92:         WriteCmdXLCD(0b00000101);
  5854  0733  3005               	movlw	5
  5855  0734  120A  158A  23F0  120A  118A  	fcall	_WriteCmdXLCD
  5856  0739                     l2697:	
  5857                           ;lcd_pic16.c: 94:    while(BusyXLCD());
  5858                           
  5859  0739  160A  118A  27D4  120A  118A  	fcall	_BusyXLCD
  5860  073E  3A00               	xorlw	0
  5861  073F  1D03               	skipz
  5862  0740  2F42               	goto	u1831
  5863  0741  2F43               	goto	u1830
  5864  0742                     u1831:	
  5865  0742  2F39               	goto	l2697
  5866  0743                     u1830:	
  5867  0743                     l2699:	
  5868                           
  5869                           ;lcd_pic16.c: 95:         WriteCmdXLCD(0x06);
  5870  0743  3006               	movlw	6
  5871  0744  120A  158A  23F0  120A  118A  	fcall	_WriteCmdXLCD
  5872  0749                     l2701:	
  5873                           ;lcd_pic16.c: 97:         while(BusyXLCD());
  5874                           
  5875  0749  160A  118A  27D4  120A  118A  	fcall	_BusyXLCD
  5876  074E  3A00               	xorlw	0
  5877  074F  1D03               	skipz
  5878  0750  2F52               	goto	u1841
  5879  0751  2F53               	goto	u1840
  5880  0752                     u1841:	
  5881  0752  2F49               	goto	l2701
  5882  0753                     u1840:	
  5883  0753                     l2703:	
  5884                           
  5885                           ;lcd_pic16.c: 98:         SetDDRamAddr(0x80);
  5886  0753  3080               	movlw	128
  5887  0754  120A  158A  24DD  120A  118A  	fcall	_SetDDRamAddr
  5888  0759                     l2705:	
  5889                           ;lcd_pic16.c: 100:         while(BusyXLCD());
  5890                           
  5891  0759  160A  118A  27D4  120A  118A  	fcall	_BusyXLCD
  5892  075E  3A00               	xorlw	0
  5893  075F  1D03               	skipz
  5894  0760  2F62               	goto	u1851
  5895  0761  2F63               	goto	u1850
  5896  0762                     u1851:	
  5897  0762  2F59               	goto	l2705
  5898  0763                     u1850:	
  5899  0763                     l2707:	
  5900                           
  5901                           ;lcd_pic16.c: 101:         WriteCmdXLCD(0b00001101);
  5902  0763  300D               	movlw	13
  5903  0764  120A  158A  23F0  120A  118A  	fcall	_WriteCmdXLCD
  5904  0769                     l371:	
  5905  0769  0008               	return
  5906  076A                     __end_of_OpenXLCD:	
  5907                           
  5908                           	psect	text25
  5909  0BF0                     __ptext25:	
  5910 ;; *************** function _WriteCmdXLCD *****************
  5911 ;; Defined at:
  5912 ;;		line 164 in file "lcd_pic16.c"
  5913 ;; Parameters:    Size  Location     Type
  5914 ;;  cmd             1    wreg     unsigned char 
  5915 ;; Auto vars:     Size  Location     Type
  5916 ;;  cmd             1   32[BANK0 ] unsigned char 
  5917 ;; Return value:  Size  Location     Type
  5918 ;;                  1    wreg      void 
  5919 ;; Registers used:
  5920 ;;		wreg, status,2, status,0, pclath, cstack
  5921 ;; Tracked objects:
  5922 ;;		On entry : 0/0
  5923 ;;		On exit  : 0/0
  5924 ;;		Unchanged: 0/0
  5925 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5926 ;;      Params:         0       0       0       0       0
  5927 ;;      Locals:         0       1       0       0       0
  5928 ;;      Temps:          0       2       0       0       0
  5929 ;;      Totals:         0       3       0       0       0
  5930 ;;Total ram usage:        3 bytes
  5931 ;; Hardware stack levels used:    1
  5932 ;; Hardware stack levels required when called:    6
  5933 ;; This function calls:
  5934 ;;		_DelayFor18TCY
  5935 ;; This function is called by:
  5936 ;;		_OpenXLCD
  5937 ;;		_SendCMDLCD
  5938 ;; This function uses a non-reentrant model
  5939 ;;
  5940                           
  5941                           
  5942                           ;psect for function _WriteCmdXLCD
  5943  0BF0                     _WriteCmdXLCD:	
  5944                           
  5945                           ;incstack = 0
  5946 ;; hardware stack exceeded
  5947                           ; Regs used in _WriteCmdXLCD: [wreg+status,2+status,0+pclath+cstack]
  5948                           ;WriteCmdXLCD@cmd stored from wreg
  5949  0BF0  1283               	bcf	3,5	;RP0=0, select bank0
  5950  0BF1  1303               	bcf	3,6	;RP1=0, select bank0
  5951  0BF2  00C0               	movwf	WriteCmdXLCD@cmd
  5952  0BF3                     l2395:	
  5953                           
  5954                           ;lcd_pic16.c: 178:         TRISB &= 0x0f;
  5955  0BF3  300F               	movlw	15
  5956  0BF4  00BE               	movwf	??_WriteCmdXLCD
  5957  0BF5  083E               	movf	??_WriteCmdXLCD,w
  5958  0BF6  1683               	bsf	3,5	;RP0=1, select bank1
  5959  0BF7  1303               	bcf	3,6	;RP1=0, select bank1
  5960  0BF8  0586               	andwf	6,f	;volatile
  5961                           
  5962                           ;lcd_pic16.c: 179:         PORTB &= 0x0f;
  5963  0BF9  300F               	movlw	15
  5964  0BFA  1283               	bcf	3,5	;RP0=0, select bank0
  5965  0BFB  1303               	bcf	3,6	;RP1=0, select bank0
  5966  0BFC  00BE               	movwf	??_WriteCmdXLCD
  5967  0BFD  083E               	movf	??_WriteCmdXLCD,w
  5968  0BFE  0586               	andwf	6,f	;volatile
  5969                           
  5970                           ;lcd_pic16.c: 180:         PORTB |= cmd&0xf0;
  5971  0BFF  0840               	movf	WriteCmdXLCD@cmd,w
  5972  0C00  39F0               	andlw	240
  5973  0C01  00BE               	movwf	??_WriteCmdXLCD
  5974  0C02  083E               	movf	??_WriteCmdXLCD,w
  5975  0C03  0486               	iorwf	6,f	;volatile
  5976  0C04                     l2397:	
  5977                           
  5978                           ;lcd_pic16.c: 186:         PORTBbits.RB2 = 0;
  5979  0C04  1106               	bcf	6,2	;volatile
  5980  0C05                     l2399:	
  5981                           
  5982                           ;lcd_pic16.c: 187:         PORTBbits.RB1 = 0;
  5983  0C05  1086               	bcf	6,1	;volatile
  5984  0C06                     l2401:	
  5985                           
  5986                           ;lcd_pic16.c: 188:         DelayFor18TCY();
  5987  0C06  160A  118A  27A6  120A  158A  	fcall	_DelayFor18TCY
  5988  0C0B                     l2403:	
  5989                           
  5990                           ;lcd_pic16.c: 189:         PORTBbits.RB3 = 1;
  5991  0C0B  1283               	bcf	3,5	;RP0=0, select bank0
  5992  0C0C  1303               	bcf	3,6	;RP1=0, select bank0
  5993  0C0D  1586               	bsf	6,3	;volatile
  5994  0C0E                     l2405:	
  5995                           
  5996                           ;lcd_pic16.c: 190:         DelayFor18TCY();
  5997  0C0E  160A  118A  27A6  120A  158A  	fcall	_DelayFor18TCY
  5998  0C13                     l2407:	
  5999                           
  6000                           ;lcd_pic16.c: 191:         PORTBbits.RB3 = 0;
  6001  0C13  1283               	bcf	3,5	;RP0=0, select bank0
  6002  0C14  1303               	bcf	3,6	;RP1=0, select bank0
  6003  0C15  1186               	bcf	6,3	;volatile
  6004                           
  6005                           ;lcd_pic16.c: 193:         PORTB &= 0x0f;
  6006  0C16  300F               	movlw	15
  6007  0C17  00BE               	movwf	??_WriteCmdXLCD
  6008  0C18  083E               	movf	??_WriteCmdXLCD,w
  6009  0C19  0586               	andwf	6,f	;volatile
  6010                           
  6011                           ;lcd_pic16.c: 194:         PORTB |= (cmd<<4)&0xf0;
  6012  0C1A  0840               	movf	WriteCmdXLCD@cmd,w
  6013  0C1B  00BE               	movwf	??_WriteCmdXLCD
  6014  0C1C  3003               	movlw	3
  6015  0C1D                     u1385:	
  6016  0C1D  1003               	clrc
  6017  0C1E  0DBE               	rlf	??_WriteCmdXLCD,f
  6018  0C1F  3EFF               	addlw	-1
  6019  0C20  1D03               	skipz
  6020  0C21  2C1D               	goto	u1385
  6021  0C22  1003               	clrc
  6022  0C23  0D3E               	rlf	??_WriteCmdXLCD,w
  6023  0C24  39F0               	andlw	240
  6024  0C25  00BF               	movwf	??_WriteCmdXLCD+1
  6025  0C26  083F               	movf	??_WriteCmdXLCD+1,w
  6026  0C27  0486               	iorwf	6,f	;volatile
  6027  0C28                     l2409:	
  6028                           
  6029                           ;lcd_pic16.c: 199:         DelayFor18TCY();
  6030  0C28  160A  118A  27A6  120A  158A  	fcall	_DelayFor18TCY
  6031  0C2D                     l2411:	
  6032                           
  6033                           ;lcd_pic16.c: 200:         PORTBbits.RB3 = 1;
  6034  0C2D  1283               	bcf	3,5	;RP0=0, select bank0
  6035  0C2E  1303               	bcf	3,6	;RP1=0, select bank0
  6036  0C2F  1586               	bsf	6,3	;volatile
  6037  0C30                     l2413:	
  6038                           
  6039                           ;lcd_pic16.c: 201:         DelayFor18TCY();
  6040  0C30  160A  118A  27A6  120A  158A  	fcall	_DelayFor18TCY
  6041  0C35                     l2415:	
  6042                           
  6043                           ;lcd_pic16.c: 202:         PORTBbits.RB3 = 0;
  6044  0C35  1283               	bcf	3,5	;RP0=0, select bank0
  6045  0C36  1303               	bcf	3,6	;RP1=0, select bank0
  6046  0C37  1186               	bcf	6,3	;volatile
  6047                           
  6048                           ;lcd_pic16.c: 204:         TRISB |= 0xf0;
  6049  0C38  30F0               	movlw	240
  6050  0C39  00BE               	movwf	??_WriteCmdXLCD
  6051  0C3A  083E               	movf	??_WriteCmdXLCD,w
  6052  0C3B  1683               	bsf	3,5	;RP0=1, select bank1
  6053  0C3C  1303               	bcf	3,6	;RP1=0, select bank1
  6054  0C3D  0486               	iorwf	6,f	;volatile
  6055  0C3E                     l377:	
  6056  0C3E  0008               	return
  6057  0C3F                     __end_of_WriteCmdXLCD:	
  6058                           
  6059                           	psect	text26
  6060  0CDD                     __ptext26:	
  6061 ;; *************** function _SetDDRamAddr *****************
  6062 ;; Defined at:
  6063 ;;		line 217 in file "lcd_pic16.c"
  6064 ;; Parameters:    Size  Location     Type
  6065 ;;  DDaddr          1    wreg     unsigned char 
  6066 ;; Auto vars:     Size  Location     Type
  6067 ;;  DDaddr          1   32[BANK0 ] unsigned char 
  6068 ;; Return value:  Size  Location     Type
  6069 ;;                  1    wreg      void 
  6070 ;; Registers used:
  6071 ;;		wreg, status,2, status,0, pclath, cstack
  6072 ;; Tracked objects:
  6073 ;;		On entry : 0/0
  6074 ;;		On exit  : 0/0
  6075 ;;		Unchanged: 0/0
  6076 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6077 ;;      Params:         0       0       0       0       0
  6078 ;;      Locals:         0       1       0       0       0
  6079 ;;      Temps:          0       2       0       0       0
  6080 ;;      Totals:         0       3       0       0       0
  6081 ;;Total ram usage:        3 bytes
  6082 ;; Hardware stack levels used:    1
  6083 ;; Hardware stack levels required when called:    6
  6084 ;; This function calls:
  6085 ;;		_DelayFor18TCY
  6086 ;; This function is called by:
  6087 ;;		_start
  6088 ;;		_setFrequency
  6089 ;;		_principalScreen
  6090 ;;		_lockingScreen
  6091 ;;		_OpenXLCD
  6092 ;; This function uses a non-reentrant model
  6093 ;;
  6094                           
  6095                           
  6096                           ;psect for function _SetDDRamAddr
  6097  0CDD                     _SetDDRamAddr:	
  6098                           
  6099                           ;incstack = 0
  6100                           ; Regs used in _SetDDRamAddr: [wreg+status,2+status,0+pclath+cstack]
  6101                           ;SetDDRamAddr@DDaddr stored from wreg
  6102  0CDD  1283               	bcf	3,5	;RP0=0, select bank0
  6103  0CDE  1303               	bcf	3,6	;RP1=0, select bank0
  6104  0CDF  00C0               	movwf	SetDDRamAddr@DDaddr
  6105  0CE0                     l2369:	
  6106                           
  6107                           ;lcd_pic16.c: 217: void SetDDRamAddr(unsigned char DDaddr);lcd_pic16.c: 218: {;lcd_pic16
      +                          .c: 232:         TRISB &= 0x0f;
  6108  0CE0  300F               	movlw	15
  6109  0CE1  00BE               	movwf	??_SetDDRamAddr
  6110  0CE2  083E               	movf	??_SetDDRamAddr,w
  6111  0CE3  1683               	bsf	3,5	;RP0=1, select bank1
  6112  0CE4  1303               	bcf	3,6	;RP1=0, select bank1
  6113  0CE5  0586               	andwf	6,f	;volatile
  6114                           
  6115                           ;lcd_pic16.c: 233:         PORTB &= 0x0f;
  6116  0CE6  300F               	movlw	15
  6117  0CE7  1283               	bcf	3,5	;RP0=0, select bank0
  6118  0CE8  1303               	bcf	3,6	;RP1=0, select bank0
  6119  0CE9  00BE               	movwf	??_SetDDRamAddr
  6120  0CEA  083E               	movf	??_SetDDRamAddr,w
  6121  0CEB  0586               	andwf	6,f	;volatile
  6122                           
  6123                           ;lcd_pic16.c: 234:         PORTB |= ((DDaddr | 0b10000000) & 0xf0);
  6124  0CEC  0840               	movf	SetDDRamAddr@DDaddr,w
  6125  0CED  3880               	iorlw	128
  6126  0CEE  39F0               	andlw	240
  6127  0CEF  00BE               	movwf	??_SetDDRamAddr
  6128  0CF0  083E               	movf	??_SetDDRamAddr,w
  6129  0CF1  0486               	iorwf	6,f	;volatile
  6130  0CF2                     l2371:	
  6131                           
  6132                           ;lcd_pic16.c: 240:         PORTBbits.RB2 = 0;
  6133  0CF2  1106               	bcf	6,2	;volatile
  6134  0CF3                     l2373:	
  6135                           
  6136                           ;lcd_pic16.c: 241:         PORTBbits.RB1 = 0;
  6137  0CF3  1086               	bcf	6,1	;volatile
  6138  0CF4                     l2375:	
  6139                           
  6140                           ;lcd_pic16.c: 242:         DelayFor18TCY();
  6141  0CF4  160A  118A  27A6  120A  158A  	fcall	_DelayFor18TCY
  6142  0CF9                     l2377:	
  6143                           
  6144                           ;lcd_pic16.c: 243:         PORTBbits.RB3 = 1;
  6145  0CF9  1283               	bcf	3,5	;RP0=0, select bank0
  6146  0CFA  1303               	bcf	3,6	;RP1=0, select bank0
  6147  0CFB  1586               	bsf	6,3	;volatile
  6148  0CFC                     l2379:	
  6149                           
  6150                           ;lcd_pic16.c: 244:         DelayFor18TCY();
  6151  0CFC  160A  118A  27A6  120A  158A  	fcall	_DelayFor18TCY
  6152  0D01                     l2381:	
  6153                           
  6154                           ;lcd_pic16.c: 245:         PORTBbits.RB3 = 0;
  6155  0D01  1283               	bcf	3,5	;RP0=0, select bank0
  6156  0D02  1303               	bcf	3,6	;RP1=0, select bank0
  6157  0D03  1186               	bcf	6,3	;volatile
  6158                           
  6159                           ;lcd_pic16.c: 247:         PORTB &= 0x0f;
  6160  0D04  300F               	movlw	15
  6161  0D05  00BE               	movwf	??_SetDDRamAddr
  6162  0D06  083E               	movf	??_SetDDRamAddr,w
  6163  0D07  0586               	andwf	6,f	;volatile
  6164                           
  6165                           ;lcd_pic16.c: 248:         PORTB |= ((DDaddr<<4)&0xf0);
  6166  0D08  0840               	movf	SetDDRamAddr@DDaddr,w
  6167  0D09  00BE               	movwf	??_SetDDRamAddr
  6168  0D0A  3003               	movlw	3
  6169  0D0B                     u1375:	
  6170  0D0B  1003               	clrc
  6171  0D0C  0DBE               	rlf	??_SetDDRamAddr,f
  6172  0D0D  3EFF               	addlw	-1
  6173  0D0E  1D03               	skipz
  6174  0D0F  2D0B               	goto	u1375
  6175  0D10  1003               	clrc
  6176  0D11  0D3E               	rlf	??_SetDDRamAddr,w
  6177  0D12  39F0               	andlw	240
  6178  0D13  00BF               	movwf	??_SetDDRamAddr+1
  6179  0D14  083F               	movf	??_SetDDRamAddr+1,w
  6180  0D15  0486               	iorwf	6,f	;volatile
  6181  0D16                     l2383:	
  6182                           
  6183                           ;lcd_pic16.c: 253:         DelayFor18TCY();
  6184  0D16  160A  118A  27A6  120A  158A  	fcall	_DelayFor18TCY
  6185  0D1B                     l2385:	
  6186                           
  6187                           ;lcd_pic16.c: 254:         PORTBbits.RB3 = 1;
  6188  0D1B  1283               	bcf	3,5	;RP0=0, select bank0
  6189  0D1C  1303               	bcf	3,6	;RP1=0, select bank0
  6190  0D1D  1586               	bsf	6,3	;volatile
  6191  0D1E                     l2387:	
  6192                           
  6193                           ;lcd_pic16.c: 255:         DelayFor18TCY();
  6194  0D1E  160A  118A  27A6  120A  158A  	fcall	_DelayFor18TCY
  6195  0D23                     l2389:	
  6196                           
  6197                           ;lcd_pic16.c: 256:         PORTBbits.RB3 = 0;
  6198  0D23  1283               	bcf	3,5	;RP0=0, select bank0
  6199  0D24  1303               	bcf	3,6	;RP1=0, select bank0
  6200  0D25  1186               	bcf	6,3	;volatile
  6201                           
  6202                           ;lcd_pic16.c: 258:         TRISB |= 0xf0;
  6203  0D26  30F0               	movlw	240
  6204  0D27  00BE               	movwf	??_SetDDRamAddr
  6205  0D28  083E               	movf	??_SetDDRamAddr,w
  6206  0D29  1683               	bsf	3,5	;RP0=1, select bank1
  6207  0D2A  1303               	bcf	3,6	;RP1=0, select bank1
  6208  0D2B  0486               	iorwf	6,f	;volatile
  6209  0D2C                     l380:	
  6210  0D2C  0008               	return
  6211  0D2D                     __end_of_SetDDRamAddr:	
  6212                           
  6213                           	psect	text27
  6214  17A6                     __ptext27:	
  6215 ;; *************** function _DelayFor18TCY *****************
  6216 ;; Defined at:
  6217 ;;		line 22 in file "lcd_pic16.c"
  6218 ;; Parameters:    Size  Location     Type
  6219 ;;		None
  6220 ;; Auto vars:     Size  Location     Type
  6221 ;;		None
  6222 ;; Return value:  Size  Location     Type
  6223 ;;                  1    wreg      void 
  6224 ;; Registers used:
  6225 ;;		wreg
  6226 ;; Tracked objects:
  6227 ;;		On entry : 0/0
  6228 ;;		On exit  : 0/0
  6229 ;;		Unchanged: 0/0
  6230 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6231 ;;      Params:         0       0       0       0       0
  6232 ;;      Locals:         0       0       0       0       0
  6233 ;;      Temps:          0       1       0       0       0
  6234 ;;      Totals:         0       1       0       0       0
  6235 ;;Total ram usage:        1 bytes
  6236 ;; Hardware stack levels used:    1
  6237 ;; Hardware stack levels required when called:    5
  6238 ;; This function calls:
  6239 ;;		Nothing
  6240 ;; This function is called by:
  6241 ;;		_WriteDataXLCD
  6242 ;;		_WriteCmdXLCD
  6243 ;;		_SetDDRamAddr
  6244 ;;		_SetCGRamAddr
  6245 ;;		_ReadDataXLCD
  6246 ;;		_ReadAddrXLCD
  6247 ;; This function uses a non-reentrant model
  6248 ;;
  6249                           
  6250                           
  6251                           ;psect for function _DelayFor18TCY
  6252  17A6                     _DelayFor18TCY:	
  6253  17A6                     l2367:	
  6254                           ;incstack = 0
  6255 ;; hardware stack exceeded
  6256                           ; Regs used in _DelayFor18TCY: [wreg]
  6257                           
  6258                           
  6259                           ;lcd_pic16.c: 24:    _delay((unsigned long)((18)*(4000000/4000000.0)));
  6260  17A6  3005               	movlw	5
  6261  17A7  1283               	bcf	3,5	;RP0=0, select bank0
  6262  17A8  1303               	bcf	3,6	;RP1=0, select bank0
  6263  17A9  00BD               	movwf	??_DelayFor18TCY
  6264  17AA                     u3667:	
  6265  17AA  0BBD               	decfsz	??_DelayFor18TCY,f
  6266  17AB  2FAA               	goto	u3667
  6267  17AC                     l335:	
  6268  17AC  0008               	return
  6269  17AD                     __end_of_DelayFor18TCY:	
  6270                           
  6271                           	psect	text28
  6272  17C8                     __ptext28:	
  6273 ;; *************** function _DelayPORXLCD *****************
  6274 ;; Defined at:
  6275 ;;		line 27 in file "lcd_pic16.c"
  6276 ;; Parameters:    Size  Location     Type
  6277 ;;		None
  6278 ;; Auto vars:     Size  Location     Type
  6279 ;;		None
  6280 ;; Return value:  Size  Location     Type
  6281 ;;                  1    wreg      void 
  6282 ;; Registers used:
  6283 ;;		wreg
  6284 ;; Tracked objects:
  6285 ;;		On entry : 0/0
  6286 ;;		On exit  : 0/0
  6287 ;;		Unchanged: 0/0
  6288 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6289 ;;      Params:         0       0       0       0       0
  6290 ;;      Locals:         0       0       0       0       0
  6291 ;;      Temps:          0       2       0       0       0
  6292 ;;      Totals:         0       2       0       0       0
  6293 ;;Total ram usage:        2 bytes
  6294 ;; Hardware stack levels used:    1
  6295 ;; Hardware stack levels required when called:    5
  6296 ;; This function calls:
  6297 ;;		Nothing
  6298 ;; This function is called by:
  6299 ;;		_OpenXLCD
  6300 ;; This function uses a non-reentrant model
  6301 ;;
  6302                           
  6303                           
  6304                           ;psect for function _DelayPORXLCD
  6305  17C8                     _DelayPORXLCD:	
  6306  17C8                     l2393:	
  6307                           ;incstack = 0
  6308 ;; hardware stack exceeded
  6309                           ; Regs used in _DelayPORXLCD: [wreg]
  6310                           
  6311                           
  6312                           ;lcd_pic16.c: 29:    _delay((unsigned long)((20)*(4000000/4000.0)));
  6313  17C8  301A               	movlw	26
  6314  17C9  1283               	bcf	3,5	;RP0=0, select bank0
  6315  17CA  1303               	bcf	3,6	;RP1=0, select bank0
  6316  17CB  00BE               	movwf	??_DelayPORXLCD+1
  6317  17CC  30F7               	movlw	247
  6318  17CD  00BD               	movwf	??_DelayPORXLCD
  6319  17CE                     u3677:	
  6320  17CE  0BBD               	decfsz	??_DelayPORXLCD,f
  6321  17CF  2FCE               	goto	u3677
  6322  17D0  0BBE               	decfsz	??_DelayPORXLCD+1,f
  6323  17D1  2FCE               	goto	u3677
  6324  17D2  2FD3               	nop2
  6325  17D3                     l338:	
  6326  17D3  0008               	return
  6327  17D4                     __end_of_DelayPORXLCD:	
  6328                           
  6329                           	psect	text29
  6330  17D4                     __ptext29:	
  6331 ;; *************** function _BusyXLCD *****************
  6332 ;; Defined at:
  6333 ;;		line 451 in file "lcd_pic16.c"
  6334 ;; Parameters:    Size  Location     Type
  6335 ;;		None
  6336 ;; Auto vars:     Size  Location     Type
  6337 ;;		None
  6338 ;; Return value:  Size  Location     Type
  6339 ;;                  1    wreg      unsigned char 
  6340 ;; Registers used:
  6341 ;;		wreg
  6342 ;; Tracked objects:
  6343 ;;		On entry : 0/0
  6344 ;;		On exit  : 0/0
  6345 ;;		Unchanged: 0/0
  6346 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6347 ;;      Params:         0       0       0       0       0
  6348 ;;      Locals:         0       0       0       0       0
  6349 ;;      Temps:          0       2       0       0       0
  6350 ;;      Totals:         0       2       0       0       0
  6351 ;;Total ram usage:        2 bytes
  6352 ;; Hardware stack levels used:    1
  6353 ;; Hardware stack levels required when called:    5
  6354 ;; This function calls:
  6355 ;;		Nothing
  6356 ;; This function is called by:
  6357 ;;		_OpenXLCD
  6358 ;;		_putsXLCD
  6359 ;;		_putrsXLCD
  6360 ;;		_SendCMDLCD
  6361 ;; This function uses a non-reentrant model
  6362 ;;
  6363                           
  6364                           
  6365                           ;psect for function _BusyXLCD
  6366  17D4                     _BusyXLCD:	
  6367  17D4                     l2419:	
  6368                           ;incstack = 0
  6369                           ; Regs used in _BusyXLCD: [wreg]
  6370                           
  6371                           
  6372                           ;lcd_pic16.c: 504:         _delay((unsigned long)((5)*(4000000/4000.0)));
  6373  17D4  3007               	movlw	7
  6374  17D5  1283               	bcf	3,5	;RP0=0, select bank0
  6375  17D6  1303               	bcf	3,6	;RP1=0, select bank0
  6376  17D7  00BE               	movwf	??_BusyXLCD+1
  6377  17D8  307C               	movlw	124
  6378  17D9  00BD               	movwf	??_BusyXLCD
  6379  17DA                     u3687:	
  6380  17DA  0BBD               	decfsz	??_BusyXLCD,f
  6381  17DB  2FDA               	goto	u3687
  6382  17DC  0BBE               	decfsz	??_BusyXLCD+1,f
  6383  17DD  2FDA               	goto	u3687
  6384  17DE  0000               	nop
  6385                           
  6386                           ;lcd_pic16.c: 505:         return 0;
  6387  17DF  3000               	movlw	0
  6388  17E0                     l410:	
  6389  17E0  0008               	return
  6390  17E1                     __end_of_BusyXLCD:	
  6391                           
  6392                           	psect	text30
  6393  0993                     __ptext30:	
  6394 ;; *************** function _inter *****************
  6395 ;; Defined at:
  6396 ;;		line 122 in file "main.c"
  6397 ;; Parameters:    Size  Location     Type
  6398 ;;		None
  6399 ;; Auto vars:     Size  Location     Type
  6400 ;;		None
  6401 ;; Return value:  Size  Location     Type
  6402 ;;                  1    wreg      void 
  6403 ;; Registers used:
  6404 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  6405 ;; Tracked objects:
  6406 ;;		On entry : 0/0
  6407 ;;		On exit  : 0/0
  6408 ;;		Unchanged: 0/0
  6409 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6410 ;;      Params:         0       0       0       0       0
  6411 ;;      Locals:         0       0       0       0       0
  6412 ;;      Temps:          0       5       0       0       0
  6413 ;;      Totals:         0       5       0       0       0
  6414 ;;Total ram usage:        5 bytes
  6415 ;; Hardware stack levels used:    1
  6416 ;; Hardware stack levels required when called:    4
  6417 ;; This function calls:
  6418 ;;		_time
  6419 ;;		_updateLCD
  6420 ;; This function is called by:
  6421 ;;		Interrupt level 1
  6422 ;; This function uses a non-reentrant model
  6423 ;;
  6424                           
  6425                           
  6426                           ;psect for function _inter
  6427  0993                     _inter:	
  6428  0993                     i1l3425:	
  6429                           
  6430                           ;main.c: 124:     INTCONbits.GIE = 0;
  6431  0993  138B               	bcf	11,7	;volatile
  6432                           
  6433                           ;main.c: 126:     if(PIR1bits.TMR1IF == 1){
  6434  0994  1C0C               	btfss	12,0	;volatile
  6435  0995  2997               	goto	u269_21
  6436  0996  2998               	goto	u269_20
  6437  0997                     u269_21:	
  6438  0997  29AD               	goto	i1l3437
  6439  0998                     u269_20:	
  6440  0998                     i1l3427:	
  6441                           
  6442                           ;main.c: 127:         TMR1H = prTmr1H;
  6443  0998  084B               	movf	_prTmr1H,w
  6444  0999  008F               	movwf	15	;volatile
  6445                           
  6446                           ;main.c: 128:         TMR1L = prTmr1L;
  6447  099A  084C               	movf	_prTmr1L,w
  6448  099B  008E               	movwf	14	;volatile
  6449  099C                     i1l3429:	
  6450                           
  6451                           ;main.c: 129:         cntTmr1++;
  6452  099C  3001               	movlw	1
  6453  099D  00B8               	movwf	??_inter
  6454  099E  0838               	movf	??_inter,w
  6455  099F  07D2               	addwf	_cntTmr1,f
  6456  09A0                     i1l3431:	
  6457                           
  6458                           ;main.c: 130:         time();
  6459  09A0  120A  158A  2583  120A  158A  	fcall	_time
  6460  09A5                     i1l3433:	
  6461                           
  6462                           ;main.c: 131:         updateLCD();
  6463  09A5  120A  158A  2631  120A  158A  	fcall	_updateLCD
  6464  09AA                     i1l3435:	
  6465                           
  6466                           ;main.c: 132:         PIR1bits.TMR1IF = 0;
  6467  09AA  1283               	bcf	3,5	;RP0=0, select bank0
  6468  09AB  1303               	bcf	3,6	;RP1=0, select bank0
  6469  09AC  100C               	bcf	12,0	;volatile
  6470  09AD                     i1l3437:	
  6471                           
  6472                           ;main.c: 134:     INTCONbits.GIE = 1;
  6473  09AD  178B               	bsf	11,7	;volatile
  6474  09AE                     i1l221:	
  6475  09AE  083C               	movf	??_inter+4,w
  6476  09AF  00FF               	movwf	btemp+1
  6477  09B0  083B               	movf	??_inter+3,w
  6478  09B1  008A               	movwf	10
  6479  09B2  083A               	movf	??_inter+2,w
  6480  09B3  0084               	movwf	4
  6481  09B4  0E39               	swapf	(??_inter+1)^0,w
  6482  09B5  0083               	movwf	3
  6483  09B6  0EFE               	swapf	btemp,f
  6484  09B7  0E7E               	swapf	btemp,w
  6485  09B8  0009               	retfie
  6486  09B9                     __end_of_inter:	
  6487                           
  6488                           	psect	intentry
  6489  0004                     __pintentry:	
  6490                           ;incstack = 0
  6491 ;; hardware stack exceeded
  6492                           ; Regs used in _inter: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  6493                           
  6494  0004                     interrupt_function:	
  6495  007E                     saved_w	set	btemp
  6496  0004  00FE               	movwf	btemp
  6497  0005  0E03               	swapf	3,w
  6498  0006  1283               	bcf	3,5	;RP0=0, select bank0
  6499  0007  1303               	bcf	3,6	;RP1=0, select bank0
  6500  0008  00B9               	movwf	??_inter+1
  6501  0009  0804               	movf	4,w
  6502  000A  00BA               	movwf	??_inter+2
  6503  000B  080A               	movf	10,w
  6504  000C  00BB               	movwf	??_inter+3
  6505  000D  087F               	movf	btemp+1,w
  6506  000E  00BC               	movwf	??_inter+4
  6507  000F  120A  158A  2993   	ljmp	_inter
  6508                           
  6509                           	psect	text31
  6510  0E31                     __ptext31:	
  6511 ;; *************** function _updateLCD *****************
  6512 ;; Defined at:
  6513 ;;		line 14 in file "lcd.c"
  6514 ;; Parameters:    Size  Location     Type
  6515 ;;		None
  6516 ;; Auto vars:     Size  Location     Type
  6517 ;;  integ           1   23[BANK0 ] unsigned char 
  6518 ;;  decim           1   22[BANK0 ] unsigned char 
  6519 ;; Return value:  Size  Location     Type
  6520 ;;                  1    wreg      void 
  6521 ;; Registers used:
  6522 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  6523 ;; Tracked objects:
  6524 ;;		On entry : 0/0
  6525 ;;		On exit  : 0/0
  6526 ;;		Unchanged: 0/0
  6527 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6528 ;;      Params:         0       0       0       0       0
  6529 ;;      Locals:         0       2       0       0       0
  6530 ;;      Temps:          0       5       0       0       0
  6531 ;;      Totals:         0       7       0       0       0
  6532 ;;Total ram usage:        7 bytes
  6533 ;; Hardware stack levels used:    1
  6534 ;; Hardware stack levels required when called:    3
  6535 ;; This function calls:
  6536 ;;		i1_SetDDRamAddr
  6537 ;;		i1___lwdiv
  6538 ;;		i1___lwmod
  6539 ;;		i1_putsXLCD
  6540 ;;		i1_sprintf
  6541 ;; This function is called by:
  6542 ;;		_inter
  6543 ;; This function uses a non-reentrant model
  6544 ;;
  6545                           
  6546                           
  6547                           ;psect for function _updateLCD
  6548  0E31                     _updateLCD:	
  6549  0E31                     i1l3367:	
  6550                           ;incstack = 0
  6551 ;; hardware stack exceeded
  6552                           ; Regs used in _updateLCD: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  6553                           
  6554                           
  6555                           ;lcd.c: 15:     if(isOnConfig){
  6556  0E31  1283               	bcf	3,5	;RP0=0, select bank0
  6557  0E32  1303               	bcf	3,6	;RP1=0, select bank0
  6558  0E33  084E               	movf	_isOnConfig,w
  6559  0E34  1903               	btfsc	3,2
  6560  0E35  2E37               	goto	u263_21
  6561  0E36  2E38               	goto	u263_20
  6562  0E37                     u263_21:	
  6563  0E37  2E8E               	goto	i1l475
  6564  0E38                     u263_20:	
  6565  0E38                     i1l3369:	
  6566                           
  6567                           ;lcd.c: 16:         unsigned char decim = frequency % 10;
  6568  0E38  300A               	movlw	10
  6569  0E39  00F8               	movwf	i1___lwmod@divisor
  6570  0E3A  3000               	movlw	0
  6571  0E3B  00F9               	movwf	i1___lwmod@divisor+1
  6572  0E3C  0845               	movf	_frequency+1,w
  6573  0E3D  00FB               	movwf	i1___lwmod@dividend+1
  6574  0E3E  0844               	movf	_frequency,w
  6575  0E3F  00FA               	movwf	i1___lwmod@dividend
  6576  0E40  120A  158A  228F  120A  158A  	fcall	i1___lwmod
  6577  0E45  0878               	movf	?i1___lwmod,w
  6578  0E46  1283               	bcf	3,5	;RP0=0, select bank0
  6579  0E47  1303               	bcf	3,6	;RP1=0, select bank0
  6580  0E48  00B1               	movwf	??_updateLCD
  6581  0E49  0831               	movf	??_updateLCD,w
  6582  0E4A  00B6               	movwf	updateLCD@decim
  6583                           
  6584                           ;lcd.c: 17:         unsigned char integ = frequency / 10;
  6585  0E4B  300A               	movlw	10
  6586  0E4C  00F0               	movwf	i1___lwdiv@divisor
  6587  0E4D  3000               	movlw	0
  6588  0E4E  00F1               	movwf	i1___lwdiv@divisor+1
  6589  0E4F  0845               	movf	_frequency+1,w
  6590  0E50  00F3               	movwf	i1___lwdiv@dividend+1
  6591  0E51  0844               	movf	_frequency,w
  6592  0E52  00F2               	movwf	i1___lwdiv@dividend
  6593  0E53  120A  158A  22C9  120A  158A  	fcall	i1___lwdiv
  6594  0E58  0870               	movf	?i1___lwdiv,w
  6595  0E59  1283               	bcf	3,5	;RP0=0, select bank0
  6596  0E5A  1303               	bcf	3,6	;RP1=0, select bank0
  6597  0E5B  00B1               	movwf	??_updateLCD
  6598  0E5C  0831               	movf	??_updateLCD,w
  6599  0E5D  00B7               	movwf	updateLCD@integ
  6600  0E5E                     i1l3371:	
  6601                           
  6602                           ;lcd.c: 18:         sprintf(lineTwo,"FREQ.  %3d.%d MHz",integ, decim);
  6603  0E5E  300F               	movlw	(low ((STR_9-__stringbase)| (0+32768)))& (0+255)
  6604  0E5F  00B1               	movwf	??_updateLCD
  6605  0E60  0831               	movf	??_updateLCD,w
  6606  0E61  00A0               	movwf	i1sprintf@f
  6607  0E62  0837               	movf	updateLCD@integ,w
  6608  0E63  00B2               	movwf	??_updateLCD+1
  6609  0E64  01B3               	clrf	??_updateLCD+2
  6610  0E65  0832               	movf	??_updateLCD+1,w
  6611  0E66  00A1               	movwf	?i1_sprintf+1
  6612  0E67  0833               	movf	??_updateLCD+2,w
  6613  0E68  00A2               	movwf	?i1_sprintf+2
  6614  0E69  0836               	movf	updateLCD@decim,w
  6615  0E6A  00B4               	movwf	??_updateLCD+3
  6616  0E6B  01B5               	clrf	??_updateLCD+4
  6617  0E6C  0834               	movf	??_updateLCD+3,w
  6618  0E6D  00A3               	movwf	?i1_sprintf+3
  6619  0E6E  0835               	movf	??_updateLCD+4,w
  6620  0E6F  00A4               	movwf	?i1_sprintf+4
  6621  0E70  30A1               	movlw	(low (_lineTwo| 0))& (0+255)
  6622  0E71  120A  118A  21DB  120A  158A  	fcall	i1_sprintf
  6623  0E76                     i1l3373:	
  6624                           
  6625                           ;lcd.c: 19:         SetDDRamAddr(0x40);
  6626  0E76  3040               	movlw	64
  6627  0E77  120A  158A  23A2  120A  158A  	fcall	i1_SetDDRamAddr
  6628  0E7C                     i1l3375:	
  6629                           
  6630                           ;lcd.c: 20:         putsXLCD(lineTwo);
  6631  0E7C  30A1               	movlw	(low (_lineTwo| 0))& (0+255)
  6632  0E7D  120A  158A  214C  120A  158A  	fcall	i1_putsXLCD
  6633  0E82                     i1l3377:	
  6634                           
  6635                           ;lcd.c: 21:         SetDDRamAddr(0x00);
  6636  0E82  3000               	movlw	0
  6637  0E83  120A  158A  23A2  120A  158A  	fcall	i1_SetDDRamAddr
  6638  0E88                     i1l3379:	
  6639                           
  6640                           ;lcd.c: 22:         putsXLCD(lineOne);
  6641  0E88  30B2               	movlw	(low (_lineOne| 0))& (0+255)
  6642  0E89  120A  158A  214C  120A  158A  	fcall	i1_putsXLCD
  6643  0E8E                     i1l475:	
  6644  0E8E  0008               	return
  6645  0E8F                     __end_of_updateLCD:	
  6646                           
  6647                           	psect	text32
  6648  01DB                     __ptext32:	
  6649 ;; *************** function i1_sprintf *****************
  6650 ;; Defined at:
  6651 ;;		line 505 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c"
  6652 ;; Parameters:    Size  Location     Type
  6653 ;;  sp              1    wreg     PTR unsigned char 
  6654 ;;		 -> lineTwo(17), lineOne(17), 
  6655 ;;  f               1    0[BANK0 ] PTR const unsigned char 
  6656 ;;		 -> STR_12(18), STR_11(17), STR_10(17), STR_9(18), 
  6657 ;;		 -> STR_7(17), STR_6(17), STR_5(17), STR_4(17), 
  6658 ;;		 -> STR_3(17), STR_2(17), STR_1(17), 
  6659 ;; Auto vars:     Size  Location     Type
  6660 ;;  sp              1   13[BANK0 ] PTR unsigned char 
  6661 ;;		 -> lineTwo(17), lineOne(17), 
  6662 ;;  sprintf         4    0        struct .
  6663 ;;  sprintf         2   14[BANK0 ] int 
  6664 ;;  sprintf         2   11[BANK0 ] unsigned int 
  6665 ;;  sprintf         2    0        PTR const unsigned char 
  6666 ;;  sprintf         2    0        unsigned int 
  6667 ;;  sprintf         1   16[BANK0 ] unsigned char 
  6668 ;;  sprintf         1   10[BANK0 ] unsigned char 
  6669 ;;  sprintf         1    9[BANK0 ] char 
  6670 ;;  sprintf         1    8[BANK0 ] PTR void [1]
  6671 ;;		 -> ?i1_sprintf(2), ?_sprintf(2), 
  6672 ;; Return value:  Size  Location     Type
  6673 ;;                  2    0[BANK0 ] int 
  6674 ;; Registers used:
  6675 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  6676 ;; Tracked objects:
  6677 ;;		On entry : 0/0
  6678 ;;		On exit  : 0/0
  6679 ;;		Unchanged: 0/0
  6680 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6681 ;;      Params:         0       5       0       0       0
  6682 ;;      Locals:         0       9       0       0       0
  6683 ;;      Temps:          0       3       0       0       0
  6684 ;;      Totals:         0      17       0       0       0
  6685 ;;Total ram usage:       17 bytes
  6686 ;; Hardware stack levels used:    1
  6687 ;; Hardware stack levels required when called:    1
  6688 ;; This function calls:
  6689 ;;		i1___lwdiv
  6690 ;;		i1___lwmod
  6691 ;;		i1___wmul
  6692 ;;		i1_isdigit
  6693 ;; This function is called by:
  6694 ;;		_updateLCD
  6695 ;; This function uses a non-reentrant model
  6696 ;;
  6697                           
  6698                           
  6699                           ;psect for function i1_sprintf
  6700  01DB                     i1_sprintf:	
  6701                           
  6702                           ;incstack = 0
  6703 ;; hardware stack exceeded
  6704                           ; Regs used in i1_sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  6705                           ;i1sprintf@sp stored from wreg
  6706  01DB  1283               	bcf	3,5	;RP0=0, select bank0
  6707  01DC  1303               	bcf	3,6	;RP1=0, select bank0
  6708  01DD  00AD               	movwf	i1sprintf@sp
  6709  01DE                     i1l3017:	
  6710                           
  6711                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 505: sprint
      +                          f(char * sp, const char * f, ...);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources
      +                          \c90\common\doprnt.c: 506: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\
      +                          common\doprnt.c: 507:  va_list ap;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\source
      +                          s\c90\common\doprnt.c: 512:  char c;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sour
      +                          ces\c90\common\doprnt.c: 514:  int width;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic
      +                          \sources\c90\common\doprnt.c: 521:  signed char prec;
  6712  01DE  3021               	movlw	(low ((?i1_sprintf| 0+1)))& (0+255)
  6713  01DF  00A5               	movwf	??i1_sprintf
  6714  01E0  0825               	movf	??i1_sprintf,w
  6715  01E1  00A8               	movwf	i1sprintf@ap
  6716                           
  6717                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 553:  while
      +                          ((c = *f++)) {
  6718  01E2  2B4A               	goto	i1l3099
  6719  01E3                     i1l3019:	
  6720                           
  6721                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 555:   if(c
      +                           != '%')
  6722  01E3  3025               	movlw	37
  6723  01E4  0630               	xorwf	i1sprintf@c,w
  6724  01E5  1903               	btfsc	3,2
  6725  01E6  29E8               	goto	u218_21
  6726  01E7  29E9               	goto	u218_20
  6727  01E8                     u218_21:	
  6728  01E8  29F5               	goto	i1l3025
  6729  01E9                     u218_20:	
  6730  01E9                     i1l3021:	
  6731                           
  6732                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 557:   {;C:
      +                          \Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 558:    ((*sp+
      +                          + = (c)));
  6733  01E9  0830               	movf	i1sprintf@c,w
  6734  01EA  00A5               	movwf	??i1_sprintf
  6735  01EB  082D               	movf	i1sprintf@sp,w
  6736  01EC  0084               	movwf	4
  6737  01ED  0825               	movf	??i1_sprintf,w
  6738  01EE  1383               	bcf	3,7	;select IRP bank0
  6739  01EF  0080               	movwf	0
  6740  01F0                     i1l3023:	
  6741  01F0  3001               	movlw	1
  6742  01F1  00A5               	movwf	??i1_sprintf
  6743  01F2  0825               	movf	??i1_sprintf,w
  6744  01F3  07AD               	addwf	i1sprintf@sp,f
  6745                           
  6746                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 559:    con
      +                          tinue;
  6747  01F4  2B4A               	goto	i1l3099
  6748  01F5                     i1l3025:	
  6749                           
  6750                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 563:   widt
      +                          h = 0;
  6751  01F5  01AE               	clrf	i1sprintf@width
  6752  01F6  01AF               	clrf	i1sprintf@width+1
  6753                           
  6754                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 565:   flag
      +                           = 0;
  6755  01F7  01AA               	clrf	i1sprintf@flag
  6756  01F8                     i1l3027:	
  6757                           
  6758                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 614:   if(i
      +                          sdigit((unsigned)*f)) {
  6759  01F8  0820               	movf	i1sprintf@f,w
  6760  01F9  0084               	movwf	4
  6761  01FA  120A  158A  2000  120A  118A  	fcall	stringdir
  6762  01FF  160A  118A  27EE  120A  118A  	fcall	i1_isdigit
  6763  0204  1C03               	btfss	3,0
  6764  0205  2A07               	goto	u219_21
  6765  0206  2A08               	goto	u219_20
  6766  0207                     u219_21:	
  6767  0207  2A48               	goto	i1l3041
  6768  0208                     u219_20:	
  6769  0208                     i1l3029:	
  6770                           
  6771                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 615:    wid
      +                          th = 0;
  6772  0208  1283               	bcf	3,5	;RP0=0, select bank0
  6773  0209  1303               	bcf	3,6	;RP1=0, select bank0
  6774  020A  01AE               	clrf	i1sprintf@width
  6775  020B  01AF               	clrf	i1sprintf@width+1
  6776  020C                     i1l3031:	
  6777                           
  6778                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 617:     wi
      +                          dth *= 10;
  6779  020C  300A               	movlw	10
  6780  020D  00F0               	movwf	i1___wmul@multiplier
  6781  020E  3000               	movlw	0
  6782  020F  00F1               	movwf	i1___wmul@multiplier+1
  6783  0210  1283               	bcf	3,5	;RP0=0, select bank0
  6784  0211  1303               	bcf	3,6	;RP1=0, select bank0
  6785  0212  082F               	movf	i1sprintf@width+1,w
  6786  0213  00F3               	movwf	i1___wmul@multiplicand+1
  6787  0214  082E               	movf	i1sprintf@width,w
  6788  0215  00F2               	movwf	i1___wmul@multiplicand
  6789  0216  120A  158A  216E  120A  118A  	fcall	i1___wmul
  6790  021B  0871               	movf	?i1___wmul+1,w
  6791  021C  1283               	bcf	3,5	;RP0=0, select bank0
  6792  021D  1303               	bcf	3,6	;RP1=0, select bank0
  6793  021E  00AF               	movwf	i1sprintf@width+1
  6794  021F  0870               	movf	?i1___wmul,w
  6795  0220  00AE               	movwf	i1sprintf@width
  6796  0221                     i1l3033:	
  6797                           
  6798                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 618:       
      +                           width += *f++ - '0';
  6799  0221  0820               	movf	i1sprintf@f,w
  6800  0222  0084               	movwf	4
  6801  0223  120A  158A  2000  120A  118A  	fcall	stringdir
  6802  0228  3ED0               	addlw	208
  6803  0229  00A5               	movwf	??i1_sprintf
  6804  022A  30FF               	movlw	255
  6805  022B  1803               	skipnc
  6806  022C  3000               	movlw	0
  6807  022D  00A6               	movwf	??i1_sprintf+1
  6808  022E  0825               	movf	??i1_sprintf,w
  6809  022F  07AE               	addwf	i1sprintf@width,f
  6810  0230  1803               	skipnc
  6811  0231  0AAF               	incf	i1sprintf@width+1,f
  6812  0232  0826               	movf	??i1_sprintf+1,w
  6813  0233  07AF               	addwf	i1sprintf@width+1,f
  6814  0234                     i1l3035:	
  6815  0234  3001               	movlw	1
  6816  0235  00A5               	movwf	??i1_sprintf
  6817  0236  0825               	movf	??i1_sprintf,w
  6818  0237  07A0               	addwf	i1sprintf@f,f
  6819  0238                     i1l3037:	
  6820                           
  6821                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 619:    } w
      +                          hile(isdigit((unsigned)*f));
  6822  0238  0820               	movf	i1sprintf@f,w
  6823  0239  0084               	movwf	4
  6824  023A  120A  158A  2000  120A  118A  	fcall	stringdir
  6825  023F  160A  118A  27EE  120A  118A  	fcall	i1_isdigit
  6826  0244  1803               	btfsc	3,0
  6827  0245  2A47               	goto	u220_21
  6828  0246  2A48               	goto	u220_20
  6829  0247                     u220_21:	
  6830  0247  2A0C               	goto	i1l3031
  6831  0248                     u220_20:	
  6832  0248                     i1l3041:	
  6833  0248  3001               	movlw	1
  6834  0249  1283               	bcf	3,5	;RP0=0, select bank0
  6835  024A  1303               	bcf	3,6	;RP1=0, select bank0
  6836  024B  07A0               	addwf	i1sprintf@f,f
  6837  024C  30FF               	movlw	-1
  6838  024D  0720               	addwf	i1sprintf@f,w
  6839  024E  0084               	movwf	4
  6840  024F  120A  158A  2000  120A  118A  	fcall	stringdir
  6841  0254  00B0               	movwf	i1sprintf@c
  6842  0255  00A5               	movwf	??i1_sprintf
  6843  0256  01A6               	clrf	??i1_sprintf+1
  6844                           
  6845                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6846                           ; Switch size 1, requested type "simple"
  6847                           ; Number of cases is 1, Range of values is 0 to 0
  6848                           ; switch strategies available:
  6849                           ; Name         Instructions Cycles
  6850                           ; simple_byte            4     3 (average)
  6851                           ; direct_byte           11     8 (fixed)
  6852                           ; jumptable            260     6 (fixed)
  6853                           ;	Chosen strategy is simple_byte
  6854  0257  0826               	movf	??i1_sprintf+1,w
  6855  0258  3A00               	xorlw	0	; case 0
  6856  0259  1903               	skipnz
  6857  025A  2A5C               	goto	i1l4091
  6858  025B  2B4A               	goto	i1l3099
  6859  025C                     i1l4091:	
  6860                           
  6861                           ; Switch size 1, requested type "simple"
  6862                           ; Number of cases is 3, Range of values is 0 to 105
  6863                           ; switch strategies available:
  6864                           ; Name         Instructions Cycles
  6865                           ; simple_byte           10     6 (average)
  6866                           ; jumptable            260     6 (fixed)
  6867                           ;	Chosen strategy is simple_byte
  6868  025C  0825               	movf	??i1_sprintf,w
  6869  025D  3A00               	xorlw	0	; case 0
  6870  025E  1903               	skipnz
  6871  025F  2B5C               	goto	i1l3101
  6872  0260  3A64               	xorlw	100	; case 100
  6873  0261  1903               	skipnz
  6874  0262  2A67               	goto	i1l3043
  6875  0263  3A0D               	xorlw	13	; case 105
  6876  0264  1903               	skipnz
  6877  0265  2A67               	goto	i1l3043
  6878  0266  2B4A               	goto	i1l3099
  6879  0267                     i1l3043:	
  6880                           
  6881                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1279:   {;C
      +                          :\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1285:     val
      +                           = (unsigned int)(*(int *)__va_arg((*(int **)ap), (int)0));
  6882  0267  0828               	movf	i1sprintf@ap,w
  6883  0268  0084               	movwf	4
  6884  0269  1383               	bcf	3,7	;select IRP bank0
  6885  026A  0800               	movf	0,w
  6886  026B  00AB               	movwf	i1sprintf@val
  6887  026C  0A84               	incf	4,f
  6888  026D  0800               	movf	0,w
  6889  026E  00AC               	movwf	i1sprintf@val+1
  6890  026F                     i1l3045:	
  6891  026F  3002               	movlw	2
  6892  0270  00A5               	movwf	??i1_sprintf
  6893  0271  0825               	movf	??i1_sprintf,w
  6894  0272  07A8               	addwf	i1sprintf@ap,f
  6895  0273                     i1l3047:	
  6896                           
  6897                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1287:    if
      +                          ((int)val < 0) {
  6898  0273  1FAC               	btfss	i1sprintf@val+1,7
  6899  0274  2A76               	goto	u221_21
  6900  0275  2A77               	goto	u221_20
  6901  0276                     u221_21:	
  6902  0276  2A80               	goto	i1l3053
  6903  0277                     u221_20:	
  6904  0277                     i1l3049:	
  6905                           
  6906                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1288:     f
      +                          lag |= 0x03;
  6907  0277  3003               	movlw	3
  6908  0278  00A5               	movwf	??i1_sprintf
  6909  0279  0825               	movf	??i1_sprintf,w
  6910  027A  04AA               	iorwf	i1sprintf@flag,f
  6911  027B                     i1l3051:	
  6912                           
  6913                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1289:     v
      +                          al = -val;
  6914  027B  09AB               	comf	i1sprintf@val,f
  6915  027C  09AC               	comf	i1sprintf@val+1,f
  6916  027D  0AAB               	incf	i1sprintf@val,f
  6917  027E  1903               	skipnz
  6918  027F  0AAC               	incf	i1sprintf@val+1,f
  6919  0280                     i1l3053:	
  6920                           
  6921                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1292:   };C
      +                          :\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1331:    for(
      +                          c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  6922  0280  01B0               	clrf	i1sprintf@c
  6923  0281  0AB0               	incf	i1sprintf@c,f
  6924  0282                     i1l3059:	
  6925                           
  6926                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1332:     i
      +                          f(val < dpowers[c])
  6927  0282  0830               	movf	i1sprintf@c,w
  6928  0283  00A5               	movwf	??i1_sprintf
  6929  0284  0725               	addwf	??i1_sprintf,w
  6930  0285  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  6931  0286  0084               	movwf	4
  6932  0287  120A  158A  2000  120A  118A  	fcall	stringdir
  6933  028C  00A6               	movwf	??i1_sprintf+1
  6934  028D  120A  158A  2000  120A  118A  	fcall	stringdir
  6935  0292  00A7               	movwf	??i1_sprintf+2
  6936  0293  0827               	movf	??i1_sprintf+2,w
  6937  0294  022C               	subwf	i1sprintf@val+1,w
  6938  0295  1D03               	skipz
  6939  0296  2A99               	goto	u222_25
  6940  0297  0826               	movf	??i1_sprintf+1,w
  6941  0298  022B               	subwf	i1sprintf@val,w
  6942  0299                     u222_25:	
  6943  0299  1803               	skipnc
  6944  029A  2A9C               	goto	u222_21
  6945  029B  2A9D               	goto	u222_20
  6946  029C                     u222_21:	
  6947  029C  2A9E               	goto	i1l3063
  6948  029D                     u222_20:	
  6949  029D  2AA8               	goto	i1l3065
  6950  029E                     i1l3063:	
  6951  029E  3001               	movlw	1
  6952  029F  00A5               	movwf	??i1_sprintf
  6953  02A0  0825               	movf	??i1_sprintf,w
  6954  02A1  07B0               	addwf	i1sprintf@c,f
  6955  02A2  3005               	movlw	5
  6956  02A3  0630               	xorwf	i1sprintf@c,w
  6957  02A4  1D03               	btfss	3,2
  6958  02A5  2AA7               	goto	u223_21
  6959  02A6  2AA8               	goto	u223_20
  6960  02A7                     u223_21:	
  6961  02A7  2A82               	goto	i1l3059
  6962  02A8                     u223_20:	
  6963  02A8                     i1l3065:	
  6964                           
  6965                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1371:   if(
      +                          width && flag & 0x03)
  6966  02A8  082E               	movf	i1sprintf@width,w
  6967  02A9  042F               	iorwf	i1sprintf@width+1,w
  6968  02AA  1903               	btfsc	3,2
  6969  02AB  2AAD               	goto	u224_21
  6970  02AC  2AAE               	goto	u224_20
  6971  02AD                     u224_21:	
  6972  02AD  2ABA               	goto	i1l651
  6973  02AE                     u224_20:	
  6974  02AE                     i1l3067:	
  6975  02AE  082A               	movf	i1sprintf@flag,w
  6976  02AF  3903               	andlw	3
  6977  02B0  1903               	btfsc	3,2
  6978  02B1  2AB3               	goto	u225_21
  6979  02B2  2AB4               	goto	u225_20
  6980  02B3                     u225_21:	
  6981  02B3  2ABA               	goto	i1l651
  6982  02B4                     u225_20:	
  6983  02B4                     i1l3069:	
  6984                           
  6985                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1372:    wi
      +                          dth--;
  6986  02B4  30FF               	movlw	255
  6987  02B5  07AE               	addwf	i1sprintf@width,f
  6988  02B6  1803               	skipnc
  6989  02B7  0AAF               	incf	i1sprintf@width+1,f
  6990  02B8  30FF               	movlw	255
  6991  02B9  07AF               	addwf	i1sprintf@width+1,f
  6992  02BA                     i1l651:	
  6993                           
  6994                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1407:   if(
      +                          width > c)
  6995  02BA  082F               	movf	i1sprintf@width+1,w
  6996  02BB  3A80               	xorlw	128
  6997  02BC  3C80               	sublw	128
  6998  02BD  1D03               	skipz
  6999  02BE  2AC1               	goto	u226_25
  7000  02BF  082E               	movf	i1sprintf@width,w
  7001  02C0  0230               	subwf	i1sprintf@c,w
  7002  02C1                     u226_25:	
  7003  02C1  1803               	skipnc
  7004  02C2  2AC4               	goto	u226_21
  7005  02C3  2AC5               	goto	u226_20
  7006  02C4                     u226_21:	
  7007  02C4  2AD1               	goto	i1l3073
  7008  02C5                     u226_20:	
  7009  02C5                     i1l3071:	
  7010                           
  7011                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1408:    wi
      +                          dth -= c;
  7012  02C5  1283               	bcf	3,5	;RP0=0, select bank0
  7013  02C6  1303               	bcf	3,6	;RP1=0, select bank0
  7014  02C7  0830               	movf	i1sprintf@c,w
  7015  02C8  00A5               	movwf	??i1_sprintf
  7016  02C9  01A6               	clrf	??i1_sprintf+1
  7017  02CA  0825               	movf	??i1_sprintf,w
  7018  02CB  02AE               	subwf	i1sprintf@width,f
  7019  02CC  0826               	movf	??i1_sprintf+1,w
  7020  02CD  1C03               	skipc
  7021  02CE  03AF               	decf	i1sprintf@width+1,f
  7022  02CF  02AF               	subwf	i1sprintf@width+1,f
  7023  02D0  2AD5               	goto	i1l3075
  7024  02D1                     i1l3073:	
  7025                           
  7026                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1410:    wi
      +                          dth = 0;
  7027  02D1  1283               	bcf	3,5	;RP0=0, select bank0
  7028  02D2  1303               	bcf	3,6	;RP1=0, select bank0
  7029  02D3  01AE               	clrf	i1sprintf@width
  7030  02D4  01AF               	clrf	i1sprintf@width+1
  7031  02D5                     i1l3075:	
  7032                           
  7033                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1448:   {;C
      +                          :\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1450:    if(w
      +                          idth
  7034  02D5  082E               	movf	i1sprintf@width,w
  7035  02D6  042F               	iorwf	i1sprintf@width+1,w
  7036  02D7  1903               	btfsc	3,2
  7037  02D8  2ADA               	goto	u227_21
  7038  02D9  2ADB               	goto	u227_20
  7039  02DA                     u227_21:	
  7040  02DA  2AF2               	goto	i1l3083
  7041  02DB                     u227_20:	
  7042  02DB                     i1l3077:	
  7043                           
  7044                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1456:      
      +                          ((*sp++ = (' ')));
  7045  02DB  3020               	movlw	32
  7046  02DC  00A5               	movwf	??i1_sprintf
  7047  02DD  082D               	movf	i1sprintf@sp,w
  7048  02DE  0084               	movwf	4
  7049  02DF  0825               	movf	??i1_sprintf,w
  7050  02E0  1383               	bcf	3,7	;select IRP bank0
  7051  02E1  0080               	movwf	0
  7052  02E2                     i1l3079:	
  7053  02E2  3001               	movlw	1
  7054  02E3  00A5               	movwf	??i1_sprintf
  7055  02E4  0825               	movf	??i1_sprintf,w
  7056  02E5  07AD               	addwf	i1sprintf@sp,f
  7057  02E6                     i1l3081:	
  7058  02E6  30FF               	movlw	255
  7059  02E7  07AE               	addwf	i1sprintf@width,f
  7060  02E8  1803               	skipnc
  7061  02E9  0AAF               	incf	i1sprintf@width+1,f
  7062  02EA  30FF               	movlw	255
  7063  02EB  07AF               	addwf	i1sprintf@width+1,f
  7064  02EC  082E               	movf	i1sprintf@width,w
  7065  02ED  042F               	iorwf	i1sprintf@width+1,w
  7066  02EE  1D03               	btfss	3,2
  7067  02EF  2AF1               	goto	u228_21
  7068  02F0  2AF2               	goto	u228_20
  7069  02F1                     u228_21:	
  7070  02F1  2ADB               	goto	i1l3077
  7071  02F2                     u228_20:	
  7072  02F2                     i1l3083:	
  7073                           
  7074                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1464:    if
      +                          (flag & 0x03)
  7075  02F2  082A               	movf	i1sprintf@flag,w
  7076  02F3  3903               	andlw	3
  7077  02F4  1903               	btfsc	3,2
  7078  02F5  2AF7               	goto	u229_21
  7079  02F6  2AF8               	goto	u229_20
  7080  02F7                     u229_21:	
  7081  02F7  2B03               	goto	i1l3089
  7082  02F8                     u229_20:	
  7083  02F8                     i1l3085:	
  7084                           
  7085                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1465:     (
      +                          (*sp++ = ('-')));
  7086  02F8  302D               	movlw	45
  7087  02F9  00A5               	movwf	??i1_sprintf
  7088  02FA  082D               	movf	i1sprintf@sp,w
  7089  02FB  0084               	movwf	4
  7090  02FC  0825               	movf	??i1_sprintf,w
  7091  02FD  1383               	bcf	3,7	;select IRP bank0
  7092  02FE  0080               	movwf	0
  7093  02FF                     i1l3087:	
  7094  02FF  3001               	movlw	1
  7095  0300  00A5               	movwf	??i1_sprintf
  7096  0301  0825               	movf	??i1_sprintf,w
  7097  0302  07AD               	addwf	i1sprintf@sp,f
  7098  0303                     i1l3089:	
  7099                           
  7100                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1495:   };C
      +                          :\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1498:   prec 
      +                          = c;
  7101  0303  0830               	movf	i1sprintf@c,w
  7102  0304  00A5               	movwf	??i1_sprintf
  7103  0305  0825               	movf	??i1_sprintf,w
  7104  0306  00A9               	movwf	i1sprintf@prec
  7105                           
  7106                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1500:   whi
      +                          le(prec--) {
  7107  0307  2B41               	goto	i1l3097
  7108  0308                     i1l3091:	
  7109                           
  7110                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1504:    {;
      +                          C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1515:     c 
      +                          = (val / dpowers[(unsigned char)prec]) % 10 + '0';
  7111  0308  300A               	movlw	10
  7112  0309  00F8               	movwf	i1___lwmod@divisor
  7113  030A  3000               	movlw	0
  7114  030B  00F9               	movwf	i1___lwmod@divisor+1
  7115  030C  0829               	movf	i1sprintf@prec,w
  7116  030D  00A5               	movwf	??i1_sprintf
  7117  030E  0725               	addwf	??i1_sprintf,w
  7118  030F  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  7119  0310  0084               	movwf	4
  7120  0311  120A  158A  2000  120A  118A  	fcall	stringdir
  7121  0316  00F0               	movwf	i1___lwdiv@divisor
  7122  0317  120A  158A  2000  120A  118A  	fcall	stringdir
  7123  031C  00F1               	movwf	i1___lwdiv@divisor+1
  7124  031D  082C               	movf	i1sprintf@val+1,w
  7125  031E  00F3               	movwf	i1___lwdiv@dividend+1
  7126  031F  082B               	movf	i1sprintf@val,w
  7127  0320  00F2               	movwf	i1___lwdiv@dividend
  7128  0321  120A  158A  22C9  120A  118A  	fcall	i1___lwdiv
  7129  0326  0871               	movf	?i1___lwdiv+1,w
  7130  0327  00FB               	movwf	i1___lwmod@dividend+1
  7131  0328  0870               	movf	?i1___lwdiv,w
  7132  0329  00FA               	movwf	i1___lwmod@dividend
  7133  032A  120A  158A  228F  120A  118A  	fcall	i1___lwmod
  7134  032F  0878               	movf	?i1___lwmod,w
  7135  0330  3E30               	addlw	48
  7136  0331  1283               	bcf	3,5	;RP0=0, select bank0
  7137  0332  1303               	bcf	3,6	;RP1=0, select bank0
  7138  0333  00A6               	movwf	??i1_sprintf+1
  7139  0334  0826               	movf	??i1_sprintf+1,w
  7140  0335  00B0               	movwf	i1sprintf@c
  7141  0336                     i1l3093:	
  7142                           
  7143                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1549:    };
      +                          C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1550:    ((*
      +                          sp++ = (c)));
  7144  0336  0830               	movf	i1sprintf@c,w
  7145  0337  00A5               	movwf	??i1_sprintf
  7146  0338  082D               	movf	i1sprintf@sp,w
  7147  0339  0084               	movwf	4
  7148  033A  0825               	movf	??i1_sprintf,w
  7149  033B  1383               	bcf	3,7	;select IRP bank0
  7150  033C  0080               	movwf	0
  7151  033D                     i1l3095:	
  7152  033D  3001               	movlw	1
  7153  033E  00A5               	movwf	??i1_sprintf
  7154  033F  0825               	movf	??i1_sprintf,w
  7155  0340  07AD               	addwf	i1sprintf@sp,f
  7156  0341                     i1l3097:	
  7157                           
  7158                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1500:   whi
      +                          le(prec--) {
  7159  0341  30FF               	movlw	255
  7160  0342  00A5               	movwf	??i1_sprintf
  7161  0343  0825               	movf	??i1_sprintf,w
  7162  0344  07A9               	addwf	i1sprintf@prec,f
  7163  0345  0A29               	incf	i1sprintf@prec,w
  7164  0346  1D03               	btfss	3,2
  7165  0347  2B49               	goto	u230_21
  7166  0348  2B4A               	goto	u230_20
  7167  0349                     u230_21:	
  7168  0349  2B08               	goto	i1l3091
  7169  034A                     u230_20:	
  7170  034A                     i1l3099:	
  7171                           
  7172                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 553:  while
      +                          ((c = *f++)) {
  7173  034A  3001               	movlw	1
  7174  034B  07A0               	addwf	i1sprintf@f,f
  7175  034C  30FF               	movlw	-1
  7176  034D  0720               	addwf	i1sprintf@f,w
  7177  034E  0084               	movwf	4
  7178  034F  120A  158A  2000  120A  118A  	fcall	stringdir
  7179  0354  00A5               	movwf	??i1_sprintf
  7180  0355  0825               	movf	??i1_sprintf,w
  7181  0356  00B0               	movwf	i1sprintf@c
  7182  0357  0830               	movf	i1sprintf@c,w
  7183  0358  1D03               	btfss	3,2
  7184  0359  2B5B               	goto	u231_21
  7185  035A  2B5C               	goto	u231_20
  7186  035B                     u231_21:	
  7187  035B  29E3               	goto	i1l3019
  7188  035C                     u231_20:	
  7189  035C                     i1l3101:	
  7190                           
  7191                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1564:  *sp 
      +                          = 0;
  7192  035C  082D               	movf	i1sprintf@sp,w
  7193  035D  0084               	movwf	4
  7194  035E  1383               	bcf	3,7	;select IRP bank0
  7195  035F  0180               	clrf	0
  7196  0360                     i1l662:	
  7197  0360  0008               	return
  7198  0361                     __end_ofi1_sprintf:	
  7199                           
  7200                           	psect	text33
  7201  17EE                     __ptext33:	
  7202 ;; *************** function i1_isdigit *****************
  7203 ;; Defined at:
  7204 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\isdigit.c"
  7205 ;; Parameters:    Size  Location     Type
  7206 ;;  c               1    wreg     unsigned char 
  7207 ;; Auto vars:     Size  Location     Type
  7208 ;;  c               1    1[COMMON] unsigned char 
  7209 ;; Return value:  Size  Location     Type
  7210 ;;		None               void
  7211 ;; Registers used:
  7212 ;;		wreg, status,2, status,0
  7213 ;; Tracked objects:
  7214 ;;		On entry : 0/0
  7215 ;;		On exit  : 0/0
  7216 ;;		Unchanged: 0/0
  7217 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7218 ;;      Params:         0       0       0       0       0
  7219 ;;      Locals:         2       0       0       0       0
  7220 ;;      Temps:          0       0       0       0       0
  7221 ;;      Totals:         2       0       0       0       0
  7222 ;;Total ram usage:        2 bytes
  7223 ;; Hardware stack levels used:    1
  7224 ;; This function calls:
  7225 ;;		Nothing
  7226 ;; This function is called by:
  7227 ;;		i1_sprintf
  7228 ;; This function uses a non-reentrant model
  7229 ;;
  7230                           
  7231                           
  7232                           ;psect for function i1_isdigit
  7233  17EE                     i1_isdigit:	
  7234                           
  7235                           ;incstack = 0
  7236 ;; hardware stack exceeded
  7237                           ; Regs used in i1_isdigit: [wreg+status,2+status,0]
  7238                           ;i1isdigit@c stored from wreg
  7239  17EE  00F1               	movwf	i1isdigit@c
  7240  17EF                     i1l2823:	
  7241  17EF  01F0               	clrf	i1_isdigit$1104
  7242  17F0                     i1l2825:	
  7243  17F0  303A               	movlw	58
  7244  17F1  0271               	subwf	i1isdigit@c,w
  7245  17F2  1803               	skipnc
  7246  17F3  2FF5               	goto	u206_21
  7247  17F4  2FF6               	goto	u206_20
  7248  17F5                     u206_21:	
  7249  17F5  2FFE               	goto	i1l2831
  7250  17F6                     u206_20:	
  7251  17F6                     i1l2827:	
  7252  17F6  3030               	movlw	48
  7253  17F7  0271               	subwf	i1isdigit@c,w
  7254  17F8  1C03               	skipc
  7255  17F9  2FFB               	goto	u207_21
  7256  17FA  2FFC               	goto	u207_20
  7257  17FB                     u207_21:	
  7258  17FB  2FFE               	goto	i1l2831
  7259  17FC                     u207_20:	
  7260  17FC                     i1l2829:	
  7261  17FC  01F0               	clrf	i1_isdigit$1104
  7262  17FD  0AF0               	incf	i1_isdigit$1104,f
  7263  17FE                     i1l2831:	
  7264  17FE  0C70               	rrf	i1_isdigit$1104,w
  7265  17FF                     i1l1113:	
  7266  17FF  0008               	return
  7267  1800                     __end_ofi1_isdigit:	
  7268                           
  7269                           	psect	text34
  7270  096E                     __ptext34:	
  7271 ;; *************** function i1___wmul *****************
  7272 ;; Defined at:
  7273 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\Umul16.c"
  7274 ;; Parameters:    Size  Location     Type
  7275 ;;  multiplier      2    0[COMMON] unsigned int 
  7276 ;;  multiplicand    2    2[COMMON] unsigned int 
  7277 ;; Auto vars:     Size  Location     Type
  7278 ;;  __wmul          2    4[COMMON] unsigned int 
  7279 ;; Return value:  Size  Location     Type
  7280 ;;                  2    0[COMMON] unsigned int 
  7281 ;; Registers used:
  7282 ;;		wreg, status,2, status,0
  7283 ;; Tracked objects:
  7284 ;;		On entry : 0/0
  7285 ;;		On exit  : 0/0
  7286 ;;		Unchanged: 0/0
  7287 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7288 ;;      Params:         4       0       0       0       0
  7289 ;;      Locals:         2       0       0       0       0
  7290 ;;      Temps:          0       0       0       0       0
  7291 ;;      Totals:         6       0       0       0       0
  7292 ;;Total ram usage:        6 bytes
  7293 ;; Hardware stack levels used:    1
  7294 ;; This function calls:
  7295 ;;		Nothing
  7296 ;; This function is called by:
  7297 ;;		i1_sprintf
  7298 ;; This function uses a non-reentrant model
  7299 ;;
  7300                           
  7301                           
  7302                           ;psect for function i1___wmul
  7303  096E                     i1___wmul:	
  7304  096E                     i1l2761:	
  7305                           ;incstack = 0
  7306 ;; hardware stack exceeded
  7307                           ; Regs used in i1___wmul: [wreg+status,2+status,0]
  7308                           
  7309  096E  01F4               	clrf	i1___wmul@product
  7310  096F  01F5               	clrf	i1___wmul@product+1
  7311  0970                     i1l2763:	
  7312  0970  1C70               	btfss	i1___wmul@multiplier,0
  7313  0971  2973               	goto	u189_21
  7314  0972  2974               	goto	u189_20
  7315  0973                     u189_21:	
  7316  0973  297A               	goto	i1l666
  7317  0974                     u189_20:	
  7318  0974                     i1l2765:	
  7319  0974  0872               	movf	i1___wmul@multiplicand,w
  7320  0975  07F4               	addwf	i1___wmul@product,f
  7321  0976  1803               	skipnc
  7322  0977  0AF5               	incf	i1___wmul@product+1,f
  7323  0978  0873               	movf	i1___wmul@multiplicand+1,w
  7324  0979  07F5               	addwf	i1___wmul@product+1,f
  7325  097A                     i1l666:	
  7326  097A  3001               	movlw	1
  7327  097B                     u190_25:	
  7328  097B  1003               	clrc
  7329  097C  0DF2               	rlf	i1___wmul@multiplicand,f
  7330  097D  0DF3               	rlf	i1___wmul@multiplicand+1,f
  7331  097E  3EFF               	addlw	-1
  7332  097F  1D03               	skipz
  7333  0980  297B               	goto	u190_25
  7334  0981                     i1l2767:	
  7335  0981  3001               	movlw	1
  7336  0982                     u191_25:	
  7337  0982  1003               	clrc
  7338  0983  0CF1               	rrf	i1___wmul@multiplier+1,f
  7339  0984  0CF0               	rrf	i1___wmul@multiplier,f
  7340  0985  3EFF               	addlw	-1
  7341  0986  1D03               	skipz
  7342  0987  2982               	goto	u191_25
  7343  0988                     i1l2769:	
  7344  0988  0870               	movf	i1___wmul@multiplier,w
  7345  0989  0471               	iorwf	i1___wmul@multiplier+1,w
  7346  098A  1D03               	btfss	3,2
  7347  098B  298D               	goto	u192_21
  7348  098C  298E               	goto	u192_20
  7349  098D                     u192_21:	
  7350  098D  2970               	goto	i1l2763
  7351  098E                     u192_20:	
  7352  098E                     i1l2771:	
  7353  098E  0875               	movf	i1___wmul@product+1,w
  7354  098F  00F1               	movwf	?i1___wmul+1
  7355  0990  0874               	movf	i1___wmul@product,w
  7356  0991  00F0               	movwf	?i1___wmul
  7357  0992                     i1l668:	
  7358  0992  0008               	return
  7359  0993                     __end_ofi1___wmul:	
  7360                           
  7361                           	psect	text35
  7362  0A8F                     __ptext35:	
  7363 ;; *************** function i1___lwmod *****************
  7364 ;; Defined at:
  7365 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\lwmod.c"
  7366 ;; Parameters:    Size  Location     Type
  7367 ;;  divisor         2    8[COMMON] unsigned int 
  7368 ;;  dividend        2   10[COMMON] unsigned int 
  7369 ;; Auto vars:     Size  Location     Type
  7370 ;;  __lwmod         1   13[COMMON] unsigned char 
  7371 ;; Return value:  Size  Location     Type
  7372 ;;                  2    8[COMMON] unsigned int 
  7373 ;; Registers used:
  7374 ;;		wreg, status,2, status,0
  7375 ;; Tracked objects:
  7376 ;;		On entry : 0/0
  7377 ;;		On exit  : 0/0
  7378 ;;		Unchanged: 0/0
  7379 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7380 ;;      Params:         4       0       0       0       0
  7381 ;;      Locals:         1       0       0       0       0
  7382 ;;      Temps:          1       0       0       0       0
  7383 ;;      Totals:         6       0       0       0       0
  7384 ;;Total ram usage:        6 bytes
  7385 ;; Hardware stack levels used:    1
  7386 ;; This function calls:
  7387 ;;		Nothing
  7388 ;; This function is called by:
  7389 ;;		_updateLCD
  7390 ;;		i1_sprintf
  7391 ;; This function uses a non-reentrant model
  7392 ;;
  7393                           
  7394                           
  7395                           ;psect for function i1___lwmod
  7396  0A8F                     i1___lwmod:	
  7397  0A8F                     i1l2801:	
  7398                           ;incstack = 0
  7399 ;; hardware stack exceeded
  7400                           ; Regs used in i1___lwmod: [wreg+status,2+status,0]
  7401                           
  7402  0A8F  0878               	movf	i1___lwmod@divisor,w
  7403  0A90  0479               	iorwf	i1___lwmod@divisor+1,w
  7404  0A91  1903               	btfsc	3,2
  7405  0A92  2A94               	goto	u200_21
  7406  0A93  2A95               	goto	u200_20
  7407  0A94                     u200_21:	
  7408  0A94  2AC4               	goto	i1l2819
  7409  0A95                     u200_20:	
  7410  0A95                     i1l2803:	
  7411  0A95  01FD               	clrf	i1___lwmod@counter
  7412  0A96  0AFD               	incf	i1___lwmod@counter,f
  7413  0A97  2AA3               	goto	i1l2809
  7414  0A98                     i1l2805:	
  7415  0A98  3001               	movlw	1
  7416  0A99                     u201_25:	
  7417  0A99  1003               	clrc
  7418  0A9A  0DF8               	rlf	i1___lwmod@divisor,f
  7419  0A9B  0DF9               	rlf	i1___lwmod@divisor+1,f
  7420  0A9C  3EFF               	addlw	-1
  7421  0A9D  1D03               	skipz
  7422  0A9E  2A99               	goto	u201_25
  7423  0A9F                     i1l2807:	
  7424  0A9F  3001               	movlw	1
  7425  0AA0  00FC               	movwf	??i1___lwmod
  7426  0AA1  087C               	movf	??i1___lwmod,w
  7427  0AA2  07FD               	addwf	i1___lwmod@counter,f
  7428  0AA3                     i1l2809:	
  7429  0AA3  1FF9               	btfss	i1___lwmod@divisor+1,7
  7430  0AA4  2AA6               	goto	u202_21
  7431  0AA5  2AA7               	goto	u202_20
  7432  0AA6                     u202_21:	
  7433  0AA6  2A98               	goto	i1l2805
  7434  0AA7                     u202_20:	
  7435  0AA7                     i1l2811:	
  7436  0AA7  0879               	movf	i1___lwmod@divisor+1,w
  7437  0AA8  027B               	subwf	i1___lwmod@dividend+1,w
  7438  0AA9  1D03               	skipz
  7439  0AAA  2AAD               	goto	u203_25
  7440  0AAB  0878               	movf	i1___lwmod@divisor,w
  7441  0AAC  027A               	subwf	i1___lwmod@dividend,w
  7442  0AAD                     u203_25:	
  7443  0AAD  1C03               	skipc
  7444  0AAE  2AB0               	goto	u203_21
  7445  0AAF  2AB1               	goto	u203_20
  7446  0AB0                     u203_21:	
  7447  0AB0  2AB7               	goto	i1l2815
  7448  0AB1                     u203_20:	
  7449  0AB1                     i1l2813:	
  7450  0AB1  0878               	movf	i1___lwmod@divisor,w
  7451  0AB2  02FA               	subwf	i1___lwmod@dividend,f
  7452  0AB3  0879               	movf	i1___lwmod@divisor+1,w
  7453  0AB4  1C03               	skipc
  7454  0AB5  03FB               	decf	i1___lwmod@dividend+1,f
  7455  0AB6  02FB               	subwf	i1___lwmod@dividend+1,f
  7456  0AB7                     i1l2815:	
  7457  0AB7  3001               	movlw	1
  7458  0AB8                     u204_25:	
  7459  0AB8  1003               	clrc
  7460  0AB9  0CF9               	rrf	i1___lwmod@divisor+1,f
  7461  0ABA  0CF8               	rrf	i1___lwmod@divisor,f
  7462  0ABB  3EFF               	addlw	-1
  7463  0ABC  1D03               	skipz
  7464  0ABD  2AB8               	goto	u204_25
  7465  0ABE                     i1l2817:	
  7466  0ABE  3001               	movlw	1
  7467  0ABF  02FD               	subwf	i1___lwmod@counter,f
  7468  0AC0  1D03               	btfss	3,2
  7469  0AC1  2AC3               	goto	u205_21
  7470  0AC2  2AC4               	goto	u205_20
  7471  0AC3                     u205_21:	
  7472  0AC3  2AA7               	goto	i1l2811
  7473  0AC4                     u205_20:	
  7474  0AC4                     i1l2819:	
  7475  0AC4  087B               	movf	i1___lwmod@dividend+1,w
  7476  0AC5  00F9               	movwf	?i1___lwmod+1
  7477  0AC6  087A               	movf	i1___lwmod@dividend,w
  7478  0AC7  00F8               	movwf	?i1___lwmod
  7479  0AC8                     i1l948:	
  7480  0AC8  0008               	return
  7481  0AC9                     __end_ofi1___lwmod:	
  7482                           
  7483                           	psect	text36
  7484  0AC9                     __ptext36:	
  7485 ;; *************** function i1___lwdiv *****************
  7486 ;; Defined at:
  7487 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\lwdiv.c"
  7488 ;; Parameters:    Size  Location     Type
  7489 ;;  divisor         2    0[COMMON] unsigned int 
  7490 ;;  dividend        2    2[COMMON] unsigned int 
  7491 ;; Auto vars:     Size  Location     Type
  7492 ;;  __lwdiv         2    5[COMMON] unsigned int 
  7493 ;;  __lwdiv         1    7[COMMON] unsigned char 
  7494 ;; Return value:  Size  Location     Type
  7495 ;;                  2    0[COMMON] unsigned int 
  7496 ;; Registers used:
  7497 ;;		wreg, status,2, status,0
  7498 ;; Tracked objects:
  7499 ;;		On entry : 0/0
  7500 ;;		On exit  : 0/0
  7501 ;;		Unchanged: 0/0
  7502 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7503 ;;      Params:         4       0       0       0       0
  7504 ;;      Locals:         3       0       0       0       0
  7505 ;;      Temps:          1       0       0       0       0
  7506 ;;      Totals:         8       0       0       0       0
  7507 ;;Total ram usage:        8 bytes
  7508 ;; Hardware stack levels used:    1
  7509 ;; This function calls:
  7510 ;;		Nothing
  7511 ;; This function is called by:
  7512 ;;		_updateLCD
  7513 ;;		i1_sprintf
  7514 ;; This function uses a non-reentrant model
  7515 ;;
  7516                           
  7517                           
  7518                           ;psect for function i1___lwdiv
  7519  0AC9                     i1___lwdiv:	
  7520  0AC9                     i1l2775:	
  7521                           ;incstack = 0
  7522 ;; hardware stack exceeded
  7523                           ; Regs used in i1___lwdiv: [wreg+status,2+status,0]
  7524                           
  7525  0AC9  01F5               	clrf	i1___lwdiv@quotient
  7526  0ACA  01F6               	clrf	i1___lwdiv@quotient+1
  7527  0ACB                     i1l2777:	
  7528  0ACB  0870               	movf	i1___lwdiv@divisor,w
  7529  0ACC  0471               	iorwf	i1___lwdiv@divisor+1,w
  7530  0ACD  1903               	btfsc	3,2
  7531  0ACE  2AD0               	goto	u193_21
  7532  0ACF  2AD1               	goto	u193_20
  7533  0AD0                     u193_21:	
  7534  0AD0  2B08               	goto	i1l2797
  7535  0AD1                     u193_20:	
  7536  0AD1                     i1l2779:	
  7537  0AD1  01F7               	clrf	i1___lwdiv@counter
  7538  0AD2  0AF7               	incf	i1___lwdiv@counter,f
  7539  0AD3  2ADF               	goto	i1l2785
  7540  0AD4                     i1l2781:	
  7541  0AD4  3001               	movlw	1
  7542  0AD5                     u194_25:	
  7543  0AD5  1003               	clrc
  7544  0AD6  0DF0               	rlf	i1___lwdiv@divisor,f
  7545  0AD7  0DF1               	rlf	i1___lwdiv@divisor+1,f
  7546  0AD8  3EFF               	addlw	-1
  7547  0AD9  1D03               	skipz
  7548  0ADA  2AD5               	goto	u194_25
  7549  0ADB                     i1l2783:	
  7550  0ADB  3001               	movlw	1
  7551  0ADC  00F4               	movwf	??i1___lwdiv
  7552  0ADD  0874               	movf	??i1___lwdiv,w
  7553  0ADE  07F7               	addwf	i1___lwdiv@counter,f
  7554  0ADF                     i1l2785:	
  7555  0ADF  1FF1               	btfss	i1___lwdiv@divisor+1,7
  7556  0AE0  2AE2               	goto	u195_21
  7557  0AE1  2AE3               	goto	u195_20
  7558  0AE2                     u195_21:	
  7559  0AE2  2AD4               	goto	i1l2781
  7560  0AE3                     u195_20:	
  7561  0AE3                     i1l2787:	
  7562  0AE3  3001               	movlw	1
  7563  0AE4                     u196_25:	
  7564  0AE4  1003               	clrc
  7565  0AE5  0DF5               	rlf	i1___lwdiv@quotient,f
  7566  0AE6  0DF6               	rlf	i1___lwdiv@quotient+1,f
  7567  0AE7  3EFF               	addlw	-1
  7568  0AE8  1D03               	skipz
  7569  0AE9  2AE4               	goto	u196_25
  7570  0AEA  0871               	movf	i1___lwdiv@divisor+1,w
  7571  0AEB  0273               	subwf	i1___lwdiv@dividend+1,w
  7572  0AEC  1D03               	skipz
  7573  0AED  2AF0               	goto	u197_25
  7574  0AEE  0870               	movf	i1___lwdiv@divisor,w
  7575  0AEF  0272               	subwf	i1___lwdiv@dividend,w
  7576  0AF0                     u197_25:	
  7577  0AF0  1C03               	skipc
  7578  0AF1  2AF3               	goto	u197_21
  7579  0AF2  2AF4               	goto	u197_20
  7580  0AF3                     u197_21:	
  7581  0AF3  2AFB               	goto	i1l2793
  7582  0AF4                     u197_20:	
  7583  0AF4                     i1l2789:	
  7584  0AF4  0870               	movf	i1___lwdiv@divisor,w
  7585  0AF5  02F2               	subwf	i1___lwdiv@dividend,f
  7586  0AF6  0871               	movf	i1___lwdiv@divisor+1,w
  7587  0AF7  1C03               	skipc
  7588  0AF8  03F3               	decf	i1___lwdiv@dividend+1,f
  7589  0AF9  02F3               	subwf	i1___lwdiv@dividend+1,f
  7590  0AFA                     i1l2791:	
  7591  0AFA  1475               	bsf	i1___lwdiv@quotient,0
  7592  0AFB                     i1l2793:	
  7593  0AFB  3001               	movlw	1
  7594  0AFC                     u198_25:	
  7595  0AFC  1003               	clrc
  7596  0AFD  0CF1               	rrf	i1___lwdiv@divisor+1,f
  7597  0AFE  0CF0               	rrf	i1___lwdiv@divisor,f
  7598  0AFF  3EFF               	addlw	-1
  7599  0B00  1D03               	skipz
  7600  0B01  2AFC               	goto	u198_25
  7601  0B02                     i1l2795:	
  7602  0B02  3001               	movlw	1
  7603  0B03  02F7               	subwf	i1___lwdiv@counter,f
  7604  0B04  1D03               	btfss	3,2
  7605  0B05  2B07               	goto	u199_21
  7606  0B06  2B08               	goto	u199_20
  7607  0B07                     u199_21:	
  7608  0B07  2AE3               	goto	i1l2787
  7609  0B08                     u199_20:	
  7610  0B08                     i1l2797:	
  7611  0B08  0876               	movf	i1___lwdiv@quotient+1,w
  7612  0B09  00F1               	movwf	?i1___lwdiv+1
  7613  0B0A  0875               	movf	i1___lwdiv@quotient,w
  7614  0B0B  00F0               	movwf	?i1___lwdiv
  7615  0B0C                     i1l938:	
  7616  0B0C  0008               	return
  7617  0B0D                     __end_ofi1___lwdiv:	
  7618                           
  7619                           	psect	text37
  7620  094C                     __ptext37:	
  7621 ;; *************** function i1_putsXLCD *****************
  7622 ;; Defined at:
  7623 ;;		line 419 in file "lcd_pic16.c"
  7624 ;; Parameters:    Size  Location     Type
  7625 ;;  buffer          1    wreg     PTR unsigned char 
  7626 ;;		 -> lineTwo(17), lineOne(17), 
  7627 ;; Auto vars:     Size  Location     Type
  7628 ;;  buffer          1    5[COMMON] PTR unsigned char 
  7629 ;;		 -> lineTwo(17), lineOne(17), 
  7630 ;; Return value:  Size  Location     Type
  7631 ;;                  1    wreg      void 
  7632 ;; Registers used:
  7633 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7634 ;; Tracked objects:
  7635 ;;		On entry : 0/0
  7636 ;;		On exit  : 0/0
  7637 ;;		Unchanged: 0/0
  7638 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7639 ;;      Params:         0       0       0       0       0
  7640 ;;      Locals:         1       0       0       0       0
  7641 ;;      Temps:          1       0       0       0       0
  7642 ;;      Totals:         2       0       0       0       0
  7643 ;;Total ram usage:        2 bytes
  7644 ;; Hardware stack levels used:    1
  7645 ;; Hardware stack levels required when called:    2
  7646 ;; This function calls:
  7647 ;;		i1_BusyXLCD
  7648 ;;		i1_WriteDataXLCD
  7649 ;; This function is called by:
  7650 ;;		_updateLCD
  7651 ;; This function uses a non-reentrant model
  7652 ;;
  7653                           
  7654                           
  7655                           ;psect for function i1_putsXLCD
  7656  094C                     i1_putsXLCD:	
  7657                           
  7658                           ;incstack = 0
  7659 ;; hardware stack exceeded
  7660                           ; Regs used in i1_putsXLCD: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7661                           ;i1putsXLCD@buffer stored from wreg
  7662  094C  00F5               	movwf	i1putsXLCD@buffer
  7663  094D                     i1l3007:	
  7664                           
  7665                           ;lcd_pic16.c: 419: void putsXLCD(char *buffer);lcd_pic16.c: 420: {;lcd_pic16.c: 421:    
      +                               while(*buffer)
  7666  094D  2965               	goto	i1l3015
  7667  094E                     i1l3009:	
  7668  094E  160A  118A  27BE  120A  158A  	fcall	i1_BusyXLCD
  7669  0953  3A00               	xorlw	0
  7670  0954  1D03               	skipz
  7671  0955  2957               	goto	u216_21
  7672  0956  2958               	goto	u216_20
  7673  0957                     u216_21:	
  7674  0957  294E               	goto	i1l3009
  7675  0958                     u216_20:	
  7676  0958                     i1l3011:	
  7677                           
  7678                           ;lcd_pic16.c: 424:                 WriteDataXLCD(*buffer);
  7679  0958  0875               	movf	i1putsXLCD@buffer,w
  7680  0959  0084               	movwf	4
  7681  095A  1383               	bcf	3,7	;select IRP bank0
  7682  095B  0800               	movf	0,w
  7683  095C  120A  158A  2355  120A  158A  	fcall	i1_WriteDataXLCD
  7684  0961                     i1l3013:	
  7685                           
  7686                           ;lcd_pic16.c: 425:                 buffer++;
  7687  0961  3001               	movlw	1
  7688  0962  00F4               	movwf	??i1_putsXLCD
  7689  0963  0874               	movf	??i1_putsXLCD,w
  7690  0964  07F5               	addwf	i1putsXLCD@buffer,f
  7691  0965                     i1l3015:	
  7692                           
  7693                           ;lcd_pic16.c: 421:         while(*buffer)
  7694  0965  0875               	movf	i1putsXLCD@buffer,w
  7695  0966  0084               	movwf	4
  7696  0967  1383               	bcf	3,7	;select IRP bank0
  7697  0968  0800               	movf	0,w
  7698  0969  1D03               	btfss	3,2
  7699  096A  296C               	goto	u217_21
  7700  096B  296D               	goto	u217_20
  7701  096C                     u217_21:	
  7702  096C  294E               	goto	i1l3009
  7703  096D                     u217_20:	
  7704  096D                     i1l398:	
  7705  096D  0008               	return
  7706  096E                     __end_ofi1_putsXLCD:	
  7707                           
  7708                           	psect	text38
  7709  0B55                     __ptext38:	
  7710 ;; *************** function i1_WriteDataXLCD *****************
  7711 ;; Defined at:
  7712 ;;		line 110 in file "lcd_pic16.c"
  7713 ;; Parameters:    Size  Location     Type
  7714 ;;  data            1    wreg     unsigned char 
  7715 ;; Auto vars:     Size  Location     Type
  7716 ;;  data            1    3[COMMON] unsigned char 
  7717 ;; Return value:  Size  Location     Type
  7718 ;;                  1    wreg      void 
  7719 ;; Registers used:
  7720 ;;		wreg, status,2, status,0, pclath, cstack
  7721 ;; Tracked objects:
  7722 ;;		On entry : 0/0
  7723 ;;		On exit  : 0/0
  7724 ;;		Unchanged: 0/0
  7725 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7726 ;;      Params:         0       0       0       0       0
  7727 ;;      Locals:         1       0       0       0       0
  7728 ;;      Temps:          2       0       0       0       0
  7729 ;;      Totals:         3       0       0       0       0
  7730 ;;Total ram usage:        3 bytes
  7731 ;; Hardware stack levels used:    1
  7732 ;; Hardware stack levels required when called:    1
  7733 ;; This function calls:
  7734 ;;		i1_DelayFor18TCY
  7735 ;; This function is called by:
  7736 ;;		i1_putsXLCD
  7737 ;; This function uses a non-reentrant model
  7738 ;;
  7739                           
  7740                           
  7741                           ;psect for function i1_WriteDataXLCD
  7742  0B55                     i1_WriteDataXLCD:	
  7743                           
  7744                           ;incstack = 0
  7745 ;; hardware stack exceeded
  7746                           ; Regs used in i1_WriteDataXLCD: [wreg+status,2+status,0+pclath+cstack]
  7747                           ;i1WriteDataXLCD@data stored from wreg
  7748  0B55  00F3               	movwf	i1WriteDataXLCD@data
  7749  0B56                     i1l2733:	
  7750                           
  7751                           ;lcd_pic16.c: 110: void WriteDataXLCD(char data);lcd_pic16.c: 111: {;lcd_pic16.c: 125:  
      +                                 TRISB &= 0x0f;
  7752  0B56  300F               	movlw	15
  7753  0B57  00F1               	movwf	??i1_WriteDataXLCD
  7754  0B58  0871               	movf	??i1_WriteDataXLCD,w
  7755  0B59  1683               	bsf	3,5	;RP0=1, select bank1
  7756  0B5A  1303               	bcf	3,6	;RP1=0, select bank1
  7757  0B5B  0586               	andwf	6,f	;volatile
  7758                           
  7759                           ;lcd_pic16.c: 126:         PORTB &= 0x0f;
  7760  0B5C  300F               	movlw	15
  7761  0B5D  00F1               	movwf	??i1_WriteDataXLCD
  7762  0B5E  0871               	movf	??i1_WriteDataXLCD,w
  7763  0B5F  1283               	bcf	3,5	;RP0=0, select bank0
  7764  0B60  1303               	bcf	3,6	;RP1=0, select bank0
  7765  0B61  0586               	andwf	6,f	;volatile
  7766                           
  7767                           ;lcd_pic16.c: 127:         PORTB |= data&0xf0;
  7768  0B62  0873               	movf	i1WriteDataXLCD@data,w
  7769  0B63  39F0               	andlw	240
  7770  0B64  00F1               	movwf	??i1_WriteDataXLCD
  7771  0B65  0871               	movf	??i1_WriteDataXLCD,w
  7772  0B66  0486               	iorwf	6,f	;volatile
  7773  0B67                     i1l2735:	
  7774                           
  7775                           ;lcd_pic16.c: 133:         PORTBbits.RB1 = 1;
  7776  0B67  1486               	bsf	6,1	;volatile
  7777  0B68                     i1l2737:	
  7778                           
  7779                           ;lcd_pic16.c: 134:         PORTBbits.RB2 = 0;
  7780  0B68  1106               	bcf	6,2	;volatile
  7781  0B69                     i1l2739:	
  7782                           
  7783                           ;lcd_pic16.c: 135:         DelayFor18TCY();
  7784  0B69  160A  118A  27A0  120A  158A  	fcall	i1_DelayFor18TCY
  7785  0B6E                     i1l2741:	
  7786                           
  7787                           ;lcd_pic16.c: 136:         PORTBbits.RB3 = 1;
  7788  0B6E  1283               	bcf	3,5	;RP0=0, select bank0
  7789  0B6F  1303               	bcf	3,6	;RP1=0, select bank0
  7790  0B70  1586               	bsf	6,3	;volatile
  7791  0B71                     i1l2743:	
  7792                           
  7793                           ;lcd_pic16.c: 137:         DelayFor18TCY();
  7794  0B71  160A  118A  27A0  120A  158A  	fcall	i1_DelayFor18TCY
  7795  0B76                     i1l2745:	
  7796                           
  7797                           ;lcd_pic16.c: 138:         PORTBbits.RB3 = 0;
  7798  0B76  1283               	bcf	3,5	;RP0=0, select bank0
  7799  0B77  1303               	bcf	3,6	;RP1=0, select bank0
  7800  0B78  1186               	bcf	6,3	;volatile
  7801                           
  7802                           ;lcd_pic16.c: 140:         PORTB &= 0x0f;
  7803  0B79  300F               	movlw	15
  7804  0B7A  00F1               	movwf	??i1_WriteDataXLCD
  7805  0B7B  0871               	movf	??i1_WriteDataXLCD,w
  7806  0B7C  0586               	andwf	6,f	;volatile
  7807                           
  7808                           ;lcd_pic16.c: 141:         PORTB |= ((data<<4)&0xf0);
  7809  0B7D  0873               	movf	i1WriteDataXLCD@data,w
  7810  0B7E  00F1               	movwf	??i1_WriteDataXLCD
  7811  0B7F  3003               	movlw	3
  7812  0B80                     u188_25:	
  7813  0B80  1003               	clrc
  7814  0B81  0DF1               	rlf	??i1_WriteDataXLCD,f
  7815  0B82  3EFF               	addlw	-1
  7816  0B83  1D03               	skipz
  7817  0B84  2B80               	goto	u188_25
  7818  0B85  1003               	clrc
  7819  0B86  0D71               	rlf	??i1_WriteDataXLCD,w
  7820  0B87  39F0               	andlw	240
  7821  0B88  00F2               	movwf	??i1_WriteDataXLCD+1
  7822  0B89  0872               	movf	??i1_WriteDataXLCD+1,w
  7823  0B8A  0486               	iorwf	6,f	;volatile
  7824  0B8B                     i1l2747:	
  7825                           
  7826                           ;lcd_pic16.c: 146:         DelayFor18TCY();
  7827  0B8B  160A  118A  27A0  120A  158A  	fcall	i1_DelayFor18TCY
  7828  0B90                     i1l2749:	
  7829                           
  7830                           ;lcd_pic16.c: 147:         PORTBbits.RB3 = 1;
  7831  0B90  1283               	bcf	3,5	;RP0=0, select bank0
  7832  0B91  1303               	bcf	3,6	;RP1=0, select bank0
  7833  0B92  1586               	bsf	6,3	;volatile
  7834  0B93                     i1l2751:	
  7835                           
  7836                           ;lcd_pic16.c: 148:         DelayFor18TCY();
  7837  0B93  160A  118A  27A0  120A  158A  	fcall	i1_DelayFor18TCY
  7838  0B98                     i1l2753:	
  7839                           
  7840                           ;lcd_pic16.c: 149:         PORTBbits.RB3 = 0;
  7841  0B98  1283               	bcf	3,5	;RP0=0, select bank0
  7842  0B99  1303               	bcf	3,6	;RP1=0, select bank0
  7843  0B9A  1186               	bcf	6,3	;volatile
  7844                           
  7845                           ;lcd_pic16.c: 151:         TRISB |= 0xf0;
  7846  0B9B  30F0               	movlw	240
  7847  0B9C  00F1               	movwf	??i1_WriteDataXLCD
  7848  0B9D  0871               	movf	??i1_WriteDataXLCD,w
  7849  0B9E  1683               	bsf	3,5	;RP0=1, select bank1
  7850  0B9F  1303               	bcf	3,6	;RP1=0, select bank1
  7851  0BA0  0486               	iorwf	6,f	;volatile
  7852  0BA1                     i1l374:	
  7853  0BA1  0008               	return
  7854  0BA2                     __end_ofi1_WriteDataXLCD:	
  7855                           
  7856                           	psect	text39
  7857  17BE                     __ptext39:	
  7858 ;; *************** function i1_BusyXLCD *****************
  7859 ;; Defined at:
  7860 ;;		line 451 in file "lcd_pic16.c"
  7861 ;; Parameters:    Size  Location     Type
  7862 ;;		None
  7863 ;; Auto vars:     Size  Location     Type
  7864 ;;		None
  7865 ;; Return value:  Size  Location     Type
  7866 ;;                  1    wreg      unsigned char 
  7867 ;; Registers used:
  7868 ;;		wreg
  7869 ;; Tracked objects:
  7870 ;;		On entry : 0/0
  7871 ;;		On exit  : 0/0
  7872 ;;		Unchanged: 0/0
  7873 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7874 ;;      Params:         0       0       0       0       0
  7875 ;;      Locals:         0       0       0       0       0
  7876 ;;      Temps:          2       0       0       0       0
  7877 ;;      Totals:         2       0       0       0       0
  7878 ;;Total ram usage:        2 bytes
  7879 ;; Hardware stack levels used:    1
  7880 ;; This function calls:
  7881 ;;		Nothing
  7882 ;; This function is called by:
  7883 ;;		i1_putsXLCD
  7884 ;; This function uses a non-reentrant model
  7885 ;;
  7886                           
  7887                           
  7888                           ;psect for function i1_BusyXLCD
  7889  17BE                     i1_BusyXLCD:	
  7890  17BE                     i1l2757:	
  7891                           ;incstack = 0
  7892 ;; hardware stack exceeded
  7893                           ; Regs used in i1_BusyXLCD: [wreg]
  7894                           
  7895                           
  7896                           ;lcd_pic16.c: 504:         _delay((unsigned long)((5)*(4000000/4000.0)));
  7897  17BE  3007               	movlw	7
  7898  17BF  00F1               	movwf	??i1_BusyXLCD+1
  7899  17C0  307D               	movlw	125
  7900  17C1  00F0               	movwf	??i1_BusyXLCD
  7901  17C2                     u369_27:	
  7902  17C2  0BF0               	decfsz	??i1_BusyXLCD,f
  7903  17C3  2FC2               	goto	u369_27
  7904  17C4  0BF1               	decfsz	??i1_BusyXLCD+1,f
  7905  17C5  2FC2               	goto	u369_27
  7906                           
  7907                           ;lcd_pic16.c: 505:         return 0;
  7908  17C6  3000               	movlw	0
  7909  17C7                     i1l410:	
  7910  17C7  0008               	return
  7911  17C8                     __end_ofi1_BusyXLCD:	
  7912                           
  7913                           	psect	text40
  7914  0BA2                     __ptext40:	
  7915 ;; *************** function i1_SetDDRamAddr *****************
  7916 ;; Defined at:
  7917 ;;		line 217 in file "lcd_pic16.c"
  7918 ;; Parameters:    Size  Location     Type
  7919 ;;  DDaddr          1    wreg     unsigned char 
  7920 ;; Auto vars:     Size  Location     Type
  7921 ;;  DDaddr          1    3[COMMON] unsigned char 
  7922 ;; Return value:  Size  Location     Type
  7923 ;;                  1    wreg      void 
  7924 ;; Registers used:
  7925 ;;		wreg, status,2, status,0, pclath, cstack
  7926 ;; Tracked objects:
  7927 ;;		On entry : 0/0
  7928 ;;		On exit  : 0/0
  7929 ;;		Unchanged: 0/0
  7930 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7931 ;;      Params:         0       0       0       0       0
  7932 ;;      Locals:         1       0       0       0       0
  7933 ;;      Temps:          2       0       0       0       0
  7934 ;;      Totals:         3       0       0       0       0
  7935 ;;Total ram usage:        3 bytes
  7936 ;; Hardware stack levels used:    1
  7937 ;; Hardware stack levels required when called:    1
  7938 ;; This function calls:
  7939 ;;		i1_DelayFor18TCY
  7940 ;; This function is called by:
  7941 ;;		_updateLCD
  7942 ;; This function uses a non-reentrant model
  7943 ;;
  7944                           
  7945                           
  7946                           ;psect for function i1_SetDDRamAddr
  7947  0BA2                     i1_SetDDRamAddr:	
  7948                           
  7949                           ;incstack = 0
  7950 ;; hardware stack exceeded
  7951                           ; Regs used in i1_SetDDRamAddr: [wreg+status,2+status,0+pclath+cstack]
  7952                           ;i1SetDDRamAddr@DDaddr stored from wreg
  7953  0BA2  00F3               	movwf	i1SetDDRamAddr@DDaddr
  7954  0BA3                     i1l2983:	
  7955                           
  7956                           ;lcd_pic16.c: 217: void SetDDRamAddr(unsigned char DDaddr);lcd_pic16.c: 218: {;lcd_pic16
      +                          .c: 232:         TRISB &= 0x0f;
  7957  0BA3  300F               	movlw	15
  7958  0BA4  00F1               	movwf	??i1_SetDDRamAddr
  7959  0BA5  0871               	movf	??i1_SetDDRamAddr,w
  7960  0BA6  1683               	bsf	3,5	;RP0=1, select bank1
  7961  0BA7  1303               	bcf	3,6	;RP1=0, select bank1
  7962  0BA8  0586               	andwf	6,f	;volatile
  7963                           
  7964                           ;lcd_pic16.c: 233:         PORTB &= 0x0f;
  7965  0BA9  300F               	movlw	15
  7966  0BAA  00F1               	movwf	??i1_SetDDRamAddr
  7967  0BAB  0871               	movf	??i1_SetDDRamAddr,w
  7968  0BAC  1283               	bcf	3,5	;RP0=0, select bank0
  7969  0BAD  1303               	bcf	3,6	;RP1=0, select bank0
  7970  0BAE  0586               	andwf	6,f	;volatile
  7971                           
  7972                           ;lcd_pic16.c: 234:         PORTB |= ((DDaddr | 0b10000000) & 0xf0);
  7973  0BAF  0873               	movf	i1SetDDRamAddr@DDaddr,w
  7974  0BB0  3880               	iorlw	128
  7975  0BB1  39F0               	andlw	240
  7976  0BB2  00F1               	movwf	??i1_SetDDRamAddr
  7977  0BB3  0871               	movf	??i1_SetDDRamAddr,w
  7978  0BB4  0486               	iorwf	6,f	;volatile
  7979  0BB5                     i1l2985:	
  7980                           
  7981                           ;lcd_pic16.c: 240:         PORTBbits.RB2 = 0;
  7982  0BB5  1106               	bcf	6,2	;volatile
  7983  0BB6                     i1l2987:	
  7984                           
  7985                           ;lcd_pic16.c: 241:         PORTBbits.RB1 = 0;
  7986  0BB6  1086               	bcf	6,1	;volatile
  7987  0BB7                     i1l2989:	
  7988                           
  7989                           ;lcd_pic16.c: 242:         DelayFor18TCY();
  7990  0BB7  160A  118A  27A0  120A  158A  	fcall	i1_DelayFor18TCY
  7991  0BBC                     i1l2991:	
  7992                           
  7993                           ;lcd_pic16.c: 243:         PORTBbits.RB3 = 1;
  7994  0BBC  1283               	bcf	3,5	;RP0=0, select bank0
  7995  0BBD  1303               	bcf	3,6	;RP1=0, select bank0
  7996  0BBE  1586               	bsf	6,3	;volatile
  7997  0BBF                     i1l2993:	
  7998                           
  7999                           ;lcd_pic16.c: 244:         DelayFor18TCY();
  8000  0BBF  160A  118A  27A0  120A  158A  	fcall	i1_DelayFor18TCY
  8001  0BC4                     i1l2995:	
  8002                           
  8003                           ;lcd_pic16.c: 245:         PORTBbits.RB3 = 0;
  8004  0BC4  1283               	bcf	3,5	;RP0=0, select bank0
  8005  0BC5  1303               	bcf	3,6	;RP1=0, select bank0
  8006  0BC6  1186               	bcf	6,3	;volatile
  8007                           
  8008                           ;lcd_pic16.c: 247:         PORTB &= 0x0f;
  8009  0BC7  300F               	movlw	15
  8010  0BC8  00F1               	movwf	??i1_SetDDRamAddr
  8011  0BC9  0871               	movf	??i1_SetDDRamAddr,w
  8012  0BCA  0586               	andwf	6,f	;volatile
  8013                           
  8014                           ;lcd_pic16.c: 248:         PORTB |= ((DDaddr<<4)&0xf0);
  8015  0BCB  0873               	movf	i1SetDDRamAddr@DDaddr,w
  8016  0BCC  00F1               	movwf	??i1_SetDDRamAddr
  8017  0BCD  3003               	movlw	3
  8018  0BCE                     u215_25:	
  8019  0BCE  1003               	clrc
  8020  0BCF  0DF1               	rlf	??i1_SetDDRamAddr,f
  8021  0BD0  3EFF               	addlw	-1
  8022  0BD1  1D03               	skipz
  8023  0BD2  2BCE               	goto	u215_25
  8024  0BD3  1003               	clrc
  8025  0BD4  0D71               	rlf	??i1_SetDDRamAddr,w
  8026  0BD5  39F0               	andlw	240
  8027  0BD6  00F2               	movwf	??i1_SetDDRamAddr+1
  8028  0BD7  0872               	movf	??i1_SetDDRamAddr+1,w
  8029  0BD8  0486               	iorwf	6,f	;volatile
  8030  0BD9                     i1l2997:	
  8031                           
  8032                           ;lcd_pic16.c: 253:         DelayFor18TCY();
  8033  0BD9  160A  118A  27A0  120A  158A  	fcall	i1_DelayFor18TCY
  8034  0BDE                     i1l2999:	
  8035                           
  8036                           ;lcd_pic16.c: 254:         PORTBbits.RB3 = 1;
  8037  0BDE  1283               	bcf	3,5	;RP0=0, select bank0
  8038  0BDF  1303               	bcf	3,6	;RP1=0, select bank0
  8039  0BE0  1586               	bsf	6,3	;volatile
  8040  0BE1                     i1l3001:	
  8041                           
  8042                           ;lcd_pic16.c: 255:         DelayFor18TCY();
  8043  0BE1  160A  118A  27A0  120A  158A  	fcall	i1_DelayFor18TCY
  8044  0BE6                     i1l3003:	
  8045                           
  8046                           ;lcd_pic16.c: 256:         PORTBbits.RB3 = 0;
  8047  0BE6  1283               	bcf	3,5	;RP0=0, select bank0
  8048  0BE7  1303               	bcf	3,6	;RP1=0, select bank0
  8049  0BE8  1186               	bcf	6,3	;volatile
  8050                           
  8051                           ;lcd_pic16.c: 258:         TRISB |= 0xf0;
  8052  0BE9  30F0               	movlw	240
  8053  0BEA  00F1               	movwf	??i1_SetDDRamAddr
  8054  0BEB  0871               	movf	??i1_SetDDRamAddr,w
  8055  0BEC  1683               	bsf	3,5	;RP0=1, select bank1
  8056  0BED  1303               	bcf	3,6	;RP1=0, select bank1
  8057  0BEE  0486               	iorwf	6,f	;volatile
  8058  0BEF                     i1l380:	
  8059  0BEF  0008               	return
  8060  0BF0                     __end_ofi1_SetDDRamAddr:	
  8061                           
  8062                           	psect	text41
  8063  17A0                     __ptext41:	
  8064 ;; *************** function i1_DelayFor18TCY *****************
  8065 ;; Defined at:
  8066 ;;		line 22 in file "lcd_pic16.c"
  8067 ;; Parameters:    Size  Location     Type
  8068 ;;		None
  8069 ;; Auto vars:     Size  Location     Type
  8070 ;;		None
  8071 ;; Return value:  Size  Location     Type
  8072 ;;                  1    wreg      void 
  8073 ;; Registers used:
  8074 ;;		wreg
  8075 ;; Tracked objects:
  8076 ;;		On entry : 0/0
  8077 ;;		On exit  : 0/0
  8078 ;;		Unchanged: 0/0
  8079 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8080 ;;      Params:         0       0       0       0       0
  8081 ;;      Locals:         0       0       0       0       0
  8082 ;;      Temps:          1       0       0       0       0
  8083 ;;      Totals:         1       0       0       0       0
  8084 ;;Total ram usage:        1 bytes
  8085 ;; Hardware stack levels used:    1
  8086 ;; This function calls:
  8087 ;;		Nothing
  8088 ;; This function is called by:
  8089 ;;		i1_WriteDataXLCD
  8090 ;;		i1_SetDDRamAddr
  8091 ;; This function uses a non-reentrant model
  8092 ;;
  8093                           
  8094                           
  8095                           ;psect for function i1_DelayFor18TCY
  8096  17A0                     i1_DelayFor18TCY:	
  8097  17A0                     i1l2521:	
  8098                           ;incstack = 0
  8099 ;; hardware stack exceeded
  8100                           ; Regs used in i1_DelayFor18TCY: [wreg]
  8101                           
  8102                           
  8103                           ;lcd_pic16.c: 24:    _delay((unsigned long)((18)*(4000000/4000000.0)));
  8104  17A0  3005               	movlw	5
  8105  17A1  00F0               	movwf	??i1_DelayFor18TCY
  8106  17A2                     u370_27:	
  8107  17A2  0BF0               	decfsz	??i1_DelayFor18TCY,f
  8108  17A3  2FA2               	goto	u370_27
  8109  17A4  2FA5               	nop2
  8110  17A5                     i1l335:	
  8111  17A5  0008               	return
  8112  17A6                     __end_ofi1_DelayFor18TCY:	
  8113                           
  8114                           	psect	text42
  8115  0D83                     __ptext42:	
  8116 ;; *************** function _time *****************
  8117 ;; Defined at:
  8118 ;;		line 138 in file "main.c"
  8119 ;; Parameters:    Size  Location     Type
  8120 ;;		None
  8121 ;; Auto vars:     Size  Location     Type
  8122 ;;		None
  8123 ;; Return value:  Size  Location     Type
  8124 ;;                  1    wreg      void 
  8125 ;; Registers used:
  8126 ;;		wreg, status,2, status,0, pclath, cstack
  8127 ;; Tracked objects:
  8128 ;;		On entry : 0/0
  8129 ;;		On exit  : 0/0
  8130 ;;		Unchanged: 0/0
  8131 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8132 ;;      Params:         0       0       0       0       0
  8133 ;;      Locals:         0       0       0       0       0
  8134 ;;      Temps:          1       0       0       0       0
  8135 ;;      Totals:         1       0       0       0       0
  8136 ;;Total ram usage:        1 bytes
  8137 ;; Hardware stack levels used:    1
  8138 ;; Hardware stack levels required when called:    2
  8139 ;; This function calls:
  8140 ;;		i1_setData
  8141 ;; This function is called by:
  8142 ;;		_inter
  8143 ;; This function uses a non-reentrant model
  8144 ;;
  8145                           
  8146                           
  8147                           ;psect for function _time
  8148  0D83                     _time:	
  8149  0D83                     i1l3327:	
  8150                           ;incstack = 0
  8151 ;; hardware stack exceeded
  8152                           ; Regs used in _time: [wreg+status,2+status,0+pclath+cstack]
  8153                           
  8154                           
  8155                           ;main.c: 139:     hundredMiliSeconds++;
  8156  0D83  3001               	movlw	1
  8157  0D84  00F5               	movwf	??_time
  8158  0D85  0875               	movf	??_time,w
  8159  0D86  1283               	bcf	3,5	;RP0=0, select bank0
  8160  0D87  1303               	bcf	3,6	;RP1=0, select bank0
  8161  0D88  07D0               	addwf	_hundredMiliSeconds,f
  8162  0D89                     i1l3329:	
  8163                           
  8164                           ;main.c: 140:     if(hundredMiliSeconds >= 10){
  8165  0D89  300A               	movlw	10
  8166  0D8A  0250               	subwf	_hundredMiliSeconds,w
  8167  0D8B  1C03               	skipc
  8168  0D8C  2D8E               	goto	u256_21
  8169  0D8D  2D8F               	goto	u256_20
  8170  0D8E                     u256_21:	
  8171  0D8E  2DD8               	goto	i1l231
  8172  0D8F                     u256_20:	
  8173  0D8F                     i1l3331:	
  8174                           
  8175                           ;main.c: 141:         hundredMiliSeconds = 0;
  8176  0D8F  01D0               	clrf	_hundredMiliSeconds
  8177  0D90                     i1l3333:	
  8178                           
  8179                           ;main.c: 142:         seconds++;
  8180  0D90  3001               	movlw	1
  8181  0D91  00F5               	movwf	??_time
  8182  0D92  0875               	movf	??_time,w
  8183  0D93  07D1               	addwf	_seconds,f
  8184  0D94                     i1l3335:	
  8185                           
  8186                           ;main.c: 143:         if(seconds >= 60){
  8187  0D94  303C               	movlw	60
  8188  0D95  0251               	subwf	_seconds,w
  8189  0D96  1C03               	skipc
  8190  0D97  2D99               	goto	u257_21
  8191  0D98  2D9A               	goto	u257_20
  8192  0D99                     u257_21:	
  8193  0D99  2DD8               	goto	i1l231
  8194  0D9A                     u257_20:	
  8195  0D9A                     i1l3337:	
  8196                           
  8197                           ;main.c: 144:             seconds = 0;
  8198  0D9A  01D1               	clrf	_seconds
  8199  0D9B                     i1l3339:	
  8200                           
  8201                           ;main.c: 145:             minutes++;
  8202  0D9B  3001               	movlw	1
  8203  0D9C  00F5               	movwf	??_time
  8204  0D9D  0875               	movf	??_time,w
  8205  0D9E  07C7               	addwf	_minutes,f
  8206  0D9F                     i1l3341:	
  8207                           
  8208                           ;main.c: 146:             if(minutes >= 60){
  8209  0D9F  303C               	movlw	60
  8210  0DA0  0247               	subwf	_minutes,w
  8211  0DA1  1C03               	skipc
  8212  0DA2  2DA4               	goto	u258_21
  8213  0DA3  2DA5               	goto	u258_20
  8214  0DA4                     u258_21:	
  8215  0DA4  2DD8               	goto	i1l231
  8216  0DA5                     u258_20:	
  8217  0DA5                     i1l3343:	
  8218                           
  8219                           ;main.c: 147:                 minutes = 0;
  8220  0DA5  01C7               	clrf	_minutes
  8221  0DA6                     i1l3345:	
  8222                           
  8223                           ;main.c: 148:                 hours++;
  8224  0DA6  3001               	movlw	1
  8225  0DA7  00F5               	movwf	??_time
  8226  0DA8  0875               	movf	??_time,w
  8227  0DA9  07C8               	addwf	_hours,f
  8228  0DAA                     i1l3347:	
  8229                           
  8230                           ;main.c: 149:                 setData(0);
  8231  0DAA  3000               	movlw	0
  8232  0DAB  120A  158A  252D  120A  158A  	fcall	i1_setData
  8233  0DB0                     i1l3349:	
  8234                           
  8235                           ;main.c: 150:                 if(hours >= 24){
  8236  0DB0  3018               	movlw	24
  8237  0DB1  1283               	bcf	3,5	;RP0=0, select bank0
  8238  0DB2  1303               	bcf	3,6	;RP1=0, select bank0
  8239  0DB3  0248               	subwf	_hours,w
  8240  0DB4  1C03               	skipc
  8241  0DB5  2DB7               	goto	u259_21
  8242  0DB6  2DB8               	goto	u259_20
  8243  0DB7                     u259_21:	
  8244  0DB7  2DD8               	goto	i1l231
  8245  0DB8                     u259_20:	
  8246  0DB8                     i1l3351:	
  8247                           
  8248                           ;main.c: 151:                     hours = 0;
  8249  0DB8  01C8               	clrf	_hours
  8250  0DB9                     i1l3353:	
  8251                           
  8252                           ;main.c: 152:                     days++;
  8253  0DB9  3001               	movlw	1
  8254  0DBA  00F5               	movwf	??_time
  8255  0DBB  0875               	movf	??_time,w
  8256  0DBC  07C9               	addwf	_days,f
  8257  0DBD                     i1l3355:	
  8258                           
  8259                           ;main.c: 153:                     if(days >= 30){
  8260  0DBD  301E               	movlw	30
  8261  0DBE  0249               	subwf	_days,w
  8262  0DBF  1C03               	skipc
  8263  0DC0  2DC2               	goto	u260_21
  8264  0DC1  2DC3               	goto	u260_20
  8265  0DC2                     u260_21:	
  8266  0DC2  2DC8               	goto	i1l3361
  8267  0DC3                     u260_20:	
  8268  0DC3                     i1l3357:	
  8269                           
  8270                           ;main.c: 154:                         days = 0;
  8271  0DC3  01C9               	clrf	_days
  8272  0DC4                     i1l3359:	
  8273                           
  8274                           ;main.c: 155:                         months++;
  8275  0DC4  3001               	movlw	1
  8276  0DC5  00F5               	movwf	??_time
  8277  0DC6  0875               	movf	??_time,w
  8278  0DC7  07CA               	addwf	_months,f
  8279  0DC8                     i1l3361:	
  8280  0DC8  300D               	movlw	13
  8281  0DC9  0649               	xorwf	_days,w
  8282  0DCA  1D03               	btfss	3,2
  8283  0DCB  2DCD               	goto	u261_21
  8284  0DCC  2DCE               	goto	u261_20
  8285  0DCD                     u261_21:	
  8286  0DCD  2DD6               	goto	i1l229
  8287  0DCE                     u261_20:	
  8288  0DCE                     i1l3363:	
  8289  0DCE  3006               	movlw	6
  8290  0DCF  064A               	xorwf	_months,w
  8291  0DD0  1D03               	btfss	3,2
  8292  0DD1  2DD3               	goto	u262_21
  8293  0DD2  2DD4               	goto	u262_20
  8294  0DD3                     u262_21:	
  8295  0DD3  2DD6               	goto	i1l229
  8296  0DD4                     u262_20:	
  8297  0DD4                     i1l3365:	
  8298  0DD4  01CF               	clrf	_functionalStat
  8299                           
  8300                           ;main.c: 159:                     }else{
  8301  0DD5  2DD8               	goto	i1l231
  8302  0DD6                     i1l229:	
  8303  0DD6  01CF               	clrf	_functionalStat
  8304  0DD7  0ACF               	incf	_functionalStat,f
  8305  0DD8                     i1l231:	
  8306  0DD8  0008               	return
  8307  0DD9                     __end_of_time:	
  8308                           
  8309                           	psect	text43
  8310  0D2D                     __ptext43:	
  8311 ;; *************** function i1_setData *****************
  8312 ;; Defined at:
  8313 ;;		line 44 in file "eeprom.c"
  8314 ;; Parameters:    Size  Location     Type
  8315 ;;  full            1    wreg     unsigned char 
  8316 ;; Auto vars:     Size  Location     Type
  8317 ;;  full            1  (no storage) unsigned char 
  8318 ;;  setData         1    4[COMMON] unsigned char 
  8319 ;;  setData         1    3[COMMON] unsigned char 
  8320 ;; Return value:  Size  Location     Type
  8321 ;;                  1    wreg      void 
  8322 ;; Registers used:
  8323 ;;		wreg, status,2, status,0, pclath, cstack
  8324 ;; Tracked objects:
  8325 ;;		On entry : 0/0
  8326 ;;		On exit  : 0/0
  8327 ;;		Unchanged: 0/0
  8328 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8329 ;;      Params:         0       0       0       0       0
  8330 ;;      Locals:         2       0       0       0       0
  8331 ;;      Temps:          1       0       0       0       0
  8332 ;;      Totals:         3       0       0       0       0
  8333 ;;Total ram usage:        3 bytes
  8334 ;; Hardware stack levels used:    1
  8335 ;; Hardware stack levels required when called:    1
  8336 ;; This function calls:
  8337 ;;		i1_writeEEPROM
  8338 ;; This function is called by:
  8339 ;;		_time
  8340 ;; This function uses a non-reentrant model
  8341 ;;
  8342                           
  8343                           
  8344                           ;psect for function i1_setData
  8345  0D2D                     i1_setData:	
  8346  0D2D                     i1l2963:	
  8347                           ;incstack = 0
  8348 ;; hardware stack exceeded
  8349                           ; Regs used in i1_setData: [wreg+status,2+status,0+pclath+cstack]
  8350                           
  8351                           
  8352                           ;eeprom.c: 45:     unsigned char data0 = frequency & 0x00FF;
  8353  0D2D  1283               	bcf	3,5	;RP0=0, select bank0
  8354  0D2E  1303               	bcf	3,6	;RP1=0, select bank0
  8355  0D2F  0844               	movf	_frequency,w
  8356  0D30  00F2               	movwf	??i1_setData
  8357  0D31  0872               	movf	??i1_setData,w
  8358  0D32  00F3               	movwf	i1setData@data0
  8359  0D33                     i1l2965:	
  8360                           
  8361                           ;eeprom.c: 46:     unsigned char data1 = frequency >> 8;
  8362  0D33  0845               	movf	_frequency+1,w
  8363  0D34  00F2               	movwf	??i1_setData
  8364  0D35  0872               	movf	??i1_setData,w
  8365  0D36  00F4               	movwf	i1setData@data1
  8366  0D37                     i1l2967:	
  8367                           
  8368                           ;eeprom.c: 47:     writeEEPROM(data0 ,0);
  8369  0D37  01F0               	clrf	i1writeEEPROM@address
  8370  0D38  0873               	movf	i1setData@data0,w
  8371  0D39  120A  158A  20FB  120A  158A  	fcall	i1_writeEEPROM
  8372  0D3E                     i1l2969:	
  8373                           
  8374                           ;eeprom.c: 48:     writeEEPROM(data1 ,1);
  8375  0D3E  01F0               	clrf	i1writeEEPROM@address
  8376  0D3F  0AF0               	incf	i1writeEEPROM@address,f
  8377  0D40  0874               	movf	i1setData@data1,w
  8378  0D41  120A  158A  20FB  120A  158A  	fcall	i1_writeEEPROM
  8379  0D46                     i1l2971:	
  8380                           
  8381                           ;eeprom.c: 49:     writeEEPROM(months ,2);
  8382  0D46  3002               	movlw	2
  8383  0D47  00F2               	movwf	??i1_setData
  8384  0D48  0872               	movf	??i1_setData,w
  8385  0D49  00F0               	movwf	i1writeEEPROM@address
  8386  0D4A  1283               	bcf	3,5	;RP0=0, select bank0
  8387  0D4B  1303               	bcf	3,6	;RP1=0, select bank0
  8388  0D4C  084A               	movf	_months,w
  8389  0D4D  120A  158A  20FB  120A  158A  	fcall	i1_writeEEPROM
  8390  0D52                     i1l2973:	
  8391                           
  8392                           ;eeprom.c: 50:     writeEEPROM(days ,3);
  8393  0D52  3003               	movlw	3
  8394  0D53  00F2               	movwf	??i1_setData
  8395  0D54  0872               	movf	??i1_setData,w
  8396  0D55  00F0               	movwf	i1writeEEPROM@address
  8397  0D56  1283               	bcf	3,5	;RP0=0, select bank0
  8398  0D57  1303               	bcf	3,6	;RP1=0, select bank0
  8399  0D58  0849               	movf	_days,w
  8400  0D59  120A  158A  20FB  120A  158A  	fcall	i1_writeEEPROM
  8401  0D5E                     i1l2975:	
  8402                           
  8403                           ;eeprom.c: 51:     writeEEPROM(hours ,4);
  8404  0D5E  3004               	movlw	4
  8405  0D5F  00F2               	movwf	??i1_setData
  8406  0D60  0872               	movf	??i1_setData,w
  8407  0D61  00F0               	movwf	i1writeEEPROM@address
  8408  0D62  1283               	bcf	3,5	;RP0=0, select bank0
  8409  0D63  1303               	bcf	3,6	;RP1=0, select bank0
  8410  0D64  0848               	movf	_hours,w
  8411  0D65  120A  158A  20FB  120A  158A  	fcall	i1_writeEEPROM
  8412  0D6A                     i1l2977:	
  8413                           
  8414                           ;eeprom.c: 52:     writeEEPROM(minutes ,5);
  8415  0D6A  3005               	movlw	5
  8416  0D6B  00F2               	movwf	??i1_setData
  8417  0D6C  0872               	movf	??i1_setData,w
  8418  0D6D  00F0               	movwf	i1writeEEPROM@address
  8419  0D6E  1283               	bcf	3,5	;RP0=0, select bank0
  8420  0D6F  1303               	bcf	3,6	;RP1=0, select bank0
  8421  0D70  0847               	movf	_minutes,w
  8422  0D71  120A  158A  20FB  120A  158A  	fcall	i1_writeEEPROM
  8423  0D76                     i1l2979:	
  8424                           
  8425                           ;eeprom.c: 53:     writeEEPROM(functionalStat ,6);
  8426  0D76  3006               	movlw	6
  8427  0D77  00F2               	movwf	??i1_setData
  8428  0D78  0872               	movf	??i1_setData,w
  8429  0D79  00F0               	movwf	i1writeEEPROM@address
  8430  0D7A  1283               	bcf	3,5	;RP0=0, select bank0
  8431  0D7B  1303               	bcf	3,6	;RP1=0, select bank0
  8432  0D7C  084F               	movf	_functionalStat,w
  8433  0D7D  120A  158A  20FB  120A  158A  	fcall	i1_writeEEPROM
  8434  0D82                     i1l69:	
  8435  0D82  0008               	return
  8436  0D83                     __end_ofi1_setData:	
  8437                           
  8438                           	psect	text44
  8439  08FB                     __ptext44:	
  8440 ;; *************** function i1_writeEEPROM *****************
  8441 ;; Defined at:
  8442 ;;		line 14 in file "eeprom.c"
  8443 ;; Parameters:    Size  Location     Type
  8444 ;;  data            1    wreg     unsigned char 
  8445 ;;  address         1    0[COMMON] unsigned char 
  8446 ;; Auto vars:     Size  Location     Type
  8447 ;;  data            1    1[COMMON] unsigned char 
  8448 ;; Return value:  Size  Location     Type
  8449 ;;                  1    wreg      void 
  8450 ;; Registers used:
  8451 ;;		wreg
  8452 ;; Tracked objects:
  8453 ;;		On entry : 0/0
  8454 ;;		On exit  : 0/0
  8455 ;;		Unchanged: 0/0
  8456 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8457 ;;      Params:         1       0       0       0       0
  8458 ;;      Locals:         1       0       0       0       0
  8459 ;;      Temps:          0       0       0       0       0
  8460 ;;      Totals:         2       0       0       0       0
  8461 ;;Total ram usage:        2 bytes
  8462 ;; Hardware stack levels used:    1
  8463 ;; This function calls:
  8464 ;;		Nothing
  8465 ;; This function is called by:
  8466 ;;		i1_setData
  8467 ;; This function uses a non-reentrant model
  8468 ;;
  8469                           
  8470                           
  8471                           ;psect for function i1_writeEEPROM
  8472  08FB                     i1_writeEEPROM:	
  8473                           
  8474                           ;incstack = 0
  8475 ;; hardware stack exceeded
  8476                           ; Regs used in i1_writeEEPROM: [wreg]
  8477                           ;i1writeEEPROM@data stored from wreg
  8478  08FB  00F1               	movwf	i1writeEEPROM@data
  8479  08FC                     i1l2721:	
  8480                           
  8481                           ;eeprom.c: 15:     EEADR = address;
  8482  08FC  0870               	movf	i1writeEEPROM@address,w
  8483  08FD  1283               	bcf	3,5	;RP0=0, select bank2
  8484  08FE  1703               	bsf	3,6	;RP1=1, select bank2
  8485  08FF  008D               	movwf	13	;volatile
  8486                           
  8487                           ;eeprom.c: 16:     EEDATA = data;
  8488  0900  0871               	movf	i1writeEEPROM@data,w
  8489  0901  008C               	movwf	12	;volatile
  8490  0902                     i1l2723:	
  8491                           
  8492                           ;eeprom.c: 18:     EECON1bits.EEPGD = 0;
  8493  0902  1683               	bsf	3,5	;RP0=1, select bank3
  8494  0903  1703               	bsf	3,6	;RP1=1, select bank3
  8495  0904  138C               	bcf	12,7	;volsfr
  8496  0905                     i1l2725:	
  8497                           
  8498                           ;eeprom.c: 19:     EECON1bits.WREN = 1;
  8499  0905  150C               	bsf	12,2	;volsfr
  8500  0906                     i1l2727:	
  8501                           
  8502                           ;eeprom.c: 21:     INTCONbits.GIE = 0;
  8503  0906  138B               	bcf	11,7	;volatile
  8504                           
  8505                           ;eeprom.c: 22:     EECON2 = 0x55;
  8506  0907  3055               	movlw	85
  8507  0908  008D               	movwf	13	;volsfr
  8508                           
  8509                           ;eeprom.c: 23:     EECON2 = 0xAA;
  8510  0909  30AA               	movlw	170
  8511  090A  008D               	movwf	13	;volsfr
  8512  090B                     i1l2729:	
  8513                           
  8514                           ;eeprom.c: 24:     EECON1bits.WR = 1;
  8515  090B  148C               	bsf	12,1	;volsfr
  8516  090C                     i1l2731:	
  8517                           
  8518                           ;eeprom.c: 25:     INTCONbits.GIE = 1;
  8519  090C  178B               	bsf	11,7	;volatile
  8520  090D                     i1l60:	
  8521                           ;eeprom.c: 27:     while(PIR2bits.EEIF == 0) continue;
  8522                           
  8523  090D  1283               	bcf	3,5	;RP0=0, select bank0
  8524  090E  1303               	bcf	3,6	;RP1=0, select bank0
  8525  090F  1E0D               	btfss	13,4	;volatile
  8526  0910  2912               	goto	u187_21
  8527  0911  2913               	goto	u187_20
  8528  0912                     u187_21:	
  8529  0912  290D               	goto	i1l60
  8530  0913                     u187_20:	
  8531  0913                     i1l63:	
  8532  0913  0008               	return
  8533  0914                     __end_ofi1_writeEEPROM:	
  8534  007E                     btemp	set	126	;btemp
  8535  007E                     wtemp0	set	126


Data Sizes:
    Strings     154
    Constant    14
    Data        9
    BSS         41
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     36      51
    BANK1            80     34      69
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 18
		 -> STR_12(CODE[18]), STR_11(CODE[17]), STR_10(CODE[17]), STR_9(CODE[18]), 
		 -> STR_7(CODE[17]), STR_6(CODE[17]), STR_5(CODE[17]), STR_4(CODE[17]), 
		 -> STR_3(CODE[17]), STR_2(CODE[17]), STR_1(CODE[17]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 17
		 -> lineTwo(BANK1[17]), lineOne(BANK1[17]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK1[2]), 

    putrsXLCD@buffer	PTR const unsigned char  size(1) Largest target is 17
		 -> STR_8(CODE[17]), 

    putsXLCD@buffer	PTR unsigned char  size(1) Largest target is 17
		 -> lineTwo(BANK1[17]), lineOne(BANK1[17]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _inter in COMMON

    _updateLCD->i1___lwmod
    i1_sprintf->i1___lwmod
    i1___lwmod->i1___lwdiv
    i1_putsXLCD->i1_WriteDataXLCD
    i1_WriteDataXLCD->i1_DelayFor18TCY
    i1_SetDDRamAddr->i1_DelayFor18TCY
    _time->i1_setData
    i1_setData->i1_writeEEPROM

Critical Paths under _main in BANK0

    _main->_beep
    _main->_getData
    _start->_beep
    _setFrequency->_beep
    _writeFrequency->_beep
    _beep->___wmul
    _setData->_writeEEPROM
    _principalScreen->___lwmod
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _putsXLCD->_WriteDataXLCD
    _putrsXLCD->_WriteDataXLCD
    _WriteDataXLCD->_DelayFor18TCY
    _getData->_readEEPROM
    _initLCD->_OpenXLCD
    _SendCMDLCD->_WriteCmdXLCD
    _OpenXLCD->_SetDDRamAddr
    _OpenXLCD->_WriteCmdXLCD
    _WriteCmdXLCD->_DelayFor18TCY
    _SetDDRamAddr->_DelayFor18TCY

Critical Paths under _inter in BANK0

    _inter->_updateLCD
    _updateLCD->i1_sprintf

Critical Paths under _main in BANK1

    _main->_principalScreen
    _start->_sprintf
    _setFrequency->_lockingScreen
    _writeFrequency->_beep
    _lockingScreen->_sprintf
    _principalScreen->_sprintf
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _config->_initLCD

Critical Paths under _inter in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _inter in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _inter in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0   35427
                                             31 BANK1      3     3      0
                               _beep
                             _config
                            _getData
                      _lockingScreen
                    _principalScreen
                       _setFrequency
                              _start
                     _writeFrequency
 ---------------------------------------------------------------------------------
 (1) _start                                                4     4      0    6564
                                             24 BANK1      4     4      0
                       _SetDDRamAddr
                               _beep
                           _putsXLCD
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _setFrequency                                         3     3      0   13770
                                             25 BANK1      3     3      0
                       _SetDDRamAddr
                               _beep
                      _lockingScreen
                           _putsXLCD
                            _setData
                            _sprintf
                     _writeFrequency
 ---------------------------------------------------------------------------------
 (1) _writeFrequency                                       9     7      2    1839
                                              2 BANK1      9     7      2
                               _beep
                            _codFreq
 ---------------------------------------------------------------------------------
 (2) _codFreq                                              4     2      2     155
                                             29 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (2) _beep                                                 3     1      2    1405
                                             35 BANK0      1     1      0
                                              0 BANK1      2     0      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) _setData                                              4     4      0     622
                                             31 BANK0      3     3      0
                        _writeEEPROM
 ---------------------------------------------------------------------------------
 (3) _writeEEPROM                                          2     1      1     576
                                             29 BANK0      2     1      1
 ---------------------------------------------------------------------------------
 (2) _lockingScreen                                        1     1      0    4952
                                             24 BANK1      1     1      0
                       _SetDDRamAddr
                           _putsXLCD
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _principalScreen                                      7     7      0    6555
                                             24 BANK1      7     7      0
                       _SetDDRamAddr
                            ___lwdiv
                            ___lwmod
                          _putrsXLCD
                           _putsXLCD
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             25    20      5    4423
                                              7 BANK1     17    12      5
                            ___lwdiv
                            ___lwmod
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (3) _isdigit                                              2     2      0      68
                                             29 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     496
                                             29 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     702
                                             34 BANK0      2     2      0
                                              3 BANK1      4     0      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     711
                                             29 BANK0      5     1      4
                                              0 BANK1      3     3      0
 ---------------------------------------------------------------------------------
 (2) _putsXLCD                                             2     2      0     485
                                             33 BANK0      2     2      0
                           _BusyXLCD
                      _WriteDataXLCD
 ---------------------------------------------------------------------------------
 (2) _putrsXLCD                                            2     2      0     122
                                             33 BANK0      2     2      0
                           _BusyXLCD
                      _WriteDataXLCD
 ---------------------------------------------------------------------------------
 (3) _WriteDataXLCD                                        3     3      0      44
                                             30 BANK0      3     3      0
                      _DelayFor18TCY
 ---------------------------------------------------------------------------------
 (1) _getData                                              6     6      0      68
                                             30 BANK0      6     6      0
                         _readEEPROM
 ---------------------------------------------------------------------------------
 (2) _readEEPROM                                           1     1      0      22
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _config                                               0     0      0     274
                            _initLCD
                       _setTransStat
 ---------------------------------------------------------------------------------
 (2) _setTransStat                                         4     2      2      98
                                             29 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (2) _initLCD                                              2     2      0     176
                                              0 BANK1      2     2      0
                           _OpenXLCD
                         _SendCMDLCD
 ---------------------------------------------------------------------------------
 (3) _SendCMDLCD                                           1     1      0      66
                                             33 BANK0      1     1      0
                           _BusyXLCD
                       _WriteCmdXLCD
 ---------------------------------------------------------------------------------
 (3) _OpenXLCD                                             3     3      0     110
                                             33 BANK0      3     3      0
                           _BusyXLCD
                       _DelayPORXLCD
                       _SetDDRamAddr
                       _WriteCmdXLCD
 ---------------------------------------------------------------------------------
 (4) _WriteCmdXLCD                                         3     3      0      44
                                             30 BANK0      3     3      0
                      _DelayFor18TCY
 ---------------------------------------------------------------------------------
 (2) _SetDDRamAddr                                         3     3      0      44
                                             30 BANK0      3     3      0
                      _DelayFor18TCY
 ---------------------------------------------------------------------------------
 (4) _DelayFor18TCY                                        1     1      0       0
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _DelayPORXLCD                                         2     2      0       0
                                             29 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (3) _BusyXLCD                                             2     2      0       0
                                             29 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _inter                                                5     5      0    2497
                                             24 BANK0      5     5      0
                               _time
                          _updateLCD
 ---------------------------------------------------------------------------------
 (7) _updateLCD                                            7     7      0    2225
                                             17 BANK0      7     7      0
                     i1_SetDDRamAddr
                          i1___lwdiv
                          i1___lwmod
                         i1_putsXLCD
                          i1_sprintf
 ---------------------------------------------------------------------------------
 (8) i1_sprintf                                           25    20      5    1517
                                              0 BANK0     17    12      5
                          i1___lwdiv
                          i1___lwmod
                           i1___wmul
                          i1_isdigit
 ---------------------------------------------------------------------------------
 (9) i1_isdigit                                            2     2      0      68
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (9) i1___wmul                                             6     2      4     144
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (9) i1___lwmod                                            6     2      4     263
                                              8 COMMON     6     2      4
                          i1___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (9) i1___lwdiv                                            8     4      4     266
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (8) i1_putsXLCD                                           2     2      0      89
                                              4 COMMON     2     2      0
                         i1_BusyXLCD
                    i1_WriteDataXLCD
 ---------------------------------------------------------------------------------
 (9) i1_WriteDataXLCD                                      3     3      0      44
                                              1 COMMON     3     3      0
                    i1_DelayFor18TCY
 ---------------------------------------------------------------------------------
 (9) i1_BusyXLCD                                           2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (8) i1_SetDDRamAddr                                       3     3      0      44
                                              1 COMMON     3     3      0
                    i1_DelayFor18TCY
 ---------------------------------------------------------------------------------
 (10) i1_DelayFor18TCY                                     1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (7) _time                                                 1     1      0     272
                                              5 COMMON     1     1      0
                          i1_setData
 ---------------------------------------------------------------------------------
 (8) i1_setData                                            4     4      0     272
                                              2 COMMON     3     3      0
                      i1_writeEEPROM
 ---------------------------------------------------------------------------------
 (9) i1_writeEEPROM                                        2     1      1     226
                                              0 COMMON     2     1      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _beep
     ___wmul
   _config
     _initLCD
       _OpenXLCD
         _BusyXLCD
         _DelayPORXLCD
         _SetDDRamAddr
           _DelayFor18TCY
         _WriteCmdXLCD
           _DelayFor18TCY
       _SendCMDLCD
         _BusyXLCD
         _WriteCmdXLCD
           _DelayFor18TCY
     _setTransStat
   _getData
     _readEEPROM
   _lockingScreen
     _SetDDRamAddr
       _DelayFor18TCY
     _putsXLCD
       _BusyXLCD
       _WriteDataXLCD
         _DelayFor18TCY
     _sprintf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
       ___wmul
       _isdigit
   _principalScreen
     _SetDDRamAddr
       _DelayFor18TCY
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)
     _putrsXLCD
       _BusyXLCD
       _WriteDataXLCD
         _DelayFor18TCY
     _putsXLCD
       _BusyXLCD
       _WriteDataXLCD
         _DelayFor18TCY
     _sprintf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
       ___wmul
       _isdigit
   _setFrequency
     _SetDDRamAddr
       _DelayFor18TCY
     _beep
       ___wmul
     _lockingScreen
       _SetDDRamAddr
         _DelayFor18TCY
       _putsXLCD
         _BusyXLCD
         _WriteDataXLCD
           _DelayFor18TCY
       _sprintf
         ___lwdiv
         ___lwmod
           ___lwdiv (ARG)
         ___wmul
         _isdigit
     _putsXLCD
       _BusyXLCD
       _WriteDataXLCD
         _DelayFor18TCY
     _setData
       _writeEEPROM
     _sprintf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
       ___wmul
       _isdigit
     _writeFrequency
       _beep
         ___wmul
       _codFreq
   _start
     _SetDDRamAddr
       _DelayFor18TCY
     _beep
       ___wmul
     _putsXLCD
       _BusyXLCD
       _WriteDataXLCD
         _DelayFor18TCY
     _sprintf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
       ___wmul
       _isdigit
   _writeFrequency
     _beep
       ___wmul
     _codFreq

 _inter (ROOT)
   _time
     i1_setData
       i1_writeEEPROM
   _updateLCD
     i1_SetDDRamAddr
       i1_DelayFor18TCY
     i1___lwdiv
     i1___lwmod
       i1___lwdiv (ARG)
     i1_putsXLCD
       i1_BusyXLCD
       i1_WriteDataXLCD
         i1_DelayFor18TCY
     i1_sprintf
       i1___lwdiv
       i1___lwmod
         i1___lwdiv (ARG)
       i1___wmul
       i1_isdigit

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50     22      45       7       86.3%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     24      33       5       63.8%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      86      12        0.0%
ABS                  0      0      86       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Wed Sep 18 09:59:58 2019

              __CFG_CP$ON 0000          ??i1_SetDDRamAddr 0071                         _i 00A0  
                       pc 0002                _UN_BLOCKED 0812                        l60 0945  
                      l63 094B                        l57 08BD                        l66 0EED  
                      l69 0E30               __CFG_CPD$ON 0000                        fsr 0004  
     ___wmul@multiplicand 003F          i1___wmul@product 0074                       l210 04F2  
                     l212 054D                       l206 0A8E                       l214 05A8  
                     l215 05CB                       l410 17E0                       l234 0CBF  
                     l242 038E                       l251 0456                       l243 03F2  
                     l236 0CDC                       l252 0405                       l244 03A1  
                     l335 17AC                       l407 0A5E                       l271 07CE  
                     l263 0498                       l239 0388                       l256 0438  
                     l248 03D4                       l257 0445                       l249 03E1  
                     l338 17D3                       l266 0929                       l274 07FF  
                     l194 0F9D                       l371 0769                       l380 0D2C  
                     l268 092C                       l532 17ED                       l540 069A  
                     l541 069D                       l374 0C8D                       l471 0A07  
                     l199 0FEC                       l377 0C3E                       l481 08FA  
                     l537 062D                       l651 0122                       l398 0A2F  
                     l662 01DA                       l666 09C7                       l668 09DF  
                     l938 0F4C                       l948 0B54                       fsr0 0004  
                     indf 0000     __size_of_WriteCmdXLCD 004F           __end_of_BLOCKED 0814  
            __CFG_FOSC$XT 0000              __CFG_LVP$OFF 0000                      l1113 08E4  
                    l3111 0EA5                      l2401 0C06                      l3121 0ED7  
                    l3113 0EA7                      l4001 07AA                      l2411 0C2D  
                    l2403 0C0B                      l3123 0EE2                      l3115 0EB6  
                    l4003 07C2                      l4011 0F5C                      l2413 0C30  
                    l2405 0C0E                      l3117 0EC1                      l3109 0E8F  
                    l4005 07C8                      l4021 0F87                      l4013 0F66  
                    l2415 0C35                      l2407 0C13                      l3119 0ECC  
                    l2431 0C5A                      l2423 0C42                      l4031 0FBD  
                    l4023 0F92                      l4015 0F71                      l4007 0F4D  
                    l2409 0C28                      l2441 0C7F                      l2433 0C5D  
                    l2425 0C53                      l4041 0FDB                      l4033 0FC3  
                    l4025 0F98                      l4017 0F76                      l4009 0F57  
                    l2419 17D4                      l2371 0CF2                      l2443 0C84  
                    l2435 0C62                      l2427 0C54                      l2451 08DB  
                    l2531 0943                      l2523 0930                      l4043 0FE5  
                    l4035 0FD1                      l4027 0FA7                      l4019 0F81  
                    l2381 0D01                      l2373 0CF3                      l2701 0749  
                    l2437 0C77                      l2429 0C55                      l2453 08E1  
                    l2533 0944                      l2525 093A                      l4037 0FD4  
                    l4029 0FB8                      l2367 17A6                      l2383 0D16  
                    l2375 0CF4                      l2703 0753                      l2711 08E8  
                    l2439 0C7C                      l2455 08E3                      l2447 08D4  
                    l2527 093D                      l4047 0FF2                      l2393 17C8  
                    l2385 0D1B                      l2377 0CF9                      l2369 0CE0  
                    l2705 0759                      l2713 08E8                      l2641 0A0C  
                    l3601 0B21                      l2449 08D5                      l2529 093E  
                    l2387 0D1E                      l2379 0CFC                      l2395 0BF3  
                    l2707 0763                      l2651 06AB                      l2715 08F2  
                    l2643 0A16                      l3611 0B46                      l3603 0B27  
                    l2389 0D23                      l2397 0C04                      l2661 06B2  
                    l2653 06AC                      l2645 0A21                      l3605 0B2D  
                    l3613 0B4E                      l3701 016B                      l2399 0C05  
                    l2671 06CF                      l2663 06B3                      l2655 06AD  
                    l2647 0A27                      l2639 0A0B                      l3607 0B39  
                    l3703 0170                      l3631 003D                      l3711 01C4  
                    l3623 0CC2                      l2681 06F9                      l2673 06D7  
                    l2665 06B8                      l2657 06AE                      l2649 06A1  
                    l3801 09F6                      l3609 0B3F                      l3561 09CE  
                    l3705 01B0                      l3713 01D6                      l4089 00C4  
                    l3641 0062                      l3633 0043                      l3625 0CC9  
                    l3617 0C8E                      l3721 17E1                      l2691 0723  
                    l2683 0703                      l2675 06DD                      l2667 06BE  
                    l2659 06B1                      l3803 09FC                      l3811 0A68  
                    l2835 08B2                      l3571 0EF2                      l3563 09D5  
                    l3555 09B9                      l3707 01B7                      l3643 0066  
                    l3635 004A                      l3731 07F3                      l2851 0DF4  
                    l2843 0DD9                      l3619 0CB1                      l2693 0729  
                    l2685 0709                      l2677 06E7                      l2669 06C9  
                    l3821 0A75                      l3813 0A69                      l2837 08B6  
                    l3581 0F12                      l3573 0EFA                      l3565 09DB  
                    l3557 09BD                      l3709 01BB                      l3661 00DF  
                    l3645 0089                      l3653 00B0                      l3637 004F  
                    l3629 0038                      l3733 07F9                      l3725 07CF  
                    l2853 0E00                      l2845 0DDF                      l3741 05ED  
                    l3901 0499                      l2695 0733                      l2687 0713  
                    l2679 06F1                      l3831 0A82                      l3823 0A78  
                    l3815 0A6C                      l3807 0A5F                      l2839 08B9  
                    l3583 0F27                      l3575 0EFF                      l3591 0F40  
                    l3559 09C1                      l3671 00EA                      l3663 00E3  
                    l3655 00CF                      l3647 009C                      l3639 0052  
                    l3727 07E7                      l2855 0E0C                      l2847 0DE3  
                    l3751 05FD                      l3743 05F0                      l3911 04B8  
                    l2697 0739                      l2689 0719                      l2945 0914  
                    l3833 0A85                      l3825 0A79                      l3817 0A71  
                    l3809 0A67                      l2961 0A52                      l2953 0A33  
                    l3585 0F2D                      l3577 0F06                      l3569 0EEE  
                    l3681 011C                      l3665 00E8                      l3657 00D7  
                    l3649 00A0                      l3729 07ED                      l2857 0E18  
                    l2849 0DEA                      l3761 0621                      l3745 05F1  
                    l3737 05CC                      l3841 0365                      l3921 04DC  
                    l3913 04C4                      l2699 0743                      l2947 091C  
                    l3835 0A86                      l3827 0A7C                      l3819 0A72  
                    l2955 0A34                      l3587 0F30                      l3579 0F0C  
                    l3595 0B0D                      l3691 014A                      l3683 012D  
                    l3675 0106                      l3659 00DB                      l2859 0E24  
                    l3763 0629                      l3755 0604                      l3747 05F2  
                    l3739 05D0                      l3851 03AA                      l3843 0371  
                    l3923 04E6                      l3915 04CA                      l3907 049D  
                    l2949 091E                      l3829 0A7D                      l2957 0A3E  
                    l3589 0F38                      l3597 0B15                      l3693 014E  
                    l3685 0139                      l3677 0110                      l3781 0671  
                    l3765 0630                      l3757 0616                      l3773 0642  
                    l3749 05FA                      l3861 03DD                      l3853 03AE  
                    l3845 0377                      l3941 0525                      l3933 04F8  
                    l3925 04EC                      l3917 04D0                      l3909 04AC  
                    l2959 0A4C                      l3599 0B1A                      l3695 015A  
                    l3687 013D                      l3679 0116                      l3791 0693  
                    l3783 067F                      l3775 064A                      l3767 0638  
                    l3759 061E                      l3871 0412                      l3863 03EC  
                    l3855 03B9                      l3847 0392                      l3839 0361  
                    l3951 0547                      l3943 052B                      l3935 0507  
                    l3927 04F5                      l3919 04D6                      l3697 0160  
                    l3689 0143                      l3785 0682                      l3777 064D  
                    l3769 063B                      l3881 0450                      l3873 041D  
                    l3865 03F6                      l3857 03C5                      l3849 039B  
                    l3961 0562                      l3953 0550                      l3945 0531  
                    l3937 0513                      l3795 09E0                      l3699 0167  
                    l3779 0658                      l3891 047F                      l3883 045A  
                    l3875 0429                      l3867 03FF                      l3859 03CE  
                    l3971 058C                      l3963 056E                      l3947 0537  
                    l3939 051F                      l3797 09E6                      l3789 0689  
                    l3893 0482                      l3885 0468                      l3877 0432  
                    l3869 040E                      l3981 05B6                      l3973 0592  
                    l3965 057A                      l3949 0541                      l3799 09F0  
                    l3895 0487                      l3887 046E                      l3879 0441  
                    l3991 05CA                      l3983 05B7                      l3975 059C  
                    l3967 0580                      l3959 0553                      l3993 076A  
                    l3889 0474                      l3985 05C5                      l3977 05A2  
                    l3969 0586                      l3995 0770                      l3987 05C8  
                    l3979 05AB                      l3899 0499                      l3997 0776  
                    l3989 05C9                      l3999 0793                      STR_1 0837  
                    STR_2 089D                      STR_3 0837                      STR_4 0859  
                    STR_5 0837                      STR_6 087B                      STR_7 0848  
                    STR_8 086A                      STR_9 0814                      u2120 091C  
                    u1400 08DB                      u3000 0143                      u2121 091B  
                    u1401 08DA                      u3001 0142                      u2130 0A3E  
                    u1410 08E1                      u3010 015A                      u2131 0A3D  
                    u1411 08E0                      u3011 0159                      u2140 0A5E  
                    u3020 0160                      u3100 0392                      u2141 0A5D  
                    u3021 015F                      u3101 0391                      u3030 01C4  
                    u3110 039B                      u3031 01C3                      u3111 039A  
                    u3040 01D6                      u3200 0441                      u3120 03AA  
                    u3041 01D5                      u3201 0440                      u3121 03A9  
                    u3050 0603                      u3210 0456                      u3130 03CE  
                    u3051 0602                      u3211 0455                      u3131 03CD  
                    u3220 045A                      u3140 03DD                      u3300 055F  
                    u3221 0459                      u3141 03DC                      u3301 055B  
                    u3070 0629                      u3230 046E                      u3150 03F2  
                    u1375 0D0B                      u3071 0628                      u3231 046D  
                    u3151 03F1                      u1800 0713                      u3080 0688  
                    u3064 060D                      u3160 03F6                      u3320 05A8  
                    u3240 04A9                      u1385 0C1D                      u1801 0712  
                    u3081 0687                      u3065 060A                      u3161 03F5  
                    u3321 05A7                      u3241 04A5                      u1810 0723  
                    u3170 03FF                      u3090 038E                      u3314 0562  
                    u3330 0F87                      u1811 0722                      u1395 0C6C  
                    u3171 03FE                      u3091 038D                      u3331 0F86  
                    u1820 0733                      u3180 040E                      u3260 04F2  
                    u3340 0F98                      u1821 0732                      u3181 040D  
                    u3261 04F1                      u3341 0F97                      u1830 0743  
                    u1750 0A16                      u1590 094B                      u3190 0432  
                    u3270 0504                      u3254 04AC                      u3350 0FC3  
                    u1831 0742                      u1751 0A15                      u1591 094A  
                    u3191 0431                      u3271 0500                      u3351 0FC2  
                    u3407 0F8D                      _PIE1 008C                      u1840 0753  
                    u1760 0A2F                      u3360 0FDA                      u1841 0752  
                    u1761 0A2E                      u3361 0FD9                      u3417 0FCB  
                    u1850 0763                      u1770 06E7                      u2810 0F27  
                    u2730 09C1                      u3290 054D                      u3370 0FF2  
                    u1851 0762                      u1771 06E6                      u2811 0F26  
                    u2731 09C0                      u3507 044B                      u3291 054C  
                    u3371 0FF1                      u3427 0FE1                      u1780 06F1  
                    u1860 08F2                      u2900 0CBE                      u3284 0507  
                    u1781 06F0                      u1861 08F1                      u2805 0F15  
                    u2901 0CBD                      u3517 0462                      u3437 04E2  
                    u1790 0703                      u2830 0F40                      u2910 0043  
                    u1791 0702                      u2831 0F3F                      u2815 0F23  
                    u2911 0042                      u3607 0CD0                      u3527 05F6  
                    u3447 053D                      u2840 0B15                      u2760 09DB  
                    u2920 0062                      u3617 0924                      u2825 0F32  
                    u2841 0B14                      u2761 09DA                      u2745 09C8  
                    u2921 0061                      u2905 0CBA                      u3537 061A  
                    u3457 0598                      u2770 0EFA                      u2930 00B0  
                    u3627 09EC                      u2771 0EF9                      u2755 09CF  
                    u2931 00AF                      u3547 0634                      u3467 05BF  
                    u3387 0F53                      u2860 0B2D                      u2940 00DF  
                    u3637 0A02                      u2861 0B2C                      u2941 00DE  
                    u3557 0646                      u3477 03BF                      u3397 0F62  
                    u2790 0F12                      u2870 0B39                      u2950 0105  
                    u3647 06C4                      u2791 0F11                      u2871 0B38  
                    u2855 0B1B                      u2951 0104                      u3567 0660  
                    u3487 03E7                      u2960 0110                      u3657 06D3  
                    u2785 0F00                      u2961 010F                      u3577 0679  
                    u3497 0423                      u2890 0B4E                      u2970 0116  
                    u3667 17AA                      u2891 0B4D                      u2875 0B35  
                    u2971 0115                      u2955 0101                      u3587 068F  
                    i1l60 090D                      u2980 011C                      u3677 17CE  
                    u2885 0B40                      u2981 011B                      u3597 0CC6  
                    u2990 012D                      i1l63 0913                      u3687 17DA  
                    u2991 012C                      u2995 0129                      i1l69 0D82  
            __CFG_WRT$OFF 0000              _stereoEnable 0046                      _beep 0C8E  
                    _days 0049                      _main 0F4D                      _time 0D83  
                    btemp 007E    __size_of_WriteDataXLCD 004F                      start 0012  
       ??i1_WriteDataXLCD 0071             __CFG_IESO$OFF 0000             __CFG_MCLRE$ON 0000  
              i1_putsXLCD 094C               _writeEEPROM 092D              _WriteCmdXLCD 0BF0  
        ??_writeFrequency 00C7                     ?_beep 00C3        writeEEPROM@address 003D  
           ?_SetDDRamAddr 0070                     ?_main 0070                     _EEADR 010D  
                   STR_10 0826                     STR_11 088C                     STR_12 0814  
           __CFG_WDTE$OFF 0000                     ?_time 0070                     _ANSEL 0188  
                   _T1CON 0010           __end_of___lwdiv 0F4D                     i1l221 09AE  
                   i1l231 0DD8                     i1l410 17C7                     i1l229 0DD6  
                   i1l335 17A5           __end_of___lwmod 0B55                     i1l380 0BEF  
                   i1l374 0BA1                     i1l651 02BA                     i1l475 0E8E  
                   i1l398 096D                     i1l662 0360                     i1l666 097A  
                   i1l668 0992                     i1l938 0B0C                     i1l948 0AC8  
                   _TMR1H 000F                     _TMR1L 000E                     _PORTA 0005  
                   _PORTB 0006                     _PORTC 0007                     _TRISA 0085  
                   _TRISB 0086                     _TRISC 0087           __end_of_codFreq 17EE  
              i1isdigit@c 0071           __end_of_getData 0EEE            __CFG_FCMEN$OFF 0000  
      i1___lwmod@dividend 007A           __end_of_initLCD 0A08               ?i1_BusyXLCD 0070  
         __end_of_dpowers 0810      writeFrequency@buffer 00CA                     _level 004D  
                   _inter 0993           __end_of_isdigit 08E5                     _hours 0048  
         __end_of_setData 0E31                     _start 0499            __CFG_BOREN$OFF 0000  
                   pclath 000A          __end_ofi1___wmul 0993                     status 0003  
     i1___wmul@multiplier 0070                     wtemp0 007E           __end_of_sprintf 01DB  
      __size_ofi1___lwdiv 0044        __size_ofi1___lwmod 003A  __size_of_principalScreen 0065  
         __initialization 0015     __end_ofi1_writeEEPROM 0914         __end_of_FINAL_DAY 0811  
            __end_of_beep 0CDD              __end_of_main 1000              __end_of_time 0DD9  
        __end_of_BusyXLCD 17E1        __size_ofi1_isdigit 0012        __size_ofi1_setData 0056  
   __size_of_DelayPORXLCD 000C                i1sprintf@c 0030                i1sprintf@f 0020  
          ??_SetDDRamAddr 003E                _SendCMDLCD 08E5                    ??_beep 0043  
        __end_of_OpenXLCD 076A                    ??_main 00E2                    ??_time 0075  
      __size_ofi1_sprintf 0186             _WriteDataXLCD 0C3F  __size_ofi1_DelayFor18TCY 0006  
      _hundredMiliSeconds 0050                    _ADCON0 001F                    _ADCON1 009F  
                  ?_inter 0070                    _EEDATA 010C                    _EECON2 018D  
                  ?_start 0070                    _ANSELH 0189                    i1l1113 17FF  
                  i1l3001 0BE1                    i1l3003 0BE6                    i1l3011 0958  
                  i1l3013 0961                    i1l3101 035C                    i1l3021 01E9  
                  i1l3015 0965                    i1l3007 094D                    i1l3031 020C  
                  i1l3023 01F0                    u200_20 0A95                    i1l3009 094E  
                  u200_21 0A94                    i1l3033 0221                    i1l3041 0248  
                  i1l3025 01F5                    i1l3017 01DE                    i1l3051 027B  
                  i1l3043 0267                    i1l3035 0234                    i1l3027 01F8  
                  i1l3019 01E3                    i1l3053 0280                    i1l3045 026F  
                  i1l3037 0238                    i1l3029 0208                    i1l3071 02C5  
                  i1l3063 029E                    i1l3047 0273                    i1l2521 17A0  
                  i1l3081 02E6                    i1l3073 02D1                    i1l3065 02A8  
                  i1l3049 0277                    i1l3331 0D8F                    i1l3091 0308  
                  i1l3083 02F2                    i1l3075 02D5                    i1l3067 02AE  
                  i1l3059 0282                    i1l3341 0D9F                    i1l3333 0D90  
                  u201_25 0A99                    i1l3093 0336                    i1l3085 02F8  
                  i1l3077 02DB                    i1l3069 02B4                    i1l3351 0DB8  
                  i1l3343 0DA5                    i1l3335 0D94                    i1l3327 0D83  
                  i1l3095 033D                    i1l3087 02FF                    i1l3079 02E2  
                  i1l3431 09A0                    u202_20 0AA7                    i1l2721 08FC  
                  i1l3361 0DC8                    i1l3353 0DB9                    i1l3345 0DA6  
                  i1l3337 0D9A                    i1l3329 0D89                    u202_21 0AA6  
                  i1l2801 0A8F                    i1l3097 0341                    i1l3089 0303  
                  i1l3433 09A5                    i1l3425 0993                    i1l2731 090C  
                  i1l2723 0902                    i1l3363 0DCE                    i1l3355 0DBD  
                  i1l3347 0DAA                    i1l3339 0D9B                    i1l2811 0AA7  
                  i1l2803 0A95                    i1l4091 025C                    i1l3099 034A  
                  i1l3371 0E5E                    i1l3435 09AA                    i1l3427 0998  
                  i1l2725 0905                    i1l3365 0DD4                    i1l3357 0DC3  
                  i1l3349 0DB0                    i1l2741 0B6E                    i1l2733 0B56  
                  i1l2813 0AB1                    i1l2805 0A98                    i1l3373 0E76  
                  i1l3429 099C                    i1l3437 09AD                    i1l2727 0906  
                  i1l3359 0DC4                    i1l2751 0B93                    i1l2743 0B71  
                  i1l2735 0B67                    i1l2815 0AB7                    i1l2807 0A9F  
                  i1l2831 17FE                    i1l2823 17EF                    i1l3375 0E7C  
                  i1l3367 0E31                    u203_20 0AB1                    i1l2729 090B  
                  i1l2753 0B98                    i1l2745 0B76                    i1l2737 0B68  
                  i1l2817 0ABE                    u203_21 0AB0                    i1l2809 0AA3  
                  i1l2761 096E                    i1l2825 17F0                    i1l3377 0E82  
                  i1l3369 0E38                    i1l2747 0B8B                    i1l2739 0B69  
                  i1l2819 0AC4                    i1l2771 098E                    i1l2763 0970  
                  i1l2827 17F6                    i1l3379 0E88                    i1l2757 17BE  
                  i1l2749 0B90                    i1l2781 0AD4                    u203_25 0AAD  
                  i1l2765 0974                    i1l2829 17FC                    i1l2791 0AFA  
                  i1l2783 0ADB                    i1l2775 0AC9                    i1l2767 0981  
                  u220_20 0248                    i1l2793 0AFB                    i1l2785 0ADF  
                  i1l2777 0ACB                    i1l2769 0988                    u220_21 0247  
                  i1l2971 0D46                    i1l2963 0D2D                    i1l2795 0B02  
                  i1l2787 0AE3                    i1l2779 0AD1                    i1l2973 0D52  
                  i1l2965 0D33                    i1l2789 0AF4                    i1l2797 0B08  
                  u204_25 0AB8                    i1l2975 0D5E                    i1l2967 0D37  
                  i1l2991 0BBC                    i1l2983 0BA3                    u205_20 0AC4  
                  u221_20 0277                    i1l2977 0D6A                    i1l2969 0D3E  
                  i1l2993 0BBF                    i1l2985 0BB5                    u205_21 0AC3  
                  u221_21 0276                    i1l2979 0D76                    i1l2995 0BC4  
                  i1l2987 0BB6                    i1l2997 0BD9                    i1l2989 0BB7  
                  i1l2999 0BDE                    u206_20 17F6                    u230_20 034A  
                  u222_20 029D                    u206_21 17F5                    u230_21 0349  
                  u222_21 029C                    u222_25 0299                    u207_20 17FC  
                  u231_20 035C                    u223_20 02A8                    u207_21 17FB  
                  u231_21 035B                    u223_21 02A7                    u215_25 0BCE  
                  u216_20 0958                    u224_20 02AE                    u216_21 0957  
                  u224_21 02AD                    u217_20 096D                    u225_20 02B4  
                  _INTCON 000B                    u217_21 096C                    u225_21 02B3  
                  u226_20 02C5                    u218_20 01E9                    u226_21 02C4  
                  u218_21 01E8                    u226_25 02C1                    u227_20 02DB  
                  u219_20 0208                    u227_21 02DA                    u219_21 0207  
                  u260_20 0DC3                    u228_20 02F2                    u260_21 0DC2  
                  u228_21 02F1                    u261_20 0DCE                    u229_20 02F8  
                  u261_21 0DCD                    u229_21 02F7                    u262_20 0DD4  
                  u262_21 0DD3                    u190_25 097B                    u263_20 0E38  
                  u263_21 0E37                    u191_25 0982                    u256_20 0D8F  
                  u192_20 098E                    u256_21 0D8E                    u192_21 098D  
                  u257_20 0D9A                    u193_20 0AD1                    u257_21 0D99  
                  u193_21 0AD0                    u258_20 0DA5                    u258_21 0DA4  
                  u194_25 0AD5                    u370_27 17A2                    u187_20 0913  
                  u259_20 0DB8                    u195_20 0AE3                    u187_21 0912  
                  u259_21 0DB7                    u195_21 0AE2                    u188_25 0B80  
                  u196_25 0AE4                    u197_20 0AF4                    u189_20 0974  
                  u269_20 0998                    u197_21 0AF3                    u189_21 0973  
                  u269_21 0997                    u197_25 0AF0                    u198_25 0AFC  
                  u199_20 0B08                    u199_21 0B07                    u369_27 17C2  
           i1sprintf@flag 002A             i1sprintf@prec 0029            __CFG_PWRTE$OFF 0000  
            _DelayPORXLCD 17C8               ?i1_putsXLCD 0070                    ___wmul 09B9  
               ??___lwdiv 0041       __size_ofi1_BusyXLCD 000A                    beep@ms 00C3  
               ??___lwmod 0042                    _config 0A5F                 ??_codFreq 003F  
               ??_getData 003E                    _months 004A            ?_WriteDataXLCD 0070  
               ??_initLCD 00C3         __end_ofi1___lwdiv 0B0D         __end_ofi1___lwmod 0AC9  
               ??_isdigit 003D                 ??_setData 003F                    saved_w 007E  
        __end_of_putsXLCD 0A30                    start@i 00DE                 ??_sprintf 00CF  
       __end_ofi1_isdigit 1800         __end_ofi1_setData 0D83   __end_of__initialization 0031  
       __end_ofi1_sprintf 0361           writeEEPROM@data 003E            __pcstackCOMMON 0070  
            __pidataBANK0 17B5             __end_of_inter 09B9         ??_principalScreen 00DB  
           __end_of_start 05CC               ?_SendCMDLCD 0070                 ?i1___wmul 0070  
    i1SetDDRamAddr@DDaddr 0073               setData@full 0070               i1sprintf@ap 0028  
             i1sprintf@sp 002D    __size_of_lockingScreen 0031           i1_WriteDataXLCD 0B55  
     __size_ofi1_putsXLCD 0022                   ??_inter 0038    __size_of_DelayFor18TCY 0007  
            sprintf@width 00D7                   ??_start 00DB         ??i1_DelayFor18TCY 0070  
           ?_setFrequency 0070                __pbssBANK0 004D                __pbssBANK1 00A0  
               ?_BusyXLCD 0070           WriteCmdXLCD@cmd 0040      __end_of_SetDDRamAddr 0D2D  
               ?_OpenXLCD 0070                __pmaintext 0F4D              ?_writeEEPROM 003D  
       WriteDataXLCD@data 0040                   ?___wmul 003D                __pintentry 0004  
                 ?_config 0070           ??_WriteDataXLCD 003E                   _BLOCKED 0813  
          updateLCD@decim 0036                ??i1___wmul 0074            updateLCD@integ 0037  
              _isOnConfig 004E             ?_setTransStat 003D        __size_of_updateLCD 005E  
            ??i1_BusyXLCD 0070            ??_setFrequency 00DC                __stringtab 0800  
      __size_of_putrsXLCD 002F                ??_BusyXLCD 003D            i1sprintf@width 002E  
              _readEEPROM 08AF       __size_of_SendCMDLCD 0016                ??_OpenXLCD 0041  
           _lockingScreen 07CF             _DelayFor18TCY 17A6           __size_of___wmul 0027  
               ?_putsXLCD 0070                   ___lwdiv 0EEE                   ___lwmod 0B0D  
         __size_of_config 0030        __end_ofi1_BusyXLCD 17C8                 _FINAL_DAY 0810  
                 _codFreq 17E1           putrsXLCD@buffer 0042                   _getData 0E8F  
                 __ptext1 0499                   __ptext2 0361                   __ptext3 05CC  
                 __ptext4 17E1                   __ptext5 0C8E                   __ptext6 0DD9  
                 __ptext7 092D                   __ptext8 07CF                   __ptext9 076A  
                 _cntTmr1 0052   __end_ofi1_WriteDataXLCD 0BA2                   _initLCD 09E0  
               _T1CONbits 0010            ??_setTransStat 003F                   _dpowers 0806  
       i1___lwdiv@divisor 0070                   _lineOne 00B2                   _lineTwo 00A1  
                 _isdigit 08D1         i1___lwdiv@counter 0077                   _prTmr1H 004B  
                 _prTmr1L 004C                   _setData 0DD9                   _minutes 0047  
 __size_ofi1_SetDDRamAddr 004E                   _seconds 0051                   _sprintf 0035  
                 clrloop0 17AE      end_of_initialization 0031        __end_of_UN_BLOCKED 0813  
          ?_lockingScreen 0070              ??i1_putsXLCD 0074         __end_of_updateLCD 0E8F  
          ?_DelayFor18TCY 0070                ??_putsXLCD 0041     i1___wmul@multiplicand 0072  
       __end_of_putrsXLCD 0A5F                 _PORTAbits 0005                 _PORTBbits 0006  
               _PORTCbits 0007                 _TRISBbits 0086   __size_of_writeFrequency 00D2  
   __size_of_SetDDRamAddr 0050                 i1___lwdiv 0AC9                 i1___lwmod 0A8F  
  __size_ofi1_writeEEPROM 0019         readEEPROM@address 003D        __end_ofi1_putsXLCD 096E  
             ?_readEEPROM 0070           _principalScreen 076A                 i1_isdigit 17EE  
               i1_setData 0D2D                 i1_sprintf 01DB       __end_of_FINAL_MONTH 0812  
    __size_of_writeEEPROM 001F      __end_of_setFrequency 0499            __end_of___wmul 09E0  
            ??_SendCMDLCD 0041            __end_of_config 0A8F         i1___lwmod@divisor 0078  
       i1___lwmod@counter 007D              _SetDDRamAddr 0CDD           i1_DelayFor18TCY 17A0  
        ?i1_WriteDataXLCD 0070        SetDDRamAddr@DDaddr 0040       start_initialization 0015  
       __size_ofi1___wmul 0025                ?i1___lwdiv 0070                ?i1___lwmod 0078  
       __size_of_BusyXLCD 000D                ?i1_isdigit 0070              setData@data0 0040  
            setData@data1 0041           ??_lockingScreen 00DB                ?i1_setData 0070  
      __end_of_SendCMDLCD 08FB      __end_of_setTransStat 092D              i1sprintf@val 002B  
         ??_DelayFor18TCY 003D         __size_of_OpenXLCD 00CC                ?i1_sprintf 0020  
           i1_writeEEPROM 08FB                  ??___wmul 0041                init_fetch0 08BE  
           ?_WriteCmdXLCD 0070                  ??_config 0044               __pdataBANK0 0044  
     __size_of_readEEPROM 000F            i1_SetDDRamAddr 0BA2                 ___latbits 0002  
           __pcstackBANK0 0020             __pcstackBANK1 00C3              _isdigit$1104 003D  
 __end_of_principalScreen 07CF               sprintf@flag 00D4               sprintf@prec 00D3  
             _FINAL_MONTH 0811            putsXLCD@buffer 0042            i1setData@data0 0073  
          i1setData@data1 0074          ___lwdiv@dividend 003F            ?i1_writeEEPROM 0070  
 __end_ofi1_DelayFor18TCY 17A6            ??_WriteCmdXLCD 003E                  ?___lwdiv 003D  
                ?___lwmod 00C6                  ?_codFreq 003D                  ?_getData 0070  
           SendCMDLCD@CMD 0041                 __pstrings 0800         __size_of_putsXLCD 0028  
   __end_of_WriteDataXLCD 0C8E    __end_ofi1_SetDDRamAddr 0BF0                  ?_initLCD 0070  
                ?_isdigit 0070                  ?_setData 0070            _writeFrequency 05CC  
               _frequency 0044       i1WriteDataXLCD@data 0073          ___lwdiv@quotient 00C4  
             ??i1___lwdiv 0074               ??i1___lwmod 007C                 codFreq@fr 003F  
                ?_sprintf 00CA            __size_of_inter 0026            __size_of_start 0133  
          i1_isdigit$1104 0070         interrupt_function 0004            ___wmul@product 0041  
             ??i1_isdigit 0070                 clear_ram0 17AD               ??i1_setData 0072  
           ?_DelayPORXLCD 0070     __size_of_setFrequency 0138                  _PIR1bits 000C  
         OpenXLCD@lcdtype 0043                  _PIR2bits 000D          setTransStat@stat 003D  
             ??i1_sprintf 0025                 _updateLCD 0E31            _functionalStat 004F  
             __stringbase 0805         ___wmul@multiplier 003D                  i1___wmul 096E  
         ?i1_SetDDRamAddr 0070    __end_of_writeFrequency 069E                 _putrsXLCD 0A30  
        ?_principalScreen 0070              _setFrequency 0361                  _BusyXLCD 17D4  
   __size_of_setTransStat 0019              ??_readEEPROM 003D            ??_DelayPORXLCD 003D  
              _EECON1bits 018C                  _OpenXLCD 069E           ??i1_writeEEPROM 0071  
        ?i1_DelayFor18TCY 0070                ?_updateLCD 0070          __size_of___lwdiv 005F  
        __size_of___lwmod 0048      i1writeEEPROM@address 0070        __end_of__stringtab 0806  
        __size_of_codFreq 000D          __size_of_getData 005F           ?_writeFrequency 00C5  
              sprintf@val 00D5                ?_putrsXLCD 0070          __size_of_initLCD 0028  
      __end_of_readEEPROM 08BE              _setTransStat 0914          __size_of_isdigit 0014  
         ___lwdiv@divisor 003D          __size_of_setData 0058           ___lwdiv@counter 00C3  
                __ptext10 0035                  __ptext11 08D1                  __ptext20 0A5F  
                __ptext12 09B9                  __ptext21 0914                  __ptext13 0B0D  
                __ptext30 0993                  __ptext22 09E0                  __ptext14 0EEE  
                __ptext31 0E31                  __ptext23 08E5                  __ptext15 0A08  
                __ptext40 0BA2                  __ptext32 01DB                  __ptext24 069E  
                __ptext16 0A30                  __ptext41 17A0                  __ptext33 17EE  
                __ptext25 0BF0                  __ptext17 0C3F                  __ptext42 0D83  
                __ptext34 096E                  __ptext26 0CDD                  __ptext18 0E8F  
                __ptext43 0D2D                  __ptext35 0A8F                  __ptext27 17A6  
                __ptext19 08AF                  __ptext44 08FB                  __ptext36 0AC9  
                __ptext28 17C8                  __ptext37 094C                  __ptext29 17D4  
                __ptext38 0B55                  __ptext39 17BE         __CFG_BOR4V$BOR40V 0000  
    __end_of_WriteCmdXLCD 0C3F          __size_of_sprintf 01A6        i1___lwdiv@dividend 0072  
           __size_of_beep 004F         i1writeEEPROM@data 0071                  codFreq@f 003D  
           __size_of_main 00B3             __size_of_time 0056             ??_writeEEPROM 003E  
                _putsXLCD 0A08           writeFrequency@f 00C5           writeFrequency@r 00CC  
      i1___lwdiv@quotient 0075               getData@aux0 0042               getData@aux1 0043  
              _INTCONbits 000B                  init_ram0 08C2                  isdigit@c 003E  
__size_ofi1_WriteDataXLCD 004D                  intlevel1 0000                 sprintf@ap 00D2  
               sprintf@sp 00D9          ___lwmod@dividend 00C8                 stringcode 0800  
   __end_of_lockingScreen 0800     __end_of_DelayFor18TCY 17AD               ??_updateLCD 0031  
     __end_of_writeEEPROM 094C                  sprintf@c 00DA                  sprintf@f 00CA  
    __end_of_DelayPORXLCD 17D4          i1putsXLCD@buffer 0075               ??_putrsXLCD 0041  
         ___lwmod@divisor 00C6           ___lwmod@counter 0043                  stringdir 0800  
                stringtab 0800                i1_BusyXLCD 17BE      principalScreen@decim 00E0  
    principalScreen@integ 00E1  
