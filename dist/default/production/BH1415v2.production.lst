

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Fri Aug 23 02:41:50 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	16F886
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	eeprom_data,global,class=EEDATA,space=3,delta=2
     5                           	psect	idataBANK0,global,class=CODE,delta=2
     6                           	psect	strings,global,class=STRING,delta=2
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	inittext,global,class=CODE,delta=2
    12                           	psect	clrtext,global,class=CODE,delta=2
    13                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    14                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    16                           	psect	maintext,global,class=CODE,split=1,delta=2
    17                           	psect	text1,local,class=CODE,merge=1,delta=2
    18                           	psect	text2,local,class=CODE,merge=1,delta=2
    19                           	psect	text3,local,class=CODE,merge=1,delta=2
    20                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    21                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    22                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    23                           	psect	text7,local,class=CODE,merge=1,delta=2
    24                           	psect	text8,local,class=CODE,merge=1,delta=2
    25                           	psect	text9,local,class=CODE,merge=1,delta=2
    26                           	psect	text10,local,class=CODE,merge=1,delta=2
    27                           	psect	text11,local,class=CODE,merge=1,delta=2,group=1
    28                           	psect	text12,local,class=CODE,merge=1,delta=2
    29                           	psect	text13,local,class=CODE,merge=1,delta=2
    30                           	psect	text14,local,class=CODE,merge=1,delta=2
    31                           	psect	text15,local,class=CODE,merge=1,delta=2
    32                           	psect	text16,local,class=CODE,merge=1,delta=2
    33                           	psect	text17,local,class=CODE,merge=1,delta=2
    34                           	psect	text18,local,class=CODE,merge=1,delta=2
    35                           	psect	text19,local,class=CODE,merge=1,delta=2
    36                           	psect	text20,local,class=CODE,merge=1,delta=2
    37                           	psect	text21,local,class=CODE,merge=1,delta=2
    38                           	psect	text22,local,class=CODE,merge=1,delta=2
    39                           	psect	text23,local,class=CODE,merge=1,delta=2
    40                           	psect	text24,local,class=CODE,merge=1,delta=2
    41                           	psect	text25,local,class=CODE,merge=1,delta=2
    42                           	psect	text26,local,class=CODE,merge=1,delta=2
    43                           	psect	text27,local,class=CODE,merge=1,delta=2
    44                           	psect	text28,local,class=CODE,merge=1,delta=2
    45                           	psect	intentry,global,class=CODE,delta=2
    46                           	psect	text29,local,class=CODE,merge=1,delta=2
    47                           	psect	text30,local,class=CODE,merge=1,delta=2
    48                           	psect	text31,local,class=CODE,merge=1,delta=2
    49                           	psect	text32,local,class=CODE,merge=1,delta=2
    50                           	psect	text33,local,class=CODE,merge=1,delta=2
    51                           	psect	text34,local,class=CODE,merge=1,delta=2
    52                           	psect	text35,local,class=CODE,merge=1,delta=2
    53                           	psect	text36,local,class=CODE,merge=1,delta=2
    54                           	psect	text37,local,class=CODE,merge=1,delta=2
    55                           	psect	text38,local,class=CODE,merge=1,delta=2
    56                           	psect	text39,local,class=CODE,merge=1,delta=2
    57                           	psect	text40,local,class=CODE,merge=1,delta=2
    58                           	psect	text41,local,class=CODE,merge=1,delta=2
    59                           	psect	text42,local,class=CODE,merge=1,delta=2
    60                           	dabs	1,0x7E,2
    61  0000                     
    62                           ; Version 2.05
    63                           ; Generated 20/12/2018 GMT
    64                           ; 
    65                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    66                           ; All rights reserved.
    67                           ; 
    68                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    69                           ; 
    70                           ; Redistribution and use in source and binary forms, with or without modification, are
    71                           ; permitted provided that the following conditions are met:
    72                           ; 
    73                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    74                           ;        conditions and the following disclaimer.
    75                           ; 
    76                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    77                           ;        of conditions and the following disclaimer in the documentation and/or other
    78                           ;        materials provided with the distribution.
    79                           ; 
    80                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    81                           ;        software without specific prior written permission.
    82                           ; 
    83                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    84                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    85                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    86                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    87                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    88                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    89                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    90                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    91                           ; 
    92                           ; 
    93                           ; Code-generator required, PIC16F886 Definitions
    94                           ; 
    95                           ; SFR Addresses
    96  0000                     	;# 
    97  0001                     	;# 
    98  0002                     	;# 
    99  0003                     	;# 
   100  0004                     	;# 
   101  0005                     	;# 
   102  0006                     	;# 
   103  0007                     	;# 
   104  0009                     	;# 
   105  000A                     	;# 
   106  000B                     	;# 
   107  000C                     	;# 
   108  000D                     	;# 
   109  000E                     	;# 
   110  000E                     	;# 
   111  000F                     	;# 
   112  0010                     	;# 
   113  0011                     	;# 
   114  0012                     	;# 
   115  0013                     	;# 
   116  0014                     	;# 
   117  0015                     	;# 
   118  0015                     	;# 
   119  0016                     	;# 
   120  0017                     	;# 
   121  0018                     	;# 
   122  0019                     	;# 
   123  001A                     	;# 
   124  001B                     	;# 
   125  001B                     	;# 
   126  001C                     	;# 
   127  001D                     	;# 
   128  001E                     	;# 
   129  001F                     	;# 
   130  0081                     	;# 
   131  0085                     	;# 
   132  0086                     	;# 
   133  0087                     	;# 
   134  0089                     	;# 
   135  008C                     	;# 
   136  008D                     	;# 
   137  008E                     	;# 
   138  008F                     	;# 
   139  0090                     	;# 
   140  0091                     	;# 
   141  0092                     	;# 
   142  0093                     	;# 
   143  0093                     	;# 
   144  0093                     	;# 
   145  0094                     	;# 
   146  0095                     	;# 
   147  0096                     	;# 
   148  0097                     	;# 
   149  0098                     	;# 
   150  0099                     	;# 
   151  009A                     	;# 
   152  009B                     	;# 
   153  009C                     	;# 
   154  009D                     	;# 
   155  009E                     	;# 
   156  009F                     	;# 
   157  0105                     	;# 
   158  0107                     	;# 
   159  0108                     	;# 
   160  0109                     	;# 
   161  010C                     	;# 
   162  010C                     	;# 
   163  010D                     	;# 
   164  010E                     	;# 
   165  010F                     	;# 
   166  0185                     	;# 
   167  0187                     	;# 
   168  0188                     	;# 
   169  0189                     	;# 
   170  018C                     	;# 
   171  018D                     	;# 
   172                           
   173                           	psect	eeprom_data
   174  0000  007E 0003 0000 0000 0000 0000 0001 0000 	db	126,3,0,0,0,0,1,0	;# 
   175  0000                     	;# 
   176  0001                     	;# 
   177  0002                     	;# 
   178  0003                     	;# 
   179  0004                     	;# 
   180  0005                     	;# 
   181  0006                     	;# 
   182  0007                     	;# 
   183  0009                     	;# 
   184  000A                     	;# 
   185  000B                     	;# 
   186  000C                     	;# 
   187  000D                     	;# 
   188  000E                     	;# 
   189  000E                     	;# 
   190  000F                     	;# 
   191  0010                     	;# 
   192  0011                     	;# 
   193  0012                     	;# 
   194  0013                     	;# 
   195  0014                     	;# 
   196  0015                     	;# 
   197  0015                     	;# 
   198  0016                     	;# 
   199  0017                     	;# 
   200  0018                     	;# 
   201  0019                     	;# 
   202  001A                     	;# 
   203  001B                     	;# 
   204  001B                     	;# 
   205  001C                     	;# 
   206  001D                     	;# 
   207  001E                     	;# 
   208  001F                     	;# 
   209  0081                     	;# 
   210  0085                     	;# 
   211  0086                     	;# 
   212  0087                     	;# 
   213  0089                     	;# 
   214  008C                     	;# 
   215  008D                     	;# 
   216  008E                     	;# 
   217  008F                     	;# 
   218  0090                     	;# 
   219  0091                     	;# 
   220  0092                     	;# 
   221  0093                     	;# 
   222  0093                     	;# 
   223  0093                     	;# 
   224  0094                     	;# 
   225  0095                     	;# 
   226  0096                     	;# 
   227  0097                     	;# 
   228  0098                     	;# 
   229  0099                     	;# 
   230  009A                     	;# 
   231  009B                     	;# 
   232  009C                     	;# 
   233  009D                     	;# 
   234  009E                     	;# 
   235  009F                     	;# 
   236  0105                     	;# 
   237  0107                     	;# 
   238  0108                     	;# 
   239  0109                     	;# 
   240  010C                     	;# 
   241  010C                     	;# 
   242  010D                     	;# 
   243  010E                     	;# 
   244  010F                     	;# 
   245  0185                     	;# 
   246  0187                     	;# 
   247  0188                     	;# 
   248  0189                     	;# 
   249  018C                     	;# 
   250  018D                     	;# 
   251  0008  007E 0003 0000 0000 0000 0000 0001 0000 	db	126,3,0,0,0,0,1,0	;# 
   252  0000                     	;# 
   253  0001                     	;# 
   254  0002                     	;# 
   255  0003                     	;# 
   256  0004                     	;# 
   257  0005                     	;# 
   258  0006                     	;# 
   259  0007                     	;# 
   260  0009                     	;# 
   261  000A                     	;# 
   262  000B                     	;# 
   263  000C                     	;# 
   264  000D                     	;# 
   265  000E                     	;# 
   266  000E                     	;# 
   267  000F                     	;# 
   268  0010                     	;# 
   269  0011                     	;# 
   270  0012                     	;# 
   271  0013                     	;# 
   272  0014                     	;# 
   273  0015                     	;# 
   274  0015                     	;# 
   275  0016                     	;# 
   276  0017                     	;# 
   277  0018                     	;# 
   278  0019                     	;# 
   279  001A                     	;# 
   280  001B                     	;# 
   281  001B                     	;# 
   282  001C                     	;# 
   283  001D                     	;# 
   284  001E                     	;# 
   285  001F                     	;# 
   286  0081                     	;# 
   287  0085                     	;# 
   288  0086                     	;# 
   289  0087                     	;# 
   290  0089                     	;# 
   291  008C                     	;# 
   292  008D                     	;# 
   293  008E                     	;# 
   294  008F                     	;# 
   295  0090                     	;# 
   296  0091                     	;# 
   297  0092                     	;# 
   298  0093                     	;# 
   299  0093                     	;# 
   300  0093                     	;# 
   301  0094                     	;# 
   302  0095                     	;# 
   303  0096                     	;# 
   304  0097                     	;# 
   305  0098                     	;# 
   306  0099                     	;# 
   307  009A                     	;# 
   308  009B                     	;# 
   309  009C                     	;# 
   310  009D                     	;# 
   311  009E                     	;# 
   312  009F                     	;# 
   313  0105                     	;# 
   314  0107                     	;# 
   315  0108                     	;# 
   316  0109                     	;# 
   317  010C                     	;# 
   318  010C                     	;# 
   319  010D                     	;# 
   320  010E                     	;# 
   321  010F                     	;# 
   322  0185                     	;# 
   323  0187                     	;# 
   324  0188                     	;# 
   325  0189                     	;# 
   326  018C                     	;# 
   327  018D                     	;# 
   328  0010  007E 0003 0000 0000 0000 0000 0001 0000 	db	126,3,0,0,0,0,1,0	;# 
   329  0000                     	;# 
   330  0001                     	;# 
   331  0002                     	;# 
   332  0003                     	;# 
   333  0004                     	;# 
   334  0005                     	;# 
   335  0006                     	;# 
   336  0007                     	;# 
   337  0009                     	;# 
   338  000A                     	;# 
   339  000B                     	;# 
   340  000C                     	;# 
   341  000D                     	;# 
   342  000E                     	;# 
   343  000E                     	;# 
   344  000F                     	;# 
   345  0010                     	;# 
   346  0011                     	;# 
   347  0012                     	;# 
   348  0013                     	;# 
   349  0014                     	;# 
   350  0015                     	;# 
   351  0015                     	;# 
   352  0016                     	;# 
   353  0017                     	;# 
   354  0018                     	;# 
   355  0019                     	;# 
   356  001A                     	;# 
   357  001B                     	;# 
   358  001B                     	;# 
   359  001C                     	;# 
   360  001D                     	;# 
   361  001E                     	;# 
   362  001F                     	;# 
   363  0081                     	;# 
   364  0085                     	;# 
   365  0086                     	;# 
   366  0087                     	;# 
   367  0089                     	;# 
   368  008C                     	;# 
   369  008D                     	;# 
   370  008E                     	;# 
   371  008F                     	;# 
   372  0090                     	;# 
   373  0091                     	;# 
   374  0092                     	;# 
   375  0093                     	;# 
   376  0093                     	;# 
   377  0093                     	;# 
   378  0094                     	;# 
   379  0095                     	;# 
   380  0096                     	;# 
   381  0097                     	;# 
   382  0098                     	;# 
   383  0099                     	;# 
   384  009A                     	;# 
   385  009B                     	;# 
   386  009C                     	;# 
   387  009D                     	;# 
   388  009E                     	;# 
   389  009F                     	;# 
   390  0105                     	;# 
   391  0107                     	;# 
   392  0108                     	;# 
   393  0109                     	;# 
   394  010C                     	;# 
   395  010C                     	;# 
   396  010D                     	;# 
   397  010E                     	;# 
   398  010F                     	;# 
   399  0185                     	;# 
   400  0187                     	;# 
   401  0188                     	;# 
   402  0189                     	;# 
   403  018C                     	;# 
   404  018D                     	;# 
   405  0018  007E 0003 0000 0000 0000 0000 0001 0000 	db	126,3,0,0,0,0,1,0	;# 
   406  0000                     	;# 
   407  0001                     	;# 
   408  0002                     	;# 
   409  0003                     	;# 
   410  0004                     	;# 
   411  0005                     	;# 
   412  0006                     	;# 
   413  0007                     	;# 
   414  0009                     	;# 
   415  000A                     	;# 
   416  000B                     	;# 
   417  000C                     	;# 
   418  000D                     	;# 
   419  000E                     	;# 
   420  000E                     	;# 
   421  000F                     	;# 
   422  0010                     	;# 
   423  0011                     	;# 
   424  0012                     	;# 
   425  0013                     	;# 
   426  0014                     	;# 
   427  0015                     	;# 
   428  0015                     	;# 
   429  0016                     	;# 
   430  0017                     	;# 
   431  0018                     	;# 
   432  0019                     	;# 
   433  001A                     	;# 
   434  001B                     	;# 
   435  001B                     	;# 
   436  001C                     	;# 
   437  001D                     	;# 
   438  001E                     	;# 
   439  001F                     	;# 
   440  0081                     	;# 
   441  0085                     	;# 
   442  0086                     	;# 
   443  0087                     	;# 
   444  0089                     	;# 
   445  008C                     	;# 
   446  008D                     	;# 
   447  008E                     	;# 
   448  008F                     	;# 
   449  0090                     	;# 
   450  0091                     	;# 
   451  0092                     	;# 
   452  0093                     	;# 
   453  0093                     	;# 
   454  0093                     	;# 
   455  0094                     	;# 
   456  0095                     	;# 
   457  0096                     	;# 
   458  0097                     	;# 
   459  0098                     	;# 
   460  0099                     	;# 
   461  009A                     	;# 
   462  009B                     	;# 
   463  009C                     	;# 
   464  009D                     	;# 
   465  009E                     	;# 
   466  009F                     	;# 
   467  0105                     	;# 
   468  0107                     	;# 
   469  0108                     	;# 
   470  0109                     	;# 
   471  010C                     	;# 
   472  010C                     	;# 
   473  010D                     	;# 
   474  010E                     	;# 
   475  010F                     	;# 
   476  0185                     	;# 
   477  0187                     	;# 
   478  0188                     	;# 
   479  0189                     	;# 
   480  018C                     	;# 
   481  018D                     	;# 
   482  0020  007E 0003 0000 0000 0000 0000 0001 0000 	db	126,3,0,0,0,0,1,0	;# 
   483  0000                     	;# 
   484  0001                     	;# 
   485  0002                     	;# 
   486  0003                     	;# 
   487  0004                     	;# 
   488  0005                     	;# 
   489  0006                     	;# 
   490  0007                     	;# 
   491  0009                     	;# 
   492  000A                     	;# 
   493  000B                     	;# 
   494  000C                     	;# 
   495  000D                     	;# 
   496  000E                     	;# 
   497  000E                     	;# 
   498  000F                     	;# 
   499  0010                     	;# 
   500  0011                     	;# 
   501  0012                     	;# 
   502  0013                     	;# 
   503  0014                     	;# 
   504  0015                     	;# 
   505  0015                     	;# 
   506  0016                     	;# 
   507  0017                     	;# 
   508  0018                     	;# 
   509  0019                     	;# 
   510  001A                     	;# 
   511  001B                     	;# 
   512  001B                     	;# 
   513  001C                     	;# 
   514  001D                     	;# 
   515  001E                     	;# 
   516  001F                     	;# 
   517  0081                     	;# 
   518  0085                     	;# 
   519  0086                     	;# 
   520  0087                     	;# 
   521  0089                     	;# 
   522  008C                     	;# 
   523  008D                     	;# 
   524  008E                     	;# 
   525  008F                     	;# 
   526  0090                     	;# 
   527  0091                     	;# 
   528  0092                     	;# 
   529  0093                     	;# 
   530  0093                     	;# 
   531  0093                     	;# 
   532  0094                     	;# 
   533  0095                     	;# 
   534  0096                     	;# 
   535  0097                     	;# 
   536  0098                     	;# 
   537  0099                     	;# 
   538  009A                     	;# 
   539  009B                     	;# 
   540  009C                     	;# 
   541  009D                     	;# 
   542  009E                     	;# 
   543  009F                     	;# 
   544  0105                     	;# 
   545  0107                     	;# 
   546  0108                     	;# 
   547  0109                     	;# 
   548  010C                     	;# 
   549  010C                     	;# 
   550  010D                     	;# 
   551  010E                     	;# 
   552  010F                     	;# 
   553  0185                     	;# 
   554  0187                     	;# 
   555  0188                     	;# 
   556  0189                     	;# 
   557  018C                     	;# 
   558  018D                     	;# 
   559                           
   560                           	psect	idataBANK0
   561  0969                     __pidataBANK0:	
   562                           
   563                           ;initializer for _stereoEnable
   564  0969  3401               	retlw	1
   565                           
   566                           ;initializer for _minutes
   567  096A  340F               	retlw	15
   568                           
   569                           ;initializer for _hours
   570  096B  3416               	retlw	22
   571                           
   572                           ;initializer for _days
   573  096C  3413               	retlw	19
   574                           
   575                           ;initializer for _months
   576  096D  3403               	retlw	3
   577                           
   578                           ;initializer for _prTmr1H
   579  096E  343C               	retlw	60
   580                           
   581                           ;initializer for _prTmr1L
   582  096F  34B0               	retlw	176
   583                           
   584                           	psect	strings
   585  0800                     __pstrings:	
   586  0800                     stringtab:	
   587  0800                     __stringtab:	
   588  0800                     stringcode:	
   589                           ;	String table - string pointers are 1 byte each
   590                           
   591  0800                     stringdir:	
   592  0800  3008               	movlw	high stringdir
   593  0801  008A               	movwf	10
   594  0802  0804               	movf	4,w
   595  0803  0A84               	incf	4,f
   596  0804  0782               	addwf	2,f
   597  0805                     __stringbase:	
   598  0805  3400               	retlw	0
   599  0806                     __end_of__stringtab:	
   600  0806                     _dpowers:	
   601  0806  3401               	retlw	1
   602  0807  3400               	retlw	0
   603  0808  340A               	retlw	10
   604  0809  3400               	retlw	0
   605  080A  3464               	retlw	100
   606  080B  3400               	retlw	0
   607  080C  34E8               	retlw	232
   608  080D  3403               	retlw	3
   609  080E  3410               	retlw	16
   610  080F  3427               	retlw	39
   611  0810                     __end_of_dpowers:	
   612  0810                     _FINAL_DAY:	
   613  0810  340D               	retlw	13
   614  0811                     __end_of_FINAL_DAY:	
   615  0811                     _FINAL_MONTH:	
   616  0811  3406               	retlw	6
   617  0812                     __end_of_FINAL_MONTH:	
   618  0812                     _UN_BLOCKED:	
   619  0812  3401               	retlw	1
   620  0813                     __end_of_UN_BLOCKED:	
   621  0813                     _BLOCKED:	
   622  0813  3400               	retlw	0
   623  0814                     __end_of_BLOCKED:	
   624  0006                     _PORTBbits	set	6
   625  000E                     _TMR1L	set	14
   626  000F                     _TMR1H	set	15
   627  000C                     _PIR1bits	set	12
   628  0007                     _PORTCbits	set	7
   629  0010                     _T1CONbits	set	16
   630  001F                     _ADCON0	set	31
   631  0010                     _T1CON	set	16
   632  0007                     _PORTC	set	7
   633  0006                     _PORTB	set	6
   634  0005                     _PORTA	set	5
   635  000B                     _INTCON	set	11
   636  0005                     _PORTAbits	set	5
   637  000D                     _PIR2bits	set	13
   638  000B                     _INTCONbits	set	11
   639  0086                     _TRISBbits	set	134
   640  009F                     _ADCON1	set	159
   641  0087                     _TRISC	set	135
   642  0086                     _TRISB	set	134
   643  0085                     _TRISA	set	133
   644  008C                     _PIE1	set	140
   645  010C                     _EEDATA	set	268
   646  010D                     _EEADR	set	269
   647  0189                     _ANSELH	set	393
   648  0188                     _ANSEL	set	392
   649  018D                     _EECON2	set	397
   650  018C                     _EECON1bits	set	396
   651  0814                     STR_2:	
   652  0814  3446               	retlw	70	;'F'
   653  0815  3452               	retlw	82	;'R'
   654  0816  3445               	retlw	69	;'E'
   655  0817  3451               	retlw	81	;'Q'
   656  0818  342E               	retlw	46	;'.'
   657  0819  3420               	retlw	32	;' '
   658  081A  3420               	retlw	32	;' '
   659  081B  3425               	retlw	37	;'%'
   660  081C  3433               	retlw	51	;'3'
   661  081D  3464               	retlw	100	;'d'
   662  081E  342E               	retlw	46	;'.'
   663  081F  3425               	retlw	37	;'%'
   664  0820  3464               	retlw	100	;'d'
   665  0821  3420               	retlw	32	;' '
   666  0822  344D               	retlw	77	;'M'
   667  0823  3448               	retlw	72	;'H'
   668  0824  347A               	retlw	122	;'z'
   669  0825  3400               	retlw	0
   670  0826                     STR_10:	
   671  0826  344C               	retlw	76	;'L'
   672  0827  344F               	retlw	79	;'O'
   673  0828  3443               	retlw	67	;'C'
   674  0829  344B               	retlw	75	;'K'
   675  082A  3449               	retlw	73	;'I'
   676  082B  344E               	retlw	78	;'N'
   677  082C  3447               	retlw	71	;'G'
   678  082D  3420               	retlw	32	;' '
   679  082E  3420               	retlw	32	;' '
   680  082F  3420               	retlw	32	;' '
   681  0830  3420               	retlw	32	;' '
   682  0831  3420               	retlw	32	;' '
   683  0832  3420               	retlw	32	;' '
   684  0833  3420               	retlw	32	;' '
   685  0834  3420               	retlw	32	;' '
   686  0835  3420               	retlw	32	;' '
   687  0836  3400               	retlw	0
   688  0837                     STR_3:	
   689  0837  3454               	retlw	84	;'T'
   690  0838  3445               	retlw	69	;'E'
   691  0839  3453               	retlw	83	;'S'
   692  083A  3454               	retlw	84	;'T'
   693  083B  3449               	retlw	73	;'I'
   694  083C  344E               	retlw	78	;'N'
   695  083D  3447               	retlw	71	;'G'
   696  083E  3420               	retlw	32	;' '
   697  083F  3420               	retlw	32	;' '
   698  0840  3420               	retlw	32	;' '
   699  0841  3420               	retlw	32	;' '
   700  0842  3420               	retlw	32	;' '
   701  0843  3420               	retlw	32	;' '
   702  0844  3420               	retlw	32	;' '
   703  0845  3420               	retlw	32	;' '
   704  0846  3420               	retlw	32	;' '
   705  0847  3400               	retlw	0
   706  0848                     STR_9:	
   707  0848  3453               	retlw	83	;'S'
   708  0849  3445               	retlw	69	;'E'
   709  084A  3454               	retlw	84	;'T'
   710  084B  3420               	retlw	32	;' '
   711  084C  3420               	retlw	32	;' '
   712  084D  3420               	retlw	32	;' '
   713  084E  3446               	retlw	70	;'F'
   714  084F  3452               	retlw	82	;'R'
   715  0850  3445               	retlw	69	;'E'
   716  0851  3451               	retlw	81	;'Q'
   717  0852  3455               	retlw	85	;'U'
   718  0853  3445               	retlw	69	;'E'
   719  0854  344E               	retlw	78	;'N'
   720  0855  3443               	retlw	67	;'C'
   721  0856  3459               	retlw	89	;'Y'
   722  0857  3420               	retlw	32	;' '
   723  0858  3400               	retlw	0
   724  0859                     STR_6:	
   725  0859  3420               	retlw	32	;' '
   726  085A  3420               	retlw	32	;' '
   727  085B  3420               	retlw	32	;' '
   728  085C  3420               	retlw	32	;' '
   729  085D  3420               	retlw	32	;' '
   730  085E  3454               	retlw	84	;'T'
   731  085F  3445               	retlw	69	;'E'
   732  0860  344D               	retlw	77	;'M'
   733  0861  3450               	retlw	80	;'P'
   734  0862  3445               	retlw	69	;'E'
   735  0863  3452               	retlw	82	;'R'
   736  0864  3441               	retlw	65	;'A'
   737  0865  3454               	retlw	84	;'T'
   738  0866  3455               	retlw	85	;'U'
   739  0867  3452               	retlw	82	;'R'
   740  0868  3445               	retlw	69	;'E'
   741  0869  3400               	retlw	0
   742  086A                     STR_1:	
   743  086A  3441               	retlw	65	;'A'
   744  086B  344D               	retlw	77	;'M'
   745  086C  3450               	retlw	80	;'P'
   746  086D  3452               	retlw	82	;'R'
   747  086E  344F               	retlw	79	;'O'
   748  086F  3420               	retlw	32	;' '
   749  0870  3420               	retlw	32	;' '
   750  0871  3420               	retlw	32	;' '
   751  0872  3420               	retlw	32	;' '
   752  0873  3420               	retlw	32	;' '
   753  0874  3420               	retlw	32	;' '
   754  0875  3445               	retlw	69	;'E'
   755  0876  3458               	retlw	88	;'X'
   756  0877  342D               	retlw	45	;'-'
   757  0878  3446               	retlw	70	;'F'
   758  0879  344D               	retlw	77	;'M'
   759  087A  3400               	retlw	0
   760  087B                     STR_8:	
   761  087B  3420               	retlw	32	;' '
   762  087C  3420               	retlw	32	;' '
   763  087D  3420               	retlw	32	;' '
   764  087E  3420               	retlw	32	;' '
   765  087F  3420               	retlw	32	;' '
   766  0880  3420               	retlw	32	;' '
   767  0881  3420               	retlw	32	;' '
   768  0882  3420               	retlw	32	;' '
   769  0883  3420               	retlw	32	;' '
   770  0884  3420               	retlw	32	;' '
   771  0885  3420               	retlw	32	;' '
   772  0886  3420               	retlw	32	;' '
   773  0887  3420               	retlw	32	;' '
   774  0888  3453               	retlw	83	;'S'
   775  0889  3457               	retlw	87	;'W'
   776  088A  3452               	retlw	82	;'R'
   777  088B  3400               	retlw	0
   778  088C                     STR_11:	
   779  088C  3420               	retlw	32	;' '
   780  088D  3420               	retlw	32	;' '
   781  088E  3420               	retlw	32	;' '
   782  088F  3420               	retlw	32	;' '
   783  0890  3420               	retlw	32	;' '
   784  0891  3420               	retlw	32	;' '
   785  0892  3420               	retlw	32	;' '
   786  0893  3446               	retlw	70	;'F'
   787  0894  3452               	retlw	82	;'R'
   788  0895  3445               	retlw	69	;'E'
   789  0896  3451               	retlw	81	;'Q'
   790  0897  3455               	retlw	85	;'U'
   791  0898  3445               	retlw	69	;'E'
   792  0899  344E               	retlw	78	;'N'
   793  089A  3443               	retlw	67	;'C'
   794  089B  3459               	retlw	89	;'Y'
   795  089C  3400               	retlw	0
   796  089D                     STR_4:	
   797  089D  3420               	retlw	32	;' '
   798  089E  3420               	retlw	32	;' '
   799  089F  3420               	retlw	32	;' '
   800  08A0  3420               	retlw	32	;' '
   801  08A1  3420               	retlw	32	;' '
   802  08A2  3420               	retlw	32	;' '
   803  08A3  3420               	retlw	32	;' '
   804  08A4  3420               	retlw	32	;' '
   805  08A5  3420               	retlw	32	;' '
   806  08A6  3420               	retlw	32	;' '
   807  08A7  3453               	retlw	83	;'S'
   808  08A8  3455               	retlw	85	;'U'
   809  08A9  3450               	retlw	80	;'P'
   810  08AA  3450               	retlw	80	;'P'
   811  08AB  344C               	retlw	76	;'L'
   812  08AC  3459               	retlw	89	;'Y'
   813  08AD  3400               	retlw	0
   814  0837                     
   815                           ; #config settings
   816  0000                     
   817                           	psect	cinit
   818  0015                     start_initialization:	
   819  0015                     __initialization:	
   820                           
   821                           ; Initialize objects allocated to BANK0
   822  0015  1383               	bcf	3,7	;select IRP bank0
   823  0016  3053               	movlw	low (__pdataBANK0+7)
   824  0017  00FD               	movwf	btemp+-1
   825  0018  3009               	movlw	high __pidataBANK0
   826  0019  00FE               	movwf	btemp
   827  001A  3069               	movlw	low __pidataBANK0
   828  001B  00FF               	movwf	btemp+1
   829  001C  304C               	movlw	low __pdataBANK0
   830  001D  0084               	movwf	4
   831  001E  120A  158A  21CB  120A  118A  	fcall	init_ram0
   832                           
   833                           ; Clear objects allocated to BANK1
   834  0023  30A0               	movlw	low __pbssBANK1
   835  0024  0084               	movwf	4
   836  0025  30C3               	movlw	low (__pbssBANK1+35)
   837  0026  120A  158A  2170  120A  118A  	fcall	clear_ram0
   838                           
   839                           ; Clear objects allocated to BANK0
   840  002B  3044               	movlw	low __pbssBANK0
   841  002C  0084               	movwf	4
   842  002D  304C               	movlw	low (__pbssBANK0+8)
   843  002E  120A  158A  2170   	fcall	clear_ram0
   844  0031                     end_of_initialization:	
   845                           ;End of C runtime variable initialization code
   846                           
   847  0031                     __end_of__initialization:	
   848  0031  0183               	clrf	3
   849  0032  120A  118A  2D9B   	ljmp	_main	;jump to C main() function
   850                           
   851                           	psect	bssBANK0
   852  0044                     __pbssBANK0:	
   853  0044                     _frequency:	
   854  0044                     	ds	2
   855  0046                     _level:	
   856  0046                     	ds	1
   857  0047                     _isOnConfig:	
   858  0047                     	ds	1
   859  0048                     _functionalStat:	
   860  0048                     	ds	1
   861  0049                     _hundredMiliSeconds:	
   862  0049                     	ds	1
   863  004A                     _seconds:	
   864  004A                     	ds	1
   865  004B                     _cntTmr1:	
   866  004B                     	ds	1
   867                           
   868                           	psect	dataBANK0
   869  004C                     __pdataBANK0:	
   870  004C                     _stereoEnable:	
   871  004C                     	ds	1
   872  004D                     _minutes:	
   873  004D                     	ds	1
   874  004E                     _hours:	
   875  004E                     	ds	1
   876  004F                     _days:	
   877  004F                     	ds	1
   878  0050                     _months:	
   879  0050                     	ds	1
   880  0051                     _prTmr1H:	
   881  0051                     	ds	1
   882  0052                     _prTmr1L:	
   883  0052                     	ds	1
   884                           
   885                           	psect	bssBANK1
   886  00A0                     __pbssBANK1:	
   887  00A0                     _i:	
   888  00A0                     	ds	1
   889  00A1                     _lineTwo:	
   890  00A1                     	ds	17
   891  00B2                     _lineOne:	
   892  00B2                     	ds	17
   893                           
   894                           	psect	inittext
   895  09C7                     init_fetch0:	
   896                           ;	Called with low address in FSR and high address in W
   897                           
   898  09C7  087E               	movf	126,w
   899  09C8  008A               	movwf	10
   900  09C9  087F               	movf	127,w
   901  09CA  0082               	movwf	2
   902  09CB                     init_ram0:	
   903                           ;Called with:
   904                           ;	high address of idata address in btemp 
   905                           ;	low address of idata address in btemp+1 
   906                           ;	low address of data in FSR
   907                           ;	high address + 1 of data in btemp-1
   908                           
   909  09CB  21C7  120A  158A   	fcall	init_fetch0
   910  09CE  0080               	movwf	0
   911  09CF  0A84               	incf	4,f
   912  09D0  0804               	movf	4,w
   913  09D1  067D               	xorwf	125,w
   914  09D2  1903               	btfsc	3,2
   915  09D3  3400               	retlw	0
   916  09D4  0AFF               	incf	127,f
   917  09D5  1903               	btfsc	3,2
   918  09D6  0AFE               	incf	126,f
   919  09D7  29CB               	goto	init_ram0
   920                           
   921                           	psect	clrtext
   922  0970                     clear_ram0:	
   923                           ;	Called with FSR containing the base address, and
   924                           ;	W with the last address+1
   925                           
   926  0970  0064               	clrwdt	;clear the watchdog before getting into this loop
   927  0971                     clrloop0:	
   928  0971  0180               	clrf	0	;clear RAM location pointed to by FSR
   929  0972  0A84               	incf	4,f	;increment pointer
   930  0973  0604               	xorwf	4,w	;XOR with final address
   931  0974  1903               	btfsc	3,2	;have we reached the end yet?
   932  0975  3400               	retlw	0	;all done for this memory range, return
   933  0976  0604               	xorwf	4,w	;XOR again to restore value
   934  0977  2971               	goto	clrloop0	;do the next byte
   935                           
   936                           	psect	cstackBANK1
   937  00C3                     __pcstackBANK1:	
   938  00C3                     ?_beep:	
   939  00C3                     ??_initLCD:	
   940                           ; 1 bytes @ 0x0
   941                           
   942  00C3                     ___lwdiv@counter:	
   943                           ; 1 bytes @ 0x0
   944                           
   945  00C3                     beep@ms:	
   946                           ; 1 bytes @ 0x0
   947                           
   948  00C3                     writeFrequency@buffer:	
   949                           ; 2 bytes @ 0x0
   950                           
   951                           
   952                           ; 2 bytes @ 0x0
   953  00C3                     	ds	1
   954  00C4                     ___lwdiv@quotient:	
   955                           
   956                           ; 2 bytes @ 0x1
   957  00C4                     	ds	1
   958  00C5                     writeFrequency@r:	
   959                           
   960                           ; 2 bytes @ 0x2
   961  00C5                     	ds	1
   962  00C6                     ?___lwmod:	
   963  00C6                     ___lwmod@divisor:	
   964                           ; 2 bytes @ 0x3
   965                           
   966                           
   967                           ; 2 bytes @ 0x3
   968  00C6                     	ds	1
   969  00C7                     writeFrequency@i:	
   970                           
   971                           ; 1 bytes @ 0x4
   972  00C7                     	ds	1
   973  00C8                     ?_setTransStat:	
   974  00C8                     setTransStat@stat:	
   975                           ; 1 bytes @ 0x5
   976                           
   977  00C8                     ___lwmod@dividend:	
   978                           ; 2 bytes @ 0x5
   979                           
   980                           
   981                           ; 2 bytes @ 0x5
   982  00C8                     	ds	2
   983  00CA                     ??_setTransStat:	
   984  00CA                     ?_sprintf:	
   985                           ; 1 bytes @ 0x7
   986                           
   987  00CA                     sprintf@f:	
   988                           ; 2 bytes @ 0x7
   989                           
   990                           
   991                           ; 1 bytes @ 0x7
   992  00CA                     	ds	5
   993  00CF                     ??_sprintf:	
   994                           
   995                           ; 1 bytes @ 0xC
   996  00CF                     	ds	3
   997  00D2                     sprintf@ap:	
   998                           
   999                           ; 1 bytes @ 0xF
  1000  00D2                     	ds	1
  1001  00D3                     sprintf@prec:	
  1002                           
  1003                           ; 1 bytes @ 0x10
  1004  00D3                     	ds	1
  1005  00D4                     sprintf@flag:	
  1006                           
  1007                           ; 1 bytes @ 0x11
  1008  00D4                     	ds	1
  1009  00D5                     sprintf@val:	
  1010                           
  1011                           ; 2 bytes @ 0x12
  1012  00D5                     	ds	2
  1013  00D7                     sprintf@width:	
  1014                           
  1015                           ; 2 bytes @ 0x14
  1016  00D7                     	ds	2
  1017  00D9                     sprintf@sp:	
  1018                           
  1019                           ; 1 bytes @ 0x16
  1020  00D9                     	ds	1
  1021  00DA                     sprintf@c:	
  1022                           
  1023                           ; 1 bytes @ 0x17
  1024  00DA                     	ds	1
  1025  00DB                     ??_setFrequency:	
  1026  00DB                     ??_start:	
  1027                           ; 1 bytes @ 0x18
  1028                           
  1029                           
  1030                           ; 1 bytes @ 0x18
  1031  00DB                     	ds	3
  1032  00DE                     start@i:	
  1033                           
  1034                           ; 1 bytes @ 0x1B
  1035  00DE                     	ds	1
  1036  00DF                     ??_main:	
  1037                           
  1038                           ; 1 bytes @ 0x1C
  1039  00DF                     	ds	5
  1040  00E4                     main@decim:	
  1041                           
  1042                           ; 1 bytes @ 0x21
  1043  00E4                     	ds	1
  1044  00E5                     main@integ:	
  1045                           
  1046                           ; 1 bytes @ 0x22
  1047  00E5                     	ds	1
  1048                           
  1049                           	psect	cstackCOMMON
  1050  0070                     __pcstackCOMMON:	
  1051  0070                     ?_isdigit:	
  1052  0070                     ?i1_isdigit:	
  1053                           ; 1 bit 
  1054                           
  1055  0070                     ?_config:	
  1056                           ; 1 bit 
  1057                           
  1058  0070                     ?_setFrequency:	
  1059                           ; 1 bytes @ 0x0
  1060                           
  1061  0070                     ?_start:	
  1062                           ; 1 bytes @ 0x0
  1063                           
  1064  0070                     ?_SetDDRamAddr:	
  1065                           ; 1 bytes @ 0x0
  1066                           
  1067  0070                     ?_putrsXLCD:	
  1068                           ; 1 bytes @ 0x0
  1069                           
  1070  0070                     ?_putsXLCD:	
  1071                           ; 1 bytes @ 0x0
  1072                           
  1073  0070                     ?_initLCD:	
  1074                           ; 1 bytes @ 0x0
  1075                           
  1076  0070                     ?_time:	
  1077                           ; 1 bytes @ 0x0
  1078                           
  1079  0070                     ?_updateLCD:	
  1080                           ; 1 bytes @ 0x0
  1081                           
  1082  0070                     ?_WriteCmdXLCD:	
  1083                           ; 1 bytes @ 0x0
  1084                           
  1085  0070                     ?_BusyXLCD:	
  1086                           ; 1 bytes @ 0x0
  1087                           
  1088  0070                     ?_SendCMDLCD:	
  1089                           ; 1 bytes @ 0x0
  1090                           
  1091  0070                     ?_readEEPROM:	
  1092                           ; 1 bytes @ 0x0
  1093                           
  1094  0070                     ?_getData:	
  1095                           ; 1 bytes @ 0x0
  1096                           
  1097  0070                     ?_setData:	
  1098                           ; 1 bytes @ 0x0
  1099                           
  1100  0070                     ?_main:	
  1101                           ; 1 bytes @ 0x0
  1102                           
  1103  0070                     ?_inter:	
  1104                           ; 1 bytes @ 0x0
  1105                           
  1106  0070                     ?_DelayFor18TCY:	
  1107                           ; 1 bytes @ 0x0
  1108                           
  1109  0070                     ?_DelayPORXLCD:	
  1110                           ; 1 bytes @ 0x0
  1111                           
  1112  0070                     ?_OpenXLCD:	
  1113                           ; 1 bytes @ 0x0
  1114                           
  1115  0070                     ?_WriteDataXLCD:	
  1116                           ; 1 bytes @ 0x0
  1117                           
  1118  0070                     ?i1_writeEEPROM:	
  1119                           ; 1 bytes @ 0x0
  1120                           
  1121  0070                     ?i1_setData:	
  1122                           ; 1 bytes @ 0x0
  1123                           
  1124  0070                     ?i1_DelayFor18TCY:	
  1125                           ; 1 bytes @ 0x0
  1126                           
  1127  0070                     ??i1_DelayFor18TCY:	
  1128                           ; 1 bytes @ 0x0
  1129                           
  1130  0070                     ?i1_WriteDataXLCD:	
  1131                           ; 1 bytes @ 0x0
  1132                           
  1133  0070                     ?i1_SetDDRamAddr:	
  1134                           ; 1 bytes @ 0x0
  1135                           
  1136  0070                     ?i1_putsXLCD:	
  1137                           ; 1 bytes @ 0x0
  1138                           
  1139  0070                     ?i1_BusyXLCD:	
  1140                           ; 1 bytes @ 0x0
  1141                           
  1142  0070                     ??i1_BusyXLCD:	
  1143                           ; 1 bytes @ 0x0
  1144                           
  1145  0070                     ??i1_isdigit:	
  1146                           ; 1 bytes @ 0x0
  1147                           
  1148  0070                     ?i1___wmul:	
  1149                           ; 1 bytes @ 0x0
  1150                           
  1151  0070                     ?i1___lwdiv:	
  1152                           ; 2 bytes @ 0x0
  1153                           
  1154  0070                     i1writeEEPROM@address:	
  1155                           ; 2 bytes @ 0x0
  1156                           
  1157  0070                     i1_isdigit$1093:	
  1158                           ; 1 bytes @ 0x0
  1159                           
  1160  0070                     i1___wmul@multiplier:	
  1161                           ; 1 bytes @ 0x0
  1162                           
  1163  0070                     i1___lwdiv@divisor:	
  1164                           ; 2 bytes @ 0x0
  1165                           
  1166                           
  1167                           ; 2 bytes @ 0x0
  1168  0070                     	ds	1
  1169  0071                     ??i1_writeEEPROM:	
  1170  0071                     ??i1_WriteDataXLCD:	
  1171                           ; 1 bytes @ 0x1
  1172                           
  1173  0071                     ??i1_SetDDRamAddr:	
  1174                           ; 1 bytes @ 0x1
  1175                           
  1176  0071                     i1writeEEPROM@data:	
  1177                           ; 1 bytes @ 0x1
  1178                           
  1179  0071                     i1isdigit@c:	
  1180                           ; 1 bytes @ 0x1
  1181                           
  1182                           
  1183                           ; 1 bytes @ 0x1
  1184  0071                     	ds	1
  1185  0072                     ??i1_setData:	
  1186  0072                     i1___wmul@multiplicand:	
  1187                           ; 1 bytes @ 0x2
  1188                           
  1189  0072                     i1___lwdiv@dividend:	
  1190                           ; 2 bytes @ 0x2
  1191                           
  1192                           
  1193                           ; 2 bytes @ 0x2
  1194  0072                     	ds	1
  1195  0073                     i1setData@data0:	
  1196  0073                     i1WriteDataXLCD@data:	
  1197                           ; 1 bytes @ 0x3
  1198                           
  1199  0073                     i1SetDDRamAddr@DDaddr:	
  1200                           ; 1 bytes @ 0x3
  1201                           
  1202                           
  1203                           ; 1 bytes @ 0x3
  1204  0073                     	ds	1
  1205  0074                     ??i1_putsXLCD:	
  1206  0074                     ??i1___wmul:	
  1207                           ; 1 bytes @ 0x4
  1208                           
  1209  0074                     ??i1___lwdiv:	
  1210                           ; 1 bytes @ 0x4
  1211                           
  1212  0074                     i1setData@data1:	
  1213                           ; 1 bytes @ 0x4
  1214                           
  1215  0074                     i1___wmul@product:	
  1216                           ; 1 bytes @ 0x4
  1217                           
  1218                           
  1219                           ; 2 bytes @ 0x4
  1220  0074                     	ds	1
  1221  0075                     i1setData@full:	
  1222  0075                     i1putsXLCD@buffer:	
  1223                           ; 1 bytes @ 0x5
  1224                           
  1225  0075                     i1___lwdiv@quotient:	
  1226                           ; 1 bytes @ 0x5
  1227                           
  1228                           
  1229                           ; 2 bytes @ 0x5
  1230  0075                     	ds	1
  1231  0076                     ??_time:	
  1232                           
  1233                           ; 1 bytes @ 0x6
  1234  0076                     	ds	1
  1235  0077                     i1___lwdiv@counter:	
  1236                           
  1237                           ; 1 bytes @ 0x7
  1238  0077                     	ds	1
  1239  0078                     ?i1___lwmod:	
  1240  0078                     i1___lwmod@divisor:	
  1241                           ; 2 bytes @ 0x8
  1242                           
  1243                           
  1244                           ; 2 bytes @ 0x8
  1245  0078                     	ds	2
  1246  007A                     i1___lwmod@dividend:	
  1247                           
  1248                           ; 2 bytes @ 0xA
  1249  007A                     	ds	2
  1250  007C                     ??i1___lwmod:	
  1251                           
  1252                           ; 1 bytes @ 0xC
  1253  007C                     	ds	1
  1254  007D                     i1___lwmod@counter:	
  1255                           
  1256                           ; 1 bytes @ 0xD
  1257  007D                     	ds	1
  1258                           
  1259                           	psect	cstackBANK0
  1260  0020                     __pcstackBANK0:	
  1261  0020                     ?i1_sprintf:	
  1262  0020                     i1sprintf@f:	
  1263                           ; 2 bytes @ 0x0
  1264                           
  1265                           
  1266                           ; 1 bytes @ 0x0
  1267  0020                     	ds	5
  1268  0025                     ??i1_sprintf:	
  1269                           
  1270                           ; 1 bytes @ 0x5
  1271  0025                     	ds	3
  1272  0028                     i1sprintf@ap:	
  1273                           
  1274                           ; 1 bytes @ 0x8
  1275  0028                     	ds	1
  1276  0029                     i1sprintf@prec:	
  1277                           
  1278                           ; 1 bytes @ 0x9
  1279  0029                     	ds	1
  1280  002A                     i1sprintf@flag:	
  1281                           
  1282                           ; 1 bytes @ 0xA
  1283  002A                     	ds	1
  1284  002B                     i1sprintf@val:	
  1285                           
  1286                           ; 2 bytes @ 0xB
  1287  002B                     	ds	2
  1288  002D                     i1sprintf@sp:	
  1289                           
  1290                           ; 1 bytes @ 0xD
  1291  002D                     	ds	1
  1292  002E                     i1sprintf@width:	
  1293                           
  1294                           ; 2 bytes @ 0xE
  1295  002E                     	ds	2
  1296  0030                     i1sprintf@c:	
  1297                           
  1298                           ; 1 bytes @ 0x10
  1299  0030                     	ds	1
  1300  0031                     ??_updateLCD:	
  1301                           
  1302                           ; 1 bytes @ 0x11
  1303  0031                     	ds	5
  1304  0036                     updateLCD@decim:	
  1305                           
  1306                           ; 1 bytes @ 0x16
  1307  0036                     	ds	1
  1308  0037                     updateLCD@integ:	
  1309                           
  1310                           ; 1 bytes @ 0x17
  1311  0037                     	ds	1
  1312  0038                     ??_inter:	
  1313                           
  1314                           ; 1 bytes @ 0x18
  1315  0038                     	ds	5
  1316  003D                     ??_BusyXLCD:	
  1317  003D                     ??_isdigit:	
  1318                           ; 1 bytes @ 0x1D
  1319                           
  1320  003D                     ??_readEEPROM:	
  1321                           ; 1 bytes @ 0x1D
  1322                           
  1323  003D                     ?_writeEEPROM:	
  1324                           ; 1 bytes @ 0x1D
  1325                           
  1326  003D                     ??_DelayFor18TCY:	
  1327                           ; 1 bytes @ 0x1D
  1328                           
  1329  003D                     ??_DelayPORXLCD:	
  1330                           ; 1 bytes @ 0x1D
  1331                           
  1332  003D                     ?_codFreq:	
  1333                           ; 1 bytes @ 0x1D
  1334                           
  1335  003D                     ?___wmul:	
  1336                           ; 2 bytes @ 0x1D
  1337                           
  1338  003D                     ?___lwdiv:	
  1339                           ; 2 bytes @ 0x1D
  1340                           
  1341  003D                     readEEPROM@address:	
  1342                           ; 2 bytes @ 0x1D
  1343                           
  1344  003D                     writeEEPROM@address:	
  1345                           ; 1 bytes @ 0x1D
  1346                           
  1347  003D                     _isdigit$1093:	
  1348                           ; 1 bytes @ 0x1D
  1349                           
  1350  003D                     codFreq@f:	
  1351                           ; 1 bytes @ 0x1D
  1352                           
  1353  003D                     ___wmul@multiplier:	
  1354                           ; 2 bytes @ 0x1D
  1355                           
  1356  003D                     ___lwdiv@divisor:	
  1357                           ; 2 bytes @ 0x1D
  1358                           
  1359                           
  1360                           ; 2 bytes @ 0x1D
  1361  003D                     	ds	1
  1362  003E                     ??_SetDDRamAddr:	
  1363  003E                     ??_WriteCmdXLCD:	
  1364                           ; 1 bytes @ 0x1E
  1365                           
  1366  003E                     ??_writeEEPROM:	
  1367                           ; 1 bytes @ 0x1E
  1368                           
  1369  003E                     ??_getData:	
  1370                           ; 1 bytes @ 0x1E
  1371                           
  1372  003E                     ??_WriteDataXLCD:	
  1373                           ; 1 bytes @ 0x1E
  1374                           
  1375  003E                     writeEEPROM@data:	
  1376                           ; 1 bytes @ 0x1E
  1377                           
  1378  003E                     isdigit@c:	
  1379                           ; 1 bytes @ 0x1E
  1380                           
  1381                           
  1382                           ; 1 bytes @ 0x1E
  1383  003E                     	ds	1
  1384  003F                     ?_writeFrequency:	
  1385  003F                     ??_setData:	
  1386                           ; 1 bytes @ 0x1F
  1387                           
  1388  003F                     ??_codFreq:	
  1389                           ; 1 bytes @ 0x1F
  1390                           
  1391  003F                     writeFrequency@f:	
  1392                           ; 1 bytes @ 0x1F
  1393                           
  1394  003F                     ___wmul@multiplicand:	
  1395                           ; 2 bytes @ 0x1F
  1396                           
  1397  003F                     ___lwdiv@dividend:	
  1398                           ; 2 bytes @ 0x1F
  1399                           
  1400                           
  1401                           ; 2 bytes @ 0x1F
  1402  003F                     	ds	1
  1403  0040                     setData@data0:	
  1404  0040                     WriteDataXLCD@data:	
  1405                           ; 1 bytes @ 0x20
  1406                           
  1407  0040                     WriteCmdXLCD@cmd:	
  1408                           ; 1 bytes @ 0x20
  1409                           
  1410  0040                     SetDDRamAddr@DDaddr:	
  1411                           ; 1 bytes @ 0x20
  1412                           
  1413                           
  1414                           ; 1 bytes @ 0x20
  1415  0040                     	ds	1
  1416  0041                     ??_writeFrequency:	
  1417  0041                     ??_putrsXLCD:	
  1418                           ; 1 bytes @ 0x21
  1419                           
  1420  0041                     ??_putsXLCD:	
  1421                           ; 1 bytes @ 0x21
  1422                           
  1423  0041                     ??_SendCMDLCD:	
  1424                           ; 1 bytes @ 0x21
  1425                           
  1426  0041                     ??_OpenXLCD:	
  1427                           ; 1 bytes @ 0x21
  1428                           
  1429  0041                     ??___wmul:	
  1430                           ; 1 bytes @ 0x21
  1431                           
  1432  0041                     ??___lwdiv:	
  1433                           ; 1 bytes @ 0x21
  1434                           
  1435  0041                     setData@data1:	
  1436                           ; 1 bytes @ 0x21
  1437                           
  1438  0041                     SendCMDLCD@CMD:	
  1439                           ; 1 bytes @ 0x21
  1440                           
  1441  0041                     ___wmul@product:	
  1442                           ; 1 bytes @ 0x21
  1443                           
  1444                           
  1445                           ; 2 bytes @ 0x21
  1446  0041                     	ds	1
  1447  0042                     ??___lwmod:	
  1448  0042                     getData@aux0:	
  1449                           ; 1 bytes @ 0x22
  1450                           
  1451  0042                     setData@full:	
  1452                           ; 1 bytes @ 0x22
  1453                           
  1454  0042                     putsXLCD@buffer:	
  1455                           ; 1 bytes @ 0x22
  1456                           
  1457  0042                     putrsXLCD@buffer:	
  1458                           ; 1 bytes @ 0x22
  1459                           
  1460                           
  1461                           ; 1 bytes @ 0x22
  1462  0042                     	ds	1
  1463  0043                     ??_beep:	
  1464  0043                     getData@aux1:	
  1465                           ; 1 bytes @ 0x23
  1466                           
  1467  0043                     OpenXLCD@lcdtype:	
  1468                           ; 1 bytes @ 0x23
  1469                           
  1470  0043                     ___lwmod@counter:	
  1471                           ; 1 bytes @ 0x23
  1472                           
  1473                           
  1474                           ; 1 bytes @ 0x23
  1475  0043                     	ds	1
  1476  0044                     ??_config:	
  1477                           
  1478                           	psect	maintext
  1479  059B                     __pmaintext:	
  1480                           ; 1 bytes @ 0x24
  1481 ;;
  1482 ;;Main: autosize = 0, tempsize = 5, incstack = 0, save=0
  1483 ;;
  1484 ;; *************** function _main *****************
  1485 ;; Defined at:
  1486 ;;		line 5 in file "main.c"
  1487 ;; Parameters:    Size  Location     Type
  1488 ;;		None
  1489 ;; Auto vars:     Size  Location     Type
  1490 ;;  integ           1   34[BANK1 ] unsigned char 
  1491 ;;  decim           1   33[BANK1 ] unsigned char 
  1492 ;;  index           1    0        unsigned char 
  1493 ;; Return value:  Size  Location     Type
  1494 ;;                  1    wreg      void 
  1495 ;; Registers used:
  1496 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1497 ;; Tracked objects:
  1498 ;;		On entry : B00/0
  1499 ;;		On exit  : 0/0
  1500 ;;		Unchanged: 0/0
  1501 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1502 ;;      Params:         0       0       0       0       0
  1503 ;;      Locals:         0       0       2       0       0
  1504 ;;      Temps:          0       0       5       0       0
  1505 ;;      Totals:         0       0       7       0       0
  1506 ;;Total ram usage:        7 bytes
  1507 ;; Hardware stack levels required when called:   10
  1508 ;; This function calls:
  1509 ;;		_SetDDRamAddr
  1510 ;;		___lwdiv
  1511 ;;		___lwmod
  1512 ;;		_beep
  1513 ;;		_config
  1514 ;;		_getData
  1515 ;;		_putrsXLCD
  1516 ;;		_putsXLCD
  1517 ;;		_setFrequency
  1518 ;;		_setTransStat
  1519 ;;		_sprintf
  1520 ;;		_start
  1521 ;;		_writeFrequency
  1522 ;; This function is called by:
  1523 ;;		Startup code after reset
  1524 ;; This function uses a non-reentrant model
  1525 ;;
  1526                           
  1527                           
  1528                           ;psect for function _main
  1529  059B                     _main:	
  1530                           
  1531                           ;main.c: 6:     unsigned char index;;main.c: 7:     _delay((unsigned long)((100)*(400000
      +                          0/4000.0)));
  1532                           
  1533                           ;incstack = 0
  1534 ;; hardware stack exceeded
  1535                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1536  059B  3082               	movlw	130
  1537  059C  1683               	bsf	3,5	;RP0=1, select bank1
  1538  059D  1303               	bcf	3,6	;RP1=0, select bank1
  1539  059E  00E0               	movwf	(??_main^(0+128)+1)
  1540  059F  30DD               	movlw	221
  1541  05A0  00DF               	movwf	??_main^(0+128)
  1542  05A1                     u3497:	
  1543  05A1  0BDF               	decfsz	??_main^(0+128),f
  1544  05A2  2DA1               	goto	u3497
  1545  05A3  0BE0               	decfsz	(??_main^(0+128)+1),f
  1546  05A4  2DA1               	goto	u3497
  1547                           
  1548                           ;main.c: 8:     config();
  1549  05A5  120A  158A  2318  120A  118A  	fcall	_config
  1550                           
  1551                           ;main.c: 9:     beep(100);
  1552  05AA  3064               	movlw	100
  1553  05AB  1683               	bsf	3,5	;RP0=1, select bank1
  1554  05AC  1303               	bcf	3,6	;RP1=0, select bank1
  1555  05AD  00C3               	movwf	beep@ms^(0+128)
  1556  05AE  3000               	movlw	0
  1557  05AF  00C4               	movwf	(beep@ms^(0+128)+1)
  1558  05B0  120A  158A  24BB  120A  118A  	fcall	_beep
  1559                           
  1560                           ;main.c: 10:     getData();
  1561  05B5  120A  158A  2746  120A  118A  	fcall	_getData
  1562                           
  1563                           ;main.c: 11:     beep(10);
  1564  05BA  300A               	movlw	10
  1565  05BB  1683               	bsf	3,5	;RP0=1, select bank1
  1566  05BC  1303               	bcf	3,6	;RP1=0, select bank1
  1567  05BD  00C3               	movwf	beep@ms^(0+128)
  1568  05BE  3000               	movlw	0
  1569  05BF  00C4               	movwf	(beep@ms^(0+128)+1)
  1570  05C0  120A  158A  24BB  120A  118A  	fcall	_beep
  1571                           
  1572                           ;main.c: 12:     if(!PORTAbits.RA4){
  1573  05C5  1283               	bcf	3,5	;RP0=0, select bank0
  1574  05C6  1303               	bcf	3,6	;RP1=0, select bank0
  1575  05C7  1A05               	btfsc	5,4	;volatile
  1576  05C8  2DDD               	goto	l3940
  1577                           
  1578                           ;main.c: 13:         _delay((unsigned long)((25)*(4000000/4000.0)));
  1579  05C9  3021               	movlw	33
  1580  05CA  1683               	bsf	3,5	;RP0=1, select bank1
  1581  05CB  1303               	bcf	3,6	;RP1=0, select bank1
  1582  05CC  00E0               	movwf	(??_main^(0+128)+1)
  1583  05CD  3075               	movlw	117
  1584  05CE  00DF               	movwf	??_main^(0+128)
  1585  05CF                     u3507:	
  1586  05CF  0BDF               	decfsz	??_main^(0+128),f
  1587  05D0  2DCF               	goto	u3507
  1588  05D1  0BE0               	decfsz	(??_main^(0+128)+1),f
  1589  05D2  2DCF               	goto	u3507
  1590  05D3  2DD4               	nop2
  1591                           
  1592                           ;main.c: 14:         if(!PORTAbits.RA4) setFrequency();
  1593  05D4  1283               	bcf	3,5	;RP0=0, select bank0
  1594  05D5  1303               	bcf	3,6	;RP1=0, select bank0
  1595  05D6  1A05               	btfsc	5,4	;volatile
  1596  05D7  2DDD               	goto	l3940
  1597  05D8  120A  118A  2325  120A  118A  	fcall	_setFrequency
  1598  05DD                     l3940:	
  1599                           
  1600                           ;main.c: 16:     _delay((unsigned long)((100)*(4000000/4000.0)));
  1601  05DD  3082               	movlw	130
  1602  05DE  1683               	bsf	3,5	;RP0=1, select bank1
  1603  05DF  1303               	bcf	3,6	;RP1=0, select bank1
  1604  05E0  00E0               	movwf	(??_main^(0+128)+1)
  1605  05E1  30DD               	movlw	221
  1606  05E2  00DF               	movwf	??_main^(0+128)
  1607  05E3                     u3517:	
  1608  05E3  0BDF               	decfsz	??_main^(0+128),f
  1609  05E4  2DE3               	goto	u3517
  1610  05E5  0BE0               	decfsz	(??_main^(0+128)+1),f
  1611  05E6  2DE3               	goto	u3517
  1612                           
  1613                           ;main.c: 17:     writeFrequency(frequency);
  1614  05E7  1283               	bcf	3,5	;RP0=0, select bank0
  1615  05E8  1303               	bcf	3,6	;RP1=0, select bank0
  1616  05E9  0845               	movf	_frequency+1,w
  1617  05EA  00C0               	movwf	writeFrequency@f+1
  1618  05EB  0844               	movf	_frequency,w
  1619  05EC  00BF               	movwf	writeFrequency@f
  1620  05ED  120A  118A  2777  120A  118A  	fcall	_writeFrequency
  1621                           
  1622                           ;main.c: 18:     start();
  1623  05F2  120A  118A  2471  120A  118A  	fcall	_start
  1624                           
  1625                           ;main.c: 20:     SetDDRamAddr(0x00);
  1626  05F7  3000               	movlw	0
  1627  05F8  120A  158A  25EC  120A  118A  	fcall	_SetDDRamAddr
  1628                           
  1629                           ;main.c: 21:     putrsXLCD("AMPRO      EX-FM");
  1630  05FD  3065               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1631  05FE  120A  158A  22EE  120A  118A  	fcall	_putrsXLCD
  1632                           
  1633                           ;main.c: 22:     unsigned char decim = frequency % 10;
  1634  0603  300A               	movlw	10
  1635  0604  1683               	bsf	3,5	;RP0=1, select bank1
  1636  0605  1303               	bcf	3,6	;RP1=0, select bank1
  1637  0606  00C6               	movwf	___lwmod@divisor^(0+128)
  1638  0607  3000               	movlw	0
  1639  0608  00C7               	movwf	(___lwmod@divisor^(0+128)+1)
  1640  0609  1283               	bcf	3,5	;RP0=0, select bank0
  1641  060A  1303               	bcf	3,6	;RP1=0, select bank0
  1642  060B  0845               	movf	_frequency+1,w
  1643  060C  1683               	bsf	3,5	;RP0=1, select bank1
  1644  060D  1303               	bcf	3,6	;RP1=0, select bank1
  1645  060E  00C9               	movwf	(___lwmod@dividend+1)^(0+128)
  1646  060F  1283               	bcf	3,5	;RP0=0, select bank0
  1647  0610  1303               	bcf	3,6	;RP1=0, select bank0
  1648  0611  0844               	movf	_frequency,w
  1649  0612  1683               	bsf	3,5	;RP0=1, select bank1
  1650  0613  1303               	bcf	3,6	;RP1=0, select bank1
  1651  0614  00C8               	movwf	___lwmod@dividend^(0+128)
  1652  0615  120A  158A  23E8  120A  118A  	fcall	___lwmod
  1653  061A  1683               	bsf	3,5	;RP0=1, select bank1
  1654  061B  1303               	bcf	3,6	;RP1=0, select bank1
  1655  061C  0846               	movf	?___lwmod^(0+128),w
  1656  061D  00DF               	movwf	??_main^(0+128)
  1657  061E  085F               	movf	??_main^(0+128),w
  1658  061F  00E4               	movwf	main@decim^(0+128)
  1659                           
  1660                           ;main.c: 23:     unsigned char integ = frequency / 10;
  1661  0620  300A               	movlw	10
  1662  0621  1283               	bcf	3,5	;RP0=0, select bank0
  1663  0622  1303               	bcf	3,6	;RP1=0, select bank0
  1664  0623  00BD               	movwf	___lwdiv@divisor
  1665  0624  3000               	movlw	0
  1666  0625  00BE               	movwf	___lwdiv@divisor+1
  1667  0626  0845               	movf	_frequency+1,w
  1668  0627  00C0               	movwf	___lwdiv@dividend+1
  1669  0628  0844               	movf	_frequency,w
  1670  0629  00BF               	movwf	___lwdiv@dividend
  1671  062A  120A  158A  263A  120A  118A  	fcall	___lwdiv
  1672  062F  1283               	bcf	3,5	;RP0=0, select bank0
  1673  0630  1303               	bcf	3,6	;RP1=0, select bank0
  1674  0631  083D               	movf	?___lwdiv,w
  1675  0632  1683               	bsf	3,5	;RP0=1, select bank1
  1676  0633  1303               	bcf	3,6	;RP1=0, select bank1
  1677  0634  00DF               	movwf	??_main^(0+128)
  1678  0635  085F               	movf	??_main^(0+128),w
  1679  0636  00E5               	movwf	main@integ^(0+128)
  1680                           
  1681                           ;main.c: 24:     sprintf(lineTwo,"FREQ.  %3d.%d MHz",integ, decim);
  1682  0637  300F               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1683  0638  00DF               	movwf	??_main^(0+128)
  1684  0639  085F               	movf	??_main^(0+128),w
  1685  063A  00CA               	movwf	sprintf@f^(0+128)
  1686  063B  0865               	movf	main@integ^(0+128),w
  1687  063C  00E0               	movwf	(??_main+1)^(0+128)
  1688  063D  01E1               	clrf	((??_main+1)^(0+128)+1)
  1689  063E  0860               	movf	(??_main+1)^(0+128),w
  1690  063F  00CB               	movwf	(?_sprintf^(0+128)+1)
  1691  0640  0861               	movf	(??_main+2)^(0+128),w
  1692  0641  00CC               	movwf	((?_sprintf+1)^(0+128)+1)
  1693  0642  0864               	movf	main@decim^(0+128),w
  1694  0643  00E2               	movwf	(??_main+3)^(0+128)
  1695  0644  01E3               	clrf	((??_main+3)^(0+128)+1)
  1696  0645  0862               	movf	(??_main+3)^(0+128),w
  1697  0646  00CD               	movwf	(?_sprintf^(0+128)+3)
  1698  0647  0863               	movf	(??_main+4)^(0+128),w
  1699  0648  00CE               	movwf	((?_sprintf+1)^(0+128)+3)
  1700  0649  30A1               	movlw	(low (_lineTwo| 0))& (0+255)
  1701  064A  120A  118A  2035  120A  118A  	fcall	_sprintf
  1702                           
  1703                           ;main.c: 25:     SetDDRamAddr(0x40);
  1704  064F  3040               	movlw	64
  1705  0650  120A  158A  25EC  120A  118A  	fcall	_SetDDRamAddr
  1706                           
  1707                           ;main.c: 26:     putsXLCD(lineTwo);
  1708  0655  30A1               	movlw	(low (_lineTwo| 0))& (0+255)
  1709  0656  120A  158A  227F  120A  118A  	fcall	_putsXLCD
  1710                           
  1711                           ;main.c: 28:     writeFrequency(frequency);
  1712  065B  1283               	bcf	3,5	;RP0=0, select bank0
  1713  065C  1303               	bcf	3,6	;RP1=0, select bank0
  1714  065D  0845               	movf	_frequency+1,w
  1715  065E  00C0               	movwf	writeFrequency@f+1
  1716  065F  0844               	movf	_frequency,w
  1717  0660  00BF               	movwf	writeFrequency@f
  1718  0661  120A  118A  2777  120A  118A  	fcall	_writeFrequency
  1719  0666                     l3962:	
  1720  0666  1283               	bcf	3,5	;RP0=0, select bank0
  1721  0667  1303               	bcf	3,6	;RP1=0, select bank0
  1722  0668  0348               	decf	_functionalStat,w
  1723  0669  1D03               	btfss	3,2
  1724  066A  2E72               	goto	l3966
  1725                           
  1726                           ;main.c: 31:             setTransStat(1);
  1727  066B  3001               	movlw	1
  1728  066C  1683               	bsf	3,5	;RP0=1, select bank1
  1729  066D  1303               	bcf	3,6	;RP1=0, select bank1
  1730  066E  00C8               	movwf	setTransStat@stat^(0+128)
  1731  066F  3000               	movlw	0
  1732  0670  00C9               	movwf	(setTransStat@stat^(0+128)+1)
  1733  0671  2E77               	goto	L1
  1734  0672                     l3966:	
  1735                           ;main.c: 32:         }else{
  1736                           
  1737                           
  1738                           ;main.c: 33:             setTransStat(0);
  1739  0672  3000               	movlw	0
  1740  0673  1683               	bsf	3,5	;RP0=1, select bank1
  1741  0674  1303               	bcf	3,6	;RP1=0, select bank1
  1742  0675  00C8               	movwf	setTransStat@stat^(0+128)
  1743  0676  00C9               	movwf	(setTransStat@stat+1)^(0+128)
  1744  0677                     L1:	
  1745  0677  120A  158A  2376  120A  118A  	fcall	_setTransStat
  1746                           
  1747                           ;main.c: 35:         if(!PORTAbits.RA4){
  1748  067C  1283               	bcf	3,5	;RP0=0, select bank0
  1749  067D  1303               	bcf	3,6	;RP1=0, select bank0
  1750  067E  1A05               	btfsc	5,4	;volatile
  1751  067F  2E66               	goto	l3962
  1752                           
  1753                           ;main.c: 36:             _delay((unsigned long)((25)*(4000000/4000.0)));
  1754  0680  3021               	movlw	33
  1755  0681  1683               	bsf	3,5	;RP0=1, select bank1
  1756  0682  1303               	bcf	3,6	;RP1=0, select bank1
  1757  0683  00E0               	movwf	(??_main^(0+128)+1)
  1758  0684  3075               	movlw	117
  1759  0685  00DF               	movwf	??_main^(0+128)
  1760  0686                     u3527:	
  1761  0686  0BDF               	decfsz	??_main^(0+128),f
  1762  0687  2E86               	goto	u3527
  1763  0688  0BE0               	decfsz	(??_main^(0+128)+1),f
  1764  0689  2E86               	goto	u3527
  1765  068A  2E8B               	nop2
  1766  068B                     l3972:	
  1767                           
  1768                           ;main.c: 38:                 for(i = 0; i>100; i++){
  1769  068B  1683               	bsf	3,5	;RP0=1, select bank1
  1770  068C  1303               	bcf	3,6	;RP1=0, select bank1
  1771  068D  01A0               	clrf	_i^(0+128)
  1772  068E                     l3974:	
  1773  068E  3065               	movlw	101
  1774  068F  0220               	subwf	_i^(0+128),w
  1775  0690  1C03               	btfss	3,0
  1776  0691  2EAC               	goto	l200
  1777                           
  1778                           ;main.c: 39:                     if(PORTAbits.RA4){
  1779  0692  1283               	bcf	3,5	;RP0=0, select bank0
  1780  0693  1303               	bcf	3,6	;RP1=0, select bank0
  1781  0694  1E05               	btfss	5,4	;volatile
  1782  0695  2EA5               	goto	l3984
  1783                           
  1784                           ;main.c: 40:                         _delay((unsigned long)((25)*(4000000/4000.0)));
  1785  0696  3021               	movlw	33
  1786  0697  1683               	bsf	3,5	;RP0=1, select bank1
  1787  0698  1303               	bcf	3,6	;RP1=0, select bank1
  1788  0699  00E0               	movwf	(??_main^(0+128)+1)
  1789  069A  3075               	movlw	117
  1790  069B  00DF               	movwf	??_main^(0+128)
  1791  069C                     u3537:	
  1792  069C  0BDF               	decfsz	??_main^(0+128),f
  1793  069D  2E9C               	goto	u3537
  1794  069E  0BE0               	decfsz	(??_main^(0+128)+1),f
  1795  069F  2E9C               	goto	u3537
  1796  06A0  2EA1               	nop2
  1797                           
  1798                           ;main.c: 41:                         if(PORTAbits.RA4)break;
  1799  06A1  1283               	bcf	3,5	;RP0=0, select bank0
  1800  06A2  1303               	bcf	3,6	;RP1=0, select bank0
  1801  06A3  1A05               	btfsc	5,4	;volatile
  1802  06A4  2EAC               	goto	l200
  1803  06A5                     l3984:	
  1804                           
  1805                           ;main.c: 43:                 }
  1806  06A5  3001               	movlw	1
  1807  06A6  1683               	bsf	3,5	;RP0=1, select bank1
  1808  06A7  1303               	bcf	3,6	;RP1=0, select bank1
  1809  06A8  00DF               	movwf	??_main^(0+128)
  1810  06A9  085F               	movf	??_main^(0+128),w
  1811  06AA  07A0               	addwf	_i^(0+128),f
  1812  06AB  2E8E               	goto	l3974
  1813  06AC                     l200:	
  1814                           
  1815                           ;main.c: 44:                 INTCONbits.GIE = 0;
  1816  06AC  138B               	bcf	11,7	;volatile
  1817                           
  1818                           ;main.c: 45:                 setFrequency();
  1819  06AD  120A  118A  2325  120A  118A  	fcall	_setFrequency
  1820                           
  1821                           ;main.c: 46:                 writeFrequency(frequency);
  1822  06B2  1283               	bcf	3,5	;RP0=0, select bank0
  1823  06B3  1303               	bcf	3,6	;RP1=0, select bank0
  1824  06B4  0845               	movf	_frequency+1,w
  1825  06B5  00C0               	movwf	writeFrequency@f+1
  1826  06B6  0844               	movf	_frequency,w
  1827  06B7  00BF               	movwf	writeFrequency@f
  1828  06B8  120A  118A  2777  120A  118A  	fcall	_writeFrequency
  1829                           
  1830                           ;main.c: 47:                 INTCONbits.GIE = 1;
  1831  06BD  178B               	bsf	11,7	;volatile
  1832  06BE  2E8B               	goto	l3972
  1833  06BF                     __end_of_main:	
  1834                           
  1835                           	psect	text1
  1836  0471                     __ptext1:	
  1837 ;; *************** function _start *****************
  1838 ;; Defined at:
  1839 ;;		line 81 in file "main.c"
  1840 ;; Parameters:    Size  Location     Type
  1841 ;;		None
  1842 ;; Auto vars:     Size  Location     Type
  1843 ;;  i               1   27[BANK1 ] unsigned char 
  1844 ;; Return value:  Size  Location     Type
  1845 ;;                  1    wreg      void 
  1846 ;; Registers used:
  1847 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1848 ;; Tracked objects:
  1849 ;;		On entry : 0/0
  1850 ;;		On exit  : 0/0
  1851 ;;		Unchanged: 0/0
  1852 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1853 ;;      Params:         0       0       0       0       0
  1854 ;;      Locals:         0       0       1       0       0
  1855 ;;      Temps:          0       0       3       0       0
  1856 ;;      Totals:         0       0       4       0       0
  1857 ;;Total ram usage:        4 bytes
  1858 ;; Hardware stack levels used:    1
  1859 ;; Hardware stack levels required when called:    8
  1860 ;; This function calls:
  1861 ;;		_SetDDRamAddr
  1862 ;;		_beep
  1863 ;;		_putsXLCD
  1864 ;;		_sprintf
  1865 ;; This function is called by:
  1866 ;;		_main
  1867 ;; This function uses a non-reentrant model
  1868 ;;
  1869                           
  1870                           
  1871                           ;psect for function _start
  1872  0471                     _start:	
  1873                           
  1874                           ;main.c: 83:     INTCONbits.GIE = 0;
  1875                           
  1876                           ;incstack = 0
  1877 ;; hardware stack exceeded
  1878                           ; Regs used in _start: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1879  0471  138B               	bcf	11,7	;volatile
  1880                           
  1881                           ;main.c: 86:     for(i = 0; i < 10; i++){
  1882  0472  1683               	bsf	3,5	;RP0=1, select bank1
  1883  0473  1303               	bcf	3,6	;RP1=0, select bank1
  1884  0474  01DE               	clrf	start@i^(0+128)
  1885                           
  1886                           ;main.c: 87:         PORTCbits.RC1 = !PORTCbits.RC1;
  1887  0475  1003               	clrc
  1888  0476                     L2:	
  1889  0476  1283               	bcf	3,5	;RP0=0, select bank0
  1890  0477  1303               	bcf	3,6	;RP1=0, select bank0
  1891  0478  1C87               	btfss	7,1	;volatile
  1892  0479  1403               	setc
  1893  047A  1C03               	btfss	3,0
  1894  047B  2C80               	goto	u3330
  1895  047C  1283               	bcf	3,5	;RP0=0, select bank0
  1896  047D  1303               	bcf	3,6	;RP1=0, select bank0
  1897  047E  1487               	bsf	7,1	;volatile
  1898  047F  2C83               	goto	l3838
  1899  0480                     u3330:	
  1900  0480  1283               	bcf	3,5	;RP0=0, select bank0
  1901  0481  1303               	bcf	3,6	;RP1=0, select bank0
  1902  0482  1087               	bcf	7,1	;volatile
  1903  0483                     l3838:	
  1904                           
  1905                           ;main.c: 88:         sprintf(lineOne,"TESTING         ");
  1906  0483  3032               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1907  0484  1683               	bsf	3,5	;RP0=1, select bank1
  1908  0485  1303               	bcf	3,6	;RP1=0, select bank1
  1909  0486  00DB               	movwf	??_start^(0+128)
  1910  0487  085B               	movf	??_start^(0+128),w
  1911  0488  00CA               	movwf	sprintf@f^(0+128)
  1912  0489  30B2               	movlw	(low (_lineOne| 0))& (0+255)
  1913  048A  120A  118A  2035  120A  118A  	fcall	_sprintf
  1914                           
  1915                           ;main.c: 89:         sprintf(lineTwo,"          SUPPLY");
  1916  048F  3098               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1917  0490  1683               	bsf	3,5	;RP0=1, select bank1
  1918  0491  1303               	bcf	3,6	;RP1=0, select bank1
  1919  0492  00DB               	movwf	??_start^(0+128)
  1920  0493  085B               	movf	??_start^(0+128),w
  1921  0494  00CA               	movwf	sprintf@f^(0+128)
  1922  0495  30A1               	movlw	(low (_lineTwo| 0))& (0+255)
  1923  0496  120A  118A  2035  120A  118A  	fcall	_sprintf
  1924                           
  1925                           ;main.c: 90:         SetDDRamAddr(0x00);
  1926  049B  3000               	movlw	0
  1927  049C  120A  158A  25EC  120A  118A  	fcall	_SetDDRamAddr
  1928                           
  1929                           ;main.c: 91:         putsXLCD(lineOne);
  1930  04A1  30B2               	movlw	(low (_lineOne| 0))& (0+255)
  1931  04A2  120A  158A  227F  120A  118A  	fcall	_putsXLCD
  1932                           
  1933                           ;main.c: 92:         SetDDRamAddr(0x40);
  1934  04A7  3040               	movlw	64
  1935  04A8  120A  158A  25EC  120A  118A  	fcall	_SetDDRamAddr
  1936                           
  1937                           ;main.c: 93:         putsXLCD(lineTwo);
  1938  04AD  30A1               	movlw	(low (_lineTwo| 0))& (0+255)
  1939  04AE  120A  158A  227F  120A  118A  	fcall	_putsXLCD
  1940                           
  1941                           ;main.c: 94:         _delay((unsigned long)((100)*(4000000/4000.0)));
  1942  04B3  3082               	movlw	130
  1943  04B4  1683               	bsf	3,5	;RP0=1, select bank1
  1944  04B5  1303               	bcf	3,6	;RP1=0, select bank1
  1945  04B6  00DC               	movwf	(??_start^(0+128)+1)
  1946  04B7  30DD               	movlw	221
  1947  04B8  00DB               	movwf	??_start^(0+128)
  1948  04B9                     u3547:	
  1949  04B9  0BDB               	decfsz	??_start^(0+128),f
  1950  04BA  2CB9               	goto	u3547
  1951  04BB  0BDC               	decfsz	(??_start^(0+128)+1),f
  1952  04BC  2CB9               	goto	u3547
  1953                           
  1954                           ;main.c: 95:     }
  1955  04BD  3001               	movlw	1
  1956  04BE  1683               	bsf	3,5	;RP0=1, select bank1
  1957  04BF  1303               	bcf	3,6	;RP1=0, select bank1
  1958  04C0  00DB               	movwf	??_start^(0+128)
  1959  04C1  085B               	movf	??_start^(0+128),w
  1960  04C2  07DE               	addwf	start@i^(0+128),f
  1961  04C3  300A               	movlw	10
  1962  04C4  025E               	subwf	start@i^(0+128),w
  1963  04C5  1C03               	skipc
  1964  04C6  2C76               	goto	L2
  1965                           
  1966                           ;main.c: 96:     PORTCbits.RC1 = 0;
  1967  04C7  1283               	bcf	3,5	;RP0=0, select bank0
  1968  04C8  1303               	bcf	3,6	;RP1=0, select bank0
  1969  04C9  1087               	bcf	7,1	;volatile
  1970                           
  1971                           ;main.c: 98:     for(i = 0; i < 18; i++){
  1972  04CA  1683               	bsf	3,5	;RP0=1, select bank1
  1973  04CB  1303               	bcf	3,6	;RP1=0, select bank1
  1974  04CC  01DE               	clrf	start@i^(0+128)
  1975                           
  1976                           ;main.c: 99:         PORTCbits.RC3 = !PORTCbits.RC3;
  1977  04CD  1003               	clrc
  1978  04CE                     L3:	
  1979  04CE  1283               	bcf	3,5	;RP0=0, select bank0
  1980  04CF  1303               	bcf	3,6	;RP1=0, select bank0
  1981  04D0  1D87               	btfss	7,3	;volatile
  1982  04D1  1403               	setc
  1983  04D2  1C03               	btfss	3,0
  1984  04D3  2CD8               	goto	u3360
  1985  04D4  1283               	bcf	3,5	;RP0=0, select bank0
  1986  04D5  1303               	bcf	3,6	;RP1=0, select bank0
  1987  04D6  1587               	bsf	7,3	;volatile
  1988  04D7  2CDB               	goto	l3864
  1989  04D8                     u3360:	
  1990  04D8  1283               	bcf	3,5	;RP0=0, select bank0
  1991  04D9  1303               	bcf	3,6	;RP1=0, select bank0
  1992  04DA  1187               	bcf	7,3	;volatile
  1993  04DB                     l3864:	
  1994                           
  1995                           ;main.c: 100:         sprintf(lineOne,"TESTING         ");
  1996  04DB  3032               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1997  04DC  1683               	bsf	3,5	;RP0=1, select bank1
  1998  04DD  1303               	bcf	3,6	;RP1=0, select bank1
  1999  04DE  00DB               	movwf	??_start^(0+128)
  2000  04DF  085B               	movf	??_start^(0+128),w
  2001  04E0  00CA               	movwf	sprintf@f^(0+128)
  2002  04E1  30B2               	movlw	(low (_lineOne| 0))& (0+255)
  2003  04E2  120A  118A  2035  120A  118A  	fcall	_sprintf
  2004                           
  2005                           ;main.c: 101:         sprintf(lineTwo,"     TEMPERATURE");
  2006  04E7  3054               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  2007  04E8  1683               	bsf	3,5	;RP0=1, select bank1
  2008  04E9  1303               	bcf	3,6	;RP1=0, select bank1
  2009  04EA  00DB               	movwf	??_start^(0+128)
  2010  04EB  085B               	movf	??_start^(0+128),w
  2011  04EC  00CA               	movwf	sprintf@f^(0+128)
  2012  04ED  30A1               	movlw	(low (_lineTwo| 0))& (0+255)
  2013  04EE  120A  118A  2035  120A  118A  	fcall	_sprintf
  2014                           
  2015                           ;main.c: 102:         SetDDRamAddr(0x00);
  2016  04F3  3000               	movlw	0
  2017  04F4  120A  158A  25EC  120A  118A  	fcall	_SetDDRamAddr
  2018                           
  2019                           ;main.c: 103:         putsXLCD(lineOne);
  2020  04F9  30B2               	movlw	(low (_lineOne| 0))& (0+255)
  2021  04FA  120A  158A  227F  120A  118A  	fcall	_putsXLCD
  2022                           
  2023                           ;main.c: 104:         SetDDRamAddr(0x40);
  2024  04FF  3040               	movlw	64
  2025  0500  120A  158A  25EC  120A  118A  	fcall	_SetDDRamAddr
  2026                           
  2027                           ;main.c: 105:         putsXLCD(lineTwo);
  2028  0505  30A1               	movlw	(low (_lineTwo| 0))& (0+255)
  2029  0506  120A  158A  227F  120A  118A  	fcall	_putsXLCD
  2030                           
  2031                           ;main.c: 106:         _delay((unsigned long)((100)*(4000000/4000.0)));
  2032  050B  3082               	movlw	130
  2033  050C  1683               	bsf	3,5	;RP0=1, select bank1
  2034  050D  1303               	bcf	3,6	;RP1=0, select bank1
  2035  050E  00DC               	movwf	(??_start^(0+128)+1)
  2036  050F  30DD               	movlw	221
  2037  0510  00DB               	movwf	??_start^(0+128)
  2038  0511                     u3557:	
  2039  0511  0BDB               	decfsz	??_start^(0+128),f
  2040  0512  2D11               	goto	u3557
  2041  0513  0BDC               	decfsz	(??_start^(0+128)+1),f
  2042  0514  2D11               	goto	u3557
  2043                           
  2044                           ;main.c: 107:     }
  2045  0515  3001               	movlw	1
  2046  0516  1683               	bsf	3,5	;RP0=1, select bank1
  2047  0517  1303               	bcf	3,6	;RP1=0, select bank1
  2048  0518  00DB               	movwf	??_start^(0+128)
  2049  0519  085B               	movf	??_start^(0+128),w
  2050  051A  07DE               	addwf	start@i^(0+128),f
  2051  051B  3012               	movlw	18
  2052  051C  025E               	subwf	start@i^(0+128),w
  2053  051D  1C03               	skipc
  2054  051E  2CCE               	goto	L3
  2055                           
  2056                           ;main.c: 108:     PORTCbits.RC3 = 0;
  2057  051F  1283               	bcf	3,5	;RP0=0, select bank0
  2058  0520  1303               	bcf	3,6	;RP1=0, select bank0
  2059  0521  1187               	bcf	7,3	;volatile
  2060                           
  2061                           ;main.c: 110:     for(i = 0; i < 15; i++){
  2062  0522  1683               	bsf	3,5	;RP0=1, select bank1
  2063  0523  1303               	bcf	3,6	;RP1=0, select bank1
  2064  0524  01DE               	clrf	start@i^(0+128)
  2065                           
  2066                           ;main.c: 111:         PORTCbits.RC2 = !PORTCbits.RC2;
  2067  0525  1003               	clrc
  2068  0526                     L4:	
  2069  0526  1283               	bcf	3,5	;RP0=0, select bank0
  2070  0527  1303               	bcf	3,6	;RP1=0, select bank0
  2071  0528  1D07               	btfss	7,2	;volatile
  2072  0529  1403               	setc
  2073  052A  1C03               	btfss	3,0
  2074  052B  2D30               	goto	u3390
  2075  052C  1283               	bcf	3,5	;RP0=0, select bank0
  2076  052D  1303               	bcf	3,6	;RP1=0, select bank0
  2077  052E  1507               	bsf	7,2	;volatile
  2078  052F  2D33               	goto	l3890
  2079  0530                     u3390:	
  2080  0530  1283               	bcf	3,5	;RP0=0, select bank0
  2081  0531  1303               	bcf	3,6	;RP1=0, select bank0
  2082  0532  1107               	bcf	7,2	;volatile
  2083  0533                     l3890:	
  2084                           
  2085                           ;main.c: 112:         sprintf(lineOne,"TESTING         ");
  2086  0533  3032               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  2087  0534  1683               	bsf	3,5	;RP0=1, select bank1
  2088  0535  1303               	bcf	3,6	;RP1=0, select bank1
  2089  0536  00DB               	movwf	??_start^(0+128)
  2090  0537  085B               	movf	??_start^(0+128),w
  2091  0538  00CA               	movwf	sprintf@f^(0+128)
  2092  0539  30B2               	movlw	(low (_lineOne| 0))& (0+255)
  2093  053A  120A  118A  2035  120A  118A  	fcall	_sprintf
  2094                           
  2095                           ;main.c: 113:         sprintf(lineTwo,"             SWR");
  2096  053F  3076               	movlw	(low ((STR_8-__stringbase)| (0+32768)))& (0+255)
  2097  0540  1683               	bsf	3,5	;RP0=1, select bank1
  2098  0541  1303               	bcf	3,6	;RP1=0, select bank1
  2099  0542  00DB               	movwf	??_start^(0+128)
  2100  0543  085B               	movf	??_start^(0+128),w
  2101  0544  00CA               	movwf	sprintf@f^(0+128)
  2102  0545  30A1               	movlw	(low (_lineTwo| 0))& (0+255)
  2103  0546  120A  118A  2035  120A  118A  	fcall	_sprintf
  2104                           
  2105                           ;main.c: 114:         SetDDRamAddr(0x00);
  2106  054B  3000               	movlw	0
  2107  054C  120A  158A  25EC  120A  118A  	fcall	_SetDDRamAddr
  2108                           
  2109                           ;main.c: 115:         putsXLCD(lineOne);
  2110  0551  30B2               	movlw	(low (_lineOne| 0))& (0+255)
  2111  0552  120A  158A  227F  120A  118A  	fcall	_putsXLCD
  2112                           
  2113                           ;main.c: 116:         SetDDRamAddr(0x40);
  2114  0557  3040               	movlw	64
  2115  0558  120A  158A  25EC  120A  118A  	fcall	_SetDDRamAddr
  2116                           
  2117                           ;main.c: 117:         putsXLCD(lineTwo);
  2118  055D  30A1               	movlw	(low (_lineTwo| 0))& (0+255)
  2119  055E  120A  158A  227F  120A  118A  	fcall	_putsXLCD
  2120                           
  2121                           ;main.c: 118:         _delay((unsigned long)((100)*(4000000/4000.0)));
  2122  0563  3082               	movlw	130
  2123  0564  1683               	bsf	3,5	;RP0=1, select bank1
  2124  0565  1303               	bcf	3,6	;RP1=0, select bank1
  2125  0566  00DC               	movwf	(??_start^(0+128)+1)
  2126  0567  30DD               	movlw	221
  2127  0568  00DB               	movwf	??_start^(0+128)
  2128  0569                     u3567:	
  2129  0569  0BDB               	decfsz	??_start^(0+128),f
  2130  056A  2D69               	goto	u3567
  2131  056B  0BDC               	decfsz	(??_start^(0+128)+1),f
  2132  056C  2D69               	goto	u3567
  2133                           
  2134                           ;main.c: 119:     }
  2135  056D  3001               	movlw	1
  2136  056E  1683               	bsf	3,5	;RP0=1, select bank1
  2137  056F  1303               	bcf	3,6	;RP1=0, select bank1
  2138  0570  00DB               	movwf	??_start^(0+128)
  2139  0571  085B               	movf	??_start^(0+128),w
  2140  0572  07DE               	addwf	start@i^(0+128),f
  2141  0573  300F               	movlw	15
  2142  0574  025E               	subwf	start@i^(0+128),w
  2143  0575  1C03               	skipc
  2144  0576  2D26               	goto	L4
  2145                           
  2146                           ;main.c: 120:     PORTCbits.RC2 = 0;
  2147  0577  1283               	bcf	3,5	;RP0=0, select bank0
  2148  0578  1303               	bcf	3,6	;RP1=0, select bank0
  2149  0579  1107               	bcf	7,2	;volatile
  2150                           
  2151                           ;main.c: 121:     beep(250);
  2152  057A  30FA               	movlw	250
  2153  057B  1683               	bsf	3,5	;RP0=1, select bank1
  2154  057C  1303               	bcf	3,6	;RP1=0, select bank1
  2155  057D  00C3               	movwf	beep@ms^(0+128)
  2156  057E  3000               	movlw	0
  2157  057F  00C4               	movwf	(beep@ms^(0+128)+1)
  2158  0580  120A  158A  24BB  120A  118A  	fcall	_beep
  2159                           
  2160                           ;main.c: 122:     INTCONbits.GIE = 1;
  2161  0585  178B               	bsf	11,7	;volatile
  2162                           
  2163                           ;main.c: 123:     _delay((unsigned long)((500)*(4000000/4000.0)));
  2164  0586  3003               	movlw	3
  2165  0587  1683               	bsf	3,5	;RP0=1, select bank1
  2166  0588  1303               	bcf	3,6	;RP1=0, select bank1
  2167  0589  00DD               	movwf	(??_start^(0+128)+2)
  2168  058A  308A               	movlw	138
  2169  058B  00DC               	movwf	(??_start^(0+128)+1)
  2170  058C  3055               	movlw	85
  2171  058D  00DB               	movwf	??_start^(0+128)
  2172  058E                     u3577:	
  2173  058E  0BDB               	decfsz	??_start^(0+128),f
  2174  058F  2D8E               	goto	u3577
  2175  0590  0BDC               	decfsz	(??_start^(0+128)+1),f
  2176  0591  2D8E               	goto	u3577
  2177  0592  0BDD               	decfsz	(??_start^(0+128)+2),f
  2178  0593  2D8E               	goto	u3577
  2179                           
  2180                           ;main.c: 124:     PORTCbits.RC1 = 1;
  2181  0594  1283               	bcf	3,5	;RP0=0, select bank0
  2182  0595  1303               	bcf	3,6	;RP1=0, select bank0
  2183  0596  1487               	bsf	7,1	;volatile
  2184                           
  2185                           ;main.c: 125:     PORTCbits.RC3 = 1;
  2186  0597  1587               	bsf	7,3	;volatile
  2187                           
  2188                           ;main.c: 126:     PORTCbits.RC2 = 1;
  2189  0598  1507               	bsf	7,2	;volatile
  2190                           
  2191                           ;main.c: 127:     INTCONbits.GIE = 1;
  2192  0599  178B               	bsf	11,7	;volatile
  2193  059A  0008               	return
  2194  059B                     __end_of_start:	
  2195                           
  2196                           	psect	text2
  2197  0325                     __ptext2:	
  2198 ;; *************** function _setFrequency *****************
  2199 ;; Defined at:
  2200 ;;		line 188 in file "main.c"
  2201 ;; Parameters:    Size  Location     Type
  2202 ;;		None
  2203 ;; Auto vars:     Size  Location     Type
  2204 ;;		None
  2205 ;; Return value:  Size  Location     Type
  2206 ;;                  1    wreg      void 
  2207 ;; Registers used:
  2208 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2209 ;; Tracked objects:
  2210 ;;		On entry : 0/0
  2211 ;;		On exit  : 0/0
  2212 ;;		Unchanged: 0/0
  2213 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2214 ;;      Params:         0       0       0       0       0
  2215 ;;      Locals:         0       0       0       0       0
  2216 ;;      Temps:          0       0       3       0       0
  2217 ;;      Totals:         0       0       3       0       0
  2218 ;;Total ram usage:        3 bytes
  2219 ;; Hardware stack levels used:    1
  2220 ;; Hardware stack levels required when called:    8
  2221 ;; This function calls:
  2222 ;;		_SetDDRamAddr
  2223 ;;		_beep
  2224 ;;		_putsXLCD
  2225 ;;		_setData
  2226 ;;		_sprintf
  2227 ;;		_writeFrequency
  2228 ;; This function is called by:
  2229 ;;		_main
  2230 ;; This function uses a non-reentrant model
  2231 ;;
  2232                           
  2233                           
  2234                           ;psect for function _setFrequency
  2235  0325                     _setFrequency:	
  2236                           
  2237                           ;main.c: 189:     isOnConfig = 1;
  2238                           
  2239                           ;incstack = 0
  2240 ;; hardware stack exceeded
  2241                           ; Regs used in _setFrequency: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2242  0325  1283               	bcf	3,5	;RP0=0, select bank0
  2243  0326  1303               	bcf	3,6	;RP1=0, select bank0
  2244  0327  01C7               	clrf	_isOnConfig
  2245  0328  0AC7               	incf	_isOnConfig,f
  2246                           
  2247                           ;main.c: 190:     sprintf(lineOne,"SET   FREQUENCY ");
  2248  0329  3043               	movlw	(low ((STR_9-__stringbase)| (0+32768)))& (0+255)
  2249  032A  1683               	bsf	3,5	;RP0=1, select bank1
  2250  032B  1303               	bcf	3,6	;RP1=0, select bank1
  2251  032C  00DB               	movwf	??_setFrequency^(0+128)
  2252  032D  085B               	movf	??_setFrequency^(0+128),w
  2253  032E  00CA               	movwf	sprintf@f^(0+128)
  2254  032F  30B2               	movlw	(low (_lineOne| 0))& (0+255)
  2255  0330  120A  118A  2035  120A  118A  	fcall	_sprintf
  2256                           
  2257                           ;main.c: 191:     beep(200);
  2258  0335  30C8               	movlw	200
  2259  0336  1683               	bsf	3,5	;RP0=1, select bank1
  2260  0337  1303               	bcf	3,6	;RP1=0, select bank1
  2261  0338  00C3               	movwf	beep@ms^(0+128)
  2262  0339  3000               	movlw	0
  2263  033A  00C4               	movwf	(beep@ms^(0+128)+1)
  2264  033B  120A  158A  24BB  120A  118A  	fcall	_beep
  2265  0340                     l243:	
  2266                           ;main.c: 192:     while(!PORTAbits.RA4)continue;
  2267                           
  2268  0340  1283               	bcf	3,5	;RP0=0, select bank0
  2269  0341  1303               	bcf	3,6	;RP1=0, select bank0
  2270  0342  1E05               	btfss	5,4	;volatile
  2271  0343  2B40               	goto	l243
  2272  0344                     l246:	
  2273                           ;main.c: 194:     while(1){
  2274                           
  2275                           
  2276                           ;main.c: 195:         if(!PORTAbits.RA3){
  2277  0344  1985               	btfsc	5,3	;volatile
  2278  0345  2B9E               	goto	l247
  2279                           
  2280                           ;main.c: 196:             if(frequency < 1080)frequency++;
  2281  0346  3004               	movlw	4
  2282  0347  0245               	subwf	_frequency+1,w
  2283  0348  3038               	movlw	56
  2284  0349  1903               	skipnz
  2285  034A  0244               	subwf	_frequency,w
  2286  034B  1803               	skipnc
  2287  034C  2B53               	goto	l248
  2288  034D  3001               	movlw	1
  2289  034E  07C4               	addwf	_frequency,f
  2290  034F  1803               	skipnc
  2291  0350  0AC5               	incf	_frequency+1,f
  2292  0351  3000               	movlw	0
  2293  0352  07C5               	addwf	_frequency+1,f
  2294  0353                     l248:	
  2295                           
  2296                           ;main.c: 197:             if(frequency > 1080)frequency = 1080;
  2297  0353  3004               	movlw	4
  2298  0354  0245               	subwf	_frequency+1,w
  2299  0355  3039               	movlw	57
  2300  0356  1903               	skipnz
  2301  0357  0244               	subwf	_frequency,w
  2302  0358  1C03               	skipc
  2303  0359  2B5E               	goto	l3770
  2304  035A  3038               	movlw	56
  2305  035B  00C4               	movwf	_frequency
  2306  035C  3004               	movlw	4
  2307  035D  00C5               	movwf	_frequency+1
  2308  035E                     l3770:	
  2309                           
  2310                           ;main.c: 198:             beep(100);
  2311  035E  3064               	movlw	100
  2312  035F  1683               	bsf	3,5	;RP0=1, select bank1
  2313  0360  1303               	bcf	3,6	;RP1=0, select bank1
  2314  0361  00C3               	movwf	beep@ms^(0+128)
  2315  0362  3000               	movlw	0
  2316  0363  00C4               	movwf	(beep@ms^(0+128)+1)
  2317  0364  120A  158A  24BB  120A  118A  	fcall	_beep
  2318                           
  2319                           ;main.c: 199:             _delay((unsigned long)((500)*(4000000/4000.0)));
  2320  0369  3003               	movlw	3
  2321  036A  1683               	bsf	3,5	;RP0=1, select bank1
  2322  036B  1303               	bcf	3,6	;RP1=0, select bank1
  2323  036C  00DD               	movwf	(??_setFrequency^(0+128)+2)
  2324  036D  308A               	movlw	138
  2325  036E  00DC               	movwf	(??_setFrequency^(0+128)+1)
  2326  036F  3055               	movlw	85
  2327  0370  00DB               	movwf	??_setFrequency^(0+128)
  2328  0371                     u3587:	
  2329  0371  0BDB               	decfsz	??_setFrequency^(0+128),f
  2330  0372  2B71               	goto	u3587
  2331  0373  0BDC               	decfsz	(??_setFrequency^(0+128)+1),f
  2332  0374  2B71               	goto	u3587
  2333  0375  0BDD               	decfsz	(??_setFrequency^(0+128)+2),f
  2334  0376  2B71               	goto	u3587
  2335  0377                     l3780:	
  2336                           ;main.c: 200:             while(!PORTAbits.RA3){
  2337                           
  2338                           
  2339                           ;main.c: 200:             while(!PORTAbits.RA3){
  2340  0377  1283               	bcf	3,5	;RP0=0, select bank0
  2341  0378  1303               	bcf	3,6	;RP1=0, select bank0
  2342  0379  1985               	btfsc	5,3	;volatile
  2343  037A  2B9E               	goto	l247
  2344                           
  2345                           ;main.c: 201:                 if(frequency < 1080)frequency++;
  2346  037B  3004               	movlw	4
  2347  037C  0245               	subwf	_frequency+1,w
  2348  037D  3038               	movlw	56
  2349  037E  1903               	skipnz
  2350  037F  0244               	subwf	_frequency,w
  2351  0380  1803               	skipnc
  2352  0381  2B88               	goto	l252
  2353  0382  3001               	movlw	1
  2354  0383  07C4               	addwf	_frequency,f
  2355  0384  1803               	skipnc
  2356  0385  0AC5               	incf	_frequency+1,f
  2357  0386  3000               	movlw	0
  2358  0387  07C5               	addwf	_frequency+1,f
  2359  0388                     l252:	
  2360                           
  2361                           ;main.c: 202:                 if(frequency > 1080)frequency = 1080;
  2362  0388  3004               	movlw	4
  2363  0389  0245               	subwf	_frequency+1,w
  2364  038A  3039               	movlw	57
  2365  038B  1903               	skipnz
  2366  038C  0244               	subwf	_frequency,w
  2367  038D  1C03               	skipc
  2368  038E  2B93               	goto	l253
  2369  038F  3038               	movlw	56
  2370  0390  00C4               	movwf	_frequency
  2371  0391  3004               	movlw	4
  2372  0392  00C5               	movwf	_frequency+1
  2373  0393                     l253:	
  2374                           
  2375                           ;main.c: 203:                 _delay((unsigned long)((100)*(4000000/4000.0)));
  2376  0393  3082               	movlw	130
  2377  0394  1683               	bsf	3,5	;RP0=1, select bank1
  2378  0395  1303               	bcf	3,6	;RP1=0, select bank1
  2379  0396  00DC               	movwf	(??_setFrequency^(0+128)+1)
  2380  0397  30DD               	movlw	221
  2381  0398  00DB               	movwf	??_setFrequency^(0+128)
  2382  0399                     u3597:	
  2383  0399  0BDB               	decfsz	??_setFrequency^(0+128),f
  2384  039A  2B99               	goto	u3597
  2385  039B  0BDC               	decfsz	(??_setFrequency^(0+128)+1),f
  2386  039C  2B99               	goto	u3597
  2387  039D  2B77               	goto	l3780
  2388  039E                     l247:	
  2389                           ;main.c: 205:         }
  2390                           
  2391                           
  2392                           ;main.c: 207:         if(!PORTAbits.RA5){
  2393  039E  1A85               	btfsc	5,5	;volatile
  2394  039F  2BF8               	goto	l255
  2395                           
  2396                           ;main.c: 208:             if(frequency > 880)frequency--;
  2397  03A0  3003               	movlw	3
  2398  03A1  0245               	subwf	_frequency+1,w
  2399  03A2  3071               	movlw	113
  2400  03A3  1903               	skipnz
  2401  03A4  0244               	subwf	_frequency,w
  2402  03A5  1C03               	skipc
  2403  03A6  2BAD               	goto	l256
  2404  03A7  3001               	movlw	1
  2405  03A8  02C4               	subwf	_frequency,f
  2406  03A9  3000               	movlw	0
  2407  03AA  1C03               	skipc
  2408  03AB  03C5               	decf	_frequency+1,f
  2409  03AC  02C5               	subwf	_frequency+1,f
  2410  03AD                     l256:	
  2411                           
  2412                           ;main.c: 209:             if(frequency < 880)frequency = 880;
  2413  03AD  3003               	movlw	3
  2414  03AE  0245               	subwf	_frequency+1,w
  2415  03AF  3070               	movlw	112
  2416  03B0  1903               	skipnz
  2417  03B1  0244               	subwf	_frequency,w
  2418  03B2  1803               	skipnc
  2419  03B3  2BB8               	goto	l3788
  2420  03B4  3070               	movlw	112
  2421  03B5  00C4               	movwf	_frequency
  2422  03B6  3003               	movlw	3
  2423  03B7  00C5               	movwf	_frequency+1
  2424  03B8                     l3788:	
  2425                           
  2426                           ;main.c: 210:             beep(100);
  2427  03B8  3064               	movlw	100
  2428  03B9  1683               	bsf	3,5	;RP0=1, select bank1
  2429  03BA  1303               	bcf	3,6	;RP1=0, select bank1
  2430  03BB  00C3               	movwf	beep@ms^(0+128)
  2431  03BC  3000               	movlw	0
  2432  03BD  00C4               	movwf	(beep@ms^(0+128)+1)
  2433  03BE  120A  158A  24BB  120A  118A  	fcall	_beep
  2434                           
  2435                           ;main.c: 211:             _delay((unsigned long)((500)*(4000000/4000.0)));
  2436  03C3  3003               	movlw	3
  2437  03C4  1683               	bsf	3,5	;RP0=1, select bank1
  2438  03C5  1303               	bcf	3,6	;RP1=0, select bank1
  2439  03C6  00DD               	movwf	(??_setFrequency^(0+128)+2)
  2440  03C7  308A               	movlw	138
  2441  03C8  00DC               	movwf	(??_setFrequency^(0+128)+1)
  2442  03C9  3055               	movlw	85
  2443  03CA  00DB               	movwf	??_setFrequency^(0+128)
  2444  03CB                     u3607:	
  2445  03CB  0BDB               	decfsz	??_setFrequency^(0+128),f
  2446  03CC  2BCB               	goto	u3607
  2447  03CD  0BDC               	decfsz	(??_setFrequency^(0+128)+1),f
  2448  03CE  2BCB               	goto	u3607
  2449  03CF  0BDD               	decfsz	(??_setFrequency^(0+128)+2),f
  2450  03D0  2BCB               	goto	u3607
  2451  03D1                     l3798:	
  2452                           ;main.c: 212:             while(!PORTAbits.RA5){
  2453                           
  2454                           
  2455                           ;main.c: 212:             while(!PORTAbits.RA5){
  2456  03D1  1283               	bcf	3,5	;RP0=0, select bank0
  2457  03D2  1303               	bcf	3,6	;RP1=0, select bank0
  2458  03D3  1A85               	btfsc	5,5	;volatile
  2459  03D4  2BF8               	goto	l255
  2460                           
  2461                           ;main.c: 213:                 if(frequency > 880)frequency--;
  2462  03D5  3003               	movlw	3
  2463  03D6  0245               	subwf	_frequency+1,w
  2464  03D7  3071               	movlw	113
  2465  03D8  1903               	skipnz
  2466  03D9  0244               	subwf	_frequency,w
  2467  03DA  1C03               	skipc
  2468  03DB  2BE2               	goto	l260
  2469  03DC  3001               	movlw	1
  2470  03DD  02C4               	subwf	_frequency,f
  2471  03DE  3000               	movlw	0
  2472  03DF  1C03               	skipc
  2473  03E0  03C5               	decf	_frequency+1,f
  2474  03E1  02C5               	subwf	_frequency+1,f
  2475  03E2                     l260:	
  2476                           
  2477                           ;main.c: 214:                 if(frequency < 880)frequency = 880;
  2478  03E2  3003               	movlw	3
  2479  03E3  0245               	subwf	_frequency+1,w
  2480  03E4  3070               	movlw	112
  2481  03E5  1903               	skipnz
  2482  03E6  0244               	subwf	_frequency,w
  2483  03E7  1803               	skipnc
  2484  03E8  2BED               	goto	l261
  2485  03E9  3070               	movlw	112
  2486  03EA  00C4               	movwf	_frequency
  2487  03EB  3003               	movlw	3
  2488  03EC  00C5               	movwf	_frequency+1
  2489  03ED                     l261:	
  2490                           
  2491                           ;main.c: 215:                 _delay((unsigned long)((100)*(4000000/4000.0)));
  2492  03ED  3082               	movlw	130
  2493  03EE  1683               	bsf	3,5	;RP0=1, select bank1
  2494  03EF  1303               	bcf	3,6	;RP1=0, select bank1
  2495  03F0  00DC               	movwf	(??_setFrequency^(0+128)+1)
  2496  03F1  30DD               	movlw	221
  2497  03F2  00DB               	movwf	??_setFrequency^(0+128)
  2498  03F3                     u3617:	
  2499  03F3  0BDB               	decfsz	??_setFrequency^(0+128),f
  2500  03F4  2BF3               	goto	u3617
  2501  03F5  0BDC               	decfsz	(??_setFrequency^(0+128)+1),f
  2502  03F6  2BF3               	goto	u3617
  2503  03F7  2BD1               	goto	l3798
  2504  03F8                     l255:	
  2505                           ;main.c: 217:         }
  2506                           
  2507                           
  2508                           ;main.c: 219:         if(!PORTAbits.RA4){
  2509  03F8  1A05               	btfsc	5,4	;volatile
  2510  03F9  2B44               	goto	l246
  2511                           
  2512                           ;main.c: 220:             _delay((unsigned long)((500)*(4000000/4000.0)));
  2513  03FA  3003               	movlw	3
  2514  03FB  1683               	bsf	3,5	;RP0=1, select bank1
  2515  03FC  1303               	bcf	3,6	;RP1=0, select bank1
  2516  03FD  00DD               	movwf	(??_setFrequency^(0+128)+2)
  2517  03FE  308A               	movlw	138
  2518  03FF  00DC               	movwf	(??_setFrequency^(0+128)+1)
  2519  0400  3055               	movlw	85
  2520  0401  00DB               	movwf	??_setFrequency^(0+128)
  2521  0402                     u3627:	
  2522  0402  0BDB               	decfsz	??_setFrequency^(0+128),f
  2523  0403  2C02               	goto	u3627
  2524  0404  0BDC               	decfsz	(??_setFrequency^(0+128)+1),f
  2525  0405  2C02               	goto	u3627
  2526  0406  0BDD               	decfsz	(??_setFrequency^(0+128)+2),f
  2527  0407  2C02               	goto	u3627
  2528                           
  2529                           ;main.c: 221:             if(!PORTAbits.RA4){
  2530  0408  1283               	bcf	3,5	;RP0=0, select bank0
  2531  0409  1303               	bcf	3,6	;RP1=0, select bank0
  2532  040A  1A05               	btfsc	5,4	;volatile
  2533  040B  2B44               	goto	l246
  2534                           
  2535                           ;main.c: 222:                 setData(1);
  2536  040C  3001               	movlw	1
  2537  040D  120A  158A  27A3  120A  118A  	fcall	_setData
  2538                           
  2539                           ;main.c: 223:                 beep(1000);
  2540  0412  30E8               	movlw	232
  2541  0413  1683               	bsf	3,5	;RP0=1, select bank1
  2542  0414  1303               	bcf	3,6	;RP1=0, select bank1
  2543  0415  00C3               	movwf	beep@ms^(0+128)
  2544  0416  3003               	movlw	3
  2545  0417  00C4               	movwf	(beep@ms^(0+128)+1)
  2546  0418  120A  158A  24BB  120A  118A  	fcall	_beep
  2547                           
  2548                           ;main.c: 228:     writeFrequency(frequency);
  2549                           
  2550                           ;main.c: 224:                 break;
  2551  041D  1283               	bcf	3,5	;RP0=0, select bank0
  2552  041E  1303               	bcf	3,6	;RP1=0, select bank0
  2553  041F  0845               	movf	_frequency+1,w
  2554  0420  00C0               	movwf	writeFrequency@f+1
  2555  0421  0844               	movf	_frequency,w
  2556  0422  00BF               	movwf	writeFrequency@f
  2557  0423  120A  118A  2777  120A  118A  	fcall	_writeFrequency
  2558                           
  2559                           ;main.c: 229:     isOnConfig = 0;
  2560  0428  1283               	bcf	3,5	;RP0=0, select bank0
  2561  0429  1303               	bcf	3,6	;RP1=0, select bank0
  2562  042A  01C7               	clrf	_isOnConfig
  2563  042B                     l3826:	
  2564  042B  3019               	movlw	25
  2565  042C  1683               	bsf	3,5	;RP0=1, select bank1
  2566  042D  1303               	bcf	3,6	;RP1=0, select bank1
  2567  042E  0220               	subwf	_i^(0+128),w
  2568  042F  1803               	btfsc	3,0
  2569  0430  0008               	return
  2570                           
  2571                           ;main.c: 232:         sprintf(lineOne,"LOCKING         ");
  2572  0431  3021               	movlw	(low ((STR_10-__stringbase)| (0+32768)))& (0+255)
  2573  0432  00DB               	movwf	??_setFrequency^(0+128)
  2574  0433  085B               	movf	??_setFrequency^(0+128),w
  2575  0434  00CA               	movwf	sprintf@f^(0+128)
  2576  0435  30B2               	movlw	(low (_lineOne| 0))& (0+255)
  2577  0436  120A  118A  2035  120A  118A  	fcall	_sprintf
  2578                           
  2579                           ;main.c: 233:         sprintf(lineTwo,"       FREQUENCY");
  2580  043B  3087               	movlw	(low ((STR_11-__stringbase)| (0+32768)))& (0+255)
  2581  043C  1683               	bsf	3,5	;RP0=1, select bank1
  2582  043D  1303               	bcf	3,6	;RP1=0, select bank1
  2583  043E  00DB               	movwf	??_setFrequency^(0+128)
  2584  043F  085B               	movf	??_setFrequency^(0+128),w
  2585  0440  00CA               	movwf	sprintf@f^(0+128)
  2586  0441  30A1               	movlw	(low (_lineTwo| 0))& (0+255)
  2587  0442  120A  118A  2035  120A  118A  	fcall	_sprintf
  2588                           
  2589                           ;main.c: 234:         SetDDRamAddr(0x00);
  2590  0447  3000               	movlw	0
  2591  0448  120A  158A  25EC  120A  118A  	fcall	_SetDDRamAddr
  2592                           
  2593                           ;main.c: 235:         putsXLCD(lineOne);
  2594  044D  30B2               	movlw	(low (_lineOne| 0))& (0+255)
  2595  044E  120A  158A  227F  120A  118A  	fcall	_putsXLCD
  2596                           
  2597                           ;main.c: 236:         SetDDRamAddr(0x40);
  2598  0453  3040               	movlw	64
  2599  0454  120A  158A  25EC  120A  118A  	fcall	_SetDDRamAddr
  2600                           
  2601                           ;main.c: 237:         putsXLCD(lineTwo);
  2602  0459  30A1               	movlw	(low (_lineTwo| 0))& (0+255)
  2603  045A  120A  158A  227F  120A  118A  	fcall	_putsXLCD
  2604                           
  2605                           ;main.c: 238:         _delay((unsigned long)((90)*(4000000/4000.0)));
  2606  045F  3075               	movlw	117
  2607  0460  1683               	bsf	3,5	;RP0=1, select bank1
  2608  0461  1303               	bcf	3,6	;RP1=0, select bank1
  2609  0462  00DC               	movwf	(??_setFrequency^(0+128)+1)
  2610  0463  30E0               	movlw	224
  2611  0464  00DB               	movwf	??_setFrequency^(0+128)
  2612  0465                     u3637:	
  2613  0465  0BDB               	decfsz	??_setFrequency^(0+128),f
  2614  0466  2C65               	goto	u3637
  2615  0467  0BDC               	decfsz	(??_setFrequency^(0+128)+1),f
  2616  0468  2C65               	goto	u3637
  2617  0469  0000               	nop
  2618                           
  2619                           ;main.c: 239:     }
  2620  046A  3001               	movlw	1
  2621  046B  1683               	bsf	3,5	;RP0=1, select bank1
  2622  046C  1303               	bcf	3,6	;RP1=0, select bank1
  2623  046D  00DB               	movwf	??_setFrequency^(0+128)
  2624  046E  085B               	movf	??_setFrequency^(0+128),w
  2625  046F  07A0               	addwf	_i^(0+128),f
  2626  0470  2C2B               	goto	l3826
  2627  0471                     __end_of_setFrequency:	
  2628                           
  2629                           	psect	text3
  2630  0035                     __ptext3:	
  2631 ;; *************** function _sprintf *****************
  2632 ;; Defined at:
  2633 ;;		line 500 in file "/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt.c"
  2634 ;; Parameters:    Size  Location     Type
  2635 ;;  sp              1    wreg     PTR unsigned char 
  2636 ;;		 -> lineOne(17), lineTwo(17), 
  2637 ;;  f               1    7[BANK1 ] PTR const unsigned char 
  2638 ;;		 -> STR_12(18), STR_11(17), STR_10(17), STR_9(17), 
  2639 ;;		 -> STR_8(17), STR_7(17), STR_6(17), STR_5(17), 
  2640 ;;		 -> STR_4(17), STR_3(17), STR_2(18), 
  2641 ;; Auto vars:     Size  Location     Type
  2642 ;;  sp              1   22[BANK1 ] PTR unsigned char 
  2643 ;;		 -> lineOne(17), lineTwo(17), 
  2644 ;;  tmpval          4    0        struct .
  2645 ;;  width           2   20[BANK1 ] int 
  2646 ;;  val             2   18[BANK1 ] unsigned int 
  2647 ;;  cp              2    0        PTR const unsigned char 
  2648 ;;  len             2    0        unsigned int 
  2649 ;;  c               1   23[BANK1 ] unsigned char 
  2650 ;;  flag            1   17[BANK1 ] unsigned char 
  2651 ;;  prec            1   16[BANK1 ] char 
  2652 ;;  ap              1   15[BANK1 ] PTR void [1]
  2653 ;;		 -> ?_sprintf(2), 
  2654 ;; Return value:  Size  Location     Type
  2655 ;;                  2    7[BANK1 ] int 
  2656 ;; Registers used:
  2657 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2658 ;; Tracked objects:
  2659 ;;		On entry : 0/0
  2660 ;;		On exit  : 0/0
  2661 ;;		Unchanged: 0/0
  2662 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2663 ;;      Params:         0       0       5       0       0
  2664 ;;      Locals:         0       0       9       0       0
  2665 ;;      Temps:          0       0       3       0       0
  2666 ;;      Totals:         0       0      17       0       0
  2667 ;;Total ram usage:       17 bytes
  2668 ;; Hardware stack levels used:    1
  2669 ;; Hardware stack levels required when called:    6
  2670 ;; This function calls:
  2671 ;;		___lwdiv
  2672 ;;		___lwmod
  2673 ;;		___wmul
  2674 ;;		_isdigit
  2675 ;; This function is called by:
  2676 ;;		_main
  2677 ;;		_start
  2678 ;;		_setFrequency
  2679 ;; This function uses a non-reentrant model
  2680 ;;
  2681                           
  2682                           
  2683                           ;psect for function _sprintf
  2684  0035                     _sprintf:	
  2685                           
  2686                           ;incstack = 0
  2687 ;; using string table level
  2688                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2689                           ;sprintf@sp stored from wreg
  2690  0035  1683               	bsf	3,5	;RP0=1, select bank1
  2691  0036  1303               	bcf	3,6	;RP1=0, select bank1
  2692  0037  00D9               	movwf	sprintf@sp^(0+128)
  2693                           
  2694                           ;/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt.c: 500: sprintf(char * sp, const
      +                           char * f, ...);/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt.c: 501: {;/opt/mi
      +                          crochip/xc8/v2.05/pic/sources/c90/common/doprnt.c: 502:  va_list ap;;/opt/microchip/xc8/
      +                          v2.05/pic/sources/c90/common/doprnt.c: 507:  char c;;/opt/microchip/xc8/v2.05/pic/source
      +                          s/c90/common/doprnt.c: 509:  int width;;/opt/microchip/xc8/v2.05/pic/sources/c90/common/
      +                          doprnt.c: 516:  signed char prec;;/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt
      +                          .c: 520:  unsigned char flag;
  2695  0038  30CB               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  2696  0039  00CF               	movwf	??_sprintf^(0+128)
  2697  003A  084F               	movf	??_sprintf^(0+128),w
  2698  003B  00D2               	movwf	sprintf@ap^(0+128)
  2699  003C                     l3696:	
  2700                           ;/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt.c: 548:  while((c = *f++)) {
  2701                           
  2702                           
  2703                           ;/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt.c: 548:  while((c = *f++)) {
  2704  003C  3001               	movlw	1
  2705  003D  07CA               	addwf	sprintf@f^(0+128),f
  2706  003E  30FF               	movlw	-1
  2707  003F  074A               	addwf	sprintf@f^(0+128),w
  2708  0040  0084               	movwf	4
  2709  0041  120A  158A  2000  120A  118A  	fcall	stringdir
  2710  0046  00CF               	movwf	??_sprintf^(0+128)
  2711  0047  084F               	movf	??_sprintf^(0+128),w
  2712  0048  00DA               	movwf	sprintf@c^(0+128)
  2713  0049  085A               	movf	sprintf@c^(0+128),w
  2714  004A  1903               	btfsc	3,2
  2715  004B  29B8               	goto	l3698
  2716                           
  2717                           ;/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt.c: 550:   if(c != '%')
  2718  004C  3025               	movlw	37
  2719  004D  065A               	xorwf	sprintf@c^(0+128),w
  2720  004E  1903               	btfsc	3,2
  2721  004F  285C               	goto	l3622
  2722                           
  2723                           ;/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt.c: 552:   {;/opt/microchip/xc8/v
      +                          2.05/pic/sources/c90/common/doprnt.c: 553:    ((*sp++ = (c)));
  2724  0050  085A               	movf	sprintf@c^(0+128),w
  2725  0051  00CF               	movwf	??_sprintf^(0+128)
  2726  0052  0859               	movf	sprintf@sp^(0+128),w
  2727  0053  0084               	movwf	4
  2728  0054  084F               	movf	??_sprintf^(0+128),w
  2729  0055  1383               	bcf	3,7	;select IRP bank0
  2730  0056  0080               	movwf	0
  2731  0057  3001               	movlw	1
  2732  0058  00CF               	movwf	??_sprintf^(0+128)
  2733  0059  084F               	movf	??_sprintf^(0+128),w
  2734  005A  07D9               	addwf	sprintf@sp^(0+128),f
  2735                           
  2736                           ;/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt.c: 554:    continue;
  2737  005B  283C               	goto	l3696
  2738  005C                     l3622:	
  2739                           
  2740                           ;/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt.c: 558:   width = 0;
  2741  005C  01D7               	clrf	sprintf@width^(0+128)
  2742  005D  01D8               	clrf	(sprintf@width+1)^(0+128)
  2743                           
  2744                           ;/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt.c: 560:   flag = 0;
  2745  005E  01D4               	clrf	sprintf@flag^(0+128)
  2746                           
  2747                           ;/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt.c: 609:   if(isdigit((unsigned)*
      +                          f)) {
  2748  005F  084A               	movf	sprintf@f^(0+128),w
  2749  0060  0084               	movwf	4
  2750  0061  120A  158A  2000  120A  118A  	fcall	stringdir
  2751  0066  120A  158A  21B7  120A  118A  	fcall	_isdigit
  2752  006B  1C03               	btfss	3,0
  2753  006C  28B9               	goto	l3638
  2754                           
  2755                           ;/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt.c: 610:    width = 0;
  2756  006D  1683               	bsf	3,5	;RP0=1, select bank1
  2757  006E  1303               	bcf	3,6	;RP1=0, select bank1
  2758  006F  01D7               	clrf	sprintf@width^(0+128)
  2759  0070  01D8               	clrf	(sprintf@width+1)^(0+128)
  2760  0071                     l3628:	
  2761                           
  2762                           ;/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt.c: 612:     width *= 10;
  2763  0071  300A               	movlw	10
  2764  0072  1283               	bcf	3,5	;RP0=0, select bank0
  2765  0073  1303               	bcf	3,6	;RP1=0, select bank0
  2766  0074  00BD               	movwf	___wmul@multiplier
  2767  0075  3000               	movlw	0
  2768  0076  00BE               	movwf	___wmul@multiplier+1
  2769  0077  1683               	bsf	3,5	;RP0=1, select bank1
  2770  0078  1303               	bcf	3,6	;RP1=0, select bank1
  2771  0079  0858               	movf	(sprintf@width+1)^(0+128),w
  2772  007A  1283               	bcf	3,5	;RP0=0, select bank0
  2773  007B  1303               	bcf	3,6	;RP1=0, select bank0
  2774  007C  00C0               	movwf	___wmul@multiplicand+1
  2775  007D  1683               	bsf	3,5	;RP0=1, select bank1
  2776  007E  1303               	bcf	3,6	;RP1=0, select bank1
  2777  007F  0857               	movf	sprintf@width^(0+128),w
  2778  0080  1283               	bcf	3,5	;RP0=0, select bank0
  2779  0081  1303               	bcf	3,6	;RP1=0, select bank0
  2780  0082  00BF               	movwf	___wmul@multiplicand
  2781  0083  120A  158A  225C  120A  118A  	fcall	___wmul
  2782  0088  1283               	bcf	3,5	;RP0=0, select bank0
  2783  0089  1303               	bcf	3,6	;RP1=0, select bank0
  2784  008A  083E               	movf	?___wmul+1,w
  2785  008B  1683               	bsf	3,5	;RP0=1, select bank1
  2786  008C  1303               	bcf	3,6	;RP1=0, select bank1
  2787  008D  00D8               	movwf	(sprintf@width+1)^(0+128)
  2788  008E  1283               	bcf	3,5	;RP0=0, select bank0
  2789  008F  1303               	bcf	3,6	;RP1=0, select bank0
  2790  0090  083D               	movf	?___wmul,w
  2791  0091  1683               	bsf	3,5	;RP0=1, select bank1
  2792  0092  1303               	bcf	3,6	;RP1=0, select bank1
  2793  0093  00D7               	movwf	sprintf@width^(0+128)
  2794                           
  2795                           ;/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt.c: 613:        width += *f++ - '
      +                          0';
  2796  0094  084A               	movf	sprintf@f^(0+128),w
  2797  0095  0084               	movwf	4
  2798  0096  120A  158A  2000  120A  118A  	fcall	stringdir
  2799  009B  3ED0               	addlw	208
  2800  009C  00CF               	movwf	??_sprintf^(0+128)
  2801  009D  30FF               	movlw	255
  2802  009E  1803               	skipnc
  2803  009F  3000               	movlw	0
  2804  00A0  00D0               	movwf	(??_sprintf^(0+128)+1)
  2805  00A1  084F               	movf	??_sprintf^(0+128),w
  2806  00A2  07D7               	addwf	sprintf@width^(0+128),f
  2807  00A3  1803               	skipnc
  2808  00A4  0AD8               	incf	(sprintf@width+1)^(0+128),f
  2809  00A5  0850               	movf	(??_sprintf+1)^(0+128),w
  2810  00A6  07D8               	addwf	(sprintf@width+1)^(0+128),f
  2811  00A7  3001               	movlw	1
  2812  00A8  00CF               	movwf	??_sprintf^(0+128)
  2813  00A9  084F               	movf	??_sprintf^(0+128),w
  2814  00AA  07CA               	addwf	sprintf@f^(0+128),f
  2815                           
  2816                           ;/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt.c: 614:    } while(isdigit((unsi
      +                          gned)*f));
  2817  00AB  084A               	movf	sprintf@f^(0+128),w
  2818  00AC  0084               	movwf	4
  2819  00AD  120A  158A  2000  120A  118A  	fcall	stringdir
  2820  00B2  120A  158A  21B7  120A  118A  	fcall	_isdigit
  2821  00B7  1803               	btfsc	3,0
  2822  00B8  2871               	goto	l3628
  2823  00B9                     l3638:	
  2824  00B9  3001               	movlw	1
  2825  00BA  1683               	bsf	3,5	;RP0=1, select bank1
  2826  00BB  1303               	bcf	3,6	;RP1=0, select bank1
  2827  00BC  07CA               	addwf	sprintf@f^(0+128),f
  2828  00BD  30FF               	movlw	-1
  2829  00BE  074A               	addwf	sprintf@f^(0+128),w
  2830  00BF  0084               	movwf	4
  2831  00C0  120A  158A  2000  120A  118A  	fcall	stringdir
  2832  00C5  00DA               	movwf	sprintf@c^(0+128)
  2833  00C6  00CF               	movwf	??_sprintf^(0+128)
  2834  00C7  01D0               	clrf	(??_sprintf^(0+128)+1)
  2835                           
  2836                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2837                           ; Switch size 1, requested type "simple"
  2838                           ; Number of cases is 1, Range of values is 0 to 0
  2839                           ; switch strategies available:
  2840                           ; Name         Instructions Cycles
  2841                           ; simple_byte            4     3 (average)
  2842                           ; direct_byte           11     8 (fixed)
  2843                           ; jumptable            260     6 (fixed)
  2844                           ;	Chosen strategy is simple_byte
  2845  00C8  0850               	movf	(??_sprintf+1)^(0+128),w
  2846  00C9  3A00               	xorlw	0	; case 0
  2847  00CA  1903               	skipnz
  2848  00CB  28CD               	goto	l4034
  2849  00CC  283C               	goto	l3696
  2850  00CD                     l4034:	
  2851                           
  2852                           ; Switch size 1, requested type "simple"
  2853                           ; Number of cases is 3, Range of values is 0 to 105
  2854                           ; switch strategies available:
  2855                           ; Name         Instructions Cycles
  2856                           ; simple_byte           10     6 (average)
  2857                           ; jumptable            260     6 (fixed)
  2858                           ;	Chosen strategy is simple_byte
  2859  00CD  084F               	movf	??_sprintf^(0+128),w
  2860  00CE  3A00               	xorlw	0	; case 0
  2861  00CF  1903               	skipnz
  2862  00D0  29B8               	goto	l3698
  2863  00D1  3A64               	xorlw	100	; case 100
  2864  00D2  1903               	skipnz
  2865  00D3  28D8               	goto	l3640
  2866  00D4  3A0D               	xorlw	13	; case 105
  2867  00D5  1903               	skipnz
  2868  00D6  28D8               	goto	l3640
  2869  00D7  283C               	goto	l3696
  2870  00D8                     l3640:	
  2871                           
  2872                           ;/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt.c: 1272:   {;/opt/microchip/xc8/
      +                          v2.05/pic/sources/c90/common/doprnt.c: 1278:     val = (int)(*(int *)__va_arg((*(int **)
      +                          ap), (int)0));
  2873  00D8  0852               	movf	sprintf@ap^(0+128),w
  2874  00D9  0084               	movwf	4
  2875  00DA  1383               	bcf	3,7	;select IRP bank0
  2876  00DB  0800               	movf	0,w
  2877  00DC  00D5               	movwf	sprintf@val^(0+128)
  2878  00DD  0A84               	incf	4,f
  2879  00DE  0800               	movf	0,w
  2880  00DF  00D6               	movwf	(sprintf@val+1)^(0+128)
  2881  00E0  3002               	movlw	2
  2882  00E1  00CF               	movwf	??_sprintf^(0+128)
  2883  00E2  084F               	movf	??_sprintf^(0+128),w
  2884  00E3  07D2               	addwf	sprintf@ap^(0+128),f
  2885                           
  2886                           ;/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt.c: 1280:    if((int)val < 0) {
  2887  00E4  1FD6               	btfss	(sprintf@val+1)^(0+128),7
  2888  00E5  28EF               	goto	l3650
  2889                           
  2890                           ;/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt.c: 1281:     flag |= 0x03;
  2891  00E6  3003               	movlw	3
  2892  00E7  00CF               	movwf	??_sprintf^(0+128)
  2893  00E8  084F               	movf	??_sprintf^(0+128),w
  2894  00E9  04D4               	iorwf	sprintf@flag^(0+128),f
  2895                           
  2896                           ;/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt.c: 1282:     val = -val;
  2897  00EA  09D5               	comf	sprintf@val^(0+128),f
  2898  00EB  09D6               	comf	(sprintf@val+1)^(0+128),f
  2899  00EC  0AD5               	incf	sprintf@val^(0+128),f
  2900  00ED  1903               	skipnz
  2901  00EE  0AD6               	incf	(sprintf@val+1)^(0+128),f
  2902  00EF                     l3650:	
  2903                           
  2904                           ;/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt.c: 1285:   };/opt/microchip/xc8/
      +                          v2.05/pic/sources/c90/common/doprnt.c: 1324:    for(c = 1 ; c != sizeof dpowers/sizeof d
      +                          powers[0] ; c++)
  2905  00EF  01DA               	clrf	sprintf@c^(0+128)
  2906  00F0  0ADA               	incf	sprintf@c^(0+128),f
  2907  00F1                     l3656:	
  2908                           
  2909                           ;/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt.c: 1325:     if(val < dpowers[c]
      +                          )
  2910  00F1  085A               	movf	sprintf@c^(0+128),w
  2911  00F2  00CF               	movwf	??_sprintf^(0+128)
  2912  00F3  074F               	addwf	??_sprintf^(0+128),w
  2913  00F4  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2914  00F5  0084               	movwf	4
  2915  00F6  120A  158A  2000  120A  118A  	fcall	stringdir
  2916  00FB  00D0               	movwf	(??_sprintf+1)^(0+128)
  2917  00FC  120A  158A  2000  120A  118A  	fcall	stringdir
  2918  0101  00D1               	movwf	((??_sprintf+1)^(0+128)+1)
  2919  0102  0851               	movf	(??_sprintf+2)^(0+128),w
  2920  0103  0256               	subwf	(sprintf@val+1)^(0+128),w
  2921  0104  1D03               	skipz
  2922  0105  2908               	goto	u3065
  2923  0106  0850               	movf	(??_sprintf+1)^(0+128),w
  2924  0107  0255               	subwf	sprintf@val^(0+128),w
  2925  0108                     u3065:	
  2926  0108  1C03               	btfss	3,0
  2927  0109  2912               	goto	l3662
  2928  010A  3001               	movlw	1
  2929  010B  00CF               	movwf	??_sprintf^(0+128)
  2930  010C  084F               	movf	??_sprintf^(0+128),w
  2931  010D  07DA               	addwf	sprintf@c^(0+128),f
  2932  010E  3005               	movlw	5
  2933  010F  065A               	xorwf	sprintf@c^(0+128),w
  2934  0110  1D03               	btfss	3,2
  2935  0111  28F1               	goto	l3656
  2936  0112                     l3662:	
  2937                           
  2938                           ;/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt.c: 1364:   if(width && flag & 0x
      +                          03)
  2939  0112  0857               	movf	sprintf@width^(0+128),w
  2940  0113  0458               	iorwf	(sprintf@width+1)^(0+128),w
  2941  0114  1903               	btfsc	3,2
  2942  0115  2920               	goto	l650
  2943  0116  0854               	movf	sprintf@flag^(0+128),w
  2944  0117  3903               	andlw	3
  2945  0118  1903               	btfsc	3,2
  2946  0119  2920               	goto	l650
  2947                           
  2948                           ;/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt.c: 1365:    width--;
  2949  011A  30FF               	movlw	255
  2950  011B  07D7               	addwf	sprintf@width^(0+128),f
  2951  011C  1803               	skipnc
  2952  011D  0AD8               	incf	(sprintf@width+1)^(0+128),f
  2953  011E  30FF               	movlw	255
  2954  011F  07D8               	addwf	(sprintf@width+1)^(0+128),f
  2955  0120                     l650:	
  2956                           
  2957                           ;/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt.c: 1400:   if(width > c)
  2958  0120  0858               	movf	(sprintf@width+1)^(0+128),w
  2959  0121  3A80               	xorlw	128
  2960  0122  3C80               	sublw	128
  2961  0123  1D03               	skipz
  2962  0124  2927               	goto	u3105
  2963  0125  0857               	movf	sprintf@width^(0+128),w
  2964  0126  025A               	subwf	sprintf@c^(0+128),w
  2965  0127                     u3105:	
  2966  0127  1803               	skipnc
  2967  0128  2935               	goto	l3670
  2968                           
  2969                           ;/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt.c: 1401:    width -= c;
  2970  0129  1683               	bsf	3,5	;RP0=1, select bank1
  2971  012A  1303               	bcf	3,6	;RP1=0, select bank1
  2972  012B  085A               	movf	sprintf@c^(0+128),w
  2973  012C  00CF               	movwf	??_sprintf^(0+128)
  2974  012D  01D0               	clrf	(??_sprintf^(0+128)+1)
  2975  012E  084F               	movf	??_sprintf^(0+128),w
  2976  012F  02D7               	subwf	sprintf@width^(0+128),f
  2977  0130  0850               	movf	(??_sprintf+1)^(0+128),w
  2978  0131  1C03               	skipc
  2979  0132  03D8               	decf	(sprintf@width+1)^(0+128),f
  2980  0133  02D8               	subwf	(sprintf@width+1)^(0+128),f
  2981  0134  2939               	goto	l3672
  2982  0135                     l3670:	
  2983                           
  2984                           ;/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt.c: 1403:    width = 0;
  2985  0135  1683               	bsf	3,5	;RP0=1, select bank1
  2986  0136  1303               	bcf	3,6	;RP1=0, select bank1
  2987  0137  01D7               	clrf	sprintf@width^(0+128)
  2988  0138  01D8               	clrf	(sprintf@width+1)^(0+128)
  2989  0139                     l3672:	
  2990                           
  2991                           ;/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt.c: 1441:   {;/opt/microchip/xc8/
      +                          v2.05/pic/sources/c90/common/doprnt.c: 1443:    if(width
  2992  0139  0857               	movf	sprintf@width^(0+128),w
  2993  013A  0458               	iorwf	(sprintf@width+1)^(0+128),w
  2994  013B  1903               	btfsc	3,2
  2995  013C  2952               	goto	l3680
  2996  013D                     l3674:	
  2997                           
  2998                           ;/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt.c: 1449:      ((*sp++ = (' ')));
  2999  013D  3020               	movlw	32
  3000  013E  00CF               	movwf	??_sprintf^(0+128)
  3001  013F  0859               	movf	sprintf@sp^(0+128),w
  3002  0140  0084               	movwf	4
  3003  0141  084F               	movf	??_sprintf^(0+128),w
  3004  0142  1383               	bcf	3,7	;select IRP bank0
  3005  0143  0080               	movwf	0
  3006  0144  3001               	movlw	1
  3007  0145  00CF               	movwf	??_sprintf^(0+128)
  3008  0146  084F               	movf	??_sprintf^(0+128),w
  3009  0147  07D9               	addwf	sprintf@sp^(0+128),f
  3010  0148  30FF               	movlw	255
  3011  0149  07D7               	addwf	sprintf@width^(0+128),f
  3012  014A  1803               	skipnc
  3013  014B  0AD8               	incf	(sprintf@width+1)^(0+128),f
  3014  014C  30FF               	movlw	255
  3015  014D  07D8               	addwf	(sprintf@width+1)^(0+128),f
  3016  014E  0857               	movf	sprintf@width^(0+128),w
  3017  014F  0458               	iorwf	(sprintf@width+1)^(0+128),w
  3018  0150  1D03               	btfss	3,2
  3019  0151  293D               	goto	l3674
  3020  0152                     l3680:	
  3021                           
  3022                           ;/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt.c: 1457:    if(flag & 0x03)
  3023  0152  0854               	movf	sprintf@flag^(0+128),w
  3024  0153  3903               	andlw	3
  3025  0154  1903               	btfsc	3,2
  3026  0155  2961               	goto	l3686
  3027                           
  3028                           ;/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt.c: 1458:     ((*sp++ = ('-')));
  3029  0156  302D               	movlw	45
  3030  0157  00CF               	movwf	??_sprintf^(0+128)
  3031  0158  0859               	movf	sprintf@sp^(0+128),w
  3032  0159  0084               	movwf	4
  3033  015A  084F               	movf	??_sprintf^(0+128),w
  3034  015B  1383               	bcf	3,7	;select IRP bank0
  3035  015C  0080               	movwf	0
  3036  015D  3001               	movlw	1
  3037  015E  00CF               	movwf	??_sprintf^(0+128)
  3038  015F  084F               	movf	??_sprintf^(0+128),w
  3039  0160  07D9               	addwf	sprintf@sp^(0+128),f
  3040  0161                     l3686:	
  3041                           
  3042                           ;/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt.c: 1488:   };/opt/microchip/xc8/
      +                          v2.05/pic/sources/c90/common/doprnt.c: 1491:   prec = c;
  3043  0161  085A               	movf	sprintf@c^(0+128),w
  3044  0162  00CF               	movwf	??_sprintf^(0+128)
  3045  0163  084F               	movf	??_sprintf^(0+128),w
  3046  0164  00D3               	movwf	sprintf@prec^(0+128)
  3047  0165                     l3694:	
  3048                           ;/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt.c: 1493:   while(prec--) {
  3049                           
  3050                           
  3051                           ;/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt.c: 1493:   while(prec--) {
  3052  0165  30FF               	movlw	255
  3053  0166  00CF               	movwf	??_sprintf^(0+128)
  3054  0167  084F               	movf	??_sprintf^(0+128),w
  3055  0168  07D3               	addwf	sprintf@prec^(0+128),f
  3056  0169  0A53               	incf	sprintf@prec^(0+128),w
  3057  016A  1903               	btfsc	3,2
  3058  016B  283C               	goto	l3696
  3059                           
  3060                           ;/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt.c: 1497:    {;/opt/microchip/xc8
      +                          /v2.05/pic/sources/c90/common/doprnt.c: 1508:     c = (val / dpowers[prec]) % 10 + '0';
  3061  016C  300A               	movlw	10
  3062  016D  00C6               	movwf	___lwmod@divisor^(0+128)
  3063  016E  3000               	movlw	0
  3064  016F  00C7               	movwf	(___lwmod@divisor^(0+128)+1)
  3065  0170  0853               	movf	sprintf@prec^(0+128),w
  3066  0171  00CF               	movwf	??_sprintf^(0+128)
  3067  0172  074F               	addwf	??_sprintf^(0+128),w
  3068  0173  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  3069  0174  0084               	movwf	4
  3070  0175  120A  158A  2000  120A  118A  	fcall	stringdir
  3071  017A  1283               	bcf	3,5	;RP0=0, select bank0
  3072  017B  1303               	bcf	3,6	;RP1=0, select bank0
  3073  017C  00BD               	movwf	___lwdiv@divisor
  3074  017D  120A  158A  2000  120A  118A  	fcall	stringdir
  3075  0182  00BE               	movwf	___lwdiv@divisor+1
  3076  0183  1683               	bsf	3,5	;RP0=1, select bank1
  3077  0184  1303               	bcf	3,6	;RP1=0, select bank1
  3078  0185  0856               	movf	(sprintf@val+1)^(0+128),w
  3079  0186  1283               	bcf	3,5	;RP0=0, select bank0
  3080  0187  1303               	bcf	3,6	;RP1=0, select bank0
  3081  0188  00C0               	movwf	___lwdiv@dividend+1
  3082  0189  1683               	bsf	3,5	;RP0=1, select bank1
  3083  018A  1303               	bcf	3,6	;RP1=0, select bank1
  3084  018B  0855               	movf	sprintf@val^(0+128),w
  3085  018C  1283               	bcf	3,5	;RP0=0, select bank0
  3086  018D  1303               	bcf	3,6	;RP1=0, select bank0
  3087  018E  00BF               	movwf	___lwdiv@dividend
  3088  018F  120A  158A  263A  120A  118A  	fcall	___lwdiv
  3089  0194  1283               	bcf	3,5	;RP0=0, select bank0
  3090  0195  1303               	bcf	3,6	;RP1=0, select bank0
  3091  0196  083E               	movf	?___lwdiv+1,w
  3092  0197  1683               	bsf	3,5	;RP0=1, select bank1
  3093  0198  1303               	bcf	3,6	;RP1=0, select bank1
  3094  0199  00C9               	movwf	(___lwmod@dividend+1)^(0+128)
  3095  019A  1283               	bcf	3,5	;RP0=0, select bank0
  3096  019B  1303               	bcf	3,6	;RP1=0, select bank0
  3097  019C  083D               	movf	?___lwdiv,w
  3098  019D  1683               	bsf	3,5	;RP0=1, select bank1
  3099  019E  1303               	bcf	3,6	;RP1=0, select bank1
  3100  019F  00C8               	movwf	___lwmod@dividend^(0+128)
  3101  01A0  120A  158A  23E8  120A  118A  	fcall	___lwmod
  3102  01A5  1683               	bsf	3,5	;RP0=1, select bank1
  3103  01A6  1303               	bcf	3,6	;RP1=0, select bank1
  3104  01A7  0846               	movf	?___lwmod^(0+128),w
  3105  01A8  3E30               	addlw	48
  3106  01A9  00D0               	movwf	(??_sprintf+1)^(0+128)
  3107  01AA  0850               	movf	(??_sprintf+1)^(0+128),w
  3108  01AB  00DA               	movwf	sprintf@c^(0+128)
  3109                           
  3110                           ;/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt.c: 1542:    };/opt/microchip/xc8
      +                          /v2.05/pic/sources/c90/common/doprnt.c: 1543:    ((*sp++ = (c)));
  3111  01AC  085A               	movf	sprintf@c^(0+128),w
  3112  01AD  00CF               	movwf	??_sprintf^(0+128)
  3113  01AE  0859               	movf	sprintf@sp^(0+128),w
  3114  01AF  0084               	movwf	4
  3115  01B0  084F               	movf	??_sprintf^(0+128),w
  3116  01B1  1383               	bcf	3,7	;select IRP bank0
  3117  01B2  0080               	movwf	0
  3118  01B3  3001               	movlw	1
  3119  01B4  00CF               	movwf	??_sprintf^(0+128)
  3120  01B5  084F               	movf	??_sprintf^(0+128),w
  3121  01B6  07D9               	addwf	sprintf@sp^(0+128),f
  3122  01B7  2965               	goto	l3694
  3123  01B8                     l3698:	
  3124                           
  3125                           ;/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt.c: 1557:  *sp = 0;
  3126  01B8  0859               	movf	sprintf@sp^(0+128),w
  3127  01B9  0084               	movwf	4
  3128  01BA  1383               	bcf	3,7	;select IRP bank0
  3129  01BB  0180               	clrf	0
  3130  01BC  0008               	return
  3131  01BD                     __end_of_sprintf:	
  3132                           
  3133                           	psect	text4
  3134  09B7                     __ptext4:	
  3135 ;; *************** function _isdigit *****************
  3136 ;; Defined at:
  3137 ;;		line 8 in file "/opt/microchip/xc8/v2.05/pic/sources/c90/common/isdigit.c"
  3138 ;; Parameters:    Size  Location     Type
  3139 ;;  c               1    wreg     unsigned char 
  3140 ;; Auto vars:     Size  Location     Type
  3141 ;;  c               1   30[BANK0 ] unsigned char 
  3142 ;; Return value:  Size  Location     Type
  3143 ;;		None               void
  3144 ;; Registers used:
  3145 ;;		wreg, status,2, status,0
  3146 ;; Tracked objects:
  3147 ;;		On entry : 0/0
  3148 ;;		On exit  : 0/0
  3149 ;;		Unchanged: 0/0
  3150 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3151 ;;      Params:         0       0       0       0       0
  3152 ;;      Locals:         0       2       0       0       0
  3153 ;;      Temps:          0       0       0       0       0
  3154 ;;      Totals:         0       2       0       0       0
  3155 ;;Total ram usage:        2 bytes
  3156 ;; Hardware stack levels used:    1
  3157 ;; Hardware stack levels required when called:    5
  3158 ;; This function calls:
  3159 ;;		Nothing
  3160 ;; This function is called by:
  3161 ;;		_sprintf
  3162 ;; This function uses a non-reentrant model
  3163 ;;
  3164                           
  3165                           
  3166                           ;psect for function _isdigit
  3167  09B7                     _isdigit:	
  3168                           
  3169                           ;incstack = 0
  3170                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  3171                           ;isdigit@c stored from wreg
  3172  09B7  1283               	bcf	3,5	;RP0=0, select bank0
  3173  09B8  1303               	bcf	3,6	;RP1=0, select bank0
  3174  09B9  00BE               	movwf	isdigit@c
  3175  09BA  01BD               	clrf	_isdigit$1093
  3176  09BB  303A               	movlw	58
  3177  09BC  023E               	subwf	isdigit@c,w
  3178  09BD  1803               	skipnc
  3179  09BE  29C5               	goto	l2556
  3180  09BF  3030               	movlw	48
  3181  09C0  023E               	subwf	isdigit@c,w
  3182  09C1  1C03               	skipc
  3183  09C2  29C5               	goto	l2556
  3184  09C3  01BD               	clrf	_isdigit$1093
  3185  09C4  0ABD               	incf	_isdigit$1093,f
  3186  09C5                     l2556:	
  3187  09C5  0C3D               	rrf	_isdigit$1093,w
  3188  09C6  0008               	return
  3189  09C7                     __end_of_isdigit:	
  3190                           
  3191                           	psect	text5
  3192  0BE8                     __ptext5:	
  3193 ;; *************** function ___lwmod *****************
  3194 ;; Defined at:
  3195 ;;		line 5 in file "/opt/microchip/xc8/v2.05/pic/sources/c90/common/lwmod.c"
  3196 ;; Parameters:    Size  Location     Type
  3197 ;;  divisor         2    3[BANK1 ] unsigned int 
  3198 ;;  dividend        2    5[BANK1 ] unsigned int 
  3199 ;; Auto vars:     Size  Location     Type
  3200 ;;  counter         1   35[BANK0 ] unsigned char 
  3201 ;; Return value:  Size  Location     Type
  3202 ;;                  2    3[BANK1 ] unsigned int 
  3203 ;; Registers used:
  3204 ;;		wreg, status,2, status,0
  3205 ;; Tracked objects:
  3206 ;;		On entry : 0/0
  3207 ;;		On exit  : 0/0
  3208 ;;		Unchanged: 0/0
  3209 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3210 ;;      Params:         0       0       4       0       0
  3211 ;;      Locals:         0       1       0       0       0
  3212 ;;      Temps:          0       1       0       0       0
  3213 ;;      Totals:         0       2       4       0       0
  3214 ;;Total ram usage:        6 bytes
  3215 ;; Hardware stack levels used:    1
  3216 ;; Hardware stack levels required when called:    5
  3217 ;; This function calls:
  3218 ;;		Nothing
  3219 ;; This function is called by:
  3220 ;;		_main
  3221 ;;		_sprintf
  3222 ;; This function uses a non-reentrant model
  3223 ;;
  3224                           
  3225                           
  3226                           ;psect for function ___lwmod
  3227  0BE8                     ___lwmod:	
  3228                           
  3229                           ;incstack = 0
  3230                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  3231  0BE8  1683               	bsf	3,5	;RP0=1, select bank1
  3232  0BE9  1303               	bcf	3,6	;RP1=0, select bank1
  3233  0BEA  0846               	movf	___lwmod@divisor^(0+128),w
  3234  0BEB  0447               	iorwf	(___lwmod@divisor+1)^(0+128),w
  3235  0BEC  1903               	btfsc	3,2
  3236  0BED  2C21               	goto	l3598
  3237  0BEE  1283               	bcf	3,5	;RP0=0, select bank0
  3238  0BEF  1303               	bcf	3,6	;RP1=0, select bank0
  3239  0BF0  01C3               	clrf	___lwmod@counter
  3240  0BF1  0AC3               	incf	___lwmod@counter,f
  3241  0BF2                     l3588:	
  3242  0BF2  1683               	bsf	3,5	;RP0=1, select bank1
  3243  0BF3  1303               	bcf	3,6	;RP1=0, select bank1
  3244  0BF4  1BC7               	btfsc	(___lwmod@divisor+1)^(0+128),7
  3245  0BF5  2C04               	goto	l3590
  3246  0BF6  3001               	movlw	1
  3247  0BF7                     u2965:	
  3248  0BF7  1003               	clrc
  3249  0BF8  0DC6               	rlf	___lwmod@divisor^(0+128),f
  3250  0BF9  0DC7               	rlf	(___lwmod@divisor+1)^(0+128),f
  3251  0BFA  3EFF               	addlw	-1
  3252  0BFB  1D03               	skipz
  3253  0BFC  2BF7               	goto	u2965
  3254  0BFD  3001               	movlw	1
  3255  0BFE  1283               	bcf	3,5	;RP0=0, select bank0
  3256  0BFF  1303               	bcf	3,6	;RP1=0, select bank0
  3257  0C00  00C2               	movwf	??___lwmod
  3258  0C01  0842               	movf	??___lwmod,w
  3259  0C02  07C3               	addwf	___lwmod@counter,f
  3260  0C03  2BF2               	goto	l3588
  3261  0C04                     l3590:	
  3262  0C04  1683               	bsf	3,5	;RP0=1, select bank1
  3263  0C05  1303               	bcf	3,6	;RP1=0, select bank1
  3264  0C06  0847               	movf	(___lwmod@divisor+1)^(0+128),w
  3265  0C07  0249               	subwf	(___lwmod@dividend+1)^(0+128),w
  3266  0C08  1D03               	skipz
  3267  0C09  2C0C               	goto	u2985
  3268  0C0A  0846               	movf	___lwmod@divisor^(0+128),w
  3269  0C0B  0248               	subwf	___lwmod@dividend^(0+128),w
  3270  0C0C                     u2985:	
  3271  0C0C  1C03               	skipc
  3272  0C0D  2C14               	goto	l3594
  3273  0C0E  0846               	movf	___lwmod@divisor^(0+128),w
  3274  0C0F  02C8               	subwf	___lwmod@dividend^(0+128),f
  3275  0C10  0847               	movf	(___lwmod@divisor+1)^(0+128),w
  3276  0C11  1C03               	skipc
  3277  0C12  03C9               	decf	(___lwmod@dividend+1)^(0+128),f
  3278  0C13  02C9               	subwf	(___lwmod@dividend+1)^(0+128),f
  3279  0C14                     l3594:	
  3280  0C14  3001               	movlw	1
  3281  0C15                     u2995:	
  3282  0C15  1003               	clrc
  3283  0C16  0CC7               	rrf	(___lwmod@divisor+1)^(0+128),f
  3284  0C17  0CC6               	rrf	___lwmod@divisor^(0+128),f
  3285  0C18  3EFF               	addlw	-1
  3286  0C19  1D03               	skipz
  3287  0C1A  2C15               	goto	u2995
  3288  0C1B  3001               	movlw	1
  3289  0C1C  1283               	bcf	3,5	;RP0=0, select bank0
  3290  0C1D  1303               	bcf	3,6	;RP1=0, select bank0
  3291  0C1E  02C3               	subwf	___lwmod@counter,f
  3292  0C1F  1D03               	btfss	3,2
  3293  0C20  2C04               	goto	l3590
  3294  0C21                     l3598:	
  3295  0C21  1683               	bsf	3,5	;RP0=1, select bank1
  3296  0C22  1303               	bcf	3,6	;RP1=0, select bank1
  3297  0C23  0849               	movf	(___lwmod@dividend+1)^(0+128),w
  3298  0C24  00C7               	movwf	(?___lwmod+1)^(0+128)
  3299  0C25  0848               	movf	___lwmod@dividend^(0+128),w
  3300  0C26  00C6               	movwf	?___lwmod^(0+128)
  3301  0C27  0008               	return
  3302  0C28                     __end_of___lwmod:	
  3303                           
  3304                           	psect	text6
  3305  0E3A                     __ptext6:	
  3306 ;; *************** function ___lwdiv *****************
  3307 ;; Defined at:
  3308 ;;		line 5 in file "/opt/microchip/xc8/v2.05/pic/sources/c90/common/lwdiv.c"
  3309 ;; Parameters:    Size  Location     Type
  3310 ;;  divisor         2   29[BANK0 ] unsigned int 
  3311 ;;  dividend        2   31[BANK0 ] unsigned int 
  3312 ;; Auto vars:     Size  Location     Type
  3313 ;;  quotient        2    1[BANK1 ] unsigned int 
  3314 ;;  counter         1    0[BANK1 ] unsigned char 
  3315 ;; Return value:  Size  Location     Type
  3316 ;;                  2   29[BANK0 ] unsigned int 
  3317 ;; Registers used:
  3318 ;;		wreg, status,2, status,0
  3319 ;; Tracked objects:
  3320 ;;		On entry : 0/0
  3321 ;;		On exit  : 0/0
  3322 ;;		Unchanged: 0/0
  3323 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3324 ;;      Params:         0       4       0       0       0
  3325 ;;      Locals:         0       0       3       0       0
  3326 ;;      Temps:          0       1       0       0       0
  3327 ;;      Totals:         0       5       3       0       0
  3328 ;;Total ram usage:        8 bytes
  3329 ;; Hardware stack levels used:    1
  3330 ;; Hardware stack levels required when called:    5
  3331 ;; This function calls:
  3332 ;;		Nothing
  3333 ;; This function is called by:
  3334 ;;		_main
  3335 ;;		_sprintf
  3336 ;; This function uses a non-reentrant model
  3337 ;;
  3338                           
  3339                           
  3340                           ;psect for function ___lwdiv
  3341  0E3A                     ___lwdiv:	
  3342                           
  3343                           ;incstack = 0
  3344                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  3345  0E3A  1683               	bsf	3,5	;RP0=1, select bank1
  3346  0E3B  1303               	bcf	3,6	;RP1=0, select bank1
  3347  0E3C  01C4               	clrf	___lwdiv@quotient^(0+128)
  3348  0E3D  01C5               	clrf	(___lwdiv@quotient+1)^(0+128)
  3349  0E3E  1283               	bcf	3,5	;RP0=0, select bank0
  3350  0E3F  1303               	bcf	3,6	;RP1=0, select bank0
  3351  0E40  083D               	movf	___lwdiv@divisor,w
  3352  0E41  043E               	iorwf	___lwdiv@divisor+1,w
  3353  0E42  1903               	btfsc	3,2
  3354  0E43  2E84               	goto	l3576
  3355  0E44  1683               	bsf	3,5	;RP0=1, select bank1
  3356  0E45  1303               	bcf	3,6	;RP1=0, select bank1
  3357  0E46  01C3               	clrf	___lwdiv@counter^(0+128)
  3358  0E47  0AC3               	incf	___lwdiv@counter^(0+128),f
  3359  0E48                     l3564:	
  3360  0E48  1283               	bcf	3,5	;RP0=0, select bank0
  3361  0E49  1303               	bcf	3,6	;RP1=0, select bank0
  3362  0E4A  1BBE               	btfsc	___lwdiv@divisor+1,7
  3363  0E4B  2E5A               	goto	l3566
  3364  0E4C  3001               	movlw	1
  3365  0E4D                     u2895:	
  3366  0E4D  1003               	clrc
  3367  0E4E  0DBD               	rlf	___lwdiv@divisor,f
  3368  0E4F  0DBE               	rlf	___lwdiv@divisor+1,f
  3369  0E50  3EFF               	addlw	-1
  3370  0E51  1D03               	skipz
  3371  0E52  2E4D               	goto	u2895
  3372  0E53  3001               	movlw	1
  3373  0E54  00C1               	movwf	??___lwdiv
  3374  0E55  0841               	movf	??___lwdiv,w
  3375  0E56  1683               	bsf	3,5	;RP0=1, select bank1
  3376  0E57  1303               	bcf	3,6	;RP1=0, select bank1
  3377  0E58  07C3               	addwf	___lwdiv@counter^(0+128),f
  3378  0E59  2E48               	goto	l3564
  3379  0E5A                     l3566:	
  3380  0E5A  3001               	movlw	1
  3381  0E5B  1683               	bsf	3,5	;RP0=1, select bank1
  3382  0E5C  1303               	bcf	3,6	;RP1=0, select bank1
  3383  0E5D                     u2915:	
  3384  0E5D  1003               	clrc
  3385  0E5E  0DC4               	rlf	___lwdiv@quotient^(0+128),f
  3386  0E5F  0DC5               	rlf	(___lwdiv@quotient+1)^(0+128),f
  3387  0E60  3EFF               	addlw	-1
  3388  0E61  1D03               	skipz
  3389  0E62  2E5D               	goto	u2915
  3390  0E63  1283               	bcf	3,5	;RP0=0, select bank0
  3391  0E64  1303               	bcf	3,6	;RP1=0, select bank0
  3392  0E65  083E               	movf	___lwdiv@divisor+1,w
  3393  0E66  0240               	subwf	___lwdiv@dividend+1,w
  3394  0E67  1D03               	skipz
  3395  0E68  2E6B               	goto	u2925
  3396  0E69  083D               	movf	___lwdiv@divisor,w
  3397  0E6A  023F               	subwf	___lwdiv@dividend,w
  3398  0E6B                     u2925:	
  3399  0E6B  1C03               	skipc
  3400  0E6C  2E76               	goto	l3572
  3401  0E6D  083D               	movf	___lwdiv@divisor,w
  3402  0E6E  02BF               	subwf	___lwdiv@dividend,f
  3403  0E6F  083E               	movf	___lwdiv@divisor+1,w
  3404  0E70  1C03               	skipc
  3405  0E71  03C0               	decf	___lwdiv@dividend+1,f
  3406  0E72  02C0               	subwf	___lwdiv@dividend+1,f
  3407  0E73  1683               	bsf	3,5	;RP0=1, select bank1
  3408  0E74  1303               	bcf	3,6	;RP1=0, select bank1
  3409  0E75  1444               	bsf	___lwdiv@quotient^(0+128),0
  3410  0E76                     l3572:	
  3411  0E76  3001               	movlw	1
  3412  0E77  1283               	bcf	3,5	;RP0=0, select bank0
  3413  0E78                     u2935:	
  3414  0E78  1003               	clrc
  3415  0E79  0CBE               	rrf	___lwdiv@divisor+1,f
  3416  0E7A  0CBD               	rrf	___lwdiv@divisor,f
  3417  0E7B  3EFF               	addlw	-1
  3418  0E7C  1D03               	skipz
  3419  0E7D  2E78               	goto	u2935
  3420  0E7E  3001               	movlw	1
  3421  0E7F  1683               	bsf	3,5	;RP0=1, select bank1
  3422  0E80  1303               	bcf	3,6	;RP1=0, select bank1
  3423  0E81  02C3               	subwf	___lwdiv@counter^(0+128),f
  3424  0E82  1D03               	btfss	3,2
  3425  0E83  2E5A               	goto	l3566
  3426  0E84                     l3576:	
  3427  0E84  1683               	bsf	3,5	;RP0=1, select bank1
  3428  0E85  1303               	bcf	3,6	;RP1=0, select bank1
  3429  0E86  0845               	movf	(___lwdiv@quotient+1)^(0+128),w
  3430  0E87  1283               	bcf	3,5	;RP0=0, select bank0
  3431  0E88  1303               	bcf	3,6	;RP1=0, select bank0
  3432  0E89  00BE               	movwf	?___lwdiv+1
  3433  0E8A  1683               	bsf	3,5	;RP0=1, select bank1
  3434  0E8B  1303               	bcf	3,6	;RP1=0, select bank1
  3435  0E8C  0844               	movf	___lwdiv@quotient^(0+128),w
  3436  0E8D  1283               	bcf	3,5	;RP0=0, select bank0
  3437  0E8E  1303               	bcf	3,6	;RP1=0, select bank0
  3438  0E8F  00BD               	movwf	?___lwdiv
  3439  0E90  0008               	return
  3440  0E91                     __end_of___lwdiv:	
  3441                           
  3442                           	psect	text7
  3443  0FA3                     __ptext7:	
  3444 ;; *************** function _setData *****************
  3445 ;; Defined at:
  3446 ;;		line 44 in file "eeprom.c"
  3447 ;; Parameters:    Size  Location     Type
  3448 ;;  full            1    wreg     unsigned char 
  3449 ;; Auto vars:     Size  Location     Type
  3450 ;;  full            1   34[BANK0 ] unsigned char 
  3451 ;;  data1           1   33[BANK0 ] unsigned char 
  3452 ;;  data0           1   32[BANK0 ] unsigned char 
  3453 ;; Return value:  Size  Location     Type
  3454 ;;                  1    wreg      void 
  3455 ;; Registers used:
  3456 ;;		wreg, status,2, status,0, pclath, cstack
  3457 ;; Tracked objects:
  3458 ;;		On entry : 0/0
  3459 ;;		On exit  : 0/0
  3460 ;;		Unchanged: 0/0
  3461 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3462 ;;      Params:         0       0       0       0       0
  3463 ;;      Locals:         0       3       0       0       0
  3464 ;;      Temps:          0       1       0       0       0
  3465 ;;      Totals:         0       4       0       0       0
  3466 ;;Total ram usage:        4 bytes
  3467 ;; Hardware stack levels used:    1
  3468 ;; Hardware stack levels required when called:    6
  3469 ;; This function calls:
  3470 ;;		_writeEEPROM
  3471 ;; This function is called by:
  3472 ;;		_setFrequency
  3473 ;; This function uses a non-reentrant model
  3474 ;;
  3475                           
  3476                           
  3477                           ;psect for function _setData
  3478  0FA3                     _setData:	
  3479                           
  3480                           ;incstack = 0
  3481                           ; Regs used in _setData: [wreg+status,2+status,0+pclath+cstack]
  3482                           ;setData@full stored from wreg
  3483  0FA3  1283               	bcf	3,5	;RP0=0, select bank0
  3484  0FA4  1303               	bcf	3,6	;RP1=0, select bank0
  3485  0FA5  00C2               	movwf	setData@full
  3486                           
  3487                           ;eeprom.c: 45:     unsigned char data0 = frequency & 0x00FF;
  3488  0FA6  0844               	movf	_frequency,w
  3489  0FA7  00BF               	movwf	??_setData
  3490  0FA8  083F               	movf	??_setData,w
  3491  0FA9  00C0               	movwf	setData@data0
  3492                           
  3493                           ;eeprom.c: 46:     unsigned char data1 = frequency >> 8;
  3494  0FAA  0845               	movf	_frequency+1,w
  3495  0FAB  00BF               	movwf	??_setData
  3496  0FAC  083F               	movf	??_setData,w
  3497  0FAD  00C1               	movwf	setData@data1
  3498                           
  3499                           ;eeprom.c: 47:     if(full)writeEEPROM(data0 ,0);
  3500  0FAE  0842               	movf	setData@full,w
  3501  0FAF  1903               	btfsc	3,2
  3502  0FB0  2FB8               	goto	l2752
  3503  0FB1  01BD               	clrf	writeEEPROM@address
  3504  0FB2  0840               	movf	setData@data0,w
  3505  0FB3  120A  158A  221E  120A  158A  	fcall	_writeEEPROM
  3506  0FB8                     l2752:	
  3507                           
  3508                           ;eeprom.c: 48:     if(full)writeEEPROM(data1 ,1);
  3509  0FB8  1283               	bcf	3,5	;RP0=0, select bank0
  3510  0FB9  1303               	bcf	3,6	;RP1=0, select bank0
  3511  0FBA  0842               	movf	setData@full,w
  3512  0FBB  1903               	btfsc	3,2
  3513  0FBC  2FC5               	goto	l70
  3514  0FBD  01BD               	clrf	writeEEPROM@address
  3515  0FBE  0ABD               	incf	writeEEPROM@address,f
  3516  0FBF  0841               	movf	setData@data1,w
  3517  0FC0  120A  158A  221E  120A  158A  	fcall	_writeEEPROM
  3518  0FC5                     l70:	
  3519                           
  3520                           ;eeprom.c: 49:     writeEEPROM(months ,2);
  3521  0FC5  3002               	movlw	2
  3522  0FC6  1283               	bcf	3,5	;RP0=0, select bank0
  3523  0FC7  1303               	bcf	3,6	;RP1=0, select bank0
  3524  0FC8  00BF               	movwf	??_setData
  3525  0FC9  083F               	movf	??_setData,w
  3526  0FCA  00BD               	movwf	writeEEPROM@address
  3527  0FCB  0850               	movf	_months,w
  3528  0FCC  120A  158A  221E  120A  158A  	fcall	_writeEEPROM
  3529                           
  3530                           ;eeprom.c: 50:     writeEEPROM(days ,3);
  3531  0FD1  3003               	movlw	3
  3532  0FD2  1283               	bcf	3,5	;RP0=0, select bank0
  3533  0FD3  1303               	bcf	3,6	;RP1=0, select bank0
  3534  0FD4  00BF               	movwf	??_setData
  3535  0FD5  083F               	movf	??_setData,w
  3536  0FD6  00BD               	movwf	writeEEPROM@address
  3537  0FD7  084F               	movf	_days,w
  3538  0FD8  120A  158A  221E  120A  158A  	fcall	_writeEEPROM
  3539                           
  3540                           ;eeprom.c: 51:     writeEEPROM(hours ,4);
  3541  0FDD  3004               	movlw	4
  3542  0FDE  1283               	bcf	3,5	;RP0=0, select bank0
  3543  0FDF  1303               	bcf	3,6	;RP1=0, select bank0
  3544  0FE0  00BF               	movwf	??_setData
  3545  0FE1  083F               	movf	??_setData,w
  3546  0FE2  00BD               	movwf	writeEEPROM@address
  3547  0FE3  084E               	movf	_hours,w
  3548  0FE4  120A  158A  221E  120A  158A  	fcall	_writeEEPROM
  3549                           
  3550                           ;eeprom.c: 52:     writeEEPROM(minutes ,5);
  3551  0FE9  3005               	movlw	5
  3552  0FEA  1283               	bcf	3,5	;RP0=0, select bank0
  3553  0FEB  1303               	bcf	3,6	;RP1=0, select bank0
  3554  0FEC  00BF               	movwf	??_setData
  3555  0FED  083F               	movf	??_setData,w
  3556  0FEE  00BD               	movwf	writeEEPROM@address
  3557  0FEF  084D               	movf	_minutes,w
  3558  0FF0  120A  158A  221E  120A  158A  	fcall	_writeEEPROM
  3559                           
  3560                           ;eeprom.c: 53:     writeEEPROM(functionalStat ,6);
  3561  0FF5  3006               	movlw	6
  3562  0FF6  1283               	bcf	3,5	;RP0=0, select bank0
  3563  0FF7  1303               	bcf	3,6	;RP1=0, select bank0
  3564  0FF8  00BF               	movwf	??_setData
  3565  0FF9  083F               	movf	??_setData,w
  3566  0FFA  00BD               	movwf	writeEEPROM@address
  3567  0FFB  0848               	movf	_functionalStat,w
  3568  0FFC  120A  158A  221E   	fcall	_writeEEPROM
  3569  0FFF  0008               	return
  3570  1000                     __end_of_setData:	
  3571                           
  3572                           	psect	text8
  3573  0A1E                     __ptext8:	
  3574 ;; *************** function _writeEEPROM *****************
  3575 ;; Defined at:
  3576 ;;		line 14 in file "eeprom.c"
  3577 ;; Parameters:    Size  Location     Type
  3578 ;;  data            1    wreg     unsigned char 
  3579 ;;  address         1   29[BANK0 ] unsigned char 
  3580 ;; Auto vars:     Size  Location     Type
  3581 ;;  data            1   30[BANK0 ] unsigned char 
  3582 ;; Return value:  Size  Location     Type
  3583 ;;                  1    wreg      void 
  3584 ;; Registers used:
  3585 ;;		wreg
  3586 ;; Tracked objects:
  3587 ;;		On entry : 0/0
  3588 ;;		On exit  : 0/0
  3589 ;;		Unchanged: 0/0
  3590 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3591 ;;      Params:         0       1       0       0       0
  3592 ;;      Locals:         0       1       0       0       0
  3593 ;;      Temps:          0       0       0       0       0
  3594 ;;      Totals:         0       2       0       0       0
  3595 ;;Total ram usage:        2 bytes
  3596 ;; Hardware stack levels used:    1
  3597 ;; Hardware stack levels required when called:    5
  3598 ;; This function calls:
  3599 ;;		Nothing
  3600 ;; This function is called by:
  3601 ;;		_setData
  3602 ;; This function uses a non-reentrant model
  3603 ;;
  3604                           
  3605                           
  3606                           ;psect for function _writeEEPROM
  3607  0A1E                     _writeEEPROM:	
  3608                           
  3609                           ;incstack = 0
  3610                           ; Regs used in _writeEEPROM: [wreg]
  3611                           ;writeEEPROM@data stored from wreg
  3612  0A1E  1283               	bcf	3,5	;RP0=0, select bank0
  3613  0A1F  1303               	bcf	3,6	;RP1=0, select bank0
  3614  0A20  00BE               	movwf	writeEEPROM@data
  3615                           
  3616                           ;eeprom.c: 15:     EEADR = address;
  3617  0A21  083D               	movf	writeEEPROM@address,w
  3618  0A22  1283               	bcf	3,5	;RP0=0, select bank2
  3619  0A23  1703               	bsf	3,6	;RP1=1, select bank2
  3620  0A24  008D               	movwf	13	;volatile
  3621                           
  3622                           ;eeprom.c: 16:     EEDATA = data;
  3623  0A25  1283               	bcf	3,5	;RP0=0, select bank0
  3624  0A26  1303               	bcf	3,6	;RP1=0, select bank0
  3625  0A27  083E               	movf	writeEEPROM@data,w
  3626  0A28  1283               	bcf	3,5	;RP0=0, select bank2
  3627  0A29  1703               	bsf	3,6	;RP1=1, select bank2
  3628  0A2A  008C               	movwf	12	;volatile
  3629                           
  3630                           ;eeprom.c: 18:     EECON1bits.EEPGD = 0;
  3631  0A2B  1683               	bsf	3,5	;RP0=1, select bank3
  3632  0A2C  1703               	bsf	3,6	;RP1=1, select bank3
  3633  0A2D  138C               	bcf	12,7	;volsfr
  3634                           
  3635                           ;eeprom.c: 19:     EECON1bits.WREN = 1;
  3636  0A2E  150C               	bsf	12,2	;volsfr
  3637                           
  3638                           ;eeprom.c: 21:     INTCONbits.GIE = 0;
  3639  0A2F  138B               	bcf	11,7	;volatile
  3640                           
  3641                           ;eeprom.c: 22:     EECON2 = 0x55;
  3642  0A30  3055               	movlw	85
  3643  0A31  008D               	movwf	13	;volsfr
  3644                           
  3645                           ;eeprom.c: 23:     EECON2 = 0xAA;
  3646  0A32  30AA               	movlw	170
  3647  0A33  008D               	movwf	13	;volsfr
  3648                           
  3649                           ;eeprom.c: 24:     EECON1bits.WR = 1;
  3650  0A34  148C               	bsf	12,1	;volsfr
  3651                           
  3652                           ;eeprom.c: 25:     INTCONbits.GIE = 1;
  3653  0A35  178B               	bsf	11,7	;volatile
  3654  0A36                     l60:	
  3655                           ;eeprom.c: 27:     while(PIR2bits.EEIF == 0) continue;
  3656                           
  3657  0A36  1283               	bcf	3,5	;RP0=0, select bank0
  3658  0A37  1303               	bcf	3,6	;RP1=0, select bank0
  3659  0A38  1A0D               	btfsc	13,4	;volatile
  3660  0A39  0008               	return
  3661  0A3A  2A36               	goto	l60
  3662  0A3B                     __end_of_writeEEPROM:	
  3663                           
  3664                           	psect	text9
  3665  0A7F                     __ptext9:	
  3666 ;; *************** function _putsXLCD *****************
  3667 ;; Defined at:
  3668 ;;		line 419 in file "lcd_pic16.c"
  3669 ;; Parameters:    Size  Location     Type
  3670 ;;  buffer          1    wreg     PTR unsigned char 
  3671 ;;		 -> lineOne(17), lineTwo(17), 
  3672 ;; Auto vars:     Size  Location     Type
  3673 ;;  buffer          1   34[BANK0 ] PTR unsigned char 
  3674 ;;		 -> lineOne(17), lineTwo(17), 
  3675 ;; Return value:  Size  Location     Type
  3676 ;;                  1    wreg      void 
  3677 ;; Registers used:
  3678 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3679 ;; Tracked objects:
  3680 ;;		On entry : 0/0
  3681 ;;		On exit  : 0/0
  3682 ;;		Unchanged: 0/0
  3683 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3684 ;;      Params:         0       0       0       0       0
  3685 ;;      Locals:         0       1       0       0       0
  3686 ;;      Temps:          0       1       0       0       0
  3687 ;;      Totals:         0       2       0       0       0
  3688 ;;Total ram usage:        2 bytes
  3689 ;; Hardware stack levels used:    1
  3690 ;; Hardware stack levels required when called:    7
  3691 ;; This function calls:
  3692 ;;		_BusyXLCD
  3693 ;;		_WriteDataXLCD
  3694 ;; This function is called by:
  3695 ;;		_main
  3696 ;;		_start
  3697 ;;		_setFrequency
  3698 ;; This function uses a non-reentrant model
  3699 ;;
  3700                           
  3701                           
  3702                           ;psect for function _putsXLCD
  3703  0A7F                     _putsXLCD:	
  3704                           
  3705                           ;incstack = 0
  3706 ;; hardware stack exceeded
  3707                           ; Regs used in _putsXLCD: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3708                           ;putsXLCD@buffer stored from wreg
  3709  0A7F  1283               	bcf	3,5	;RP0=0, select bank0
  3710  0A80  1303               	bcf	3,6	;RP1=0, select bank0
  3711  0A81  00C2               	movwf	putsXLCD@buffer
  3712  0A82                     l2870:	
  3713                           ;lcd_pic16.c: 419: void putsXLCD(char *buffer);lcd_pic16.c: 420: {;lcd_pic16.c: 421:    
      +                               while(*buffer)
  3714                           
  3715                           
  3716                           ;lcd_pic16.c: 421:         while(*buffer)
  3717  0A82  0842               	movf	putsXLCD@buffer,w
  3718  0A83  0084               	movwf	4
  3719  0A84  1383               	bcf	3,7	;select IRP bank0
  3720  0A85  0800               	movf	0,w
  3721  0A86  1903               	btfsc	3,2
  3722  0A87  0008               	return
  3723  0A88                     l2864:	
  3724  0A88  120A  158A  218D  120A  158A  	fcall	_BusyXLCD
  3725  0A8D  3A00               	xorlw	0
  3726  0A8E  1D03               	skipz
  3727  0A8F  2A88               	goto	l2864
  3728                           
  3729                           ;lcd_pic16.c: 424:                 WriteDataXLCD(*buffer);
  3730  0A90  1283               	bcf	3,5	;RP0=0, select bank0
  3731  0A91  1303               	bcf	3,6	;RP1=0, select bank0
  3732  0A92  0842               	movf	putsXLCD@buffer,w
  3733  0A93  0084               	movwf	4
  3734  0A94  1383               	bcf	3,7	;select IRP bank0
  3735  0A95  0800               	movf	0,w
  3736  0A96  120A  158A  259F  120A  158A  	fcall	_WriteDataXLCD
  3737                           
  3738                           ;lcd_pic16.c: 425:                 buffer++;
  3739  0A9B  3001               	movlw	1
  3740  0A9C  1283               	bcf	3,5	;RP0=0, select bank0
  3741  0A9D  1303               	bcf	3,6	;RP1=0, select bank0
  3742  0A9E  00C1               	movwf	??_putsXLCD
  3743  0A9F  0841               	movf	??_putsXLCD,w
  3744  0AA0  07C2               	addwf	putsXLCD@buffer,f
  3745  0AA1  2A82               	goto	l2870
  3746  0AA2                     __end_of_putsXLCD:	
  3747                           
  3748                           	psect	text10
  3749  0CBB                     __ptext10:	
  3750 ;; *************** function _beep *****************
  3751 ;; Defined at:
  3752 ;;		line 177 in file "main.c"
  3753 ;; Parameters:    Size  Location     Type
  3754 ;;  ms              2    0[BANK1 ] int 
  3755 ;; Auto vars:     Size  Location     Type
  3756 ;;		None
  3757 ;; Return value:  Size  Location     Type
  3758 ;;                  1    wreg      void 
  3759 ;; Registers used:
  3760 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  3761 ;; Tracked objects:
  3762 ;;		On entry : 0/0
  3763 ;;		On exit  : 0/0
  3764 ;;		Unchanged: 0/0
  3765 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3766 ;;      Params:         0       0       2       0       0
  3767 ;;      Locals:         0       0       0       0       0
  3768 ;;      Temps:          0       1       0       0       0
  3769 ;;      Totals:         0       1       2       0       0
  3770 ;;Total ram usage:        3 bytes
  3771 ;; Hardware stack levels used:    1
  3772 ;; Hardware stack levels required when called:    6
  3773 ;; This function calls:
  3774 ;;		___wmul
  3775 ;; This function is called by:
  3776 ;;		_main
  3777 ;;		_start
  3778 ;;		_setFrequency
  3779 ;; This function uses a non-reentrant model
  3780 ;;
  3781                           
  3782                           
  3783                           ;psect for function _beep
  3784  0CBB                     _beep:	
  3785                           
  3786                           ;main.c: 178:     ms *= 5;
  3787                           
  3788                           ;incstack = 0
  3789                           ; Regs used in _beep: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  3790  0CBB  3005               	movlw	5
  3791  0CBC  1283               	bcf	3,5	;RP0=0, select bank0
  3792  0CBD  1303               	bcf	3,6	;RP1=0, select bank0
  3793  0CBE  00BD               	movwf	___wmul@multiplier
  3794  0CBF  3000               	movlw	0
  3795  0CC0  00BE               	movwf	___wmul@multiplier+1
  3796  0CC1  1683               	bsf	3,5	;RP0=1, select bank1
  3797  0CC2  1303               	bcf	3,6	;RP1=0, select bank1
  3798  0CC3  0844               	movf	(beep@ms+1)^(0+128),w
  3799  0CC4  1283               	bcf	3,5	;RP0=0, select bank0
  3800  0CC5  1303               	bcf	3,6	;RP1=0, select bank0
  3801  0CC6  00C0               	movwf	___wmul@multiplicand+1
  3802  0CC7  1683               	bsf	3,5	;RP0=1, select bank1
  3803  0CC8  1303               	bcf	3,6	;RP1=0, select bank1
  3804  0CC9  0843               	movf	beep@ms^(0+128),w
  3805  0CCA  1283               	bcf	3,5	;RP0=0, select bank0
  3806  0CCB  1303               	bcf	3,6	;RP1=0, select bank0
  3807  0CCC  00BF               	movwf	___wmul@multiplicand
  3808  0CCD  120A  158A  225C  120A  158A  	fcall	___wmul
  3809  0CD2  1283               	bcf	3,5	;RP0=0, select bank0
  3810  0CD3  1303               	bcf	3,6	;RP1=0, select bank0
  3811  0CD4  083E               	movf	?___wmul+1,w
  3812  0CD5  1683               	bsf	3,5	;RP0=1, select bank1
  3813  0CD6  1303               	bcf	3,6	;RP1=0, select bank1
  3814  0CD7  00C4               	movwf	(beep@ms+1)^(0+128)
  3815  0CD8  1283               	bcf	3,5	;RP0=0, select bank0
  3816  0CD9  1303               	bcf	3,6	;RP1=0, select bank0
  3817  0CDA  083D               	movf	?___wmul,w
  3818  0CDB  1683               	bsf	3,5	;RP0=1, select bank1
  3819  0CDC  1303               	bcf	3,6	;RP1=0, select bank1
  3820  0CDD  00C3               	movwf	beep@ms^(0+128)
  3821  0CDE                     l3604:	
  3822  0CDE  0844               	movf	(beep@ms+1)^(0+128),w
  3823  0CDF  3A80               	xorlw	128
  3824  0CE0  00FF               	movwf	127
  3825  0CE1  3080               	movlw	128
  3826  0CE2  027F               	subwf	127,w
  3827  0CE3  1D03               	skipz
  3828  0CE4  2CE7               	goto	u3015
  3829  0CE5  3001               	movlw	1
  3830  0CE6  0243               	subwf	beep@ms^(0+128),w
  3831  0CE7                     u3015:	
  3832  0CE7  1C03               	btfss	3,0
  3833  0CE8  0008               	return
  3834                           
  3835                           ;main.c: 180:         PORTBbits.RB0 = 1;
  3836  0CE9  1283               	bcf	3,5	;RP0=0, select bank0
  3837  0CEA  1303               	bcf	3,6	;RP1=0, select bank0
  3838  0CEB  1406               	bsf	6,0	;volatile
  3839                           
  3840                           ;main.c: 181:         _delay((unsigned long)((100)*(4000000/4000000.0)));
  3841  0CEC  3020               	movlw	32
  3842  0CED  1283               	bcf	3,5	;RP0=0, select bank0
  3843  0CEE  1303               	bcf	3,6	;RP1=0, select bank0
  3844  0CEF  00C3               	movwf	??_beep
  3845  0CF0                     u3647:	
  3846  0CF0  0BC3               	decfsz	??_beep,f
  3847  0CF1  2CF0               	goto	u3647
  3848  0CF2  0000               	nop
  3849                           
  3850                           ;main.c: 182:         PORTBbits.RB0 = 0;
  3851  0CF3  1283               	bcf	3,5	;RP0=0, select bank0
  3852  0CF4  1303               	bcf	3,6	;RP1=0, select bank0
  3853  0CF5  1006               	bcf	6,0	;volatile
  3854                           
  3855                           ;main.c: 183:         _delay((unsigned long)((100)*(4000000/4000000.0)));
  3856  0CF6  3020               	movlw	32
  3857  0CF7  1283               	bcf	3,5	;RP0=0, select bank0
  3858  0CF8  1303               	bcf	3,6	;RP1=0, select bank0
  3859  0CF9  00C3               	movwf	??_beep
  3860  0CFA                     u3657:	
  3861  0CFA  0BC3               	decfsz	??_beep,f
  3862  0CFB  2CFA               	goto	u3657
  3863  0CFC  0000               	nop
  3864                           
  3865                           ;main.c: 184:     }
  3866  0CFD  30FF               	movlw	255
  3867  0CFE  1683               	bsf	3,5	;RP0=1, select bank1
  3868  0CFF  1303               	bcf	3,6	;RP1=0, select bank1
  3869  0D00  07C3               	addwf	beep@ms^(0+128),f
  3870  0D01  1803               	skipnc
  3871  0D02  0AC4               	incf	(beep@ms+1)^(0+128),f
  3872  0D03  30FF               	movlw	255
  3873  0D04  07C4               	addwf	(beep@ms+1)^(0+128),f
  3874  0D05  2CDE               	goto	l3604
  3875  0D06                     __end_of_beep:	
  3876                           
  3877                           	psect	text11
  3878  0A5C                     __ptext11:	
  3879 ;; *************** function ___wmul *****************
  3880 ;; Defined at:
  3881 ;;		line 15 in file "/opt/microchip/xc8/v2.05/pic/sources/c90/common/Umul16.c"
  3882 ;; Parameters:    Size  Location     Type
  3883 ;;  multiplier      2   29[BANK0 ] unsigned int 
  3884 ;;  multiplicand    2   31[BANK0 ] unsigned int 
  3885 ;; Auto vars:     Size  Location     Type
  3886 ;;  product         2   33[BANK0 ] unsigned int 
  3887 ;; Return value:  Size  Location     Type
  3888 ;;                  2   29[BANK0 ] unsigned int 
  3889 ;; Registers used:
  3890 ;;		wreg, status,2, status,0
  3891 ;; Tracked objects:
  3892 ;;		On entry : 0/0
  3893 ;;		On exit  : 0/0
  3894 ;;		Unchanged: 0/0
  3895 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3896 ;;      Params:         0       4       0       0       0
  3897 ;;      Locals:         0       2       0       0       0
  3898 ;;      Temps:          0       0       0       0       0
  3899 ;;      Totals:         0       6       0       0       0
  3900 ;;Total ram usage:        6 bytes
  3901 ;; Hardware stack levels used:    1
  3902 ;; Hardware stack levels required when called:    5
  3903 ;; This function calls:
  3904 ;;		Nothing
  3905 ;; This function is called by:
  3906 ;;		_beep
  3907 ;;		_sprintf
  3908 ;; This function uses a non-reentrant model
  3909 ;;
  3910                           
  3911                           
  3912                           ;psect for function ___wmul
  3913  0A5C                     ___wmul:	
  3914                           
  3915                           ;incstack = 0
  3916                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  3917  0A5C  1283               	bcf	3,5	;RP0=0, select bank0
  3918  0A5D  1303               	bcf	3,6	;RP1=0, select bank0
  3919  0A5E  01C1               	clrf	___wmul@product
  3920  0A5F  01C2               	clrf	___wmul@product+1
  3921  0A60                     l2562:	
  3922  0A60  1C3D               	btfss	___wmul@multiplier,0
  3923  0A61  2A68               	goto	l665
  3924  0A62  083F               	movf	___wmul@multiplicand,w
  3925  0A63  07C1               	addwf	___wmul@product,f
  3926  0A64  1803               	skipnc
  3927  0A65  0AC2               	incf	___wmul@product+1,f
  3928  0A66  0840               	movf	___wmul@multiplicand+1,w
  3929  0A67  07C2               	addwf	___wmul@product+1,f
  3930  0A68                     l665:	
  3931  0A68  3001               	movlw	1
  3932  0A69                     u1635:	
  3933  0A69  1003               	clrc
  3934  0A6A  0DBF               	rlf	___wmul@multiplicand,f
  3935  0A6B  0DC0               	rlf	___wmul@multiplicand+1,f
  3936  0A6C  3EFF               	addlw	-1
  3937  0A6D  1D03               	skipz
  3938  0A6E  2A69               	goto	u1635
  3939  0A6F  3001               	movlw	1
  3940  0A70                     u1645:	
  3941  0A70  1003               	clrc
  3942  0A71  0CBE               	rrf	___wmul@multiplier+1,f
  3943  0A72  0CBD               	rrf	___wmul@multiplier,f
  3944  0A73  3EFF               	addlw	-1
  3945  0A74  1D03               	skipz
  3946  0A75  2A70               	goto	u1645
  3947  0A76  083D               	movf	___wmul@multiplier,w
  3948  0A77  043E               	iorwf	___wmul@multiplier+1,w
  3949  0A78  1D03               	btfss	3,2
  3950  0A79  2A60               	goto	l2562
  3951  0A7A  0842               	movf	___wmul@product+1,w
  3952  0A7B  00BE               	movwf	?___wmul+1
  3953  0A7C  0841               	movf	___wmul@product,w
  3954  0A7D  00BD               	movwf	?___wmul
  3955  0A7E  0008               	return
  3956  0A7F                     __end_of___wmul:	
  3957                           
  3958                           	psect	text12
  3959  0AEE                     __ptext12:	
  3960 ;; *************** function _putrsXLCD *****************
  3961 ;; Defined at:
  3962 ;;		line 435 in file "lcd_pic16.c"
  3963 ;; Parameters:    Size  Location     Type
  3964 ;;  buffer          1    wreg     PTR const unsigned char 
  3965 ;;		 -> STR_1(17), 
  3966 ;; Auto vars:     Size  Location     Type
  3967 ;;  buffer          1   34[BANK0 ] PTR const unsigned char 
  3968 ;;		 -> STR_1(17), 
  3969 ;; Return value:  Size  Location     Type
  3970 ;;                  1    wreg      void 
  3971 ;; Registers used:
  3972 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3973 ;; Tracked objects:
  3974 ;;		On entry : 0/0
  3975 ;;		On exit  : 0/0
  3976 ;;		Unchanged: 0/0
  3977 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3978 ;;      Params:         0       0       0       0       0
  3979 ;;      Locals:         0       1       0       0       0
  3980 ;;      Temps:          0       1       0       0       0
  3981 ;;      Totals:         0       2       0       0       0
  3982 ;;Total ram usage:        2 bytes
  3983 ;; Hardware stack levels used:    1
  3984 ;; Hardware stack levels required when called:    7
  3985 ;; This function calls:
  3986 ;;		_BusyXLCD
  3987 ;;		_WriteDataXLCD
  3988 ;; This function is called by:
  3989 ;;		_main
  3990 ;; This function uses a non-reentrant model
  3991 ;;
  3992                           
  3993                           
  3994                           ;psect for function _putrsXLCD
  3995  0AEE                     _putrsXLCD:	
  3996                           
  3997                           ;incstack = 0
  3998 ;; using string table level
  3999                           ; Regs used in _putrsXLCD: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4000                           ;putrsXLCD@buffer stored from wreg
  4001  0AEE  1283               	bcf	3,5	;RP0=0, select bank0
  4002  0AEF  1303               	bcf	3,6	;RP1=0, select bank0
  4003  0AF0  00C2               	movwf	putrsXLCD@buffer
  4004  0AF1                     l3254:	
  4005                           ;lcd_pic16.c: 435: void putrsXLCD(const char *buffer);lcd_pic16.c: 436: {;lcd_pic16.c: 4
      +                          37:         while(*buffer)
  4006                           
  4007                           
  4008                           ;lcd_pic16.c: 437:         while(*buffer)
  4009  0AF1  0842               	movf	putrsXLCD@buffer,w
  4010  0AF2  0084               	movwf	4
  4011  0AF3  120A  158A  2000  120A  158A  	fcall	stringdir
  4012  0AF8  3A00               	xorlw	0
  4013  0AF9  1903               	btfsc	3,2
  4014  0AFA  0008               	return
  4015  0AFB                     l3248:	
  4016  0AFB  120A  158A  218D  120A  158A  	fcall	_BusyXLCD
  4017  0B00  3A00               	xorlw	0
  4018  0B01  1D03               	skipz
  4019  0B02  2AFB               	goto	l3248
  4020                           
  4021                           ;lcd_pic16.c: 440:                 WriteDataXLCD(*buffer);
  4022  0B03  1283               	bcf	3,5	;RP0=0, select bank0
  4023  0B04  1303               	bcf	3,6	;RP1=0, select bank0
  4024  0B05  0842               	movf	putrsXLCD@buffer,w
  4025  0B06  0084               	movwf	4
  4026  0B07  120A  158A  2000  120A  158A  	fcall	stringdir
  4027  0B0C  120A  158A  259F  120A  158A  	fcall	_WriteDataXLCD
  4028                           
  4029                           ;lcd_pic16.c: 441:                 buffer++;
  4030  0B11  3001               	movlw	1
  4031  0B12  1283               	bcf	3,5	;RP0=0, select bank0
  4032  0B13  1303               	bcf	3,6	;RP1=0, select bank0
  4033  0B14  00C1               	movwf	??_putrsXLCD
  4034  0B15  0841               	movf	??_putrsXLCD,w
  4035  0B16  07C2               	addwf	putrsXLCD@buffer,f
  4036  0B17  2AF1               	goto	l3254
  4037  0B18                     __end_of_putrsXLCD:	
  4038                           
  4039                           	psect	text13
  4040  0D9F                     __ptext13:	
  4041 ;; *************** function _WriteDataXLCD *****************
  4042 ;; Defined at:
  4043 ;;		line 110 in file "lcd_pic16.c"
  4044 ;; Parameters:    Size  Location     Type
  4045 ;;  data            1    wreg     unsigned char 
  4046 ;; Auto vars:     Size  Location     Type
  4047 ;;  data            1   32[BANK0 ] unsigned char 
  4048 ;; Return value:  Size  Location     Type
  4049 ;;                  1    wreg      void 
  4050 ;; Registers used:
  4051 ;;		wreg, status,2, status,0, pclath, cstack
  4052 ;; Tracked objects:
  4053 ;;		On entry : 0/0
  4054 ;;		On exit  : 0/0
  4055 ;;		Unchanged: 0/0
  4056 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4057 ;;      Params:         0       0       0       0       0
  4058 ;;      Locals:         0       1       0       0       0
  4059 ;;      Temps:          0       2       0       0       0
  4060 ;;      Totals:         0       3       0       0       0
  4061 ;;Total ram usage:        3 bytes
  4062 ;; Hardware stack levels used:    1
  4063 ;; Hardware stack levels required when called:    6
  4064 ;; This function calls:
  4065 ;;		_DelayFor18TCY
  4066 ;; This function is called by:
  4067 ;;		_putsXLCD
  4068 ;;		_putrsXLCD
  4069 ;; This function uses a non-reentrant model
  4070 ;;
  4071                           
  4072                           
  4073                           ;psect for function _WriteDataXLCD
  4074  0D9F                     _WriteDataXLCD:	
  4075                           
  4076                           ;incstack = 0
  4077 ;; hardware stack exceeded
  4078                           ; Regs used in _WriteDataXLCD: [wreg+status,2+status,0+pclath+cstack]
  4079                           ;WriteDataXLCD@data stored from wreg
  4080  0D9F  1283               	bcf	3,5	;RP0=0, select bank0
  4081  0DA0  1303               	bcf	3,6	;RP1=0, select bank0
  4082  0DA1  00C0               	movwf	WriteDataXLCD@data
  4083                           
  4084                           ;lcd_pic16.c: 110: void WriteDataXLCD(char data);lcd_pic16.c: 111: {;lcd_pic16.c: 125:  
      +                                 TRISB &= 0x0f;
  4085  0DA2  300F               	movlw	15
  4086  0DA3  00BE               	movwf	??_WriteDataXLCD
  4087  0DA4  083E               	movf	??_WriteDataXLCD,w
  4088  0DA5  1683               	bsf	3,5	;RP0=1, select bank1
  4089  0DA6  1303               	bcf	3,6	;RP1=0, select bank1
  4090  0DA7  0586               	andwf	6,f	;volatile
  4091                           
  4092                           ;lcd_pic16.c: 126:         PORTB &= 0x0f;
  4093  0DA8  300F               	movlw	15
  4094  0DA9  1283               	bcf	3,5	;RP0=0, select bank0
  4095  0DAA  1303               	bcf	3,6	;RP1=0, select bank0
  4096  0DAB  00BE               	movwf	??_WriteDataXLCD
  4097  0DAC  083E               	movf	??_WriteDataXLCD,w
  4098  0DAD  0586               	andwf	6,f	;volatile
  4099                           
  4100                           ;lcd_pic16.c: 127:         PORTB |= data&0xf0;
  4101  0DAE  0840               	movf	WriteDataXLCD@data,w
  4102  0DAF  39F0               	andlw	240
  4103  0DB0  00BE               	movwf	??_WriteDataXLCD
  4104  0DB1  083E               	movf	??_WriteDataXLCD,w
  4105  0DB2  0486               	iorwf	6,f	;volatile
  4106                           
  4107                           ;lcd_pic16.c: 133:         PORTBbits.RB1 = 1;
  4108  0DB3  1486               	bsf	6,1	;volatile
  4109                           
  4110                           ;lcd_pic16.c: 134:         PORTBbits.RB2 = 0;
  4111  0DB4  1106               	bcf	6,2	;volatile
  4112                           
  4113                           ;lcd_pic16.c: 135:         DelayFor18TCY();
  4114  0DB5  120A  158A  2162  120A  158A  	fcall	_DelayFor18TCY
  4115                           
  4116                           ;lcd_pic16.c: 136:         PORTBbits.RB3 = 1;
  4117  0DBA  1283               	bcf	3,5	;RP0=0, select bank0
  4118  0DBB  1303               	bcf	3,6	;RP1=0, select bank0
  4119  0DBC  1586               	bsf	6,3	;volatile
  4120                           
  4121                           ;lcd_pic16.c: 137:         DelayFor18TCY();
  4122  0DBD  120A  158A  2162  120A  158A  	fcall	_DelayFor18TCY
  4123                           
  4124                           ;lcd_pic16.c: 138:         PORTBbits.RB3 = 0;
  4125  0DC2  1283               	bcf	3,5	;RP0=0, select bank0
  4126  0DC3  1303               	bcf	3,6	;RP1=0, select bank0
  4127  0DC4  1186               	bcf	6,3	;volatile
  4128                           
  4129                           ;lcd_pic16.c: 140:         PORTB &= 0x0f;
  4130  0DC5  300F               	movlw	15
  4131  0DC6  00BE               	movwf	??_WriteDataXLCD
  4132  0DC7  083E               	movf	??_WriteDataXLCD,w
  4133  0DC8  0586               	andwf	6,f	;volatile
  4134                           
  4135                           ;lcd_pic16.c: 141:         PORTB |= ((data<<4)&0xf0);
  4136  0DC9  0840               	movf	WriteDataXLCD@data,w
  4137  0DCA  00BE               	movwf	??_WriteDataXLCD
  4138  0DCB  3003               	movlw	3
  4139  0DCC                     u1585:	
  4140  0DCC  1003               	clrc
  4141  0DCD  0DBE               	rlf	??_WriteDataXLCD,f
  4142  0DCE  3EFF               	addlw	-1
  4143  0DCF  1D03               	skipz
  4144  0DD0  2DCC               	goto	u1585
  4145  0DD1  1003               	clrc
  4146  0DD2  0D3E               	rlf	??_WriteDataXLCD,w
  4147  0DD3  39F0               	andlw	240
  4148  0DD4  00BF               	movwf	??_WriteDataXLCD+1
  4149  0DD5  083F               	movf	??_WriteDataXLCD+1,w
  4150  0DD6  0486               	iorwf	6,f	;volatile
  4151                           
  4152                           ;lcd_pic16.c: 146:         DelayFor18TCY();
  4153  0DD7  120A  158A  2162  120A  158A  	fcall	_DelayFor18TCY
  4154                           
  4155                           ;lcd_pic16.c: 147:         PORTBbits.RB3 = 1;
  4156  0DDC  1283               	bcf	3,5	;RP0=0, select bank0
  4157  0DDD  1303               	bcf	3,6	;RP1=0, select bank0
  4158  0DDE  1586               	bsf	6,3	;volatile
  4159                           
  4160                           ;lcd_pic16.c: 148:         DelayFor18TCY();
  4161  0DDF  120A  158A  2162   	fcall	_DelayFor18TCY
  4162                           
  4163                           ;lcd_pic16.c: 149:         PORTBbits.RB3 = 0;
  4164  0DE2  1283               	bcf	3,5	;RP0=0, select bank0
  4165  0DE3  1303               	bcf	3,6	;RP1=0, select bank0
  4166  0DE4  1186               	bcf	6,3	;volatile
  4167                           
  4168                           ;lcd_pic16.c: 151:         TRISB |= 0xf0;
  4169  0DE5  30F0               	movlw	240
  4170  0DE6  00BE               	movwf	??_WriteDataXLCD
  4171  0DE7  083E               	movf	??_WriteDataXLCD,w
  4172  0DE8  1683               	bsf	3,5	;RP0=1, select bank1
  4173  0DE9  1303               	bcf	3,6	;RP1=0, select bank1
  4174  0DEA  0486               	iorwf	6,f	;volatile
  4175  0DEB  0008               	return
  4176  0DEC                     __end_of_WriteDataXLCD:	
  4177                           
  4178                           	psect	text14
  4179  0F46                     __ptext14:	
  4180 ;; *************** function _getData *****************
  4181 ;; Defined at:
  4182 ;;		line 31 in file "eeprom.c"
  4183 ;; Parameters:    Size  Location     Type
  4184 ;;		None
  4185 ;; Auto vars:     Size  Location     Type
  4186 ;;  aux1            1   35[BANK0 ] unsigned char 
  4187 ;;  aux0            1   34[BANK0 ] unsigned char 
  4188 ;; Return value:  Size  Location     Type
  4189 ;;                  1    wreg      void 
  4190 ;; Registers used:
  4191 ;;		wreg, status,2, btemp+1, pclath, cstack
  4192 ;; Tracked objects:
  4193 ;;		On entry : 0/0
  4194 ;;		On exit  : 0/0
  4195 ;;		Unchanged: 0/0
  4196 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4197 ;;      Params:         0       0       0       0       0
  4198 ;;      Locals:         0       2       0       0       0
  4199 ;;      Temps:          0       4       0       0       0
  4200 ;;      Totals:         0       6       0       0       0
  4201 ;;Total ram usage:        6 bytes
  4202 ;; Hardware stack levels used:    1
  4203 ;; Hardware stack levels required when called:    6
  4204 ;; This function calls:
  4205 ;;		_readEEPROM
  4206 ;; This function is called by:
  4207 ;;		_main
  4208 ;; This function uses a non-reentrant model
  4209 ;;
  4210                           
  4211                           
  4212                           ;psect for function _getData
  4213  0F46                     _getData:	
  4214                           
  4215                           ;eeprom.c: 32:     unsigned char aux0 = readEEPROM(0);
  4216                           
  4217                           ;incstack = 0
  4218                           ; Regs used in _getData: [wreg+status,2+btemp+1+pclath+cstack]
  4219  0F46  3000               	movlw	0
  4220  0F47  120A  158A  21A8  120A  158A  	fcall	_readEEPROM
  4221  0F4C  1283               	bcf	3,5	;RP0=0, select bank0
  4222  0F4D  1303               	bcf	3,6	;RP1=0, select bank0
  4223  0F4E  00BE               	movwf	??_getData
  4224  0F4F  083E               	movf	??_getData,w
  4225  0F50  00C2               	movwf	getData@aux0
  4226                           
  4227                           ;eeprom.c: 33:     unsigned char aux1 = readEEPROM(1);
  4228  0F51  3001               	movlw	1
  4229  0F52  120A  158A  21A8  120A  158A  	fcall	_readEEPROM
  4230  0F57  1283               	bcf	3,5	;RP0=0, select bank0
  4231  0F58  1303               	bcf	3,6	;RP1=0, select bank0
  4232  0F59  00BE               	movwf	??_getData
  4233  0F5A  083E               	movf	??_getData,w
  4234  0F5B  00C3               	movwf	getData@aux1
  4235                           
  4236                           ;eeprom.c: 34:     frequency = 0;
  4237  0F5C  01C4               	clrf	_frequency
  4238  0F5D  01C5               	clrf	_frequency+1
  4239                           
  4240                           ;eeprom.c: 35:     frequency = (aux1 << 8) | aux0;
  4241  0F5E  0842               	movf	getData@aux0,w
  4242  0F5F  00BE               	movwf	??_getData
  4243  0F60  01BF               	clrf	??_getData+1
  4244  0F61  0843               	movf	getData@aux1,w
  4245  0F62  00C0               	movwf	??_getData+2
  4246  0F63  01C1               	clrf	??_getData+3
  4247  0F64  0840               	movf	??_getData+2,w
  4248  0F65  00C1               	movwf	??_getData+3
  4249  0F66  01C0               	clrf	??_getData+2
  4250  0F67  083E               	movf	??_getData,w
  4251  0F68  0440               	iorwf	??_getData+2,w
  4252  0F69  00C4               	movwf	_frequency
  4253  0F6A  083F               	movf	??_getData+1,w
  4254  0F6B  0441               	iorwf	??_getData+3,w
  4255  0F6C  00C5               	movwf	_frequency+1
  4256                           
  4257                           ;eeprom.c: 36:     months = readEEPROM(2);
  4258  0F6D  3002               	movlw	2
  4259  0F6E  120A  158A  21A8  120A  158A  	fcall	_readEEPROM
  4260  0F73  1283               	bcf	3,5	;RP0=0, select bank0
  4261  0F74  1303               	bcf	3,6	;RP1=0, select bank0
  4262  0F75  00BE               	movwf	??_getData
  4263  0F76  083E               	movf	??_getData,w
  4264  0F77  00D0               	movwf	_months
  4265                           
  4266                           ;eeprom.c: 37:     days = readEEPROM(3);
  4267  0F78  3003               	movlw	3
  4268  0F79  120A  158A  21A8  120A  158A  	fcall	_readEEPROM
  4269  0F7E  1283               	bcf	3,5	;RP0=0, select bank0
  4270  0F7F  1303               	bcf	3,6	;RP1=0, select bank0
  4271  0F80  00BE               	movwf	??_getData
  4272  0F81  083E               	movf	??_getData,w
  4273  0F82  00CF               	movwf	_days
  4274                           
  4275                           ;eeprom.c: 38:     hours = readEEPROM(4);
  4276  0F83  3004               	movlw	4
  4277  0F84  120A  158A  21A8  120A  158A  	fcall	_readEEPROM
  4278  0F89  1283               	bcf	3,5	;RP0=0, select bank0
  4279  0F8A  1303               	bcf	3,6	;RP1=0, select bank0
  4280  0F8B  00BE               	movwf	??_getData
  4281  0F8C  083E               	movf	??_getData,w
  4282  0F8D  00CE               	movwf	_hours
  4283                           
  4284                           ;eeprom.c: 39:     minutes = readEEPROM(5);
  4285  0F8E  3005               	movlw	5
  4286  0F8F  120A  158A  21A8  120A  158A  	fcall	_readEEPROM
  4287  0F94  1283               	bcf	3,5	;RP0=0, select bank0
  4288  0F95  1303               	bcf	3,6	;RP1=0, select bank0
  4289  0F96  00BE               	movwf	??_getData
  4290  0F97  083E               	movf	??_getData,w
  4291  0F98  00CD               	movwf	_minutes
  4292                           
  4293                           ;eeprom.c: 40:     functionalStat = readEEPROM(6);
  4294  0F99  3006               	movlw	6
  4295  0F9A  120A  158A  21A8   	fcall	_readEEPROM
  4296  0F9D  1283               	bcf	3,5	;RP0=0, select bank0
  4297  0F9E  1303               	bcf	3,6	;RP1=0, select bank0
  4298  0F9F  00BE               	movwf	??_getData
  4299  0FA0  083E               	movf	??_getData,w
  4300  0FA1  00C8               	movwf	_functionalStat
  4301  0FA2  0008               	return
  4302  0FA3                     __end_of_getData:	
  4303                           
  4304                           	psect	text15
  4305  09A8                     __ptext15:	
  4306 ;; *************** function _readEEPROM *****************
  4307 ;; Defined at:
  4308 ;;		line 7 in file "eeprom.c"
  4309 ;; Parameters:    Size  Location     Type
  4310 ;;  address         1    wreg     unsigned char 
  4311 ;; Auto vars:     Size  Location     Type
  4312 ;;  address         1   29[BANK0 ] unsigned char 
  4313 ;; Return value:  Size  Location     Type
  4314 ;;                  1    wreg      unsigned char 
  4315 ;; Registers used:
  4316 ;;		wreg
  4317 ;; Tracked objects:
  4318 ;;		On entry : 0/0
  4319 ;;		On exit  : 0/0
  4320 ;;		Unchanged: 0/0
  4321 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4322 ;;      Params:         0       0       0       0       0
  4323 ;;      Locals:         0       1       0       0       0
  4324 ;;      Temps:          0       0       0       0       0
  4325 ;;      Totals:         0       1       0       0       0
  4326 ;;Total ram usage:        1 bytes
  4327 ;; Hardware stack levels used:    1
  4328 ;; Hardware stack levels required when called:    5
  4329 ;; This function calls:
  4330 ;;		Nothing
  4331 ;; This function is called by:
  4332 ;;		_getData
  4333 ;; This function uses a non-reentrant model
  4334 ;;
  4335                           
  4336                           
  4337                           ;psect for function _readEEPROM
  4338  09A8                     _readEEPROM:	
  4339                           
  4340                           ;incstack = 0
  4341                           ; Regs used in _readEEPROM: [wreg]
  4342                           ;readEEPROM@address stored from wreg
  4343  09A8  1283               	bcf	3,5	;RP0=0, select bank0
  4344  09A9  1303               	bcf	3,6	;RP1=0, select bank0
  4345  09AA  00BD               	movwf	readEEPROM@address
  4346                           
  4347                           ;eeprom.c: 8:     EEADR = address;
  4348  09AB  083D               	movf	readEEPROM@address,w
  4349  09AC  1283               	bcf	3,5	;RP0=0, select bank2
  4350  09AD  1703               	bsf	3,6	;RP1=1, select bank2
  4351  09AE  008D               	movwf	13	;volatile
  4352                           
  4353                           ;eeprom.c: 9:     EECON1bits.EEPGD = 0;
  4354  09AF  1683               	bsf	3,5	;RP0=1, select bank3
  4355  09B0  1703               	bsf	3,6	;RP1=1, select bank3
  4356  09B1  138C               	bcf	12,7	;volsfr
  4357                           
  4358                           ;eeprom.c: 10:     EECON1bits.RD = 1;
  4359  09B2  140C               	bsf	12,0	;volsfr
  4360                           
  4361                           ;eeprom.c: 11:     return EEDATA;
  4362  09B3  1283               	bcf	3,5	;RP0=0, select bank2
  4363  09B4  1703               	bsf	3,6	;RP1=1, select bank2
  4364  09B5  080C               	movf	12,w	;volatile
  4365  09B6  0008               	return
  4366  09B7                     __end_of_readEEPROM:	
  4367                           
  4368                           	psect	text16
  4369  0B18                     __ptext16:	
  4370 ;; *************** function _config *****************
  4371 ;; Defined at:
  4372 ;;		line 53 in file "main.c"
  4373 ;; Parameters:    Size  Location     Type
  4374 ;;		None
  4375 ;; Auto vars:     Size  Location     Type
  4376 ;;		None
  4377 ;; Return value:  Size  Location     Type
  4378 ;;                  1    wreg      void 
  4379 ;; Registers used:
  4380 ;;		wreg, status,2, status,0, pclath, cstack
  4381 ;; Tracked objects:
  4382 ;;		On entry : 0/0
  4383 ;;		On exit  : 0/0
  4384 ;;		Unchanged: 0/0
  4385 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4386 ;;      Params:         0       0       0       0       0
  4387 ;;      Locals:         0       0       0       0       0
  4388 ;;      Temps:          0       0       0       0       0
  4389 ;;      Totals:         0       0       0       0       0
  4390 ;;Total ram usage:        0 bytes
  4391 ;; Hardware stack levels used:    1
  4392 ;; Hardware stack levels required when called:    9
  4393 ;; This function calls:
  4394 ;;		_initLCD
  4395 ;;		_setTransStat
  4396 ;; This function is called by:
  4397 ;;		_main
  4398 ;; This function uses a non-reentrant model
  4399 ;;
  4400                           
  4401                           
  4402                           ;psect for function _config
  4403  0B18                     _config:	
  4404                           
  4405                           ;main.c: 55:     INTCON = 0b01000000;
  4406                           
  4407                           ;incstack = 0
  4408 ;; hardware stack exceeded
  4409                           ; Regs used in _config: [wreg+status,2+status,0+pclath+cstack]
  4410  0B18  3040               	movlw	64
  4411  0B19  008B               	movwf	11	;volatile
  4412                           
  4413                           ;main.c: 56:     PIE1 = 0b00000001;
  4414  0B1A  3001               	movlw	1
  4415  0B1B  1683               	bsf	3,5	;RP0=1, select bank1
  4416  0B1C  1303               	bcf	3,6	;RP1=0, select bank1
  4417  0B1D  008C               	movwf	12	;volatile
  4418                           
  4419                           ;main.c: 58:     TRISA = 0b00111000;
  4420  0B1E  3038               	movlw	56
  4421  0B1F  0085               	movwf	5	;volatile
  4422                           
  4423                           ;main.c: 59:     TRISB = 0b00000000;
  4424  0B20  0186               	clrf	6	;volatile
  4425                           
  4426                           ;main.c: 60:     TRISC = 0b00000000;
  4427  0B21  0187               	clrf	7	;volatile
  4428                           
  4429                           ;main.c: 61:     PORTA = 0x00;
  4430  0B22  1283               	bcf	3,5	;RP0=0, select bank0
  4431  0B23  1303               	bcf	3,6	;RP1=0, select bank0
  4432  0B24  0185               	clrf	5	;volatile
  4433                           
  4434                           ;main.c: 62:     PORTB = 0x00;
  4435  0B25  0186               	clrf	6	;volatile
  4436                           
  4437                           ;main.c: 63:     PORTC = 0x0E;
  4438  0B26  300E               	movlw	14
  4439  0B27  0087               	movwf	7	;volatile
  4440                           
  4441                           ;main.c: 65:     T1CON = 0b00010001;
  4442  0B28  3011               	movlw	17
  4443  0B29  0090               	movwf	16	;volatile
  4444                           
  4445                           ;main.c: 67:     ADCON0 = 0b00000000;
  4446  0B2A  019F               	clrf	31	;volatile
  4447                           
  4448                           ;main.c: 68:     ADCON1 = 0b00000000;
  4449  0B2B  1683               	bsf	3,5	;RP0=1, select bank1
  4450  0B2C  1303               	bcf	3,6	;RP1=0, select bank1
  4451  0B2D  019F               	clrf	31	;volatile
  4452                           
  4453                           ;main.c: 69:     ANSEL = 0b00000000;
  4454  0B2E  1683               	bsf	3,5	;RP0=1, select bank3
  4455  0B2F  1703               	bsf	3,6	;RP1=1, select bank3
  4456  0B30  0188               	clrf	8	;volatile
  4457                           
  4458                           ;main.c: 70:     ANSELH = 0b00000000;
  4459  0B31  0189               	clrf	9	;volatile
  4460                           
  4461                           ;main.c: 72:     initLCD();
  4462  0B32  120A  158A  22C6  120A  158A  	fcall	_initLCD
  4463                           
  4464                           ;main.c: 74:     T1CONbits.TMR1ON = 1;
  4465  0B37  1283               	bcf	3,5	;RP0=0, select bank0
  4466  0B38  1303               	bcf	3,6	;RP1=0, select bank0
  4467  0B39  1410               	bsf	16,0	;volatile
  4468                           
  4469                           ;main.c: 75:     INTCONbits.GIE = 1;
  4470  0B3A  178B               	bsf	11,7	;volatile
  4471                           
  4472                           ;main.c: 77:     setTransStat(0);
  4473  0B3B  3000               	movlw	0
  4474  0B3C  1683               	bsf	3,5	;RP0=1, select bank1
  4475  0B3D  1303               	bcf	3,6	;RP1=0, select bank1
  4476  0B3E  00C8               	movwf	setTransStat@stat^(0+128)
  4477  0B3F  00C9               	movwf	(setTransStat@stat+1)^(0+128)
  4478  0B40  120A  158A  2376   	fcall	_setTransStat
  4479  0B43  0008               	return
  4480  0B44                     __end_of_config:	
  4481                           
  4482                           	psect	text17
  4483  0B76                     __ptext17:	
  4484 ;; *************** function _setTransStat *****************
  4485 ;; Defined at:
  4486 ;;		line 243 in file "main.c"
  4487 ;; Parameters:    Size  Location     Type
  4488 ;;  stat            2    5[BANK1 ] int 
  4489 ;; Auto vars:     Size  Location     Type
  4490 ;;		None
  4491 ;; Return value:  Size  Location     Type
  4492 ;;                  1    wreg      void 
  4493 ;; Registers used:
  4494 ;;		wreg, status,2, status,0, pclath, cstack
  4495 ;; Tracked objects:
  4496 ;;		On entry : 0/0
  4497 ;;		On exit  : 0/0
  4498 ;;		Unchanged: 0/0
  4499 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4500 ;;      Params:         0       0       2       0       0
  4501 ;;      Locals:         0       0       0       0       0
  4502 ;;      Temps:          0       0       2       0       0
  4503 ;;      Totals:         0       0       4       0       0
  4504 ;;Total ram usage:        4 bytes
  4505 ;; Hardware stack levels used:    1
  4506 ;; Hardware stack levels required when called:    7
  4507 ;; This function calls:
  4508 ;;		_writeFrequency
  4509 ;; This function is called by:
  4510 ;;		_main
  4511 ;;		_config
  4512 ;; This function uses a non-reentrant model
  4513 ;;
  4514                           
  4515                           
  4516                           ;psect for function _setTransStat
  4517  0B76                     _setTransStat:	
  4518                           
  4519                           ;main.c: 244:     if(stat == 1){
  4520                           
  4521                           ;incstack = 0
  4522                           ; Regs used in _setTransStat: [wreg+status,2+status,0+pclath+cstack]
  4523  0B76  1683               	bsf	3,5	;RP0=1, select bank1
  4524  0B77  1303               	bcf	3,6	;RP1=0, select bank1
  4525  0B78  0348               	decf	setTransStat@stat^(0+128),w
  4526  0B79  0449               	iorwf	(setTransStat@stat+1)^(0+128),w
  4527  0B7A  1D03               	btfss	3,2
  4528  0B7B  2B94               	goto	l273
  4529                           
  4530                           ;main.c: 245:         PORTCbits.RC0 = 1;
  4531  0B7C  1283               	bcf	3,5	;RP0=0, select bank0
  4532  0B7D  1303               	bcf	3,6	;RP1=0, select bank0
  4533  0B7E  1407               	bsf	7,0	;volatile
  4534                           
  4535                           ;main.c: 246:         PORTCbits.RC4 = 0;
  4536  0B7F  1207               	bcf	7,4	;volatile
  4537                           
  4538                           ;main.c: 247:         _delay((unsigned long)((2)*(4000000/4000.0)));
  4539  0B80  3003               	movlw	3
  4540  0B81  1683               	bsf	3,5	;RP0=1, select bank1
  4541  0B82  1303               	bcf	3,6	;RP1=0, select bank1
  4542  0B83  00CB               	movwf	(??_setTransStat^(0+128)+1)
  4543  0B84  3097               	movlw	151
  4544  0B85  00CA               	movwf	??_setTransStat^(0+128)
  4545  0B86                     u3667:	
  4546  0B86  0BCA               	decfsz	??_setTransStat^(0+128),f
  4547  0B87  2B86               	goto	u3667
  4548  0B88  0BCB               	decfsz	(??_setTransStat^(0+128)+1),f
  4549  0B89  2B86               	goto	u3667
  4550                           
  4551                           ;main.c: 248:         writeFrequency(frequency);
  4552  0B8A  1283               	bcf	3,5	;RP0=0, select bank0
  4553  0B8B  1303               	bcf	3,6	;RP1=0, select bank0
  4554  0B8C  0845               	movf	_frequency+1,w
  4555  0B8D  00C0               	movwf	writeFrequency@f+1
  4556  0B8E  0844               	movf	_frequency,w
  4557  0B8F  00BF               	movwf	writeFrequency@f
  4558  0B90  120A  118A  2777   	fcall	_writeFrequency
  4559                           
  4560                           ;main.c: 249:     }else{
  4561  0B93  0008               	return
  4562  0B94                     l273:	
  4563                           
  4564                           ;main.c: 250:         PORTCbits.RC0 = 0;
  4565  0B94  1283               	bcf	3,5	;RP0=0, select bank0
  4566  0B95  1303               	bcf	3,6	;RP1=0, select bank0
  4567  0B96  1007               	bcf	7,0	;volatile
  4568                           
  4569                           ;main.c: 251:         PORTCbits.RC4 = 1;
  4570  0B97  1607               	bsf	7,4	;volatile
  4571                           
  4572                           ;main.c: 252:         _delay((unsigned long)((2)*(4000000/4000.0)));
  4573  0B98  3003               	movlw	3
  4574  0B99  1683               	bsf	3,5	;RP0=1, select bank1
  4575  0B9A  1303               	bcf	3,6	;RP1=0, select bank1
  4576  0B9B  00CB               	movwf	(??_setTransStat^(0+128)+1)
  4577  0B9C  3097               	movlw	151
  4578  0B9D  00CA               	movwf	??_setTransStat^(0+128)
  4579  0B9E                     u3677:	
  4580  0B9E  0BCA               	decfsz	??_setTransStat^(0+128),f
  4581  0B9F  2B9E               	goto	u3677
  4582  0BA0  0BCB               	decfsz	(??_setTransStat^(0+128)+1),f
  4583  0BA1  2B9E               	goto	u3677
  4584                           
  4585                           ;main.c: 253:         writeFrequency(730);
  4586  0BA2  30DA               	movlw	218
  4587  0BA3  1283               	bcf	3,5	;RP0=0, select bank0
  4588  0BA4  1303               	bcf	3,6	;RP1=0, select bank0
  4589  0BA5  00BF               	movwf	writeFrequency@f
  4590  0BA6  3002               	movlw	2
  4591  0BA7  00C0               	movwf	writeFrequency@f+1
  4592  0BA8  120A  118A  2777   	fcall	_writeFrequency
  4593  0BAB  0008               	return
  4594  0BAC                     __end_of_setTransStat:	
  4595                           
  4596                           	psect	text18
  4597  0777                     __ptext18:	
  4598 ;; *************** function _writeFrequency *****************
  4599 ;; Defined at:
  4600 ;;		line 15 in file "bh1514.c"
  4601 ;; Parameters:    Size  Location     Type
  4602 ;;  f               2   31[BANK0 ] unsigned int 
  4603 ;; Auto vars:     Size  Location     Type
  4604 ;;  r               2    2[BANK1 ] unsigned int 
  4605 ;;  buffer          2    0[BANK1 ] unsigned int 
  4606 ;;  i               1    4[BANK1 ] unsigned char 
  4607 ;; Return value:  Size  Location     Type
  4608 ;;                  1    wreg      void 
  4609 ;; Registers used:
  4610 ;;		wreg, status,2, status,0, pclath, cstack
  4611 ;; Tracked objects:
  4612 ;;		On entry : 0/0
  4613 ;;		On exit  : 0/0
  4614 ;;		Unchanged: 0/0
  4615 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4616 ;;      Params:         0       2       0       0       0
  4617 ;;      Locals:         0       0       5       0       0
  4618 ;;      Temps:          0       2       0       0       0
  4619 ;;      Totals:         0       4       5       0       0
  4620 ;;Total ram usage:        9 bytes
  4621 ;; Hardware stack levels used:    1
  4622 ;; Hardware stack levels required when called:    6
  4623 ;; This function calls:
  4624 ;;		_codFreq
  4625 ;; This function is called by:
  4626 ;;		_main
  4627 ;;		_setFrequency
  4628 ;;		_setTransStat
  4629 ;; This function uses a non-reentrant model
  4630 ;;
  4631                           
  4632                           
  4633                           ;psect for function _writeFrequency
  4634  0777                     _writeFrequency:	
  4635                           
  4636                           ;bh1514.c: 16:     unsigned int buffer;;bh1514.c: 17:     unsigned int r;;bh1514.c: 18: 
      +                              unsigned char i;;bh1514.c: 20:     buffer = codFreq(f);
  4637                           
  4638                           ;incstack = 0
  4639                           ; Regs used in _writeFrequency: [wreg+status,2+status,0+pclath+cstack]
  4640  0777  1283               	bcf	3,5	;RP0=0, select bank0
  4641  0778  1303               	bcf	3,6	;RP1=0, select bank0
  4642  0779  0840               	movf	writeFrequency@f+1,w
  4643  077A  00BE               	movwf	codFreq@f+1
  4644  077B  083F               	movf	writeFrequency@f,w
  4645  077C  00BD               	movwf	codFreq@f
  4646  077D  120A  158A  2178  120A  118A  	fcall	_codFreq
  4647  0782  1283               	bcf	3,5	;RP0=0, select bank0
  4648  0783  1303               	bcf	3,6	;RP1=0, select bank0
  4649  0784  083E               	movf	?_codFreq+1,w
  4650  0785  1683               	bsf	3,5	;RP0=1, select bank1
  4651  0786  1303               	bcf	3,6	;RP1=0, select bank1
  4652  0787  00C4               	movwf	(writeFrequency@buffer+1)^(0+128)
  4653  0788  1283               	bcf	3,5	;RP0=0, select bank0
  4654  0789  1303               	bcf	3,6	;RP1=0, select bank0
  4655  078A  083D               	movf	?_codFreq,w
  4656  078B  1683               	bsf	3,5	;RP0=1, select bank1
  4657  078C  1303               	bcf	3,6	;RP1=0, select bank1
  4658  078D  00C3               	movwf	writeFrequency@buffer^(0+128)
  4659                           
  4660                           ;bh1514.c: 22:     PORTCbits.RC5 = 1;
  4661  078E  1283               	bcf	3,5	;RP0=0, select bank0
  4662  078F  1303               	bcf	3,6	;RP1=0, select bank0
  4663  0790  1687               	bsf	7,5	;volatile
  4664                           
  4665                           ;bh1514.c: 23:     _delay((unsigned long)((1)*(4000000/4000.0)));
  4666  0791  30C7               	movlw	199
  4667  0792  1283               	bcf	3,5	;RP0=0, select bank0
  4668  0793  1303               	bcf	3,6	;RP1=0, select bank0
  4669  0794  00C1               	movwf	??_writeFrequency
  4670  0795                     u3687:	
  4671  0795  2F96               	nop2
  4672  0796  0BC1               	decfsz	??_writeFrequency,f
  4673  0797  2F95               	goto	u3687
  4674  0798  2F99               	nop2
  4675                           
  4676                           ;bh1514.c: 24:     for(i = 0; i < 16; i++){
  4677  0799  1683               	bsf	3,5	;RP0=1, select bank1
  4678  079A  1303               	bcf	3,6	;RP1=0, select bank1
  4679  079B  01C7               	clrf	writeFrequency@i^(0+128)
  4680  079C                     l3534:	
  4681                           
  4682                           ;bh1514.c: 25:         r = (buffer >> i) & 0x0001;
  4683  079C  0844               	movf	(writeFrequency@buffer+1)^(0+128),w
  4684  079D  1283               	bcf	3,5	;RP0=0, select bank0
  4685  079E  1303               	bcf	3,6	;RP1=0, select bank0
  4686  079F  00C2               	movwf	??_writeFrequency+1
  4687  07A0  1683               	bsf	3,5	;RP0=1, select bank1
  4688  07A1  1303               	bcf	3,6	;RP1=0, select bank1
  4689  07A2  0843               	movf	writeFrequency@buffer^(0+128),w
  4690  07A3  1283               	bcf	3,5	;RP0=0, select bank0
  4691  07A4  1303               	bcf	3,6	;RP1=0, select bank0
  4692  07A5  00C1               	movwf	??_writeFrequency
  4693  07A6  1683               	bsf	3,5	;RP0=1, select bank1
  4694  07A7  1303               	bcf	3,6	;RP1=0, select bank1
  4695  07A8  0A47               	incf	writeFrequency@i^(0+128),w
  4696  07A9  2FAF               	goto	u2854
  4697  07AA                     u2855:	
  4698  07AA  1283               	bcf	3,5	;RP0=0, select bank0
  4699  07AB  1303               	bcf	3,6	;RP1=0, select bank0
  4700  07AC  1003               	clrc
  4701  07AD  0CC2               	rrf	??_writeFrequency+1,f
  4702  07AE  0CC1               	rrf	??_writeFrequency,f
  4703  07AF                     u2854:	
  4704  07AF  3EFF               	addlw	-1
  4705  07B0  1D03               	skipz
  4706  07B1  2FAA               	goto	u2855
  4707  07B2  3001               	movlw	1
  4708  07B3  0541               	andwf	??_writeFrequency,w
  4709  07B4  1683               	bsf	3,5	;RP0=1, select bank1
  4710  07B5  1303               	bcf	3,6	;RP1=0, select bank1
  4711  07B6  00C5               	movwf	writeFrequency@r^(0+128)
  4712  07B7  3000               	movlw	0
  4713  07B8  1283               	bcf	3,5	;RP0=0, select bank0
  4714  07B9  1303               	bcf	3,6	;RP1=0, select bank0
  4715  07BA  0542               	andwf	??_writeFrequency+1,w
  4716  07BB  1683               	bsf	3,5	;RP0=1, select bank1
  4717  07BC  1303               	bcf	3,6	;RP1=0, select bank1
  4718  07BD  00C6               	movwf	(writeFrequency@r+1)^(0+128)
  4719                           
  4720                           ;bh1514.c: 26:         if(r == 1){
  4721  07BE  0345               	decf	writeFrequency@r^(0+128),w
  4722  07BF  0446               	iorwf	(writeFrequency@r+1)^(0+128),w
  4723  07C0  1D03               	btfss	3,2
  4724  07C1  2FC6               	goto	l538
  4725                           
  4726                           ;bh1514.c: 27:             PORTCbits.RC7 = 1;
  4727  07C2  1283               	bcf	3,5	;RP0=0, select bank0
  4728  07C3  1303               	bcf	3,6	;RP1=0, select bank0
  4729  07C4  1787               	bsf	7,7	;volatile
  4730                           
  4731                           ;bh1514.c: 28:         }else{
  4732  07C5  2FC9               	goto	l3538
  4733  07C6                     l538:	
  4734                           
  4735                           ;bh1514.c: 29:             PORTCbits.RC7 = 0;
  4736  07C6  1283               	bcf	3,5	;RP0=0, select bank0
  4737  07C7  1303               	bcf	3,6	;RP1=0, select bank0
  4738  07C8  1387               	bcf	7,7	;volatile
  4739  07C9                     l3538:	
  4740                           
  4741                           ;bh1514.c: 31:         _delay((unsigned long)((1)*(4000000/4000.0)));
  4742  07C9  30C7               	movlw	199
  4743  07CA  1283               	bcf	3,5	;RP0=0, select bank0
  4744  07CB  1303               	bcf	3,6	;RP1=0, select bank0
  4745  07CC  00C1               	movwf	??_writeFrequency
  4746  07CD                     u3697:	
  4747  07CD  2FCE               	nop2
  4748  07CE  0BC1               	decfsz	??_writeFrequency,f
  4749  07CF  2FCD               	goto	u3697
  4750  07D0  2FD1               	nop2
  4751                           
  4752                           ;bh1514.c: 32:         PORTCbits.RC6 = 1;
  4753  07D1  1283               	bcf	3,5	;RP0=0, select bank0
  4754  07D2  1303               	bcf	3,6	;RP1=0, select bank0
  4755  07D3  1707               	bsf	7,6	;volatile
  4756                           
  4757                           ;bh1514.c: 33:         _delay((unsigned long)((1)*(4000000/4000.0)));
  4758  07D4  30C7               	movlw	199
  4759  07D5  1283               	bcf	3,5	;RP0=0, select bank0
  4760  07D6  1303               	bcf	3,6	;RP1=0, select bank0
  4761  07D7  00C1               	movwf	??_writeFrequency
  4762  07D8                     u3707:	
  4763  07D8  2FD9               	nop2
  4764  07D9  0BC1               	decfsz	??_writeFrequency,f
  4765  07DA  2FD8               	goto	u3707
  4766  07DB  2FDC               	nop2
  4767                           
  4768                           ;bh1514.c: 34:         PORTCbits.RC6 = 0;
  4769  07DC  1283               	bcf	3,5	;RP0=0, select bank0
  4770  07DD  1303               	bcf	3,6	;RP1=0, select bank0
  4771  07DE  1307               	bcf	7,6	;volatile
  4772                           
  4773                           ;bh1514.c: 35:     }
  4774  07DF  3001               	movlw	1
  4775  07E0  00C1               	movwf	??_writeFrequency
  4776  07E1  0841               	movf	??_writeFrequency,w
  4777  07E2  1683               	bsf	3,5	;RP0=1, select bank1
  4778  07E3  1303               	bcf	3,6	;RP1=0, select bank1
  4779  07E4  07C7               	addwf	writeFrequency@i^(0+128),f
  4780  07E5  3010               	movlw	16
  4781  07E6  0247               	subwf	writeFrequency@i^(0+128),w
  4782  07E7  1C03               	skipc
  4783  07E8  2F9C               	goto	l3534
  4784                           
  4785                           ;bh1514.c: 36:     _delay((unsigned long)((1)*(4000000/4000.0)));
  4786  07E9  30C7               	movlw	199
  4787  07EA  1283               	bcf	3,5	;RP0=0, select bank0
  4788  07EB  1303               	bcf	3,6	;RP1=0, select bank0
  4789  07EC  00C1               	movwf	??_writeFrequency
  4790  07ED                     u3717:	
  4791  07ED  2FEE               	nop2
  4792  07EE  0BC1               	decfsz	??_writeFrequency,f
  4793  07EF  2FED               	goto	u3717
  4794  07F0  2FF1               	nop2
  4795                           
  4796                           ;bh1514.c: 37:     PORTCbits.RC5 = 0;
  4797  07F1  1283               	bcf	3,5	;RP0=0, select bank0
  4798  07F2  1303               	bcf	3,6	;RP1=0, select bank0
  4799  07F3  1287               	bcf	7,5	;volatile
  4800  07F4  0008               	return
  4801  07F5                     __end_of_writeFrequency:	
  4802                           
  4803                           	psect	text19
  4804  0978                     __ptext19:	
  4805 ;; *************** function _codFreq *****************
  4806 ;; Defined at:
  4807 ;;		line 6 in file "bh1514.c"
  4808 ;; Parameters:    Size  Location     Type
  4809 ;;  f               2   29[BANK0 ] unsigned int 
  4810 ;; Auto vars:     Size  Location     Type
  4811 ;;		None
  4812 ;; Return value:  Size  Location     Type
  4813 ;;                  2   29[BANK0 ] unsigned int 
  4814 ;; Registers used:
  4815 ;;		wreg
  4816 ;; Tracked objects:
  4817 ;;		On entry : 0/0
  4818 ;;		On exit  : 0/0
  4819 ;;		Unchanged: 0/0
  4820 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4821 ;;      Params:         0       2       0       0       0
  4822 ;;      Locals:         0       0       0       0       0
  4823 ;;      Temps:          0       0       0       0       0
  4824 ;;      Totals:         0       2       0       0       0
  4825 ;;Total ram usage:        2 bytes
  4826 ;; Hardware stack levels used:    1
  4827 ;; Hardware stack levels required when called:    5
  4828 ;; This function calls:
  4829 ;;		Nothing
  4830 ;; This function is called by:
  4831 ;;		_writeFrequency
  4832 ;; This function uses a non-reentrant model
  4833 ;;
  4834                           
  4835                           
  4836                           ;psect for function _codFreq
  4837  0978                     _codFreq:	
  4838                           
  4839                           ;bh1514.c: 8:         f = f | 0b0100100000000000;
  4840                           
  4841                           ;incstack = 0
  4842                           ; Regs used in _codFreq: [wreg]
  4843  0978  3000               	movlw	0
  4844  0979  1283               	bcf	3,5	;RP0=0, select bank0
  4845  097A  1303               	bcf	3,6	;RP1=0, select bank0
  4846  097B  043D               	iorwf	codFreq@f,w
  4847  097C  00BD               	movwf	codFreq@f
  4848  097D  3048               	movlw	72
  4849  097E  043E               	iorwf	codFreq@f+1,w
  4850  097F  00BE               	movwf	codFreq@f+1
  4851                           
  4852                           ;bh1514.c: 12:     return f;
  4853                           
  4854                           ;bh1514.c: 9:     }else{
  4855  0980  0008               	return
  4856  0981                     __end_of_codFreq:	
  4857                           
  4858                           	psect	text20
  4859  0AC6                     __ptext20:	
  4860 ;; *************** function _initLCD *****************
  4861 ;; Defined at:
  4862 ;;		line 5 in file "lcd.c"
  4863 ;; Parameters:    Size  Location     Type
  4864 ;;		None
  4865 ;; Auto vars:     Size  Location     Type
  4866 ;;		None
  4867 ;; Return value:  Size  Location     Type
  4868 ;;                  1    wreg      void 
  4869 ;; Registers used:
  4870 ;;		wreg, status,2, status,0, pclath, cstack
  4871 ;; Tracked objects:
  4872 ;;		On entry : 0/0
  4873 ;;		On exit  : 0/0
  4874 ;;		Unchanged: 0/0
  4875 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4876 ;;      Params:         0       0       0       0       0
  4877 ;;      Locals:         0       0       0       0       0
  4878 ;;      Temps:          0       0       2       0       0
  4879 ;;      Totals:         0       0       2       0       0
  4880 ;;Total ram usage:        2 bytes
  4881 ;; Hardware stack levels used:    1
  4882 ;; Hardware stack levels required when called:    8
  4883 ;; This function calls:
  4884 ;;		_OpenXLCD
  4885 ;;		_SendCMDLCD
  4886 ;; This function is called by:
  4887 ;;		_config
  4888 ;; This function uses a non-reentrant model
  4889 ;;
  4890                           
  4891                           
  4892                           ;psect for function _initLCD
  4893  0AC6                     _initLCD:	
  4894                           
  4895                           ;lcd.c: 6:     OpenXLCD(0b00101100 & 0b00111000);
  4896                           
  4897                           ;incstack = 0
  4898 ;; hardware stack exceeded
  4899                           ; Regs used in _initLCD: [wreg+status,2+status,0+pclath+cstack]
  4900  0AC6  3028               	movlw	40
  4901  0AC7  120A  118A  26BF  120A  158A  	fcall	_OpenXLCD
  4902                           
  4903                           ;lcd.c: 7:     _delay((unsigned long)((100)*(4000000/4000.0)));
  4904  0ACC  3082               	movlw	130
  4905  0ACD  1683               	bsf	3,5	;RP0=1, select bank1
  4906  0ACE  1303               	bcf	3,6	;RP1=0, select bank1
  4907  0ACF  00C4               	movwf	(??_initLCD^(0+128)+1)
  4908  0AD0  30DD               	movlw	221
  4909  0AD1  00C3               	movwf	??_initLCD^(0+128)
  4910  0AD2                     u3727:	
  4911  0AD2  0BC3               	decfsz	??_initLCD^(0+128),f
  4912  0AD3  2AD2               	goto	u3727
  4913  0AD4  0BC4               	decfsz	(??_initLCD^(0+128)+1),f
  4914  0AD5  2AD2               	goto	u3727
  4915                           
  4916                           ;lcd.c: 8:     SendCMDLCD(0b00001101);
  4917  0AD6  300D               	movlw	13
  4918  0AD7  120A  158A  21D8  120A  158A  	fcall	_SendCMDLCD
  4919                           
  4920                           ;lcd.c: 9:     SendCMDLCD(0b00000110);
  4921  0ADC  3006               	movlw	6
  4922  0ADD  120A  158A  21D8  120A  158A  	fcall	_SendCMDLCD
  4923                           
  4924                           ;lcd.c: 10:     _delay((unsigned long)((50)*(4000000/4000.0)));
  4925  0AE2  3041               	movlw	65
  4926  0AE3  1683               	bsf	3,5	;RP0=1, select bank1
  4927  0AE4  1303               	bcf	3,6	;RP1=0, select bank1
  4928  0AE5  00C4               	movwf	(??_initLCD^(0+128)+1)
  4929  0AE6  30ED               	movlw	237
  4930  0AE7  00C3               	movwf	??_initLCD^(0+128)
  4931  0AE8                     u3737:	
  4932  0AE8  0BC3               	decfsz	??_initLCD^(0+128),f
  4933  0AE9  2AE8               	goto	u3737
  4934  0AEA  0BC4               	decfsz	(??_initLCD^(0+128)+1),f
  4935  0AEB  2AE8               	goto	u3737
  4936  0AEC  2AED               	nop2
  4937  0AED  0008               	return
  4938  0AEE                     __end_of_initLCD:	
  4939                           
  4940                           	psect	text21
  4941  09D8                     __ptext21:	
  4942 ;; *************** function _SendCMDLCD *****************
  4943 ;; Defined at:
  4944 ;;		line 27 in file "lcd.c"
  4945 ;; Parameters:    Size  Location     Type
  4946 ;;  CMD             1    wreg     unsigned char 
  4947 ;; Auto vars:     Size  Location     Type
  4948 ;;  CMD             1   33[BANK0 ] unsigned char 
  4949 ;; Return value:  Size  Location     Type
  4950 ;;                  1    wreg      void 
  4951 ;; Registers used:
  4952 ;;		wreg, status,2, status,0, pclath, cstack
  4953 ;; Tracked objects:
  4954 ;;		On entry : 0/0
  4955 ;;		On exit  : 0/0
  4956 ;;		Unchanged: 0/0
  4957 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4958 ;;      Params:         0       0       0       0       0
  4959 ;;      Locals:         0       1       0       0       0
  4960 ;;      Temps:          0       0       0       0       0
  4961 ;;      Totals:         0       1       0       0       0
  4962 ;;Total ram usage:        1 bytes
  4963 ;; Hardware stack levels used:    1
  4964 ;; Hardware stack levels required when called:    7
  4965 ;; This function calls:
  4966 ;;		_BusyXLCD
  4967 ;;		_WriteCmdXLCD
  4968 ;; This function is called by:
  4969 ;;		_initLCD
  4970 ;; This function uses a non-reentrant model
  4971 ;;
  4972                           
  4973                           
  4974                           ;psect for function _SendCMDLCD
  4975  09D8                     _SendCMDLCD:	
  4976                           
  4977                           ;incstack = 0
  4978 ;; hardware stack exceeded
  4979                           ; Regs used in _SendCMDLCD: [wreg+status,2+status,0+pclath+cstack]
  4980                           ;SendCMDLCD@CMD stored from wreg
  4981  09D8  1283               	bcf	3,5	;RP0=0, select bank0
  4982  09D9  1303               	bcf	3,6	;RP1=0, select bank0
  4983  09DA  00C1               	movwf	SendCMDLCD@CMD
  4984  09DB                     l2544:	
  4985                           ;lcd.c: 28:     while(BusyXLCD())continue;
  4986                           
  4987  09DB  120A  158A  218D  120A  158A  	fcall	_BusyXLCD
  4988  09E0  3A00               	xorlw	0
  4989  09E1  1D03               	skipz
  4990  09E2  29DB               	goto	l2544
  4991                           
  4992                           ;lcd.c: 29:     WriteCmdXLCD(CMD);
  4993  09E3  1283               	bcf	3,5	;RP0=0, select bank0
  4994  09E4  1303               	bcf	3,6	;RP1=0, select bank0
  4995  09E5  0841               	movf	SendCMDLCD@CMD,w
  4996  09E6  120A  158A  2552   	fcall	_WriteCmdXLCD
  4997  09E9  0008               	return
  4998  09EA                     __end_of_SendCMDLCD:	
  4999                           
  5000                           	psect	text22
  5001  06BF                     __ptext22:	
  5002 ;; *************** function _OpenXLCD *****************
  5003 ;; Defined at:
  5004 ;;		line 40 in file "lcd_pic16.c"
  5005 ;; Parameters:    Size  Location     Type
  5006 ;;  lcdtype         1    wreg     unsigned char 
  5007 ;; Auto vars:     Size  Location     Type
  5008 ;;  lcdtype         1   35[BANK0 ] unsigned char 
  5009 ;; Return value:  Size  Location     Type
  5010 ;;                  1    wreg      void 
  5011 ;; Registers used:
  5012 ;;		wreg, status,2, status,0, pclath, cstack
  5013 ;; Tracked objects:
  5014 ;;		On entry : 0/0
  5015 ;;		On exit  : 0/0
  5016 ;;		Unchanged: 0/0
  5017 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5018 ;;      Params:         0       0       0       0       0
  5019 ;;      Locals:         0       1       0       0       0
  5020 ;;      Temps:          0       2       0       0       0
  5021 ;;      Totals:         0       3       0       0       0
  5022 ;;Total ram usage:        3 bytes
  5023 ;; Hardware stack levels used:    1
  5024 ;; Hardware stack levels required when called:    7
  5025 ;; This function calls:
  5026 ;;		_BusyXLCD
  5027 ;;		_DelayPORXLCD
  5028 ;;		_SetDDRamAddr
  5029 ;;		_WriteCmdXLCD
  5030 ;; This function is called by:
  5031 ;;		_initLCD
  5032 ;; This function uses a non-reentrant model
  5033 ;;
  5034                           
  5035                           
  5036                           ;psect for function _OpenXLCD
  5037  06BF                     _OpenXLCD:	
  5038                           
  5039                           ;incstack = 0
  5040 ;; hardware stack exceeded
  5041                           ; Regs used in _OpenXLCD: [wreg+status,2+status,0+pclath+cstack]
  5042                           ;OpenXLCD@lcdtype stored from wreg
  5043  06BF  1283               	bcf	3,5	;RP0=0, select bank0
  5044  06C0  1303               	bcf	3,6	;RP1=0, select bank0
  5045  06C1  00C3               	movwf	OpenXLCD@lcdtype
  5046                           
  5047                           ;lcd_pic16.c: 40: void OpenXLCD(unsigned char lcdtype);lcd_pic16.c: 41: {;lcd_pic16.c: 4
      +                          7:         PORTB &= 0x0f;
  5048  06C2  300F               	movlw	15
  5049  06C3  00C1               	movwf	??_OpenXLCD
  5050  06C4  0841               	movf	??_OpenXLCD,w
  5051  06C5  0586               	andwf	6,f	;volatile
  5052                           
  5053                           ;lcd_pic16.c: 48:         TRISB &= 0x0F;
  5054  06C6  300F               	movlw	15
  5055  06C7  00C1               	movwf	??_OpenXLCD
  5056  06C8  0841               	movf	??_OpenXLCD,w
  5057  06C9  1683               	bsf	3,5	;RP0=1, select bank1
  5058  06CA  1303               	bcf	3,6	;RP1=0, select bank1
  5059  06CB  0586               	andwf	6,f	;volatile
  5060                           
  5061                           ;lcd_pic16.c: 54:         TRISBbits.TRISB2 = 0;
  5062  06CC  1106               	bcf	6,2	;volatile
  5063                           
  5064                           ;lcd_pic16.c: 55:         TRISBbits.TRISB1 = 0;
  5065  06CD  1086               	bcf	6,1	;volatile
  5066                           
  5067                           ;lcd_pic16.c: 56:         TRISBbits.TRISB3 = 0;
  5068  06CE  1186               	bcf	6,3	;volatile
  5069                           
  5070                           ;lcd_pic16.c: 57:         PORTBbits.RB2 = 0;
  5071  06CF  1283               	bcf	3,5	;RP0=0, select bank0
  5072  06D0  1303               	bcf	3,6	;RP1=0, select bank0
  5073  06D1  1106               	bcf	6,2	;volatile
  5074                           
  5075                           ;lcd_pic16.c: 58:         PORTBbits.RB1 = 0;
  5076  06D2  1086               	bcf	6,1	;volatile
  5077                           
  5078                           ;lcd_pic16.c: 59:         PORTBbits.RB3 = 0;
  5079  06D3  1186               	bcf	6,3	;volatile
  5080                           
  5081                           ;lcd_pic16.c: 62:         DelayPORXLCD();
  5082  06D4  120A  158A  2181  120A  118A  	fcall	_DelayPORXLCD
  5083                           
  5084                           ;lcd_pic16.c: 64:        WriteCmdXLCD(0x30);
  5085  06D9  3030               	movlw	48
  5086  06DA  120A  158A  2552  120A  118A  	fcall	_WriteCmdXLCD
  5087                           
  5088                           ;lcd_pic16.c: 65:          _delay((unsigned long)((5)*(4000000/4000.0)));
  5089  06DF  3007               	movlw	7
  5090  06E0  1283               	bcf	3,5	;RP0=0, select bank0
  5091  06E1  1303               	bcf	3,6	;RP1=0, select bank0
  5092  06E2  00C2               	movwf	??_OpenXLCD+1
  5093  06E3  307C               	movlw	124
  5094  06E4  00C1               	movwf	??_OpenXLCD
  5095  06E5                     u3747:	
  5096  06E5  0BC1               	decfsz	??_OpenXLCD,f
  5097  06E6  2EE5               	goto	u3747
  5098  06E7  0BC2               	decfsz	??_OpenXLCD+1,f
  5099  06E8  2EE5               	goto	u3747
  5100  06E9  0000               	nop
  5101                           
  5102                           ;lcd_pic16.c: 67:        WriteCmdXLCD(0x30);
  5103  06EA  3030               	movlw	48
  5104  06EB  120A  158A  2552  120A  118A  	fcall	_WriteCmdXLCD
  5105                           
  5106                           ;lcd_pic16.c: 68:          _delay((unsigned long)((1)*(4000000/4000.0)));
  5107  06F0  30C7               	movlw	199
  5108  06F1  1283               	bcf	3,5	;RP0=0, select bank0
  5109  06F2  1303               	bcf	3,6	;RP1=0, select bank0
  5110  06F3  00C1               	movwf	??_OpenXLCD
  5111  06F4                     u3757:	
  5112  06F4  2EF5               	nop2
  5113  06F5  0BC1               	decfsz	??_OpenXLCD,f
  5114  06F6  2EF4               	goto	u3757
  5115  06F7  2EF8               	nop2
  5116                           
  5117                           ;lcd_pic16.c: 71:        WriteCmdXLCD(0x32);
  5118  06F8  3032               	movlw	50
  5119  06F9  120A  158A  2552  120A  118A  	fcall	_WriteCmdXLCD
  5120  06FE                     l2482:	
  5121                           ;lcd_pic16.c: 72:       while( BusyXLCD() );
  5122                           
  5123  06FE  120A  158A  218D  120A  118A  	fcall	_BusyXLCD
  5124  0703  3A00               	xorlw	0
  5125  0704  1D03               	skipz
  5126  0705  2EFE               	goto	l2482
  5127  0706                     l2484:	
  5128  0706  120A  158A  218D  120A  118A  	fcall	_BusyXLCD
  5129  070B  3A00               	xorlw	0
  5130  070C  1D03               	skipz
  5131  070D  2F06               	goto	l2484
  5132                           
  5133                           ;lcd_pic16.c: 78:         WriteCmdXLCD(lcdtype);
  5134  070E  1283               	bcf	3,5	;RP0=0, select bank0
  5135  070F  1303               	bcf	3,6	;RP1=0, select bank0
  5136  0710  0843               	movf	OpenXLCD@lcdtype,w
  5137  0711  120A  158A  2552  120A  118A  	fcall	_WriteCmdXLCD
  5138  0716                     l2488:	
  5139                           ;lcd_pic16.c: 81:         while(BusyXLCD());
  5140                           
  5141  0716  120A  158A  218D  120A  118A  	fcall	_BusyXLCD
  5142  071B  3A00               	xorlw	0
  5143  071C  1D03               	skipz
  5144  071D  2F16               	goto	l2488
  5145                           
  5146                           ;lcd_pic16.c: 82:         WriteCmdXLCD(0b00001011&0b00001101&0b00001110);
  5147  071E  3008               	movlw	8
  5148  071F  120A  158A  2552  120A  118A  	fcall	_WriteCmdXLCD
  5149  0724                     l2492:	
  5150                           ;lcd_pic16.c: 83:         while(BusyXLCD());
  5151                           
  5152  0724  120A  158A  218D  120A  118A  	fcall	_BusyXLCD
  5153  0729  3A00               	xorlw	0
  5154  072A  1D03               	skipz
  5155  072B  2F24               	goto	l2492
  5156                           
  5157                           ;lcd_pic16.c: 84:         WriteCmdXLCD(0b00001111&0b00001111&0b00001111);
  5158  072C  300F               	movlw	15
  5159  072D  120A  158A  2552  120A  118A  	fcall	_WriteCmdXLCD
  5160  0732                     l2496:	
  5161                           ;lcd_pic16.c: 87:         while(BusyXLCD());
  5162                           
  5163  0732  120A  158A  218D  120A  118A  	fcall	_BusyXLCD
  5164  0737  3A00               	xorlw	0
  5165  0738  1D03               	skipz
  5166  0739  2F32               	goto	l2496
  5167                           
  5168                           ;lcd_pic16.c: 88:         WriteCmdXLCD(0x01);
  5169  073A  3001               	movlw	1
  5170  073B  120A  158A  2552  120A  118A  	fcall	_WriteCmdXLCD
  5171  0740                     l2500:	
  5172                           ;lcd_pic16.c: 91:         while(BusyXLCD());
  5173                           
  5174  0740  120A  158A  218D  120A  118A  	fcall	_BusyXLCD
  5175  0745  3A00               	xorlw	0
  5176  0746  1D03               	skipz
  5177  0747  2F40               	goto	l2500
  5178                           
  5179                           ;lcd_pic16.c: 92:         WriteCmdXLCD(0b00000101);
  5180  0748  3005               	movlw	5
  5181  0749  120A  158A  2552  120A  118A  	fcall	_WriteCmdXLCD
  5182  074E                     l2504:	
  5183                           ;lcd_pic16.c: 94:    while(BusyXLCD());
  5184                           
  5185  074E  120A  158A  218D  120A  118A  	fcall	_BusyXLCD
  5186  0753  3A00               	xorlw	0
  5187  0754  1D03               	skipz
  5188  0755  2F4E               	goto	l2504
  5189                           
  5190                           ;lcd_pic16.c: 95:         WriteCmdXLCD(0x06);
  5191  0756  3006               	movlw	6
  5192  0757  120A  158A  2552  120A  118A  	fcall	_WriteCmdXLCD
  5193  075C                     l2508:	
  5194                           ;lcd_pic16.c: 97:         while(BusyXLCD());
  5195                           
  5196  075C  120A  158A  218D  120A  118A  	fcall	_BusyXLCD
  5197  0761  3A00               	xorlw	0
  5198  0762  1D03               	skipz
  5199  0763  2F5C               	goto	l2508
  5200                           
  5201                           ;lcd_pic16.c: 98:         SetDDRamAddr(0x80);
  5202  0764  3080               	movlw	128
  5203  0765  120A  158A  25EC  120A  118A  	fcall	_SetDDRamAddr
  5204  076A                     l2512:	
  5205                           ;lcd_pic16.c: 100:         while(BusyXLCD());
  5206                           
  5207  076A  120A  158A  218D  120A  118A  	fcall	_BusyXLCD
  5208  076F  3A00               	xorlw	0
  5209  0770  1D03               	skipz
  5210  0771  2F6A               	goto	l2512
  5211                           
  5212                           ;lcd_pic16.c: 101:         WriteCmdXLCD(0b00001101);
  5213  0772  300D               	movlw	13
  5214  0773  120A  158A  2552   	fcall	_WriteCmdXLCD
  5215  0776  0008               	return
  5216  0777                     __end_of_OpenXLCD:	
  5217                           
  5218                           	psect	text23
  5219  0D52                     __ptext23:	
  5220 ;; *************** function _WriteCmdXLCD *****************
  5221 ;; Defined at:
  5222 ;;		line 164 in file "lcd_pic16.c"
  5223 ;; Parameters:    Size  Location     Type
  5224 ;;  cmd             1    wreg     unsigned char 
  5225 ;; Auto vars:     Size  Location     Type
  5226 ;;  cmd             1   32[BANK0 ] unsigned char 
  5227 ;; Return value:  Size  Location     Type
  5228 ;;                  1    wreg      void 
  5229 ;; Registers used:
  5230 ;;		wreg, status,2, status,0, pclath, cstack
  5231 ;; Tracked objects:
  5232 ;;		On entry : 0/0
  5233 ;;		On exit  : 0/0
  5234 ;;		Unchanged: 0/0
  5235 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5236 ;;      Params:         0       0       0       0       0
  5237 ;;      Locals:         0       1       0       0       0
  5238 ;;      Temps:          0       2       0       0       0
  5239 ;;      Totals:         0       3       0       0       0
  5240 ;;Total ram usage:        3 bytes
  5241 ;; Hardware stack levels used:    1
  5242 ;; Hardware stack levels required when called:    6
  5243 ;; This function calls:
  5244 ;;		_DelayFor18TCY
  5245 ;; This function is called by:
  5246 ;;		_OpenXLCD
  5247 ;;		_SendCMDLCD
  5248 ;; This function uses a non-reentrant model
  5249 ;;
  5250                           
  5251                           
  5252                           ;psect for function _WriteCmdXLCD
  5253  0D52                     _WriteCmdXLCD:	
  5254                           
  5255                           ;incstack = 0
  5256 ;; hardware stack exceeded
  5257                           ; Regs used in _WriteCmdXLCD: [wreg+status,2+status,0+pclath+cstack]
  5258                           ;WriteCmdXLCD@cmd stored from wreg
  5259  0D52  1283               	bcf	3,5	;RP0=0, select bank0
  5260  0D53  1303               	bcf	3,6	;RP1=0, select bank0
  5261  0D54  00C0               	movwf	WriteCmdXLCD@cmd
  5262                           
  5263                           ;lcd_pic16.c: 178:         TRISB &= 0x0f;
  5264  0D55  300F               	movlw	15
  5265  0D56  00BE               	movwf	??_WriteCmdXLCD
  5266  0D57  083E               	movf	??_WriteCmdXLCD,w
  5267  0D58  1683               	bsf	3,5	;RP0=1, select bank1
  5268  0D59  1303               	bcf	3,6	;RP1=0, select bank1
  5269  0D5A  0586               	andwf	6,f	;volatile
  5270                           
  5271                           ;lcd_pic16.c: 179:         PORTB &= 0x0f;
  5272  0D5B  300F               	movlw	15
  5273  0D5C  1283               	bcf	3,5	;RP0=0, select bank0
  5274  0D5D  1303               	bcf	3,6	;RP1=0, select bank0
  5275  0D5E  00BE               	movwf	??_WriteCmdXLCD
  5276  0D5F  083E               	movf	??_WriteCmdXLCD,w
  5277  0D60  0586               	andwf	6,f	;volatile
  5278                           
  5279                           ;lcd_pic16.c: 180:         PORTB |= cmd&0xf0;
  5280  0D61  0840               	movf	WriteCmdXLCD@cmd,w
  5281  0D62  39F0               	andlw	240
  5282  0D63  00BE               	movwf	??_WriteCmdXLCD
  5283  0D64  083E               	movf	??_WriteCmdXLCD,w
  5284  0D65  0486               	iorwf	6,f	;volatile
  5285                           
  5286                           ;lcd_pic16.c: 186:         PORTBbits.RB2 = 0;
  5287  0D66  1106               	bcf	6,2	;volatile
  5288                           
  5289                           ;lcd_pic16.c: 187:         PORTBbits.RB1 = 0;
  5290  0D67  1086               	bcf	6,1	;volatile
  5291                           
  5292                           ;lcd_pic16.c: 188:         DelayFor18TCY();
  5293  0D68  120A  158A  2162  120A  158A  	fcall	_DelayFor18TCY
  5294                           
  5295                           ;lcd_pic16.c: 189:         PORTBbits.RB3 = 1;
  5296  0D6D  1283               	bcf	3,5	;RP0=0, select bank0
  5297  0D6E  1303               	bcf	3,6	;RP1=0, select bank0
  5298  0D6F  1586               	bsf	6,3	;volatile
  5299                           
  5300                           ;lcd_pic16.c: 190:         DelayFor18TCY();
  5301  0D70  120A  158A  2162  120A  158A  	fcall	_DelayFor18TCY
  5302                           
  5303                           ;lcd_pic16.c: 191:         PORTBbits.RB3 = 0;
  5304  0D75  1283               	bcf	3,5	;RP0=0, select bank0
  5305  0D76  1303               	bcf	3,6	;RP1=0, select bank0
  5306  0D77  1186               	bcf	6,3	;volatile
  5307                           
  5308                           ;lcd_pic16.c: 193:         PORTB &= 0x0f;
  5309  0D78  300F               	movlw	15
  5310  0D79  00BE               	movwf	??_WriteCmdXLCD
  5311  0D7A  083E               	movf	??_WriteCmdXLCD,w
  5312  0D7B  0586               	andwf	6,f	;volatile
  5313                           
  5314                           ;lcd_pic16.c: 194:         PORTB |= (cmd<<4)&0xf0;
  5315  0D7C  0840               	movf	WriteCmdXLCD@cmd,w
  5316  0D7D  00BE               	movwf	??_WriteCmdXLCD
  5317  0D7E  3003               	movlw	3
  5318  0D7F                     u1445:	
  5319  0D7F  1003               	clrc
  5320  0D80  0DBE               	rlf	??_WriteCmdXLCD,f
  5321  0D81  3EFF               	addlw	-1
  5322  0D82  1D03               	skipz
  5323  0D83  2D7F               	goto	u1445
  5324  0D84  1003               	clrc
  5325  0D85  0D3E               	rlf	??_WriteCmdXLCD,w
  5326  0D86  39F0               	andlw	240
  5327  0D87  00BF               	movwf	??_WriteCmdXLCD+1
  5328  0D88  083F               	movf	??_WriteCmdXLCD+1,w
  5329  0D89  0486               	iorwf	6,f	;volatile
  5330                           
  5331                           ;lcd_pic16.c: 199:         DelayFor18TCY();
  5332  0D8A  120A  158A  2162  120A  158A  	fcall	_DelayFor18TCY
  5333                           
  5334                           ;lcd_pic16.c: 200:         PORTBbits.RB3 = 1;
  5335  0D8F  1283               	bcf	3,5	;RP0=0, select bank0
  5336  0D90  1303               	bcf	3,6	;RP1=0, select bank0
  5337  0D91  1586               	bsf	6,3	;volatile
  5338                           
  5339                           ;lcd_pic16.c: 201:         DelayFor18TCY();
  5340  0D92  120A  158A  2162   	fcall	_DelayFor18TCY
  5341                           
  5342                           ;lcd_pic16.c: 202:         PORTBbits.RB3 = 0;
  5343  0D95  1283               	bcf	3,5	;RP0=0, select bank0
  5344  0D96  1303               	bcf	3,6	;RP1=0, select bank0
  5345  0D97  1186               	bcf	6,3	;volatile
  5346                           
  5347                           ;lcd_pic16.c: 204:         TRISB |= 0xf0;
  5348  0D98  30F0               	movlw	240
  5349  0D99  00BE               	movwf	??_WriteCmdXLCD
  5350  0D9A  083E               	movf	??_WriteCmdXLCD,w
  5351  0D9B  1683               	bsf	3,5	;RP0=1, select bank1
  5352  0D9C  1303               	bcf	3,6	;RP1=0, select bank1
  5353  0D9D  0486               	iorwf	6,f	;volatile
  5354  0D9E  0008               	return
  5355  0D9F                     __end_of_WriteCmdXLCD:	
  5356                           
  5357                           	psect	text24
  5358  0DEC                     __ptext24:	
  5359 ;; *************** function _SetDDRamAddr *****************
  5360 ;; Defined at:
  5361 ;;		line 217 in file "lcd_pic16.c"
  5362 ;; Parameters:    Size  Location     Type
  5363 ;;  DDaddr          1    wreg     unsigned char 
  5364 ;; Auto vars:     Size  Location     Type
  5365 ;;  DDaddr          1   32[BANK0 ] unsigned char 
  5366 ;; Return value:  Size  Location     Type
  5367 ;;                  1    wreg      void 
  5368 ;; Registers used:
  5369 ;;		wreg, status,2, status,0, pclath, cstack
  5370 ;; Tracked objects:
  5371 ;;		On entry : 0/0
  5372 ;;		On exit  : 0/0
  5373 ;;		Unchanged: 0/0
  5374 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5375 ;;      Params:         0       0       0       0       0
  5376 ;;      Locals:         0       1       0       0       0
  5377 ;;      Temps:          0       2       0       0       0
  5378 ;;      Totals:         0       3       0       0       0
  5379 ;;Total ram usage:        3 bytes
  5380 ;; Hardware stack levels used:    1
  5381 ;; Hardware stack levels required when called:    6
  5382 ;; This function calls:
  5383 ;;		_DelayFor18TCY
  5384 ;; This function is called by:
  5385 ;;		_main
  5386 ;;		_start
  5387 ;;		_setFrequency
  5388 ;;		_OpenXLCD
  5389 ;; This function uses a non-reentrant model
  5390 ;;
  5391                           
  5392                           
  5393                           ;psect for function _SetDDRamAddr
  5394  0DEC                     _SetDDRamAddr:	
  5395                           
  5396                           ;incstack = 0
  5397                           ; Regs used in _SetDDRamAddr: [wreg+status,2+status,0+pclath+cstack]
  5398                           ;SetDDRamAddr@DDaddr stored from wreg
  5399  0DEC  1283               	bcf	3,5	;RP0=0, select bank0
  5400  0DED  1303               	bcf	3,6	;RP1=0, select bank0
  5401  0DEE  00C0               	movwf	SetDDRamAddr@DDaddr
  5402                           
  5403                           ;lcd_pic16.c: 217: void SetDDRamAddr(unsigned char DDaddr);lcd_pic16.c: 218: {;lcd_pic16
      +                          .c: 232:         TRISB &= 0x0f;
  5404  0DEF  300F               	movlw	15
  5405  0DF0  00BE               	movwf	??_SetDDRamAddr
  5406  0DF1  083E               	movf	??_SetDDRamAddr,w
  5407  0DF2  1683               	bsf	3,5	;RP0=1, select bank1
  5408  0DF3  1303               	bcf	3,6	;RP1=0, select bank1
  5409  0DF4  0586               	andwf	6,f	;volatile
  5410                           
  5411                           ;lcd_pic16.c: 233:         PORTB &= 0x0f;
  5412  0DF5  300F               	movlw	15
  5413  0DF6  1283               	bcf	3,5	;RP0=0, select bank0
  5414  0DF7  1303               	bcf	3,6	;RP1=0, select bank0
  5415  0DF8  00BE               	movwf	??_SetDDRamAddr
  5416  0DF9  083E               	movf	??_SetDDRamAddr,w
  5417  0DFA  0586               	andwf	6,f	;volatile
  5418                           
  5419                           ;lcd_pic16.c: 234:         PORTB |= ((DDaddr | 0b10000000) & 0xf0);
  5420  0DFB  0840               	movf	SetDDRamAddr@DDaddr,w
  5421  0DFC  3880               	iorlw	128
  5422  0DFD  39F0               	andlw	240
  5423  0DFE  00BE               	movwf	??_SetDDRamAddr
  5424  0DFF  083E               	movf	??_SetDDRamAddr,w
  5425  0E00  0486               	iorwf	6,f	;volatile
  5426                           
  5427                           ;lcd_pic16.c: 240:         PORTBbits.RB2 = 0;
  5428  0E01  1106               	bcf	6,2	;volatile
  5429                           
  5430                           ;lcd_pic16.c: 241:         PORTBbits.RB1 = 0;
  5431  0E02  1086               	bcf	6,1	;volatile
  5432                           
  5433                           ;lcd_pic16.c: 242:         DelayFor18TCY();
  5434  0E03  120A  158A  2162  120A  158A  	fcall	_DelayFor18TCY
  5435                           
  5436                           ;lcd_pic16.c: 243:         PORTBbits.RB3 = 1;
  5437  0E08  1283               	bcf	3,5	;RP0=0, select bank0
  5438  0E09  1303               	bcf	3,6	;RP1=0, select bank0
  5439  0E0A  1586               	bsf	6,3	;volatile
  5440                           
  5441                           ;lcd_pic16.c: 244:         DelayFor18TCY();
  5442  0E0B  120A  158A  2162  120A  158A  	fcall	_DelayFor18TCY
  5443                           
  5444                           ;lcd_pic16.c: 245:         PORTBbits.RB3 = 0;
  5445  0E10  1283               	bcf	3,5	;RP0=0, select bank0
  5446  0E11  1303               	bcf	3,6	;RP1=0, select bank0
  5447  0E12  1186               	bcf	6,3	;volatile
  5448                           
  5449                           ;lcd_pic16.c: 247:         PORTB &= 0x0f;
  5450  0E13  300F               	movlw	15
  5451  0E14  00BE               	movwf	??_SetDDRamAddr
  5452  0E15  083E               	movf	??_SetDDRamAddr,w
  5453  0E16  0586               	andwf	6,f	;volatile
  5454                           
  5455                           ;lcd_pic16.c: 248:         PORTB |= ((DDaddr<<4)&0xf0);
  5456  0E17  0840               	movf	SetDDRamAddr@DDaddr,w
  5457  0E18  00BE               	movwf	??_SetDDRamAddr
  5458  0E19  3003               	movlw	3
  5459  0E1A                     u1435:	
  5460  0E1A  1003               	clrc
  5461  0E1B  0DBE               	rlf	??_SetDDRamAddr,f
  5462  0E1C  3EFF               	addlw	-1
  5463  0E1D  1D03               	skipz
  5464  0E1E  2E1A               	goto	u1435
  5465  0E1F  1003               	clrc
  5466  0E20  0D3E               	rlf	??_SetDDRamAddr,w
  5467  0E21  39F0               	andlw	240
  5468  0E22  00BF               	movwf	??_SetDDRamAddr+1
  5469  0E23  083F               	movf	??_SetDDRamAddr+1,w
  5470  0E24  0486               	iorwf	6,f	;volatile
  5471                           
  5472                           ;lcd_pic16.c: 253:         DelayFor18TCY();
  5473  0E25  120A  158A  2162  120A  158A  	fcall	_DelayFor18TCY
  5474                           
  5475                           ;lcd_pic16.c: 254:         PORTBbits.RB3 = 1;
  5476  0E2A  1283               	bcf	3,5	;RP0=0, select bank0
  5477  0E2B  1303               	bcf	3,6	;RP1=0, select bank0
  5478  0E2C  1586               	bsf	6,3	;volatile
  5479                           
  5480                           ;lcd_pic16.c: 255:         DelayFor18TCY();
  5481  0E2D  120A  158A  2162   	fcall	_DelayFor18TCY
  5482                           
  5483                           ;lcd_pic16.c: 256:         PORTBbits.RB3 = 0;
  5484  0E30  1283               	bcf	3,5	;RP0=0, select bank0
  5485  0E31  1303               	bcf	3,6	;RP1=0, select bank0
  5486  0E32  1186               	bcf	6,3	;volatile
  5487                           
  5488                           ;lcd_pic16.c: 258:         TRISB |= 0xf0;
  5489  0E33  30F0               	movlw	240
  5490  0E34  00BE               	movwf	??_SetDDRamAddr
  5491  0E35  083E               	movf	??_SetDDRamAddr,w
  5492  0E36  1683               	bsf	3,5	;RP0=1, select bank1
  5493  0E37  1303               	bcf	3,6	;RP1=0, select bank1
  5494  0E38  0486               	iorwf	6,f	;volatile
  5495  0E39  0008               	return
  5496  0E3A                     __end_of_SetDDRamAddr:	
  5497                           
  5498                           	psect	text25
  5499  0962                     __ptext25:	
  5500 ;; *************** function _DelayFor18TCY *****************
  5501 ;; Defined at:
  5502 ;;		line 22 in file "lcd_pic16.c"
  5503 ;; Parameters:    Size  Location     Type
  5504 ;;		None
  5505 ;; Auto vars:     Size  Location     Type
  5506 ;;		None
  5507 ;; Return value:  Size  Location     Type
  5508 ;;                  1    wreg      void 
  5509 ;; Registers used:
  5510 ;;		wreg
  5511 ;; Tracked objects:
  5512 ;;		On entry : 0/0
  5513 ;;		On exit  : 0/0
  5514 ;;		Unchanged: 0/0
  5515 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5516 ;;      Params:         0       0       0       0       0
  5517 ;;      Locals:         0       0       0       0       0
  5518 ;;      Temps:          0       1       0       0       0
  5519 ;;      Totals:         0       1       0       0       0
  5520 ;;Total ram usage:        1 bytes
  5521 ;; Hardware stack levels used:    1
  5522 ;; Hardware stack levels required when called:    5
  5523 ;; This function calls:
  5524 ;;		Nothing
  5525 ;; This function is called by:
  5526 ;;		_WriteDataXLCD
  5527 ;;		_WriteCmdXLCD
  5528 ;;		_SetDDRamAddr
  5529 ;;		_SetCGRamAddr
  5530 ;;		_ReadDataXLCD
  5531 ;;		_ReadAddrXLCD
  5532 ;; This function uses a non-reentrant model
  5533 ;;
  5534                           
  5535                           
  5536                           ;psect for function _DelayFor18TCY
  5537  0962                     _DelayFor18TCY:	
  5538                           
  5539                           ;lcd_pic16.c: 24:    _delay((unsigned long)((18)*(4000000/4000000.0)));
  5540                           
  5541                           ;incstack = 0
  5542 ;; hardware stack exceeded
  5543                           ; Regs used in _DelayFor18TCY: [wreg]
  5544  0962  3005               	movlw	5
  5545  0963  1283               	bcf	3,5	;RP0=0, select bank0
  5546  0964  1303               	bcf	3,6	;RP1=0, select bank0
  5547  0965  00BD               	movwf	??_DelayFor18TCY
  5548  0966                     u3767:	
  5549  0966  0BBD               	decfsz	??_DelayFor18TCY,f
  5550  0967  2966               	goto	u3767
  5551  0968  0008               	return
  5552  0969                     __end_of_DelayFor18TCY:	
  5553                           
  5554                           	psect	text26
  5555  0981                     __ptext26:	
  5556 ;; *************** function _DelayPORXLCD *****************
  5557 ;; Defined at:
  5558 ;;		line 27 in file "lcd_pic16.c"
  5559 ;; Parameters:    Size  Location     Type
  5560 ;;		None
  5561 ;; Auto vars:     Size  Location     Type
  5562 ;;		None
  5563 ;; Return value:  Size  Location     Type
  5564 ;;                  1    wreg      void 
  5565 ;; Registers used:
  5566 ;;		wreg
  5567 ;; Tracked objects:
  5568 ;;		On entry : 0/0
  5569 ;;		On exit  : 0/0
  5570 ;;		Unchanged: 0/0
  5571 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5572 ;;      Params:         0       0       0       0       0
  5573 ;;      Locals:         0       0       0       0       0
  5574 ;;      Temps:          0       2       0       0       0
  5575 ;;      Totals:         0       2       0       0       0
  5576 ;;Total ram usage:        2 bytes
  5577 ;; Hardware stack levels used:    1
  5578 ;; Hardware stack levels required when called:    5
  5579 ;; This function calls:
  5580 ;;		Nothing
  5581 ;; This function is called by:
  5582 ;;		_OpenXLCD
  5583 ;; This function uses a non-reentrant model
  5584 ;;
  5585                           
  5586                           
  5587                           ;psect for function _DelayPORXLCD
  5588  0981                     _DelayPORXLCD:	
  5589                           
  5590                           ;lcd_pic16.c: 29:    _delay((unsigned long)((20)*(4000000/4000.0)));
  5591                           
  5592                           ;incstack = 0
  5593 ;; hardware stack exceeded
  5594                           ; Regs used in _DelayPORXLCD: [wreg]
  5595  0981  301A               	movlw	26
  5596  0982  1283               	bcf	3,5	;RP0=0, select bank0
  5597  0983  1303               	bcf	3,6	;RP1=0, select bank0
  5598  0984  00BE               	movwf	??_DelayPORXLCD+1
  5599  0985  30F7               	movlw	247
  5600  0986  00BD               	movwf	??_DelayPORXLCD
  5601  0987                     u3777:	
  5602  0987  0BBD               	decfsz	??_DelayPORXLCD,f
  5603  0988  2987               	goto	u3777
  5604  0989  0BBE               	decfsz	??_DelayPORXLCD+1,f
  5605  098A  2987               	goto	u3777
  5606  098B  298C               	nop2
  5607  098C  0008               	return
  5608  098D                     __end_of_DelayPORXLCD:	
  5609                           
  5610                           	psect	text27
  5611  098D                     __ptext27:	
  5612 ;; *************** function _BusyXLCD *****************
  5613 ;; Defined at:
  5614 ;;		line 451 in file "lcd_pic16.c"
  5615 ;; Parameters:    Size  Location     Type
  5616 ;;		None
  5617 ;; Auto vars:     Size  Location     Type
  5618 ;;		None
  5619 ;; Return value:  Size  Location     Type
  5620 ;;                  1    wreg      unsigned char 
  5621 ;; Registers used:
  5622 ;;		wreg
  5623 ;; Tracked objects:
  5624 ;;		On entry : 0/0
  5625 ;;		On exit  : 0/0
  5626 ;;		Unchanged: 0/0
  5627 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5628 ;;      Params:         0       0       0       0       0
  5629 ;;      Locals:         0       0       0       0       0
  5630 ;;      Temps:          0       2       0       0       0
  5631 ;;      Totals:         0       2       0       0       0
  5632 ;;Total ram usage:        2 bytes
  5633 ;; Hardware stack levels used:    1
  5634 ;; Hardware stack levels required when called:    5
  5635 ;; This function calls:
  5636 ;;		Nothing
  5637 ;; This function is called by:
  5638 ;;		_OpenXLCD
  5639 ;;		_putsXLCD
  5640 ;;		_putrsXLCD
  5641 ;;		_SendCMDLCD
  5642 ;; This function uses a non-reentrant model
  5643 ;;
  5644                           
  5645                           
  5646                           ;psect for function _BusyXLCD
  5647  098D                     _BusyXLCD:	
  5648                           
  5649                           ;lcd_pic16.c: 504:         _delay((unsigned long)((5)*(4000000/4000.0)));
  5650                           
  5651                           ;incstack = 0
  5652                           ; Regs used in _BusyXLCD: [wreg]
  5653  098D  3007               	movlw	7
  5654  098E  1283               	bcf	3,5	;RP0=0, select bank0
  5655  098F  1303               	bcf	3,6	;RP1=0, select bank0
  5656  0990  00BE               	movwf	??_BusyXLCD+1
  5657  0991  307C               	movlw	124
  5658  0992  00BD               	movwf	??_BusyXLCD
  5659  0993                     u3787:	
  5660  0993  0BBD               	decfsz	??_BusyXLCD,f
  5661  0994  2993               	goto	u3787
  5662  0995  0BBE               	decfsz	??_BusyXLCD+1,f
  5663  0996  2993               	goto	u3787
  5664  0997  0000               	nop
  5665                           
  5666                           ;lcd_pic16.c: 505:         return 0;
  5667  0998  3000               	movlw	0
  5668  0999  0008               	return
  5669  099A                     __end_of_BusyXLCD:	
  5670                           
  5671                           	psect	text28
  5672  0AA2                     __ptext28:	
  5673 ;; *************** function _inter *****************
  5674 ;; Defined at:
  5675 ;;		line 130 in file "main.c"
  5676 ;; Parameters:    Size  Location     Type
  5677 ;;		None
  5678 ;; Auto vars:     Size  Location     Type
  5679 ;;		None
  5680 ;; Return value:  Size  Location     Type
  5681 ;;                  1    wreg      void 
  5682 ;; Registers used:
  5683 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5684 ;; Tracked objects:
  5685 ;;		On entry : 0/0
  5686 ;;		On exit  : 0/0
  5687 ;;		Unchanged: 0/0
  5688 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5689 ;;      Params:         0       0       0       0       0
  5690 ;;      Locals:         0       0       0       0       0
  5691 ;;      Temps:          0       5       0       0       0
  5692 ;;      Totals:         0       5       0       0       0
  5693 ;;Total ram usage:        5 bytes
  5694 ;; Hardware stack levels used:    1
  5695 ;; Hardware stack levels required when called:    4
  5696 ;; This function calls:
  5697 ;;		_time
  5698 ;;		_updateLCD
  5699 ;; This function is called by:
  5700 ;;		Interrupt level 1
  5701 ;; This function uses a non-reentrant model
  5702 ;;
  5703                           
  5704                           
  5705                           ;psect for function _inter
  5706  0AA2                     _inter:	
  5707                           
  5708                           ;main.c: 132:     INTCONbits.GIE = 0;
  5709  0AA2  138B               	bcf	11,7	;volatile
  5710                           
  5711                           ;main.c: 134:     if(PIR1bits.TMR1IF == 1){
  5712  0AA3  1C0C               	btfss	12,0	;volatile
  5713  0AA4  2ABA               	goto	i1l3396
  5714                           
  5715                           ;main.c: 135:         TMR1H = prTmr1H;
  5716  0AA5  0851               	movf	_prTmr1H,w
  5717  0AA6  008F               	movwf	15	;volatile
  5718                           
  5719                           ;main.c: 136:         TMR1L = prTmr1L;
  5720  0AA7  0852               	movf	_prTmr1L,w
  5721  0AA8  008E               	movwf	14	;volatile
  5722                           
  5723                           ;main.c: 137:         cntTmr1++;
  5724  0AA9  3001               	movlw	1
  5725  0AAA  00B8               	movwf	??_inter
  5726  0AAB  0838               	movf	??_inter,w
  5727  0AAC  07CB               	addwf	_cntTmr1,f
  5728                           
  5729                           ;main.c: 138:         time();
  5730  0AAD  120A  158A  2428  120A  158A  	fcall	_time
  5731                           
  5732                           ;main.c: 139:         updateLCD();
  5733  0AB2  120A  158A  2691  120A  158A  	fcall	_updateLCD
  5734                           
  5735                           ;main.c: 140:         PIR1bits.TMR1IF = 0;
  5736  0AB7  1283               	bcf	3,5	;RP0=0, select bank0
  5737  0AB8  1303               	bcf	3,6	;RP1=0, select bank0
  5738  0AB9  100C               	bcf	12,0	;volatile
  5739  0ABA                     i1l3396:	
  5740                           
  5741                           ;main.c: 142:     INTCONbits.GIE = 1;
  5742  0ABA  178B               	bsf	11,7	;volatile
  5743  0ABB  083C               	movf	??_inter+4,w
  5744  0ABC  00FF               	movwf	127
  5745  0ABD  083B               	movf	??_inter+3,w
  5746  0ABE  008A               	movwf	10
  5747  0ABF  083A               	movf	??_inter+2,w
  5748  0AC0  0084               	movwf	4
  5749  0AC1  0E39               	swapf	(??_inter+1)^0,w
  5750  0AC2  0083               	movwf	3
  5751  0AC3  0EFE               	swapf	126,f
  5752  0AC4  0E7E               	swapf	126,w
  5753  0AC5  0009               	retfie
  5754  0AC6                     __end_of_inter:	
  5755                           
  5756                           	psect	intentry
  5757  0004                     __pintentry:	
  5758                           ;incstack = 0
  5759 ;; hardware stack exceeded
  5760                           ; Regs used in _inter: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5761                           
  5762  0004                     interrupt_function:	
  5763  007E                     saved_w	set	btemp
  5764  0004  00FE               	movwf	btemp
  5765  0005  0E03               	swapf	3,w
  5766  0006  1283               	bcf	3,5	;RP0=0, select bank0
  5767  0007  1303               	bcf	3,6	;RP1=0, select bank0
  5768  0008  00B9               	movwf	??_inter+1
  5769  0009  0804               	movf	4,w
  5770  000A  00BA               	movwf	??_inter+2
  5771  000B  080A               	movf	10,w
  5772  000C  00BB               	movwf	??_inter+3
  5773  000D  087F               	movf	btemp+1,w
  5774  000E  00BC               	movwf	??_inter+4
  5775  000F  120A  158A  2AA2   	ljmp	_inter
  5776                           
  5777                           	psect	text29
  5778  0E91                     __ptext29:	
  5779 ;; *************** function _updateLCD *****************
  5780 ;; Defined at:
  5781 ;;		line 14 in file "lcd.c"
  5782 ;; Parameters:    Size  Location     Type
  5783 ;;		None
  5784 ;; Auto vars:     Size  Location     Type
  5785 ;;  integ           1   23[BANK0 ] unsigned char 
  5786 ;;  decim           1   22[BANK0 ] unsigned char 
  5787 ;; Return value:  Size  Location     Type
  5788 ;;                  1    wreg      void 
  5789 ;; Registers used:
  5790 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5791 ;; Tracked objects:
  5792 ;;		On entry : 0/0
  5793 ;;		On exit  : 0/0
  5794 ;;		Unchanged: 0/0
  5795 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5796 ;;      Params:         0       0       0       0       0
  5797 ;;      Locals:         0       2       0       0       0
  5798 ;;      Temps:          0       5       0       0       0
  5799 ;;      Totals:         0       7       0       0       0
  5800 ;;Total ram usage:        7 bytes
  5801 ;; Hardware stack levels used:    1
  5802 ;; Hardware stack levels required when called:    3
  5803 ;; This function calls:
  5804 ;;		i1_SetDDRamAddr
  5805 ;;		i1___lwdiv
  5806 ;;		i1___lwmod
  5807 ;;		i1_putsXLCD
  5808 ;;		i1_sprintf
  5809 ;; This function is called by:
  5810 ;;		_inter
  5811 ;; This function uses a non-reentrant model
  5812 ;;
  5813                           
  5814                           
  5815                           ;psect for function _updateLCD
  5816  0E91                     _updateLCD:	
  5817                           
  5818                           ;lcd.c: 15:     if(isOnConfig){
  5819                           
  5820                           ;incstack = 0
  5821 ;; hardware stack exceeded
  5822                           ; Regs used in _updateLCD: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5823  0E91  1283               	bcf	3,5	;RP0=0, select bank0
  5824  0E92  1303               	bcf	3,6	;RP1=0, select bank0
  5825  0E93  0847               	movf	_isOnConfig,w
  5826  0E94  1903               	btfsc	3,2
  5827  0E95  0008               	return
  5828                           
  5829                           ;lcd.c: 16:         unsigned char decim = frequency % 10;
  5830  0E96  300A               	movlw	10
  5831  0E97  00F8               	movwf	i1___lwmod@divisor
  5832  0E98  3000               	movlw	0
  5833  0E99  00F9               	movwf	i1___lwmod@divisor+1
  5834  0E9A  0845               	movf	_frequency+1,w
  5835  0E9B  00FB               	movwf	i1___lwmod@dividend+1
  5836  0E9C  0844               	movf	_frequency,w
  5837  0E9D  00FA               	movwf	i1___lwmod@dividend
  5838  0E9E  120A  158A  2344  120A  158A  	fcall	i1___lwmod
  5839  0EA3  0878               	movf	?i1___lwmod,w
  5840  0EA4  1283               	bcf	3,5	;RP0=0, select bank0
  5841  0EA5  1303               	bcf	3,6	;RP1=0, select bank0
  5842  0EA6  00B1               	movwf	??_updateLCD
  5843  0EA7  0831               	movf	??_updateLCD,w
  5844  0EA8  00B6               	movwf	updateLCD@decim
  5845                           
  5846                           ;lcd.c: 17:         unsigned char integ = frequency / 10;
  5847  0EA9  300A               	movlw	10
  5848  0EAA  00F0               	movwf	i1___lwdiv@divisor
  5849  0EAB  3000               	movlw	0
  5850  0EAC  00F1               	movwf	i1___lwdiv@divisor+1
  5851  0EAD  0845               	movf	_frequency+1,w
  5852  0EAE  00F3               	movwf	i1___lwdiv@dividend+1
  5853  0EAF  0844               	movf	_frequency,w
  5854  0EB0  00F2               	movwf	i1___lwdiv@dividend
  5855  0EB1  120A  158A  23AC  120A  158A  	fcall	i1___lwdiv
  5856  0EB6  0870               	movf	?i1___lwdiv,w
  5857  0EB7  1283               	bcf	3,5	;RP0=0, select bank0
  5858  0EB8  1303               	bcf	3,6	;RP1=0, select bank0
  5859  0EB9  00B1               	movwf	??_updateLCD
  5860  0EBA  0831               	movf	??_updateLCD,w
  5861  0EBB  00B7               	movwf	updateLCD@integ
  5862                           
  5863                           ;lcd.c: 18:         sprintf(lineTwo,"FREQ.  %3d.%d MHz",integ, decim);
  5864  0EBC  300F               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  5865  0EBD  00B1               	movwf	??_updateLCD
  5866  0EBE  0831               	movf	??_updateLCD,w
  5867  0EBF  00A0               	movwf	i1sprintf@f
  5868  0EC0  0837               	movf	updateLCD@integ,w
  5869  0EC1  00B2               	movwf	??_updateLCD+1
  5870  0EC2  01B3               	clrf	??_updateLCD+2
  5871  0EC3  0832               	movf	??_updateLCD+1,w
  5872  0EC4  00A1               	movwf	?i1_sprintf+1
  5873  0EC5  0833               	movf	??_updateLCD+2,w
  5874  0EC6  00A2               	movwf	?i1_sprintf+2
  5875  0EC7  0836               	movf	updateLCD@decim,w
  5876  0EC8  00B4               	movwf	??_updateLCD+3
  5877  0EC9  01B5               	clrf	??_updateLCD+4
  5878  0ECA  0834               	movf	??_updateLCD+3,w
  5879  0ECB  00A3               	movwf	?i1_sprintf+3
  5880  0ECC  0835               	movf	??_updateLCD+4,w
  5881  0ECD  00A4               	movwf	?i1_sprintf+4
  5882  0ECE  30A1               	movlw	(low (_lineTwo| 0))& (0+255)
  5883  0ECF  120A  118A  21BD  120A  158A  	fcall	i1_sprintf
  5884                           
  5885                           ;lcd.c: 19:         SetDDRamAddr(0x40);
  5886  0ED4  3040               	movlw	64
  5887  0ED5  120A  158A  2506  120A  158A  	fcall	i1_SetDDRamAddr
  5888                           
  5889                           ;lcd.c: 20:         putsXLCD(lineTwo);
  5890  0EDA  30A1               	movlw	(low (_lineTwo| 0))& (0+255)
  5891  0EDB  120A  158A  2201  120A  158A  	fcall	i1_putsXLCD
  5892                           
  5893                           ;lcd.c: 21:         SetDDRamAddr(0x00);
  5894  0EE0  3000               	movlw	0
  5895  0EE1  120A  158A  2506  120A  158A  	fcall	i1_SetDDRamAddr
  5896                           
  5897                           ;lcd.c: 22:         putsXLCD(lineOne);
  5898  0EE6  30B2               	movlw	(low (_lineOne| 0))& (0+255)
  5899  0EE7  120A  158A  2201   	fcall	i1_putsXLCD
  5900  0EEA  0008               	return
  5901  0EEB                     __end_of_updateLCD:	
  5902                           
  5903                           	psect	text30
  5904  01BD                     __ptext30:	
  5905 ;; *************** function i1_sprintf *****************
  5906 ;; Defined at:
  5907 ;;		line 500 in file "/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt.c"
  5908 ;; Parameters:    Size  Location     Type
  5909 ;;  sp              1    wreg     PTR unsigned char 
  5910 ;;		 -> lineOne(17), lineTwo(17), 
  5911 ;;  f               1    0[BANK0 ] PTR const unsigned char 
  5912 ;;		 -> STR_12(18), STR_11(17), STR_10(17), STR_9(17), 
  5913 ;;		 -> STR_8(17), STR_7(17), STR_6(17), STR_5(17), 
  5914 ;;		 -> STR_4(17), STR_3(17), STR_2(18), 
  5915 ;; Auto vars:     Size  Location     Type
  5916 ;;  sp              1   13[BANK0 ] PTR unsigned char 
  5917 ;;		 -> lineOne(17), lineTwo(17), 
  5918 ;;  sprintf         4    0        struct .
  5919 ;;  sprintf         2   14[BANK0 ] int 
  5920 ;;  sprintf         2   11[BANK0 ] unsigned int 
  5921 ;;  sprintf         2    0        PTR const unsigned char 
  5922 ;;  sprintf         2    0        unsigned int 
  5923 ;;  sprintf         1   16[BANK0 ] unsigned char 
  5924 ;;  sprintf         1   10[BANK0 ] unsigned char 
  5925 ;;  sprintf         1    9[BANK0 ] char 
  5926 ;;  sprintf         1    8[BANK0 ] PTR void [1]
  5927 ;;		 -> ?i1_sprintf(2), ?_sprintf(2), 
  5928 ;; Return value:  Size  Location     Type
  5929 ;;                  2    0[BANK0 ] int 
  5930 ;; Registers used:
  5931 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5932 ;; Tracked objects:
  5933 ;;		On entry : 0/0
  5934 ;;		On exit  : 0/0
  5935 ;;		Unchanged: 0/0
  5936 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5937 ;;      Params:         0       5       0       0       0
  5938 ;;      Locals:         0       9       0       0       0
  5939 ;;      Temps:          0       3       0       0       0
  5940 ;;      Totals:         0      17       0       0       0
  5941 ;;Total ram usage:       17 bytes
  5942 ;; Hardware stack levels used:    1
  5943 ;; Hardware stack levels required when called:    1
  5944 ;; This function calls:
  5945 ;;		i1___lwdiv
  5946 ;;		i1___lwmod
  5947 ;;		i1___wmul
  5948 ;;		i1_isdigit
  5949 ;; This function is called by:
  5950 ;;		_updateLCD
  5951 ;; This function uses a non-reentrant model
  5952 ;;
  5953                           
  5954                           
  5955                           ;psect for function i1_sprintf
  5956  01BD                     i1_sprintf:	
  5957                           
  5958                           ;incstack = 0
  5959 ;; hardware stack exceeded
  5960                           ; Regs used in i1_sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5961                           ;i1sprintf@sp stored from wreg
  5962  01BD  1283               	bcf	3,5	;RP0=0, select bank0
  5963  01BE  1303               	bcf	3,6	;RP1=0, select bank0
  5964  01BF  00AD               	movwf	i1sprintf@sp
  5965                           
  5966                           ;/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt.c: 500: sprintf(char * sp, const
      +                           char * f, ...);/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt.c: 501: {;/opt/mi
      +                          crochip/xc8/v2.05/pic/sources/c90/common/doprnt.c: 502:  va_list ap;;/opt/microchip/xc8/
      +                          v2.05/pic/sources/c90/common/doprnt.c: 507:  char c;;/opt/microchip/xc8/v2.05/pic/source
      +                          s/c90/common/doprnt.c: 509:  int width;;/opt/microchip/xc8/v2.05/pic/sources/c90/common/
      +                          doprnt.c: 516:  signed char prec;;/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt
      +                          .c: 520:  unsigned char flag;
  5967  01C0  3021               	movlw	(low ((?i1_sprintf| 0+1)))& (0+255)
  5968  01C1  00A5               	movwf	??i1_sprintf
  5969  01C2  0825               	movf	??i1_sprintf,w
  5970  01C3  00A8               	movwf	i1sprintf@ap
  5971  01C4                     i1l3026:	
  5972                           ;/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt.c: 548:  while((c = *f++)) {
  5973                           
  5974                           
  5975                           ;/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt.c: 548:  while((c = *f++)) {
  5976  01C4  3001               	movlw	1
  5977  01C5  07A0               	addwf	i1sprintf@f,f
  5978  01C6  30FF               	movlw	-1
  5979  01C7  0720               	addwf	i1sprintf@f,w
  5980  01C8  0084               	movwf	4
  5981  01C9  120A  158A  2000  120A  118A  	fcall	stringdir
  5982  01CE  00A5               	movwf	??i1_sprintf
  5983  01CF  0825               	movf	??i1_sprintf,w
  5984  01D0  00B0               	movwf	i1sprintf@c
  5985  01D1  0830               	movf	i1sprintf@c,w
  5986  01D2  1903               	btfsc	3,2
  5987  01D3  2B20               	goto	i1l3028
  5988                           
  5989                           ;/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt.c: 550:   if(c != '%')
  5990  01D4  3025               	movlw	37
  5991  01D5  0630               	xorwf	i1sprintf@c,w
  5992  01D6  1903               	btfsc	3,2
  5993  01D7  29E4               	goto	i1l2952
  5994                           
  5995                           ;/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt.c: 552:   {;/opt/microchip/xc8/v
      +                          2.05/pic/sources/c90/common/doprnt.c: 553:    ((*sp++ = (c)));
  5996  01D8  0830               	movf	i1sprintf@c,w
  5997  01D9  00A5               	movwf	??i1_sprintf
  5998  01DA  082D               	movf	i1sprintf@sp,w
  5999  01DB  0084               	movwf	4
  6000  01DC  0825               	movf	??i1_sprintf,w
  6001  01DD  1383               	bcf	3,7	;select IRP bank0
  6002  01DE  0080               	movwf	0
  6003  01DF  3001               	movlw	1
  6004  01E0  00A5               	movwf	??i1_sprintf
  6005  01E1  0825               	movf	??i1_sprintf,w
  6006  01E2  07AD               	addwf	i1sprintf@sp,f
  6007                           
  6008                           ;/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt.c: 554:    continue;
  6009  01E3  29C4               	goto	i1l3026
  6010  01E4                     i1l2952:	
  6011                           
  6012                           ;/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt.c: 558:   width = 0;
  6013  01E4  01AE               	clrf	i1sprintf@width
  6014  01E5  01AF               	clrf	i1sprintf@width+1
  6015                           
  6016                           ;/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt.c: 560:   flag = 0;
  6017  01E6  01AA               	clrf	i1sprintf@flag
  6018                           
  6019                           ;/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt.c: 609:   if(isdigit((unsigned)*
      +                          f)) {
  6020  01E7  0820               	movf	i1sprintf@f,w
  6021  01E8  0084               	movwf	4
  6022  01E9  120A  158A  2000  120A  118A  	fcall	stringdir
  6023  01EE  120A  158A  219A  120A  118A  	fcall	i1_isdigit
  6024  01F3  1C03               	btfss	3,0
  6025  01F4  2A33               	goto	i1l2968
  6026                           
  6027                           ;/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt.c: 610:    width = 0;
  6028  01F5  1283               	bcf	3,5	;RP0=0, select bank0
  6029  01F6  1303               	bcf	3,6	;RP1=0, select bank0
  6030  01F7  01AE               	clrf	i1sprintf@width
  6031  01F8  01AF               	clrf	i1sprintf@width+1
  6032  01F9                     i1l2958:	
  6033                           
  6034                           ;/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt.c: 612:     width *= 10;
  6035  01F9  300A               	movlw	10
  6036  01FA  00F0               	movwf	i1___wmul@multiplier
  6037  01FB  3000               	movlw	0
  6038  01FC  00F1               	movwf	i1___wmul@multiplier+1
  6039  01FD  1283               	bcf	3,5	;RP0=0, select bank0
  6040  01FE  1303               	bcf	3,6	;RP1=0, select bank0
  6041  01FF  082F               	movf	i1sprintf@width+1,w
  6042  0200  00F3               	movwf	i1___wmul@multiplicand+1
  6043  0201  082E               	movf	i1sprintf@width,w
  6044  0202  00F2               	movwf	i1___wmul@multiplicand
  6045  0203  120A  158A  223B  120A  118A  	fcall	i1___wmul
  6046  0208  0871               	movf	?i1___wmul+1,w
  6047  0209  1283               	bcf	3,5	;RP0=0, select bank0
  6048  020A  1303               	bcf	3,6	;RP1=0, select bank0
  6049  020B  00AF               	movwf	i1sprintf@width+1
  6050  020C  0870               	movf	?i1___wmul,w
  6051  020D  00AE               	movwf	i1sprintf@width
  6052                           
  6053                           ;/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt.c: 613:        width += *f++ - '
      +                          0';
  6054  020E  0820               	movf	i1sprintf@f,w
  6055  020F  0084               	movwf	4
  6056  0210  120A  158A  2000  120A  118A  	fcall	stringdir
  6057  0215  3ED0               	addlw	208
  6058  0216  00A5               	movwf	??i1_sprintf
  6059  0217  30FF               	movlw	255
  6060  0218  1803               	skipnc
  6061  0219  3000               	movlw	0
  6062  021A  00A6               	movwf	??i1_sprintf+1
  6063  021B  0825               	movf	??i1_sprintf,w
  6064  021C  07AE               	addwf	i1sprintf@width,f
  6065  021D  1803               	skipnc
  6066  021E  0AAF               	incf	i1sprintf@width+1,f
  6067  021F  0826               	movf	??i1_sprintf+1,w
  6068  0220  07AF               	addwf	i1sprintf@width+1,f
  6069  0221  3001               	movlw	1
  6070  0222  00A5               	movwf	??i1_sprintf
  6071  0223  0825               	movf	??i1_sprintf,w
  6072  0224  07A0               	addwf	i1sprintf@f,f
  6073                           
  6074                           ;/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt.c: 614:    } while(isdigit((unsi
      +                          gned)*f));
  6075  0225  0820               	movf	i1sprintf@f,w
  6076  0226  0084               	movwf	4
  6077  0227  120A  158A  2000  120A  118A  	fcall	stringdir
  6078  022C  120A  158A  219A  120A  118A  	fcall	i1_isdigit
  6079  0231  1803               	btfsc	3,0
  6080  0232  29F9               	goto	i1l2958
  6081  0233                     i1l2968:	
  6082  0233  3001               	movlw	1
  6083  0234  1283               	bcf	3,5	;RP0=0, select bank0
  6084  0235  1303               	bcf	3,6	;RP1=0, select bank0
  6085  0236  07A0               	addwf	i1sprintf@f,f
  6086  0237  30FF               	movlw	-1
  6087  0238  0720               	addwf	i1sprintf@f,w
  6088  0239  0084               	movwf	4
  6089  023A  120A  158A  2000  120A  118A  	fcall	stringdir
  6090  023F  00B0               	movwf	i1sprintf@c
  6091  0240  00A5               	movwf	??i1_sprintf
  6092  0241  01A6               	clrf	??i1_sprintf+1
  6093                           
  6094                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6095                           ; Switch size 1, requested type "simple"
  6096                           ; Number of cases is 1, Range of values is 0 to 0
  6097                           ; switch strategies available:
  6098                           ; Name         Instructions Cycles
  6099                           ; simple_byte            4     3 (average)
  6100                           ; direct_byte           11     8 (fixed)
  6101                           ; jumptable            260     6 (fixed)
  6102                           ;	Chosen strategy is simple_byte
  6103  0242  0826               	movf	??i1_sprintf+1,w
  6104  0243  3A00               	xorlw	0	; case 0
  6105  0244  1903               	skipnz
  6106  0245  2A47               	goto	i1l4036
  6107  0246  29C4               	goto	i1l3026
  6108  0247                     i1l4036:	
  6109                           
  6110                           ; Switch size 1, requested type "simple"
  6111                           ; Number of cases is 3, Range of values is 0 to 105
  6112                           ; switch strategies available:
  6113                           ; Name         Instructions Cycles
  6114                           ; simple_byte           10     6 (average)
  6115                           ; jumptable            260     6 (fixed)
  6116                           ;	Chosen strategy is simple_byte
  6117  0247  0825               	movf	??i1_sprintf,w
  6118  0248  3A00               	xorlw	0	; case 0
  6119  0249  1903               	skipnz
  6120  024A  2B20               	goto	i1l3028
  6121  024B  3A64               	xorlw	100	; case 100
  6122  024C  1903               	skipnz
  6123  024D  2A52               	goto	i1l2970
  6124  024E  3A0D               	xorlw	13	; case 105
  6125  024F  1903               	skipnz
  6126  0250  2A52               	goto	i1l2970
  6127  0251  29C4               	goto	i1l3026
  6128  0252                     i1l2970:	
  6129                           
  6130                           ;/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt.c: 1272:   {;/opt/microchip/xc8/
      +                          v2.05/pic/sources/c90/common/doprnt.c: 1278:     val = (int)(*(int *)__va_arg((*(int **)
      +                          ap), (int)0));
  6131  0252  0828               	movf	i1sprintf@ap,w
  6132  0253  0084               	movwf	4
  6133  0254  1383               	bcf	3,7	;select IRP bank0
  6134  0255  0800               	movf	0,w
  6135  0256  00AB               	movwf	i1sprintf@val
  6136  0257  0A84               	incf	4,f
  6137  0258  0800               	movf	0,w
  6138  0259  00AC               	movwf	i1sprintf@val+1
  6139  025A  3002               	movlw	2
  6140  025B  00A5               	movwf	??i1_sprintf
  6141  025C  0825               	movf	??i1_sprintf,w
  6142  025D  07A8               	addwf	i1sprintf@ap,f
  6143                           
  6144                           ;/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt.c: 1280:    if((int)val < 0) {
  6145  025E  1FAC               	btfss	i1sprintf@val+1,7
  6146  025F  2A69               	goto	i1l2980
  6147                           
  6148                           ;/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt.c: 1281:     flag |= 0x03;
  6149  0260  3003               	movlw	3
  6150  0261  00A5               	movwf	??i1_sprintf
  6151  0262  0825               	movf	??i1_sprintf,w
  6152  0263  04AA               	iorwf	i1sprintf@flag,f
  6153                           
  6154                           ;/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt.c: 1282:     val = -val;
  6155  0264  09AB               	comf	i1sprintf@val,f
  6156  0265  09AC               	comf	i1sprintf@val+1,f
  6157  0266  0AAB               	incf	i1sprintf@val,f
  6158  0267  1903               	skipnz
  6159  0268  0AAC               	incf	i1sprintf@val+1,f
  6160  0269                     i1l2980:	
  6161                           
  6162                           ;/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt.c: 1285:   };/opt/microchip/xc8/
      +                          v2.05/pic/sources/c90/common/doprnt.c: 1324:    for(c = 1 ; c != sizeof dpowers/sizeof d
      +                          powers[0] ; c++)
  6163  0269  01B0               	clrf	i1sprintf@c
  6164  026A  0AB0               	incf	i1sprintf@c,f
  6165  026B                     i1l2986:	
  6166                           
  6167                           ;/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt.c: 1325:     if(val < dpowers[c]
      +                          )
  6168  026B  0830               	movf	i1sprintf@c,w
  6169  026C  00A5               	movwf	??i1_sprintf
  6170  026D  0725               	addwf	??i1_sprintf,w
  6171  026E  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  6172  026F  0084               	movwf	4
  6173  0270  120A  158A  2000  120A  118A  	fcall	stringdir
  6174  0275  00A6               	movwf	??i1_sprintf+1
  6175  0276  120A  158A  2000  120A  118A  	fcall	stringdir
  6176  027B  00A7               	movwf	??i1_sprintf+2
  6177  027C  0827               	movf	??i1_sprintf+2,w
  6178  027D  022C               	subwf	i1sprintf@val+1,w
  6179  027E  1D03               	skipz
  6180  027F  2A82               	goto	u229_25
  6181  0280  0826               	movf	??i1_sprintf+1,w
  6182  0281  022B               	subwf	i1sprintf@val,w
  6183  0282                     u229_25:	
  6184  0282  1C03               	btfss	3,0
  6185  0283  2A8C               	goto	i1l2992
  6186  0284  3001               	movlw	1
  6187  0285  00A5               	movwf	??i1_sprintf
  6188  0286  0825               	movf	??i1_sprintf,w
  6189  0287  07B0               	addwf	i1sprintf@c,f
  6190  0288  3005               	movlw	5
  6191  0289  0630               	xorwf	i1sprintf@c,w
  6192  028A  1D03               	btfss	3,2
  6193  028B  2A6B               	goto	i1l2986
  6194  028C                     i1l2992:	
  6195                           
  6196                           ;/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt.c: 1364:   if(width && flag & 0x
      +                          03)
  6197  028C  082E               	movf	i1sprintf@width,w
  6198  028D  042F               	iorwf	i1sprintf@width+1,w
  6199  028E  1903               	btfsc	3,2
  6200  028F  2A9A               	goto	i1l650
  6201  0290  082A               	movf	i1sprintf@flag,w
  6202  0291  3903               	andlw	3
  6203  0292  1903               	btfsc	3,2
  6204  0293  2A9A               	goto	i1l650
  6205                           
  6206                           ;/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt.c: 1365:    width--;
  6207  0294  30FF               	movlw	255
  6208  0295  07AE               	addwf	i1sprintf@width,f
  6209  0296  1803               	skipnc
  6210  0297  0AAF               	incf	i1sprintf@width+1,f
  6211  0298  30FF               	movlw	255
  6212  0299  07AF               	addwf	i1sprintf@width+1,f
  6213  029A                     i1l650:	
  6214                           
  6215                           ;/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt.c: 1400:   if(width > c)
  6216  029A  082F               	movf	i1sprintf@width+1,w
  6217  029B  3A80               	xorlw	128
  6218  029C  3C80               	sublw	128
  6219  029D  1D03               	skipz
  6220  029E  2AA1               	goto	u233_25
  6221  029F  082E               	movf	i1sprintf@width,w
  6222  02A0  0230               	subwf	i1sprintf@c,w
  6223  02A1                     u233_25:	
  6224  02A1  1803               	skipnc
  6225  02A2  2AAF               	goto	i1l3000
  6226                           
  6227                           ;/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt.c: 1401:    width -= c;
  6228  02A3  1283               	bcf	3,5	;RP0=0, select bank0
  6229  02A4  1303               	bcf	3,6	;RP1=0, select bank0
  6230  02A5  0830               	movf	i1sprintf@c,w
  6231  02A6  00A5               	movwf	??i1_sprintf
  6232  02A7  01A6               	clrf	??i1_sprintf+1
  6233  02A8  0825               	movf	??i1_sprintf,w
  6234  02A9  02AE               	subwf	i1sprintf@width,f
  6235  02AA  0826               	movf	??i1_sprintf+1,w
  6236  02AB  1C03               	skipc
  6237  02AC  03AF               	decf	i1sprintf@width+1,f
  6238  02AD  02AF               	subwf	i1sprintf@width+1,f
  6239  02AE  2AB3               	goto	i1l3002
  6240  02AF                     i1l3000:	
  6241                           
  6242                           ;/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt.c: 1403:    width = 0;
  6243  02AF  1283               	bcf	3,5	;RP0=0, select bank0
  6244  02B0  1303               	bcf	3,6	;RP1=0, select bank0
  6245  02B1  01AE               	clrf	i1sprintf@width
  6246  02B2  01AF               	clrf	i1sprintf@width+1
  6247  02B3                     i1l3002:	
  6248                           
  6249                           ;/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt.c: 1441:   {;/opt/microchip/xc8/
      +                          v2.05/pic/sources/c90/common/doprnt.c: 1443:    if(width
  6250  02B3  082E               	movf	i1sprintf@width,w
  6251  02B4  042F               	iorwf	i1sprintf@width+1,w
  6252  02B5  1903               	btfsc	3,2
  6253  02B6  2ACC               	goto	i1l3010
  6254  02B7                     i1l3004:	
  6255                           
  6256                           ;/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt.c: 1449:      ((*sp++ = (' ')));
  6257  02B7  3020               	movlw	32
  6258  02B8  00A5               	movwf	??i1_sprintf
  6259  02B9  082D               	movf	i1sprintf@sp,w
  6260  02BA  0084               	movwf	4
  6261  02BB  0825               	movf	??i1_sprintf,w
  6262  02BC  1383               	bcf	3,7	;select IRP bank0
  6263  02BD  0080               	movwf	0
  6264  02BE  3001               	movlw	1
  6265  02BF  00A5               	movwf	??i1_sprintf
  6266  02C0  0825               	movf	??i1_sprintf,w
  6267  02C1  07AD               	addwf	i1sprintf@sp,f
  6268  02C2  30FF               	movlw	255
  6269  02C3  07AE               	addwf	i1sprintf@width,f
  6270  02C4  1803               	skipnc
  6271  02C5  0AAF               	incf	i1sprintf@width+1,f
  6272  02C6  30FF               	movlw	255
  6273  02C7  07AF               	addwf	i1sprintf@width+1,f
  6274  02C8  082E               	movf	i1sprintf@width,w
  6275  02C9  042F               	iorwf	i1sprintf@width+1,w
  6276  02CA  1D03               	btfss	3,2
  6277  02CB  2AB7               	goto	i1l3004
  6278  02CC                     i1l3010:	
  6279                           
  6280                           ;/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt.c: 1457:    if(flag & 0x03)
  6281  02CC  082A               	movf	i1sprintf@flag,w
  6282  02CD  3903               	andlw	3
  6283  02CE  1903               	btfsc	3,2
  6284  02CF  2ADB               	goto	i1l3016
  6285                           
  6286                           ;/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt.c: 1458:     ((*sp++ = ('-')));
  6287  02D0  302D               	movlw	45
  6288  02D1  00A5               	movwf	??i1_sprintf
  6289  02D2  082D               	movf	i1sprintf@sp,w
  6290  02D3  0084               	movwf	4
  6291  02D4  0825               	movf	??i1_sprintf,w
  6292  02D5  1383               	bcf	3,7	;select IRP bank0
  6293  02D6  0080               	movwf	0
  6294  02D7  3001               	movlw	1
  6295  02D8  00A5               	movwf	??i1_sprintf
  6296  02D9  0825               	movf	??i1_sprintf,w
  6297  02DA  07AD               	addwf	i1sprintf@sp,f
  6298  02DB                     i1l3016:	
  6299                           
  6300                           ;/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt.c: 1488:   };/opt/microchip/xc8/
      +                          v2.05/pic/sources/c90/common/doprnt.c: 1491:   prec = c;
  6301  02DB  0830               	movf	i1sprintf@c,w
  6302  02DC  00A5               	movwf	??i1_sprintf
  6303  02DD  0825               	movf	??i1_sprintf,w
  6304  02DE  00A9               	movwf	i1sprintf@prec
  6305  02DF                     i1l3024:	
  6306                           ;/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt.c: 1493:   while(prec--) {
  6307                           
  6308                           
  6309                           ;/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt.c: 1493:   while(prec--) {
  6310  02DF  30FF               	movlw	255
  6311  02E0  00A5               	movwf	??i1_sprintf
  6312  02E1  0825               	movf	??i1_sprintf,w
  6313  02E2  07A9               	addwf	i1sprintf@prec,f
  6314  02E3  0A29               	incf	i1sprintf@prec,w
  6315  02E4  1903               	btfsc	3,2
  6316  02E5  29C4               	goto	i1l3026
  6317                           
  6318                           ;/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt.c: 1497:    {;/opt/microchip/xc8
      +                          /v2.05/pic/sources/c90/common/doprnt.c: 1508:     c = (val / dpowers[prec]) % 10 + '0';
  6319  02E6  300A               	movlw	10
  6320  02E7  00F8               	movwf	i1___lwmod@divisor
  6321  02E8  3000               	movlw	0
  6322  02E9  00F9               	movwf	i1___lwmod@divisor+1
  6323  02EA  0829               	movf	i1sprintf@prec,w
  6324  02EB  00A5               	movwf	??i1_sprintf
  6325  02EC  0725               	addwf	??i1_sprintf,w
  6326  02ED  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  6327  02EE  0084               	movwf	4
  6328  02EF  120A  158A  2000  120A  118A  	fcall	stringdir
  6329  02F4  00F0               	movwf	i1___lwdiv@divisor
  6330  02F5  120A  158A  2000  120A  118A  	fcall	stringdir
  6331  02FA  00F1               	movwf	i1___lwdiv@divisor+1
  6332  02FB  082C               	movf	i1sprintf@val+1,w
  6333  02FC  00F3               	movwf	i1___lwdiv@dividend+1
  6334  02FD  082B               	movf	i1sprintf@val,w
  6335  02FE  00F2               	movwf	i1___lwdiv@dividend
  6336  02FF  120A  158A  23AC  120A  118A  	fcall	i1___lwdiv
  6337  0304  0871               	movf	?i1___lwdiv+1,w
  6338  0305  00FB               	movwf	i1___lwmod@dividend+1
  6339  0306  0870               	movf	?i1___lwdiv,w
  6340  0307  00FA               	movwf	i1___lwmod@dividend
  6341  0308  120A  158A  2344  120A  118A  	fcall	i1___lwmod
  6342  030D  0878               	movf	?i1___lwmod,w
  6343  030E  3E30               	addlw	48
  6344  030F  1283               	bcf	3,5	;RP0=0, select bank0
  6345  0310  1303               	bcf	3,6	;RP1=0, select bank0
  6346  0311  00A6               	movwf	??i1_sprintf+1
  6347  0312  0826               	movf	??i1_sprintf+1,w
  6348  0313  00B0               	movwf	i1sprintf@c
  6349                           
  6350                           ;/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt.c: 1542:    };/opt/microchip/xc8
      +                          /v2.05/pic/sources/c90/common/doprnt.c: 1543:    ((*sp++ = (c)));
  6351  0314  0830               	movf	i1sprintf@c,w
  6352  0315  00A5               	movwf	??i1_sprintf
  6353  0316  082D               	movf	i1sprintf@sp,w
  6354  0317  0084               	movwf	4
  6355  0318  0825               	movf	??i1_sprintf,w
  6356  0319  1383               	bcf	3,7	;select IRP bank0
  6357  031A  0080               	movwf	0
  6358  031B  3001               	movlw	1
  6359  031C  00A5               	movwf	??i1_sprintf
  6360  031D  0825               	movf	??i1_sprintf,w
  6361  031E  07AD               	addwf	i1sprintf@sp,f
  6362  031F  2ADF               	goto	i1l3024
  6363  0320                     i1l3028:	
  6364                           
  6365                           ;/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt.c: 1557:  *sp = 0;
  6366  0320  082D               	movf	i1sprintf@sp,w
  6367  0321  0084               	movwf	4
  6368  0322  1383               	bcf	3,7	;select IRP bank0
  6369  0323  0180               	clrf	0
  6370  0324  0008               	return
  6371  0325                     __end_ofi1_sprintf:	
  6372                           
  6373                           	psect	text31
  6374  099A                     __ptext31:	
  6375 ;; *************** function i1_isdigit *****************
  6376 ;; Defined at:
  6377 ;;		line 8 in file "/opt/microchip/xc8/v2.05/pic/sources/c90/common/isdigit.c"
  6378 ;; Parameters:    Size  Location     Type
  6379 ;;  c               1    wreg     unsigned char 
  6380 ;; Auto vars:     Size  Location     Type
  6381 ;;  c               1    1[COMMON] unsigned char 
  6382 ;; Return value:  Size  Location     Type
  6383 ;;		None               void
  6384 ;; Registers used:
  6385 ;;		wreg, status,2, status,0
  6386 ;; Tracked objects:
  6387 ;;		On entry : 0/0
  6388 ;;		On exit  : 0/0
  6389 ;;		Unchanged: 0/0
  6390 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6391 ;;      Params:         0       0       0       0       0
  6392 ;;      Locals:         2       0       0       0       0
  6393 ;;      Temps:          0       0       0       0       0
  6394 ;;      Totals:         2       0       0       0       0
  6395 ;;Total ram usage:        2 bytes
  6396 ;; Hardware stack levels used:    1
  6397 ;; This function calls:
  6398 ;;		Nothing
  6399 ;; This function is called by:
  6400 ;;		i1_sprintf
  6401 ;; This function uses a non-reentrant model
  6402 ;;
  6403                           
  6404                           
  6405                           ;psect for function i1_isdigit
  6406  099A                     i1_isdigit:	
  6407                           
  6408                           ;incstack = 0
  6409 ;; hardware stack exceeded
  6410                           ; Regs used in i1_isdigit: [wreg+status,2+status,0]
  6411                           ;i1isdigit@c stored from wreg
  6412  099A  00F1               	movwf	i1isdigit@c
  6413  099B  01F0               	clrf	i1_isdigit$1093
  6414  099C  303A               	movlw	58
  6415  099D  0271               	subwf	i1isdigit@c,w
  6416  099E  1803               	skipnc
  6417  099F  29A6               	goto	i1l2732
  6418  09A0  3030               	movlw	48
  6419  09A1  0271               	subwf	i1isdigit@c,w
  6420  09A2  1C03               	skipc
  6421  09A3  29A6               	goto	i1l2732
  6422  09A4  01F0               	clrf	i1_isdigit$1093
  6423  09A5  0AF0               	incf	i1_isdigit$1093,f
  6424  09A6                     i1l2732:	
  6425  09A6  0C70               	rrf	i1_isdigit$1093,w
  6426  09A7  0008               	return
  6427  09A8                     __end_ofi1_isdigit:	
  6428                           
  6429                           	psect	text32
  6430  0A3B                     __ptext32:	
  6431 ;; *************** function i1___wmul *****************
  6432 ;; Defined at:
  6433 ;;		line 15 in file "/opt/microchip/xc8/v2.05/pic/sources/c90/common/Umul16.c"
  6434 ;; Parameters:    Size  Location     Type
  6435 ;;  multiplier      2    0[COMMON] unsigned int 
  6436 ;;  multiplicand    2    2[COMMON] unsigned int 
  6437 ;; Auto vars:     Size  Location     Type
  6438 ;;  __wmul          2    4[COMMON] unsigned int 
  6439 ;; Return value:  Size  Location     Type
  6440 ;;                  2    0[COMMON] unsigned int 
  6441 ;; Registers used:
  6442 ;;		wreg, status,2, status,0
  6443 ;; Tracked objects:
  6444 ;;		On entry : 0/0
  6445 ;;		On exit  : 0/0
  6446 ;;		Unchanged: 0/0
  6447 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6448 ;;      Params:         4       0       0       0       0
  6449 ;;      Locals:         2       0       0       0       0
  6450 ;;      Temps:          0       0       0       0       0
  6451 ;;      Totals:         6       0       0       0       0
  6452 ;;Total ram usage:        6 bytes
  6453 ;; Hardware stack levels used:    1
  6454 ;; This function calls:
  6455 ;;		Nothing
  6456 ;; This function is called by:
  6457 ;;		i1_sprintf
  6458 ;; This function uses a non-reentrant model
  6459 ;;
  6460                           
  6461                           
  6462                           ;psect for function i1___wmul
  6463  0A3B                     i1___wmul:	
  6464                           
  6465                           ;incstack = 0
  6466 ;; hardware stack exceeded
  6467                           ; Regs used in i1___wmul: [wreg+status,2+status,0]
  6468  0A3B  01F4               	clrf	i1___wmul@product
  6469  0A3C  01F5               	clrf	i1___wmul@product+1
  6470  0A3D                     i1l2664:	
  6471  0A3D  1C70               	btfss	i1___wmul@multiplier,0
  6472  0A3E  2A45               	goto	i1l665
  6473  0A3F  0872               	movf	i1___wmul@multiplicand,w
  6474  0A40  07F4               	addwf	i1___wmul@product,f
  6475  0A41  1803               	skipnc
  6476  0A42  0AF5               	incf	i1___wmul@product+1,f
  6477  0A43  0873               	movf	i1___wmul@multiplicand+1,w
  6478  0A44  07F5               	addwf	i1___wmul@product+1,f
  6479  0A45                     i1l665:	
  6480  0A45  3001               	movlw	1
  6481  0A46                     u182_25:	
  6482  0A46  1003               	clrc
  6483  0A47  0DF2               	rlf	i1___wmul@multiplicand,f
  6484  0A48  0DF3               	rlf	i1___wmul@multiplicand+1,f
  6485  0A49  3EFF               	addlw	-1
  6486  0A4A  1D03               	skipz
  6487  0A4B  2A46               	goto	u182_25
  6488  0A4C  3001               	movlw	1
  6489  0A4D                     u183_25:	
  6490  0A4D  1003               	clrc
  6491  0A4E  0CF1               	rrf	i1___wmul@multiplier+1,f
  6492  0A4F  0CF0               	rrf	i1___wmul@multiplier,f
  6493  0A50  3EFF               	addlw	-1
  6494  0A51  1D03               	skipz
  6495  0A52  2A4D               	goto	u183_25
  6496  0A53  0870               	movf	i1___wmul@multiplier,w
  6497  0A54  0471               	iorwf	i1___wmul@multiplier+1,w
  6498  0A55  1D03               	btfss	3,2
  6499  0A56  2A3D               	goto	i1l2664
  6500  0A57  0875               	movf	i1___wmul@product+1,w
  6501  0A58  00F1               	movwf	?i1___wmul+1
  6502  0A59  0874               	movf	i1___wmul@product,w
  6503  0A5A  00F0               	movwf	?i1___wmul
  6504  0A5B  0008               	return
  6505  0A5C                     __end_ofi1___wmul:	
  6506                           
  6507                           	psect	text33
  6508  0B44                     __ptext33:	
  6509 ;; *************** function i1___lwmod *****************
  6510 ;; Defined at:
  6511 ;;		line 5 in file "/opt/microchip/xc8/v2.05/pic/sources/c90/common/lwmod.c"
  6512 ;; Parameters:    Size  Location     Type
  6513 ;;  divisor         2    8[COMMON] unsigned int 
  6514 ;;  dividend        2   10[COMMON] unsigned int 
  6515 ;; Auto vars:     Size  Location     Type
  6516 ;;  __lwmod         1   13[COMMON] unsigned char 
  6517 ;; Return value:  Size  Location     Type
  6518 ;;                  2    8[COMMON] unsigned int 
  6519 ;; Registers used:
  6520 ;;		wreg, status,2, status,0
  6521 ;; Tracked objects:
  6522 ;;		On entry : 0/0
  6523 ;;		On exit  : 0/0
  6524 ;;		Unchanged: 0/0
  6525 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6526 ;;      Params:         4       0       0       0       0
  6527 ;;      Locals:         1       0       0       0       0
  6528 ;;      Temps:          1       0       0       0       0
  6529 ;;      Totals:         6       0       0       0       0
  6530 ;;Total ram usage:        6 bytes
  6531 ;; Hardware stack levels used:    1
  6532 ;; This function calls:
  6533 ;;		Nothing
  6534 ;; This function is called by:
  6535 ;;		_updateLCD
  6536 ;;		i1_sprintf
  6537 ;; This function uses a non-reentrant model
  6538 ;;
  6539                           
  6540                           
  6541                           ;psect for function i1___lwmod
  6542  0B44                     i1___lwmod:	
  6543                           
  6544                           ;incstack = 0
  6545 ;; hardware stack exceeded
  6546                           ; Regs used in i1___lwmod: [wreg+status,2+status,0]
  6547  0B44  0878               	movf	i1___lwmod@divisor,w
  6548  0B45  0479               	iorwf	i1___lwmod@divisor+1,w
  6549  0B46  1903               	btfsc	3,2
  6550  0B47  2B71               	goto	i1l2720
  6551  0B48  01FD               	clrf	i1___lwmod@counter
  6552  0B49  0AFD               	incf	i1___lwmod@counter,f
  6553  0B4A                     i1l2710:	
  6554  0B4A  1BF9               	btfsc	i1___lwmod@divisor+1,7
  6555  0B4B  2B58               	goto	i1l2712
  6556  0B4C  3001               	movlw	1
  6557  0B4D                     u193_25:	
  6558  0B4D  1003               	clrc
  6559  0B4E  0DF8               	rlf	i1___lwmod@divisor,f
  6560  0B4F  0DF9               	rlf	i1___lwmod@divisor+1,f
  6561  0B50  3EFF               	addlw	-1
  6562  0B51  1D03               	skipz
  6563  0B52  2B4D               	goto	u193_25
  6564  0B53  3001               	movlw	1
  6565  0B54  00FC               	movwf	??i1___lwmod
  6566  0B55  087C               	movf	??i1___lwmod,w
  6567  0B56  07FD               	addwf	i1___lwmod@counter,f
  6568  0B57  2B4A               	goto	i1l2710
  6569  0B58                     i1l2712:	
  6570  0B58  0879               	movf	i1___lwmod@divisor+1,w
  6571  0B59  027B               	subwf	i1___lwmod@dividend+1,w
  6572  0B5A  1D03               	skipz
  6573  0B5B  2B5E               	goto	u195_25
  6574  0B5C  0878               	movf	i1___lwmod@divisor,w
  6575  0B5D  027A               	subwf	i1___lwmod@dividend,w
  6576  0B5E                     u195_25:	
  6577  0B5E  1C03               	skipc
  6578  0B5F  2B66               	goto	i1l2716
  6579  0B60  0878               	movf	i1___lwmod@divisor,w
  6580  0B61  02FA               	subwf	i1___lwmod@dividend,f
  6581  0B62  0879               	movf	i1___lwmod@divisor+1,w
  6582  0B63  1C03               	skipc
  6583  0B64  03FB               	decf	i1___lwmod@dividend+1,f
  6584  0B65  02FB               	subwf	i1___lwmod@dividend+1,f
  6585  0B66                     i1l2716:	
  6586  0B66  3001               	movlw	1
  6587  0B67                     u196_25:	
  6588  0B67  1003               	clrc
  6589  0B68  0CF9               	rrf	i1___lwmod@divisor+1,f
  6590  0B69  0CF8               	rrf	i1___lwmod@divisor,f
  6591  0B6A  3EFF               	addlw	-1
  6592  0B6B  1D03               	skipz
  6593  0B6C  2B67               	goto	u196_25
  6594  0B6D  3001               	movlw	1
  6595  0B6E  02FD               	subwf	i1___lwmod@counter,f
  6596  0B6F  1D03               	btfss	3,2
  6597  0B70  2B58               	goto	i1l2712
  6598  0B71                     i1l2720:	
  6599  0B71  087B               	movf	i1___lwmod@dividend+1,w
  6600  0B72  00F9               	movwf	?i1___lwmod+1
  6601  0B73  087A               	movf	i1___lwmod@dividend,w
  6602  0B74  00F8               	movwf	?i1___lwmod
  6603  0B75  0008               	return
  6604  0B76                     __end_ofi1___lwmod:	
  6605                           
  6606                           	psect	text34
  6607  0BAC                     __ptext34:	
  6608 ;; *************** function i1___lwdiv *****************
  6609 ;; Defined at:
  6610 ;;		line 5 in file "/opt/microchip/xc8/v2.05/pic/sources/c90/common/lwdiv.c"
  6611 ;; Parameters:    Size  Location     Type
  6612 ;;  divisor         2    0[COMMON] unsigned int 
  6613 ;;  dividend        2    2[COMMON] unsigned int 
  6614 ;; Auto vars:     Size  Location     Type
  6615 ;;  __lwdiv         2    5[COMMON] unsigned int 
  6616 ;;  __lwdiv         1    7[COMMON] unsigned char 
  6617 ;; Return value:  Size  Location     Type
  6618 ;;                  2    0[COMMON] unsigned int 
  6619 ;; Registers used:
  6620 ;;		wreg, status,2, status,0
  6621 ;; Tracked objects:
  6622 ;;		On entry : 0/0
  6623 ;;		On exit  : 0/0
  6624 ;;		Unchanged: 0/0
  6625 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6626 ;;      Params:         4       0       0       0       0
  6627 ;;      Locals:         3       0       0       0       0
  6628 ;;      Temps:          1       0       0       0       0
  6629 ;;      Totals:         8       0       0       0       0
  6630 ;;Total ram usage:        8 bytes
  6631 ;; Hardware stack levels used:    1
  6632 ;; This function calls:
  6633 ;;		Nothing
  6634 ;; This function is called by:
  6635 ;;		_updateLCD
  6636 ;;		i1_sprintf
  6637 ;; This function uses a non-reentrant model
  6638 ;;
  6639                           
  6640                           
  6641                           ;psect for function i1___lwdiv
  6642  0BAC                     i1___lwdiv:	
  6643                           
  6644                           ;incstack = 0
  6645 ;; hardware stack exceeded
  6646                           ; Regs used in i1___lwdiv: [wreg+status,2+status,0]
  6647  0BAC  01F5               	clrf	i1___lwdiv@quotient
  6648  0BAD  01F6               	clrf	i1___lwdiv@quotient+1
  6649  0BAE  0870               	movf	i1___lwdiv@divisor,w
  6650  0BAF  0471               	iorwf	i1___lwdiv@divisor+1,w
  6651  0BB0  1903               	btfsc	3,2
  6652  0BB1  2BE3               	goto	i1l2698
  6653  0BB2  01F7               	clrf	i1___lwdiv@counter
  6654  0BB3  0AF7               	incf	i1___lwdiv@counter,f
  6655  0BB4                     i1l2686:	
  6656  0BB4  1BF1               	btfsc	i1___lwdiv@divisor+1,7
  6657  0BB5  2BC2               	goto	i1l2688
  6658  0BB6  3001               	movlw	1
  6659  0BB7                     u186_25:	
  6660  0BB7  1003               	clrc
  6661  0BB8  0DF0               	rlf	i1___lwdiv@divisor,f
  6662  0BB9  0DF1               	rlf	i1___lwdiv@divisor+1,f
  6663  0BBA  3EFF               	addlw	-1
  6664  0BBB  1D03               	skipz
  6665  0BBC  2BB7               	goto	u186_25
  6666  0BBD  3001               	movlw	1
  6667  0BBE  00F4               	movwf	??i1___lwdiv
  6668  0BBF  0874               	movf	??i1___lwdiv,w
  6669  0BC0  07F7               	addwf	i1___lwdiv@counter,f
  6670  0BC1  2BB4               	goto	i1l2686
  6671  0BC2                     i1l2688:	
  6672  0BC2  3001               	movlw	1
  6673  0BC3                     u188_25:	
  6674  0BC3  1003               	clrc
  6675  0BC4  0DF5               	rlf	i1___lwdiv@quotient,f
  6676  0BC5  0DF6               	rlf	i1___lwdiv@quotient+1,f
  6677  0BC6  3EFF               	addlw	-1
  6678  0BC7  1D03               	skipz
  6679  0BC8  2BC3               	goto	u188_25
  6680  0BC9  0871               	movf	i1___lwdiv@divisor+1,w
  6681  0BCA  0273               	subwf	i1___lwdiv@dividend+1,w
  6682  0BCB  1D03               	skipz
  6683  0BCC  2BCF               	goto	u189_25
  6684  0BCD  0870               	movf	i1___lwdiv@divisor,w
  6685  0BCE  0272               	subwf	i1___lwdiv@dividend,w
  6686  0BCF                     u189_25:	
  6687  0BCF  1C03               	skipc
  6688  0BD0  2BD8               	goto	i1l2694
  6689  0BD1  0870               	movf	i1___lwdiv@divisor,w
  6690  0BD2  02F2               	subwf	i1___lwdiv@dividend,f
  6691  0BD3  0871               	movf	i1___lwdiv@divisor+1,w
  6692  0BD4  1C03               	skipc
  6693  0BD5  03F3               	decf	i1___lwdiv@dividend+1,f
  6694  0BD6  02F3               	subwf	i1___lwdiv@dividend+1,f
  6695  0BD7  1475               	bsf	i1___lwdiv@quotient,0
  6696  0BD8                     i1l2694:	
  6697  0BD8  3001               	movlw	1
  6698  0BD9                     u190_25:	
  6699  0BD9  1003               	clrc
  6700  0BDA  0CF1               	rrf	i1___lwdiv@divisor+1,f
  6701  0BDB  0CF0               	rrf	i1___lwdiv@divisor,f
  6702  0BDC  3EFF               	addlw	-1
  6703  0BDD  1D03               	skipz
  6704  0BDE  2BD9               	goto	u190_25
  6705  0BDF  3001               	movlw	1
  6706  0BE0  02F7               	subwf	i1___lwdiv@counter,f
  6707  0BE1  1D03               	btfss	3,2
  6708  0BE2  2BC2               	goto	i1l2688
  6709  0BE3                     i1l2698:	
  6710  0BE3  0876               	movf	i1___lwdiv@quotient+1,w
  6711  0BE4  00F1               	movwf	?i1___lwdiv+1
  6712  0BE5  0875               	movf	i1___lwdiv@quotient,w
  6713  0BE6  00F0               	movwf	?i1___lwdiv
  6714  0BE7  0008               	return
  6715  0BE8                     __end_ofi1___lwdiv:	
  6716                           
  6717                           	psect	text35
  6718  0A01                     __ptext35:	
  6719 ;; *************** function i1_putsXLCD *****************
  6720 ;; Defined at:
  6721 ;;		line 419 in file "lcd_pic16.c"
  6722 ;; Parameters:    Size  Location     Type
  6723 ;;  buffer          1    wreg     PTR unsigned char 
  6724 ;;		 -> lineOne(17), lineTwo(17), 
  6725 ;; Auto vars:     Size  Location     Type
  6726 ;;  buffer          1    5[COMMON] PTR unsigned char 
  6727 ;;		 -> lineOne(17), lineTwo(17), 
  6728 ;; Return value:  Size  Location     Type
  6729 ;;                  1    wreg      void 
  6730 ;; Registers used:
  6731 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6732 ;; Tracked objects:
  6733 ;;		On entry : 0/0
  6734 ;;		On exit  : 0/0
  6735 ;;		Unchanged: 0/0
  6736 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6737 ;;      Params:         0       0       0       0       0
  6738 ;;      Locals:         1       0       0       0       0
  6739 ;;      Temps:          1       0       0       0       0
  6740 ;;      Totals:         2       0       0       0       0
  6741 ;;Total ram usage:        2 bytes
  6742 ;; Hardware stack levels used:    1
  6743 ;; Hardware stack levels required when called:    2
  6744 ;; This function calls:
  6745 ;;		i1_BusyXLCD
  6746 ;;		i1_WriteDataXLCD
  6747 ;; This function is called by:
  6748 ;;		_updateLCD
  6749 ;; This function uses a non-reentrant model
  6750 ;;
  6751                           
  6752                           
  6753                           ;psect for function i1_putsXLCD
  6754  0A01                     i1_putsXLCD:	
  6755                           
  6756                           ;incstack = 0
  6757 ;; hardware stack exceeded
  6758                           ; Regs used in i1_putsXLCD: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6759                           ;i1putsXLCD@buffer stored from wreg
  6760  0A01  00F5               	movwf	i1putsXLCD@buffer
  6761  0A02                     i1l2942:	
  6762                           ;lcd_pic16.c: 419: void putsXLCD(char *buffer);lcd_pic16.c: 420: {;lcd_pic16.c: 421:    
      +                               while(*buffer)
  6763                           
  6764                           
  6765                           ;lcd_pic16.c: 421:         while(*buffer)
  6766  0A02  0875               	movf	i1putsXLCD@buffer,w
  6767  0A03  0084               	movwf	4
  6768  0A04  1383               	bcf	3,7	;select IRP bank0
  6769  0A05  0800               	movf	0,w
  6770  0A06  1903               	btfsc	3,2
  6771  0A07  0008               	return
  6772  0A08                     i1l2936:	
  6773  0A08  120A  118A  27F5  120A  158A  	fcall	i1_BusyXLCD
  6774  0A0D  3A00               	xorlw	0
  6775  0A0E  1D03               	skipz
  6776  0A0F  2A08               	goto	i1l2936
  6777                           
  6778                           ;lcd_pic16.c: 424:                 WriteDataXLCD(*buffer);
  6779  0A10  0875               	movf	i1putsXLCD@buffer,w
  6780  0A11  0084               	movwf	4
  6781  0A12  1383               	bcf	3,7	;select IRP bank0
  6782  0A13  0800               	movf	0,w
  6783  0A14  120A  158A  2470  120A  158A  	fcall	i1_WriteDataXLCD
  6784                           
  6785                           ;lcd_pic16.c: 425:                 buffer++;
  6786  0A19  3001               	movlw	1
  6787  0A1A  00F4               	movwf	??i1_putsXLCD
  6788  0A1B  0874               	movf	??i1_putsXLCD,w
  6789  0A1C  07F5               	addwf	i1putsXLCD@buffer,f
  6790  0A1D  2A02               	goto	i1l2942
  6791  0A1E                     __end_ofi1_putsXLCD:	
  6792                           
  6793                           	psect	text36
  6794  0C70                     __ptext36:	
  6795 ;; *************** function i1_WriteDataXLCD *****************
  6796 ;; Defined at:
  6797 ;;		line 110 in file "lcd_pic16.c"
  6798 ;; Parameters:    Size  Location     Type
  6799 ;;  data            1    wreg     unsigned char 
  6800 ;; Auto vars:     Size  Location     Type
  6801 ;;  data            1    3[COMMON] unsigned char 
  6802 ;; Return value:  Size  Location     Type
  6803 ;;                  1    wreg      void 
  6804 ;; Registers used:
  6805 ;;		wreg, status,2, status,0, pclath, cstack
  6806 ;; Tracked objects:
  6807 ;;		On entry : 0/0
  6808 ;;		On exit  : 0/0
  6809 ;;		Unchanged: 0/0
  6810 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6811 ;;      Params:         0       0       0       0       0
  6812 ;;      Locals:         1       0       0       0       0
  6813 ;;      Temps:          2       0       0       0       0
  6814 ;;      Totals:         3       0       0       0       0
  6815 ;;Total ram usage:        3 bytes
  6816 ;; Hardware stack levels used:    1
  6817 ;; Hardware stack levels required when called:    1
  6818 ;; This function calls:
  6819 ;;		i1_DelayFor18TCY
  6820 ;; This function is called by:
  6821 ;;		i1_putsXLCD
  6822 ;; This function uses a non-reentrant model
  6823 ;;
  6824                           
  6825                           
  6826                           ;psect for function i1_WriteDataXLCD
  6827  0C70                     i1_WriteDataXLCD:	
  6828                           
  6829                           ;incstack = 0
  6830 ;; hardware stack exceeded
  6831                           ; Regs used in i1_WriteDataXLCD: [wreg+status,2+status,0+pclath+cstack]
  6832                           ;i1WriteDataXLCD@data stored from wreg
  6833  0C70  00F3               	movwf	i1WriteDataXLCD@data
  6834                           
  6835                           ;lcd_pic16.c: 110: void WriteDataXLCD(char data);lcd_pic16.c: 111: {;lcd_pic16.c: 125:  
      +                                 TRISB &= 0x0f;
  6836  0C71  300F               	movlw	15
  6837  0C72  00F1               	movwf	??i1_WriteDataXLCD
  6838  0C73  0871               	movf	??i1_WriteDataXLCD,w
  6839  0C74  1683               	bsf	3,5	;RP0=1, select bank1
  6840  0C75  1303               	bcf	3,6	;RP1=0, select bank1
  6841  0C76  0586               	andwf	6,f	;volatile
  6842                           
  6843                           ;lcd_pic16.c: 126:         PORTB &= 0x0f;
  6844  0C77  300F               	movlw	15
  6845  0C78  00F1               	movwf	??i1_WriteDataXLCD
  6846  0C79  0871               	movf	??i1_WriteDataXLCD,w
  6847  0C7A  1283               	bcf	3,5	;RP0=0, select bank0
  6848  0C7B  1303               	bcf	3,6	;RP1=0, select bank0
  6849  0C7C  0586               	andwf	6,f	;volatile
  6850                           
  6851                           ;lcd_pic16.c: 127:         PORTB |= data&0xf0;
  6852  0C7D  0873               	movf	i1WriteDataXLCD@data,w
  6853  0C7E  39F0               	andlw	240
  6854  0C7F  00F1               	movwf	??i1_WriteDataXLCD
  6855  0C80  0871               	movf	??i1_WriteDataXLCD,w
  6856  0C81  0486               	iorwf	6,f	;volatile
  6857                           
  6858                           ;lcd_pic16.c: 133:         PORTBbits.RB1 = 1;
  6859  0C82  1486               	bsf	6,1	;volatile
  6860                           
  6861                           ;lcd_pic16.c: 134:         PORTBbits.RB2 = 0;
  6862  0C83  1106               	bcf	6,2	;volatile
  6863                           
  6864                           ;lcd_pic16.c: 135:         DelayFor18TCY();
  6865  0C84  120A  158A  215C  120A  158A  	fcall	i1_DelayFor18TCY
  6866                           
  6867                           ;lcd_pic16.c: 136:         PORTBbits.RB3 = 1;
  6868  0C89  1283               	bcf	3,5	;RP0=0, select bank0
  6869  0C8A  1303               	bcf	3,6	;RP1=0, select bank0
  6870  0C8B  1586               	bsf	6,3	;volatile
  6871                           
  6872                           ;lcd_pic16.c: 137:         DelayFor18TCY();
  6873  0C8C  120A  158A  215C  120A  158A  	fcall	i1_DelayFor18TCY
  6874                           
  6875                           ;lcd_pic16.c: 138:         PORTBbits.RB3 = 0;
  6876  0C91  1283               	bcf	3,5	;RP0=0, select bank0
  6877  0C92  1303               	bcf	3,6	;RP1=0, select bank0
  6878  0C93  1186               	bcf	6,3	;volatile
  6879                           
  6880                           ;lcd_pic16.c: 140:         PORTB &= 0x0f;
  6881  0C94  300F               	movlw	15
  6882  0C95  00F1               	movwf	??i1_WriteDataXLCD
  6883  0C96  0871               	movf	??i1_WriteDataXLCD,w
  6884  0C97  0586               	andwf	6,f	;volatile
  6885                           
  6886                           ;lcd_pic16.c: 141:         PORTB |= ((data<<4)&0xf0);
  6887  0C98  0873               	movf	i1WriteDataXLCD@data,w
  6888  0C99  00F1               	movwf	??i1_WriteDataXLCD
  6889  0C9A  3003               	movlw	3
  6890  0C9B                     u180_25:	
  6891  0C9B  1003               	clrc
  6892  0C9C  0DF1               	rlf	??i1_WriteDataXLCD,f
  6893  0C9D  3EFF               	addlw	-1
  6894  0C9E  1D03               	skipz
  6895  0C9F  2C9B               	goto	u180_25
  6896  0CA0  1003               	clrc
  6897  0CA1  0D71               	rlf	??i1_WriteDataXLCD,w
  6898  0CA2  39F0               	andlw	240
  6899  0CA3  00F2               	movwf	??i1_WriteDataXLCD+1
  6900  0CA4  0872               	movf	??i1_WriteDataXLCD+1,w
  6901  0CA5  0486               	iorwf	6,f	;volatile
  6902                           
  6903                           ;lcd_pic16.c: 146:         DelayFor18TCY();
  6904  0CA6  120A  158A  215C  120A  158A  	fcall	i1_DelayFor18TCY
  6905                           
  6906                           ;lcd_pic16.c: 147:         PORTBbits.RB3 = 1;
  6907  0CAB  1283               	bcf	3,5	;RP0=0, select bank0
  6908  0CAC  1303               	bcf	3,6	;RP1=0, select bank0
  6909  0CAD  1586               	bsf	6,3	;volatile
  6910                           
  6911                           ;lcd_pic16.c: 148:         DelayFor18TCY();
  6912  0CAE  120A  158A  215C   	fcall	i1_DelayFor18TCY
  6913                           
  6914                           ;lcd_pic16.c: 149:         PORTBbits.RB3 = 0;
  6915  0CB1  1283               	bcf	3,5	;RP0=0, select bank0
  6916  0CB2  1303               	bcf	3,6	;RP1=0, select bank0
  6917  0CB3  1186               	bcf	6,3	;volatile
  6918                           
  6919                           ;lcd_pic16.c: 151:         TRISB |= 0xf0;
  6920  0CB4  30F0               	movlw	240
  6921  0CB5  00F1               	movwf	??i1_WriteDataXLCD
  6922  0CB6  0871               	movf	??i1_WriteDataXLCD,w
  6923  0CB7  1683               	bsf	3,5	;RP0=1, select bank1
  6924  0CB8  1303               	bcf	3,6	;RP1=0, select bank1
  6925  0CB9  0486               	iorwf	6,f	;volatile
  6926  0CBA  0008               	return
  6927  0CBB                     __end_ofi1_WriteDataXLCD:	
  6928                           
  6929                           	psect	text37
  6930  07F5                     __ptext37:	
  6931 ;; *************** function i1_BusyXLCD *****************
  6932 ;; Defined at:
  6933 ;;		line 451 in file "lcd_pic16.c"
  6934 ;; Parameters:    Size  Location     Type
  6935 ;;		None
  6936 ;; Auto vars:     Size  Location     Type
  6937 ;;		None
  6938 ;; Return value:  Size  Location     Type
  6939 ;;                  1    wreg      unsigned char 
  6940 ;; Registers used:
  6941 ;;		wreg
  6942 ;; Tracked objects:
  6943 ;;		On entry : 0/0
  6944 ;;		On exit  : 0/0
  6945 ;;		Unchanged: 0/0
  6946 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6947 ;;      Params:         0       0       0       0       0
  6948 ;;      Locals:         0       0       0       0       0
  6949 ;;      Temps:          2       0       0       0       0
  6950 ;;      Totals:         2       0       0       0       0
  6951 ;;Total ram usage:        2 bytes
  6952 ;; Hardware stack levels used:    1
  6953 ;; This function calls:
  6954 ;;		Nothing
  6955 ;; This function is called by:
  6956 ;;		i1_putsXLCD
  6957 ;; This function uses a non-reentrant model
  6958 ;;
  6959                           
  6960                           
  6961                           ;psect for function i1_BusyXLCD
  6962  07F5                     i1_BusyXLCD:	
  6963                           
  6964                           ;lcd_pic16.c: 504:         _delay((unsigned long)((5)*(4000000/4000.0)));
  6965                           
  6966                           ;incstack = 0
  6967 ;; hardware stack exceeded
  6968                           ; Regs used in i1_BusyXLCD: [wreg]
  6969  07F5  3007               	movlw	7
  6970  07F6  00F1               	movwf	??i1_BusyXLCD+1
  6971  07F7  307D               	movlw	125
  6972  07F8  00F0               	movwf	??i1_BusyXLCD
  6973  07F9                     u379_27:	
  6974  07F9  0BF0               	decfsz	??i1_BusyXLCD,f
  6975  07FA  2FF9               	goto	u379_27
  6976  07FB  0BF1               	decfsz	??i1_BusyXLCD+1,f
  6977  07FC  2FF9               	goto	u379_27
  6978                           
  6979                           ;lcd_pic16.c: 505:         return 0;
  6980  07FD  3000               	movlw	0
  6981  07FE  0008               	return
  6982  07FF                     __end_ofi1_BusyXLCD:	
  6983                           
  6984                           	psect	text38
  6985  0D06                     __ptext38:	
  6986 ;; *************** function i1_SetDDRamAddr *****************
  6987 ;; Defined at:
  6988 ;;		line 217 in file "lcd_pic16.c"
  6989 ;; Parameters:    Size  Location     Type
  6990 ;;  DDaddr          1    wreg     unsigned char 
  6991 ;; Auto vars:     Size  Location     Type
  6992 ;;  DDaddr          1    3[COMMON] unsigned char 
  6993 ;; Return value:  Size  Location     Type
  6994 ;;                  1    wreg      void 
  6995 ;; Registers used:
  6996 ;;		wreg, status,2, status,0, pclath, cstack
  6997 ;; Tracked objects:
  6998 ;;		On entry : 0/0
  6999 ;;		On exit  : 0/0
  7000 ;;		Unchanged: 0/0
  7001 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7002 ;;      Params:         0       0       0       0       0
  7003 ;;      Locals:         1       0       0       0       0
  7004 ;;      Temps:          2       0       0       0       0
  7005 ;;      Totals:         3       0       0       0       0
  7006 ;;Total ram usage:        3 bytes
  7007 ;; Hardware stack levels used:    1
  7008 ;; Hardware stack levels required when called:    1
  7009 ;; This function calls:
  7010 ;;		i1_DelayFor18TCY
  7011 ;; This function is called by:
  7012 ;;		_updateLCD
  7013 ;; This function uses a non-reentrant model
  7014 ;;
  7015                           
  7016                           
  7017                           ;psect for function i1_SetDDRamAddr
  7018  0D06                     i1_SetDDRamAddr:	
  7019                           
  7020                           ;incstack = 0
  7021 ;; hardware stack exceeded
  7022                           ; Regs used in i1_SetDDRamAddr: [wreg+status,2+status,0+pclath+cstack]
  7023                           ;i1SetDDRamAddr@DDaddr stored from wreg
  7024  0D06  00F3               	movwf	i1SetDDRamAddr@DDaddr
  7025                           
  7026                           ;lcd_pic16.c: 217: void SetDDRamAddr(unsigned char DDaddr);lcd_pic16.c: 218: {;lcd_pic16
      +                          .c: 232:         TRISB &= 0x0f;
  7027  0D07  300F               	movlw	15
  7028  0D08  00F1               	movwf	??i1_SetDDRamAddr
  7029  0D09  0871               	movf	??i1_SetDDRamAddr,w
  7030  0D0A  1683               	bsf	3,5	;RP0=1, select bank1
  7031  0D0B  1303               	bcf	3,6	;RP1=0, select bank1
  7032  0D0C  0586               	andwf	6,f	;volatile
  7033                           
  7034                           ;lcd_pic16.c: 233:         PORTB &= 0x0f;
  7035  0D0D  300F               	movlw	15
  7036  0D0E  00F1               	movwf	??i1_SetDDRamAddr
  7037  0D0F  0871               	movf	??i1_SetDDRamAddr,w
  7038  0D10  1283               	bcf	3,5	;RP0=0, select bank0
  7039  0D11  1303               	bcf	3,6	;RP1=0, select bank0
  7040  0D12  0586               	andwf	6,f	;volatile
  7041                           
  7042                           ;lcd_pic16.c: 234:         PORTB |= ((DDaddr | 0b10000000) & 0xf0);
  7043  0D13  0873               	movf	i1SetDDRamAddr@DDaddr,w
  7044  0D14  3880               	iorlw	128
  7045  0D15  39F0               	andlw	240
  7046  0D16  00F1               	movwf	??i1_SetDDRamAddr
  7047  0D17  0871               	movf	??i1_SetDDRamAddr,w
  7048  0D18  0486               	iorwf	6,f	;volatile
  7049                           
  7050                           ;lcd_pic16.c: 240:         PORTBbits.RB2 = 0;
  7051  0D19  1106               	bcf	6,2	;volatile
  7052                           
  7053                           ;lcd_pic16.c: 241:         PORTBbits.RB1 = 0;
  7054  0D1A  1086               	bcf	6,1	;volatile
  7055                           
  7056                           ;lcd_pic16.c: 242:         DelayFor18TCY();
  7057  0D1B  120A  158A  215C  120A  158A  	fcall	i1_DelayFor18TCY
  7058                           
  7059                           ;lcd_pic16.c: 243:         PORTBbits.RB3 = 1;
  7060  0D20  1283               	bcf	3,5	;RP0=0, select bank0
  7061  0D21  1303               	bcf	3,6	;RP1=0, select bank0
  7062  0D22  1586               	bsf	6,3	;volatile
  7063                           
  7064                           ;lcd_pic16.c: 244:         DelayFor18TCY();
  7065  0D23  120A  158A  215C  120A  158A  	fcall	i1_DelayFor18TCY
  7066                           
  7067                           ;lcd_pic16.c: 245:         PORTBbits.RB3 = 0;
  7068  0D28  1283               	bcf	3,5	;RP0=0, select bank0
  7069  0D29  1303               	bcf	3,6	;RP1=0, select bank0
  7070  0D2A  1186               	bcf	6,3	;volatile
  7071                           
  7072                           ;lcd_pic16.c: 247:         PORTB &= 0x0f;
  7073  0D2B  300F               	movlw	15
  7074  0D2C  00F1               	movwf	??i1_SetDDRamAddr
  7075  0D2D  0871               	movf	??i1_SetDDRamAddr,w
  7076  0D2E  0586               	andwf	6,f	;volatile
  7077                           
  7078                           ;lcd_pic16.c: 248:         PORTB |= ((DDaddr<<4)&0xf0);
  7079  0D2F  0873               	movf	i1SetDDRamAddr@DDaddr,w
  7080  0D30  00F1               	movwf	??i1_SetDDRamAddr
  7081  0D31  3003               	movlw	3
  7082  0D32                     u222_25:	
  7083  0D32  1003               	clrc
  7084  0D33  0DF1               	rlf	??i1_SetDDRamAddr,f
  7085  0D34  3EFF               	addlw	-1
  7086  0D35  1D03               	skipz
  7087  0D36  2D32               	goto	u222_25
  7088  0D37  1003               	clrc
  7089  0D38  0D71               	rlf	??i1_SetDDRamAddr,w
  7090  0D39  39F0               	andlw	240
  7091  0D3A  00F2               	movwf	??i1_SetDDRamAddr+1
  7092  0D3B  0872               	movf	??i1_SetDDRamAddr+1,w
  7093  0D3C  0486               	iorwf	6,f	;volatile
  7094                           
  7095                           ;lcd_pic16.c: 253:         DelayFor18TCY();
  7096  0D3D  120A  158A  215C  120A  158A  	fcall	i1_DelayFor18TCY
  7097                           
  7098                           ;lcd_pic16.c: 254:         PORTBbits.RB3 = 1;
  7099  0D42  1283               	bcf	3,5	;RP0=0, select bank0
  7100  0D43  1303               	bcf	3,6	;RP1=0, select bank0
  7101  0D44  1586               	bsf	6,3	;volatile
  7102                           
  7103                           ;lcd_pic16.c: 255:         DelayFor18TCY();
  7104  0D45  120A  158A  215C   	fcall	i1_DelayFor18TCY
  7105                           
  7106                           ;lcd_pic16.c: 256:         PORTBbits.RB3 = 0;
  7107  0D48  1283               	bcf	3,5	;RP0=0, select bank0
  7108  0D49  1303               	bcf	3,6	;RP1=0, select bank0
  7109  0D4A  1186               	bcf	6,3	;volatile
  7110                           
  7111                           ;lcd_pic16.c: 258:         TRISB |= 0xf0;
  7112  0D4B  30F0               	movlw	240
  7113  0D4C  00F1               	movwf	??i1_SetDDRamAddr
  7114  0D4D  0871               	movf	??i1_SetDDRamAddr,w
  7115  0D4E  1683               	bsf	3,5	;RP0=1, select bank1
  7116  0D4F  1303               	bcf	3,6	;RP1=0, select bank1
  7117  0D50  0486               	iorwf	6,f	;volatile
  7118  0D51  0008               	return
  7119  0D52                     __end_ofi1_SetDDRamAddr:	
  7120                           
  7121                           	psect	text39
  7122  095C                     __ptext39:	
  7123 ;; *************** function i1_DelayFor18TCY *****************
  7124 ;; Defined at:
  7125 ;;		line 22 in file "lcd_pic16.c"
  7126 ;; Parameters:    Size  Location     Type
  7127 ;;		None
  7128 ;; Auto vars:     Size  Location     Type
  7129 ;;		None
  7130 ;; Return value:  Size  Location     Type
  7131 ;;                  1    wreg      void 
  7132 ;; Registers used:
  7133 ;;		wreg
  7134 ;; Tracked objects:
  7135 ;;		On entry : 0/0
  7136 ;;		On exit  : 0/0
  7137 ;;		Unchanged: 0/0
  7138 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7139 ;;      Params:         0       0       0       0       0
  7140 ;;      Locals:         0       0       0       0       0
  7141 ;;      Temps:          1       0       0       0       0
  7142 ;;      Totals:         1       0       0       0       0
  7143 ;;Total ram usage:        1 bytes
  7144 ;; Hardware stack levels used:    1
  7145 ;; This function calls:
  7146 ;;		Nothing
  7147 ;; This function is called by:
  7148 ;;		i1_WriteDataXLCD
  7149 ;;		i1_SetDDRamAddr
  7150 ;; This function uses a non-reentrant model
  7151 ;;
  7152                           
  7153                           
  7154                           ;psect for function i1_DelayFor18TCY
  7155  095C                     i1_DelayFor18TCY:	
  7156                           
  7157                           ;lcd_pic16.c: 24:    _delay((unsigned long)((18)*(4000000/4000000.0)));
  7158                           
  7159                           ;incstack = 0
  7160 ;; hardware stack exceeded
  7161                           ; Regs used in i1_DelayFor18TCY: [wreg]
  7162  095C  3005               	movlw	5
  7163  095D  00F0               	movwf	??i1_DelayFor18TCY
  7164  095E                     u380_27:	
  7165  095E  0BF0               	decfsz	??i1_DelayFor18TCY,f
  7166  095F  295E               	goto	u380_27
  7167  0960  2961               	nop2
  7168  0961  0008               	return
  7169  0962                     __end_ofi1_DelayFor18TCY:	
  7170                           
  7171                           	psect	text40
  7172  0C28                     __ptext40:	
  7173 ;; *************** function _time *****************
  7174 ;; Defined at:
  7175 ;;		line 147 in file "main.c"
  7176 ;; Parameters:    Size  Location     Type
  7177 ;;		None
  7178 ;; Auto vars:     Size  Location     Type
  7179 ;;		None
  7180 ;; Return value:  Size  Location     Type
  7181 ;;                  1    wreg      void 
  7182 ;; Registers used:
  7183 ;;		wreg, status,2, status,0, pclath, cstack
  7184 ;; Tracked objects:
  7185 ;;		On entry : 0/0
  7186 ;;		On exit  : 0/0
  7187 ;;		Unchanged: 0/0
  7188 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7189 ;;      Params:         0       0       0       0       0
  7190 ;;      Locals:         0       0       0       0       0
  7191 ;;      Temps:          1       0       0       0       0
  7192 ;;      Totals:         1       0       0       0       0
  7193 ;;Total ram usage:        1 bytes
  7194 ;; Hardware stack levels used:    1
  7195 ;; Hardware stack levels required when called:    2
  7196 ;; This function calls:
  7197 ;;		i1_setData
  7198 ;; This function is called by:
  7199 ;;		_inter
  7200 ;; This function uses a non-reentrant model
  7201 ;;
  7202                           
  7203                           
  7204                           ;psect for function _time
  7205  0C28                     _time:	
  7206                           
  7207                           ;main.c: 148:     hundredMiliSeconds++;
  7208                           
  7209                           ;incstack = 0
  7210 ;; hardware stack exceeded
  7211                           ; Regs used in _time: [wreg+status,2+status,0+pclath+cstack]
  7212  0C28  3001               	movlw	1
  7213  0C29  00F6               	movwf	??_time
  7214  0C2A  0876               	movf	??_time,w
  7215  0C2B  1283               	bcf	3,5	;RP0=0, select bank0
  7216  0C2C  1303               	bcf	3,6	;RP1=0, select bank0
  7217  0C2D  07C9               	addwf	_hundredMiliSeconds,f
  7218                           
  7219                           ;main.c: 149:     if(hundredMiliSeconds >= 10){
  7220  0C2E  300A               	movlw	10
  7221  0C2F  0249               	subwf	_hundredMiliSeconds,w
  7222  0C30  1C03               	skipc
  7223  0C31  0008               	return
  7224                           
  7225                           ;main.c: 150:         hundredMiliSeconds = 0;
  7226  0C32  01C9               	clrf	_hundredMiliSeconds
  7227                           
  7228                           ;main.c: 151:         seconds++;
  7229  0C33  3001               	movlw	1
  7230  0C34  00F6               	movwf	??_time
  7231  0C35  0876               	movf	??_time,w
  7232  0C36  07CA               	addwf	_seconds,f
  7233                           
  7234                           ;main.c: 152:         if(seconds >= 60){
  7235  0C37  303C               	movlw	60
  7236  0C38  024A               	subwf	_seconds,w
  7237  0C39  1C03               	skipc
  7238  0C3A  0008               	return
  7239                           
  7240                           ;main.c: 153:             seconds = 0;
  7241  0C3B  01CA               	clrf	_seconds
  7242                           
  7243                           ;main.c: 154:             minutes++;
  7244  0C3C  3001               	movlw	1
  7245  0C3D  00F6               	movwf	??_time
  7246  0C3E  0876               	movf	??_time,w
  7247  0C3F  07CD               	addwf	_minutes,f
  7248                           
  7249                           ;main.c: 155:             setData(0);
  7250  0C40  3000               	movlw	0
  7251  0C41  120A  158A  26EB  120A  158A  	fcall	i1_setData
  7252                           
  7253                           ;main.c: 156:             if(minutes >= 60){
  7254  0C46  303C               	movlw	60
  7255  0C47  1283               	bcf	3,5	;RP0=0, select bank0
  7256  0C48  1303               	bcf	3,6	;RP1=0, select bank0
  7257  0C49  024D               	subwf	_minutes,w
  7258  0C4A  1C03               	skipc
  7259  0C4B  0008               	return
  7260                           
  7261                           ;main.c: 157:                 minutes = 0;
  7262  0C4C  01CD               	clrf	_minutes
  7263                           
  7264                           ;main.c: 158:                 hours++;
  7265  0C4D  3001               	movlw	1
  7266  0C4E  00F6               	movwf	??_time
  7267  0C4F  0876               	movf	??_time,w
  7268  0C50  07CE               	addwf	_hours,f
  7269                           
  7270                           ;main.c: 159:                 if(hours >= 24){
  7271  0C51  3018               	movlw	24
  7272  0C52  024E               	subwf	_hours,w
  7273  0C53  1C03               	skipc
  7274  0C54  0008               	return
  7275                           
  7276                           ;main.c: 160:                     hours = 0;
  7277  0C55  01CE               	clrf	_hours
  7278                           
  7279                           ;main.c: 161:                     days++;
  7280  0C56  3001               	movlw	1
  7281  0C57  00F6               	movwf	??_time
  7282  0C58  0876               	movf	??_time,w
  7283  0C59  07CF               	addwf	_days,f
  7284                           
  7285                           ;main.c: 162:                     if(days >= 30){
  7286  0C5A  301E               	movlw	30
  7287  0C5B  024F               	subwf	_days,w
  7288  0C5C  1C03               	skipc
  7289  0C5D  2C63               	goto	i1l3290
  7290                           
  7291                           ;main.c: 163:                         days = 0;
  7292  0C5E  01CF               	clrf	_days
  7293                           
  7294                           ;main.c: 164:                         months++;
  7295  0C5F  3001               	movlw	1
  7296  0C60  00F6               	movwf	??_time
  7297  0C61  0876               	movf	??_time,w
  7298  0C62  07D0               	addwf	_months,f
  7299  0C63                     i1l3290:	
  7300  0C63  300D               	movlw	13
  7301  0C64  064F               	xorwf	_days,w
  7302  0C65  1D03               	btfss	3,2
  7303  0C66  2C6D               	goto	i1l233
  7304  0C67  3006               	movlw	6
  7305  0C68  0650               	xorwf	_months,w
  7306  0C69  1D03               	btfss	3,2
  7307  0C6A  2C6D               	goto	i1l233
  7308  0C6B  01C8               	clrf	_functionalStat
  7309                           
  7310                           ;main.c: 168:                     }else{
  7311  0C6C  0008               	return
  7312  0C6D                     i1l233:	
  7313  0C6D  01C8               	clrf	_functionalStat
  7314  0C6E  0AC8               	incf	_functionalStat,f
  7315  0C6F  0008               	return
  7316  0C70                     __end_of_time:	
  7317                           
  7318                           	psect	text41
  7319  0EEB                     __ptext41:	
  7320 ;; *************** function i1_setData *****************
  7321 ;; Defined at:
  7322 ;;		line 44 in file "eeprom.c"
  7323 ;; Parameters:    Size  Location     Type
  7324 ;;  full            1    wreg     unsigned char 
  7325 ;; Auto vars:     Size  Location     Type
  7326 ;;  full            1    5[COMMON] unsigned char 
  7327 ;;  setData         1    4[COMMON] unsigned char 
  7328 ;;  setData         1    3[COMMON] unsigned char 
  7329 ;; Return value:  Size  Location     Type
  7330 ;;                  1    wreg      void 
  7331 ;; Registers used:
  7332 ;;		wreg, status,2, status,0, pclath, cstack
  7333 ;; Tracked objects:
  7334 ;;		On entry : 0/0
  7335 ;;		On exit  : 0/0
  7336 ;;		Unchanged: 0/0
  7337 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7338 ;;      Params:         0       0       0       0       0
  7339 ;;      Locals:         3       0       0       0       0
  7340 ;;      Temps:          1       0       0       0       0
  7341 ;;      Totals:         4       0       0       0       0
  7342 ;;Total ram usage:        4 bytes
  7343 ;; Hardware stack levels used:    1
  7344 ;; Hardware stack levels required when called:    1
  7345 ;; This function calls:
  7346 ;;		i1_writeEEPROM
  7347 ;; This function is called by:
  7348 ;;		_time
  7349 ;; This function uses a non-reentrant model
  7350 ;;
  7351                           
  7352                           
  7353                           ;psect for function i1_setData
  7354  0EEB                     i1_setData:	
  7355                           
  7356                           ;incstack = 0
  7357 ;; hardware stack exceeded
  7358                           ; Regs used in i1_setData: [wreg+status,2+status,0+pclath+cstack]
  7359                           ;i1setData@full stored from wreg
  7360  0EEB  00F5               	movwf	i1setData@full
  7361                           
  7362                           ;eeprom.c: 45:     unsigned char data0 = frequency & 0x00FF;
  7363  0EEC  1283               	bcf	3,5	;RP0=0, select bank0
  7364  0EED  1303               	bcf	3,6	;RP1=0, select bank0
  7365  0EEE  0844               	movf	_frequency,w
  7366  0EEF  00F2               	movwf	??i1_setData
  7367  0EF0  0872               	movf	??i1_setData,w
  7368  0EF1  00F3               	movwf	i1setData@data0
  7369                           
  7370                           ;eeprom.c: 46:     unsigned char data1 = frequency >> 8;
  7371  0EF2  0845               	movf	_frequency+1,w
  7372  0EF3  00F2               	movwf	??i1_setData
  7373  0EF4  0872               	movf	??i1_setData,w
  7374  0EF5  00F4               	movwf	i1setData@data1
  7375                           
  7376                           ;eeprom.c: 47:     if(full)writeEEPROM(data0 ,0);
  7377  0EF6  0875               	movf	i1setData@full,w
  7378  0EF7  1903               	btfsc	3,2
  7379  0EF8  2F00               	goto	i1l2904
  7380  0EF9  01F0               	clrf	i1writeEEPROM@address
  7381  0EFA  0873               	movf	i1setData@data0,w
  7382  0EFB  120A  158A  21EA  120A  158A  	fcall	i1_writeEEPROM
  7383  0F00                     i1l2904:	
  7384                           
  7385                           ;eeprom.c: 48:     if(full)writeEEPROM(data1 ,1);
  7386  0F00  0875               	movf	i1setData@full,w
  7387  0F01  1903               	btfsc	3,2
  7388  0F02  2F0B               	goto	i1l70
  7389  0F03  01F0               	clrf	i1writeEEPROM@address
  7390  0F04  0AF0               	incf	i1writeEEPROM@address,f
  7391  0F05  0874               	movf	i1setData@data1,w
  7392  0F06  120A  158A  21EA  120A  158A  	fcall	i1_writeEEPROM
  7393  0F0B                     i1l70:	
  7394                           
  7395                           ;eeprom.c: 49:     writeEEPROM(months ,2);
  7396  0F0B  3002               	movlw	2
  7397  0F0C  00F2               	movwf	??i1_setData
  7398  0F0D  0872               	movf	??i1_setData,w
  7399  0F0E  00F0               	movwf	i1writeEEPROM@address
  7400  0F0F  1283               	bcf	3,5	;RP0=0, select bank0
  7401  0F10  1303               	bcf	3,6	;RP1=0, select bank0
  7402  0F11  0850               	movf	_months,w
  7403  0F12  120A  158A  21EA  120A  158A  	fcall	i1_writeEEPROM
  7404                           
  7405                           ;eeprom.c: 50:     writeEEPROM(days ,3);
  7406  0F17  3003               	movlw	3
  7407  0F18  00F2               	movwf	??i1_setData
  7408  0F19  0872               	movf	??i1_setData,w
  7409  0F1A  00F0               	movwf	i1writeEEPROM@address
  7410  0F1B  1283               	bcf	3,5	;RP0=0, select bank0
  7411  0F1C  1303               	bcf	3,6	;RP1=0, select bank0
  7412  0F1D  084F               	movf	_days,w
  7413  0F1E  120A  158A  21EA  120A  158A  	fcall	i1_writeEEPROM
  7414                           
  7415                           ;eeprom.c: 51:     writeEEPROM(hours ,4);
  7416  0F23  3004               	movlw	4
  7417  0F24  00F2               	movwf	??i1_setData
  7418  0F25  0872               	movf	??i1_setData,w
  7419  0F26  00F0               	movwf	i1writeEEPROM@address
  7420  0F27  1283               	bcf	3,5	;RP0=0, select bank0
  7421  0F28  1303               	bcf	3,6	;RP1=0, select bank0
  7422  0F29  084E               	movf	_hours,w
  7423  0F2A  120A  158A  21EA  120A  158A  	fcall	i1_writeEEPROM
  7424                           
  7425                           ;eeprom.c: 52:     writeEEPROM(minutes ,5);
  7426  0F2F  3005               	movlw	5
  7427  0F30  00F2               	movwf	??i1_setData
  7428  0F31  0872               	movf	??i1_setData,w
  7429  0F32  00F0               	movwf	i1writeEEPROM@address
  7430  0F33  1283               	bcf	3,5	;RP0=0, select bank0
  7431  0F34  1303               	bcf	3,6	;RP1=0, select bank0
  7432  0F35  084D               	movf	_minutes,w
  7433  0F36  120A  158A  21EA  120A  158A  	fcall	i1_writeEEPROM
  7434                           
  7435                           ;eeprom.c: 53:     writeEEPROM(functionalStat ,6);
  7436  0F3B  3006               	movlw	6
  7437  0F3C  00F2               	movwf	??i1_setData
  7438  0F3D  0872               	movf	??i1_setData,w
  7439  0F3E  00F0               	movwf	i1writeEEPROM@address
  7440  0F3F  1283               	bcf	3,5	;RP0=0, select bank0
  7441  0F40  1303               	bcf	3,6	;RP1=0, select bank0
  7442  0F41  0848               	movf	_functionalStat,w
  7443  0F42  120A  158A  21EA   	fcall	i1_writeEEPROM
  7444  0F45  0008               	return
  7445  0F46                     __end_ofi1_setData:	
  7446                           
  7447                           	psect	text42
  7448  09EA                     __ptext42:	
  7449 ;; *************** function i1_writeEEPROM *****************
  7450 ;; Defined at:
  7451 ;;		line 14 in file "eeprom.c"
  7452 ;; Parameters:    Size  Location     Type
  7453 ;;  data            1    wreg     unsigned char 
  7454 ;;  address         1    0[COMMON] unsigned char 
  7455 ;; Auto vars:     Size  Location     Type
  7456 ;;  data            1    1[COMMON] unsigned char 
  7457 ;; Return value:  Size  Location     Type
  7458 ;;                  1    wreg      void 
  7459 ;; Registers used:
  7460 ;;		wreg
  7461 ;; Tracked objects:
  7462 ;;		On entry : 0/0
  7463 ;;		On exit  : 0/0
  7464 ;;		Unchanged: 0/0
  7465 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7466 ;;      Params:         1       0       0       0       0
  7467 ;;      Locals:         1       0       0       0       0
  7468 ;;      Temps:          0       0       0       0       0
  7469 ;;      Totals:         2       0       0       0       0
  7470 ;;Total ram usage:        2 bytes
  7471 ;; Hardware stack levels used:    1
  7472 ;; This function calls:
  7473 ;;		Nothing
  7474 ;; This function is called by:
  7475 ;;		i1_setData
  7476 ;; This function uses a non-reentrant model
  7477 ;;
  7478                           
  7479                           
  7480                           ;psect for function i1_writeEEPROM
  7481  09EA                     i1_writeEEPROM:	
  7482                           
  7483                           ;incstack = 0
  7484 ;; hardware stack exceeded
  7485                           ; Regs used in i1_writeEEPROM: [wreg]
  7486                           ;i1writeEEPROM@data stored from wreg
  7487  09EA  00F1               	movwf	i1writeEEPROM@data
  7488                           
  7489                           ;eeprom.c: 15:     EEADR = address;
  7490  09EB  0870               	movf	i1writeEEPROM@address,w
  7491  09EC  1283               	bcf	3,5	;RP0=0, select bank2
  7492  09ED  1703               	bsf	3,6	;RP1=1, select bank2
  7493  09EE  008D               	movwf	13	;volatile
  7494                           
  7495                           ;eeprom.c: 16:     EEDATA = data;
  7496  09EF  0871               	movf	i1writeEEPROM@data,w
  7497  09F0  008C               	movwf	12	;volatile
  7498                           
  7499                           ;eeprom.c: 18:     EECON1bits.EEPGD = 0;
  7500  09F1  1683               	bsf	3,5	;RP0=1, select bank3
  7501  09F2  1703               	bsf	3,6	;RP1=1, select bank3
  7502  09F3  138C               	bcf	12,7	;volsfr
  7503                           
  7504                           ;eeprom.c: 19:     EECON1bits.WREN = 1;
  7505  09F4  150C               	bsf	12,2	;volsfr
  7506                           
  7507                           ;eeprom.c: 21:     INTCONbits.GIE = 0;
  7508  09F5  138B               	bcf	11,7	;volatile
  7509                           
  7510                           ;eeprom.c: 22:     EECON2 = 0x55;
  7511  09F6  3055               	movlw	85
  7512  09F7  008D               	movwf	13	;volsfr
  7513                           
  7514                           ;eeprom.c: 23:     EECON2 = 0xAA;
  7515  09F8  30AA               	movlw	170
  7516  09F9  008D               	movwf	13	;volsfr
  7517                           
  7518                           ;eeprom.c: 24:     EECON1bits.WR = 1;
  7519  09FA  148C               	bsf	12,1	;volsfr
  7520                           
  7521                           ;eeprom.c: 25:     INTCONbits.GIE = 1;
  7522  09FB  178B               	bsf	11,7	;volatile
  7523  09FC                     i1l60:	
  7524                           ;eeprom.c: 27:     while(PIR2bits.EEIF == 0) continue;
  7525                           
  7526  09FC  1283               	bcf	3,5	;RP0=0, select bank0
  7527  09FD  1303               	bcf	3,6	;RP1=0, select bank0
  7528  09FE  1A0D               	btfsc	13,4	;volatile
  7529  09FF  0008               	return
  7530  0A00  29FC               	goto	i1l60
  7531  0A01                     __end_ofi1_writeEEPROM:	
  7532  007E                     btemp	set	126	;btemp
  7533  007E                     wtemp0	set	126


Data Sizes:
    Strings     154
    Constant    14
    Data        7
    BSS         43
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     36      51
    BANK1            80     35      70
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 18
		 -> STR_12(CODE[18]), STR_11(CODE[17]), STR_10(CODE[17]), STR_9(CODE[17]), 
		 -> STR_8(CODE[17]), STR_7(CODE[17]), STR_6(CODE[17]), STR_5(CODE[17]), 
		 -> STR_4(CODE[17]), STR_3(CODE[17]), STR_2(CODE[18]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 17
		 -> lineOne(BANK1[17]), lineTwo(BANK1[17]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK1[2]), 

    putrsXLCD@buffer	PTR const unsigned char  size(1) Largest target is 17
		 -> STR_1(CODE[17]), 

    putsXLCD@buffer	PTR unsigned char  size(1) Largest target is 17
		 -> lineOne(BANK1[17]), lineTwo(BANK1[17]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _inter in COMMON

    _updateLCD->i1___lwmod
    i1_sprintf->i1___lwmod
    i1___lwmod->i1___lwdiv
    i1_putsXLCD->i1_WriteDataXLCD
    i1_WriteDataXLCD->i1_DelayFor18TCY
    i1_SetDDRamAddr->i1_DelayFor18TCY
    _time->i1_setData
    i1_setData->i1_writeEEPROM

Critical Paths under _main in BANK0

    _main->___lwmod
    _main->_beep
    _main->_getData
    _start->_beep
    _setFrequency->_beep
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _setData->_writeEEPROM
    _putsXLCD->_WriteDataXLCD
    _beep->___wmul
    _putrsXLCD->_WriteDataXLCD
    _WriteDataXLCD->_DelayFor18TCY
    _getData->_readEEPROM
    _setTransStat->_writeFrequency
    _writeFrequency->_codFreq
    _initLCD->_OpenXLCD
    _SendCMDLCD->_WriteCmdXLCD
    _OpenXLCD->_SetDDRamAddr
    _OpenXLCD->_WriteCmdXLCD
    _WriteCmdXLCD->_DelayFor18TCY
    _SetDDRamAddr->_DelayFor18TCY

Critical Paths under _inter in BANK0

    _inter->_updateLCD
    _updateLCD->i1_sprintf

Critical Paths under _main in BANK1

    _main->_start
    _start->_sprintf
    _setFrequency->_sprintf
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _config->_setTransStat
    _setTransStat->_writeFrequency

Critical Paths under _inter in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _inter in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _inter in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 8     8      0   24862
                                             28 BANK1      7     7      0
                       _SetDDRamAddr
                            ___lwdiv
                            ___lwmod
                               _beep
                             _config
                            _getData
                          _putrsXLCD
                           _putsXLCD
                       _setFrequency
                       _setTransStat
                            _sprintf
                              _start
                     _writeFrequency
 ---------------------------------------------------------------------------------
 (1) _start                                                4     4      0    6151
                                             24 BANK1      4     4      0
                       _SetDDRamAddr
                               _beep
                           _putsXLCD
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _setFrequency                                         3     3      0    7537
                                             24 BANK1      3     3      0
                       _SetDDRamAddr
                               _beep
                           _putsXLCD
                            _setData
                            _sprintf
                     _writeFrequency
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             25    20      5    4323
                                              7 BANK1     17    12      5
                            ___lwdiv
                            ___lwmod
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (3) _isdigit                                              2     2      0      68
                                             29 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     702
                                             34 BANK0      2     2      0
                                              3 BANK1      4     0      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     711
                                             29 BANK0      5     1      4
                                              0 BANK1      3     3      0
 ---------------------------------------------------------------------------------
 (2) _setData                                              4     4      0     666
                                             31 BANK0      4     4      0
                        _writeEEPROM
 ---------------------------------------------------------------------------------
 (3) _writeEEPROM                                          2     1      1     576
                                             29 BANK0      2     1      1
 ---------------------------------------------------------------------------------
 (2) _putsXLCD                                             2     2      0     452
                                             33 BANK0      2     2      0
                           _BusyXLCD
                      _WriteDataXLCD
 ---------------------------------------------------------------------------------
 (2) _beep                                                 3     1      2    1125
                                             35 BANK0      1     1      0
                                              0 BANK1      2     0      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     396
                                             29 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) _putrsXLCD                                            2     2      0     122
                                             33 BANK0      2     2      0
                           _BusyXLCD
                      _WriteDataXLCD
 ---------------------------------------------------------------------------------
 (3) _WriteDataXLCD                                        3     3      0      44
                                             30 BANK0      3     3      0
                      _DelayFor18TCY
 ---------------------------------------------------------------------------------
 (1) _getData                                              6     6      0      68
                                             30 BANK0      6     6      0
                         _readEEPROM
 ---------------------------------------------------------------------------------
 (2) _readEEPROM                                           1     1      0      22
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _config                                               0     0      0    1404
                            _initLCD
                       _setTransStat
 ---------------------------------------------------------------------------------
 (1) _setTransStat                                         4     2      2    1228
                                              5 BANK1      4     2      2
                     _writeFrequency
 ---------------------------------------------------------------------------------
 (1) _writeFrequency                                       9     7      2     927
                                             31 BANK0      4     2      2
                                              0 BANK1      5     5      0
                            _codFreq
 ---------------------------------------------------------------------------------
 (2) _codFreq                                              2     0      2     189
                                             29 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _initLCD                                              2     2      0     176
                                              0 BANK1      2     2      0
                           _OpenXLCD
                         _SendCMDLCD
 ---------------------------------------------------------------------------------
 (3) _SendCMDLCD                                           1     1      0      66
                                             33 BANK0      1     1      0
                           _BusyXLCD
                       _WriteCmdXLCD
 ---------------------------------------------------------------------------------
 (3) _OpenXLCD                                             3     3      0     110
                                             33 BANK0      3     3      0
                           _BusyXLCD
                       _DelayPORXLCD
                       _SetDDRamAddr
                       _WriteCmdXLCD
 ---------------------------------------------------------------------------------
 (4) _WriteCmdXLCD                                         3     3      0      44
                                             30 BANK0      3     3      0
                      _DelayFor18TCY
 ---------------------------------------------------------------------------------
 (2) _SetDDRamAddr                                         3     3      0      44
                                             30 BANK0      3     3      0
                      _DelayFor18TCY
 ---------------------------------------------------------------------------------
 (4) _DelayFor18TCY                                        1     1      0       0
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _DelayPORXLCD                                         2     2      0       0
                                             29 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (3) _BusyXLCD                                             2     2      0       0
                                             29 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _inter                                                5     5      0    2541
                                             24 BANK0      5     5      0
                               _time
                          _updateLCD
 ---------------------------------------------------------------------------------
 (7) _updateLCD                                            7     7      0    2225
                                             17 BANK0      7     7      0
                     i1_SetDDRamAddr
                          i1___lwdiv
                          i1___lwmod
                         i1_putsXLCD
                          i1_sprintf
 ---------------------------------------------------------------------------------
 (8) i1_sprintf                                           25    20      5    1517
                                              0 BANK0     17    12      5
                          i1___lwdiv
                          i1___lwmod
                           i1___wmul
                          i1_isdigit
 ---------------------------------------------------------------------------------
 (9) i1_isdigit                                            2     2      0      68
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (9) i1___wmul                                             6     2      4     144
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (9) i1___lwmod                                            6     2      4     263
                                              8 COMMON     6     2      4
                          i1___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (9) i1___lwdiv                                            8     4      4     266
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (8) i1_putsXLCD                                           2     2      0      89
                                              4 COMMON     2     2      0
                         i1_BusyXLCD
                    i1_WriteDataXLCD
 ---------------------------------------------------------------------------------
 (9) i1_WriteDataXLCD                                      3     3      0      44
                                              1 COMMON     3     3      0
                    i1_DelayFor18TCY
 ---------------------------------------------------------------------------------
 (9) i1_BusyXLCD                                           2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (8) i1_SetDDRamAddr                                       3     3      0      44
                                              1 COMMON     3     3      0
                    i1_DelayFor18TCY
 ---------------------------------------------------------------------------------
 (10) i1_DelayFor18TCY                                     1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (7) _time                                                 1     1      0     316
                                              6 COMMON     1     1      0
                          i1_setData
 ---------------------------------------------------------------------------------
 (8) i1_setData                                            4     4      0     316
                                              2 COMMON     4     4      0
                      i1_writeEEPROM
 ---------------------------------------------------------------------------------
 (9) i1_writeEEPROM                                        2     1      1     226
                                              0 COMMON     2     1      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SetDDRamAddr
     _DelayFor18TCY
   ___lwdiv
   ___lwmod
     ___lwdiv (ARG)
   _beep
     ___wmul
   _config
     _initLCD
       _OpenXLCD
         _BusyXLCD
         _DelayPORXLCD
         _SetDDRamAddr
           _DelayFor18TCY
         _WriteCmdXLCD
           _DelayFor18TCY
       _SendCMDLCD
         _BusyXLCD
         _WriteCmdXLCD
           _DelayFor18TCY
     _setTransStat
       _writeFrequency
         _codFreq
   _getData
     _readEEPROM
   _putrsXLCD
     _BusyXLCD
     _WriteDataXLCD
       _DelayFor18TCY
   _putsXLCD
     _BusyXLCD
     _WriteDataXLCD
       _DelayFor18TCY
   _setFrequency
     _SetDDRamAddr
       _DelayFor18TCY
     _beep
       ___wmul
     _putsXLCD
       _BusyXLCD
       _WriteDataXLCD
         _DelayFor18TCY
     _setData
       _writeEEPROM
     _sprintf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
       ___wmul
       _isdigit
     _writeFrequency
       _codFreq
   _setTransStat
     _writeFrequency
       _codFreq
   _sprintf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)
     ___wmul
     _isdigit
   _start
     _SetDDRamAddr
       _DelayFor18TCY
     _beep
       ___wmul
     _putsXLCD
       _BusyXLCD
       _WriteDataXLCD
         _DelayFor18TCY
     _sprintf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
       ___wmul
       _isdigit
   _writeFrequency
     _codFreq

 _inter (ROOT)
   _time
     i1_setData
       i1_writeEEPROM
   _updateLCD
     i1_SetDDRamAddr
       i1_DelayFor18TCY
     i1___lwdiv
     i1___lwmod
       i1___lwdiv (ARG)
     i1_putsXLCD
       i1_BusyXLCD
       i1_WriteDataXLCD
         i1_DelayFor18TCY
     i1_sprintf
       i1___lwdiv
       i1___lwmod
         i1___lwdiv (ARG)
       i1___wmul
       i1_isdigit

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50     23      46       7       87.5%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     24      33       5       63.8%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      87      12        0.0%
ABS                  0      0      87       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Fri Aug 23 02:41:50 2019

              __CFG_CP$ON 0000          ??i1_SetDDRamAddr 0071                         _i 00A0  
                       pc 0002                _UN_BLOCKED 0812                        l60 0A36  
                      l70 0FC5               __CFG_CPD$ON 0000                        fsr 0004  
     ___wmul@multiplicand 003F          i1___wmul@product 0074                       l200 06AC  
                     l243 0340                       l260 03E2                       l252 0388  
                     l261 03ED                       l253 0393                       l246 0344  
                     l255 03F8                       l247 039E                       l256 03AD  
                     l248 0353                       l273 0B94                       l538 07C6  
                     l650 0120                       l665 0A68                       fsr0 0004  
                     indf 0000     __size_of_WriteCmdXLCD 004D           __end_of_BLOCKED 0814  
            __CFG_FOSC$XT 0000              __CFG_LVP$OFF 0000                      l2500 0740  
                    l2512 076A                      l2504 074E                      l4034 00CD  
                    l2508 075C                      l3254 0AF1                      l2544 09DB  
                    l3248 0AFB                      l2482 06FE                      l2562 0A60  
                    l2492 0724                      l2484 0706                      l3604 0CDE  
                    l2556 09C5                      l3534 079C                      l3622 005C  
                    l2496 0732                      l2488 0716                      l2752 0FB8  
                    l3640 00D8                      l3538 07C9                      l3650 00EF  
                    l3572 0E76                      l3564 0E48                      l3628 0071  
                    l2870 0A82                      l3566 0E5A                      l3590 0C04  
                    l3670 0135                      l3662 0112                      l3638 00B9  
                    l2864 0A88                      l3576 0E84                      l3680 0152  
                    l3672 0139                      l3656 00F1                      l3594 0C14  
                    l3674 013D                      l3826 042B                      l3770 035E  
                    l3588 0BF2                      l3780 0377                      l3940 05DD  
                    l3598 0C21                      l3694 0165                      l3686 0161  
                    l3838 0483                      l3696 003C                      l3864 04DB  
                    l3698 01B8                      l3890 0533                      l3962 0666  
                    l3788 03B8                      l3972 068B                      l3798 03D1  
                    l3974 068E                      l3966 0672                      l3984 06A5  
                    STR_1 086A                      STR_2 0814                      STR_3 0837  
                    STR_4 089D                      STR_5 0837                      STR_6 0859  
                    STR_7 0837                      STR_8 087B                      STR_9 0848  
                    u3015 0CE7                      u3105 0127                      u1435 0E1A  
                    u1445 0D7F                      u3065 0108                      u3330 0480  
                    u1635 0A69                      u1645 0A70                      _PIE1 008C  
                    u3360 04D8                      u1585 0DCC                      u3507 05CF  
                    u3517 05E3                      u3390 0530                      u3607 03CB  
                    u3527 0686                      u3617 03F3                      u3537 069C  
                    u3707 07D8                      u2915 0E5D                      u3627 0402  
                    u3547 04B9                      u3717 07ED                      u2925 0E6B  
                    u3637 0465                      u3557 0511                      u2854 07AF  
                    u3727 0AD2                      u2855 07AA                      u3647 0CF0  
                    u2935 0E78                      u3567 0569                      u3737 0AE8  
                    u3657 0CFA                      u3577 058E                      u3497 05A1  
                    u3747 06E5                      u3667 0B86                      u3587 0371  
                    i1l60 09FC                      u3757 06F4                      u3677 0B9E  
                    u2965 0BF7                      u3597 0399                      i1l70 0F0B  
                    u3767 0966                      u3687 0795                      u2895 0E4D  
                    u3777 0987                      u3697 07CD                      u2985 0C0C  
                    u3787 0993                      u2995 0C15              __CFG_WRT$OFF 0000  
            _stereoEnable 004C                      _beep 0CBB                      _days 004F  
                    _main 059B                      _time 0C28                      btemp 007E  
  __size_of_WriteDataXLCD 004D                      start 0012         ??i1_WriteDataXLCD 0071  
           __CFG_IESO$OFF 0000             __CFG_MCLRE$ON 0000                i1_putsXLCD 0A01  
             _writeEEPROM 0A1E              _WriteCmdXLCD 0D52          ??_writeFrequency 0041  
                   ?_beep 00C3        writeEEPROM@address 003D             ?_SetDDRamAddr 0070  
                   ?_main 0070                     _EEADR 010D                     STR_10 0826  
                   STR_11 088C                     STR_12 0814             __CFG_WDTE$OFF 0000  
                   ?_time 0070                     _ANSEL 0188                     _T1CON 0010  
         __end_of___lwdiv 0E91                     i1l233 0C6D           __end_of___lwmod 0C28  
                   i1l650 029A                     i1l665 0A45                     _TMR1H 000F  
                   _TMR1L 000E                     _PORTA 0005                     _PORTB 0006  
                   _PORTC 0007                     _TRISA 0085                     _TRISB 0086  
                   _TRISC 0087           __end_of_codFreq 0981                i1isdigit@c 0071  
         __end_of_getData 0FA3            __CFG_FCMEN$OFF 0000        i1___lwmod@dividend 007A  
         __end_of_initLCD 0AEE               ?i1_BusyXLCD 0070           __end_of_dpowers 0810  
    writeFrequency@buffer 00C3                     _level 0046                     _inter 0AA2  
         __end_of_isdigit 09C7                     _hours 004E           __end_of_setData 1000  
                   _start 0471            __CFG_BOREN$OFF 0000                     pclath 000A  
        __end_ofi1___wmul 0A5C                     status 0003       i1___wmul@multiplier 0070  
                   wtemp0 007E           __end_of_sprintf 01BD        __size_ofi1___lwdiv 003C  
      __size_ofi1___lwmod 0032           __initialization 0015     __end_ofi1_writeEEPROM 0A01  
       __end_of_FINAL_DAY 0811              __end_of_beep 0D06              __end_of_main 06BF  
            __end_of_time 0C70          __end_of_BusyXLCD 099A        __size_ofi1_isdigit 000E  
      __size_ofi1_setData 005B     __size_of_DelayPORXLCD 000C                i1sprintf@c 0030  
              i1sprintf@f 0020            ??_SetDDRamAddr 003E                _SendCMDLCD 09D8  
                  ??_beep 0043          __end_of_OpenXLCD 0777                    ??_main 00DF  
                  ??_time 0076        __size_ofi1_sprintf 0168             _WriteDataXLCD 0D9F  
__size_ofi1_DelayFor18TCY 0006        _hundredMiliSeconds 0049                    _ADCON0 001F  
                  _ADCON1 009F                    ?_inter 0070                    _EEDATA 010C  
                  _EECON2 018D                    ?_start 0070                    _ANSELH 0189  
                  i1l3000 02AF                    i1l3010 02CC                    i1l3002 02B3  
                  i1l3004 02B7                    i1l3024 02DF                    i1l3016 02DB  
                  i1l3026 01C4                    i1l3028 0320                    i1l4036 0247  
                  i1l2710 0B4A                    i1l2712 0B58                    i1l2720 0B71  
                  i1l3290 0C63                    i1l2716 0B66                    i1l2732 09A6  
                  i1l2904 0F00                    i1l2664 0A3D                    i1l3396 0ABA  
                  i1l2942 0A02                    i1l2694 0BD8                    i1l2686 0BB4  
                  i1l2936 0A08                    i1l2688 0BC2                    i1l2952 01E4  
                  i1l2698 0BE3                    i1l2970 0252                    i1l2980 0269  
                  i1l2958 01F9                    i1l2992 028C                    i1l2968 0233  
                  i1l2986 026B                    u222_25 0D32                    _INTCON 000B  
                  u233_25 02A1                    u180_25 0C9B                    u229_25 0282  
                  u190_25 0BD9                    u182_25 0A46                    u183_25 0A4D  
                  u193_25 0B4D                    u186_25 0BB7                    u195_25 0B5E  
                  u188_25 0BC3                    u196_25 0B67                    u380_27 095E  
                  u189_25 0BCF                    u379_27 07F9             i1sprintf@flag 002A  
           i1sprintf@prec 0029            __CFG_PWRTE$OFF 0000              _DelayPORXLCD 0981  
             ?i1_putsXLCD 0070                    ___wmul 0A5C                 ??___lwdiv 0041  
     __size_ofi1_BusyXLCD 000A                    beep@ms 00C3                 ??___lwmod 0042  
                  _config 0B18                 ??_codFreq 003F                 ??_getData 003E  
                  _months 0050            ?_WriteDataXLCD 0070                 ??_initLCD 00C3  
       __end_ofi1___lwdiv 0BE8         __end_ofi1___lwmod 0B76                 ??_isdigit 003D  
               ??_setData 003F                    saved_w 007E          __end_of_putsXLCD 0AA2  
                  start@i 00DE                 ??_sprintf 00CF         __end_ofi1_isdigit 09A8  
       __end_ofi1_setData 0F46   __end_of__initialization 0031         __end_ofi1_sprintf 0325  
         writeEEPROM@data 003E            __pcstackCOMMON 0070              __pidataBANK0 0969  
           __end_of_inter 0AC6             __end_of_start 059B               ?_SendCMDLCD 0070  
               ?i1___wmul 0070      i1SetDDRamAddr@DDaddr 0073               setData@full 0042  
             i1sprintf@ap 0028               i1sprintf@sp 002D           i1_WriteDataXLCD 0C70  
     __size_ofi1_putsXLCD 001D                   ??_inter 0038    __size_of_DelayFor18TCY 0007  
            sprintf@width 00D7                   ??_start 00DB         ??i1_DelayFor18TCY 0070  
           ?_setFrequency 0070                __pbssBANK0 0044                __pbssBANK1 00A0  
               ?_BusyXLCD 0070           WriteCmdXLCD@cmd 0040      __end_of_SetDDRamAddr 0E3A  
               ?_OpenXLCD 0070                __pmaintext 059B              ?_writeEEPROM 003D  
       WriteDataXLCD@data 0040                   ?___wmul 003D                __pintentry 0004  
                 ?_config 0070           ??_WriteDataXLCD 003E                   _BLOCKED 0813  
          updateLCD@decim 0036                ??i1___wmul 0074            updateLCD@integ 0037  
              _isOnConfig 0047             ?_setTransStat 00C8        __size_of_updateLCD 005A  
            ??i1_BusyXLCD 0070            ??_setFrequency 00DB                __stringtab 0800  
      __size_of_putrsXLCD 002A                ??_BusyXLCD 003D            i1sprintf@width 002E  
              _readEEPROM 09A8       __size_of_SendCMDLCD 0012                ??_OpenXLCD 0041  
           _DelayFor18TCY 0962           __size_of___wmul 0023                 ?_putsXLCD 0070  
                 ___lwdiv 0E3A                   ___lwmod 0BE8           __size_of_config 002C  
      __end_ofi1_BusyXLCD 07FF                 _FINAL_DAY 0810                   _codFreq 0978  
         putrsXLCD@buffer 0042                   _getData 0F46                   __ptext1 0471  
                 __ptext2 0325                   __ptext3 0035                   __ptext4 09B7  
                 __ptext5 0BE8                   __ptext6 0E3A                   __ptext7 0FA3  
                 __ptext8 0A1E                   __ptext9 0A7F                   _cntTmr1 004B  
 __end_ofi1_WriteDataXLCD 0CBB                   _initLCD 0AC6                 _T1CONbits 0010  
          ??_setTransStat 00CA                   _dpowers 0806         i1___lwdiv@divisor 0070  
                 _lineOne 00B2                   _lineTwo 00A1                   _isdigit 09B7  
       i1___lwdiv@counter 0077                   _prTmr1H 0051                   _prTmr1L 0052  
                 _setData 0FA3                   _minutes 004D   __size_ofi1_SetDDRamAddr 004C  
                 _seconds 004A                   _sprintf 0035                   clrloop0 0971  
    end_of_initialization 0031        __end_of_UN_BLOCKED 0813              ??i1_putsXLCD 0074  
       __end_of_updateLCD 0EEB            ?_DelayFor18TCY 0070                ??_putsXLCD 0041  
   i1___wmul@multiplicand 0072         __end_of_putrsXLCD 0B18                 _PORTAbits 0005  
               _PORTBbits 0006                 _PORTCbits 0007                 _TRISBbits 0086  
 __size_of_writeFrequency 007E     __size_of_SetDDRamAddr 004E                 i1___lwdiv 0BAC  
               i1___lwmod 0B44    __size_ofi1_writeEEPROM 0017         readEEPROM@address 003D  
      __end_ofi1_putsXLCD 0A1E               ?_readEEPROM 0070                 i1_isdigit 099A  
               i1_setData 0EEB                 i1_sprintf 01BD       __end_of_FINAL_MONTH 0812  
    __size_of_writeEEPROM 001D      __end_of_setFrequency 0471            __end_of___wmul 0A7F  
            ??_SendCMDLCD 0041            __end_of_config 0B44         i1___lwmod@divisor 0078  
       i1___lwmod@counter 007D              _SetDDRamAddr 0DEC           i1_DelayFor18TCY 095C  
        ?i1_WriteDataXLCD 0070        SetDDRamAddr@DDaddr 0040       start_initialization 0015  
       __size_ofi1___wmul 0021                ?i1___lwdiv 0070                ?i1___lwmod 0078  
       __size_of_BusyXLCD 000D                ?i1_isdigit 0070              setData@data0 0040  
            setData@data1 0041                ?i1_setData 0070        __end_of_SendCMDLCD 09EA  
    __end_of_setTransStat 0BAC              i1sprintf@val 002B           ??_DelayFor18TCY 003D  
       __size_of_OpenXLCD 00B8                ?i1_sprintf 0020             i1_writeEEPROM 09EA  
                ??___wmul 0041                init_fetch0 09C7             ?_WriteCmdXLCD 0070  
                ??_config 0044               __pdataBANK0 004C       __size_of_readEEPROM 000F  
          i1_SetDDRamAddr 0D06                 ___latbits 0002             __pcstackBANK0 0020  
           __pcstackBANK1 00C3              _isdigit$1093 003D               sprintf@flag 00D4  
             sprintf@prec 00D3               _FINAL_MONTH 0811            putsXLCD@buffer 0042  
          i1setData@data0 0073            i1setData@data1 0074          ___lwdiv@dividend 003F  
          ?i1_writeEEPROM 0070   __end_ofi1_DelayFor18TCY 0962            ??_WriteCmdXLCD 003E  
                ?___lwdiv 003D                  ?___lwmod 00C6                  ?_codFreq 003D  
                ?_getData 0070             SendCMDLCD@CMD 0041                 __pstrings 0800  
       __size_of_putsXLCD 0023     __end_of_WriteDataXLCD 0DEC    __end_ofi1_SetDDRamAddr 0D52  
                ?_initLCD 0070                  ?_isdigit 0070                  ?_setData 0070  
          _writeFrequency 0777                 _frequency 0044       i1WriteDataXLCD@data 0073  
        ___lwdiv@quotient 00C4               ??i1___lwdiv 0074               ??i1___lwmod 007C  
                ?_sprintf 00CA            __size_of_inter 0024            __size_of_start 012A  
          i1_isdigit$1093 0070         interrupt_function 0004            ___wmul@product 0041  
             ??i1_isdigit 0070                 clear_ram0 0970               ??i1_setData 0072  
           ?_DelayPORXLCD 0070     __size_of_setFrequency 014C                  _PIR1bits 000C  
         OpenXLCD@lcdtype 0043                  _PIR2bits 000D          setTransStat@stat 00C8  
             ??i1_sprintf 0025                 _updateLCD 0E91            _functionalStat 0048  
             __stringbase 0805         ___wmul@multiplier 003D                  i1___wmul 0A3B  
         ?i1_SetDDRamAddr 0070    __end_of_writeFrequency 07F5                 main@decim 00E4  
               _putrsXLCD 0AEE                 main@integ 00E5              _setFrequency 0325  
                _BusyXLCD 098D     __size_of_setTransStat 0036              ??_readEEPROM 003D  
          ??_DelayPORXLCD 003D                _EECON1bits 018C                  _OpenXLCD 06BF  
         ??i1_writeEEPROM 0071          ?i1_DelayFor18TCY 0070                ?_updateLCD 0070  
        __size_of___lwdiv 0057          __size_of___lwmod 0040      i1writeEEPROM@address 0070  
      __end_of__stringtab 0806          __size_of_codFreq 0009          __size_of_getData 005D  
         ?_writeFrequency 003F                sprintf@val 00D5                ?_putrsXLCD 0070  
        __size_of_initLCD 0028        __end_of_readEEPROM 09B7              _setTransStat 0B76  
        __size_of_isdigit 0010           ___lwdiv@divisor 003D          __size_of_setData 005D  
           i1setData@full 0075           ___lwdiv@counter 00C3                  __ptext10 0CBB  
                __ptext11 0A5C                  __ptext20 0AC6                  __ptext12 0AEE  
                __ptext21 09D8                  __ptext13 0D9F                  __ptext30 01BD  
                __ptext22 06BF                  __ptext14 0F46                  __ptext31 099A  
                __ptext23 0D52                  __ptext15 09A8                  __ptext40 0C28  
                __ptext32 0A3B                  __ptext24 0DEC                  __ptext16 0B18  
                __ptext41 0EEB                  __ptext33 0B44                  __ptext25 0962  
                __ptext17 0B76                  __ptext42 09EA                  __ptext34 0BAC  
                __ptext26 0981                  __ptext18 0777                  __ptext35 0A01  
                __ptext27 098D                  __ptext19 0978                  __ptext36 0C70  
                __ptext28 0AA2                  __ptext37 07F5                  __ptext29 0E91  
                __ptext38 0D06                  __ptext39 095C         __CFG_BOR4V$BOR40V 0000  
    __end_of_WriteCmdXLCD 0D9F          __size_of_sprintf 0188        i1___lwdiv@dividend 0072  
           __size_of_beep 004B         i1writeEEPROM@data 0071                  codFreq@f 003D  
           __size_of_main 0124             __size_of_time 0048             ??_writeEEPROM 003E  
                _putsXLCD 0A7F           writeFrequency@f 003F           writeFrequency@i 00C7  
         writeFrequency@r 00C5        i1___lwdiv@quotient 0075               getData@aux0 0042  
             getData@aux1 0043                _INTCONbits 000B                  init_ram0 09CB  
                isdigit@c 003E  __size_ofi1_WriteDataXLCD 004B                  intlevel1 0000  
               sprintf@ap 00D2                 sprintf@sp 00D9          ___lwmod@dividend 00C8  
               stringcode 0800     __end_of_DelayFor18TCY 0969               ??_updateLCD 0031  
     __end_of_writeEEPROM 0A3B                  sprintf@c 00DA                  sprintf@f 00CA  
    __end_of_DelayPORXLCD 098D          i1putsXLCD@buffer 0075               ??_putrsXLCD 0041  
         ___lwmod@divisor 00C6           ___lwmod@counter 0043                  stringdir 0800  
                stringtab 0800                i1_BusyXLCD 07F5  
