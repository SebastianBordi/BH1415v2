

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Fri Aug 23 21:11:25 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	16F886
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	eeprom_data,global,class=EEDATA,space=3,delta=2
     5                           	psect	idataBANK0,global,class=CODE,delta=2
     6                           	psect	strings,global,class=STRING,delta=2
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	inittext,global,class=CODE,delta=2
    12                           	psect	clrtext,global,class=CODE,delta=2
    13                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    14                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    16                           	psect	maintext,global,class=CODE,split=1,delta=2
    17                           	psect	text1,local,class=CODE,merge=1,delta=2
    18                           	psect	text2,local,class=CODE,merge=1,delta=2
    19                           	psect	text3,local,class=CODE,merge=1,delta=2
    20                           	psect	text4,local,class=CODE,merge=1,delta=2
    21                           	psect	text5,local,class=CODE,merge=1,delta=2
    22                           	psect	text6,local,class=CODE,merge=1,delta=2
    23                           	psect	text7,local,class=CODE,merge=1,delta=2
    24                           	psect	text8,local,class=CODE,merge=1,delta=2
    25                           	psect	text9,local,class=CODE,merge=1,delta=2
    26                           	psect	text10,local,class=CODE,merge=1,delta=2
    27                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    28                           	psect	text12,local,class=CODE,merge=1,delta=2,group=1
    29                           	psect	text13,local,class=CODE,merge=1,delta=2,group=1
    30                           	psect	text14,local,class=CODE,merge=1,delta=2,group=1
    31                           	psect	text15,local,class=CODE,merge=1,delta=2
    32                           	psect	text16,local,class=CODE,merge=1,delta=2
    33                           	psect	text17,local,class=CODE,merge=1,delta=2
    34                           	psect	text18,local,class=CODE,merge=1,delta=2
    35                           	psect	text19,local,class=CODE,merge=1,delta=2
    36                           	psect	text20,local,class=CODE,merge=1,delta=2
    37                           	psect	text21,local,class=CODE,merge=1,delta=2
    38                           	psect	text22,local,class=CODE,merge=1,delta=2
    39                           	psect	text23,local,class=CODE,merge=1,delta=2
    40                           	psect	text24,local,class=CODE,merge=1,delta=2
    41                           	psect	text25,local,class=CODE,merge=1,delta=2
    42                           	psect	text26,local,class=CODE,merge=1,delta=2
    43                           	psect	text27,local,class=CODE,merge=1,delta=2
    44                           	psect	text28,local,class=CODE,merge=1,delta=2
    45                           	psect	text29,local,class=CODE,merge=1,delta=2
    46                           	psect	text30,local,class=CODE,merge=1,delta=2
    47                           	psect	intentry,global,class=CODE,delta=2
    48                           	psect	text31,local,class=CODE,merge=1,delta=2
    49                           	psect	text32,local,class=CODE,merge=1,delta=2
    50                           	psect	text33,local,class=CODE,merge=1,delta=2
    51                           	psect	text34,local,class=CODE,merge=1,delta=2
    52                           	psect	text35,local,class=CODE,merge=1,delta=2
    53                           	psect	text36,local,class=CODE,merge=1,delta=2
    54                           	psect	text37,local,class=CODE,merge=1,delta=2
    55                           	psect	text38,local,class=CODE,merge=1,delta=2
    56                           	psect	text39,local,class=CODE,merge=1,delta=2
    57                           	psect	text40,local,class=CODE,merge=1,delta=2
    58                           	psect	text41,local,class=CODE,merge=1,delta=2
    59                           	psect	text42,local,class=CODE,merge=1,delta=2
    60                           	psect	text43,local,class=CODE,merge=1,delta=2
    61                           	psect	text44,local,class=CODE,merge=1,delta=2
    62                           	dabs	1,0x7E,2
    63  0000                     
    64                           ; Version 2.05
    65                           ; Generated 20/12/2018 GMT
    66                           ; 
    67                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    68                           ; All rights reserved.
    69                           ; 
    70                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    71                           ; 
    72                           ; Redistribution and use in source and binary forms, with or without modification, are
    73                           ; permitted provided that the following conditions are met:
    74                           ; 
    75                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    76                           ;        conditions and the following disclaimer.
    77                           ; 
    78                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    79                           ;        of conditions and the following disclaimer in the documentation and/or other
    80                           ;        materials provided with the distribution.
    81                           ; 
    82                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    83                           ;        software without specific prior written permission.
    84                           ; 
    85                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    86                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    87                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    88                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    89                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    90                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    91                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    92                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    93                           ; 
    94                           ; 
    95                           ; Code-generator required, PIC16F886 Definitions
    96                           ; 
    97                           ; SFR Addresses
    98  0000                     	;# 
    99  0001                     	;# 
   100  0002                     	;# 
   101  0003                     	;# 
   102  0004                     	;# 
   103  0005                     	;# 
   104  0006                     	;# 
   105  0007                     	;# 
   106  0009                     	;# 
   107  000A                     	;# 
   108  000B                     	;# 
   109  000C                     	;# 
   110  000D                     	;# 
   111  000E                     	;# 
   112  000E                     	;# 
   113  000F                     	;# 
   114  0010                     	;# 
   115  0011                     	;# 
   116  0012                     	;# 
   117  0013                     	;# 
   118  0014                     	;# 
   119  0015                     	;# 
   120  0015                     	;# 
   121  0016                     	;# 
   122  0017                     	;# 
   123  0018                     	;# 
   124  0019                     	;# 
   125  001A                     	;# 
   126  001B                     	;# 
   127  001B                     	;# 
   128  001C                     	;# 
   129  001D                     	;# 
   130  001E                     	;# 
   131  001F                     	;# 
   132  0081                     	;# 
   133  0085                     	;# 
   134  0086                     	;# 
   135  0087                     	;# 
   136  0089                     	;# 
   137  008C                     	;# 
   138  008D                     	;# 
   139  008E                     	;# 
   140  008F                     	;# 
   141  0090                     	;# 
   142  0091                     	;# 
   143  0092                     	;# 
   144  0093                     	;# 
   145  0093                     	;# 
   146  0093                     	;# 
   147  0094                     	;# 
   148  0095                     	;# 
   149  0096                     	;# 
   150  0097                     	;# 
   151  0098                     	;# 
   152  0099                     	;# 
   153  009A                     	;# 
   154  009B                     	;# 
   155  009C                     	;# 
   156  009D                     	;# 
   157  009E                     	;# 
   158  009F                     	;# 
   159  0105                     	;# 
   160  0107                     	;# 
   161  0108                     	;# 
   162  0109                     	;# 
   163  010C                     	;# 
   164  010C                     	;# 
   165  010D                     	;# 
   166  010E                     	;# 
   167  010F                     	;# 
   168  0185                     	;# 
   169  0187                     	;# 
   170  0188                     	;# 
   171  0189                     	;# 
   172  018C                     	;# 
   173  018D                     	;# 
   174                           
   175                           	psect	eeprom_data
   176  0000  00D3 0003 0000 0000 0000 0000 0001 0000 	db	211,3,0,0,0,0,1,0	;# 
   177  0000                     	;# 
   178  0001                     	;# 
   179  0002                     	;# 
   180  0003                     	;# 
   181  0004                     	;# 
   182  0005                     	;# 
   183  0006                     	;# 
   184  0007                     	;# 
   185  0009                     	;# 
   186  000A                     	;# 
   187  000B                     	;# 
   188  000C                     	;# 
   189  000D                     	;# 
   190  000E                     	;# 
   191  000E                     	;# 
   192  000F                     	;# 
   193  0010                     	;# 
   194  0011                     	;# 
   195  0012                     	;# 
   196  0013                     	;# 
   197  0014                     	;# 
   198  0015                     	;# 
   199  0015                     	;# 
   200  0016                     	;# 
   201  0017                     	;# 
   202  0018                     	;# 
   203  0019                     	;# 
   204  001A                     	;# 
   205  001B                     	;# 
   206  001B                     	;# 
   207  001C                     	;# 
   208  001D                     	;# 
   209  001E                     	;# 
   210  001F                     	;# 
   211  0081                     	;# 
   212  0085                     	;# 
   213  0086                     	;# 
   214  0087                     	;# 
   215  0089                     	;# 
   216  008C                     	;# 
   217  008D                     	;# 
   218  008E                     	;# 
   219  008F                     	;# 
   220  0090                     	;# 
   221  0091                     	;# 
   222  0092                     	;# 
   223  0093                     	;# 
   224  0093                     	;# 
   225  0093                     	;# 
   226  0094                     	;# 
   227  0095                     	;# 
   228  0096                     	;# 
   229  0097                     	;# 
   230  0098                     	;# 
   231  0099                     	;# 
   232  009A                     	;# 
   233  009B                     	;# 
   234  009C                     	;# 
   235  009D                     	;# 
   236  009E                     	;# 
   237  009F                     	;# 
   238  0105                     	;# 
   239  0107                     	;# 
   240  0108                     	;# 
   241  0109                     	;# 
   242  010C                     	;# 
   243  010C                     	;# 
   244  010D                     	;# 
   245  010E                     	;# 
   246  010F                     	;# 
   247  0185                     	;# 
   248  0187                     	;# 
   249  0188                     	;# 
   250  0189                     	;# 
   251  018C                     	;# 
   252  018D                     	;# 
   253  0008  00D3 0003 0000 0000 0000 0000 0001 0000 	db	211,3,0,0,0,0,1,0	;# 
   254  0000                     	;# 
   255  0001                     	;# 
   256  0002                     	;# 
   257  0003                     	;# 
   258  0004                     	;# 
   259  0005                     	;# 
   260  0006                     	;# 
   261  0007                     	;# 
   262  0009                     	;# 
   263  000A                     	;# 
   264  000B                     	;# 
   265  000C                     	;# 
   266  000D                     	;# 
   267  000E                     	;# 
   268  000E                     	;# 
   269  000F                     	;# 
   270  0010                     	;# 
   271  0011                     	;# 
   272  0012                     	;# 
   273  0013                     	;# 
   274  0014                     	;# 
   275  0015                     	;# 
   276  0015                     	;# 
   277  0016                     	;# 
   278  0017                     	;# 
   279  0018                     	;# 
   280  0019                     	;# 
   281  001A                     	;# 
   282  001B                     	;# 
   283  001B                     	;# 
   284  001C                     	;# 
   285  001D                     	;# 
   286  001E                     	;# 
   287  001F                     	;# 
   288  0081                     	;# 
   289  0085                     	;# 
   290  0086                     	;# 
   291  0087                     	;# 
   292  0089                     	;# 
   293  008C                     	;# 
   294  008D                     	;# 
   295  008E                     	;# 
   296  008F                     	;# 
   297  0090                     	;# 
   298  0091                     	;# 
   299  0092                     	;# 
   300  0093                     	;# 
   301  0093                     	;# 
   302  0093                     	;# 
   303  0094                     	;# 
   304  0095                     	;# 
   305  0096                     	;# 
   306  0097                     	;# 
   307  0098                     	;# 
   308  0099                     	;# 
   309  009A                     	;# 
   310  009B                     	;# 
   311  009C                     	;# 
   312  009D                     	;# 
   313  009E                     	;# 
   314  009F                     	;# 
   315  0105                     	;# 
   316  0107                     	;# 
   317  0108                     	;# 
   318  0109                     	;# 
   319  010C                     	;# 
   320  010C                     	;# 
   321  010D                     	;# 
   322  010E                     	;# 
   323  010F                     	;# 
   324  0185                     	;# 
   325  0187                     	;# 
   326  0188                     	;# 
   327  0189                     	;# 
   328  018C                     	;# 
   329  018D                     	;# 
   330  0010  00D3 0003 0000 0000 0000 0000 0001 0000 	db	211,3,0,0,0,0,1,0	;# 
   331  0000                     	;# 
   332  0001                     	;# 
   333  0002                     	;# 
   334  0003                     	;# 
   335  0004                     	;# 
   336  0005                     	;# 
   337  0006                     	;# 
   338  0007                     	;# 
   339  0009                     	;# 
   340  000A                     	;# 
   341  000B                     	;# 
   342  000C                     	;# 
   343  000D                     	;# 
   344  000E                     	;# 
   345  000E                     	;# 
   346  000F                     	;# 
   347  0010                     	;# 
   348  0011                     	;# 
   349  0012                     	;# 
   350  0013                     	;# 
   351  0014                     	;# 
   352  0015                     	;# 
   353  0015                     	;# 
   354  0016                     	;# 
   355  0017                     	;# 
   356  0018                     	;# 
   357  0019                     	;# 
   358  001A                     	;# 
   359  001B                     	;# 
   360  001B                     	;# 
   361  001C                     	;# 
   362  001D                     	;# 
   363  001E                     	;# 
   364  001F                     	;# 
   365  0081                     	;# 
   366  0085                     	;# 
   367  0086                     	;# 
   368  0087                     	;# 
   369  0089                     	;# 
   370  008C                     	;# 
   371  008D                     	;# 
   372  008E                     	;# 
   373  008F                     	;# 
   374  0090                     	;# 
   375  0091                     	;# 
   376  0092                     	;# 
   377  0093                     	;# 
   378  0093                     	;# 
   379  0093                     	;# 
   380  0094                     	;# 
   381  0095                     	;# 
   382  0096                     	;# 
   383  0097                     	;# 
   384  0098                     	;# 
   385  0099                     	;# 
   386  009A                     	;# 
   387  009B                     	;# 
   388  009C                     	;# 
   389  009D                     	;# 
   390  009E                     	;# 
   391  009F                     	;# 
   392  0105                     	;# 
   393  0107                     	;# 
   394  0108                     	;# 
   395  0109                     	;# 
   396  010C                     	;# 
   397  010C                     	;# 
   398  010D                     	;# 
   399  010E                     	;# 
   400  010F                     	;# 
   401  0185                     	;# 
   402  0187                     	;# 
   403  0188                     	;# 
   404  0189                     	;# 
   405  018C                     	;# 
   406  018D                     	;# 
   407  0018  00D3 0003 0000 0000 0000 0000 0001 0000 	db	211,3,0,0,0,0,1,0	;# 
   408  0000                     	;# 
   409  0001                     	;# 
   410  0002                     	;# 
   411  0003                     	;# 
   412  0004                     	;# 
   413  0005                     	;# 
   414  0006                     	;# 
   415  0007                     	;# 
   416  0009                     	;# 
   417  000A                     	;# 
   418  000B                     	;# 
   419  000C                     	;# 
   420  000D                     	;# 
   421  000E                     	;# 
   422  000E                     	;# 
   423  000F                     	;# 
   424  0010                     	;# 
   425  0011                     	;# 
   426  0012                     	;# 
   427  0013                     	;# 
   428  0014                     	;# 
   429  0015                     	;# 
   430  0015                     	;# 
   431  0016                     	;# 
   432  0017                     	;# 
   433  0018                     	;# 
   434  0019                     	;# 
   435  001A                     	;# 
   436  001B                     	;# 
   437  001B                     	;# 
   438  001C                     	;# 
   439  001D                     	;# 
   440  001E                     	;# 
   441  001F                     	;# 
   442  0081                     	;# 
   443  0085                     	;# 
   444  0086                     	;# 
   445  0087                     	;# 
   446  0089                     	;# 
   447  008C                     	;# 
   448  008D                     	;# 
   449  008E                     	;# 
   450  008F                     	;# 
   451  0090                     	;# 
   452  0091                     	;# 
   453  0092                     	;# 
   454  0093                     	;# 
   455  0093                     	;# 
   456  0093                     	;# 
   457  0094                     	;# 
   458  0095                     	;# 
   459  0096                     	;# 
   460  0097                     	;# 
   461  0098                     	;# 
   462  0099                     	;# 
   463  009A                     	;# 
   464  009B                     	;# 
   465  009C                     	;# 
   466  009D                     	;# 
   467  009E                     	;# 
   468  009F                     	;# 
   469  0105                     	;# 
   470  0107                     	;# 
   471  0108                     	;# 
   472  0109                     	;# 
   473  010C                     	;# 
   474  010C                     	;# 
   475  010D                     	;# 
   476  010E                     	;# 
   477  010F                     	;# 
   478  0185                     	;# 
   479  0187                     	;# 
   480  0188                     	;# 
   481  0189                     	;# 
   482  018C                     	;# 
   483  018D                     	;# 
   484  0020  00D3 0003 0000 0000 0000 0000 0001 0000 	db	211,3,0,0,0,0,1,0	;# 
   485  0000                     	;# 
   486  0001                     	;# 
   487  0002                     	;# 
   488  0003                     	;# 
   489  0004                     	;# 
   490  0005                     	;# 
   491  0006                     	;# 
   492  0007                     	;# 
   493  0009                     	;# 
   494  000A                     	;# 
   495  000B                     	;# 
   496  000C                     	;# 
   497  000D                     	;# 
   498  000E                     	;# 
   499  000E                     	;# 
   500  000F                     	;# 
   501  0010                     	;# 
   502  0011                     	;# 
   503  0012                     	;# 
   504  0013                     	;# 
   505  0014                     	;# 
   506  0015                     	;# 
   507  0015                     	;# 
   508  0016                     	;# 
   509  0017                     	;# 
   510  0018                     	;# 
   511  0019                     	;# 
   512  001A                     	;# 
   513  001B                     	;# 
   514  001B                     	;# 
   515  001C                     	;# 
   516  001D                     	;# 
   517  001E                     	;# 
   518  001F                     	;# 
   519  0081                     	;# 
   520  0085                     	;# 
   521  0086                     	;# 
   522  0087                     	;# 
   523  0089                     	;# 
   524  008C                     	;# 
   525  008D                     	;# 
   526  008E                     	;# 
   527  008F                     	;# 
   528  0090                     	;# 
   529  0091                     	;# 
   530  0092                     	;# 
   531  0093                     	;# 
   532  0093                     	;# 
   533  0093                     	;# 
   534  0094                     	;# 
   535  0095                     	;# 
   536  0096                     	;# 
   537  0097                     	;# 
   538  0098                     	;# 
   539  0099                     	;# 
   540  009A                     	;# 
   541  009B                     	;# 
   542  009C                     	;# 
   543  009D                     	;# 
   544  009E                     	;# 
   545  009F                     	;# 
   546  0105                     	;# 
   547  0107                     	;# 
   548  0108                     	;# 
   549  0109                     	;# 
   550  010C                     	;# 
   551  010C                     	;# 
   552  010D                     	;# 
   553  010E                     	;# 
   554  010F                     	;# 
   555  0185                     	;# 
   556  0187                     	;# 
   557  0188                     	;# 
   558  0189                     	;# 
   559  018C                     	;# 
   560  018D                     	;# 
   561                           
   562                           	psect	idataBANK0
   563  08C0                     __pidataBANK0:	
   564                           
   565                           ;initializer for _frequency
   566  08C0  346F               	retlw	111
   567  08C1  3400               	retlw	0
   568                           
   569                           ;initializer for _stereoEnable
   570  08C2  3401               	retlw	1
   571                           
   572                           ;initializer for _minutes
   573  08C3  340F               	retlw	15
   574                           
   575                           ;initializer for _hours
   576  08C4  3416               	retlw	22
   577                           
   578                           ;initializer for _days
   579  08C5  3413               	retlw	19
   580                           
   581                           ;initializer for _months
   582  08C6  3403               	retlw	3
   583                           
   584                           ;initializer for _prTmr1H
   585  08C7  343C               	retlw	60
   586                           
   587                           ;initializer for _prTmr1L
   588  08C8  34B0               	retlw	176
   589                           
   590                           	psect	strings
   591  0700                     __pstrings:	
   592  0700                     stringtab:	
   593  0700                     __stringtab:	
   594  0700                     stringcode:	
   595                           ;	String table - string pointers are 1 byte each
   596                           
   597  0700                     stringdir:	
   598  0700  3007               	movlw	high stringdir
   599  0701  008A               	movwf	10
   600  0702  0804               	movf	4,w
   601  0703  0A84               	incf	4,f
   602  0704  0782               	addwf	2,f
   603  0705                     __stringbase:	
   604  0705  3400               	retlw	0
   605  0706                     __end_of__stringtab:	
   606  0706                     _dpowers:	
   607  0706  3401               	retlw	1
   608  0707  3400               	retlw	0
   609  0708  340A               	retlw	10
   610  0709  3400               	retlw	0
   611  070A  3464               	retlw	100
   612  070B  3400               	retlw	0
   613  070C  34E8               	retlw	232
   614  070D  3403               	retlw	3
   615  070E  3410               	retlw	16
   616  070F  3427               	retlw	39
   617  0710                     __end_of_dpowers:	
   618  0710                     _FINAL_DAY:	
   619  0710  340D               	retlw	13
   620  0711                     __end_of_FINAL_DAY:	
   621  0711                     _FINAL_MONTH:	
   622  0711  3406               	retlw	6
   623  0712                     __end_of_FINAL_MONTH:	
   624  0712                     _UN_BLOCKED:	
   625  0712  3401               	retlw	1
   626  0713                     __end_of_UN_BLOCKED:	
   627  0713                     _BLOCKED:	
   628  0713  3400               	retlw	0
   629  0714                     __end_of_BLOCKED:	
   630  0006                     _PORTBbits	set	6
   631  000E                     _TMR1L	set	14
   632  000F                     _TMR1H	set	15
   633  000C                     _PIR1bits	set	12
   634  0010                     _T1CONbits	set	16
   635  0007                     _PORTCbits	set	7
   636  001F                     _ADCON0	set	31
   637  0010                     _T1CON	set	16
   638  0007                     _PORTC	set	7
   639  0006                     _PORTB	set	6
   640  0005                     _PORTA	set	5
   641  000B                     _INTCON	set	11
   642  0005                     _PORTAbits	set	5
   643  000D                     _PIR2bits	set	13
   644  000B                     _INTCONbits	set	11
   645  0086                     _TRISBbits	set	134
   646  009F                     _ADCON1	set	159
   647  0087                     _TRISC	set	135
   648  0086                     _TRISB	set	134
   649  0085                     _TRISA	set	133
   650  008C                     _PIE1	set	140
   651  010C                     _EEDATA	set	268
   652  010D                     _EEADR	set	269
   653  0189                     _ANSELH	set	393
   654  0188                     _ANSEL	set	392
   655  018D                     _EECON2	set	397
   656  018C                     _EECON1bits	set	396
   657  0714                     STR_9:	
   658  0714  3446               	retlw	70	;'F'
   659  0715  3452               	retlw	82	;'R'
   660  0716  3445               	retlw	69	;'E'
   661  0717  3451               	retlw	81	;'Q'
   662  0718  342E               	retlw	46	;'.'
   663  0719  3420               	retlw	32	;' '
   664  071A  3420               	retlw	32	;' '
   665  071B  3425               	retlw	37	;'%'
   666  071C  3433               	retlw	51	;'3'
   667  071D  3464               	retlw	100	;'d'
   668  071E  342E               	retlw	46	;'.'
   669  071F  3425               	retlw	37	;'%'
   670  0720  3464               	retlw	100	;'d'
   671  0721  3420               	retlw	32	;' '
   672  0722  344D               	retlw	77	;'M'
   673  0723  3448               	retlw	72	;'H'
   674  0724  347A               	retlw	122	;'z'
   675  0725  3400               	retlw	0
   676  0726                     STR_10:	
   677  0726  344C               	retlw	76	;'L'
   678  0727  344F               	retlw	79	;'O'
   679  0728  3443               	retlw	67	;'C'
   680  0729  344B               	retlw	75	;'K'
   681  072A  3449               	retlw	73	;'I'
   682  072B  344E               	retlw	78	;'N'
   683  072C  3447               	retlw	71	;'G'
   684  072D  3420               	retlw	32	;' '
   685  072E  3420               	retlw	32	;' '
   686  072F  3420               	retlw	32	;' '
   687  0730  3420               	retlw	32	;' '
   688  0731  3420               	retlw	32	;' '
   689  0732  3420               	retlw	32	;' '
   690  0733  3420               	retlw	32	;' '
   691  0734  3420               	retlw	32	;' '
   692  0735  3420               	retlw	32	;' '
   693  0736  3400               	retlw	0
   694  0737                     STR_1:	
   695  0737  3454               	retlw	84	;'T'
   696  0738  3445               	retlw	69	;'E'
   697  0739  3453               	retlw	83	;'S'
   698  073A  3454               	retlw	84	;'T'
   699  073B  3449               	retlw	73	;'I'
   700  073C  344E               	retlw	78	;'N'
   701  073D  3447               	retlw	71	;'G'
   702  073E  3420               	retlw	32	;' '
   703  073F  3420               	retlw	32	;' '
   704  0740  3420               	retlw	32	;' '
   705  0741  3420               	retlw	32	;' '
   706  0742  3420               	retlw	32	;' '
   707  0743  3420               	retlw	32	;' '
   708  0744  3420               	retlw	32	;' '
   709  0745  3420               	retlw	32	;' '
   710  0746  3420               	retlw	32	;' '
   711  0747  3400               	retlw	0
   712  0748                     STR_7:	
   713  0748  3453               	retlw	83	;'S'
   714  0749  3445               	retlw	69	;'E'
   715  074A  3454               	retlw	84	;'T'
   716  074B  3420               	retlw	32	;' '
   717  074C  3420               	retlw	32	;' '
   718  074D  3420               	retlw	32	;' '
   719  074E  3446               	retlw	70	;'F'
   720  074F  3452               	retlw	82	;'R'
   721  0750  3445               	retlw	69	;'E'
   722  0751  3451               	retlw	81	;'Q'
   723  0752  3455               	retlw	85	;'U'
   724  0753  3445               	retlw	69	;'E'
   725  0754  344E               	retlw	78	;'N'
   726  0755  3443               	retlw	67	;'C'
   727  0756  3459               	retlw	89	;'Y'
   728  0757  3420               	retlw	32	;' '
   729  0758  3400               	retlw	0
   730  0759                     STR_4:	
   731  0759  3420               	retlw	32	;' '
   732  075A  3420               	retlw	32	;' '
   733  075B  3420               	retlw	32	;' '
   734  075C  3420               	retlw	32	;' '
   735  075D  3420               	retlw	32	;' '
   736  075E  3454               	retlw	84	;'T'
   737  075F  3445               	retlw	69	;'E'
   738  0760  344D               	retlw	77	;'M'
   739  0761  3450               	retlw	80	;'P'
   740  0762  3445               	retlw	69	;'E'
   741  0763  3452               	retlw	82	;'R'
   742  0764  3441               	retlw	65	;'A'
   743  0765  3454               	retlw	84	;'T'
   744  0766  3455               	retlw	85	;'U'
   745  0767  3452               	retlw	82	;'R'
   746  0768  3445               	retlw	69	;'E'
   747  0769  3400               	retlw	0
   748  076A                     STR_8:	
   749  076A  3441               	retlw	65	;'A'
   750  076B  344D               	retlw	77	;'M'
   751  076C  3450               	retlw	80	;'P'
   752  076D  3452               	retlw	82	;'R'
   753  076E  344F               	retlw	79	;'O'
   754  076F  3420               	retlw	32	;' '
   755  0770  3420               	retlw	32	;' '
   756  0771  3420               	retlw	32	;' '
   757  0772  3420               	retlw	32	;' '
   758  0773  3420               	retlw	32	;' '
   759  0774  3420               	retlw	32	;' '
   760  0775  3445               	retlw	69	;'E'
   761  0776  3458               	retlw	88	;'X'
   762  0777  342D               	retlw	45	;'-'
   763  0778  3446               	retlw	70	;'F'
   764  0779  344D               	retlw	77	;'M'
   765  077A  3400               	retlw	0
   766  077B                     STR_6:	
   767  077B  3420               	retlw	32	;' '
   768  077C  3420               	retlw	32	;' '
   769  077D  3420               	retlw	32	;' '
   770  077E  3420               	retlw	32	;' '
   771  077F  3420               	retlw	32	;' '
   772  0780  3420               	retlw	32	;' '
   773  0781  3420               	retlw	32	;' '
   774  0782  3420               	retlw	32	;' '
   775  0783  3420               	retlw	32	;' '
   776  0784  3420               	retlw	32	;' '
   777  0785  3420               	retlw	32	;' '
   778  0786  3420               	retlw	32	;' '
   779  0787  3420               	retlw	32	;' '
   780  0788  3453               	retlw	83	;'S'
   781  0789  3457               	retlw	87	;'W'
   782  078A  3452               	retlw	82	;'R'
   783  078B  3400               	retlw	0
   784  078C                     STR_11:	
   785  078C  3420               	retlw	32	;' '
   786  078D  3420               	retlw	32	;' '
   787  078E  3420               	retlw	32	;' '
   788  078F  3420               	retlw	32	;' '
   789  0790  3420               	retlw	32	;' '
   790  0791  3420               	retlw	32	;' '
   791  0792  3420               	retlw	32	;' '
   792  0793  3446               	retlw	70	;'F'
   793  0794  3452               	retlw	82	;'R'
   794  0795  3445               	retlw	69	;'E'
   795  0796  3451               	retlw	81	;'Q'
   796  0797  3455               	retlw	85	;'U'
   797  0798  3445               	retlw	69	;'E'
   798  0799  344E               	retlw	78	;'N'
   799  079A  3443               	retlw	67	;'C'
   800  079B  3459               	retlw	89	;'Y'
   801  079C  3400               	retlw	0
   802  079D                     STR_2:	
   803  079D  3420               	retlw	32	;' '
   804  079E  3420               	retlw	32	;' '
   805  079F  3420               	retlw	32	;' '
   806  07A0  3420               	retlw	32	;' '
   807  07A1  3420               	retlw	32	;' '
   808  07A2  3420               	retlw	32	;' '
   809  07A3  3420               	retlw	32	;' '
   810  07A4  3420               	retlw	32	;' '
   811  07A5  3420               	retlw	32	;' '
   812  07A6  3420               	retlw	32	;' '
   813  07A7  3453               	retlw	83	;'S'
   814  07A8  3455               	retlw	85	;'U'
   815  07A9  3450               	retlw	80	;'P'
   816  07AA  3450               	retlw	80	;'P'
   817  07AB  344C               	retlw	76	;'L'
   818  07AC  3459               	retlw	89	;'Y'
   819  07AD  3400               	retlw	0
   820  0737                     
   821                           ; #config settings
   822  0000                     
   823                           	psect	cinit
   824  0015                     start_initialization:	
   825  0015                     __initialization:	
   826                           
   827                           ; Initialize objects allocated to BANK0
   828  0015  1383               	bcf	3,7	;select IRP bank0
   829  0016  304D               	movlw	low (__pdataBANK0+9)
   830  0017  00FD               	movwf	btemp+-1
   831  0018  3008               	movlw	high __pidataBANK0
   832  0019  00FE               	movwf	btemp
   833  001A  30C0               	movlw	low __pidataBANK0
   834  001B  00FF               	movwf	btemp+1
   835  001C  3044               	movlw	low __pdataBANK0
   836  001D  0084               	movwf	4
   837  001E  120A  158A  212A  120A  118A  	fcall	init_ram0
   838                           
   839                           ; Clear objects allocated to BANK1
   840  0023  30A0               	movlw	low __pbssBANK1
   841  0024  0084               	movwf	4
   842  0025  30C3               	movlw	low (__pbssBANK1+35)
   843  0026  120A  158A  20B8   	fcall	clear_ram0
   844                           
   845                           ; Clear objects allocated to BANK0
   846  0029  01CD               	clrf	__pbssBANK0& (0+127)
   847  002A  01CE               	clrf	(__pbssBANK0+1)& (0+127)
   848  002B  01CF               	clrf	(__pbssBANK0+2)& (0+127)
   849  002C  01D0               	clrf	(__pbssBANK0+3)& (0+127)
   850  002D  01D1               	clrf	(__pbssBANK0+4)& (0+127)
   851  002E  01D2               	clrf	(__pbssBANK0+5)& (0+127)
   852  002F                     end_of_initialization:	
   853                           ;End of C runtime variable initialization code
   854                           
   855  002F                     __end_of__initialization:	
   856  002F  0183               	clrf	3
   857  0030  120A  158A  2F60   	ljmp	_main	;jump to C main() function
   858                           
   859                           	psect	bssBANK0
   860  004D                     __pbssBANK0:	
   861  004D                     _level:	
   862  004D                     	ds	1
   863  004E                     _isOnConfig:	
   864  004E                     	ds	1
   865  004F                     _functionalStat:	
   866  004F                     	ds	1
   867  0050                     _hundredMiliSeconds:	
   868  0050                     	ds	1
   869  0051                     _seconds:	
   870  0051                     	ds	1
   871  0052                     _cntTmr1:	
   872  0052                     	ds	1
   873                           
   874                           	psect	dataBANK0
   875  0044                     __pdataBANK0:	
   876  0044                     _frequency:	
   877  0044                     	ds	2
   878  0046                     _stereoEnable:	
   879  0046                     	ds	1
   880  0047                     _minutes:	
   881  0047                     	ds	1
   882  0048                     _hours:	
   883  0048                     	ds	1
   884  0049                     _days:	
   885  0049                     	ds	1
   886  004A                     _months:	
   887  004A                     	ds	1
   888  004B                     _prTmr1H:	
   889  004B                     	ds	1
   890  004C                     _prTmr1L:	
   891  004C                     	ds	1
   892                           
   893                           	psect	bssBANK1
   894  00A0                     __pbssBANK1:	
   895  00A0                     _i:	
   896  00A0                     	ds	1
   897  00A1                     _lineTwo:	
   898  00A1                     	ds	17
   899  00B2                     _lineOne:	
   900  00B2                     	ds	17
   901                           
   902                           	psect	inittext
   903  0926                     init_fetch0:	
   904                           ;	Called with low address in FSR and high address in W
   905                           
   906  0926  087E               	movf	126,w
   907  0927  008A               	movwf	10
   908  0928  087F               	movf	127,w
   909  0929  0082               	movwf	2
   910  092A                     init_ram0:	
   911                           ;Called with:
   912                           ;	high address of idata address in btemp 
   913                           ;	low address of idata address in btemp+1 
   914                           ;	low address of data in FSR
   915                           ;	high address + 1 of data in btemp-1
   916                           
   917  092A  2126  120A  158A   	fcall	init_fetch0
   918  092D  0080               	movwf	0
   919  092E  0A84               	incf	4,f
   920  092F  0804               	movf	4,w
   921  0930  067D               	xorwf	125,w
   922  0931  1903               	btfsc	3,2
   923  0932  3400               	retlw	0
   924  0933  0AFF               	incf	127,f
   925  0934  1903               	btfsc	3,2
   926  0935  0AFE               	incf	126,f
   927  0936  292A               	goto	init_ram0
   928                           
   929                           	psect	clrtext
   930  08B8                     clear_ram0:	
   931                           ;	Called with FSR containing the base address, and
   932                           ;	W with the last address+1
   933                           
   934  08B8  0064               	clrwdt	;clear the watchdog before getting into this loop
   935  08B9                     clrloop0:	
   936  08B9  0180               	clrf	0	;clear RAM location pointed to by FSR
   937  08BA  0A84               	incf	4,f	;increment pointer
   938  08BB  0604               	xorwf	4,w	;XOR with final address
   939  08BC  1903               	btfsc	3,2	;have we reached the end yet?
   940  08BD  3400               	retlw	0	;all done for this memory range, return
   941  08BE  0604               	xorwf	4,w	;XOR again to restore value
   942  08BF  28B9               	goto	clrloop0	;do the next byte
   943                           
   944                           	psect	cstackBANK1
   945  00C3                     __pcstackBANK1:	
   946  00C3                     ?_beep:	
   947  00C3                     ??_initLCD:	
   948                           ; 1 bytes @ 0x0
   949                           
   950  00C3                     ___lwdiv@counter:	
   951                           ; 1 bytes @ 0x0
   952                           
   953  00C3                     beep@ms:	
   954                           ; 1 bytes @ 0x0
   955                           
   956                           
   957                           ; 2 bytes @ 0x0
   958  00C3                     	ds	1
   959  00C4                     ___lwdiv@quotient:	
   960                           
   961                           ; 2 bytes @ 0x1
   962  00C4                     	ds	1
   963  00C5                     ?_writeFrequency:	
   964  00C5                     writeFrequency@f:	
   965                           ; 1 bytes @ 0x2
   966                           
   967                           
   968                           ; 2 bytes @ 0x2
   969  00C5                     	ds	1
   970  00C6                     ?___lwmod:	
   971  00C6                     ___lwmod@divisor:	
   972                           ; 2 bytes @ 0x3
   973                           
   974                           
   975                           ; 2 bytes @ 0x3
   976  00C6                     	ds	1
   977  00C7                     ??_writeFrequency:	
   978                           
   979                           ; 1 bytes @ 0x4
   980  00C7                     	ds	1
   981  00C8                     ___lwmod@dividend:	
   982                           
   983                           ; 2 bytes @ 0x5
   984  00C8                     	ds	2
   985  00CA                     ?_sprintf:	
   986  00CA                     sprintf@f:	
   987                           ; 2 bytes @ 0x7
   988                           
   989  00CA                     writeFrequency@buffer:	
   990                           ; 1 bytes @ 0x7
   991                           
   992                           
   993                           ; 2 bytes @ 0x7
   994  00CA                     	ds	2
   995  00CC                     writeFrequency@r:	
   996                           
   997                           ; 2 bytes @ 0x9
   998  00CC                     	ds	3
   999  00CF                     ??_sprintf:	
  1000                           
  1001                           ; 1 bytes @ 0xC
  1002  00CF                     	ds	3
  1003  00D2                     sprintf@ap:	
  1004                           
  1005                           ; 1 bytes @ 0xF
  1006  00D2                     	ds	1
  1007  00D3                     sprintf@prec:	
  1008                           
  1009                           ; 1 bytes @ 0x10
  1010  00D3                     	ds	1
  1011  00D4                     sprintf@flag:	
  1012                           
  1013                           ; 1 bytes @ 0x11
  1014  00D4                     	ds	1
  1015  00D5                     sprintf@val:	
  1016                           
  1017                           ; 2 bytes @ 0x12
  1018  00D5                     	ds	2
  1019  00D7                     sprintf@width:	
  1020                           
  1021                           ; 2 bytes @ 0x14
  1022  00D7                     	ds	2
  1023  00D9                     sprintf@sp:	
  1024                           
  1025                           ; 1 bytes @ 0x16
  1026  00D9                     	ds	1
  1027  00DA                     sprintf@c:	
  1028                           
  1029                           ; 1 bytes @ 0x17
  1030  00DA                     	ds	1
  1031  00DB                     ??_start:	
  1032  00DB                     ??_lockingScreen:	
  1033                           ; 1 bytes @ 0x18
  1034                           
  1035  00DB                     ??_principalScreen:	
  1036                           ; 1 bytes @ 0x18
  1037                           
  1038                           
  1039                           ; 1 bytes @ 0x18
  1040  00DB                     	ds	1
  1041  00DC                     ??_setFrequency:	
  1042                           
  1043                           ; 1 bytes @ 0x19
  1044  00DC                     	ds	2
  1045  00DE                     start@i:	
  1046                           
  1047                           ; 1 bytes @ 0x1B
  1048  00DE                     	ds	2
  1049  00E0                     principalScreen@decim:	
  1050                           
  1051                           ; 1 bytes @ 0x1D
  1052  00E0                     	ds	1
  1053  00E1                     principalScreen@integ:	
  1054                           
  1055                           ; 1 bytes @ 0x1E
  1056  00E1                     	ds	1
  1057  00E2                     ??_main:	
  1058                           
  1059                           ; 1 bytes @ 0x1F
  1060  00E2                     	ds	3
  1061                           
  1062                           	psect	cstackCOMMON
  1063  0070                     __pcstackCOMMON:	
  1064  0070                     ?_isdigit:	
  1065  0070                     ?i1_isdigit:	
  1066                           ; 1 bit 
  1067                           
  1068  0070                     ?_config:	
  1069                           ; 1 bit 
  1070                           
  1071  0070                     ?_setFrequency:	
  1072                           ; 1 bytes @ 0x0
  1073                           
  1074  0070                     ?_start:	
  1075                           ; 1 bytes @ 0x0
  1076                           
  1077  0070                     ?_lockingScreen:	
  1078                           ; 1 bytes @ 0x0
  1079                           
  1080  0070                     ?_principalScreen:	
  1081                           ; 1 bytes @ 0x0
  1082                           
  1083  0070                     ?_initLCD:	
  1084                           ; 1 bytes @ 0x0
  1085                           
  1086  0070                     ?_SetDDRamAddr:	
  1087                           ; 1 bytes @ 0x0
  1088                           
  1089  0070                     ?_putsXLCD:	
  1090                           ; 1 bytes @ 0x0
  1091                           
  1092  0070                     ?_time:	
  1093                           ; 1 bytes @ 0x0
  1094                           
  1095  0070                     ?_updateLCD:	
  1096                           ; 1 bytes @ 0x0
  1097                           
  1098  0070                     ?_putrsXLCD:	
  1099                           ; 1 bytes @ 0x0
  1100                           
  1101  0070                     ?_WriteCmdXLCD:	
  1102                           ; 1 bytes @ 0x0
  1103                           
  1104  0070                     ?_BusyXLCD:	
  1105                           ; 1 bytes @ 0x0
  1106                           
  1107  0070                     ?_SendCMDLCD:	
  1108                           ; 1 bytes @ 0x0
  1109                           
  1110  0070                     ?_readEEPROM:	
  1111                           ; 1 bytes @ 0x0
  1112                           
  1113  0070                     ?_getData:	
  1114                           ; 1 bytes @ 0x0
  1115                           
  1116  0070                     ?_setData:	
  1117                           ; 1 bytes @ 0x0
  1118                           
  1119  0070                     ?_main:	
  1120                           ; 1 bytes @ 0x0
  1121                           
  1122  0070                     ?_inter:	
  1123                           ; 1 bytes @ 0x0
  1124                           
  1125  0070                     ?_DelayFor18TCY:	
  1126                           ; 1 bytes @ 0x0
  1127                           
  1128  0070                     ?_DelayPORXLCD:	
  1129                           ; 1 bytes @ 0x0
  1130                           
  1131  0070                     ?_OpenXLCD:	
  1132                           ; 1 bytes @ 0x0
  1133                           
  1134  0070                     ?_WriteDataXLCD:	
  1135                           ; 1 bytes @ 0x0
  1136                           
  1137  0070                     ?i1_writeEEPROM:	
  1138                           ; 1 bytes @ 0x0
  1139                           
  1140  0070                     ?i1_setData:	
  1141                           ; 1 bytes @ 0x0
  1142                           
  1143  0070                     ?i1_DelayFor18TCY:	
  1144                           ; 1 bytes @ 0x0
  1145                           
  1146  0070                     ??i1_DelayFor18TCY:	
  1147                           ; 1 bytes @ 0x0
  1148                           
  1149  0070                     ?i1_WriteDataXLCD:	
  1150                           ; 1 bytes @ 0x0
  1151                           
  1152  0070                     ?i1_SetDDRamAddr:	
  1153                           ; 1 bytes @ 0x0
  1154                           
  1155  0070                     ?i1_putsXLCD:	
  1156                           ; 1 bytes @ 0x0
  1157                           
  1158  0070                     ?i1_BusyXLCD:	
  1159                           ; 1 bytes @ 0x0
  1160                           
  1161  0070                     ??i1_BusyXLCD:	
  1162                           ; 1 bytes @ 0x0
  1163                           
  1164  0070                     ??i1_isdigit:	
  1165                           ; 1 bytes @ 0x0
  1166                           
  1167  0070                     ?i1___wmul:	
  1168                           ; 1 bytes @ 0x0
  1169                           
  1170  0070                     ?i1___lwdiv:	
  1171                           ; 2 bytes @ 0x0
  1172                           
  1173  0070                     setData@full:	
  1174                           ; 2 bytes @ 0x0
  1175                           
  1176  0070                     i1writeEEPROM@address:	
  1177                           ; 1 bytes @ 0x0
  1178                           
  1179  0070                     i1_isdigit$1104:	
  1180                           ; 1 bytes @ 0x0
  1181                           
  1182  0070                     i1___wmul@multiplier:	
  1183                           ; 1 bytes @ 0x0
  1184                           
  1185  0070                     i1___lwdiv@divisor:	
  1186                           ; 2 bytes @ 0x0
  1187                           
  1188                           
  1189                           ; 2 bytes @ 0x0
  1190  0070                     	ds	1
  1191  0071                     ??i1_writeEEPROM:	
  1192  0071                     ??i1_WriteDataXLCD:	
  1193                           ; 1 bytes @ 0x1
  1194                           
  1195  0071                     ??i1_SetDDRamAddr:	
  1196                           ; 1 bytes @ 0x1
  1197                           
  1198  0071                     i1writeEEPROM@data:	
  1199                           ; 1 bytes @ 0x1
  1200                           
  1201  0071                     i1isdigit@c:	
  1202                           ; 1 bytes @ 0x1
  1203                           
  1204                           
  1205                           ; 1 bytes @ 0x1
  1206  0071                     	ds	1
  1207  0072                     ??i1_setData:	
  1208  0072                     i1___wmul@multiplicand:	
  1209                           ; 1 bytes @ 0x2
  1210                           
  1211  0072                     i1___lwdiv@dividend:	
  1212                           ; 2 bytes @ 0x2
  1213                           
  1214                           
  1215                           ; 2 bytes @ 0x2
  1216  0072                     	ds	1
  1217  0073                     i1setData@data0:	
  1218  0073                     i1WriteDataXLCD@data:	
  1219                           ; 1 bytes @ 0x3
  1220                           
  1221  0073                     i1SetDDRamAddr@DDaddr:	
  1222                           ; 1 bytes @ 0x3
  1223                           
  1224                           
  1225                           ; 1 bytes @ 0x3
  1226  0073                     	ds	1
  1227  0074                     ??i1_putsXLCD:	
  1228  0074                     ??i1___wmul:	
  1229                           ; 1 bytes @ 0x4
  1230                           
  1231  0074                     ??i1___lwdiv:	
  1232                           ; 1 bytes @ 0x4
  1233                           
  1234  0074                     i1setData@data1:	
  1235                           ; 1 bytes @ 0x4
  1236                           
  1237  0074                     i1___wmul@product:	
  1238                           ; 1 bytes @ 0x4
  1239                           
  1240                           
  1241                           ; 2 bytes @ 0x4
  1242  0074                     	ds	1
  1243  0075                     ??_time:	
  1244  0075                     i1putsXLCD@buffer:	
  1245                           ; 1 bytes @ 0x5
  1246                           
  1247  0075                     i1___lwdiv@quotient:	
  1248                           ; 1 bytes @ 0x5
  1249                           
  1250                           
  1251                           ; 2 bytes @ 0x5
  1252  0075                     	ds	2
  1253  0077                     i1___lwdiv@counter:	
  1254                           
  1255                           ; 1 bytes @ 0x7
  1256  0077                     	ds	1
  1257  0078                     ?i1___lwmod:	
  1258  0078                     i1___lwmod@divisor:	
  1259                           ; 2 bytes @ 0x8
  1260                           
  1261                           
  1262                           ; 2 bytes @ 0x8
  1263  0078                     	ds	2
  1264  007A                     i1___lwmod@dividend:	
  1265                           
  1266                           ; 2 bytes @ 0xA
  1267  007A                     	ds	2
  1268  007C                     ??i1___lwmod:	
  1269                           
  1270                           ; 1 bytes @ 0xC
  1271  007C                     	ds	1
  1272  007D                     i1___lwmod@counter:	
  1273                           
  1274                           ; 1 bytes @ 0xD
  1275  007D                     	ds	1
  1276                           
  1277                           	psect	cstackBANK0
  1278  0020                     __pcstackBANK0:	
  1279  0020                     ?i1_sprintf:	
  1280  0020                     i1sprintf@f:	
  1281                           ; 2 bytes @ 0x0
  1282                           
  1283                           
  1284                           ; 1 bytes @ 0x0
  1285  0020                     	ds	5
  1286  0025                     ??i1_sprintf:	
  1287                           
  1288                           ; 1 bytes @ 0x5
  1289  0025                     	ds	3
  1290  0028                     i1sprintf@ap:	
  1291                           
  1292                           ; 1 bytes @ 0x8
  1293  0028                     	ds	1
  1294  0029                     i1sprintf@prec:	
  1295                           
  1296                           ; 1 bytes @ 0x9
  1297  0029                     	ds	1
  1298  002A                     i1sprintf@flag:	
  1299                           
  1300                           ; 1 bytes @ 0xA
  1301  002A                     	ds	1
  1302  002B                     i1sprintf@val:	
  1303                           
  1304                           ; 2 bytes @ 0xB
  1305  002B                     	ds	2
  1306  002D                     i1sprintf@sp:	
  1307                           
  1308                           ; 1 bytes @ 0xD
  1309  002D                     	ds	1
  1310  002E                     i1sprintf@width:	
  1311                           
  1312                           ; 2 bytes @ 0xE
  1313  002E                     	ds	2
  1314  0030                     i1sprintf@c:	
  1315                           
  1316                           ; 1 bytes @ 0x10
  1317  0030                     	ds	1
  1318  0031                     ??_updateLCD:	
  1319                           
  1320                           ; 1 bytes @ 0x11
  1321  0031                     	ds	5
  1322  0036                     updateLCD@decim:	
  1323                           
  1324                           ; 1 bytes @ 0x16
  1325  0036                     	ds	1
  1326  0037                     updateLCD@integ:	
  1327                           
  1328                           ; 1 bytes @ 0x17
  1329  0037                     	ds	1
  1330  0038                     ??_inter:	
  1331                           
  1332                           ; 1 bytes @ 0x18
  1333  0038                     	ds	5
  1334  003D                     ?_setTransStat:	
  1335  003D                     ??_BusyXLCD:	
  1336                           ; 1 bytes @ 0x1D
  1337                           
  1338  003D                     ??_isdigit:	
  1339                           ; 1 bytes @ 0x1D
  1340                           
  1341  003D                     ??_readEEPROM:	
  1342                           ; 1 bytes @ 0x1D
  1343                           
  1344  003D                     ?_writeEEPROM:	
  1345                           ; 1 bytes @ 0x1D
  1346                           
  1347  003D                     ??_DelayFor18TCY:	
  1348                           ; 1 bytes @ 0x1D
  1349                           
  1350  003D                     ??_DelayPORXLCD:	
  1351                           ; 1 bytes @ 0x1D
  1352                           
  1353  003D                     ?_codFreq:	
  1354                           ; 1 bytes @ 0x1D
  1355                           
  1356  003D                     ?___wmul:	
  1357                           ; 2 bytes @ 0x1D
  1358                           
  1359  003D                     ?___lwdiv:	
  1360                           ; 2 bytes @ 0x1D
  1361                           
  1362  003D                     readEEPROM@address:	
  1363                           ; 2 bytes @ 0x1D
  1364                           
  1365  003D                     writeEEPROM@address:	
  1366                           ; 1 bytes @ 0x1D
  1367                           
  1368  003D                     _isdigit$1104:	
  1369                           ; 1 bytes @ 0x1D
  1370                           
  1371  003D                     setTransStat@stat:	
  1372                           ; 1 bytes @ 0x1D
  1373                           
  1374  003D                     codFreq@f:	
  1375                           ; 2 bytes @ 0x1D
  1376                           
  1377  003D                     ___wmul@multiplier:	
  1378                           ; 2 bytes @ 0x1D
  1379                           
  1380  003D                     ___lwdiv@divisor:	
  1381                           ; 2 bytes @ 0x1D
  1382                           
  1383                           
  1384                           ; 2 bytes @ 0x1D
  1385  003D                     	ds	1
  1386  003E                     ??_SetDDRamAddr:	
  1387  003E                     ??_WriteCmdXLCD:	
  1388                           ; 1 bytes @ 0x1E
  1389                           
  1390  003E                     ??_writeEEPROM:	
  1391                           ; 1 bytes @ 0x1E
  1392                           
  1393  003E                     ??_getData:	
  1394                           ; 1 bytes @ 0x1E
  1395                           
  1396  003E                     ??_WriteDataXLCD:	
  1397                           ; 1 bytes @ 0x1E
  1398                           
  1399  003E                     writeEEPROM@data:	
  1400                           ; 1 bytes @ 0x1E
  1401                           
  1402  003E                     isdigit@c:	
  1403                           ; 1 bytes @ 0x1E
  1404                           
  1405                           
  1406                           ; 1 bytes @ 0x1E
  1407  003E                     	ds	1
  1408  003F                     ??_setTransStat:	
  1409  003F                     ??_setData:	
  1410                           ; 1 bytes @ 0x1F
  1411                           
  1412  003F                     ??_codFreq:	
  1413                           ; 1 bytes @ 0x1F
  1414                           
  1415  003F                     codFreq@fr:	
  1416                           ; 1 bytes @ 0x1F
  1417                           
  1418  003F                     ___wmul@multiplicand:	
  1419                           ; 2 bytes @ 0x1F
  1420                           
  1421  003F                     ___lwdiv@dividend:	
  1422                           ; 2 bytes @ 0x1F
  1423                           
  1424                           
  1425                           ; 2 bytes @ 0x1F
  1426  003F                     	ds	1
  1427  0040                     setData@data0:	
  1428  0040                     WriteDataXLCD@data:	
  1429                           ; 1 bytes @ 0x20
  1430                           
  1431  0040                     WriteCmdXLCD@cmd:	
  1432                           ; 1 bytes @ 0x20
  1433                           
  1434  0040                     SetDDRamAddr@DDaddr:	
  1435                           ; 1 bytes @ 0x20
  1436                           
  1437                           
  1438                           ; 1 bytes @ 0x20
  1439  0040                     	ds	1
  1440  0041                     ??_putsXLCD:	
  1441  0041                     ??_putrsXLCD:	
  1442                           ; 1 bytes @ 0x21
  1443                           
  1444  0041                     ??_SendCMDLCD:	
  1445                           ; 1 bytes @ 0x21
  1446                           
  1447  0041                     ??_OpenXLCD:	
  1448                           ; 1 bytes @ 0x21
  1449                           
  1450  0041                     ??___wmul:	
  1451                           ; 1 bytes @ 0x21
  1452                           
  1453  0041                     ??___lwdiv:	
  1454                           ; 1 bytes @ 0x21
  1455                           
  1456  0041                     setData@data1:	
  1457                           ; 1 bytes @ 0x21
  1458                           
  1459  0041                     SendCMDLCD@CMD:	
  1460                           ; 1 bytes @ 0x21
  1461                           
  1462  0041                     ___wmul@product:	
  1463                           ; 1 bytes @ 0x21
  1464                           
  1465                           
  1466                           ; 2 bytes @ 0x21
  1467  0041                     	ds	1
  1468  0042                     ??___lwmod:	
  1469  0042                     getData@aux0:	
  1470                           ; 1 bytes @ 0x22
  1471                           
  1472  0042                     putsXLCD@buffer:	
  1473                           ; 1 bytes @ 0x22
  1474                           
  1475  0042                     putrsXLCD@buffer:	
  1476                           ; 1 bytes @ 0x22
  1477                           
  1478                           
  1479                           ; 1 bytes @ 0x22
  1480  0042                     	ds	1
  1481  0043                     ??_beep:	
  1482  0043                     getData@aux1:	
  1483                           ; 1 bytes @ 0x23
  1484                           
  1485  0043                     OpenXLCD@lcdtype:	
  1486                           ; 1 bytes @ 0x23
  1487                           
  1488  0043                     ___lwmod@counter:	
  1489                           ; 1 bytes @ 0x23
  1490                           
  1491                           
  1492                           ; 1 bytes @ 0x23
  1493  0043                     	ds	1
  1494  0044                     ??_config:	
  1495                           
  1496                           	psect	maintext
  1497  0F60                     __pmaintext:	
  1498                           ; 1 bytes @ 0x24
  1499 ;;
  1500 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1501 ;;
  1502 ;; *************** function _main *****************
  1503 ;; Defined at:
  1504 ;;		line 5 in file "main.c"
  1505 ;; Parameters:    Size  Location     Type
  1506 ;;		None
  1507 ;; Auto vars:     Size  Location     Type
  1508 ;;  index           1    0        unsigned char 
  1509 ;; Return value:  Size  Location     Type
  1510 ;;                  1    wreg      void 
  1511 ;; Registers used:
  1512 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1513 ;; Tracked objects:
  1514 ;;		On entry : B00/0
  1515 ;;		On exit  : 0/0
  1516 ;;		Unchanged: 0/0
  1517 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1518 ;;      Params:         0       0       0       0       0
  1519 ;;      Locals:         0       0       0       0       0
  1520 ;;      Temps:          0       0       3       0       0
  1521 ;;      Totals:         0       0       3       0       0
  1522 ;;Total ram usage:        3 bytes
  1523 ;; Hardware stack levels required when called:   10
  1524 ;; This function calls:
  1525 ;;		_beep
  1526 ;;		_config
  1527 ;;		_getData
  1528 ;;		_lockingScreen
  1529 ;;		_principalScreen
  1530 ;;		_setFrequency
  1531 ;;		_start
  1532 ;;		_writeFrequency
  1533 ;; This function is called by:
  1534 ;;		Startup code after reset
  1535 ;; This function uses a non-reentrant model
  1536 ;;
  1537                           
  1538                           
  1539                           ;psect for function _main
  1540  0F60                     _main:	
  1541                           
  1542                           ;main.c: 6:     unsigned char index;;main.c: 7:     _delay((unsigned long)((100)*(400000
      +                          0/4000.0)));
  1543                           
  1544                           ;incstack = 0
  1545 ;; hardware stack exceeded
  1546                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1547  0F60  3082               	movlw	130
  1548  0F61  1683               	bsf	3,5	;RP0=1, select bank1
  1549  0F62  1303               	bcf	3,6	;RP1=0, select bank1
  1550  0F63  00E3               	movwf	(??_main^(0+128)+1)
  1551  0F64  30DD               	movlw	221
  1552  0F65  00E2               	movwf	??_main^(0+128)
  1553  0F66                     u3387:	
  1554  0F66  0BE2               	decfsz	??_main^(0+128),f
  1555  0F67  2F66               	goto	u3387
  1556  0F68  0BE3               	decfsz	(??_main^(0+128)+1),f
  1557  0F69  2F66               	goto	u3387
  1558                           
  1559                           ;main.c: 8:     config();
  1560  0F6A  120A  158A  2276  120A  158A  	fcall	_config
  1561                           
  1562                           ;main.c: 9:     _delay((unsigned long)((100)*(4000000/4000.0)));
  1563  0F6F  3082               	movlw	130
  1564  0F70  1683               	bsf	3,5	;RP0=1, select bank1
  1565  0F71  1303               	bcf	3,6	;RP1=0, select bank1
  1566  0F72  00E3               	movwf	(??_main^(0+128)+1)
  1567  0F73  30DD               	movlw	221
  1568  0F74  00E2               	movwf	??_main^(0+128)
  1569  0F75                     u3397:	
  1570  0F75  0BE2               	decfsz	??_main^(0+128),f
  1571  0F76  2F75               	goto	u3397
  1572  0F77  0BE3               	decfsz	(??_main^(0+128)+1),f
  1573  0F78  2F75               	goto	u3397
  1574                           
  1575                           ;main.c: 10:     beep(100);
  1576  0F79  3064               	movlw	100
  1577  0F7A  1683               	bsf	3,5	;RP0=1, select bank1
  1578  0F7B  1303               	bcf	3,6	;RP1=0, select bank1
  1579  0F7C  00C3               	movwf	beep@ms^(0+128)
  1580  0F7D  3000               	movlw	0
  1581  0F7E  00C4               	movwf	(beep@ms^(0+128)+1)
  1582  0F7F  120A  158A  2414  120A  158A  	fcall	_beep
  1583                           
  1584                           ;main.c: 11:     getData();
  1585  0F84  120A  158A  26A0  120A  158A  	fcall	_getData
  1586                           
  1587                           ;main.c: 12:     beep(10);
  1588  0F89  300A               	movlw	10
  1589  0F8A  1683               	bsf	3,5	;RP0=1, select bank1
  1590  0F8B  1303               	bcf	3,6	;RP1=0, select bank1
  1591  0F8C  00C3               	movwf	beep@ms^(0+128)
  1592  0F8D  3000               	movlw	0
  1593  0F8E  00C4               	movwf	(beep@ms^(0+128)+1)
  1594  0F8F  120A  158A  2414  120A  158A  	fcall	_beep
  1595                           
  1596                           ;main.c: 13:     if(!PORTAbits.RA4){
  1597  0F94  1283               	bcf	3,5	;RP0=0, select bank0
  1598  0F95  1303               	bcf	3,6	;RP1=0, select bank0
  1599  0F96  1A05               	btfsc	5,4	;volatile
  1600  0F97  2FAC               	goto	l194
  1601                           
  1602                           ;main.c: 14:         _delay((unsigned long)((25)*(4000000/4000.0)));
  1603  0F98  3021               	movlw	33
  1604  0F99  1683               	bsf	3,5	;RP0=1, select bank1
  1605  0F9A  1303               	bcf	3,6	;RP1=0, select bank1
  1606  0F9B  00E3               	movwf	(??_main^(0+128)+1)
  1607  0F9C  3075               	movlw	117
  1608  0F9D  00E2               	movwf	??_main^(0+128)
  1609  0F9E                     u3407:	
  1610  0F9E  0BE2               	decfsz	??_main^(0+128),f
  1611  0F9F  2F9E               	goto	u3407
  1612  0FA0  0BE3               	decfsz	(??_main^(0+128)+1),f
  1613  0FA1  2F9E               	goto	u3407
  1614  0FA2  2FA3               	nop2
  1615                           
  1616                           ;main.c: 15:         if(!PORTAbits.RA4) setFrequency();
  1617  0FA3  1283               	bcf	3,5	;RP0=0, select bank0
  1618  0FA4  1303               	bcf	3,6	;RP1=0, select bank0
  1619  0FA5  1A05               	btfsc	5,4	;volatile
  1620  0FA6  2FAC               	goto	l194
  1621  0FA7  120A  118A  244D  120A  158A  	fcall	_setFrequency
  1622  0FAC                     l194:	
  1623                           ;main.c: 16:     }
  1624                           
  1625                           
  1626                           ;main.c: 17:     start();
  1627  0FAC  120A  118A  2323  120A  158A  	fcall	_start
  1628                           
  1629                           ;main.c: 18:     lockingScreen();
  1630  0FB1  120A  158A  22A4  120A  158A  	fcall	_lockingScreen
  1631                           
  1632                           ;main.c: 19:     writeFrequency(frequency);
  1633  0FB6  1283               	bcf	3,5	;RP0=0, select bank0
  1634  0FB7  1303               	bcf	3,6	;RP1=0, select bank0
  1635  0FB8  0845               	movf	_frequency+1,w
  1636  0FB9  1683               	bsf	3,5	;RP0=1, select bank1
  1637  0FBA  1303               	bcf	3,6	;RP1=0, select bank1
  1638  0FBB  00C6               	movwf	(writeFrequency@f+1)^(0+128)
  1639  0FBC  1283               	bcf	3,5	;RP0=0, select bank0
  1640  0FBD  1303               	bcf	3,6	;RP1=0, select bank0
  1641  0FBE  0844               	movf	_frequency,w
  1642  0FBF  1683               	bsf	3,5	;RP0=1, select bank1
  1643  0FC0  1303               	bcf	3,6	;RP1=0, select bank1
  1644  0FC1  00C5               	movwf	writeFrequency@f^(0+128)
  1645  0FC2  120A  118A  2565  120A  158A  	fcall	_writeFrequency
  1646  0FC7                     L1:	
  1647                           
  1648                           ;main.c: 22:     principalScreen();
  1649  0FC7  120A  158A  26FD  120A  158A  	fcall	_principalScreen
  1650  0FCC                     l4031:	
  1651                           
  1652                           ;main.c: 29:         if(!PORTAbits.RA4){
  1653  0FCC  1283               	bcf	3,5	;RP0=0, select bank0
  1654  0FCD  1303               	bcf	3,6	;RP1=0, select bank0
  1655  0FCE  1A05               	btfsc	5,4	;volatile
  1656  0FCF  2FCC               	goto	l4031
  1657                           
  1658                           ;main.c: 30:             _delay((unsigned long)((500)*(4000000/4000.0)));
  1659  0FD0  3003               	movlw	3
  1660  0FD1  1683               	bsf	3,5	;RP0=1, select bank1
  1661  0FD2  1303               	bcf	3,6	;RP1=0, select bank1
  1662  0FD3  00E4               	movwf	(??_main^(0+128)+2)
  1663  0FD4  308A               	movlw	138
  1664  0FD5  00E3               	movwf	(??_main^(0+128)+1)
  1665  0FD6  3055               	movlw	85
  1666  0FD7  00E2               	movwf	??_main^(0+128)
  1667  0FD8                     u3417:	
  1668  0FD8  0BE2               	decfsz	??_main^(0+128),f
  1669  0FD9  2FD8               	goto	u3417
  1670  0FDA  0BE3               	decfsz	(??_main^(0+128)+1),f
  1671  0FDB  2FD8               	goto	u3417
  1672  0FDC  0BE4               	decfsz	(??_main^(0+128)+2),f
  1673  0FDD  2FD8               	goto	u3417
  1674                           
  1675                           ;main.c: 31:             for(i = 0; i < 10; i++){
  1676  0FDE  1683               	bsf	3,5	;RP0=1, select bank1
  1677  0FDF  1303               	bcf	3,6	;RP1=0, select bank1
  1678  0FE0  01A0               	clrf	_i^(0+128)
  1679  0FE1                     l4037:	
  1680  0FE1  300A               	movlw	10
  1681  0FE2  0220               	subwf	_i^(0+128),w
  1682  0FE3  1803               	btfsc	3,0
  1683  0FE4  2FF6               	goto	l199
  1684                           
  1685                           ;main.c: 32:                 _delay((unsigned long)((100)*(4000000/4000.0)));
  1686  0FE5  3082               	movlw	130
  1687  0FE6  1683               	bsf	3,5	;RP0=1, select bank1
  1688  0FE7  1303               	bcf	3,6	;RP1=0, select bank1
  1689  0FE8  00E3               	movwf	(??_main^(0+128)+1)
  1690  0FE9  30DD               	movlw	221
  1691  0FEA  00E2               	movwf	??_main^(0+128)
  1692  0FEB                     u3427:	
  1693  0FEB  0BE2               	decfsz	??_main^(0+128),f
  1694  0FEC  2FEB               	goto	u3427
  1695  0FED  0BE3               	decfsz	(??_main^(0+128)+1),f
  1696  0FEE  2FEB               	goto	u3427
  1697                           
  1698                           ;main.c: 33:             }
  1699  0FEF  3001               	movlw	1
  1700  0FF0  1683               	bsf	3,5	;RP0=1, select bank1
  1701  0FF1  1303               	bcf	3,6	;RP1=0, select bank1
  1702  0FF2  00E2               	movwf	??_main^(0+128)
  1703  0FF3  0862               	movf	??_main^(0+128),w
  1704  0FF4  07A0               	addwf	_i^(0+128),f
  1705  0FF5  2FE1               	goto	l4037
  1706  0FF6                     l199:	
  1707                           
  1708                           ;main.c: 34:             if(!PORTAbits.RA4){
  1709  0FF6  1283               	bcf	3,5	;RP0=0, select bank0
  1710  0FF7  1303               	bcf	3,6	;RP1=0, select bank0
  1711  0FF8  1A05               	btfsc	5,4	;volatile
  1712  0FF9  2FCC               	goto	l4031
  1713                           
  1714                           ;main.c: 35:                 setFrequency();
  1715  0FFA  120A  118A  244D  120A  158A  	fcall	_setFrequency
  1716  0FFF  2FC7               	goto	L1
  1717  1000                     __end_of_main:	
  1718                           ;main.c: 36:                 principalScreen();
  1719                           
  1720                           
  1721                           	psect	text1
  1722  0323                     __ptext1:	
  1723 ;; *************** function _start *****************
  1724 ;; Defined at:
  1725 ;;		line 73 in file "main.c"
  1726 ;; Parameters:    Size  Location     Type
  1727 ;;		None
  1728 ;; Auto vars:     Size  Location     Type
  1729 ;;  i               1   27[BANK1 ] unsigned char 
  1730 ;; Return value:  Size  Location     Type
  1731 ;;                  1    wreg      void 
  1732 ;; Registers used:
  1733 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1734 ;; Tracked objects:
  1735 ;;		On entry : 0/0
  1736 ;;		On exit  : 0/0
  1737 ;;		Unchanged: 0/0
  1738 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1739 ;;      Params:         0       0       0       0       0
  1740 ;;      Locals:         0       0       1       0       0
  1741 ;;      Temps:          0       0       3       0       0
  1742 ;;      Totals:         0       0       4       0       0
  1743 ;;Total ram usage:        4 bytes
  1744 ;; Hardware stack levels used:    1
  1745 ;; Hardware stack levels required when called:    8
  1746 ;; This function calls:
  1747 ;;		_SetDDRamAddr
  1748 ;;		_beep
  1749 ;;		_putsXLCD
  1750 ;;		_sprintf
  1751 ;; This function is called by:
  1752 ;;		_main
  1753 ;; This function uses a non-reentrant model
  1754 ;;
  1755                           
  1756                           
  1757                           ;psect for function _start
  1758  0323                     _start:	
  1759                           
  1760                           ;main.c: 75:     INTCONbits.GIE = 0;
  1761                           
  1762                           ;incstack = 0
  1763 ;; hardware stack exceeded
  1764                           ; Regs used in _start: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1765  0323  138B               	bcf	11,7	;volatile
  1766                           
  1767                           ;main.c: 78:     for(i = 0; i < 10; i++){
  1768  0324  1683               	bsf	3,5	;RP0=1, select bank1
  1769  0325  1303               	bcf	3,6	;RP1=0, select bank1
  1770  0326  01DE               	clrf	start@i^(0+128)
  1771                           
  1772                           ;main.c: 79:         PORTCbits.RC1 = !PORTCbits.RC1;
  1773  0327  1003               	clrc
  1774  0328                     L2:	
  1775  0328  1283               	bcf	3,5	;RP0=0, select bank0
  1776  0329  1303               	bcf	3,6	;RP1=0, select bank0
  1777  032A  1C87               	btfss	7,1	;volatile
  1778  032B  1403               	setc
  1779  032C  1C03               	btfss	3,0
  1780  032D  2B32               	goto	u3240
  1781  032E  1283               	bcf	3,5	;RP0=0, select bank0
  1782  032F  1303               	bcf	3,6	;RP1=0, select bank0
  1783  0330  1487               	bsf	7,1	;volatile
  1784  0331  2B35               	goto	l3909
  1785  0332                     u3240:	
  1786  0332  1283               	bcf	3,5	;RP0=0, select bank0
  1787  0333  1303               	bcf	3,6	;RP1=0, select bank0
  1788  0334  1087               	bcf	7,1	;volatile
  1789  0335                     l3909:	
  1790                           
  1791                           ;main.c: 80:         sprintf(lineOne,"TESTING         ");
  1792  0335  3032               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1793  0336  1683               	bsf	3,5	;RP0=1, select bank1
  1794  0337  1303               	bcf	3,6	;RP1=0, select bank1
  1795  0338  00DB               	movwf	??_start^(0+128)
  1796  0339  085B               	movf	??_start^(0+128),w
  1797  033A  00CA               	movwf	sprintf@f^(0+128)
  1798  033B  30B2               	movlw	(low (_lineOne| 0))& (0+255)
  1799  033C  120A  118A  2033  120A  118A  	fcall	_sprintf
  1800                           
  1801                           ;main.c: 81:         sprintf(lineTwo,"          SUPPLY");
  1802  0341  3098               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1803  0342  1683               	bsf	3,5	;RP0=1, select bank1
  1804  0343  1303               	bcf	3,6	;RP1=0, select bank1
  1805  0344  00DB               	movwf	??_start^(0+128)
  1806  0345  085B               	movf	??_start^(0+128),w
  1807  0346  00CA               	movwf	sprintf@f^(0+128)
  1808  0347  30A1               	movlw	(low (_lineTwo| 0))& (0+255)
  1809  0348  120A  118A  2033  120A  118A  	fcall	_sprintf
  1810                           
  1811                           ;main.c: 82:         SetDDRamAddr(0x00);
  1812  034D  3000               	movlw	0
  1813  034E  120A  118A  27AE  120A  118A  	fcall	_SetDDRamAddr
  1814                           
  1815                           ;main.c: 83:         putsXLCD(lineOne);
  1816  0353  30B2               	movlw	(low (_lineOne| 0))& (0+255)
  1817  0354  120A  158A  21BA  120A  118A  	fcall	_putsXLCD
  1818                           
  1819                           ;main.c: 84:         SetDDRamAddr(0x40);
  1820  0359  3040               	movlw	64
  1821  035A  120A  118A  27AE  120A  118A  	fcall	_SetDDRamAddr
  1822                           
  1823                           ;main.c: 85:         putsXLCD(lineTwo);
  1824  035F  30A1               	movlw	(low (_lineTwo| 0))& (0+255)
  1825  0360  120A  158A  21BA  120A  118A  	fcall	_putsXLCD
  1826                           
  1827                           ;main.c: 86:         _delay((unsigned long)((100)*(4000000/4000.0)));
  1828  0365  3082               	movlw	130
  1829  0366  1683               	bsf	3,5	;RP0=1, select bank1
  1830  0367  1303               	bcf	3,6	;RP1=0, select bank1
  1831  0368  00DC               	movwf	(??_start^(0+128)+1)
  1832  0369  30DD               	movlw	221
  1833  036A  00DB               	movwf	??_start^(0+128)
  1834  036B                     u3437:	
  1835  036B  0BDB               	decfsz	??_start^(0+128),f
  1836  036C  2B6B               	goto	u3437
  1837  036D  0BDC               	decfsz	(??_start^(0+128)+1),f
  1838  036E  2B6B               	goto	u3437
  1839                           
  1840                           ;main.c: 87:     }
  1841  036F  3001               	movlw	1
  1842  0370  1683               	bsf	3,5	;RP0=1, select bank1
  1843  0371  1303               	bcf	3,6	;RP1=0, select bank1
  1844  0372  00DB               	movwf	??_start^(0+128)
  1845  0373  085B               	movf	??_start^(0+128),w
  1846  0374  07DE               	addwf	start@i^(0+128),f
  1847  0375  300A               	movlw	10
  1848  0376  025E               	subwf	start@i^(0+128),w
  1849  0377  1C03               	skipc
  1850  0378  2B28               	goto	L2
  1851                           
  1852                           ;main.c: 88:     PORTCbits.RC1 = 0;
  1853  0379  1283               	bcf	3,5	;RP0=0, select bank0
  1854  037A  1303               	bcf	3,6	;RP1=0, select bank0
  1855  037B  1087               	bcf	7,1	;volatile
  1856                           
  1857                           ;main.c: 90:     for(i = 0; i < 18; i++){
  1858  037C  1683               	bsf	3,5	;RP0=1, select bank1
  1859  037D  1303               	bcf	3,6	;RP1=0, select bank1
  1860  037E  01DE               	clrf	start@i^(0+128)
  1861                           
  1862                           ;main.c: 91:         PORTCbits.RC3 = !PORTCbits.RC3;
  1863  037F  1003               	clrc
  1864  0380                     L3:	
  1865  0380  1283               	bcf	3,5	;RP0=0, select bank0
  1866  0381  1303               	bcf	3,6	;RP1=0, select bank0
  1867  0382  1D87               	btfss	7,3	;volatile
  1868  0383  1403               	setc
  1869  0384  1C03               	btfss	3,0
  1870  0385  2B8A               	goto	u3270
  1871  0386  1283               	bcf	3,5	;RP0=0, select bank0
  1872  0387  1303               	bcf	3,6	;RP1=0, select bank0
  1873  0388  1587               	bsf	7,3	;volatile
  1874  0389  2B8D               	goto	l3935
  1875  038A                     u3270:	
  1876  038A  1283               	bcf	3,5	;RP0=0, select bank0
  1877  038B  1303               	bcf	3,6	;RP1=0, select bank0
  1878  038C  1187               	bcf	7,3	;volatile
  1879  038D                     l3935:	
  1880                           
  1881                           ;main.c: 92:         sprintf(lineOne,"TESTING         ");
  1882  038D  3032               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1883  038E  1683               	bsf	3,5	;RP0=1, select bank1
  1884  038F  1303               	bcf	3,6	;RP1=0, select bank1
  1885  0390  00DB               	movwf	??_start^(0+128)
  1886  0391  085B               	movf	??_start^(0+128),w
  1887  0392  00CA               	movwf	sprintf@f^(0+128)
  1888  0393  30B2               	movlw	(low (_lineOne| 0))& (0+255)
  1889  0394  120A  118A  2033  120A  118A  	fcall	_sprintf
  1890                           
  1891                           ;main.c: 93:         sprintf(lineTwo,"     TEMPERATURE");
  1892  0399  3054               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1893  039A  1683               	bsf	3,5	;RP0=1, select bank1
  1894  039B  1303               	bcf	3,6	;RP1=0, select bank1
  1895  039C  00DB               	movwf	??_start^(0+128)
  1896  039D  085B               	movf	??_start^(0+128),w
  1897  039E  00CA               	movwf	sprintf@f^(0+128)
  1898  039F  30A1               	movlw	(low (_lineTwo| 0))& (0+255)
  1899  03A0  120A  118A  2033  120A  118A  	fcall	_sprintf
  1900                           
  1901                           ;main.c: 94:         SetDDRamAddr(0x00);
  1902  03A5  3000               	movlw	0
  1903  03A6  120A  118A  27AE  120A  118A  	fcall	_SetDDRamAddr
  1904                           
  1905                           ;main.c: 95:         putsXLCD(lineOne);
  1906  03AB  30B2               	movlw	(low (_lineOne| 0))& (0+255)
  1907  03AC  120A  158A  21BA  120A  118A  	fcall	_putsXLCD
  1908                           
  1909                           ;main.c: 96:         SetDDRamAddr(0x40);
  1910  03B1  3040               	movlw	64
  1911  03B2  120A  118A  27AE  120A  118A  	fcall	_SetDDRamAddr
  1912                           
  1913                           ;main.c: 97:         putsXLCD(lineTwo);
  1914  03B7  30A1               	movlw	(low (_lineTwo| 0))& (0+255)
  1915  03B8  120A  158A  21BA  120A  118A  	fcall	_putsXLCD
  1916                           
  1917                           ;main.c: 98:         _delay((unsigned long)((100)*(4000000/4000.0)));
  1918  03BD  3082               	movlw	130
  1919  03BE  1683               	bsf	3,5	;RP0=1, select bank1
  1920  03BF  1303               	bcf	3,6	;RP1=0, select bank1
  1921  03C0  00DC               	movwf	(??_start^(0+128)+1)
  1922  03C1  30DD               	movlw	221
  1923  03C2  00DB               	movwf	??_start^(0+128)
  1924  03C3                     u3447:	
  1925  03C3  0BDB               	decfsz	??_start^(0+128),f
  1926  03C4  2BC3               	goto	u3447
  1927  03C5  0BDC               	decfsz	(??_start^(0+128)+1),f
  1928  03C6  2BC3               	goto	u3447
  1929                           
  1930                           ;main.c: 99:     }
  1931  03C7  3001               	movlw	1
  1932  03C8  1683               	bsf	3,5	;RP0=1, select bank1
  1933  03C9  1303               	bcf	3,6	;RP1=0, select bank1
  1934  03CA  00DB               	movwf	??_start^(0+128)
  1935  03CB  085B               	movf	??_start^(0+128),w
  1936  03CC  07DE               	addwf	start@i^(0+128),f
  1937  03CD  3012               	movlw	18
  1938  03CE  025E               	subwf	start@i^(0+128),w
  1939  03CF  1C03               	skipc
  1940  03D0  2B80               	goto	L3
  1941                           
  1942                           ;main.c: 100:     PORTCbits.RC3 = 0;
  1943  03D1  1283               	bcf	3,5	;RP0=0, select bank0
  1944  03D2  1303               	bcf	3,6	;RP1=0, select bank0
  1945  03D3  1187               	bcf	7,3	;volatile
  1946                           
  1947                           ;main.c: 102:     for(i = 0; i < 15; i++){
  1948  03D4  1683               	bsf	3,5	;RP0=1, select bank1
  1949  03D5  1303               	bcf	3,6	;RP1=0, select bank1
  1950  03D6  01DE               	clrf	start@i^(0+128)
  1951                           
  1952                           ;main.c: 103:         PORTCbits.RC2 = !PORTCbits.RC2;
  1953  03D7  1003               	clrc
  1954  03D8                     L4:	
  1955  03D8  1283               	bcf	3,5	;RP0=0, select bank0
  1956  03D9  1303               	bcf	3,6	;RP1=0, select bank0
  1957  03DA  1D07               	btfss	7,2	;volatile
  1958  03DB  1403               	setc
  1959  03DC  1C03               	btfss	3,0
  1960  03DD  2BE2               	goto	u3300
  1961  03DE  1283               	bcf	3,5	;RP0=0, select bank0
  1962  03DF  1303               	bcf	3,6	;RP1=0, select bank0
  1963  03E0  1507               	bsf	7,2	;volatile
  1964  03E1  2BE5               	goto	l3961
  1965  03E2                     u3300:	
  1966  03E2  1283               	bcf	3,5	;RP0=0, select bank0
  1967  03E3  1303               	bcf	3,6	;RP1=0, select bank0
  1968  03E4  1107               	bcf	7,2	;volatile
  1969  03E5                     l3961:	
  1970                           
  1971                           ;main.c: 104:         sprintf(lineOne,"TESTING         ");
  1972  03E5  3032               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1973  03E6  1683               	bsf	3,5	;RP0=1, select bank1
  1974  03E7  1303               	bcf	3,6	;RP1=0, select bank1
  1975  03E8  00DB               	movwf	??_start^(0+128)
  1976  03E9  085B               	movf	??_start^(0+128),w
  1977  03EA  00CA               	movwf	sprintf@f^(0+128)
  1978  03EB  30B2               	movlw	(low (_lineOne| 0))& (0+255)
  1979  03EC  120A  118A  2033  120A  118A  	fcall	_sprintf
  1980                           
  1981                           ;main.c: 105:         sprintf(lineTwo,"             SWR");
  1982  03F1  3076               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  1983  03F2  1683               	bsf	3,5	;RP0=1, select bank1
  1984  03F3  1303               	bcf	3,6	;RP1=0, select bank1
  1985  03F4  00DB               	movwf	??_start^(0+128)
  1986  03F5  085B               	movf	??_start^(0+128),w
  1987  03F6  00CA               	movwf	sprintf@f^(0+128)
  1988  03F7  30A1               	movlw	(low (_lineTwo| 0))& (0+255)
  1989  03F8  120A  118A  2033  120A  118A  	fcall	_sprintf
  1990                           
  1991                           ;main.c: 106:         SetDDRamAddr(0x00);
  1992  03FD  3000               	movlw	0
  1993  03FE  120A  118A  27AE  120A  118A  	fcall	_SetDDRamAddr
  1994                           
  1995                           ;main.c: 107:         putsXLCD(lineOne);
  1996  0403  30B2               	movlw	(low (_lineOne| 0))& (0+255)
  1997  0404  120A  158A  21BA  120A  118A  	fcall	_putsXLCD
  1998                           
  1999                           ;main.c: 108:         SetDDRamAddr(0x40);
  2000  0409  3040               	movlw	64
  2001  040A  120A  118A  27AE  120A  118A  	fcall	_SetDDRamAddr
  2002                           
  2003                           ;main.c: 109:         putsXLCD(lineTwo);
  2004  040F  30A1               	movlw	(low (_lineTwo| 0))& (0+255)
  2005  0410  120A  158A  21BA  120A  118A  	fcall	_putsXLCD
  2006                           
  2007                           ;main.c: 110:         _delay((unsigned long)((100)*(4000000/4000.0)));
  2008  0415  3082               	movlw	130
  2009  0416  1683               	bsf	3,5	;RP0=1, select bank1
  2010  0417  1303               	bcf	3,6	;RP1=0, select bank1
  2011  0418  00DC               	movwf	(??_start^(0+128)+1)
  2012  0419  30DD               	movlw	221
  2013  041A  00DB               	movwf	??_start^(0+128)
  2014  041B                     u3457:	
  2015  041B  0BDB               	decfsz	??_start^(0+128),f
  2016  041C  2C1B               	goto	u3457
  2017  041D  0BDC               	decfsz	(??_start^(0+128)+1),f
  2018  041E  2C1B               	goto	u3457
  2019                           
  2020                           ;main.c: 111:     }
  2021  041F  3001               	movlw	1
  2022  0420  1683               	bsf	3,5	;RP0=1, select bank1
  2023  0421  1303               	bcf	3,6	;RP1=0, select bank1
  2024  0422  00DB               	movwf	??_start^(0+128)
  2025  0423  085B               	movf	??_start^(0+128),w
  2026  0424  07DE               	addwf	start@i^(0+128),f
  2027  0425  300F               	movlw	15
  2028  0426  025E               	subwf	start@i^(0+128),w
  2029  0427  1C03               	skipc
  2030  0428  2BD8               	goto	L4
  2031                           
  2032                           ;main.c: 112:     PORTCbits.RC2 = 0;
  2033  0429  1283               	bcf	3,5	;RP0=0, select bank0
  2034  042A  1303               	bcf	3,6	;RP1=0, select bank0
  2035  042B  1107               	bcf	7,2	;volatile
  2036                           
  2037                           ;main.c: 113:     beep(250);
  2038  042C  30FA               	movlw	250
  2039  042D  1683               	bsf	3,5	;RP0=1, select bank1
  2040  042E  1303               	bcf	3,6	;RP1=0, select bank1
  2041  042F  00C3               	movwf	beep@ms^(0+128)
  2042  0430  3000               	movlw	0
  2043  0431  00C4               	movwf	(beep@ms^(0+128)+1)
  2044  0432  120A  158A  2414  120A  118A  	fcall	_beep
  2045                           
  2046                           ;main.c: 114:     INTCONbits.GIE = 1;
  2047  0437  178B               	bsf	11,7	;volatile
  2048                           
  2049                           ;main.c: 115:     _delay((unsigned long)((500)*(4000000/4000.0)));
  2050  0438  3003               	movlw	3
  2051  0439  1683               	bsf	3,5	;RP0=1, select bank1
  2052  043A  1303               	bcf	3,6	;RP1=0, select bank1
  2053  043B  00DD               	movwf	(??_start^(0+128)+2)
  2054  043C  308A               	movlw	138
  2055  043D  00DC               	movwf	(??_start^(0+128)+1)
  2056  043E  3055               	movlw	85
  2057  043F  00DB               	movwf	??_start^(0+128)
  2058  0440                     u3467:	
  2059  0440  0BDB               	decfsz	??_start^(0+128),f
  2060  0441  2C40               	goto	u3467
  2061  0442  0BDC               	decfsz	(??_start^(0+128)+1),f
  2062  0443  2C40               	goto	u3467
  2063  0444  0BDD               	decfsz	(??_start^(0+128)+2),f
  2064  0445  2C40               	goto	u3467
  2065                           
  2066                           ;main.c: 116:     PORTCbits.RC1 = 1;
  2067  0446  1283               	bcf	3,5	;RP0=0, select bank0
  2068  0447  1303               	bcf	3,6	;RP1=0, select bank0
  2069  0448  1487               	bsf	7,1	;volatile
  2070                           
  2071                           ;main.c: 117:     PORTCbits.RC3 = 1;
  2072  0449  1587               	bsf	7,3	;volatile
  2073                           
  2074                           ;main.c: 118:     PORTCbits.RC2 = 1;
  2075  044A  1507               	bsf	7,2	;volatile
  2076                           
  2077                           ;main.c: 119:     INTCONbits.GIE = 1;
  2078  044B  178B               	bsf	11,7	;volatile
  2079  044C  0008               	return
  2080  044D                     __end_of_start:	
  2081                           
  2082                           	psect	text2
  2083  044D                     __ptext2:	
  2084 ;; *************** function _setFrequency *****************
  2085 ;; Defined at:
  2086 ;;		line 179 in file "main.c"
  2087 ;; Parameters:    Size  Location     Type
  2088 ;;		None
  2089 ;; Auto vars:     Size  Location     Type
  2090 ;;		None
  2091 ;; Return value:  Size  Location     Type
  2092 ;;                  1    wreg      void 
  2093 ;; Registers used:
  2094 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2095 ;; Tracked objects:
  2096 ;;		On entry : 0/0
  2097 ;;		On exit  : 0/0
  2098 ;;		Unchanged: 0/0
  2099 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2100 ;;      Params:         0       0       0       0       0
  2101 ;;      Locals:         0       0       0       0       0
  2102 ;;      Temps:          0       0       3       0       0
  2103 ;;      Totals:         0       0       3       0       0
  2104 ;;Total ram usage:        3 bytes
  2105 ;; Hardware stack levels used:    1
  2106 ;; Hardware stack levels required when called:    9
  2107 ;; This function calls:
  2108 ;;		_SetDDRamAddr
  2109 ;;		_beep
  2110 ;;		_lockingScreen
  2111 ;;		_putsXLCD
  2112 ;;		_setData
  2113 ;;		_sprintf
  2114 ;;		_writeFrequency
  2115 ;; This function is called by:
  2116 ;;		_main
  2117 ;; This function uses a non-reentrant model
  2118 ;;
  2119                           
  2120                           
  2121                           ;psect for function _setFrequency
  2122  044D                     _setFrequency:	
  2123                           
  2124                           ;main.c: 180:     isOnConfig = 1;
  2125                           
  2126                           ;incstack = 0
  2127 ;; hardware stack exceeded
  2128                           ; Regs used in _setFrequency: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2129  044D  1283               	bcf	3,5	;RP0=0, select bank0
  2130  044E  1303               	bcf	3,6	;RP1=0, select bank0
  2131  044F  01CE               	clrf	_isOnConfig
  2132  0450  0ACE               	incf	_isOnConfig,f
  2133                           
  2134                           ;main.c: 181:     sprintf(lineOne,"SET   FREQUENCY ");
  2135  0451  3043               	movlw	(low ((STR_7-__stringbase)| (0+32768)))& (0+255)
  2136  0452  1683               	bsf	3,5	;RP0=1, select bank1
  2137  0453  1303               	bcf	3,6	;RP1=0, select bank1
  2138  0454  00DC               	movwf	??_setFrequency^(0+128)
  2139  0455  085C               	movf	??_setFrequency^(0+128),w
  2140  0456  00CA               	movwf	sprintf@f^(0+128)
  2141  0457  30B2               	movlw	(low (_lineOne| 0))& (0+255)
  2142  0458  120A  118A  2033  120A  118A  	fcall	_sprintf
  2143                           
  2144                           ;main.c: 182:     SetDDRamAddr(0x00);
  2145  045D  3000               	movlw	0
  2146  045E  120A  118A  27AE  120A  118A  	fcall	_SetDDRamAddr
  2147                           
  2148                           ;main.c: 183:     putsXLCD(lineOne);
  2149  0463  30B2               	movlw	(low (_lineOne| 0))& (0+255)
  2150  0464  120A  158A  21BA  120A  118A  	fcall	_putsXLCD
  2151                           
  2152                           ;main.c: 184:     beep(200);
  2153  0469  30C8               	movlw	200
  2154  046A  1683               	bsf	3,5	;RP0=1, select bank1
  2155  046B  1303               	bcf	3,6	;RP1=0, select bank1
  2156  046C  00C3               	movwf	beep@ms^(0+128)
  2157  046D  3000               	movlw	0
  2158  046E  00C4               	movwf	(beep@ms^(0+128)+1)
  2159  046F  120A  158A  2414  120A  118A  	fcall	_beep
  2160  0474                     l239:	
  2161                           ;main.c: 185:     while(!PORTAbits.RA4)continue;
  2162                           
  2163  0474  1283               	bcf	3,5	;RP0=0, select bank0
  2164  0475  1303               	bcf	3,6	;RP1=0, select bank0
  2165  0476  1E05               	btfss	5,4	;volatile
  2166  0477  2C74               	goto	l239
  2167  0478                     l242:	
  2168                           ;main.c: 187:     while(1){
  2169                           
  2170                           
  2171                           ;main.c: 188:         if(!PORTAbits.RA3){
  2172  0478  1985               	btfsc	5,3	;volatile
  2173  0479  2CD0               	goto	l243
  2174                           
  2175                           ;main.c: 189:             if(frequency < 1080)frequency++;
  2176  047A  3004               	movlw	4
  2177  047B  0245               	subwf	_frequency+1,w
  2178  047C  3038               	movlw	56
  2179  047D  1903               	skipnz
  2180  047E  0244               	subwf	_frequency,w
  2181  047F  1803               	skipnc
  2182  0480  2C87               	goto	l244
  2183  0481  3001               	movlw	1
  2184  0482  07C4               	addwf	_frequency,f
  2185  0483  1803               	skipnc
  2186  0484  0AC5               	incf	_frequency+1,f
  2187  0485  3000               	movlw	0
  2188  0486  07C5               	addwf	_frequency+1,f
  2189  0487                     l244:	
  2190                           
  2191                           ;main.c: 190:             if(frequency > 1080)frequency = 1080;
  2192  0487  3004               	movlw	4
  2193  0488  0245               	subwf	_frequency+1,w
  2194  0489  3039               	movlw	57
  2195  048A  1903               	skipnz
  2196  048B  0244               	subwf	_frequency,w
  2197  048C  1C03               	skipc
  2198  048D  2C92               	goto	l3853
  2199  048E  3038               	movlw	56
  2200  048F  00C4               	movwf	_frequency
  2201  0490  3004               	movlw	4
  2202  0491  00C5               	movwf	_frequency+1
  2203  0492                     l3853:	
  2204                           
  2205                           ;main.c: 191:             beep(100);
  2206  0492  3064               	movlw	100
  2207  0493  1683               	bsf	3,5	;RP0=1, select bank1
  2208  0494  1303               	bcf	3,6	;RP1=0, select bank1
  2209  0495  00C3               	movwf	beep@ms^(0+128)
  2210  0496  3000               	movlw	0
  2211  0497  00C4               	movwf	(beep@ms^(0+128)+1)
  2212  0498  120A  158A  2414  120A  118A  	fcall	_beep
  2213                           
  2214                           ;main.c: 192:             _delay((unsigned long)((150)*(4000000/4000.0)));
  2215  049D  30C3               	movlw	195
  2216  049E  1683               	bsf	3,5	;RP0=1, select bank1
  2217  049F  1303               	bcf	3,6	;RP1=0, select bank1
  2218  04A0  00DD               	movwf	(??_setFrequency^(0+128)+1)
  2219  04A1  30CC               	movlw	204
  2220  04A2  00DC               	movwf	??_setFrequency^(0+128)
  2221  04A3                     u3477:	
  2222  04A3  0BDC               	decfsz	??_setFrequency^(0+128),f
  2223  04A4  2CA3               	goto	u3477
  2224  04A5  0BDD               	decfsz	(??_setFrequency^(0+128)+1),f
  2225  04A6  2CA3               	goto	u3477
  2226  04A7  0000               	nop
  2227  04A8                     l3863:	
  2228                           ;main.c: 193:             while(!PORTAbits.RA3){
  2229                           
  2230                           
  2231                           ;main.c: 193:             while(!PORTAbits.RA3){
  2232  04A8  1283               	bcf	3,5	;RP0=0, select bank0
  2233  04A9  1303               	bcf	3,6	;RP1=0, select bank0
  2234  04AA  1985               	btfsc	5,3	;volatile
  2235  04AB  2CD0               	goto	l243
  2236                           
  2237                           ;main.c: 194:                 if(frequency < 1080)frequency++;
  2238  04AC  3004               	movlw	4
  2239  04AD  0245               	subwf	_frequency+1,w
  2240  04AE  3038               	movlw	56
  2241  04AF  1903               	skipnz
  2242  04B0  0244               	subwf	_frequency,w
  2243  04B1  1803               	skipnc
  2244  04B2  2CB9               	goto	l248
  2245  04B3  3001               	movlw	1
  2246  04B4  07C4               	addwf	_frequency,f
  2247  04B5  1803               	skipnc
  2248  04B6  0AC5               	incf	_frequency+1,f
  2249  04B7  3000               	movlw	0
  2250  04B8  07C5               	addwf	_frequency+1,f
  2251  04B9                     l248:	
  2252                           
  2253                           ;main.c: 195:                 if(frequency > 1080)frequency = 1080;
  2254  04B9  3004               	movlw	4
  2255  04BA  0245               	subwf	_frequency+1,w
  2256  04BB  3039               	movlw	57
  2257  04BC  1903               	skipnz
  2258  04BD  0244               	subwf	_frequency,w
  2259  04BE  1C03               	skipc
  2260  04BF  2CC4               	goto	l249
  2261  04C0  3038               	movlw	56
  2262  04C1  00C4               	movwf	_frequency
  2263  04C2  3004               	movlw	4
  2264  04C3  00C5               	movwf	_frequency+1
  2265  04C4                     l249:	
  2266                           
  2267                           ;main.c: 196:                 _delay((unsigned long)((50)*(4000000/4000.0)));
  2268  04C4  3041               	movlw	65
  2269  04C5  1683               	bsf	3,5	;RP0=1, select bank1
  2270  04C6  1303               	bcf	3,6	;RP1=0, select bank1
  2271  04C7  00DD               	movwf	(??_setFrequency^(0+128)+1)
  2272  04C8  30ED               	movlw	237
  2273  04C9  00DC               	movwf	??_setFrequency^(0+128)
  2274  04CA                     u3487:	
  2275  04CA  0BDC               	decfsz	??_setFrequency^(0+128),f
  2276  04CB  2CCA               	goto	u3487
  2277  04CC  0BDD               	decfsz	(??_setFrequency^(0+128)+1),f
  2278  04CD  2CCA               	goto	u3487
  2279  04CE  2CCF               	nop2
  2280  04CF  2CA8               	goto	l3863
  2281  04D0                     l243:	
  2282                           ;main.c: 198:         }
  2283                           
  2284                           
  2285                           ;main.c: 200:         if(!PORTAbits.RA5){
  2286  04D0  1A85               	btfsc	5,5	;volatile
  2287  04D1  2D28               	goto	l251
  2288                           
  2289                           ;main.c: 201:             if(frequency > 880)frequency--;
  2290  04D2  3003               	movlw	3
  2291  04D3  0245               	subwf	_frequency+1,w
  2292  04D4  3071               	movlw	113
  2293  04D5  1903               	skipnz
  2294  04D6  0244               	subwf	_frequency,w
  2295  04D7  1C03               	skipc
  2296  04D8  2CDF               	goto	l252
  2297  04D9  3001               	movlw	1
  2298  04DA  02C4               	subwf	_frequency,f
  2299  04DB  3000               	movlw	0
  2300  04DC  1C03               	skipc
  2301  04DD  03C5               	decf	_frequency+1,f
  2302  04DE  02C5               	subwf	_frequency+1,f
  2303  04DF                     l252:	
  2304                           
  2305                           ;main.c: 202:             if(frequency < 880)frequency = 880;
  2306  04DF  3003               	movlw	3
  2307  04E0  0245               	subwf	_frequency+1,w
  2308  04E1  3070               	movlw	112
  2309  04E2  1903               	skipnz
  2310  04E3  0244               	subwf	_frequency,w
  2311  04E4  1803               	skipnc
  2312  04E5  2CEA               	goto	l3871
  2313  04E6  3070               	movlw	112
  2314  04E7  00C4               	movwf	_frequency
  2315  04E8  3003               	movlw	3
  2316  04E9  00C5               	movwf	_frequency+1
  2317  04EA                     l3871:	
  2318                           
  2319                           ;main.c: 203:             beep(100);
  2320  04EA  3064               	movlw	100
  2321  04EB  1683               	bsf	3,5	;RP0=1, select bank1
  2322  04EC  1303               	bcf	3,6	;RP1=0, select bank1
  2323  04ED  00C3               	movwf	beep@ms^(0+128)
  2324  04EE  3000               	movlw	0
  2325  04EF  00C4               	movwf	(beep@ms^(0+128)+1)
  2326  04F0  120A  158A  2414  120A  118A  	fcall	_beep
  2327                           
  2328                           ;main.c: 204:             _delay((unsigned long)((150)*(4000000/4000.0)));
  2329  04F5  30C3               	movlw	195
  2330  04F6  1683               	bsf	3,5	;RP0=1, select bank1
  2331  04F7  1303               	bcf	3,6	;RP1=0, select bank1
  2332  04F8  00DD               	movwf	(??_setFrequency^(0+128)+1)
  2333  04F9  30CC               	movlw	204
  2334  04FA  00DC               	movwf	??_setFrequency^(0+128)
  2335  04FB                     u3497:	
  2336  04FB  0BDC               	decfsz	??_setFrequency^(0+128),f
  2337  04FC  2CFB               	goto	u3497
  2338  04FD  0BDD               	decfsz	(??_setFrequency^(0+128)+1),f
  2339  04FE  2CFB               	goto	u3497
  2340  04FF  0000               	nop
  2341  0500                     l3881:	
  2342                           ;main.c: 205:             while(!PORTAbits.RA5){
  2343                           
  2344                           
  2345                           ;main.c: 205:             while(!PORTAbits.RA5){
  2346  0500  1283               	bcf	3,5	;RP0=0, select bank0
  2347  0501  1303               	bcf	3,6	;RP1=0, select bank0
  2348  0502  1A85               	btfsc	5,5	;volatile
  2349  0503  2D28               	goto	l251
  2350                           
  2351                           ;main.c: 206:                 if(frequency > 880)frequency--;
  2352  0504  3003               	movlw	3
  2353  0505  0245               	subwf	_frequency+1,w
  2354  0506  3071               	movlw	113
  2355  0507  1903               	skipnz
  2356  0508  0244               	subwf	_frequency,w
  2357  0509  1C03               	skipc
  2358  050A  2D11               	goto	l256
  2359  050B  3001               	movlw	1
  2360  050C  02C4               	subwf	_frequency,f
  2361  050D  3000               	movlw	0
  2362  050E  1C03               	skipc
  2363  050F  03C5               	decf	_frequency+1,f
  2364  0510  02C5               	subwf	_frequency+1,f
  2365  0511                     l256:	
  2366                           
  2367                           ;main.c: 207:                 if(frequency < 880)frequency = 880;
  2368  0511  3003               	movlw	3
  2369  0512  0245               	subwf	_frequency+1,w
  2370  0513  3070               	movlw	112
  2371  0514  1903               	skipnz
  2372  0515  0244               	subwf	_frequency,w
  2373  0516  1803               	skipnc
  2374  0517  2D1C               	goto	l257
  2375  0518  3070               	movlw	112
  2376  0519  00C4               	movwf	_frequency
  2377  051A  3003               	movlw	3
  2378  051B  00C5               	movwf	_frequency+1
  2379  051C                     l257:	
  2380                           
  2381                           ;main.c: 208:                 _delay((unsigned long)((50)*(4000000/4000.0)));
  2382  051C  3041               	movlw	65
  2383  051D  1683               	bsf	3,5	;RP0=1, select bank1
  2384  051E  1303               	bcf	3,6	;RP1=0, select bank1
  2385  051F  00DD               	movwf	(??_setFrequency^(0+128)+1)
  2386  0520  30ED               	movlw	237
  2387  0521  00DC               	movwf	??_setFrequency^(0+128)
  2388  0522                     u3507:	
  2389  0522  0BDC               	decfsz	??_setFrequency^(0+128),f
  2390  0523  2D22               	goto	u3507
  2391  0524  0BDD               	decfsz	(??_setFrequency^(0+128)+1),f
  2392  0525  2D22               	goto	u3507
  2393  0526  2D27               	nop2
  2394  0527  2D00               	goto	l3881
  2395  0528                     l251:	
  2396                           ;main.c: 210:         }
  2397                           
  2398                           
  2399                           ;main.c: 212:         if(!PORTAbits.RA4){
  2400  0528  1A05               	btfsc	5,4	;volatile
  2401  0529  2C78               	goto	l242
  2402                           
  2403                           ;main.c: 213:             _delay((unsigned long)((500)*(4000000/4000.0)));
  2404  052A  3003               	movlw	3
  2405  052B  1683               	bsf	3,5	;RP0=1, select bank1
  2406  052C  1303               	bcf	3,6	;RP1=0, select bank1
  2407  052D  00DE               	movwf	(??_setFrequency^(0+128)+2)
  2408  052E  308A               	movlw	138
  2409  052F  00DD               	movwf	(??_setFrequency^(0+128)+1)
  2410  0530  3055               	movlw	85
  2411  0531  00DC               	movwf	??_setFrequency^(0+128)
  2412  0532                     u3517:	
  2413  0532  0BDC               	decfsz	??_setFrequency^(0+128),f
  2414  0533  2D32               	goto	u3517
  2415  0534  0BDD               	decfsz	(??_setFrequency^(0+128)+1),f
  2416  0535  2D32               	goto	u3517
  2417  0536  0BDE               	decfsz	(??_setFrequency^(0+128)+2),f
  2418  0537  2D32               	goto	u3517
  2419                           
  2420                           ;main.c: 214:             if(!PORTAbits.RA4){
  2421  0538  1283               	bcf	3,5	;RP0=0, select bank0
  2422  0539  1303               	bcf	3,6	;RP1=0, select bank0
  2423  053A  1A05               	btfsc	5,4	;volatile
  2424  053B  2C78               	goto	l242
  2425                           
  2426                           ;main.c: 215:                 setData(1);
  2427  053C  3001               	movlw	1
  2428  053D  120A  158A  2599  120A  118A  	fcall	_setData
  2429                           
  2430                           ;main.c: 216:                 beep(1000);
  2431  0542  30E8               	movlw	232
  2432  0543  1683               	bsf	3,5	;RP0=1, select bank1
  2433  0544  1303               	bcf	3,6	;RP1=0, select bank1
  2434  0545  00C3               	movwf	beep@ms^(0+128)
  2435  0546  3003               	movlw	3
  2436  0547  00C4               	movwf	(beep@ms^(0+128)+1)
  2437  0548  120A  158A  2414  120A  118A  	fcall	_beep
  2438                           
  2439                           ;main.c: 222:     isOnConfig = 0;
  2440                           
  2441                           ;main.c: 217:                 break;
  2442  054D  1283               	bcf	3,5	;RP0=0, select bank0
  2443  054E  1303               	bcf	3,6	;RP1=0, select bank0
  2444  054F  01CE               	clrf	_isOnConfig
  2445                           
  2446                           ;main.c: 223:     lockingScreen();
  2447  0550  120A  158A  22A4  120A  118A  	fcall	_lockingScreen
  2448                           
  2449                           ;main.c: 224:     writeFrequency(frequency);
  2450  0555  1283               	bcf	3,5	;RP0=0, select bank0
  2451  0556  1303               	bcf	3,6	;RP1=0, select bank0
  2452  0557  0845               	movf	_frequency+1,w
  2453  0558  1683               	bsf	3,5	;RP0=1, select bank1
  2454  0559  1303               	bcf	3,6	;RP1=0, select bank1
  2455  055A  00C6               	movwf	(writeFrequency@f+1)^(0+128)
  2456  055B  1283               	bcf	3,5	;RP0=0, select bank0
  2457  055C  1303               	bcf	3,6	;RP1=0, select bank0
  2458  055D  0844               	movf	_frequency,w
  2459  055E  1683               	bsf	3,5	;RP0=1, select bank1
  2460  055F  1303               	bcf	3,6	;RP1=0, select bank1
  2461  0560  00C5               	movwf	writeFrequency@f^(0+128)
  2462  0561  120A  118A  2565   	fcall	_writeFrequency
  2463  0564  0008               	return
  2464  0565                     __end_of_setFrequency:	
  2465                           
  2466                           	psect	text3
  2467  0565                     __ptext3:	
  2468 ;; *************** function _writeFrequency *****************
  2469 ;; Defined at:
  2470 ;;		line 12 in file "bh1514.c"
  2471 ;; Parameters:    Size  Location     Type
  2472 ;;  f               2    2[BANK1 ] unsigned int 
  2473 ;; Auto vars:     Size  Location     Type
  2474 ;;  r               2    9[BANK1 ] unsigned int 
  2475 ;;  buffer          2    7[BANK1 ] unsigned int 
  2476 ;; Return value:  Size  Location     Type
  2477 ;;                  1    wreg      void 
  2478 ;; Registers used:
  2479 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  2480 ;; Tracked objects:
  2481 ;;		On entry : 0/0
  2482 ;;		On exit  : 0/0
  2483 ;;		Unchanged: 0/0
  2484 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2485 ;;      Params:         0       0       2       0       0
  2486 ;;      Locals:         0       0       4       0       0
  2487 ;;      Temps:          0       0       3       0       0
  2488 ;;      Totals:         0       0       9       0       0
  2489 ;;Total ram usage:        9 bytes
  2490 ;; Hardware stack levels used:    1
  2491 ;; Hardware stack levels required when called:    7
  2492 ;; This function calls:
  2493 ;;		_beep
  2494 ;;		_codFreq
  2495 ;; This function is called by:
  2496 ;;		_main
  2497 ;;		_setFrequency
  2498 ;; This function uses a non-reentrant model
  2499 ;;
  2500                           
  2501                           
  2502                           ;psect for function _writeFrequency
  2503  0565                     _writeFrequency:	
  2504                           
  2505                           ;bh1514.c: 13:     unsigned int buffer;;bh1514.c: 14:     unsigned int r;;bh1514.c: 16: 
      +                              PORTCbits.RC4 = 0;
  2506                           
  2507                           ;incstack = 0
  2508                           ; Regs used in _writeFrequency: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  2509  0565  1283               	bcf	3,5	;RP0=0, select bank0
  2510  0566  1303               	bcf	3,6	;RP1=0, select bank0
  2511  0567  1207               	bcf	7,4	;volatile
  2512                           
  2513                           ;bh1514.c: 17:     PORTCbits.RC0 = 0;
  2514  0568  1007               	bcf	7,0	;volatile
  2515                           
  2516                           ;bh1514.c: 19:     buffer = codFreq(f);
  2517  0569  1683               	bsf	3,5	;RP0=1, select bank1
  2518  056A  1303               	bcf	3,6	;RP1=0, select bank1
  2519  056B  0846               	movf	(writeFrequency@f+1)^(0+128),w
  2520  056C  1283               	bcf	3,5	;RP0=0, select bank0
  2521  056D  1303               	bcf	3,6	;RP1=0, select bank0
  2522  056E  00BE               	movwf	codFreq@f+1
  2523  056F  1683               	bsf	3,5	;RP0=1, select bank1
  2524  0570  1303               	bcf	3,6	;RP1=0, select bank1
  2525  0571  0845               	movf	writeFrequency@f^(0+128),w
  2526  0572  1283               	bcf	3,5	;RP0=0, select bank0
  2527  0573  1303               	bcf	3,6	;RP1=0, select bank0
  2528  0574  00BD               	movwf	codFreq@f
  2529  0575  120A  158A  20EC  120A  118A  	fcall	_codFreq
  2530  057A  1283               	bcf	3,5	;RP0=0, select bank0
  2531  057B  1303               	bcf	3,6	;RP1=0, select bank0
  2532  057C  083E               	movf	?_codFreq+1,w
  2533  057D  1683               	bsf	3,5	;RP0=1, select bank1
  2534  057E  1303               	bcf	3,6	;RP1=0, select bank1
  2535  057F  00CB               	movwf	(writeFrequency@buffer+1)^(0+128)
  2536  0580  1283               	bcf	3,5	;RP0=0, select bank0
  2537  0581  1303               	bcf	3,6	;RP1=0, select bank0
  2538  0582  083D               	movf	?_codFreq,w
  2539  0583  1683               	bsf	3,5	;RP0=1, select bank1
  2540  0584  1303               	bcf	3,6	;RP1=0, select bank1
  2541  0585  00CA               	movwf	writeFrequency@buffer^(0+128)
  2542                           
  2543                           ;bh1514.c: 20:     PORTCbits.RC6 = 0;
  2544  0586  1283               	bcf	3,5	;RP0=0, select bank0
  2545  0587  1303               	bcf	3,6	;RP1=0, select bank0
  2546  0588  1307               	bcf	7,6	;volatile
  2547                           
  2548                           ;bh1514.c: 21:     PORTCbits.RC7 = 0;
  2549  0589  1387               	bcf	7,7	;volatile
  2550                           
  2551                           ;bh1514.c: 22:     PORTCbits.RC5 = 1;
  2552  058A  1687               	bsf	7,5	;volatile
  2553                           
  2554                           ;bh1514.c: 23:     _delay((unsigned long)((1)*(4000000/4000.0)));
  2555  058B  30C7               	movlw	199
  2556  058C  1683               	bsf	3,5	;RP0=1, select bank1
  2557  058D  1303               	bcf	3,6	;RP1=0, select bank1
  2558  058E  00C7               	movwf	??_writeFrequency^(0+128)
  2559  058F                     u3527:	
  2560  058F  2D90               	nop2
  2561  0590  0BC7               	decfsz	??_writeFrequency^(0+128),f
  2562  0591  2D8F               	goto	u3527
  2563  0592  2D93               	nop2
  2564                           
  2565                           ;bh1514.c: 25:     for(i = 0; i < 16; i++){
  2566  0593  1683               	bsf	3,5	;RP0=1, select bank1
  2567  0594  1303               	bcf	3,6	;RP1=0, select bank1
  2568  0595  01A0               	clrf	_i^(0+128)
  2569  0596                     l3751:	
  2570  0596  3010               	movlw	16
  2571  0597  0220               	subwf	_i^(0+128),w
  2572  0598  1803               	btfsc	3,0
  2573  0599  2DD6               	goto	l3773
  2574                           
  2575                           ;bh1514.c: 26:         r = (buffer >> i) & 0x0001;
  2576  059A  084B               	movf	(writeFrequency@buffer+1)^(0+128),w
  2577  059B  00C8               	movwf	(??_writeFrequency^(0+128)+1)
  2578  059C  084A               	movf	writeFrequency@buffer^(0+128),w
  2579  059D  00C7               	movwf	??_writeFrequency^(0+128)
  2580  059E  0A20               	incf	_i^(0+128),w
  2581  059F  2DA3               	goto	u3064
  2582  05A0                     u3065:	
  2583  05A0  1003               	clrc
  2584  05A1  0CC8               	rrf	(??_writeFrequency^(0+128)+1),f
  2585  05A2  0CC7               	rrf	??_writeFrequency^(0+128),f
  2586  05A3                     u3064:	
  2587  05A3  3EFF               	addlw	-1
  2588  05A4  1D03               	skipz
  2589  05A5  2DA0               	goto	u3065
  2590  05A6  3001               	movlw	1
  2591  05A7  0547               	andwf	??_writeFrequency^(0+128),w
  2592  05A8  00CC               	movwf	writeFrequency@r^(0+128)
  2593  05A9  3000               	movlw	0
  2594  05AA  0548               	andwf	(??_writeFrequency+1)^(0+128),w
  2595  05AB  00CD               	movwf	(writeFrequency@r+1)^(0+128)
  2596                           
  2597                           ;bh1514.c: 27:         _delay((unsigned long)((1)*(4000000/4000.0)));
  2598  05AC  30C7               	movlw	199
  2599  05AD  1683               	bsf	3,5	;RP0=1, select bank1
  2600  05AE  1303               	bcf	3,6	;RP1=0, select bank1
  2601  05AF  00C7               	movwf	??_writeFrequency^(0+128)
  2602  05B0                     u3537:	
  2603  05B0  2DB1               	nop2
  2604  05B1  0BC7               	decfsz	??_writeFrequency^(0+128),f
  2605  05B2  2DB0               	goto	u3537
  2606  05B3  2DB4               	nop2
  2607                           
  2608                           ;bh1514.c: 28:         PORTCbits.RC6 = 0;
  2609  05B4  1283               	bcf	3,5	;RP0=0, select bank0
  2610  05B5  1303               	bcf	3,6	;RP1=0, select bank0
  2611  05B6  1307               	bcf	7,6	;volatile
  2612                           
  2613                           ;bh1514.c: 29:         if(r == 1){
  2614  05B7  1683               	bsf	3,5	;RP0=1, select bank1
  2615  05B8  1303               	bcf	3,6	;RP1=0, select bank1
  2616  05B9  034C               	decf	writeFrequency@r^(0+128),w
  2617  05BA  044D               	iorwf	(writeFrequency@r+1)^(0+128),w
  2618  05BB  1D03               	btfss	3,2
  2619  05BC  2DC1               	goto	l537
  2620                           
  2621                           ;bh1514.c: 30:             PORTCbits.RC7 = 1;
  2622  05BD  1283               	bcf	3,5	;RP0=0, select bank0
  2623  05BE  1303               	bcf	3,6	;RP1=0, select bank0
  2624  05BF  1787               	bsf	7,7	;volatile
  2625                           
  2626                           ;bh1514.c: 31:         }else{
  2627  05C0  2DC4               	goto	l3765
  2628  05C1                     l537:	
  2629                           
  2630                           ;bh1514.c: 32:             PORTCbits.RC7 = 0;
  2631  05C1  1283               	bcf	3,5	;RP0=0, select bank0
  2632  05C2  1303               	bcf	3,6	;RP1=0, select bank0
  2633  05C3  1387               	bcf	7,7	;volatile
  2634  05C4                     l3765:	
  2635                           
  2636                           ;bh1514.c: 34:         _delay((unsigned long)((1)*(4000000/4000.0)));
  2637  05C4  30C7               	movlw	199
  2638  05C5  1683               	bsf	3,5	;RP0=1, select bank1
  2639  05C6  1303               	bcf	3,6	;RP1=0, select bank1
  2640  05C7  00C7               	movwf	??_writeFrequency^(0+128)
  2641  05C8                     u3547:	
  2642  05C8  2DC9               	nop2
  2643  05C9  0BC7               	decfsz	??_writeFrequency^(0+128),f
  2644  05CA  2DC8               	goto	u3547
  2645  05CB  2DCC               	nop2
  2646                           
  2647                           ;bh1514.c: 35:         PORTCbits.RC6 = 1;
  2648  05CC  1283               	bcf	3,5	;RP0=0, select bank0
  2649  05CD  1303               	bcf	3,6	;RP1=0, select bank0
  2650  05CE  1707               	bsf	7,6	;volatile
  2651                           
  2652                           ;bh1514.c: 36:     }
  2653  05CF  3001               	movlw	1
  2654  05D0  1683               	bsf	3,5	;RP0=1, select bank1
  2655  05D1  1303               	bcf	3,6	;RP1=0, select bank1
  2656  05D2  00C7               	movwf	??_writeFrequency^(0+128)
  2657  05D3  0847               	movf	??_writeFrequency^(0+128),w
  2658  05D4  07A0               	addwf	_i^(0+128),f
  2659  05D5  2D96               	goto	l3751
  2660  05D6                     l3773:	
  2661                           
  2662                           ;bh1514.c: 38:     _delay((unsigned long)((1)*(4000000/4000.0)));
  2663  05D6  30C7               	movlw	199
  2664  05D7  1683               	bsf	3,5	;RP0=1, select bank1
  2665  05D8  1303               	bcf	3,6	;RP1=0, select bank1
  2666  05D9  00C7               	movwf	??_writeFrequency^(0+128)
  2667  05DA                     u3557:	
  2668  05DA  2DDB               	nop2
  2669  05DB  0BC7               	decfsz	??_writeFrequency^(0+128),f
  2670  05DC  2DDA               	goto	u3557
  2671  05DD  2DDE               	nop2
  2672                           
  2673                           ;bh1514.c: 39:     PORTCbits.RC5 = 0;
  2674  05DE  1283               	bcf	3,5	;RP0=0, select bank0
  2675  05DF  1303               	bcf	3,6	;RP1=0, select bank0
  2676  05E0  1287               	bcf	7,5	;volatile
  2677                           
  2678                           ;bh1514.c: 41:     beep(20);
  2679  05E1  3014               	movlw	20
  2680  05E2  1683               	bsf	3,5	;RP0=1, select bank1
  2681  05E3  1303               	bcf	3,6	;RP1=0, select bank1
  2682  05E4  00C3               	movwf	beep@ms^(0+128)
  2683  05E5  3000               	movlw	0
  2684  05E6  00C4               	movwf	(beep@ms^(0+128)+1)
  2685  05E7  120A  158A  2414  120A  118A  	fcall	_beep
  2686                           
  2687                           ;bh1514.c: 42:     _delay((unsigned long)((500)*(4000000/4000.0)));
  2688  05EC  3003               	movlw	3
  2689  05ED  1683               	bsf	3,5	;RP0=1, select bank1
  2690  05EE  1303               	bcf	3,6	;RP1=0, select bank1
  2691  05EF  00C9               	movwf	(??_writeFrequency^(0+128)+2)
  2692  05F0  308A               	movlw	138
  2693  05F1  00C8               	movwf	(??_writeFrequency^(0+128)+1)
  2694  05F2  3055               	movlw	85
  2695  05F3  00C7               	movwf	??_writeFrequency^(0+128)
  2696  05F4                     u3567:	
  2697  05F4  0BC7               	decfsz	??_writeFrequency^(0+128),f
  2698  05F5  2DF4               	goto	u3567
  2699  05F6  0BC8               	decfsz	(??_writeFrequency^(0+128)+1),f
  2700  05F7  2DF4               	goto	u3567
  2701  05F8  0BC9               	decfsz	(??_writeFrequency^(0+128)+2),f
  2702  05F9  2DF4               	goto	u3567
  2703                           
  2704                           ;bh1514.c: 43:     beep(20);
  2705  05FA  3014               	movlw	20
  2706  05FB  1683               	bsf	3,5	;RP0=1, select bank1
  2707  05FC  1303               	bcf	3,6	;RP1=0, select bank1
  2708  05FD  00C3               	movwf	beep@ms^(0+128)
  2709  05FE  3000               	movlw	0
  2710  05FF  00C4               	movwf	(beep@ms^(0+128)+1)
  2711  0600  120A  158A  2414  120A  118A  	fcall	_beep
  2712                           
  2713                           ;bh1514.c: 44:     _delay((unsigned long)((500)*(4000000/4000.0)));
  2714  0605  3003               	movlw	3
  2715  0606  1683               	bsf	3,5	;RP0=1, select bank1
  2716  0607  1303               	bcf	3,6	;RP1=0, select bank1
  2717  0608  00C9               	movwf	(??_writeFrequency^(0+128)+2)
  2718  0609  308A               	movlw	138
  2719  060A  00C8               	movwf	(??_writeFrequency^(0+128)+1)
  2720  060B  3055               	movlw	85
  2721  060C  00C7               	movwf	??_writeFrequency^(0+128)
  2722  060D                     u3577:	
  2723  060D  0BC7               	decfsz	??_writeFrequency^(0+128),f
  2724  060E  2E0D               	goto	u3577
  2725  060F  0BC8               	decfsz	(??_writeFrequency^(0+128)+1),f
  2726  0610  2E0D               	goto	u3577
  2727  0611  0BC9               	decfsz	(??_writeFrequency^(0+128)+2),f
  2728  0612  2E0D               	goto	u3577
  2729                           
  2730                           ;bh1514.c: 45:     for(i = 0; i < 100; i++){
  2731  0613  1683               	bsf	3,5	;RP0=1, select bank1
  2732  0614  1303               	bcf	3,6	;RP1=0, select bank1
  2733  0615  01A0               	clrf	_i^(0+128)
  2734  0616                     l3785:	
  2735  0616  3064               	movlw	100
  2736  0617  0220               	subwf	_i^(0+128),w
  2737  0618  1803               	btfsc	3,0
  2738  0619  2E2B               	goto	l540
  2739                           
  2740                           ;bh1514.c: 46:         _delay((unsigned long)((100)*(4000000/4000.0)));
  2741  061A  3082               	movlw	130
  2742  061B  1683               	bsf	3,5	;RP0=1, select bank1
  2743  061C  1303               	bcf	3,6	;RP1=0, select bank1
  2744  061D  00C8               	movwf	(??_writeFrequency^(0+128)+1)
  2745  061E  30DD               	movlw	221
  2746  061F  00C7               	movwf	??_writeFrequency^(0+128)
  2747  0620                     u3587:	
  2748  0620  0BC7               	decfsz	??_writeFrequency^(0+128),f
  2749  0621  2E20               	goto	u3587
  2750  0622  0BC8               	decfsz	(??_writeFrequency^(0+128)+1),f
  2751  0623  2E20               	goto	u3587
  2752                           
  2753                           ;bh1514.c: 47:     }
  2754  0624  3001               	movlw	1
  2755  0625  1683               	bsf	3,5	;RP0=1, select bank1
  2756  0626  1303               	bcf	3,6	;RP1=0, select bank1
  2757  0627  00C7               	movwf	??_writeFrequency^(0+128)
  2758  0628  0847               	movf	??_writeFrequency^(0+128),w
  2759  0629  07A0               	addwf	_i^(0+128),f
  2760  062A  2E16               	goto	l3785
  2761  062B                     l540:	
  2762                           
  2763                           ;bh1514.c: 49:     PORTCbits.RC0 = 1;
  2764  062B  1283               	bcf	3,5	;RP0=0, select bank0
  2765  062C  1303               	bcf	3,6	;RP1=0, select bank0
  2766  062D  1407               	bsf	7,0	;volatile
  2767                           
  2768                           ;bh1514.c: 51:     return;
  2769  062E  0008               	return
  2770  062F                     __end_of_writeFrequency:	
  2771                           
  2772                           	psect	text4
  2773  08EC                     __ptext4:	
  2774 ;; *************** function _codFreq *****************
  2775 ;; Defined at:
  2776 ;;		line 6 in file "bh1514.c"
  2777 ;; Parameters:    Size  Location     Type
  2778 ;;  f               2   29[BANK0 ] unsigned int 
  2779 ;; Auto vars:     Size  Location     Type
  2780 ;;  fr              2   31[BANK0 ] unsigned int 
  2781 ;; Return value:  Size  Location     Type
  2782 ;;                  2   29[BANK0 ] unsigned int 
  2783 ;; Registers used:
  2784 ;;		wreg
  2785 ;; Tracked objects:
  2786 ;;		On entry : 0/0
  2787 ;;		On exit  : 0/0
  2788 ;;		Unchanged: 0/0
  2789 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2790 ;;      Params:         0       2       0       0       0
  2791 ;;      Locals:         0       2       0       0       0
  2792 ;;      Temps:          0       0       0       0       0
  2793 ;;      Totals:         0       4       0       0       0
  2794 ;;Total ram usage:        4 bytes
  2795 ;; Hardware stack levels used:    1
  2796 ;; Hardware stack levels required when called:    5
  2797 ;; This function calls:
  2798 ;;		Nothing
  2799 ;; This function is called by:
  2800 ;;		_writeFrequency
  2801 ;; This function uses a non-reentrant model
  2802 ;;
  2803                           
  2804                           
  2805                           ;psect for function _codFreq
  2806  08EC                     _codFreq:	
  2807                           
  2808                           ;bh1514.c: 7:     unsigned int fr;;bh1514.c: 8:         fr = f | 0b0100100000000000;
  2809                           
  2810                           ;incstack = 0
  2811                           ; Regs used in _codFreq: [wreg]
  2812  08EC  3000               	movlw	0
  2813  08ED  1283               	bcf	3,5	;RP0=0, select bank0
  2814  08EE  1303               	bcf	3,6	;RP1=0, select bank0
  2815  08EF  043D               	iorwf	codFreq@f,w
  2816  08F0  00BF               	movwf	codFreq@fr
  2817  08F1  3048               	movlw	72
  2818  08F2  043E               	iorwf	codFreq@f+1,w
  2819  08F3  00C0               	movwf	codFreq@fr+1
  2820                           
  2821                           ;bh1514.c: 9:     return fr;
  2822  08F4  0840               	movf	codFreq@fr+1,w
  2823  08F5  00BE               	movwf	?_codFreq+1
  2824  08F6  083F               	movf	codFreq@fr,w
  2825  08F7  00BD               	movwf	?_codFreq
  2826  08F8  0008               	return
  2827  08F9                     __end_of_codFreq:	
  2828                           
  2829                           	psect	text5
  2830  0C14                     __ptext5:	
  2831 ;; *************** function _beep *****************
  2832 ;; Defined at:
  2833 ;;		line 168 in file "main.c"
  2834 ;; Parameters:    Size  Location     Type
  2835 ;;  ms              2    0[BANK1 ] int 
  2836 ;; Auto vars:     Size  Location     Type
  2837 ;;		None
  2838 ;; Return value:  Size  Location     Type
  2839 ;;                  1    wreg      void 
  2840 ;; Registers used:
  2841 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  2842 ;; Tracked objects:
  2843 ;;		On entry : 0/0
  2844 ;;		On exit  : 0/0
  2845 ;;		Unchanged: 0/0
  2846 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2847 ;;      Params:         0       0       2       0       0
  2848 ;;      Locals:         0       0       0       0       0
  2849 ;;      Temps:          0       1       0       0       0
  2850 ;;      Totals:         0       1       2       0       0
  2851 ;;Total ram usage:        3 bytes
  2852 ;; Hardware stack levels used:    1
  2853 ;; Hardware stack levels required when called:    6
  2854 ;; This function calls:
  2855 ;;		___wmul
  2856 ;; This function is called by:
  2857 ;;		_main
  2858 ;;		_start
  2859 ;;		_setFrequency
  2860 ;;		_writeFrequency
  2861 ;; This function uses a non-reentrant model
  2862 ;;
  2863                           
  2864                           
  2865                           ;psect for function _beep
  2866  0C14                     _beep:	
  2867                           
  2868                           ;main.c: 169:     ms *= 5;
  2869                           
  2870                           ;incstack = 0
  2871                           ; Regs used in _beep: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  2872  0C14  3005               	movlw	5
  2873  0C15  1283               	bcf	3,5	;RP0=0, select bank0
  2874  0C16  1303               	bcf	3,6	;RP1=0, select bank0
  2875  0C17  00BD               	movwf	___wmul@multiplier
  2876  0C18  3000               	movlw	0
  2877  0C19  00BE               	movwf	___wmul@multiplier+1
  2878  0C1A  1683               	bsf	3,5	;RP0=1, select bank1
  2879  0C1B  1303               	bcf	3,6	;RP1=0, select bank1
  2880  0C1C  0844               	movf	(beep@ms+1)^(0+128),w
  2881  0C1D  1283               	bcf	3,5	;RP0=0, select bank0
  2882  0C1E  1303               	bcf	3,6	;RP1=0, select bank0
  2883  0C1F  00C0               	movwf	___wmul@multiplicand+1
  2884  0C20  1683               	bsf	3,5	;RP0=1, select bank1
  2885  0C21  1303               	bcf	3,6	;RP1=0, select bank1
  2886  0C22  0843               	movf	beep@ms^(0+128),w
  2887  0C23  1283               	bcf	3,5	;RP0=0, select bank0
  2888  0C24  1303               	bcf	3,6	;RP1=0, select bank0
  2889  0C25  00BF               	movwf	___wmul@multiplicand
  2890  0C26  120A  158A  21DD  120A  158A  	fcall	___wmul
  2891  0C2B  1283               	bcf	3,5	;RP0=0, select bank0
  2892  0C2C  1303               	bcf	3,6	;RP1=0, select bank0
  2893  0C2D  083E               	movf	?___wmul+1,w
  2894  0C2E  1683               	bsf	3,5	;RP0=1, select bank1
  2895  0C2F  1303               	bcf	3,6	;RP1=0, select bank1
  2896  0C30  00C4               	movwf	(beep@ms+1)^(0+128)
  2897  0C31  1283               	bcf	3,5	;RP0=0, select bank0
  2898  0C32  1303               	bcf	3,6	;RP1=0, select bank0
  2899  0C33  083D               	movf	?___wmul,w
  2900  0C34  1683               	bsf	3,5	;RP0=1, select bank1
  2901  0C35  1303               	bcf	3,6	;RP1=0, select bank1
  2902  0C36  00C3               	movwf	beep@ms^(0+128)
  2903  0C37                     l3619:	
  2904  0C37  0844               	movf	(beep@ms+1)^(0+128),w
  2905  0C38  3A80               	xorlw	128
  2906  0C39  00FF               	movwf	127
  2907  0C3A  3080               	movlw	128
  2908  0C3B  027F               	subwf	127,w
  2909  0C3C  1D03               	skipz
  2910  0C3D  2C40               	goto	u2905
  2911  0C3E  3001               	movlw	1
  2912  0C3F  0243               	subwf	beep@ms^(0+128),w
  2913  0C40                     u2905:	
  2914  0C40  1C03               	btfss	3,0
  2915  0C41  0008               	return
  2916                           
  2917                           ;main.c: 171:         PORTBbits.RB0 = 1;
  2918  0C42  1283               	bcf	3,5	;RP0=0, select bank0
  2919  0C43  1303               	bcf	3,6	;RP1=0, select bank0
  2920  0C44  1406               	bsf	6,0	;volatile
  2921                           
  2922                           ;main.c: 172:         _delay((unsigned long)((100)*(4000000/4000000.0)));
  2923  0C45  3020               	movlw	32
  2924  0C46  1283               	bcf	3,5	;RP0=0, select bank0
  2925  0C47  1303               	bcf	3,6	;RP1=0, select bank0
  2926  0C48  00C3               	movwf	??_beep
  2927  0C49                     u3597:	
  2928  0C49  0BC3               	decfsz	??_beep,f
  2929  0C4A  2C49               	goto	u3597
  2930  0C4B  0000               	nop
  2931                           
  2932                           ;main.c: 173:         PORTBbits.RB0 = 0;
  2933  0C4C  1283               	bcf	3,5	;RP0=0, select bank0
  2934  0C4D  1303               	bcf	3,6	;RP1=0, select bank0
  2935  0C4E  1006               	bcf	6,0	;volatile
  2936                           
  2937                           ;main.c: 174:         _delay((unsigned long)((100)*(4000000/4000000.0)));
  2938  0C4F  3020               	movlw	32
  2939  0C50  1283               	bcf	3,5	;RP0=0, select bank0
  2940  0C51  1303               	bcf	3,6	;RP1=0, select bank0
  2941  0C52  00C3               	movwf	??_beep
  2942  0C53                     u3607:	
  2943  0C53  0BC3               	decfsz	??_beep,f
  2944  0C54  2C53               	goto	u3607
  2945  0C55  0000               	nop
  2946                           
  2947                           ;main.c: 175:     }
  2948  0C56  30FF               	movlw	255
  2949  0C57  1683               	bsf	3,5	;RP0=1, select bank1
  2950  0C58  1303               	bcf	3,6	;RP1=0, select bank1
  2951  0C59  07C3               	addwf	beep@ms^(0+128),f
  2952  0C5A  1803               	skipnc
  2953  0C5B  0AC4               	incf	(beep@ms+1)^(0+128),f
  2954  0C5C  30FF               	movlw	255
  2955  0C5D  07C4               	addwf	(beep@ms+1)^(0+128),f
  2956  0C5E  2C37               	goto	l3619
  2957  0C5F                     __end_of_beep:	
  2958                           
  2959                           	psect	text6
  2960  0D99                     __ptext6:	
  2961 ;; *************** function _setData *****************
  2962 ;; Defined at:
  2963 ;;		line 44 in file "eeprom.c"
  2964 ;; Parameters:    Size  Location     Type
  2965 ;;  full            1    wreg     unsigned char 
  2966 ;; Auto vars:     Size  Location     Type
  2967 ;;  full            1    0[COMMON] unsigned char 
  2968 ;;  data1           1   33[BANK0 ] unsigned char 
  2969 ;;  data0           1   32[BANK0 ] unsigned char 
  2970 ;; Return value:  Size  Location     Type
  2971 ;;                  1    wreg      void 
  2972 ;; Registers used:
  2973 ;;		wreg, status,2, status,0, pclath, cstack
  2974 ;; Tracked objects:
  2975 ;;		On entry : 0/0
  2976 ;;		On exit  : 0/0
  2977 ;;		Unchanged: 0/0
  2978 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2979 ;;      Params:         0       0       0       0       0
  2980 ;;      Locals:         0       2       0       0       0
  2981 ;;      Temps:          0       1       0       0       0
  2982 ;;      Totals:         0       3       0       0       0
  2983 ;;Total ram usage:        3 bytes
  2984 ;; Hardware stack levels used:    1
  2985 ;; Hardware stack levels required when called:    6
  2986 ;; This function calls:
  2987 ;;		_writeEEPROM
  2988 ;; This function is called by:
  2989 ;;		_setFrequency
  2990 ;; This function uses a non-reentrant model
  2991 ;;
  2992                           
  2993                           
  2994                           ;psect for function _setData
  2995  0D99                     _setData:	
  2996                           
  2997                           ;eeprom.c: 45:     unsigned char data0 = frequency & 0x00FF;
  2998                           
  2999                           ;incstack = 0
  3000                           ; Regs used in _setData: [wreg+status,2+status,0+pclath+cstack]
  3001  0D99  1283               	bcf	3,5	;RP0=0, select bank0
  3002  0D9A  1303               	bcf	3,6	;RP1=0, select bank0
  3003  0D9B  0844               	movf	_frequency,w
  3004  0D9C  00BF               	movwf	??_setData
  3005  0D9D  083F               	movf	??_setData,w
  3006  0D9E  00C0               	movwf	setData@data0
  3007                           
  3008                           ;eeprom.c: 46:     unsigned char data1 = frequency >> 8;
  3009  0D9F  0845               	movf	_frequency+1,w
  3010  0DA0  00BF               	movwf	??_setData
  3011  0DA1  083F               	movf	??_setData,w
  3012  0DA2  00C1               	movwf	setData@data1
  3013                           
  3014                           ;eeprom.c: 47:     writeEEPROM(data0 ,0);
  3015  0DA3  01BD               	clrf	writeEEPROM@address
  3016  0DA4  0840               	movf	setData@data0,w
  3017  0DA5  120A  158A  217C  120A  158A  	fcall	_writeEEPROM
  3018                           
  3019                           ;eeprom.c: 48:     writeEEPROM(data1 ,1);
  3020  0DAA  1283               	bcf	3,5	;RP0=0, select bank0
  3021  0DAB  1303               	bcf	3,6	;RP1=0, select bank0
  3022  0DAC  01BD               	clrf	writeEEPROM@address
  3023  0DAD  0ABD               	incf	writeEEPROM@address,f
  3024  0DAE  0841               	movf	setData@data1,w
  3025  0DAF  120A  158A  217C  120A  158A  	fcall	_writeEEPROM
  3026                           
  3027                           ;eeprom.c: 49:     writeEEPROM(months ,2);
  3028  0DB4  3002               	movlw	2
  3029  0DB5  1283               	bcf	3,5	;RP0=0, select bank0
  3030  0DB6  1303               	bcf	3,6	;RP1=0, select bank0
  3031  0DB7  00BF               	movwf	??_setData
  3032  0DB8  083F               	movf	??_setData,w
  3033  0DB9  00BD               	movwf	writeEEPROM@address
  3034  0DBA  084A               	movf	_months,w
  3035  0DBB  120A  158A  217C  120A  158A  	fcall	_writeEEPROM
  3036                           
  3037                           ;eeprom.c: 50:     writeEEPROM(days ,3);
  3038  0DC0  3003               	movlw	3
  3039  0DC1  1283               	bcf	3,5	;RP0=0, select bank0
  3040  0DC2  1303               	bcf	3,6	;RP1=0, select bank0
  3041  0DC3  00BF               	movwf	??_setData
  3042  0DC4  083F               	movf	??_setData,w
  3043  0DC5  00BD               	movwf	writeEEPROM@address
  3044  0DC6  0849               	movf	_days,w
  3045  0DC7  120A  158A  217C  120A  158A  	fcall	_writeEEPROM
  3046                           
  3047                           ;eeprom.c: 51:     writeEEPROM(hours ,4);
  3048  0DCC  3004               	movlw	4
  3049  0DCD  1283               	bcf	3,5	;RP0=0, select bank0
  3050  0DCE  1303               	bcf	3,6	;RP1=0, select bank0
  3051  0DCF  00BF               	movwf	??_setData
  3052  0DD0  083F               	movf	??_setData,w
  3053  0DD1  00BD               	movwf	writeEEPROM@address
  3054  0DD2  0848               	movf	_hours,w
  3055  0DD3  120A  158A  217C  120A  158A  	fcall	_writeEEPROM
  3056                           
  3057                           ;eeprom.c: 52:     writeEEPROM(minutes ,5);
  3058  0DD8  3005               	movlw	5
  3059  0DD9  1283               	bcf	3,5	;RP0=0, select bank0
  3060  0DDA  1303               	bcf	3,6	;RP1=0, select bank0
  3061  0DDB  00BF               	movwf	??_setData
  3062  0DDC  083F               	movf	??_setData,w
  3063  0DDD  00BD               	movwf	writeEEPROM@address
  3064  0DDE  0847               	movf	_minutes,w
  3065  0DDF  120A  158A  217C  120A  158A  	fcall	_writeEEPROM
  3066                           
  3067                           ;eeprom.c: 53:     writeEEPROM(functionalStat ,6);
  3068  0DE4  3006               	movlw	6
  3069  0DE5  1283               	bcf	3,5	;RP0=0, select bank0
  3070  0DE6  1303               	bcf	3,6	;RP1=0, select bank0
  3071  0DE7  00BF               	movwf	??_setData
  3072  0DE8  083F               	movf	??_setData,w
  3073  0DE9  00BD               	movwf	writeEEPROM@address
  3074  0DEA  084F               	movf	_functionalStat,w
  3075  0DEB  120A  158A  217C   	fcall	_writeEEPROM
  3076  0DEE  0008               	return
  3077  0DEF                     __end_of_setData:	
  3078                           
  3079                           	psect	text7
  3080  097C                     __ptext7:	
  3081 ;; *************** function _writeEEPROM *****************
  3082 ;; Defined at:
  3083 ;;		line 14 in file "eeprom.c"
  3084 ;; Parameters:    Size  Location     Type
  3085 ;;  data            1    wreg     unsigned char 
  3086 ;;  address         1   29[BANK0 ] unsigned char 
  3087 ;; Auto vars:     Size  Location     Type
  3088 ;;  data            1   30[BANK0 ] unsigned char 
  3089 ;; Return value:  Size  Location     Type
  3090 ;;                  1    wreg      void 
  3091 ;; Registers used:
  3092 ;;		wreg
  3093 ;; Tracked objects:
  3094 ;;		On entry : 0/0
  3095 ;;		On exit  : 0/0
  3096 ;;		Unchanged: 0/0
  3097 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3098 ;;      Params:         0       1       0       0       0
  3099 ;;      Locals:         0       1       0       0       0
  3100 ;;      Temps:          0       0       0       0       0
  3101 ;;      Totals:         0       2       0       0       0
  3102 ;;Total ram usage:        2 bytes
  3103 ;; Hardware stack levels used:    1
  3104 ;; Hardware stack levels required when called:    5
  3105 ;; This function calls:
  3106 ;;		Nothing
  3107 ;; This function is called by:
  3108 ;;		_setData
  3109 ;; This function uses a non-reentrant model
  3110 ;;
  3111                           
  3112                           
  3113                           ;psect for function _writeEEPROM
  3114  097C                     _writeEEPROM:	
  3115                           
  3116                           ;incstack = 0
  3117                           ; Regs used in _writeEEPROM: [wreg]
  3118                           ;writeEEPROM@data stored from wreg
  3119  097C  1283               	bcf	3,5	;RP0=0, select bank0
  3120  097D  1303               	bcf	3,6	;RP1=0, select bank0
  3121  097E  00BE               	movwf	writeEEPROM@data
  3122                           
  3123                           ;eeprom.c: 15:     EEADR = address;
  3124  097F  083D               	movf	writeEEPROM@address,w
  3125  0980  1283               	bcf	3,5	;RP0=0, select bank2
  3126  0981  1703               	bsf	3,6	;RP1=1, select bank2
  3127  0982  008D               	movwf	13	;volatile
  3128                           
  3129                           ;eeprom.c: 16:     EEDATA = data;
  3130  0983  1283               	bcf	3,5	;RP0=0, select bank0
  3131  0984  1303               	bcf	3,6	;RP1=0, select bank0
  3132  0985  083E               	movf	writeEEPROM@data,w
  3133  0986  1283               	bcf	3,5	;RP0=0, select bank2
  3134  0987  1703               	bsf	3,6	;RP1=1, select bank2
  3135  0988  008C               	movwf	12	;volatile
  3136                           
  3137                           ;eeprom.c: 18:     EECON1bits.EEPGD = 0;
  3138  0989  1683               	bsf	3,5	;RP0=1, select bank3
  3139  098A  1703               	bsf	3,6	;RP1=1, select bank3
  3140  098B  138C               	bcf	12,7	;volsfr
  3141                           
  3142                           ;eeprom.c: 19:     EECON1bits.WREN = 1;
  3143  098C  150C               	bsf	12,2	;volsfr
  3144                           
  3145                           ;eeprom.c: 21:     INTCONbits.GIE = 0;
  3146  098D  138B               	bcf	11,7	;volatile
  3147                           
  3148                           ;eeprom.c: 22:     EECON2 = 0x55;
  3149  098E  3055               	movlw	85
  3150  098F  008D               	movwf	13	;volsfr
  3151                           
  3152                           ;eeprom.c: 23:     EECON2 = 0xAA;
  3153  0990  30AA               	movlw	170
  3154  0991  008D               	movwf	13	;volsfr
  3155                           
  3156                           ;eeprom.c: 24:     EECON1bits.WR = 1;
  3157  0992  148C               	bsf	12,1	;volsfr
  3158                           
  3159                           ;eeprom.c: 25:     INTCONbits.GIE = 1;
  3160  0993  178B               	bsf	11,7	;volatile
  3161  0994                     l60:	
  3162                           ;eeprom.c: 27:     while(PIR2bits.EEIF == 0) continue;
  3163                           
  3164  0994  1283               	bcf	3,5	;RP0=0, select bank0
  3165  0995  1303               	bcf	3,6	;RP1=0, select bank0
  3166  0996  1A0D               	btfsc	13,4	;volatile
  3167  0997  0008               	return
  3168  0998  2994               	goto	l60
  3169  0999                     __end_of_writeEEPROM:	
  3170                           
  3171                           	psect	text8
  3172  0AA4                     __ptext8:	
  3173 ;; *************** function _lockingScreen *****************
  3174 ;; Defined at:
  3175 ;;		line 250 in file "main.c"
  3176 ;; Parameters:    Size  Location     Type
  3177 ;;		None
  3178 ;; Auto vars:     Size  Location     Type
  3179 ;;		None
  3180 ;; Return value:  Size  Location     Type
  3181 ;;                  1    wreg      void 
  3182 ;; Registers used:
  3183 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3184 ;; Tracked objects:
  3185 ;;		On entry : 0/0
  3186 ;;		On exit  : 0/0
  3187 ;;		Unchanged: 0/0
  3188 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3189 ;;      Params:         0       0       0       0       0
  3190 ;;      Locals:         0       0       0       0       0
  3191 ;;      Temps:          0       0       1       0       0
  3192 ;;      Totals:         0       0       1       0       0
  3193 ;;Total ram usage:        1 bytes
  3194 ;; Hardware stack levels used:    1
  3195 ;; Hardware stack levels required when called:    8
  3196 ;; This function calls:
  3197 ;;		_SetDDRamAddr
  3198 ;;		_putsXLCD
  3199 ;;		_sprintf
  3200 ;; This function is called by:
  3201 ;;		_main
  3202 ;;		_setFrequency
  3203 ;; This function uses a non-reentrant model
  3204 ;;
  3205                           
  3206                           
  3207                           ;psect for function _lockingScreen
  3208  0AA4                     _lockingScreen:	
  3209                           
  3210                           ;main.c: 252:     sprintf(lineOne,"LOCKING         ");
  3211                           
  3212                           ;incstack = 0
  3213 ;; hardware stack exceeded
  3214                           ; Regs used in _lockingScreen: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3215  0AA4  3021               	movlw	(low ((STR_10-__stringbase)| (0+32768)))& (0+255)
  3216  0AA5  1683               	bsf	3,5	;RP0=1, select bank1
  3217  0AA6  1303               	bcf	3,6	;RP1=0, select bank1
  3218  0AA7  00DB               	movwf	??_lockingScreen^(0+128)
  3219  0AA8  085B               	movf	??_lockingScreen^(0+128),w
  3220  0AA9  00CA               	movwf	sprintf@f^(0+128)
  3221  0AAA  30B2               	movlw	(low (_lineOne| 0))& (0+255)
  3222  0AAB  120A  118A  2033  120A  158A  	fcall	_sprintf
  3223                           
  3224                           ;main.c: 253:     sprintf(lineTwo,"       FREQUENCY");
  3225  0AB0  3087               	movlw	(low ((STR_11-__stringbase)| (0+32768)))& (0+255)
  3226  0AB1  1683               	bsf	3,5	;RP0=1, select bank1
  3227  0AB2  1303               	bcf	3,6	;RP1=0, select bank1
  3228  0AB3  00DB               	movwf	??_lockingScreen^(0+128)
  3229  0AB4  085B               	movf	??_lockingScreen^(0+128),w
  3230  0AB5  00CA               	movwf	sprintf@f^(0+128)
  3231  0AB6  30A1               	movlw	(low (_lineTwo| 0))& (0+255)
  3232  0AB7  120A  118A  2033  120A  158A  	fcall	_sprintf
  3233                           
  3234                           ;main.c: 254:     SetDDRamAddr(0x00);
  3235  0ABC  3000               	movlw	0
  3236  0ABD  120A  118A  27AE  120A  158A  	fcall	_SetDDRamAddr
  3237                           
  3238                           ;main.c: 255:     putsXLCD(lineOne);
  3239  0AC2  30B2               	movlw	(low (_lineOne| 0))& (0+255)
  3240  0AC3  120A  158A  21BA  120A  158A  	fcall	_putsXLCD
  3241                           
  3242                           ;main.c: 256:     SetDDRamAddr(0x40);
  3243  0AC8  3040               	movlw	64
  3244  0AC9  120A  118A  27AE  120A  158A  	fcall	_SetDDRamAddr
  3245                           
  3246                           ;main.c: 257:     putsXLCD(lineTwo);
  3247  0ACE  30A1               	movlw	(low (_lineTwo| 0))& (0+255)
  3248  0ACF  120A  158A  21BA   	fcall	_putsXLCD
  3249  0AD2  0008               	return
  3250  0AD3                     __end_of_lockingScreen:	
  3251                           
  3252                           	psect	text9
  3253  0EFD                     __ptext9:	
  3254 ;; *************** function _principalScreen *****************
  3255 ;; Defined at:
  3256 ;;		line 240 in file "main.c"
  3257 ;; Parameters:    Size  Location     Type
  3258 ;;		None
  3259 ;; Auto vars:     Size  Location     Type
  3260 ;;  integ           1   30[BANK1 ] unsigned char 
  3261 ;;  decim           1   29[BANK1 ] unsigned char 
  3262 ;; Return value:  Size  Location     Type
  3263 ;;                  1    wreg      void 
  3264 ;; Registers used:
  3265 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3266 ;; Tracked objects:
  3267 ;;		On entry : 0/0
  3268 ;;		On exit  : 0/0
  3269 ;;		Unchanged: 0/0
  3270 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3271 ;;      Params:         0       0       0       0       0
  3272 ;;      Locals:         0       0       2       0       0
  3273 ;;      Temps:          0       0       5       0       0
  3274 ;;      Totals:         0       0       7       0       0
  3275 ;;Total ram usage:        7 bytes
  3276 ;; Hardware stack levels used:    1
  3277 ;; Hardware stack levels required when called:    8
  3278 ;; This function calls:
  3279 ;;		_SetDDRamAddr
  3280 ;;		___lwdiv
  3281 ;;		___lwmod
  3282 ;;		_putrsXLCD
  3283 ;;		_putsXLCD
  3284 ;;		_sprintf
  3285 ;; This function is called by:
  3286 ;;		_main
  3287 ;; This function uses a non-reentrant model
  3288 ;;
  3289                           
  3290                           
  3291                           ;psect for function _principalScreen
  3292  0EFD                     _principalScreen:	
  3293                           
  3294                           ;main.c: 241:     SetDDRamAddr(0x00);
  3295                           
  3296                           ;incstack = 0
  3297 ;; hardware stack exceeded
  3298                           ; Regs used in _principalScreen: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3299  0EFD  3000               	movlw	0
  3300  0EFE  120A  118A  27AE  120A  158A  	fcall	_SetDDRamAddr
  3301                           
  3302                           ;main.c: 242:     putrsXLCD("AMPRO      EX-FM");
  3303  0F03  3065               	movlw	(low ((STR_8-__stringbase)| (0+32768)))& (0+255)
  3304  0F04  120A  158A  224C  120A  158A  	fcall	_putrsXLCD
  3305                           
  3306                           ;main.c: 243:     unsigned char decim = frequency % 10;
  3307  0F09  300A               	movlw	10
  3308  0F0A  1683               	bsf	3,5	;RP0=1, select bank1
  3309  0F0B  1303               	bcf	3,6	;RP1=0, select bank1
  3310  0F0C  00C6               	movwf	___lwmod@divisor^(0+128)
  3311  0F0D  3000               	movlw	0
  3312  0F0E  00C7               	movwf	(___lwmod@divisor^(0+128)+1)
  3313  0F0F  1283               	bcf	3,5	;RP0=0, select bank0
  3314  0F10  1303               	bcf	3,6	;RP1=0, select bank0
  3315  0F11  0845               	movf	_frequency+1,w
  3316  0F12  1683               	bsf	3,5	;RP0=1, select bank1
  3317  0F13  1303               	bcf	3,6	;RP1=0, select bank1
  3318  0F14  00C9               	movwf	(___lwmod@dividend+1)^(0+128)
  3319  0F15  1283               	bcf	3,5	;RP0=0, select bank0
  3320  0F16  1303               	bcf	3,6	;RP1=0, select bank0
  3321  0F17  0844               	movf	_frequency,w
  3322  0F18  1683               	bsf	3,5	;RP0=1, select bank1
  3323  0F19  1303               	bcf	3,6	;RP1=0, select bank1
  3324  0F1A  00C8               	movwf	___lwmod@dividend^(0+128)
  3325  0F1B  120A  158A  2341  120A  158A  	fcall	___lwmod
  3326  0F20  1683               	bsf	3,5	;RP0=1, select bank1
  3327  0F21  1303               	bcf	3,6	;RP1=0, select bank1
  3328  0F22  0846               	movf	?___lwmod^(0+128),w
  3329  0F23  00DB               	movwf	??_principalScreen^(0+128)
  3330  0F24  085B               	movf	??_principalScreen^(0+128),w
  3331  0F25  00E0               	movwf	principalScreen@decim^(0+128)
  3332                           
  3333                           ;main.c: 244:     unsigned char integ = frequency / 10;
  3334  0F26  300A               	movlw	10
  3335  0F27  1283               	bcf	3,5	;RP0=0, select bank0
  3336  0F28  1303               	bcf	3,6	;RP1=0, select bank0
  3337  0F29  00BD               	movwf	___lwdiv@divisor
  3338  0F2A  3000               	movlw	0
  3339  0F2B  00BE               	movwf	___lwdiv@divisor+1
  3340  0F2C  0845               	movf	_frequency+1,w
  3341  0F2D  00C0               	movwf	___lwdiv@dividend+1
  3342  0F2E  0844               	movf	_frequency,w
  3343  0F2F  00BF               	movwf	___lwdiv@dividend
  3344  0F30  120A  158A  25EF  120A  158A  	fcall	___lwdiv
  3345  0F35  1283               	bcf	3,5	;RP0=0, select bank0
  3346  0F36  1303               	bcf	3,6	;RP1=0, select bank0
  3347  0F37  083D               	movf	?___lwdiv,w
  3348  0F38  1683               	bsf	3,5	;RP0=1, select bank1
  3349  0F39  1303               	bcf	3,6	;RP1=0, select bank1
  3350  0F3A  00DB               	movwf	??_principalScreen^(0+128)
  3351  0F3B  085B               	movf	??_principalScreen^(0+128),w
  3352  0F3C  00E1               	movwf	principalScreen@integ^(0+128)
  3353                           
  3354                           ;main.c: 245:     sprintf(lineTwo,"FREQ.  %3d.%d MHz",integ, decim);
  3355  0F3D  300F               	movlw	(low ((STR_9-__stringbase)| (0+32768)))& (0+255)
  3356  0F3E  00DB               	movwf	??_principalScreen^(0+128)
  3357  0F3F  085B               	movf	??_principalScreen^(0+128),w
  3358  0F40  00CA               	movwf	sprintf@f^(0+128)
  3359  0F41  0861               	movf	principalScreen@integ^(0+128),w
  3360  0F42  00DC               	movwf	(??_principalScreen+1)^(0+128)
  3361  0F43  01DD               	clrf	((??_principalScreen+1)^(0+128)+1)
  3362  0F44  085C               	movf	(??_principalScreen+1)^(0+128),w
  3363  0F45  00CB               	movwf	(?_sprintf^(0+128)+1)
  3364  0F46  085D               	movf	(??_principalScreen+2)^(0+128),w
  3365  0F47  00CC               	movwf	((?_sprintf+1)^(0+128)+1)
  3366  0F48  0860               	movf	principalScreen@decim^(0+128),w
  3367  0F49  00DE               	movwf	(??_principalScreen+3)^(0+128)
  3368  0F4A  01DF               	clrf	((??_principalScreen+3)^(0+128)+1)
  3369  0F4B  085E               	movf	(??_principalScreen+3)^(0+128),w
  3370  0F4C  00CD               	movwf	(?_sprintf^(0+128)+3)
  3371  0F4D  085F               	movf	(??_principalScreen+4)^(0+128),w
  3372  0F4E  00CE               	movwf	((?_sprintf+1)^(0+128)+3)
  3373  0F4F  30A1               	movlw	(low (_lineTwo| 0))& (0+255)
  3374  0F50  120A  118A  2033  120A  158A  	fcall	_sprintf
  3375                           
  3376                           ;main.c: 246:     SetDDRamAddr(0x40);
  3377  0F55  3040               	movlw	64
  3378  0F56  120A  118A  27AE  120A  158A  	fcall	_SetDDRamAddr
  3379                           
  3380                           ;main.c: 247:     putsXLCD(lineTwo);
  3381  0F5B  30A1               	movlw	(low (_lineTwo| 0))& (0+255)
  3382  0F5C  120A  158A  21BA   	fcall	_putsXLCD
  3383  0F5F  0008               	return
  3384  0F60                     __end_of_principalScreen:	
  3385                           
  3386                           	psect	text10
  3387  0033                     __ptext10:	
  3388 ;; *************** function _sprintf *****************
  3389 ;; Defined at:
  3390 ;;		line 500 in file "/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt.c"
  3391 ;; Parameters:    Size  Location     Type
  3392 ;;  sp              1    wreg     PTR unsigned char 
  3393 ;;		 -> lineTwo(17), lineOne(17), 
  3394 ;;  f               1    7[BANK1 ] PTR const unsigned char 
  3395 ;;		 -> STR_12(18), STR_11(17), STR_10(17), STR_9(18), 
  3396 ;;		 -> STR_7(17), STR_6(17), STR_5(17), STR_4(17), 
  3397 ;;		 -> STR_3(17), STR_2(17), STR_1(17), 
  3398 ;; Auto vars:     Size  Location     Type
  3399 ;;  sp              1   22[BANK1 ] PTR unsigned char 
  3400 ;;		 -> lineTwo(17), lineOne(17), 
  3401 ;;  tmpval          4    0        struct .
  3402 ;;  width           2   20[BANK1 ] int 
  3403 ;;  val             2   18[BANK1 ] unsigned int 
  3404 ;;  cp              2    0        PTR const unsigned char 
  3405 ;;  len             2    0        unsigned int 
  3406 ;;  c               1   23[BANK1 ] unsigned char 
  3407 ;;  flag            1   17[BANK1 ] unsigned char 
  3408 ;;  prec            1   16[BANK1 ] char 
  3409 ;;  ap              1   15[BANK1 ] PTR void [1]
  3410 ;;		 -> ?_sprintf(2), 
  3411 ;; Return value:  Size  Location     Type
  3412 ;;                  2    7[BANK1 ] int 
  3413 ;; Registers used:
  3414 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3415 ;; Tracked objects:
  3416 ;;		On entry : 0/0
  3417 ;;		On exit  : 0/0
  3418 ;;		Unchanged: 0/0
  3419 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3420 ;;      Params:         0       0       5       0       0
  3421 ;;      Locals:         0       0       9       0       0
  3422 ;;      Temps:          0       0       3       0       0
  3423 ;;      Totals:         0       0      17       0       0
  3424 ;;Total ram usage:       17 bytes
  3425 ;; Hardware stack levels used:    1
  3426 ;; Hardware stack levels required when called:    6
  3427 ;; This function calls:
  3428 ;;		___lwdiv
  3429 ;;		___lwmod
  3430 ;;		___wmul
  3431 ;;		_isdigit
  3432 ;; This function is called by:
  3433 ;;		_start
  3434 ;;		_setFrequency
  3435 ;;		_principalScreen
  3436 ;;		_lockingScreen
  3437 ;; This function uses a non-reentrant model
  3438 ;;
  3439                           
  3440                           
  3441                           ;psect for function _sprintf
  3442  0033                     _sprintf:	
  3443                           
  3444                           ;incstack = 0
  3445 ;; using string table level
  3446                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3447                           ;sprintf@sp stored from wreg
  3448  0033  1683               	bsf	3,5	;RP0=1, select bank1
  3449  0034  1303               	bcf	3,6	;RP1=0, select bank1
  3450  0035  00D9               	movwf	sprintf@sp^(0+128)
  3451                           
  3452                           ;/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt.c: 500: sprintf(char * sp, const
      +                           char * f, ...);/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt.c: 501: {;/opt/mi
      +                          crochip/xc8/v2.05/pic/sources/c90/common/doprnt.c: 502:  va_list ap;;/opt/microchip/xc8/
      +                          v2.05/pic/sources/c90/common/doprnt.c: 507:  char c;;/opt/microchip/xc8/v2.05/pic/source
      +                          s/c90/common/doprnt.c: 509:  int width;;/opt/microchip/xc8/v2.05/pic/sources/c90/common/
      +                          doprnt.c: 516:  signed char prec;;/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt
      +                          .c: 520:  unsigned char flag;
  3453  0036  30CB               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  3454  0037  00CF               	movwf	??_sprintf^(0+128)
  3455  0038  084F               	movf	??_sprintf^(0+128),w
  3456  0039  00D2               	movwf	sprintf@ap^(0+128)
  3457  003A                     l3711:	
  3458                           ;/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt.c: 548:  while((c = *f++)) {
  3459                           
  3460                           
  3461                           ;/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt.c: 548:  while((c = *f++)) {
  3462  003A  3001               	movlw	1
  3463  003B  07CA               	addwf	sprintf@f^(0+128),f
  3464  003C  30FF               	movlw	-1
  3465  003D  074A               	addwf	sprintf@f^(0+128),w
  3466  003E  0084               	movwf	4
  3467  003F  120A  118A  2700  120A  118A  	fcall	stringdir
  3468  0044  00CF               	movwf	??_sprintf^(0+128)
  3469  0045  084F               	movf	??_sprintf^(0+128),w
  3470  0046  00DA               	movwf	sprintf@c^(0+128)
  3471  0047  085A               	movf	sprintf@c^(0+128),w
  3472  0048  1903               	btfsc	3,2
  3473  0049  29B6               	goto	l3713
  3474                           
  3475                           ;/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt.c: 550:   if(c != '%')
  3476  004A  3025               	movlw	37
  3477  004B  065A               	xorwf	sprintf@c^(0+128),w
  3478  004C  1903               	btfsc	3,2
  3479  004D  285A               	goto	l3637
  3480                           
  3481                           ;/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt.c: 552:   {;/opt/microchip/xc8/v
      +                          2.05/pic/sources/c90/common/doprnt.c: 553:    ((*sp++ = (c)));
  3482  004E  085A               	movf	sprintf@c^(0+128),w
  3483  004F  00CF               	movwf	??_sprintf^(0+128)
  3484  0050  0859               	movf	sprintf@sp^(0+128),w
  3485  0051  0084               	movwf	4
  3486  0052  084F               	movf	??_sprintf^(0+128),w
  3487  0053  1383               	bcf	3,7	;select IRP bank0
  3488  0054  0080               	movwf	0
  3489  0055  3001               	movlw	1
  3490  0056  00CF               	movwf	??_sprintf^(0+128)
  3491  0057  084F               	movf	??_sprintf^(0+128),w
  3492  0058  07D9               	addwf	sprintf@sp^(0+128),f
  3493                           
  3494                           ;/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt.c: 554:    continue;
  3495  0059  283A               	goto	l3711
  3496  005A                     l3637:	
  3497                           
  3498                           ;/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt.c: 558:   width = 0;
  3499  005A  01D7               	clrf	sprintf@width^(0+128)
  3500  005B  01D8               	clrf	(sprintf@width+1)^(0+128)
  3501                           
  3502                           ;/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt.c: 560:   flag = 0;
  3503  005C  01D4               	clrf	sprintf@flag^(0+128)
  3504                           
  3505                           ;/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt.c: 609:   if(isdigit((unsigned)*
      +                          f)) {
  3506  005D  084A               	movf	sprintf@f^(0+128),w
  3507  005E  0084               	movwf	4
  3508  005F  120A  118A  2700  120A  118A  	fcall	stringdir
  3509  0064  120A  158A  2116  120A  118A  	fcall	_isdigit
  3510  0069  1C03               	btfss	3,0
  3511  006A  28B7               	goto	l3653
  3512                           
  3513                           ;/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt.c: 610:    width = 0;
  3514  006B  1683               	bsf	3,5	;RP0=1, select bank1
  3515  006C  1303               	bcf	3,6	;RP1=0, select bank1
  3516  006D  01D7               	clrf	sprintf@width^(0+128)
  3517  006E  01D8               	clrf	(sprintf@width+1)^(0+128)
  3518  006F                     l3643:	
  3519                           
  3520                           ;/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt.c: 612:     width *= 10;
  3521  006F  300A               	movlw	10
  3522  0070  1283               	bcf	3,5	;RP0=0, select bank0
  3523  0071  1303               	bcf	3,6	;RP1=0, select bank0
  3524  0072  00BD               	movwf	___wmul@multiplier
  3525  0073  3000               	movlw	0
  3526  0074  00BE               	movwf	___wmul@multiplier+1
  3527  0075  1683               	bsf	3,5	;RP0=1, select bank1
  3528  0076  1303               	bcf	3,6	;RP1=0, select bank1
  3529  0077  0858               	movf	(sprintf@width+1)^(0+128),w
  3530  0078  1283               	bcf	3,5	;RP0=0, select bank0
  3531  0079  1303               	bcf	3,6	;RP1=0, select bank0
  3532  007A  00C0               	movwf	___wmul@multiplicand+1
  3533  007B  1683               	bsf	3,5	;RP0=1, select bank1
  3534  007C  1303               	bcf	3,6	;RP1=0, select bank1
  3535  007D  0857               	movf	sprintf@width^(0+128),w
  3536  007E  1283               	bcf	3,5	;RP0=0, select bank0
  3537  007F  1303               	bcf	3,6	;RP1=0, select bank0
  3538  0080  00BF               	movwf	___wmul@multiplicand
  3539  0081  120A  158A  21DD  120A  118A  	fcall	___wmul
  3540  0086  1283               	bcf	3,5	;RP0=0, select bank0
  3541  0087  1303               	bcf	3,6	;RP1=0, select bank0
  3542  0088  083E               	movf	?___wmul+1,w
  3543  0089  1683               	bsf	3,5	;RP0=1, select bank1
  3544  008A  1303               	bcf	3,6	;RP1=0, select bank1
  3545  008B  00D8               	movwf	(sprintf@width+1)^(0+128)
  3546  008C  1283               	bcf	3,5	;RP0=0, select bank0
  3547  008D  1303               	bcf	3,6	;RP1=0, select bank0
  3548  008E  083D               	movf	?___wmul,w
  3549  008F  1683               	bsf	3,5	;RP0=1, select bank1
  3550  0090  1303               	bcf	3,6	;RP1=0, select bank1
  3551  0091  00D7               	movwf	sprintf@width^(0+128)
  3552                           
  3553                           ;/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt.c: 613:        width += *f++ - '
      +                          0';
  3554  0092  084A               	movf	sprintf@f^(0+128),w
  3555  0093  0084               	movwf	4
  3556  0094  120A  118A  2700  120A  118A  	fcall	stringdir
  3557  0099  3ED0               	addlw	208
  3558  009A  00CF               	movwf	??_sprintf^(0+128)
  3559  009B  30FF               	movlw	255
  3560  009C  1803               	skipnc
  3561  009D  3000               	movlw	0
  3562  009E  00D0               	movwf	(??_sprintf^(0+128)+1)
  3563  009F  084F               	movf	??_sprintf^(0+128),w
  3564  00A0  07D7               	addwf	sprintf@width^(0+128),f
  3565  00A1  1803               	skipnc
  3566  00A2  0AD8               	incf	(sprintf@width+1)^(0+128),f
  3567  00A3  0850               	movf	(??_sprintf+1)^(0+128),w
  3568  00A4  07D8               	addwf	(sprintf@width+1)^(0+128),f
  3569  00A5  3001               	movlw	1
  3570  00A6  00CF               	movwf	??_sprintf^(0+128)
  3571  00A7  084F               	movf	??_sprintf^(0+128),w
  3572  00A8  07CA               	addwf	sprintf@f^(0+128),f
  3573                           
  3574                           ;/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt.c: 614:    } while(isdigit((unsi
      +                          gned)*f));
  3575  00A9  084A               	movf	sprintf@f^(0+128),w
  3576  00AA  0084               	movwf	4
  3577  00AB  120A  118A  2700  120A  118A  	fcall	stringdir
  3578  00B0  120A  158A  2116  120A  118A  	fcall	_isdigit
  3579  00B5  1803               	btfsc	3,0
  3580  00B6  286F               	goto	l3643
  3581  00B7                     l3653:	
  3582  00B7  3001               	movlw	1
  3583  00B8  1683               	bsf	3,5	;RP0=1, select bank1
  3584  00B9  1303               	bcf	3,6	;RP1=0, select bank1
  3585  00BA  07CA               	addwf	sprintf@f^(0+128),f
  3586  00BB  30FF               	movlw	-1
  3587  00BC  074A               	addwf	sprintf@f^(0+128),w
  3588  00BD  0084               	movwf	4
  3589  00BE  120A  118A  2700  120A  118A  	fcall	stringdir
  3590  00C3  00DA               	movwf	sprintf@c^(0+128)
  3591  00C4  00CF               	movwf	??_sprintf^(0+128)
  3592  00C5  01D0               	clrf	(??_sprintf^(0+128)+1)
  3593                           
  3594                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3595                           ; Switch size 1, requested type "simple"
  3596                           ; Number of cases is 1, Range of values is 0 to 0
  3597                           ; switch strategies available:
  3598                           ; Name         Instructions Cycles
  3599                           ; simple_byte            4     3 (average)
  3600                           ; direct_byte           11     8 (fixed)
  3601                           ; jumptable            260     6 (fixed)
  3602                           ;	Chosen strategy is simple_byte
  3603  00C6  0850               	movf	(??_sprintf+1)^(0+128),w
  3604  00C7  3A00               	xorlw	0	; case 0
  3605  00C8  1903               	skipnz
  3606  00C9  28CB               	goto	l4089
  3607  00CA  283A               	goto	l3711
  3608  00CB                     l4089:	
  3609                           
  3610                           ; Switch size 1, requested type "simple"
  3611                           ; Number of cases is 3, Range of values is 0 to 105
  3612                           ; switch strategies available:
  3613                           ; Name         Instructions Cycles
  3614                           ; simple_byte           10     6 (average)
  3615                           ; jumptable            260     6 (fixed)
  3616                           ;	Chosen strategy is simple_byte
  3617  00CB  084F               	movf	??_sprintf^(0+128),w
  3618  00CC  3A00               	xorlw	0	; case 0
  3619  00CD  1903               	skipnz
  3620  00CE  29B6               	goto	l3713
  3621  00CF  3A64               	xorlw	100	; case 100
  3622  00D0  1903               	skipnz
  3623  00D1  28D6               	goto	l3655
  3624  00D2  3A0D               	xorlw	13	; case 105
  3625  00D3  1903               	skipnz
  3626  00D4  28D6               	goto	l3655
  3627  00D5  283A               	goto	l3711
  3628  00D6                     l3655:	
  3629                           
  3630                           ;/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt.c: 1272:   {;/opt/microchip/xc8/
      +                          v2.05/pic/sources/c90/common/doprnt.c: 1278:     val = (int)(*(int *)__va_arg((*(int **)
      +                          ap), (int)0));
  3631  00D6  0852               	movf	sprintf@ap^(0+128),w
  3632  00D7  0084               	movwf	4
  3633  00D8  1383               	bcf	3,7	;select IRP bank0
  3634  00D9  0800               	movf	0,w
  3635  00DA  00D5               	movwf	sprintf@val^(0+128)
  3636  00DB  0A84               	incf	4,f
  3637  00DC  0800               	movf	0,w
  3638  00DD  00D6               	movwf	(sprintf@val+1)^(0+128)
  3639  00DE  3002               	movlw	2
  3640  00DF  00CF               	movwf	??_sprintf^(0+128)
  3641  00E0  084F               	movf	??_sprintf^(0+128),w
  3642  00E1  07D2               	addwf	sprintf@ap^(0+128),f
  3643                           
  3644                           ;/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt.c: 1280:    if((int)val < 0) {
  3645  00E2  1FD6               	btfss	(sprintf@val+1)^(0+128),7
  3646  00E3  28ED               	goto	l3665
  3647                           
  3648                           ;/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt.c: 1281:     flag |= 0x03;
  3649  00E4  3003               	movlw	3
  3650  00E5  00CF               	movwf	??_sprintf^(0+128)
  3651  00E6  084F               	movf	??_sprintf^(0+128),w
  3652  00E7  04D4               	iorwf	sprintf@flag^(0+128),f
  3653                           
  3654                           ;/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt.c: 1282:     val = -val;
  3655  00E8  09D5               	comf	sprintf@val^(0+128),f
  3656  00E9  09D6               	comf	(sprintf@val+1)^(0+128),f
  3657  00EA  0AD5               	incf	sprintf@val^(0+128),f
  3658  00EB  1903               	skipnz
  3659  00EC  0AD6               	incf	(sprintf@val+1)^(0+128),f
  3660  00ED                     l3665:	
  3661                           
  3662                           ;/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt.c: 1285:   };/opt/microchip/xc8/
      +                          v2.05/pic/sources/c90/common/doprnt.c: 1324:    for(c = 1 ; c != sizeof dpowers/sizeof d
      +                          powers[0] ; c++)
  3663  00ED  01DA               	clrf	sprintf@c^(0+128)
  3664  00EE  0ADA               	incf	sprintf@c^(0+128),f
  3665  00EF                     l3671:	
  3666                           
  3667                           ;/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt.c: 1325:     if(val < dpowers[c]
      +                          )
  3668  00EF  085A               	movf	sprintf@c^(0+128),w
  3669  00F0  00CF               	movwf	??_sprintf^(0+128)
  3670  00F1  074F               	addwf	??_sprintf^(0+128),w
  3671  00F2  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  3672  00F3  0084               	movwf	4
  3673  00F4  120A  118A  2700  120A  118A  	fcall	stringdir
  3674  00F9  00D0               	movwf	(??_sprintf+1)^(0+128)
  3675  00FA  120A  118A  2700  120A  118A  	fcall	stringdir
  3676  00FF  00D1               	movwf	((??_sprintf+1)^(0+128)+1)
  3677  0100  0851               	movf	(??_sprintf+2)^(0+128),w
  3678  0101  0256               	subwf	(sprintf@val+1)^(0+128),w
  3679  0102  1D03               	skipz
  3680  0103  2906               	goto	u2955
  3681  0104  0850               	movf	(??_sprintf+1)^(0+128),w
  3682  0105  0255               	subwf	sprintf@val^(0+128),w
  3683  0106                     u2955:	
  3684  0106  1C03               	btfss	3,0
  3685  0107  2910               	goto	l3677
  3686  0108  3001               	movlw	1
  3687  0109  00CF               	movwf	??_sprintf^(0+128)
  3688  010A  084F               	movf	??_sprintf^(0+128),w
  3689  010B  07DA               	addwf	sprintf@c^(0+128),f
  3690  010C  3005               	movlw	5
  3691  010D  065A               	xorwf	sprintf@c^(0+128),w
  3692  010E  1D03               	btfss	3,2
  3693  010F  28EF               	goto	l3671
  3694  0110                     l3677:	
  3695                           
  3696                           ;/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt.c: 1364:   if(width && flag & 0x
      +                          03)
  3697  0110  0857               	movf	sprintf@width^(0+128),w
  3698  0111  0458               	iorwf	(sprintf@width+1)^(0+128),w
  3699  0112  1903               	btfsc	3,2
  3700  0113  291E               	goto	l651
  3701  0114  0854               	movf	sprintf@flag^(0+128),w
  3702  0115  3903               	andlw	3
  3703  0116  1903               	btfsc	3,2
  3704  0117  291E               	goto	l651
  3705                           
  3706                           ;/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt.c: 1365:    width--;
  3707  0118  30FF               	movlw	255
  3708  0119  07D7               	addwf	sprintf@width^(0+128),f
  3709  011A  1803               	skipnc
  3710  011B  0AD8               	incf	(sprintf@width+1)^(0+128),f
  3711  011C  30FF               	movlw	255
  3712  011D  07D8               	addwf	(sprintf@width+1)^(0+128),f
  3713  011E                     l651:	
  3714                           
  3715                           ;/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt.c: 1400:   if(width > c)
  3716  011E  0858               	movf	(sprintf@width+1)^(0+128),w
  3717  011F  3A80               	xorlw	128
  3718  0120  3C80               	sublw	128
  3719  0121  1D03               	skipz
  3720  0122  2925               	goto	u2995
  3721  0123  0857               	movf	sprintf@width^(0+128),w
  3722  0124  025A               	subwf	sprintf@c^(0+128),w
  3723  0125                     u2995:	
  3724  0125  1803               	skipnc
  3725  0126  2933               	goto	l3685
  3726                           
  3727                           ;/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt.c: 1401:    width -= c;
  3728  0127  1683               	bsf	3,5	;RP0=1, select bank1
  3729  0128  1303               	bcf	3,6	;RP1=0, select bank1
  3730  0129  085A               	movf	sprintf@c^(0+128),w
  3731  012A  00CF               	movwf	??_sprintf^(0+128)
  3732  012B  01D0               	clrf	(??_sprintf^(0+128)+1)
  3733  012C  084F               	movf	??_sprintf^(0+128),w
  3734  012D  02D7               	subwf	sprintf@width^(0+128),f
  3735  012E  0850               	movf	(??_sprintf+1)^(0+128),w
  3736  012F  1C03               	skipc
  3737  0130  03D8               	decf	(sprintf@width+1)^(0+128),f
  3738  0131  02D8               	subwf	(sprintf@width+1)^(0+128),f
  3739  0132  2937               	goto	l3687
  3740  0133                     l3685:	
  3741                           
  3742                           ;/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt.c: 1403:    width = 0;
  3743  0133  1683               	bsf	3,5	;RP0=1, select bank1
  3744  0134  1303               	bcf	3,6	;RP1=0, select bank1
  3745  0135  01D7               	clrf	sprintf@width^(0+128)
  3746  0136  01D8               	clrf	(sprintf@width+1)^(0+128)
  3747  0137                     l3687:	
  3748                           
  3749                           ;/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt.c: 1441:   {;/opt/microchip/xc8/
      +                          v2.05/pic/sources/c90/common/doprnt.c: 1443:    if(width
  3750  0137  0857               	movf	sprintf@width^(0+128),w
  3751  0138  0458               	iorwf	(sprintf@width+1)^(0+128),w
  3752  0139  1903               	btfsc	3,2
  3753  013A  2950               	goto	l3695
  3754  013B                     l3689:	
  3755                           
  3756                           ;/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt.c: 1449:      ((*sp++ = (' ')));
  3757  013B  3020               	movlw	32
  3758  013C  00CF               	movwf	??_sprintf^(0+128)
  3759  013D  0859               	movf	sprintf@sp^(0+128),w
  3760  013E  0084               	movwf	4
  3761  013F  084F               	movf	??_sprintf^(0+128),w
  3762  0140  1383               	bcf	3,7	;select IRP bank0
  3763  0141  0080               	movwf	0
  3764  0142  3001               	movlw	1
  3765  0143  00CF               	movwf	??_sprintf^(0+128)
  3766  0144  084F               	movf	??_sprintf^(0+128),w
  3767  0145  07D9               	addwf	sprintf@sp^(0+128),f
  3768  0146  30FF               	movlw	255
  3769  0147  07D7               	addwf	sprintf@width^(0+128),f
  3770  0148  1803               	skipnc
  3771  0149  0AD8               	incf	(sprintf@width+1)^(0+128),f
  3772  014A  30FF               	movlw	255
  3773  014B  07D8               	addwf	(sprintf@width+1)^(0+128),f
  3774  014C  0857               	movf	sprintf@width^(0+128),w
  3775  014D  0458               	iorwf	(sprintf@width+1)^(0+128),w
  3776  014E  1D03               	btfss	3,2
  3777  014F  293B               	goto	l3689
  3778  0150                     l3695:	
  3779                           
  3780                           ;/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt.c: 1457:    if(flag & 0x03)
  3781  0150  0854               	movf	sprintf@flag^(0+128),w
  3782  0151  3903               	andlw	3
  3783  0152  1903               	btfsc	3,2
  3784  0153  295F               	goto	l3701
  3785                           
  3786                           ;/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt.c: 1458:     ((*sp++ = ('-')));
  3787  0154  302D               	movlw	45
  3788  0155  00CF               	movwf	??_sprintf^(0+128)
  3789  0156  0859               	movf	sprintf@sp^(0+128),w
  3790  0157  0084               	movwf	4
  3791  0158  084F               	movf	??_sprintf^(0+128),w
  3792  0159  1383               	bcf	3,7	;select IRP bank0
  3793  015A  0080               	movwf	0
  3794  015B  3001               	movlw	1
  3795  015C  00CF               	movwf	??_sprintf^(0+128)
  3796  015D  084F               	movf	??_sprintf^(0+128),w
  3797  015E  07D9               	addwf	sprintf@sp^(0+128),f
  3798  015F                     l3701:	
  3799                           
  3800                           ;/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt.c: 1488:   };/opt/microchip/xc8/
      +                          v2.05/pic/sources/c90/common/doprnt.c: 1491:   prec = c;
  3801  015F  085A               	movf	sprintf@c^(0+128),w
  3802  0160  00CF               	movwf	??_sprintf^(0+128)
  3803  0161  084F               	movf	??_sprintf^(0+128),w
  3804  0162  00D3               	movwf	sprintf@prec^(0+128)
  3805  0163                     l3709:	
  3806                           ;/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt.c: 1493:   while(prec--) {
  3807                           
  3808                           
  3809                           ;/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt.c: 1493:   while(prec--) {
  3810  0163  30FF               	movlw	255
  3811  0164  00CF               	movwf	??_sprintf^(0+128)
  3812  0165  084F               	movf	??_sprintf^(0+128),w
  3813  0166  07D3               	addwf	sprintf@prec^(0+128),f
  3814  0167  0A53               	incf	sprintf@prec^(0+128),w
  3815  0168  1903               	btfsc	3,2
  3816  0169  283A               	goto	l3711
  3817                           
  3818                           ;/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt.c: 1497:    {;/opt/microchip/xc8
      +                          /v2.05/pic/sources/c90/common/doprnt.c: 1508:     c = (val / dpowers[prec]) % 10 + '0';
  3819  016A  300A               	movlw	10
  3820  016B  00C6               	movwf	___lwmod@divisor^(0+128)
  3821  016C  3000               	movlw	0
  3822  016D  00C7               	movwf	(___lwmod@divisor^(0+128)+1)
  3823  016E  0853               	movf	sprintf@prec^(0+128),w
  3824  016F  00CF               	movwf	??_sprintf^(0+128)
  3825  0170  074F               	addwf	??_sprintf^(0+128),w
  3826  0171  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  3827  0172  0084               	movwf	4
  3828  0173  120A  118A  2700  120A  118A  	fcall	stringdir
  3829  0178  1283               	bcf	3,5	;RP0=0, select bank0
  3830  0179  1303               	bcf	3,6	;RP1=0, select bank0
  3831  017A  00BD               	movwf	___lwdiv@divisor
  3832  017B  120A  118A  2700  120A  118A  	fcall	stringdir
  3833  0180  00BE               	movwf	___lwdiv@divisor+1
  3834  0181  1683               	bsf	3,5	;RP0=1, select bank1
  3835  0182  1303               	bcf	3,6	;RP1=0, select bank1
  3836  0183  0856               	movf	(sprintf@val+1)^(0+128),w
  3837  0184  1283               	bcf	3,5	;RP0=0, select bank0
  3838  0185  1303               	bcf	3,6	;RP1=0, select bank0
  3839  0186  00C0               	movwf	___lwdiv@dividend+1
  3840  0187  1683               	bsf	3,5	;RP0=1, select bank1
  3841  0188  1303               	bcf	3,6	;RP1=0, select bank1
  3842  0189  0855               	movf	sprintf@val^(0+128),w
  3843  018A  1283               	bcf	3,5	;RP0=0, select bank0
  3844  018B  1303               	bcf	3,6	;RP1=0, select bank0
  3845  018C  00BF               	movwf	___lwdiv@dividend
  3846  018D  120A  158A  25EF  120A  118A  	fcall	___lwdiv
  3847  0192  1283               	bcf	3,5	;RP0=0, select bank0
  3848  0193  1303               	bcf	3,6	;RP1=0, select bank0
  3849  0194  083E               	movf	?___lwdiv+1,w
  3850  0195  1683               	bsf	3,5	;RP0=1, select bank1
  3851  0196  1303               	bcf	3,6	;RP1=0, select bank1
  3852  0197  00C9               	movwf	(___lwmod@dividend+1)^(0+128)
  3853  0198  1283               	bcf	3,5	;RP0=0, select bank0
  3854  0199  1303               	bcf	3,6	;RP1=0, select bank0
  3855  019A  083D               	movf	?___lwdiv,w
  3856  019B  1683               	bsf	3,5	;RP0=1, select bank1
  3857  019C  1303               	bcf	3,6	;RP1=0, select bank1
  3858  019D  00C8               	movwf	___lwmod@dividend^(0+128)
  3859  019E  120A  158A  2341  120A  118A  	fcall	___lwmod
  3860  01A3  1683               	bsf	3,5	;RP0=1, select bank1
  3861  01A4  1303               	bcf	3,6	;RP1=0, select bank1
  3862  01A5  0846               	movf	?___lwmod^(0+128),w
  3863  01A6  3E30               	addlw	48
  3864  01A7  00D0               	movwf	(??_sprintf+1)^(0+128)
  3865  01A8  0850               	movf	(??_sprintf+1)^(0+128),w
  3866  01A9  00DA               	movwf	sprintf@c^(0+128)
  3867                           
  3868                           ;/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt.c: 1542:    };/opt/microchip/xc8
      +                          /v2.05/pic/sources/c90/common/doprnt.c: 1543:    ((*sp++ = (c)));
  3869  01AA  085A               	movf	sprintf@c^(0+128),w
  3870  01AB  00CF               	movwf	??_sprintf^(0+128)
  3871  01AC  0859               	movf	sprintf@sp^(0+128),w
  3872  01AD  0084               	movwf	4
  3873  01AE  084F               	movf	??_sprintf^(0+128),w
  3874  01AF  1383               	bcf	3,7	;select IRP bank0
  3875  01B0  0080               	movwf	0
  3876  01B1  3001               	movlw	1
  3877  01B2  00CF               	movwf	??_sprintf^(0+128)
  3878  01B3  084F               	movf	??_sprintf^(0+128),w
  3879  01B4  07D9               	addwf	sprintf@sp^(0+128),f
  3880  01B5  2963               	goto	l3709
  3881  01B6                     l3713:	
  3882                           
  3883                           ;/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt.c: 1557:  *sp = 0;
  3884  01B6  0859               	movf	sprintf@sp^(0+128),w
  3885  01B7  0084               	movwf	4
  3886  01B8  1383               	bcf	3,7	;select IRP bank0
  3887  01B9  0180               	clrf	0
  3888  01BA  0008               	return
  3889  01BB                     __end_of_sprintf:	
  3890                           
  3891                           	psect	text11
  3892  0916                     __ptext11:	
  3893 ;; *************** function _isdigit *****************
  3894 ;; Defined at:
  3895 ;;		line 8 in file "/opt/microchip/xc8/v2.05/pic/sources/c90/common/isdigit.c"
  3896 ;; Parameters:    Size  Location     Type
  3897 ;;  c               1    wreg     unsigned char 
  3898 ;; Auto vars:     Size  Location     Type
  3899 ;;  c               1   30[BANK0 ] unsigned char 
  3900 ;; Return value:  Size  Location     Type
  3901 ;;		None               void
  3902 ;; Registers used:
  3903 ;;		wreg, status,2, status,0
  3904 ;; Tracked objects:
  3905 ;;		On entry : 0/0
  3906 ;;		On exit  : 0/0
  3907 ;;		Unchanged: 0/0
  3908 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3909 ;;      Params:         0       0       0       0       0
  3910 ;;      Locals:         0       2       0       0       0
  3911 ;;      Temps:          0       0       0       0       0
  3912 ;;      Totals:         0       2       0       0       0
  3913 ;;Total ram usage:        2 bytes
  3914 ;; Hardware stack levels used:    1
  3915 ;; Hardware stack levels required when called:    5
  3916 ;; This function calls:
  3917 ;;		Nothing
  3918 ;; This function is called by:
  3919 ;;		_sprintf
  3920 ;; This function uses a non-reentrant model
  3921 ;;
  3922                           
  3923                           
  3924                           ;psect for function _isdigit
  3925  0916                     _isdigit:	
  3926                           
  3927                           ;incstack = 0
  3928                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  3929                           ;isdigit@c stored from wreg
  3930  0916  1283               	bcf	3,5	;RP0=0, select bank0
  3931  0917  1303               	bcf	3,6	;RP1=0, select bank0
  3932  0918  00BE               	movwf	isdigit@c
  3933  0919  01BD               	clrf	_isdigit$1104
  3934  091A  303A               	movlw	58
  3935  091B  023E               	subwf	isdigit@c,w
  3936  091C  1803               	skipnc
  3937  091D  2924               	goto	l2455
  3938  091E  3030               	movlw	48
  3939  091F  023E               	subwf	isdigit@c,w
  3940  0920  1C03               	skipc
  3941  0921  2924               	goto	l2455
  3942  0922  01BD               	clrf	_isdigit$1104
  3943  0923  0ABD               	incf	_isdigit$1104,f
  3944  0924                     l2455:	
  3945  0924  0C3D               	rrf	_isdigit$1104,w
  3946  0925  0008               	return
  3947  0926                     __end_of_isdigit:	
  3948                           
  3949                           	psect	text12
  3950  09DD                     __ptext12:	
  3951 ;; *************** function ___wmul *****************
  3952 ;; Defined at:
  3953 ;;		line 15 in file "/opt/microchip/xc8/v2.05/pic/sources/c90/common/Umul16.c"
  3954 ;; Parameters:    Size  Location     Type
  3955 ;;  multiplier      2   29[BANK0 ] unsigned int 
  3956 ;;  multiplicand    2   31[BANK0 ] unsigned int 
  3957 ;; Auto vars:     Size  Location     Type
  3958 ;;  product         2   33[BANK0 ] unsigned int 
  3959 ;; Return value:  Size  Location     Type
  3960 ;;                  2   29[BANK0 ] unsigned int 
  3961 ;; Registers used:
  3962 ;;		wreg, status,2, status,0
  3963 ;; Tracked objects:
  3964 ;;		On entry : 0/0
  3965 ;;		On exit  : 0/0
  3966 ;;		Unchanged: 0/0
  3967 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3968 ;;      Params:         0       4       0       0       0
  3969 ;;      Locals:         0       2       0       0       0
  3970 ;;      Temps:          0       0       0       0       0
  3971 ;;      Totals:         0       6       0       0       0
  3972 ;;Total ram usage:        6 bytes
  3973 ;; Hardware stack levels used:    1
  3974 ;; Hardware stack levels required when called:    5
  3975 ;; This function calls:
  3976 ;;		Nothing
  3977 ;; This function is called by:
  3978 ;;		_beep
  3979 ;;		_sprintf
  3980 ;; This function uses a non-reentrant model
  3981 ;;
  3982                           
  3983                           
  3984                           ;psect for function ___wmul
  3985  09DD                     ___wmul:	
  3986                           
  3987                           ;incstack = 0
  3988                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  3989  09DD  1283               	bcf	3,5	;RP0=0, select bank0
  3990  09DE  1303               	bcf	3,6	;RP1=0, select bank0
  3991  09DF  01C1               	clrf	___wmul@product
  3992  09E0  01C2               	clrf	___wmul@product+1
  3993  09E1                     l3557:	
  3994  09E1  1C3D               	btfss	___wmul@multiplier,0
  3995  09E2  29E9               	goto	l666
  3996  09E3  083F               	movf	___wmul@multiplicand,w
  3997  09E4  07C1               	addwf	___wmul@product,f
  3998  09E5  1803               	skipnc
  3999  09E6  0AC2               	incf	___wmul@product+1,f
  4000  09E7  0840               	movf	___wmul@multiplicand+1,w
  4001  09E8  07C2               	addwf	___wmul@product+1,f
  4002  09E9                     l666:	
  4003  09E9  3001               	movlw	1
  4004  09EA                     u2745:	
  4005  09EA  1003               	clrc
  4006  09EB  0DBF               	rlf	___wmul@multiplicand,f
  4007  09EC  0DC0               	rlf	___wmul@multiplicand+1,f
  4008  09ED  3EFF               	addlw	-1
  4009  09EE  1D03               	skipz
  4010  09EF  29EA               	goto	u2745
  4011  09F0  3001               	movlw	1
  4012  09F1                     u2755:	
  4013  09F1  1003               	clrc
  4014  09F2  0CBE               	rrf	___wmul@multiplier+1,f
  4015  09F3  0CBD               	rrf	___wmul@multiplier,f
  4016  09F4  3EFF               	addlw	-1
  4017  09F5  1D03               	skipz
  4018  09F6  29F1               	goto	u2755
  4019  09F7  083D               	movf	___wmul@multiplier,w
  4020  09F8  043E               	iorwf	___wmul@multiplier+1,w
  4021  09F9  1D03               	btfss	3,2
  4022  09FA  29E1               	goto	l3557
  4023  09FB  0842               	movf	___wmul@product+1,w
  4024  09FC  00BE               	movwf	?___wmul+1
  4025  09FD  0841               	movf	___wmul@product,w
  4026  09FE  00BD               	movwf	?___wmul
  4027  09FF  0008               	return
  4028  0A00                     __end_of___wmul:	
  4029                           
  4030                           	psect	text13
  4031  0B41                     __ptext13:	
  4032 ;; *************** function ___lwmod *****************
  4033 ;; Defined at:
  4034 ;;		line 5 in file "/opt/microchip/xc8/v2.05/pic/sources/c90/common/lwmod.c"
  4035 ;; Parameters:    Size  Location     Type
  4036 ;;  divisor         2    3[BANK1 ] unsigned int 
  4037 ;;  dividend        2    5[BANK1 ] unsigned int 
  4038 ;; Auto vars:     Size  Location     Type
  4039 ;;  counter         1   35[BANK0 ] unsigned char 
  4040 ;; Return value:  Size  Location     Type
  4041 ;;                  2    3[BANK1 ] unsigned int 
  4042 ;; Registers used:
  4043 ;;		wreg, status,2, status,0
  4044 ;; Tracked objects:
  4045 ;;		On entry : 0/0
  4046 ;;		On exit  : 0/0
  4047 ;;		Unchanged: 0/0
  4048 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4049 ;;      Params:         0       0       4       0       0
  4050 ;;      Locals:         0       1       0       0       0
  4051 ;;      Temps:          0       1       0       0       0
  4052 ;;      Totals:         0       2       4       0       0
  4053 ;;Total ram usage:        6 bytes
  4054 ;; Hardware stack levels used:    1
  4055 ;; Hardware stack levels required when called:    5
  4056 ;; This function calls:
  4057 ;;		Nothing
  4058 ;; This function is called by:
  4059 ;;		_principalScreen
  4060 ;;		_sprintf
  4061 ;; This function uses a non-reentrant model
  4062 ;;
  4063                           
  4064                           
  4065                           ;psect for function ___lwmod
  4066  0B41                     ___lwmod:	
  4067                           
  4068                           ;incstack = 0
  4069                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  4070  0B41  1683               	bsf	3,5	;RP0=1, select bank1
  4071  0B42  1303               	bcf	3,6	;RP1=0, select bank1
  4072  0B43  0846               	movf	___lwmod@divisor^(0+128),w
  4073  0B44  0447               	iorwf	(___lwmod@divisor+1)^(0+128),w
  4074  0B45  1903               	btfsc	3,2
  4075  0B46  2B7A               	goto	l3613
  4076  0B47  1283               	bcf	3,5	;RP0=0, select bank0
  4077  0B48  1303               	bcf	3,6	;RP1=0, select bank0
  4078  0B49  01C3               	clrf	___lwmod@counter
  4079  0B4A  0AC3               	incf	___lwmod@counter,f
  4080  0B4B                     l3603:	
  4081  0B4B  1683               	bsf	3,5	;RP0=1, select bank1
  4082  0B4C  1303               	bcf	3,6	;RP1=0, select bank1
  4083  0B4D  1BC7               	btfsc	(___lwmod@divisor+1)^(0+128),7
  4084  0B4E  2B5D               	goto	l3605
  4085  0B4F  3001               	movlw	1
  4086  0B50                     u2855:	
  4087  0B50  1003               	clrc
  4088  0B51  0DC6               	rlf	___lwmod@divisor^(0+128),f
  4089  0B52  0DC7               	rlf	(___lwmod@divisor+1)^(0+128),f
  4090  0B53  3EFF               	addlw	-1
  4091  0B54  1D03               	skipz
  4092  0B55  2B50               	goto	u2855
  4093  0B56  3001               	movlw	1
  4094  0B57  1283               	bcf	3,5	;RP0=0, select bank0
  4095  0B58  1303               	bcf	3,6	;RP1=0, select bank0
  4096  0B59  00C2               	movwf	??___lwmod
  4097  0B5A  0842               	movf	??___lwmod,w
  4098  0B5B  07C3               	addwf	___lwmod@counter,f
  4099  0B5C  2B4B               	goto	l3603
  4100  0B5D                     l3605:	
  4101  0B5D  1683               	bsf	3,5	;RP0=1, select bank1
  4102  0B5E  1303               	bcf	3,6	;RP1=0, select bank1
  4103  0B5F  0847               	movf	(___lwmod@divisor+1)^(0+128),w
  4104  0B60  0249               	subwf	(___lwmod@dividend+1)^(0+128),w
  4105  0B61  1D03               	skipz
  4106  0B62  2B65               	goto	u2875
  4107  0B63  0846               	movf	___lwmod@divisor^(0+128),w
  4108  0B64  0248               	subwf	___lwmod@dividend^(0+128),w
  4109  0B65                     u2875:	
  4110  0B65  1C03               	skipc
  4111  0B66  2B6D               	goto	l3609
  4112  0B67  0846               	movf	___lwmod@divisor^(0+128),w
  4113  0B68  02C8               	subwf	___lwmod@dividend^(0+128),f
  4114  0B69  0847               	movf	(___lwmod@divisor+1)^(0+128),w
  4115  0B6A  1C03               	skipc
  4116  0B6B  03C9               	decf	(___lwmod@dividend+1)^(0+128),f
  4117  0B6C  02C9               	subwf	(___lwmod@dividend+1)^(0+128),f
  4118  0B6D                     l3609:	
  4119  0B6D  3001               	movlw	1
  4120  0B6E                     u2885:	
  4121  0B6E  1003               	clrc
  4122  0B6F  0CC7               	rrf	(___lwmod@divisor+1)^(0+128),f
  4123  0B70  0CC6               	rrf	___lwmod@divisor^(0+128),f
  4124  0B71  3EFF               	addlw	-1
  4125  0B72  1D03               	skipz
  4126  0B73  2B6E               	goto	u2885
  4127  0B74  3001               	movlw	1
  4128  0B75  1283               	bcf	3,5	;RP0=0, select bank0
  4129  0B76  1303               	bcf	3,6	;RP1=0, select bank0
  4130  0B77  02C3               	subwf	___lwmod@counter,f
  4131  0B78  1D03               	btfss	3,2
  4132  0B79  2B5D               	goto	l3605
  4133  0B7A                     l3613:	
  4134  0B7A  1683               	bsf	3,5	;RP0=1, select bank1
  4135  0B7B  1303               	bcf	3,6	;RP1=0, select bank1
  4136  0B7C  0849               	movf	(___lwmod@dividend+1)^(0+128),w
  4137  0B7D  00C7               	movwf	(?___lwmod+1)^(0+128)
  4138  0B7E  0848               	movf	___lwmod@dividend^(0+128),w
  4139  0B7F  00C6               	movwf	?___lwmod^(0+128)
  4140  0B80  0008               	return
  4141  0B81                     __end_of___lwmod:	
  4142                           
  4143                           	psect	text14
  4144  0DEF                     __ptext14:	
  4145 ;; *************** function ___lwdiv *****************
  4146 ;; Defined at:
  4147 ;;		line 5 in file "/opt/microchip/xc8/v2.05/pic/sources/c90/common/lwdiv.c"
  4148 ;; Parameters:    Size  Location     Type
  4149 ;;  divisor         2   29[BANK0 ] unsigned int 
  4150 ;;  dividend        2   31[BANK0 ] unsigned int 
  4151 ;; Auto vars:     Size  Location     Type
  4152 ;;  quotient        2    1[BANK1 ] unsigned int 
  4153 ;;  counter         1    0[BANK1 ] unsigned char 
  4154 ;; Return value:  Size  Location     Type
  4155 ;;                  2   29[BANK0 ] unsigned int 
  4156 ;; Registers used:
  4157 ;;		wreg, status,2, status,0
  4158 ;; Tracked objects:
  4159 ;;		On entry : 0/0
  4160 ;;		On exit  : 0/0
  4161 ;;		Unchanged: 0/0
  4162 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4163 ;;      Params:         0       4       0       0       0
  4164 ;;      Locals:         0       0       3       0       0
  4165 ;;      Temps:          0       1       0       0       0
  4166 ;;      Totals:         0       5       3       0       0
  4167 ;;Total ram usage:        8 bytes
  4168 ;; Hardware stack levels used:    1
  4169 ;; Hardware stack levels required when called:    5
  4170 ;; This function calls:
  4171 ;;		Nothing
  4172 ;; This function is called by:
  4173 ;;		_principalScreen
  4174 ;;		_sprintf
  4175 ;; This function uses a non-reentrant model
  4176 ;;
  4177                           
  4178                           
  4179                           ;psect for function ___lwdiv
  4180  0DEF                     ___lwdiv:	
  4181                           
  4182                           ;incstack = 0
  4183                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  4184  0DEF  1683               	bsf	3,5	;RP0=1, select bank1
  4185  0DF0  1303               	bcf	3,6	;RP1=0, select bank1
  4186  0DF1  01C4               	clrf	___lwdiv@quotient^(0+128)
  4187  0DF2  01C5               	clrf	(___lwdiv@quotient+1)^(0+128)
  4188  0DF3  1283               	bcf	3,5	;RP0=0, select bank0
  4189  0DF4  1303               	bcf	3,6	;RP1=0, select bank0
  4190  0DF5  083D               	movf	___lwdiv@divisor,w
  4191  0DF6  043E               	iorwf	___lwdiv@divisor+1,w
  4192  0DF7  1903               	btfsc	3,2
  4193  0DF8  2E39               	goto	l3591
  4194  0DF9  1683               	bsf	3,5	;RP0=1, select bank1
  4195  0DFA  1303               	bcf	3,6	;RP1=0, select bank1
  4196  0DFB  01C3               	clrf	___lwdiv@counter^(0+128)
  4197  0DFC  0AC3               	incf	___lwdiv@counter^(0+128),f
  4198  0DFD                     l3579:	
  4199  0DFD  1283               	bcf	3,5	;RP0=0, select bank0
  4200  0DFE  1303               	bcf	3,6	;RP1=0, select bank0
  4201  0DFF  1BBE               	btfsc	___lwdiv@divisor+1,7
  4202  0E00  2E0F               	goto	l3581
  4203  0E01  3001               	movlw	1
  4204  0E02                     u2785:	
  4205  0E02  1003               	clrc
  4206  0E03  0DBD               	rlf	___lwdiv@divisor,f
  4207  0E04  0DBE               	rlf	___lwdiv@divisor+1,f
  4208  0E05  3EFF               	addlw	-1
  4209  0E06  1D03               	skipz
  4210  0E07  2E02               	goto	u2785
  4211  0E08  3001               	movlw	1
  4212  0E09  00C1               	movwf	??___lwdiv
  4213  0E0A  0841               	movf	??___lwdiv,w
  4214  0E0B  1683               	bsf	3,5	;RP0=1, select bank1
  4215  0E0C  1303               	bcf	3,6	;RP1=0, select bank1
  4216  0E0D  07C3               	addwf	___lwdiv@counter^(0+128),f
  4217  0E0E  2DFD               	goto	l3579
  4218  0E0F                     l3581:	
  4219  0E0F  3001               	movlw	1
  4220  0E10  1683               	bsf	3,5	;RP0=1, select bank1
  4221  0E11  1303               	bcf	3,6	;RP1=0, select bank1
  4222  0E12                     u2805:	
  4223  0E12  1003               	clrc
  4224  0E13  0DC4               	rlf	___lwdiv@quotient^(0+128),f
  4225  0E14  0DC5               	rlf	(___lwdiv@quotient+1)^(0+128),f
  4226  0E15  3EFF               	addlw	-1
  4227  0E16  1D03               	skipz
  4228  0E17  2E12               	goto	u2805
  4229  0E18  1283               	bcf	3,5	;RP0=0, select bank0
  4230  0E19  1303               	bcf	3,6	;RP1=0, select bank0
  4231  0E1A  083E               	movf	___lwdiv@divisor+1,w
  4232  0E1B  0240               	subwf	___lwdiv@dividend+1,w
  4233  0E1C  1D03               	skipz
  4234  0E1D  2E20               	goto	u2815
  4235  0E1E  083D               	movf	___lwdiv@divisor,w
  4236  0E1F  023F               	subwf	___lwdiv@dividend,w
  4237  0E20                     u2815:	
  4238  0E20  1C03               	skipc
  4239  0E21  2E2B               	goto	l3587
  4240  0E22  083D               	movf	___lwdiv@divisor,w
  4241  0E23  02BF               	subwf	___lwdiv@dividend,f
  4242  0E24  083E               	movf	___lwdiv@divisor+1,w
  4243  0E25  1C03               	skipc
  4244  0E26  03C0               	decf	___lwdiv@dividend+1,f
  4245  0E27  02C0               	subwf	___lwdiv@dividend+1,f
  4246  0E28  1683               	bsf	3,5	;RP0=1, select bank1
  4247  0E29  1303               	bcf	3,6	;RP1=0, select bank1
  4248  0E2A  1444               	bsf	___lwdiv@quotient^(0+128),0
  4249  0E2B                     l3587:	
  4250  0E2B  3001               	movlw	1
  4251  0E2C  1283               	bcf	3,5	;RP0=0, select bank0
  4252  0E2D                     u2825:	
  4253  0E2D  1003               	clrc
  4254  0E2E  0CBE               	rrf	___lwdiv@divisor+1,f
  4255  0E2F  0CBD               	rrf	___lwdiv@divisor,f
  4256  0E30  3EFF               	addlw	-1
  4257  0E31  1D03               	skipz
  4258  0E32  2E2D               	goto	u2825
  4259  0E33  3001               	movlw	1
  4260  0E34  1683               	bsf	3,5	;RP0=1, select bank1
  4261  0E35  1303               	bcf	3,6	;RP1=0, select bank1
  4262  0E36  02C3               	subwf	___lwdiv@counter^(0+128),f
  4263  0E37  1D03               	btfss	3,2
  4264  0E38  2E0F               	goto	l3581
  4265  0E39                     l3591:	
  4266  0E39  1683               	bsf	3,5	;RP0=1, select bank1
  4267  0E3A  1303               	bcf	3,6	;RP1=0, select bank1
  4268  0E3B  0845               	movf	(___lwdiv@quotient+1)^(0+128),w
  4269  0E3C  1283               	bcf	3,5	;RP0=0, select bank0
  4270  0E3D  1303               	bcf	3,6	;RP1=0, select bank0
  4271  0E3E  00BE               	movwf	?___lwdiv+1
  4272  0E3F  1683               	bsf	3,5	;RP0=1, select bank1
  4273  0E40  1303               	bcf	3,6	;RP1=0, select bank1
  4274  0E41  0844               	movf	___lwdiv@quotient^(0+128),w
  4275  0E42  1283               	bcf	3,5	;RP0=0, select bank0
  4276  0E43  1303               	bcf	3,6	;RP1=0, select bank0
  4277  0E44  00BD               	movwf	?___lwdiv
  4278  0E45  0008               	return
  4279  0E46                     __end_of___lwdiv:	
  4280                           
  4281                           	psect	text15
  4282  09BA                     __ptext15:	
  4283 ;; *************** function _putsXLCD *****************
  4284 ;; Defined at:
  4285 ;;		line 419 in file "lcd_pic16.c"
  4286 ;; Parameters:    Size  Location     Type
  4287 ;;  buffer          1    wreg     PTR unsigned char 
  4288 ;;		 -> lineTwo(17), lineOne(17), 
  4289 ;; Auto vars:     Size  Location     Type
  4290 ;;  buffer          1   34[BANK0 ] PTR unsigned char 
  4291 ;;		 -> lineTwo(17), lineOne(17), 
  4292 ;; Return value:  Size  Location     Type
  4293 ;;                  1    wreg      void 
  4294 ;; Registers used:
  4295 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4296 ;; Tracked objects:
  4297 ;;		On entry : 0/0
  4298 ;;		On exit  : 0/0
  4299 ;;		Unchanged: 0/0
  4300 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4301 ;;      Params:         0       0       0       0       0
  4302 ;;      Locals:         0       1       0       0       0
  4303 ;;      Temps:          0       1       0       0       0
  4304 ;;      Totals:         0       2       0       0       0
  4305 ;;Total ram usage:        2 bytes
  4306 ;; Hardware stack levels used:    1
  4307 ;; Hardware stack levels required when called:    7
  4308 ;; This function calls:
  4309 ;;		_BusyXLCD
  4310 ;;		_WriteDataXLCD
  4311 ;; This function is called by:
  4312 ;;		_start
  4313 ;;		_setFrequency
  4314 ;;		_principalScreen
  4315 ;;		_lockingScreen
  4316 ;; This function uses a non-reentrant model
  4317 ;;
  4318                           
  4319                           
  4320                           ;psect for function _putsXLCD
  4321  09BA                     _putsXLCD:	
  4322                           
  4323                           ;incstack = 0
  4324 ;; hardware stack exceeded
  4325                           ; Regs used in _putsXLCD: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4326                           ;putsXLCD@buffer stored from wreg
  4327  09BA  1283               	bcf	3,5	;RP0=0, select bank0
  4328  09BB  1303               	bcf	3,6	;RP1=0, select bank0
  4329  09BC  00C2               	movwf	putsXLCD@buffer
  4330  09BD                     l2647:	
  4331                           ;lcd_pic16.c: 419: void putsXLCD(char *buffer);lcd_pic16.c: 420: {;lcd_pic16.c: 421:    
      +                               while(*buffer)
  4332                           
  4333                           
  4334                           ;lcd_pic16.c: 421:         while(*buffer)
  4335  09BD  0842               	movf	putsXLCD@buffer,w
  4336  09BE  0084               	movwf	4
  4337  09BF  1383               	bcf	3,7	;select IRP bank0
  4338  09C0  0800               	movf	0,w
  4339  09C1  1903               	btfsc	3,2
  4340  09C2  0008               	return
  4341  09C3                     l2641:	
  4342  09C3  120A  158A  20DF  120A  158A  	fcall	_BusyXLCD
  4343  09C8  3A00               	xorlw	0
  4344  09C9  1D03               	skipz
  4345  09CA  29C3               	goto	l2641
  4346                           
  4347                           ;lcd_pic16.c: 424:                 WriteDataXLCD(*buffer);
  4348  09CB  1283               	bcf	3,5	;RP0=0, select bank0
  4349  09CC  1303               	bcf	3,6	;RP1=0, select bank0
  4350  09CD  0842               	movf	putsXLCD@buffer,w
  4351  09CE  0084               	movwf	4
  4352  09CF  1383               	bcf	3,7	;select IRP bank0
  4353  09D0  0800               	movf	0,w
  4354  09D1  120A  158A  24F8  120A  158A  	fcall	_WriteDataXLCD
  4355                           
  4356                           ;lcd_pic16.c: 425:                 buffer++;
  4357  09D6  3001               	movlw	1
  4358  09D7  1283               	bcf	3,5	;RP0=0, select bank0
  4359  09D8  1303               	bcf	3,6	;RP1=0, select bank0
  4360  09D9  00C1               	movwf	??_putsXLCD
  4361  09DA  0841               	movf	??_putsXLCD,w
  4362  09DB  07C2               	addwf	putsXLCD@buffer,f
  4363  09DC  29BD               	goto	l2647
  4364  09DD                     __end_of_putsXLCD:	
  4365                           
  4366                           	psect	text16
  4367  0A4C                     __ptext16:	
  4368 ;; *************** function _putrsXLCD *****************
  4369 ;; Defined at:
  4370 ;;		line 435 in file "lcd_pic16.c"
  4371 ;; Parameters:    Size  Location     Type
  4372 ;;  buffer          1    wreg     PTR const unsigned char 
  4373 ;;		 -> STR_8(17), 
  4374 ;; Auto vars:     Size  Location     Type
  4375 ;;  buffer          1   34[BANK0 ] PTR const unsigned char 
  4376 ;;		 -> STR_8(17), 
  4377 ;; Return value:  Size  Location     Type
  4378 ;;                  1    wreg      void 
  4379 ;; Registers used:
  4380 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4381 ;; Tracked objects:
  4382 ;;		On entry : 0/0
  4383 ;;		On exit  : 0/0
  4384 ;;		Unchanged: 0/0
  4385 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4386 ;;      Params:         0       0       0       0       0
  4387 ;;      Locals:         0       1       0       0       0
  4388 ;;      Temps:          0       1       0       0       0
  4389 ;;      Totals:         0       2       0       0       0
  4390 ;;Total ram usage:        2 bytes
  4391 ;; Hardware stack levels used:    1
  4392 ;; Hardware stack levels required when called:    7
  4393 ;; This function calls:
  4394 ;;		_BusyXLCD
  4395 ;;		_WriteDataXLCD
  4396 ;; This function is called by:
  4397 ;;		_principalScreen
  4398 ;; This function uses a non-reentrant model
  4399 ;;
  4400                           
  4401                           
  4402                           ;psect for function _putrsXLCD
  4403  0A4C                     _putrsXLCD:	
  4404                           
  4405                           ;incstack = 0
  4406 ;; hardware stack exceeded
  4407                           ; Regs used in _putrsXLCD: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4408                           ;putrsXLCD@buffer stored from wreg
  4409  0A4C  1283               	bcf	3,5	;RP0=0, select bank0
  4410  0A4D  1303               	bcf	3,6	;RP1=0, select bank0
  4411  0A4E  00C2               	movwf	putrsXLCD@buffer
  4412  0A4F                     l2961:	
  4413                           ;lcd_pic16.c: 435: void putrsXLCD(const char *buffer);lcd_pic16.c: 436: {;lcd_pic16.c: 4
      +                          37:         while(*buffer)
  4414                           
  4415                           
  4416                           ;lcd_pic16.c: 437:         while(*buffer)
  4417  0A4F  0842               	movf	putrsXLCD@buffer,w
  4418  0A50  0084               	movwf	4
  4419  0A51  120A  118A  2700  120A  158A  	fcall	stringdir
  4420  0A56  3A00               	xorlw	0
  4421  0A57  1903               	btfsc	3,2
  4422  0A58  0008               	return
  4423  0A59                     l2955:	
  4424  0A59  120A  158A  20DF  120A  158A  	fcall	_BusyXLCD
  4425  0A5E  3A00               	xorlw	0
  4426  0A5F  1D03               	skipz
  4427  0A60  2A59               	goto	l2955
  4428                           
  4429                           ;lcd_pic16.c: 440:                 WriteDataXLCD(*buffer);
  4430  0A61  1283               	bcf	3,5	;RP0=0, select bank0
  4431  0A62  1303               	bcf	3,6	;RP1=0, select bank0
  4432  0A63  0842               	movf	putrsXLCD@buffer,w
  4433  0A64  0084               	movwf	4
  4434  0A65  120A  118A  2700  120A  158A  	fcall	stringdir
  4435  0A6A  120A  158A  24F8  120A  158A  	fcall	_WriteDataXLCD
  4436                           
  4437                           ;lcd_pic16.c: 441:                 buffer++;
  4438  0A6F  3001               	movlw	1
  4439  0A70  1283               	bcf	3,5	;RP0=0, select bank0
  4440  0A71  1303               	bcf	3,6	;RP1=0, select bank0
  4441  0A72  00C1               	movwf	??_putrsXLCD
  4442  0A73  0841               	movf	??_putrsXLCD,w
  4443  0A74  07C2               	addwf	putrsXLCD@buffer,f
  4444  0A75  2A4F               	goto	l2961
  4445  0A76                     __end_of_putrsXLCD:	
  4446                           
  4447                           	psect	text17
  4448  0CF8                     __ptext17:	
  4449 ;; *************** function _WriteDataXLCD *****************
  4450 ;; Defined at:
  4451 ;;		line 110 in file "lcd_pic16.c"
  4452 ;; Parameters:    Size  Location     Type
  4453 ;;  data            1    wreg     unsigned char 
  4454 ;; Auto vars:     Size  Location     Type
  4455 ;;  data            1   32[BANK0 ] unsigned char 
  4456 ;; Return value:  Size  Location     Type
  4457 ;;                  1    wreg      void 
  4458 ;; Registers used:
  4459 ;;		wreg, status,2, status,0, pclath, cstack
  4460 ;; Tracked objects:
  4461 ;;		On entry : 0/0
  4462 ;;		On exit  : 0/0
  4463 ;;		Unchanged: 0/0
  4464 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4465 ;;      Params:         0       0       0       0       0
  4466 ;;      Locals:         0       1       0       0       0
  4467 ;;      Temps:          0       2       0       0       0
  4468 ;;      Totals:         0       3       0       0       0
  4469 ;;Total ram usage:        3 bytes
  4470 ;; Hardware stack levels used:    1
  4471 ;; Hardware stack levels required when called:    6
  4472 ;; This function calls:
  4473 ;;		_DelayFor18TCY
  4474 ;; This function is called by:
  4475 ;;		_putsXLCD
  4476 ;;		_putrsXLCD
  4477 ;; This function uses a non-reentrant model
  4478 ;;
  4479                           
  4480                           
  4481                           ;psect for function _WriteDataXLCD
  4482  0CF8                     _WriteDataXLCD:	
  4483                           
  4484                           ;incstack = 0
  4485 ;; hardware stack exceeded
  4486                           ; Regs used in _WriteDataXLCD: [wreg+status,2+status,0+pclath+cstack]
  4487                           ;WriteDataXLCD@data stored from wreg
  4488  0CF8  1283               	bcf	3,5	;RP0=0, select bank0
  4489  0CF9  1303               	bcf	3,6	;RP1=0, select bank0
  4490  0CFA  00C0               	movwf	WriteDataXLCD@data
  4491                           
  4492                           ;lcd_pic16.c: 110: void WriteDataXLCD(char data);lcd_pic16.c: 111: {;lcd_pic16.c: 125:  
      +                                 TRISB &= 0x0f;
  4493  0CFB  300F               	movlw	15
  4494  0CFC  00BE               	movwf	??_WriteDataXLCD
  4495  0CFD  083E               	movf	??_WriteDataXLCD,w
  4496  0CFE  1683               	bsf	3,5	;RP0=1, select bank1
  4497  0CFF  1303               	bcf	3,6	;RP1=0, select bank1
  4498  0D00  0586               	andwf	6,f	;volatile
  4499                           
  4500                           ;lcd_pic16.c: 126:         PORTB &= 0x0f;
  4501  0D01  300F               	movlw	15
  4502  0D02  1283               	bcf	3,5	;RP0=0, select bank0
  4503  0D03  1303               	bcf	3,6	;RP1=0, select bank0
  4504  0D04  00BE               	movwf	??_WriteDataXLCD
  4505  0D05  083E               	movf	??_WriteDataXLCD,w
  4506  0D06  0586               	andwf	6,f	;volatile
  4507                           
  4508                           ;lcd_pic16.c: 127:         PORTB |= data&0xf0;
  4509  0D07  0840               	movf	WriteDataXLCD@data,w
  4510  0D08  39F0               	andlw	240
  4511  0D09  00BE               	movwf	??_WriteDataXLCD
  4512  0D0A  083E               	movf	??_WriteDataXLCD,w
  4513  0D0B  0486               	iorwf	6,f	;volatile
  4514                           
  4515                           ;lcd_pic16.c: 133:         PORTBbits.RB1 = 1;
  4516  0D0C  1486               	bsf	6,1	;volatile
  4517                           
  4518                           ;lcd_pic16.c: 134:         PORTBbits.RB2 = 0;
  4519  0D0D  1106               	bcf	6,2	;volatile
  4520                           
  4521                           ;lcd_pic16.c: 135:         DelayFor18TCY();
  4522  0D0E  120A  158A  20B1  120A  158A  	fcall	_DelayFor18TCY
  4523                           
  4524                           ;lcd_pic16.c: 136:         PORTBbits.RB3 = 1;
  4525  0D13  1283               	bcf	3,5	;RP0=0, select bank0
  4526  0D14  1303               	bcf	3,6	;RP1=0, select bank0
  4527  0D15  1586               	bsf	6,3	;volatile
  4528                           
  4529                           ;lcd_pic16.c: 137:         DelayFor18TCY();
  4530  0D16  120A  158A  20B1  120A  158A  	fcall	_DelayFor18TCY
  4531                           
  4532                           ;lcd_pic16.c: 138:         PORTBbits.RB3 = 0;
  4533  0D1B  1283               	bcf	3,5	;RP0=0, select bank0
  4534  0D1C  1303               	bcf	3,6	;RP1=0, select bank0
  4535  0D1D  1186               	bcf	6,3	;volatile
  4536                           
  4537                           ;lcd_pic16.c: 140:         PORTB &= 0x0f;
  4538  0D1E  300F               	movlw	15
  4539  0D1F  00BE               	movwf	??_WriteDataXLCD
  4540  0D20  083E               	movf	??_WriteDataXLCD,w
  4541  0D21  0586               	andwf	6,f	;volatile
  4542                           
  4543                           ;lcd_pic16.c: 141:         PORTB |= ((data<<4)&0xf0);
  4544  0D22  0840               	movf	WriteDataXLCD@data,w
  4545  0D23  00BE               	movwf	??_WriteDataXLCD
  4546  0D24  3003               	movlw	3
  4547  0D25                     u1395:	
  4548  0D25  1003               	clrc
  4549  0D26  0DBE               	rlf	??_WriteDataXLCD,f
  4550  0D27  3EFF               	addlw	-1
  4551  0D28  1D03               	skipz
  4552  0D29  2D25               	goto	u1395
  4553  0D2A  1003               	clrc
  4554  0D2B  0D3E               	rlf	??_WriteDataXLCD,w
  4555  0D2C  39F0               	andlw	240
  4556  0D2D  00BF               	movwf	??_WriteDataXLCD+1
  4557  0D2E  083F               	movf	??_WriteDataXLCD+1,w
  4558  0D2F  0486               	iorwf	6,f	;volatile
  4559                           
  4560                           ;lcd_pic16.c: 146:         DelayFor18TCY();
  4561  0D30  120A  158A  20B1  120A  158A  	fcall	_DelayFor18TCY
  4562                           
  4563                           ;lcd_pic16.c: 147:         PORTBbits.RB3 = 1;
  4564  0D35  1283               	bcf	3,5	;RP0=0, select bank0
  4565  0D36  1303               	bcf	3,6	;RP1=0, select bank0
  4566  0D37  1586               	bsf	6,3	;volatile
  4567                           
  4568                           ;lcd_pic16.c: 148:         DelayFor18TCY();
  4569  0D38  120A  158A  20B1   	fcall	_DelayFor18TCY
  4570                           
  4571                           ;lcd_pic16.c: 149:         PORTBbits.RB3 = 0;
  4572  0D3B  1283               	bcf	3,5	;RP0=0, select bank0
  4573  0D3C  1303               	bcf	3,6	;RP1=0, select bank0
  4574  0D3D  1186               	bcf	6,3	;volatile
  4575                           
  4576                           ;lcd_pic16.c: 151:         TRISB |= 0xf0;
  4577  0D3E  30F0               	movlw	240
  4578  0D3F  00BE               	movwf	??_WriteDataXLCD
  4579  0D40  083E               	movf	??_WriteDataXLCD,w
  4580  0D41  1683               	bsf	3,5	;RP0=1, select bank1
  4581  0D42  1303               	bcf	3,6	;RP1=0, select bank1
  4582  0D43  0486               	iorwf	6,f	;volatile
  4583  0D44  0008               	return
  4584  0D45                     __end_of_WriteDataXLCD:	
  4585                           
  4586                           	psect	text18
  4587  0EA0                     __ptext18:	
  4588 ;; *************** function _getData *****************
  4589 ;; Defined at:
  4590 ;;		line 31 in file "eeprom.c"
  4591 ;; Parameters:    Size  Location     Type
  4592 ;;		None
  4593 ;; Auto vars:     Size  Location     Type
  4594 ;;  aux1            1   35[BANK0 ] unsigned char 
  4595 ;;  aux0            1   34[BANK0 ] unsigned char 
  4596 ;; Return value:  Size  Location     Type
  4597 ;;                  1    wreg      void 
  4598 ;; Registers used:
  4599 ;;		wreg, status,2, btemp+1, pclath, cstack
  4600 ;; Tracked objects:
  4601 ;;		On entry : 0/0
  4602 ;;		On exit  : 0/0
  4603 ;;		Unchanged: 0/0
  4604 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4605 ;;      Params:         0       0       0       0       0
  4606 ;;      Locals:         0       2       0       0       0
  4607 ;;      Temps:          0       4       0       0       0
  4608 ;;      Totals:         0       6       0       0       0
  4609 ;;Total ram usage:        6 bytes
  4610 ;; Hardware stack levels used:    1
  4611 ;; Hardware stack levels required when called:    6
  4612 ;; This function calls:
  4613 ;;		_readEEPROM
  4614 ;; This function is called by:
  4615 ;;		_main
  4616 ;; This function uses a non-reentrant model
  4617 ;;
  4618                           
  4619                           
  4620                           ;psect for function _getData
  4621  0EA0                     _getData:	
  4622                           
  4623                           ;eeprom.c: 32:     unsigned char aux0 = readEEPROM(0);
  4624                           
  4625                           ;incstack = 0
  4626                           ; Regs used in _getData: [wreg+status,2+btemp+1+pclath+cstack]
  4627  0EA0  3000               	movlw	0
  4628  0EA1  120A  158A  2107  120A  158A  	fcall	_readEEPROM
  4629  0EA6  1283               	bcf	3,5	;RP0=0, select bank0
  4630  0EA7  1303               	bcf	3,6	;RP1=0, select bank0
  4631  0EA8  00BE               	movwf	??_getData
  4632  0EA9  083E               	movf	??_getData,w
  4633  0EAA  00C2               	movwf	getData@aux0
  4634                           
  4635                           ;eeprom.c: 33:     unsigned char aux1 = readEEPROM(1);
  4636  0EAB  3001               	movlw	1
  4637  0EAC  120A  158A  2107  120A  158A  	fcall	_readEEPROM
  4638  0EB1  1283               	bcf	3,5	;RP0=0, select bank0
  4639  0EB2  1303               	bcf	3,6	;RP1=0, select bank0
  4640  0EB3  00BE               	movwf	??_getData
  4641  0EB4  083E               	movf	??_getData,w
  4642  0EB5  00C3               	movwf	getData@aux1
  4643                           
  4644                           ;eeprom.c: 34:     frequency = 0;
  4645  0EB6  01C4               	clrf	_frequency
  4646  0EB7  01C5               	clrf	_frequency+1
  4647                           
  4648                           ;eeprom.c: 35:     frequency = (aux1 << 8) | aux0;
  4649  0EB8  0842               	movf	getData@aux0,w
  4650  0EB9  00BE               	movwf	??_getData
  4651  0EBA  01BF               	clrf	??_getData+1
  4652  0EBB  0843               	movf	getData@aux1,w
  4653  0EBC  00C0               	movwf	??_getData+2
  4654  0EBD  01C1               	clrf	??_getData+3
  4655  0EBE  0840               	movf	??_getData+2,w
  4656  0EBF  00C1               	movwf	??_getData+3
  4657  0EC0  01C0               	clrf	??_getData+2
  4658  0EC1  083E               	movf	??_getData,w
  4659  0EC2  0440               	iorwf	??_getData+2,w
  4660  0EC3  00C4               	movwf	_frequency
  4661  0EC4  083F               	movf	??_getData+1,w
  4662  0EC5  0441               	iorwf	??_getData+3,w
  4663  0EC6  00C5               	movwf	_frequency+1
  4664                           
  4665                           ;eeprom.c: 36:     months = readEEPROM(2);
  4666  0EC7  3002               	movlw	2
  4667  0EC8  120A  158A  2107  120A  158A  	fcall	_readEEPROM
  4668  0ECD  1283               	bcf	3,5	;RP0=0, select bank0
  4669  0ECE  1303               	bcf	3,6	;RP1=0, select bank0
  4670  0ECF  00BE               	movwf	??_getData
  4671  0ED0  083E               	movf	??_getData,w
  4672  0ED1  00CA               	movwf	_months
  4673                           
  4674                           ;eeprom.c: 37:     days = readEEPROM(3);
  4675  0ED2  3003               	movlw	3
  4676  0ED3  120A  158A  2107  120A  158A  	fcall	_readEEPROM
  4677  0ED8  1283               	bcf	3,5	;RP0=0, select bank0
  4678  0ED9  1303               	bcf	3,6	;RP1=0, select bank0
  4679  0EDA  00BE               	movwf	??_getData
  4680  0EDB  083E               	movf	??_getData,w
  4681  0EDC  00C9               	movwf	_days
  4682                           
  4683                           ;eeprom.c: 38:     hours = readEEPROM(4);
  4684  0EDD  3004               	movlw	4
  4685  0EDE  120A  158A  2107  120A  158A  	fcall	_readEEPROM
  4686  0EE3  1283               	bcf	3,5	;RP0=0, select bank0
  4687  0EE4  1303               	bcf	3,6	;RP1=0, select bank0
  4688  0EE5  00BE               	movwf	??_getData
  4689  0EE6  083E               	movf	??_getData,w
  4690  0EE7  00C8               	movwf	_hours
  4691                           
  4692                           ;eeprom.c: 39:     minutes = readEEPROM(5);
  4693  0EE8  3005               	movlw	5
  4694  0EE9  120A  158A  2107  120A  158A  	fcall	_readEEPROM
  4695  0EEE  1283               	bcf	3,5	;RP0=0, select bank0
  4696  0EEF  1303               	bcf	3,6	;RP1=0, select bank0
  4697  0EF0  00BE               	movwf	??_getData
  4698  0EF1  083E               	movf	??_getData,w
  4699  0EF2  00C7               	movwf	_minutes
  4700                           
  4701                           ;eeprom.c: 40:     functionalStat = readEEPROM(6);
  4702  0EF3  3006               	movlw	6
  4703  0EF4  120A  158A  2107   	fcall	_readEEPROM
  4704  0EF7  1283               	bcf	3,5	;RP0=0, select bank0
  4705  0EF8  1303               	bcf	3,6	;RP1=0, select bank0
  4706  0EF9  00BE               	movwf	??_getData
  4707  0EFA  083E               	movf	??_getData,w
  4708  0EFB  00CF               	movwf	_functionalStat
  4709  0EFC  0008               	return
  4710  0EFD                     __end_of_getData:	
  4711                           
  4712                           	psect	text19
  4713  0907                     __ptext19:	
  4714 ;; *************** function _readEEPROM *****************
  4715 ;; Defined at:
  4716 ;;		line 7 in file "eeprom.c"
  4717 ;; Parameters:    Size  Location     Type
  4718 ;;  address         1    wreg     unsigned char 
  4719 ;; Auto vars:     Size  Location     Type
  4720 ;;  address         1   29[BANK0 ] unsigned char 
  4721 ;; Return value:  Size  Location     Type
  4722 ;;                  1    wreg      unsigned char 
  4723 ;; Registers used:
  4724 ;;		wreg
  4725 ;; Tracked objects:
  4726 ;;		On entry : 0/0
  4727 ;;		On exit  : 0/0
  4728 ;;		Unchanged: 0/0
  4729 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4730 ;;      Params:         0       0       0       0       0
  4731 ;;      Locals:         0       1       0       0       0
  4732 ;;      Temps:          0       0       0       0       0
  4733 ;;      Totals:         0       1       0       0       0
  4734 ;;Total ram usage:        1 bytes
  4735 ;; Hardware stack levels used:    1
  4736 ;; Hardware stack levels required when called:    5
  4737 ;; This function calls:
  4738 ;;		Nothing
  4739 ;; This function is called by:
  4740 ;;		_getData
  4741 ;; This function uses a non-reentrant model
  4742 ;;
  4743                           
  4744                           
  4745                           ;psect for function _readEEPROM
  4746  0907                     _readEEPROM:	
  4747                           
  4748                           ;incstack = 0
  4749                           ; Regs used in _readEEPROM: [wreg]
  4750                           ;readEEPROM@address stored from wreg
  4751  0907  1283               	bcf	3,5	;RP0=0, select bank0
  4752  0908  1303               	bcf	3,6	;RP1=0, select bank0
  4753  0909  00BD               	movwf	readEEPROM@address
  4754                           
  4755                           ;eeprom.c: 8:     EEADR = address;
  4756  090A  083D               	movf	readEEPROM@address,w
  4757  090B  1283               	bcf	3,5	;RP0=0, select bank2
  4758  090C  1703               	bsf	3,6	;RP1=1, select bank2
  4759  090D  008D               	movwf	13	;volatile
  4760                           
  4761                           ;eeprom.c: 9:     EECON1bits.EEPGD = 0;
  4762  090E  1683               	bsf	3,5	;RP0=1, select bank3
  4763  090F  1703               	bsf	3,6	;RP1=1, select bank3
  4764  0910  138C               	bcf	12,7	;volsfr
  4765                           
  4766                           ;eeprom.c: 10:     EECON1bits.RD = 1;
  4767  0911  140C               	bsf	12,0	;volsfr
  4768                           
  4769                           ;eeprom.c: 11:     return EEDATA;
  4770  0912  1283               	bcf	3,5	;RP0=0, select bank2
  4771  0913  1703               	bsf	3,6	;RP1=1, select bank2
  4772  0914  080C               	movf	12,w	;volatile
  4773  0915  0008               	return
  4774  0916                     __end_of_readEEPROM:	
  4775                           
  4776                           	psect	text20
  4777  0A76                     __ptext20:	
  4778 ;; *************** function _config *****************
  4779 ;; Defined at:
  4780 ;;		line 42 in file "main.c"
  4781 ;; Parameters:    Size  Location     Type
  4782 ;;		None
  4783 ;; Auto vars:     Size  Location     Type
  4784 ;;		None
  4785 ;; Return value:  Size  Location     Type
  4786 ;;                  1    wreg      void 
  4787 ;; Registers used:
  4788 ;;		wreg, status,2, status,0, pclath, cstack
  4789 ;; Tracked objects:
  4790 ;;		On entry : 0/0
  4791 ;;		On exit  : 0/0
  4792 ;;		Unchanged: 0/0
  4793 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4794 ;;      Params:         0       0       0       0       0
  4795 ;;      Locals:         0       0       0       0       0
  4796 ;;      Temps:          0       0       0       0       0
  4797 ;;      Totals:         0       0       0       0       0
  4798 ;;Total ram usage:        0 bytes
  4799 ;; Hardware stack levels used:    1
  4800 ;; Hardware stack levels required when called:    9
  4801 ;; This function calls:
  4802 ;;		_initLCD
  4803 ;;		_setTransStat
  4804 ;; This function is called by:
  4805 ;;		_main
  4806 ;; This function uses a non-reentrant model
  4807 ;;
  4808                           
  4809                           
  4810                           ;psect for function _config
  4811  0A76                     _config:	
  4812                           
  4813                           ;main.c: 44:     INTCON = 0b01000000;
  4814                           
  4815                           ;incstack = 0
  4816 ;; hardware stack exceeded
  4817                           ; Regs used in _config: [wreg+status,2+status,0+pclath+cstack]
  4818  0A76  3040               	movlw	64
  4819  0A77  008B               	movwf	11	;volatile
  4820                           
  4821                           ;main.c: 45:     PIE1 = 0b00000001;
  4822  0A78  3001               	movlw	1
  4823  0A79  1683               	bsf	3,5	;RP0=1, select bank1
  4824  0A7A  1303               	bcf	3,6	;RP1=0, select bank1
  4825  0A7B  008C               	movwf	12	;volatile
  4826                           
  4827                           ;main.c: 47:     TRISA = 0b00111000;
  4828  0A7C  3038               	movlw	56
  4829  0A7D  0085               	movwf	5	;volatile
  4830                           
  4831                           ;main.c: 48:     TRISB = 0b00000000;
  4832  0A7E  0186               	clrf	6	;volatile
  4833                           
  4834                           ;main.c: 49:     TRISC = 0b00000000;
  4835  0A7F  0187               	clrf	7	;volatile
  4836                           
  4837                           ;main.c: 50:     PORTA = 0x00;
  4838  0A80  1283               	bcf	3,5	;RP0=0, select bank0
  4839  0A81  1303               	bcf	3,6	;RP1=0, select bank0
  4840  0A82  0185               	clrf	5	;volatile
  4841                           
  4842                           ;main.c: 51:     PORTB = 0x00;
  4843  0A83  0186               	clrf	6	;volatile
  4844                           
  4845                           ;main.c: 52:     PORTC = 0x0E;
  4846  0A84  300E               	movlw	14
  4847  0A85  0087               	movwf	7	;volatile
  4848                           
  4849                           ;main.c: 54:     T1CON = 0b00010001;
  4850  0A86  3011               	movlw	17
  4851  0A87  0090               	movwf	16	;volatile
  4852                           
  4853                           ;main.c: 56:     ADCON0 = 0b00000000;
  4854  0A88  019F               	clrf	31	;volatile
  4855                           
  4856                           ;main.c: 57:     ADCON1 = 0b00000000;
  4857  0A89  1683               	bsf	3,5	;RP0=1, select bank1
  4858  0A8A  1303               	bcf	3,6	;RP1=0, select bank1
  4859  0A8B  019F               	clrf	31	;volatile
  4860                           
  4861                           ;main.c: 58:     ANSEL = 0b00000000;
  4862  0A8C  1683               	bsf	3,5	;RP0=1, select bank3
  4863  0A8D  1703               	bsf	3,6	;RP1=1, select bank3
  4864  0A8E  0188               	clrf	8	;volatile
  4865                           
  4866                           ;main.c: 59:     ANSELH = 0b00000000;
  4867  0A8F  0189               	clrf	9	;volatile
  4868                           
  4869                           ;main.c: 61:     PORTCbits.RC0 = 0;
  4870  0A90  1283               	bcf	3,5	;RP0=0, select bank0
  4871  0A91  1303               	bcf	3,6	;RP1=0, select bank0
  4872  0A92  1007               	bcf	7,0	;volatile
  4873                           
  4874                           ;main.c: 62:     PORTCbits.RC4 = 1;
  4875  0A93  1607               	bsf	7,4	;volatile
  4876                           
  4877                           ;main.c: 64:     initLCD();
  4878  0A94  120A  158A  2224  120A  158A  	fcall	_initLCD
  4879                           
  4880                           ;main.c: 66:     T1CONbits.TMR1ON = 1;
  4881  0A99  1283               	bcf	3,5	;RP0=0, select bank0
  4882  0A9A  1303               	bcf	3,6	;RP1=0, select bank0
  4883  0A9B  1410               	bsf	16,0	;volatile
  4884                           
  4885                           ;main.c: 67:     INTCONbits.GIE = 1;
  4886  0A9C  178B               	bsf	11,7	;volatile
  4887                           
  4888                           ;main.c: 69:     setTransStat(0);
  4889  0A9D  3000               	movlw	0
  4890  0A9E  00BD               	movwf	setTransStat@stat
  4891  0A9F  00BE               	movwf	setTransStat@stat+1
  4892  0AA0  120A  158A  2149   	fcall	_setTransStat
  4893  0AA3  0008               	return
  4894  0AA4                     __end_of_config:	
  4895                           
  4896                           	psect	text21
  4897  0949                     __ptext21:	
  4898 ;; *************** function _setTransStat *****************
  4899 ;; Defined at:
  4900 ;;		line 228 in file "main.c"
  4901 ;; Parameters:    Size  Location     Type
  4902 ;;  stat            2   29[BANK0 ] int 
  4903 ;; Auto vars:     Size  Location     Type
  4904 ;;		None
  4905 ;; Return value:  Size  Location     Type
  4906 ;;                  1    wreg      void 
  4907 ;; Registers used:
  4908 ;;		wreg, status,2, status,0
  4909 ;; Tracked objects:
  4910 ;;		On entry : 0/0
  4911 ;;		On exit  : 0/0
  4912 ;;		Unchanged: 0/0
  4913 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4914 ;;      Params:         0       2       0       0       0
  4915 ;;      Locals:         0       0       0       0       0
  4916 ;;      Temps:          0       2       0       0       0
  4917 ;;      Totals:         0       4       0       0       0
  4918 ;;Total ram usage:        4 bytes
  4919 ;; Hardware stack levels used:    1
  4920 ;; Hardware stack levels required when called:    5
  4921 ;; This function calls:
  4922 ;;		Nothing
  4923 ;; This function is called by:
  4924 ;;		_config
  4925 ;; This function uses a non-reentrant model
  4926 ;;
  4927                           
  4928                           
  4929                           ;psect for function _setTransStat
  4930  0949                     _setTransStat:	
  4931                           
  4932                           ;main.c: 229:     if(stat == 1){
  4933                           
  4934                           ;incstack = 0
  4935                           ; Regs used in _setTransStat: [wreg+status,2+status,0]
  4936  0949  1283               	bcf	3,5	;RP0=0, select bank0
  4937  094A  1303               	bcf	3,6	;RP1=0, select bank0
  4938  094B  033D               	decf	setTransStat@stat,w
  4939  094C  043E               	iorwf	setTransStat@stat+1,w
  4940  094D  1D03               	btfss	3,2
  4941  094E  295C               	goto	l266
  4942                           
  4943                           ;main.c: 230:         PORTCbits.RC0 = 1;
  4944  094F  1407               	bsf	7,0	;volatile
  4945                           
  4946                           ;main.c: 231:         PORTCbits.RC4 = 0;
  4947  0950  1207               	bcf	7,4	;volatile
  4948  0951                     l2949:	
  4949                           
  4950                           ;main.c: 232:         _delay((unsigned long)((2)*(4000000/4000.0)));
  4951  0951  3003               	movlw	3
  4952  0952  1283               	bcf	3,5	;RP0=0, select bank0
  4953  0953  1303               	bcf	3,6	;RP1=0, select bank0
  4954  0954  00C0               	movwf	??_setTransStat+1
  4955  0955  3097               	movlw	151
  4956  0956  00BF               	movwf	??_setTransStat
  4957  0957                     u3617:	
  4958  0957  0BBF               	decfsz	??_setTransStat,f
  4959  0958  2957               	goto	u3617
  4960  0959  0BC0               	decfsz	??_setTransStat+1,f
  4961  095A  2957               	goto	u3617
  4962                           
  4963                           ;main.c: 233:     }else{
  4964  095B  0008               	return
  4965  095C                     l266:	
  4966                           
  4967                           ;main.c: 234:         PORTCbits.RC0 = 0;
  4968  095C  1007               	bcf	7,0	;volatile
  4969                           
  4970                           ;main.c: 235:         PORTCbits.RC4 = 1;
  4971  095D  1607               	bsf	7,4	;volatile
  4972  095E  2951               	goto	l2949
  4973  095F                     __end_of_setTransStat:	
  4974                           
  4975                           	psect	text22
  4976  0A24                     __ptext22:	
  4977 ;; *************** function _initLCD *****************
  4978 ;; Defined at:
  4979 ;;		line 5 in file "lcd.c"
  4980 ;; Parameters:    Size  Location     Type
  4981 ;;		None
  4982 ;; Auto vars:     Size  Location     Type
  4983 ;;		None
  4984 ;; Return value:  Size  Location     Type
  4985 ;;                  1    wreg      void 
  4986 ;; Registers used:
  4987 ;;		wreg, status,2, status,0, pclath, cstack
  4988 ;; Tracked objects:
  4989 ;;		On entry : 0/0
  4990 ;;		On exit  : 0/0
  4991 ;;		Unchanged: 0/0
  4992 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4993 ;;      Params:         0       0       0       0       0
  4994 ;;      Locals:         0       0       0       0       0
  4995 ;;      Temps:          0       0       2       0       0
  4996 ;;      Totals:         0       0       2       0       0
  4997 ;;Total ram usage:        2 bytes
  4998 ;; Hardware stack levels used:    1
  4999 ;; Hardware stack levels required when called:    8
  5000 ;; This function calls:
  5001 ;;		_OpenXLCD
  5002 ;;		_SendCMDLCD
  5003 ;; This function is called by:
  5004 ;;		_config
  5005 ;; This function uses a non-reentrant model
  5006 ;;
  5007                           
  5008                           
  5009                           ;psect for function _initLCD
  5010  0A24                     _initLCD:	
  5011                           
  5012                           ;lcd.c: 6:     OpenXLCD(0b00101100 & 0b00111000);
  5013                           
  5014                           ;incstack = 0
  5015 ;; hardware stack exceeded
  5016                           ; Regs used in _initLCD: [wreg+status,2+status,0+pclath+cstack]
  5017  0A24  3028               	movlw	40
  5018  0A25  120A  118A  262F  120A  158A  	fcall	_OpenXLCD
  5019                           
  5020                           ;lcd.c: 7:     _delay((unsigned long)((100)*(4000000/4000.0)));
  5021  0A2A  3082               	movlw	130
  5022  0A2B  1683               	bsf	3,5	;RP0=1, select bank1
  5023  0A2C  1303               	bcf	3,6	;RP1=0, select bank1
  5024  0A2D  00C4               	movwf	(??_initLCD^(0+128)+1)
  5025  0A2E  30DD               	movlw	221
  5026  0A2F  00C3               	movwf	??_initLCD^(0+128)
  5027  0A30                     u3627:	
  5028  0A30  0BC3               	decfsz	??_initLCD^(0+128),f
  5029  0A31  2A30               	goto	u3627
  5030  0A32  0BC4               	decfsz	(??_initLCD^(0+128)+1),f
  5031  0A33  2A30               	goto	u3627
  5032                           
  5033                           ;lcd.c: 8:     SendCMDLCD(0b00001101);
  5034  0A34  300D               	movlw	13
  5035  0A35  120A  158A  2137  120A  158A  	fcall	_SendCMDLCD
  5036                           
  5037                           ;lcd.c: 9:     SendCMDLCD(0b00000110);
  5038  0A3A  3006               	movlw	6
  5039  0A3B  120A  158A  2137  120A  158A  	fcall	_SendCMDLCD
  5040                           
  5041                           ;lcd.c: 10:     _delay((unsigned long)((50)*(4000000/4000.0)));
  5042  0A40  3041               	movlw	65
  5043  0A41  1683               	bsf	3,5	;RP0=1, select bank1
  5044  0A42  1303               	bcf	3,6	;RP1=0, select bank1
  5045  0A43  00C4               	movwf	(??_initLCD^(0+128)+1)
  5046  0A44  30ED               	movlw	237
  5047  0A45  00C3               	movwf	??_initLCD^(0+128)
  5048  0A46                     u3637:	
  5049  0A46  0BC3               	decfsz	??_initLCD^(0+128),f
  5050  0A47  2A46               	goto	u3637
  5051  0A48  0BC4               	decfsz	(??_initLCD^(0+128)+1),f
  5052  0A49  2A46               	goto	u3637
  5053  0A4A  2A4B               	nop2
  5054  0A4B  0008               	return
  5055  0A4C                     __end_of_initLCD:	
  5056                           
  5057                           	psect	text23
  5058  0937                     __ptext23:	
  5059 ;; *************** function _SendCMDLCD *****************
  5060 ;; Defined at:
  5061 ;;		line 27 in file "lcd.c"
  5062 ;; Parameters:    Size  Location     Type
  5063 ;;  CMD             1    wreg     unsigned char 
  5064 ;; Auto vars:     Size  Location     Type
  5065 ;;  CMD             1   33[BANK0 ] unsigned char 
  5066 ;; Return value:  Size  Location     Type
  5067 ;;                  1    wreg      void 
  5068 ;; Registers used:
  5069 ;;		wreg, status,2, status,0, pclath, cstack
  5070 ;; Tracked objects:
  5071 ;;		On entry : 0/0
  5072 ;;		On exit  : 0/0
  5073 ;;		Unchanged: 0/0
  5074 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5075 ;;      Params:         0       0       0       0       0
  5076 ;;      Locals:         0       1       0       0       0
  5077 ;;      Temps:          0       0       0       0       0
  5078 ;;      Totals:         0       1       0       0       0
  5079 ;;Total ram usage:        1 bytes
  5080 ;; Hardware stack levels used:    1
  5081 ;; Hardware stack levels required when called:    7
  5082 ;; This function calls:
  5083 ;;		_BusyXLCD
  5084 ;;		_WriteCmdXLCD
  5085 ;; This function is called by:
  5086 ;;		_initLCD
  5087 ;; This function uses a non-reentrant model
  5088 ;;
  5089                           
  5090                           
  5091                           ;psect for function _SendCMDLCD
  5092  0937                     _SendCMDLCD:	
  5093                           
  5094                           ;incstack = 0
  5095 ;; hardware stack exceeded
  5096                           ; Regs used in _SendCMDLCD: [wreg+status,2+status,0+pclath+cstack]
  5097                           ;SendCMDLCD@CMD stored from wreg
  5098  0937  1283               	bcf	3,5	;RP0=0, select bank0
  5099  0938  1303               	bcf	3,6	;RP1=0, select bank0
  5100  0939  00C1               	movwf	SendCMDLCD@CMD
  5101  093A                     l2713:	
  5102                           ;lcd.c: 28:     while(BusyXLCD())continue;
  5103                           
  5104  093A  120A  158A  20DF  120A  158A  	fcall	_BusyXLCD
  5105  093F  3A00               	xorlw	0
  5106  0940  1D03               	skipz
  5107  0941  293A               	goto	l2713
  5108                           
  5109                           ;lcd.c: 29:     WriteCmdXLCD(CMD);
  5110  0942  1283               	bcf	3,5	;RP0=0, select bank0
  5111  0943  1303               	bcf	3,6	;RP1=0, select bank0
  5112  0944  0841               	movf	SendCMDLCD@CMD,w
  5113  0945  120A  158A  24AB   	fcall	_WriteCmdXLCD
  5114  0948  0008               	return
  5115  0949                     __end_of_SendCMDLCD:	
  5116                           
  5117                           	psect	text24
  5118  062F                     __ptext24:	
  5119 ;; *************** function _OpenXLCD *****************
  5120 ;; Defined at:
  5121 ;;		line 40 in file "lcd_pic16.c"
  5122 ;; Parameters:    Size  Location     Type
  5123 ;;  lcdtype         1    wreg     unsigned char 
  5124 ;; Auto vars:     Size  Location     Type
  5125 ;;  lcdtype         1   35[BANK0 ] unsigned char 
  5126 ;; Return value:  Size  Location     Type
  5127 ;;                  1    wreg      void 
  5128 ;; Registers used:
  5129 ;;		wreg, status,2, status,0, pclath, cstack
  5130 ;; Tracked objects:
  5131 ;;		On entry : 0/0
  5132 ;;		On exit  : 0/0
  5133 ;;		Unchanged: 0/0
  5134 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5135 ;;      Params:         0       0       0       0       0
  5136 ;;      Locals:         0       1       0       0       0
  5137 ;;      Temps:          0       2       0       0       0
  5138 ;;      Totals:         0       3       0       0       0
  5139 ;;Total ram usage:        3 bytes
  5140 ;; Hardware stack levels used:    1
  5141 ;; Hardware stack levels required when called:    7
  5142 ;; This function calls:
  5143 ;;		_BusyXLCD
  5144 ;;		_DelayPORXLCD
  5145 ;;		_SetDDRamAddr
  5146 ;;		_WriteCmdXLCD
  5147 ;; This function is called by:
  5148 ;;		_initLCD
  5149 ;; This function uses a non-reentrant model
  5150 ;;
  5151                           
  5152                           
  5153                           ;psect for function _OpenXLCD
  5154  062F                     _OpenXLCD:	
  5155                           
  5156                           ;incstack = 0
  5157 ;; hardware stack exceeded
  5158                           ; Regs used in _OpenXLCD: [wreg+status,2+status,0+pclath+cstack]
  5159                           ;OpenXLCD@lcdtype stored from wreg
  5160  062F  1283               	bcf	3,5	;RP0=0, select bank0
  5161  0630  1303               	bcf	3,6	;RP1=0, select bank0
  5162  0631  00C3               	movwf	OpenXLCD@lcdtype
  5163                           
  5164                           ;lcd_pic16.c: 40: void OpenXLCD(unsigned char lcdtype);lcd_pic16.c: 41: {;lcd_pic16.c: 4
      +                          7:         PORTB &= 0x0f;
  5165  0632  300F               	movlw	15
  5166  0633  00C1               	movwf	??_OpenXLCD
  5167  0634  0841               	movf	??_OpenXLCD,w
  5168  0635  0586               	andwf	6,f	;volatile
  5169                           
  5170                           ;lcd_pic16.c: 48:         TRISB &= 0x0F;
  5171  0636  300F               	movlw	15
  5172  0637  00C1               	movwf	??_OpenXLCD
  5173  0638  0841               	movf	??_OpenXLCD,w
  5174  0639  1683               	bsf	3,5	;RP0=1, select bank1
  5175  063A  1303               	bcf	3,6	;RP1=0, select bank1
  5176  063B  0586               	andwf	6,f	;volatile
  5177                           
  5178                           ;lcd_pic16.c: 54:         TRISBbits.TRISB2 = 0;
  5179  063C  1106               	bcf	6,2	;volatile
  5180                           
  5181                           ;lcd_pic16.c: 55:         TRISBbits.TRISB1 = 0;
  5182  063D  1086               	bcf	6,1	;volatile
  5183                           
  5184                           ;lcd_pic16.c: 56:         TRISBbits.TRISB3 = 0;
  5185  063E  1186               	bcf	6,3	;volatile
  5186                           
  5187                           ;lcd_pic16.c: 57:         PORTBbits.RB2 = 0;
  5188  063F  1283               	bcf	3,5	;RP0=0, select bank0
  5189  0640  1303               	bcf	3,6	;RP1=0, select bank0
  5190  0641  1106               	bcf	6,2	;volatile
  5191                           
  5192                           ;lcd_pic16.c: 58:         PORTBbits.RB1 = 0;
  5193  0642  1086               	bcf	6,1	;volatile
  5194                           
  5195                           ;lcd_pic16.c: 59:         PORTBbits.RB3 = 0;
  5196  0643  1186               	bcf	6,3	;volatile
  5197                           
  5198                           ;lcd_pic16.c: 62:         DelayPORXLCD();
  5199  0644  120A  158A  20D3  120A  118A  	fcall	_DelayPORXLCD
  5200                           
  5201                           ;lcd_pic16.c: 64:        WriteCmdXLCD(0x30);
  5202  0649  3030               	movlw	48
  5203  064A  120A  158A  24AB  120A  118A  	fcall	_WriteCmdXLCD
  5204                           
  5205                           ;lcd_pic16.c: 65:          _delay((unsigned long)((5)*(4000000/4000.0)));
  5206  064F  3007               	movlw	7
  5207  0650  1283               	bcf	3,5	;RP0=0, select bank0
  5208  0651  1303               	bcf	3,6	;RP1=0, select bank0
  5209  0652  00C2               	movwf	??_OpenXLCD+1
  5210  0653  307C               	movlw	124
  5211  0654  00C1               	movwf	??_OpenXLCD
  5212  0655                     u3647:	
  5213  0655  0BC1               	decfsz	??_OpenXLCD,f
  5214  0656  2E55               	goto	u3647
  5215  0657  0BC2               	decfsz	??_OpenXLCD+1,f
  5216  0658  2E55               	goto	u3647
  5217  0659  0000               	nop
  5218                           
  5219                           ;lcd_pic16.c: 67:        WriteCmdXLCD(0x30);
  5220  065A  3030               	movlw	48
  5221  065B  120A  158A  24AB  120A  118A  	fcall	_WriteCmdXLCD
  5222                           
  5223                           ;lcd_pic16.c: 68:          _delay((unsigned long)((1)*(4000000/4000.0)));
  5224  0660  30C7               	movlw	199
  5225  0661  1283               	bcf	3,5	;RP0=0, select bank0
  5226  0662  1303               	bcf	3,6	;RP1=0, select bank0
  5227  0663  00C1               	movwf	??_OpenXLCD
  5228  0664                     u3657:	
  5229  0664  2E65               	nop2
  5230  0665  0BC1               	decfsz	??_OpenXLCD,f
  5231  0666  2E64               	goto	u3657
  5232  0667  2E68               	nop2
  5233                           
  5234                           ;lcd_pic16.c: 71:        WriteCmdXLCD(0x32);
  5235  0668  3032               	movlw	50
  5236  0669  120A  158A  24AB  120A  118A  	fcall	_WriteCmdXLCD
  5237  066E                     l2675:	
  5238                           ;lcd_pic16.c: 72:       while( BusyXLCD() );
  5239                           
  5240  066E  120A  158A  20DF  120A  118A  	fcall	_BusyXLCD
  5241  0673  3A00               	xorlw	0
  5242  0674  1D03               	skipz
  5243  0675  2E6E               	goto	l2675
  5244  0676                     l2677:	
  5245  0676  120A  158A  20DF  120A  118A  	fcall	_BusyXLCD
  5246  067B  3A00               	xorlw	0
  5247  067C  1D03               	skipz
  5248  067D  2E76               	goto	l2677
  5249                           
  5250                           ;lcd_pic16.c: 78:         WriteCmdXLCD(lcdtype);
  5251  067E  1283               	bcf	3,5	;RP0=0, select bank0
  5252  067F  1303               	bcf	3,6	;RP1=0, select bank0
  5253  0680  0843               	movf	OpenXLCD@lcdtype,w
  5254  0681  120A  158A  24AB  120A  118A  	fcall	_WriteCmdXLCD
  5255  0686                     l2681:	
  5256                           ;lcd_pic16.c: 81:         while(BusyXLCD());
  5257                           
  5258  0686  120A  158A  20DF  120A  118A  	fcall	_BusyXLCD
  5259  068B  3A00               	xorlw	0
  5260  068C  1D03               	skipz
  5261  068D  2E86               	goto	l2681
  5262                           
  5263                           ;lcd_pic16.c: 82:         WriteCmdXLCD(0b00001011&0b00001101&0b00001110);
  5264  068E  3008               	movlw	8
  5265  068F  120A  158A  24AB  120A  118A  	fcall	_WriteCmdXLCD
  5266  0694                     l2685:	
  5267                           ;lcd_pic16.c: 83:         while(BusyXLCD());
  5268                           
  5269  0694  120A  158A  20DF  120A  118A  	fcall	_BusyXLCD
  5270  0699  3A00               	xorlw	0
  5271  069A  1D03               	skipz
  5272  069B  2E94               	goto	l2685
  5273                           
  5274                           ;lcd_pic16.c: 84:         WriteCmdXLCD(0b00001111&0b00001111&0b00001111);
  5275  069C  300F               	movlw	15
  5276  069D  120A  158A  24AB  120A  118A  	fcall	_WriteCmdXLCD
  5277  06A2                     l2689:	
  5278                           ;lcd_pic16.c: 87:         while(BusyXLCD());
  5279                           
  5280  06A2  120A  158A  20DF  120A  118A  	fcall	_BusyXLCD
  5281  06A7  3A00               	xorlw	0
  5282  06A8  1D03               	skipz
  5283  06A9  2EA2               	goto	l2689
  5284                           
  5285                           ;lcd_pic16.c: 88:         WriteCmdXLCD(0x01);
  5286  06AA  3001               	movlw	1
  5287  06AB  120A  158A  24AB  120A  118A  	fcall	_WriteCmdXLCD
  5288  06B0                     l2693:	
  5289                           ;lcd_pic16.c: 91:         while(BusyXLCD());
  5290                           
  5291  06B0  120A  158A  20DF  120A  118A  	fcall	_BusyXLCD
  5292  06B5  3A00               	xorlw	0
  5293  06B6  1D03               	skipz
  5294  06B7  2EB0               	goto	l2693
  5295                           
  5296                           ;lcd_pic16.c: 92:         WriteCmdXLCD(0b00000101);
  5297  06B8  3005               	movlw	5
  5298  06B9  120A  158A  24AB  120A  118A  	fcall	_WriteCmdXLCD
  5299  06BE                     l2697:	
  5300                           ;lcd_pic16.c: 94:    while(BusyXLCD());
  5301                           
  5302  06BE  120A  158A  20DF  120A  118A  	fcall	_BusyXLCD
  5303  06C3  3A00               	xorlw	0
  5304  06C4  1D03               	skipz
  5305  06C5  2EBE               	goto	l2697
  5306                           
  5307                           ;lcd_pic16.c: 95:         WriteCmdXLCD(0x06);
  5308  06C6  3006               	movlw	6
  5309  06C7  120A  158A  24AB  120A  118A  	fcall	_WriteCmdXLCD
  5310  06CC                     l2701:	
  5311                           ;lcd_pic16.c: 97:         while(BusyXLCD());
  5312                           
  5313  06CC  120A  158A  20DF  120A  118A  	fcall	_BusyXLCD
  5314  06D1  3A00               	xorlw	0
  5315  06D2  1D03               	skipz
  5316  06D3  2ECC               	goto	l2701
  5317                           
  5318                           ;lcd_pic16.c: 98:         SetDDRamAddr(0x80);
  5319  06D4  3080               	movlw	128
  5320  06D5  120A  118A  27AE  120A  118A  	fcall	_SetDDRamAddr
  5321  06DA                     l2705:	
  5322                           ;lcd_pic16.c: 100:         while(BusyXLCD());
  5323                           
  5324  06DA  120A  158A  20DF  120A  118A  	fcall	_BusyXLCD
  5325  06DF  3A00               	xorlw	0
  5326  06E0  1D03               	skipz
  5327  06E1  2EDA               	goto	l2705
  5328                           
  5329                           ;lcd_pic16.c: 101:         WriteCmdXLCD(0b00001101);
  5330  06E2  300D               	movlw	13
  5331  06E3  120A  158A  24AB   	fcall	_WriteCmdXLCD
  5332  06E6  0008               	return
  5333  06E7                     __end_of_OpenXLCD:	
  5334                           
  5335                           	psect	text25
  5336  0CAB                     __ptext25:	
  5337 ;; *************** function _WriteCmdXLCD *****************
  5338 ;; Defined at:
  5339 ;;		line 164 in file "lcd_pic16.c"
  5340 ;; Parameters:    Size  Location     Type
  5341 ;;  cmd             1    wreg     unsigned char 
  5342 ;; Auto vars:     Size  Location     Type
  5343 ;;  cmd             1   32[BANK0 ] unsigned char 
  5344 ;; Return value:  Size  Location     Type
  5345 ;;                  1    wreg      void 
  5346 ;; Registers used:
  5347 ;;		wreg, status,2, status,0, pclath, cstack
  5348 ;; Tracked objects:
  5349 ;;		On entry : 0/0
  5350 ;;		On exit  : 0/0
  5351 ;;		Unchanged: 0/0
  5352 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5353 ;;      Params:         0       0       0       0       0
  5354 ;;      Locals:         0       1       0       0       0
  5355 ;;      Temps:          0       2       0       0       0
  5356 ;;      Totals:         0       3       0       0       0
  5357 ;;Total ram usage:        3 bytes
  5358 ;; Hardware stack levels used:    1
  5359 ;; Hardware stack levels required when called:    6
  5360 ;; This function calls:
  5361 ;;		_DelayFor18TCY
  5362 ;; This function is called by:
  5363 ;;		_OpenXLCD
  5364 ;;		_SendCMDLCD
  5365 ;; This function uses a non-reentrant model
  5366 ;;
  5367                           
  5368                           
  5369                           ;psect for function _WriteCmdXLCD
  5370  0CAB                     _WriteCmdXLCD:	
  5371                           
  5372                           ;incstack = 0
  5373 ;; hardware stack exceeded
  5374                           ; Regs used in _WriteCmdXLCD: [wreg+status,2+status,0+pclath+cstack]
  5375                           ;WriteCmdXLCD@cmd stored from wreg
  5376  0CAB  1283               	bcf	3,5	;RP0=0, select bank0
  5377  0CAC  1303               	bcf	3,6	;RP1=0, select bank0
  5378  0CAD  00C0               	movwf	WriteCmdXLCD@cmd
  5379                           
  5380                           ;lcd_pic16.c: 178:         TRISB &= 0x0f;
  5381  0CAE  300F               	movlw	15
  5382  0CAF  00BE               	movwf	??_WriteCmdXLCD
  5383  0CB0  083E               	movf	??_WriteCmdXLCD,w
  5384  0CB1  1683               	bsf	3,5	;RP0=1, select bank1
  5385  0CB2  1303               	bcf	3,6	;RP1=0, select bank1
  5386  0CB3  0586               	andwf	6,f	;volatile
  5387                           
  5388                           ;lcd_pic16.c: 179:         PORTB &= 0x0f;
  5389  0CB4  300F               	movlw	15
  5390  0CB5  1283               	bcf	3,5	;RP0=0, select bank0
  5391  0CB6  1303               	bcf	3,6	;RP1=0, select bank0
  5392  0CB7  00BE               	movwf	??_WriteCmdXLCD
  5393  0CB8  083E               	movf	??_WriteCmdXLCD,w
  5394  0CB9  0586               	andwf	6,f	;volatile
  5395                           
  5396                           ;lcd_pic16.c: 180:         PORTB |= cmd&0xf0;
  5397  0CBA  0840               	movf	WriteCmdXLCD@cmd,w
  5398  0CBB  39F0               	andlw	240
  5399  0CBC  00BE               	movwf	??_WriteCmdXLCD
  5400  0CBD  083E               	movf	??_WriteCmdXLCD,w
  5401  0CBE  0486               	iorwf	6,f	;volatile
  5402                           
  5403                           ;lcd_pic16.c: 186:         PORTBbits.RB2 = 0;
  5404  0CBF  1106               	bcf	6,2	;volatile
  5405                           
  5406                           ;lcd_pic16.c: 187:         PORTBbits.RB1 = 0;
  5407  0CC0  1086               	bcf	6,1	;volatile
  5408                           
  5409                           ;lcd_pic16.c: 188:         DelayFor18TCY();
  5410  0CC1  120A  158A  20B1  120A  158A  	fcall	_DelayFor18TCY
  5411                           
  5412                           ;lcd_pic16.c: 189:         PORTBbits.RB3 = 1;
  5413  0CC6  1283               	bcf	3,5	;RP0=0, select bank0
  5414  0CC7  1303               	bcf	3,6	;RP1=0, select bank0
  5415  0CC8  1586               	bsf	6,3	;volatile
  5416                           
  5417                           ;lcd_pic16.c: 190:         DelayFor18TCY();
  5418  0CC9  120A  158A  20B1  120A  158A  	fcall	_DelayFor18TCY
  5419                           
  5420                           ;lcd_pic16.c: 191:         PORTBbits.RB3 = 0;
  5421  0CCE  1283               	bcf	3,5	;RP0=0, select bank0
  5422  0CCF  1303               	bcf	3,6	;RP1=0, select bank0
  5423  0CD0  1186               	bcf	6,3	;volatile
  5424                           
  5425                           ;lcd_pic16.c: 193:         PORTB &= 0x0f;
  5426  0CD1  300F               	movlw	15
  5427  0CD2  00BE               	movwf	??_WriteCmdXLCD
  5428  0CD3  083E               	movf	??_WriteCmdXLCD,w
  5429  0CD4  0586               	andwf	6,f	;volatile
  5430                           
  5431                           ;lcd_pic16.c: 194:         PORTB |= (cmd<<4)&0xf0;
  5432  0CD5  0840               	movf	WriteCmdXLCD@cmd,w
  5433  0CD6  00BE               	movwf	??_WriteCmdXLCD
  5434  0CD7  3003               	movlw	3
  5435  0CD8                     u1385:	
  5436  0CD8  1003               	clrc
  5437  0CD9  0DBE               	rlf	??_WriteCmdXLCD,f
  5438  0CDA  3EFF               	addlw	-1
  5439  0CDB  1D03               	skipz
  5440  0CDC  2CD8               	goto	u1385
  5441  0CDD  1003               	clrc
  5442  0CDE  0D3E               	rlf	??_WriteCmdXLCD,w
  5443  0CDF  39F0               	andlw	240
  5444  0CE0  00BF               	movwf	??_WriteCmdXLCD+1
  5445  0CE1  083F               	movf	??_WriteCmdXLCD+1,w
  5446  0CE2  0486               	iorwf	6,f	;volatile
  5447                           
  5448                           ;lcd_pic16.c: 199:         DelayFor18TCY();
  5449  0CE3  120A  158A  20B1  120A  158A  	fcall	_DelayFor18TCY
  5450                           
  5451                           ;lcd_pic16.c: 200:         PORTBbits.RB3 = 1;
  5452  0CE8  1283               	bcf	3,5	;RP0=0, select bank0
  5453  0CE9  1303               	bcf	3,6	;RP1=0, select bank0
  5454  0CEA  1586               	bsf	6,3	;volatile
  5455                           
  5456                           ;lcd_pic16.c: 201:         DelayFor18TCY();
  5457  0CEB  120A  158A  20B1   	fcall	_DelayFor18TCY
  5458                           
  5459                           ;lcd_pic16.c: 202:         PORTBbits.RB3 = 0;
  5460  0CEE  1283               	bcf	3,5	;RP0=0, select bank0
  5461  0CEF  1303               	bcf	3,6	;RP1=0, select bank0
  5462  0CF0  1186               	bcf	6,3	;volatile
  5463                           
  5464                           ;lcd_pic16.c: 204:         TRISB |= 0xf0;
  5465  0CF1  30F0               	movlw	240
  5466  0CF2  00BE               	movwf	??_WriteCmdXLCD
  5467  0CF3  083E               	movf	??_WriteCmdXLCD,w
  5468  0CF4  1683               	bsf	3,5	;RP0=1, select bank1
  5469  0CF5  1303               	bcf	3,6	;RP1=0, select bank1
  5470  0CF6  0486               	iorwf	6,f	;volatile
  5471  0CF7  0008               	return
  5472  0CF8                     __end_of_WriteCmdXLCD:	
  5473                           
  5474                           	psect	text26
  5475  07AE                     __ptext26:	
  5476 ;; *************** function _SetDDRamAddr *****************
  5477 ;; Defined at:
  5478 ;;		line 217 in file "lcd_pic16.c"
  5479 ;; Parameters:    Size  Location     Type
  5480 ;;  DDaddr          1    wreg     unsigned char 
  5481 ;; Auto vars:     Size  Location     Type
  5482 ;;  DDaddr          1   32[BANK0 ] unsigned char 
  5483 ;; Return value:  Size  Location     Type
  5484 ;;                  1    wreg      void 
  5485 ;; Registers used:
  5486 ;;		wreg, status,2, status,0, pclath, cstack
  5487 ;; Tracked objects:
  5488 ;;		On entry : 0/0
  5489 ;;		On exit  : 0/0
  5490 ;;		Unchanged: 0/0
  5491 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5492 ;;      Params:         0       0       0       0       0
  5493 ;;      Locals:         0       1       0       0       0
  5494 ;;      Temps:          0       2       0       0       0
  5495 ;;      Totals:         0       3       0       0       0
  5496 ;;Total ram usage:        3 bytes
  5497 ;; Hardware stack levels used:    1
  5498 ;; Hardware stack levels required when called:    6
  5499 ;; This function calls:
  5500 ;;		_DelayFor18TCY
  5501 ;; This function is called by:
  5502 ;;		_start
  5503 ;;		_setFrequency
  5504 ;;		_principalScreen
  5505 ;;		_lockingScreen
  5506 ;;		_OpenXLCD
  5507 ;; This function uses a non-reentrant model
  5508 ;;
  5509                           
  5510                           
  5511                           ;psect for function _SetDDRamAddr
  5512  07AE                     _SetDDRamAddr:	
  5513                           
  5514                           ;incstack = 0
  5515                           ; Regs used in _SetDDRamAddr: [wreg+status,2+status,0+pclath+cstack]
  5516                           ;SetDDRamAddr@DDaddr stored from wreg
  5517  07AE  1283               	bcf	3,5	;RP0=0, select bank0
  5518  07AF  1303               	bcf	3,6	;RP1=0, select bank0
  5519  07B0  00C0               	movwf	SetDDRamAddr@DDaddr
  5520                           
  5521                           ;lcd_pic16.c: 217: void SetDDRamAddr(unsigned char DDaddr);lcd_pic16.c: 218: {;lcd_pic16
      +                          .c: 232:         TRISB &= 0x0f;
  5522  07B1  300F               	movlw	15
  5523  07B2  00BE               	movwf	??_SetDDRamAddr
  5524  07B3  083E               	movf	??_SetDDRamAddr,w
  5525  07B4  1683               	bsf	3,5	;RP0=1, select bank1
  5526  07B5  1303               	bcf	3,6	;RP1=0, select bank1
  5527  07B6  0586               	andwf	6,f	;volatile
  5528                           
  5529                           ;lcd_pic16.c: 233:         PORTB &= 0x0f;
  5530  07B7  300F               	movlw	15
  5531  07B8  1283               	bcf	3,5	;RP0=0, select bank0
  5532  07B9  1303               	bcf	3,6	;RP1=0, select bank0
  5533  07BA  00BE               	movwf	??_SetDDRamAddr
  5534  07BB  083E               	movf	??_SetDDRamAddr,w
  5535  07BC  0586               	andwf	6,f	;volatile
  5536                           
  5537                           ;lcd_pic16.c: 234:         PORTB |= ((DDaddr | 0b10000000) & 0xf0);
  5538  07BD  0840               	movf	SetDDRamAddr@DDaddr,w
  5539  07BE  3880               	iorlw	128
  5540  07BF  39F0               	andlw	240
  5541  07C0  00BE               	movwf	??_SetDDRamAddr
  5542  07C1  083E               	movf	??_SetDDRamAddr,w
  5543  07C2  0486               	iorwf	6,f	;volatile
  5544                           
  5545                           ;lcd_pic16.c: 240:         PORTBbits.RB2 = 0;
  5546  07C3  1106               	bcf	6,2	;volatile
  5547                           
  5548                           ;lcd_pic16.c: 241:         PORTBbits.RB1 = 0;
  5549  07C4  1086               	bcf	6,1	;volatile
  5550                           
  5551                           ;lcd_pic16.c: 242:         DelayFor18TCY();
  5552  07C5  120A  158A  20B1  120A  118A  	fcall	_DelayFor18TCY
  5553                           
  5554                           ;lcd_pic16.c: 243:         PORTBbits.RB3 = 1;
  5555  07CA  1283               	bcf	3,5	;RP0=0, select bank0
  5556  07CB  1303               	bcf	3,6	;RP1=0, select bank0
  5557  07CC  1586               	bsf	6,3	;volatile
  5558                           
  5559                           ;lcd_pic16.c: 244:         DelayFor18TCY();
  5560  07CD  120A  158A  20B1  120A  118A  	fcall	_DelayFor18TCY
  5561                           
  5562                           ;lcd_pic16.c: 245:         PORTBbits.RB3 = 0;
  5563  07D2  1283               	bcf	3,5	;RP0=0, select bank0
  5564  07D3  1303               	bcf	3,6	;RP1=0, select bank0
  5565  07D4  1186               	bcf	6,3	;volatile
  5566                           
  5567                           ;lcd_pic16.c: 247:         PORTB &= 0x0f;
  5568  07D5  300F               	movlw	15
  5569  07D6  00BE               	movwf	??_SetDDRamAddr
  5570  07D7  083E               	movf	??_SetDDRamAddr,w
  5571  07D8  0586               	andwf	6,f	;volatile
  5572                           
  5573                           ;lcd_pic16.c: 248:         PORTB |= ((DDaddr<<4)&0xf0);
  5574  07D9  0840               	movf	SetDDRamAddr@DDaddr,w
  5575  07DA  00BE               	movwf	??_SetDDRamAddr
  5576  07DB  3003               	movlw	3
  5577  07DC                     u1375:	
  5578  07DC  1003               	clrc
  5579  07DD  0DBE               	rlf	??_SetDDRamAddr,f
  5580  07DE  3EFF               	addlw	-1
  5581  07DF  1D03               	skipz
  5582  07E0  2FDC               	goto	u1375
  5583  07E1  1003               	clrc
  5584  07E2  0D3E               	rlf	??_SetDDRamAddr,w
  5585  07E3  39F0               	andlw	240
  5586  07E4  00BF               	movwf	??_SetDDRamAddr+1
  5587  07E5  083F               	movf	??_SetDDRamAddr+1,w
  5588  07E6  0486               	iorwf	6,f	;volatile
  5589                           
  5590                           ;lcd_pic16.c: 253:         DelayFor18TCY();
  5591  07E7  120A  158A  20B1  120A  118A  	fcall	_DelayFor18TCY
  5592                           
  5593                           ;lcd_pic16.c: 254:         PORTBbits.RB3 = 1;
  5594  07EC  1283               	bcf	3,5	;RP0=0, select bank0
  5595  07ED  1303               	bcf	3,6	;RP1=0, select bank0
  5596  07EE  1586               	bsf	6,3	;volatile
  5597                           
  5598                           ;lcd_pic16.c: 255:         DelayFor18TCY();
  5599  07EF  120A  158A  20B1   	fcall	_DelayFor18TCY
  5600                           
  5601                           ;lcd_pic16.c: 256:         PORTBbits.RB3 = 0;
  5602  07F2  1283               	bcf	3,5	;RP0=0, select bank0
  5603  07F3  1303               	bcf	3,6	;RP1=0, select bank0
  5604  07F4  1186               	bcf	6,3	;volatile
  5605                           
  5606                           ;lcd_pic16.c: 258:         TRISB |= 0xf0;
  5607  07F5  30F0               	movlw	240
  5608  07F6  00BE               	movwf	??_SetDDRamAddr
  5609  07F7  083E               	movf	??_SetDDRamAddr,w
  5610  07F8  1683               	bsf	3,5	;RP0=1, select bank1
  5611  07F9  1303               	bcf	3,6	;RP1=0, select bank1
  5612  07FA  0486               	iorwf	6,f	;volatile
  5613  07FB  0008               	return
  5614  07FC                     __end_of_SetDDRamAddr:	
  5615                           
  5616                           	psect	text27
  5617  08B1                     __ptext27:	
  5618 ;; *************** function _DelayFor18TCY *****************
  5619 ;; Defined at:
  5620 ;;		line 22 in file "lcd_pic16.c"
  5621 ;; Parameters:    Size  Location     Type
  5622 ;;		None
  5623 ;; Auto vars:     Size  Location     Type
  5624 ;;		None
  5625 ;; Return value:  Size  Location     Type
  5626 ;;                  1    wreg      void 
  5627 ;; Registers used:
  5628 ;;		wreg
  5629 ;; Tracked objects:
  5630 ;;		On entry : 0/0
  5631 ;;		On exit  : 0/0
  5632 ;;		Unchanged: 0/0
  5633 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5634 ;;      Params:         0       0       0       0       0
  5635 ;;      Locals:         0       0       0       0       0
  5636 ;;      Temps:          0       1       0       0       0
  5637 ;;      Totals:         0       1       0       0       0
  5638 ;;Total ram usage:        1 bytes
  5639 ;; Hardware stack levels used:    1
  5640 ;; Hardware stack levels required when called:    5
  5641 ;; This function calls:
  5642 ;;		Nothing
  5643 ;; This function is called by:
  5644 ;;		_WriteDataXLCD
  5645 ;;		_WriteCmdXLCD
  5646 ;;		_SetDDRamAddr
  5647 ;;		_SetCGRamAddr
  5648 ;;		_ReadDataXLCD
  5649 ;;		_ReadAddrXLCD
  5650 ;; This function uses a non-reentrant model
  5651 ;;
  5652                           
  5653                           
  5654                           ;psect for function _DelayFor18TCY
  5655  08B1                     _DelayFor18TCY:	
  5656                           
  5657                           ;lcd_pic16.c: 24:    _delay((unsigned long)((18)*(4000000/4000000.0)));
  5658                           
  5659                           ;incstack = 0
  5660 ;; hardware stack exceeded
  5661                           ; Regs used in _DelayFor18TCY: [wreg]
  5662  08B1  3005               	movlw	5
  5663  08B2  1283               	bcf	3,5	;RP0=0, select bank0
  5664  08B3  1303               	bcf	3,6	;RP1=0, select bank0
  5665  08B4  00BD               	movwf	??_DelayFor18TCY
  5666  08B5                     u3667:	
  5667  08B5  0BBD               	decfsz	??_DelayFor18TCY,f
  5668  08B6  28B5               	goto	u3667
  5669  08B7  0008               	return
  5670  08B8                     __end_of_DelayFor18TCY:	
  5671                           
  5672                           	psect	text28
  5673  08D3                     __ptext28:	
  5674 ;; *************** function _DelayPORXLCD *****************
  5675 ;; Defined at:
  5676 ;;		line 27 in file "lcd_pic16.c"
  5677 ;; Parameters:    Size  Location     Type
  5678 ;;		None
  5679 ;; Auto vars:     Size  Location     Type
  5680 ;;		None
  5681 ;; Return value:  Size  Location     Type
  5682 ;;                  1    wreg      void 
  5683 ;; Registers used:
  5684 ;;		wreg
  5685 ;; Tracked objects:
  5686 ;;		On entry : 0/0
  5687 ;;		On exit  : 0/0
  5688 ;;		Unchanged: 0/0
  5689 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5690 ;;      Params:         0       0       0       0       0
  5691 ;;      Locals:         0       0       0       0       0
  5692 ;;      Temps:          0       2       0       0       0
  5693 ;;      Totals:         0       2       0       0       0
  5694 ;;Total ram usage:        2 bytes
  5695 ;; Hardware stack levels used:    1
  5696 ;; Hardware stack levels required when called:    5
  5697 ;; This function calls:
  5698 ;;		Nothing
  5699 ;; This function is called by:
  5700 ;;		_OpenXLCD
  5701 ;; This function uses a non-reentrant model
  5702 ;;
  5703                           
  5704                           
  5705                           ;psect for function _DelayPORXLCD
  5706  08D3                     _DelayPORXLCD:	
  5707                           
  5708                           ;lcd_pic16.c: 29:    _delay((unsigned long)((20)*(4000000/4000.0)));
  5709                           
  5710                           ;incstack = 0
  5711 ;; hardware stack exceeded
  5712                           ; Regs used in _DelayPORXLCD: [wreg]
  5713  08D3  301A               	movlw	26
  5714  08D4  1283               	bcf	3,5	;RP0=0, select bank0
  5715  08D5  1303               	bcf	3,6	;RP1=0, select bank0
  5716  08D6  00BE               	movwf	??_DelayPORXLCD+1
  5717  08D7  30F7               	movlw	247
  5718  08D8  00BD               	movwf	??_DelayPORXLCD
  5719  08D9                     u3677:	
  5720  08D9  0BBD               	decfsz	??_DelayPORXLCD,f
  5721  08DA  28D9               	goto	u3677
  5722  08DB  0BBE               	decfsz	??_DelayPORXLCD+1,f
  5723  08DC  28D9               	goto	u3677
  5724  08DD  28DE               	nop2
  5725  08DE  0008               	return
  5726  08DF                     __end_of_DelayPORXLCD:	
  5727                           
  5728                           	psect	text29
  5729  08DF                     __ptext29:	
  5730 ;; *************** function _BusyXLCD *****************
  5731 ;; Defined at:
  5732 ;;		line 451 in file "lcd_pic16.c"
  5733 ;; Parameters:    Size  Location     Type
  5734 ;;		None
  5735 ;; Auto vars:     Size  Location     Type
  5736 ;;		None
  5737 ;; Return value:  Size  Location     Type
  5738 ;;                  1    wreg      unsigned char 
  5739 ;; Registers used:
  5740 ;;		wreg
  5741 ;; Tracked objects:
  5742 ;;		On entry : 0/0
  5743 ;;		On exit  : 0/0
  5744 ;;		Unchanged: 0/0
  5745 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5746 ;;      Params:         0       0       0       0       0
  5747 ;;      Locals:         0       0       0       0       0
  5748 ;;      Temps:          0       2       0       0       0
  5749 ;;      Totals:         0       2       0       0       0
  5750 ;;Total ram usage:        2 bytes
  5751 ;; Hardware stack levels used:    1
  5752 ;; Hardware stack levels required when called:    5
  5753 ;; This function calls:
  5754 ;;		Nothing
  5755 ;; This function is called by:
  5756 ;;		_OpenXLCD
  5757 ;;		_putsXLCD
  5758 ;;		_putrsXLCD
  5759 ;;		_SendCMDLCD
  5760 ;; This function uses a non-reentrant model
  5761 ;;
  5762                           
  5763                           
  5764                           ;psect for function _BusyXLCD
  5765  08DF                     _BusyXLCD:	
  5766                           
  5767                           ;lcd_pic16.c: 504:         _delay((unsigned long)((5)*(4000000/4000.0)));
  5768                           
  5769                           ;incstack = 0
  5770                           ; Regs used in _BusyXLCD: [wreg]
  5771  08DF  3007               	movlw	7
  5772  08E0  1283               	bcf	3,5	;RP0=0, select bank0
  5773  08E1  1303               	bcf	3,6	;RP1=0, select bank0
  5774  08E2  00BE               	movwf	??_BusyXLCD+1
  5775  08E3  307C               	movlw	124
  5776  08E4  00BD               	movwf	??_BusyXLCD
  5777  08E5                     u3687:	
  5778  08E5  0BBD               	decfsz	??_BusyXLCD,f
  5779  08E6  28E5               	goto	u3687
  5780  08E7  0BBE               	decfsz	??_BusyXLCD+1,f
  5781  08E8  28E5               	goto	u3687
  5782  08E9  0000               	nop
  5783                           
  5784                           ;lcd_pic16.c: 505:         return 0;
  5785  08EA  3000               	movlw	0
  5786  08EB  0008               	return
  5787  08EC                     __end_of_BusyXLCD:	
  5788                           
  5789                           	psect	text30
  5790  0A00                     __ptext30:	
  5791 ;; *************** function _inter *****************
  5792 ;; Defined at:
  5793 ;;		line 122 in file "main.c"
  5794 ;; Parameters:    Size  Location     Type
  5795 ;;		None
  5796 ;; Auto vars:     Size  Location     Type
  5797 ;;		None
  5798 ;; Return value:  Size  Location     Type
  5799 ;;                  1    wreg      void 
  5800 ;; Registers used:
  5801 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5802 ;; Tracked objects:
  5803 ;;		On entry : 0/0
  5804 ;;		On exit  : 0/0
  5805 ;;		Unchanged: 0/0
  5806 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5807 ;;      Params:         0       0       0       0       0
  5808 ;;      Locals:         0       0       0       0       0
  5809 ;;      Temps:          0       5       0       0       0
  5810 ;;      Totals:         0       5       0       0       0
  5811 ;;Total ram usage:        5 bytes
  5812 ;; Hardware stack levels used:    1
  5813 ;; Hardware stack levels required when called:    4
  5814 ;; This function calls:
  5815 ;;		_time
  5816 ;;		_updateLCD
  5817 ;; This function is called by:
  5818 ;;		Interrupt level 1
  5819 ;; This function uses a non-reentrant model
  5820 ;;
  5821                           
  5822                           
  5823                           ;psect for function _inter
  5824  0A00                     _inter:	
  5825                           
  5826                           ;main.c: 124:     INTCONbits.GIE = 0;
  5827  0A00  138B               	bcf	11,7	;volatile
  5828                           
  5829                           ;main.c: 126:     if(PIR1bits.TMR1IF == 1){
  5830  0A01  1C0C               	btfss	12,0	;volatile
  5831  0A02  2A18               	goto	i1l3437
  5832                           
  5833                           ;main.c: 127:         TMR1H = prTmr1H;
  5834  0A03  084B               	movf	_prTmr1H,w
  5835  0A04  008F               	movwf	15	;volatile
  5836                           
  5837                           ;main.c: 128:         TMR1L = prTmr1L;
  5838  0A05  084C               	movf	_prTmr1L,w
  5839  0A06  008E               	movwf	14	;volatile
  5840                           
  5841                           ;main.c: 129:         cntTmr1++;
  5842  0A07  3001               	movlw	1
  5843  0A08  00B8               	movwf	??_inter
  5844  0A09  0838               	movf	??_inter,w
  5845  0A0A  07D2               	addwf	_cntTmr1,f
  5846                           
  5847                           ;main.c: 130:         time();
  5848  0A0B  120A  158A  2381  120A  158A  	fcall	_time
  5849                           
  5850                           ;main.c: 131:         updateLCD();
  5851  0A10  120A  158A  2646  120A  158A  	fcall	_updateLCD
  5852                           
  5853                           ;main.c: 132:         PIR1bits.TMR1IF = 0;
  5854  0A15  1283               	bcf	3,5	;RP0=0, select bank0
  5855  0A16  1303               	bcf	3,6	;RP1=0, select bank0
  5856  0A17  100C               	bcf	12,0	;volatile
  5857  0A18                     i1l3437:	
  5858                           
  5859                           ;main.c: 134:     INTCONbits.GIE = 1;
  5860  0A18  178B               	bsf	11,7	;volatile
  5861  0A19  083C               	movf	??_inter+4,w
  5862  0A1A  00FF               	movwf	127
  5863  0A1B  083B               	movf	??_inter+3,w
  5864  0A1C  008A               	movwf	10
  5865  0A1D  083A               	movf	??_inter+2,w
  5866  0A1E  0084               	movwf	4
  5867  0A1F  0E39               	swapf	(??_inter+1)^0,w
  5868  0A20  0083               	movwf	3
  5869  0A21  0EFE               	swapf	126,f
  5870  0A22  0E7E               	swapf	126,w
  5871  0A23  0009               	retfie
  5872  0A24                     __end_of_inter:	
  5873                           
  5874                           	psect	intentry
  5875  0004                     __pintentry:	
  5876                           ;incstack = 0
  5877 ;; hardware stack exceeded
  5878                           ; Regs used in _inter: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5879                           
  5880  0004                     interrupt_function:	
  5881  007E                     saved_w	set	btemp
  5882  0004  00FE               	movwf	btemp
  5883  0005  0E03               	swapf	3,w
  5884  0006  1283               	bcf	3,5	;RP0=0, select bank0
  5885  0007  1303               	bcf	3,6	;RP1=0, select bank0
  5886  0008  00B9               	movwf	??_inter+1
  5887  0009  0804               	movf	4,w
  5888  000A  00BA               	movwf	??_inter+2
  5889  000B  080A               	movf	10,w
  5890  000C  00BB               	movwf	??_inter+3
  5891  000D  087F               	movf	btemp+1,w
  5892  000E  00BC               	movwf	??_inter+4
  5893  000F  120A  158A  2A00   	ljmp	_inter
  5894                           
  5895                           	psect	text31
  5896  0E46                     __ptext31:	
  5897 ;; *************** function _updateLCD *****************
  5898 ;; Defined at:
  5899 ;;		line 14 in file "lcd.c"
  5900 ;; Parameters:    Size  Location     Type
  5901 ;;		None
  5902 ;; Auto vars:     Size  Location     Type
  5903 ;;  integ           1   23[BANK0 ] unsigned char 
  5904 ;;  decim           1   22[BANK0 ] unsigned char 
  5905 ;; Return value:  Size  Location     Type
  5906 ;;                  1    wreg      void 
  5907 ;; Registers used:
  5908 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5909 ;; Tracked objects:
  5910 ;;		On entry : 0/0
  5911 ;;		On exit  : 0/0
  5912 ;;		Unchanged: 0/0
  5913 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5914 ;;      Params:         0       0       0       0       0
  5915 ;;      Locals:         0       2       0       0       0
  5916 ;;      Temps:          0       5       0       0       0
  5917 ;;      Totals:         0       7       0       0       0
  5918 ;;Total ram usage:        7 bytes
  5919 ;; Hardware stack levels used:    1
  5920 ;; Hardware stack levels required when called:    3
  5921 ;; This function calls:
  5922 ;;		i1_SetDDRamAddr
  5923 ;;		i1___lwdiv
  5924 ;;		i1___lwmod
  5925 ;;		i1_putsXLCD
  5926 ;;		i1_sprintf
  5927 ;; This function is called by:
  5928 ;;		_inter
  5929 ;; This function uses a non-reentrant model
  5930 ;;
  5931                           
  5932                           
  5933                           ;psect for function _updateLCD
  5934  0E46                     _updateLCD:	
  5935                           
  5936                           ;lcd.c: 15:     if(isOnConfig){
  5937                           
  5938                           ;incstack = 0
  5939 ;; hardware stack exceeded
  5940                           ; Regs used in _updateLCD: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5941  0E46  1283               	bcf	3,5	;RP0=0, select bank0
  5942  0E47  1303               	bcf	3,6	;RP1=0, select bank0
  5943  0E48  084E               	movf	_isOnConfig,w
  5944  0E49  1903               	btfsc	3,2
  5945  0E4A  0008               	return
  5946                           
  5947                           ;lcd.c: 16:         unsigned char decim = frequency % 10;
  5948  0E4B  300A               	movlw	10
  5949  0E4C  00F8               	movwf	i1___lwmod@divisor
  5950  0E4D  3000               	movlw	0
  5951  0E4E  00F9               	movwf	i1___lwmod@divisor+1
  5952  0E4F  0845               	movf	_frequency+1,w
  5953  0E50  00FB               	movwf	i1___lwmod@dividend+1
  5954  0E51  0844               	movf	_frequency,w
  5955  0E52  00FA               	movwf	i1___lwmod@dividend
  5956  0E53  120A  158A  22D3  120A  158A  	fcall	i1___lwmod
  5957  0E58  0878               	movf	?i1___lwmod,w
  5958  0E59  1283               	bcf	3,5	;RP0=0, select bank0
  5959  0E5A  1303               	bcf	3,6	;RP1=0, select bank0
  5960  0E5B  00B1               	movwf	??_updateLCD
  5961  0E5C  0831               	movf	??_updateLCD,w
  5962  0E5D  00B6               	movwf	updateLCD@decim
  5963                           
  5964                           ;lcd.c: 17:         unsigned char integ = frequency / 10;
  5965  0E5E  300A               	movlw	10
  5966  0E5F  00F0               	movwf	i1___lwdiv@divisor
  5967  0E60  3000               	movlw	0
  5968  0E61  00F1               	movwf	i1___lwdiv@divisor+1
  5969  0E62  0845               	movf	_frequency+1,w
  5970  0E63  00F3               	movwf	i1___lwdiv@dividend+1
  5971  0E64  0844               	movf	_frequency,w
  5972  0E65  00F2               	movwf	i1___lwdiv@dividend
  5973  0E66  120A  158A  2305  120A  158A  	fcall	i1___lwdiv
  5974  0E6B  0870               	movf	?i1___lwdiv,w
  5975  0E6C  1283               	bcf	3,5	;RP0=0, select bank0
  5976  0E6D  1303               	bcf	3,6	;RP1=0, select bank0
  5977  0E6E  00B1               	movwf	??_updateLCD
  5978  0E6F  0831               	movf	??_updateLCD,w
  5979  0E70  00B7               	movwf	updateLCD@integ
  5980                           
  5981                           ;lcd.c: 18:         sprintf(lineTwo,"FREQ.  %3d.%d MHz",integ, decim);
  5982  0E71  300F               	movlw	(low ((STR_9-__stringbase)| (0+32768)))& (0+255)
  5983  0E72  00B1               	movwf	??_updateLCD
  5984  0E73  0831               	movf	??_updateLCD,w
  5985  0E74  00A0               	movwf	i1sprintf@f
  5986  0E75  0837               	movf	updateLCD@integ,w
  5987  0E76  00B2               	movwf	??_updateLCD+1
  5988  0E77  01B3               	clrf	??_updateLCD+2
  5989  0E78  0832               	movf	??_updateLCD+1,w
  5990  0E79  00A1               	movwf	?i1_sprintf+1
  5991  0E7A  0833               	movf	??_updateLCD+2,w
  5992  0E7B  00A2               	movwf	?i1_sprintf+2
  5993  0E7C  0836               	movf	updateLCD@decim,w
  5994  0E7D  00B4               	movwf	??_updateLCD+3
  5995  0E7E  01B5               	clrf	??_updateLCD+4
  5996  0E7F  0834               	movf	??_updateLCD+3,w
  5997  0E80  00A3               	movwf	?i1_sprintf+3
  5998  0E81  0835               	movf	??_updateLCD+4,w
  5999  0E82  00A4               	movwf	?i1_sprintf+4
  6000  0E83  30A1               	movlw	(low (_lineTwo| 0))& (0+255)
  6001  0E84  120A  118A  21BB  120A  158A  	fcall	i1_sprintf
  6002                           
  6003                           ;lcd.c: 19:         SetDDRamAddr(0x40);
  6004  0E89  3040               	movlw	64
  6005  0E8A  120A  158A  245F  120A  158A  	fcall	i1_SetDDRamAddr
  6006                           
  6007                           ;lcd.c: 20:         putsXLCD(lineTwo);
  6008  0E8F  30A1               	movlw	(low (_lineTwo| 0))& (0+255)
  6009  0E90  120A  158A  215F  120A  158A  	fcall	i1_putsXLCD
  6010                           
  6011                           ;lcd.c: 21:         SetDDRamAddr(0x00);
  6012  0E95  3000               	movlw	0
  6013  0E96  120A  158A  245F  120A  158A  	fcall	i1_SetDDRamAddr
  6014                           
  6015                           ;lcd.c: 22:         putsXLCD(lineOne);
  6016  0E9B  30B2               	movlw	(low (_lineOne| 0))& (0+255)
  6017  0E9C  120A  158A  215F   	fcall	i1_putsXLCD
  6018  0E9F  0008               	return
  6019  0EA0                     __end_of_updateLCD:	
  6020                           
  6021                           	psect	text32
  6022  01BB                     __ptext32:	
  6023 ;; *************** function i1_sprintf *****************
  6024 ;; Defined at:
  6025 ;;		line 500 in file "/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt.c"
  6026 ;; Parameters:    Size  Location     Type
  6027 ;;  sp              1    wreg     PTR unsigned char 
  6028 ;;		 -> lineTwo(17), lineOne(17), 
  6029 ;;  f               1    0[BANK0 ] PTR const unsigned char 
  6030 ;;		 -> STR_12(18), STR_11(17), STR_10(17), STR_9(18), 
  6031 ;;		 -> STR_7(17), STR_6(17), STR_5(17), STR_4(17), 
  6032 ;;		 -> STR_3(17), STR_2(17), STR_1(17), 
  6033 ;; Auto vars:     Size  Location     Type
  6034 ;;  sp              1   13[BANK0 ] PTR unsigned char 
  6035 ;;		 -> lineTwo(17), lineOne(17), 
  6036 ;;  sprintf         4    0        struct .
  6037 ;;  sprintf         2   14[BANK0 ] int 
  6038 ;;  sprintf         2   11[BANK0 ] unsigned int 
  6039 ;;  sprintf         2    0        PTR const unsigned char 
  6040 ;;  sprintf         2    0        unsigned int 
  6041 ;;  sprintf         1   16[BANK0 ] unsigned char 
  6042 ;;  sprintf         1   10[BANK0 ] unsigned char 
  6043 ;;  sprintf         1    9[BANK0 ] char 
  6044 ;;  sprintf         1    8[BANK0 ] PTR void [1]
  6045 ;;		 -> ?i1_sprintf(2), ?_sprintf(2), 
  6046 ;; Return value:  Size  Location     Type
  6047 ;;                  2    0[BANK0 ] int 
  6048 ;; Registers used:
  6049 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  6050 ;; Tracked objects:
  6051 ;;		On entry : 0/0
  6052 ;;		On exit  : 0/0
  6053 ;;		Unchanged: 0/0
  6054 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6055 ;;      Params:         0       5       0       0       0
  6056 ;;      Locals:         0       9       0       0       0
  6057 ;;      Temps:          0       3       0       0       0
  6058 ;;      Totals:         0      17       0       0       0
  6059 ;;Total ram usage:       17 bytes
  6060 ;; Hardware stack levels used:    1
  6061 ;; Hardware stack levels required when called:    1
  6062 ;; This function calls:
  6063 ;;		i1___lwdiv
  6064 ;;		i1___lwmod
  6065 ;;		i1___wmul
  6066 ;;		i1_isdigit
  6067 ;; This function is called by:
  6068 ;;		_updateLCD
  6069 ;; This function uses a non-reentrant model
  6070 ;;
  6071                           
  6072                           
  6073                           ;psect for function i1_sprintf
  6074  01BB                     i1_sprintf:	
  6075                           
  6076                           ;incstack = 0
  6077 ;; hardware stack exceeded
  6078                           ; Regs used in i1_sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  6079                           ;i1sprintf@sp stored from wreg
  6080  01BB  1283               	bcf	3,5	;RP0=0, select bank0
  6081  01BC  1303               	bcf	3,6	;RP1=0, select bank0
  6082  01BD  00AD               	movwf	i1sprintf@sp
  6083                           
  6084                           ;/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt.c: 500: sprintf(char * sp, const
      +                           char * f, ...);/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt.c: 501: {;/opt/mi
      +                          crochip/xc8/v2.05/pic/sources/c90/common/doprnt.c: 502:  va_list ap;;/opt/microchip/xc8/
      +                          v2.05/pic/sources/c90/common/doprnt.c: 507:  char c;;/opt/microchip/xc8/v2.05/pic/source
      +                          s/c90/common/doprnt.c: 509:  int width;;/opt/microchip/xc8/v2.05/pic/sources/c90/common/
      +                          doprnt.c: 516:  signed char prec;;/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt
      +                          .c: 520:  unsigned char flag;
  6085  01BE  3021               	movlw	(low ((?i1_sprintf| 0+1)))& (0+255)
  6086  01BF  00A5               	movwf	??i1_sprintf
  6087  01C0  0825               	movf	??i1_sprintf,w
  6088  01C1  00A8               	movwf	i1sprintf@ap
  6089  01C2                     i1l3099:	
  6090                           ;/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt.c: 548:  while((c = *f++)) {
  6091                           
  6092                           
  6093                           ;/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt.c: 548:  while((c = *f++)) {
  6094  01C2  3001               	movlw	1
  6095  01C3  07A0               	addwf	i1sprintf@f,f
  6096  01C4  30FF               	movlw	-1
  6097  01C5  0720               	addwf	i1sprintf@f,w
  6098  01C6  0084               	movwf	4
  6099  01C7  120A  118A  2700  120A  118A  	fcall	stringdir
  6100  01CC  00A5               	movwf	??i1_sprintf
  6101  01CD  0825               	movf	??i1_sprintf,w
  6102  01CE  00B0               	movwf	i1sprintf@c
  6103  01CF  0830               	movf	i1sprintf@c,w
  6104  01D0  1903               	btfsc	3,2
  6105  01D1  2B1E               	goto	i1l3101
  6106                           
  6107                           ;/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt.c: 550:   if(c != '%')
  6108  01D2  3025               	movlw	37
  6109  01D3  0630               	xorwf	i1sprintf@c,w
  6110  01D4  1903               	btfsc	3,2
  6111  01D5  29E2               	goto	i1l3025
  6112                           
  6113                           ;/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt.c: 552:   {;/opt/microchip/xc8/v
      +                          2.05/pic/sources/c90/common/doprnt.c: 553:    ((*sp++ = (c)));
  6114  01D6  0830               	movf	i1sprintf@c,w
  6115  01D7  00A5               	movwf	??i1_sprintf
  6116  01D8  082D               	movf	i1sprintf@sp,w
  6117  01D9  0084               	movwf	4
  6118  01DA  0825               	movf	??i1_sprintf,w
  6119  01DB  1383               	bcf	3,7	;select IRP bank0
  6120  01DC  0080               	movwf	0
  6121  01DD  3001               	movlw	1
  6122  01DE  00A5               	movwf	??i1_sprintf
  6123  01DF  0825               	movf	??i1_sprintf,w
  6124  01E0  07AD               	addwf	i1sprintf@sp,f
  6125                           
  6126                           ;/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt.c: 554:    continue;
  6127  01E1  29C2               	goto	i1l3099
  6128  01E2                     i1l3025:	
  6129                           
  6130                           ;/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt.c: 558:   width = 0;
  6131  01E2  01AE               	clrf	i1sprintf@width
  6132  01E3  01AF               	clrf	i1sprintf@width+1
  6133                           
  6134                           ;/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt.c: 560:   flag = 0;
  6135  01E4  01AA               	clrf	i1sprintf@flag
  6136                           
  6137                           ;/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt.c: 609:   if(isdigit((unsigned)*
      +                          f)) {
  6138  01E5  0820               	movf	i1sprintf@f,w
  6139  01E6  0084               	movwf	4
  6140  01E7  120A  118A  2700  120A  118A  	fcall	stringdir
  6141  01EC  120A  158A  20F9  120A  118A  	fcall	i1_isdigit
  6142  01F1  1C03               	btfss	3,0
  6143  01F2  2A31               	goto	i1l3041
  6144                           
  6145                           ;/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt.c: 610:    width = 0;
  6146  01F3  1283               	bcf	3,5	;RP0=0, select bank0
  6147  01F4  1303               	bcf	3,6	;RP1=0, select bank0
  6148  01F5  01AE               	clrf	i1sprintf@width
  6149  01F6  01AF               	clrf	i1sprintf@width+1
  6150  01F7                     i1l3031:	
  6151                           
  6152                           ;/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt.c: 612:     width *= 10;
  6153  01F7  300A               	movlw	10
  6154  01F8  00F0               	movwf	i1___wmul@multiplier
  6155  01F9  3000               	movlw	0
  6156  01FA  00F1               	movwf	i1___wmul@multiplier+1
  6157  01FB  1283               	bcf	3,5	;RP0=0, select bank0
  6158  01FC  1303               	bcf	3,6	;RP1=0, select bank0
  6159  01FD  082F               	movf	i1sprintf@width+1,w
  6160  01FE  00F3               	movwf	i1___wmul@multiplicand+1
  6161  01FF  082E               	movf	i1sprintf@width,w
  6162  0200  00F2               	movwf	i1___wmul@multiplicand
  6163  0201  120A  158A  2199  120A  118A  	fcall	i1___wmul
  6164  0206  0871               	movf	?i1___wmul+1,w
  6165  0207  1283               	bcf	3,5	;RP0=0, select bank0
  6166  0208  1303               	bcf	3,6	;RP1=0, select bank0
  6167  0209  00AF               	movwf	i1sprintf@width+1
  6168  020A  0870               	movf	?i1___wmul,w
  6169  020B  00AE               	movwf	i1sprintf@width
  6170                           
  6171                           ;/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt.c: 613:        width += *f++ - '
      +                          0';
  6172  020C  0820               	movf	i1sprintf@f,w
  6173  020D  0084               	movwf	4
  6174  020E  120A  118A  2700  120A  118A  	fcall	stringdir
  6175  0213  3ED0               	addlw	208
  6176  0214  00A5               	movwf	??i1_sprintf
  6177  0215  30FF               	movlw	255
  6178  0216  1803               	skipnc
  6179  0217  3000               	movlw	0
  6180  0218  00A6               	movwf	??i1_sprintf+1
  6181  0219  0825               	movf	??i1_sprintf,w
  6182  021A  07AE               	addwf	i1sprintf@width,f
  6183  021B  1803               	skipnc
  6184  021C  0AAF               	incf	i1sprintf@width+1,f
  6185  021D  0826               	movf	??i1_sprintf+1,w
  6186  021E  07AF               	addwf	i1sprintf@width+1,f
  6187  021F  3001               	movlw	1
  6188  0220  00A5               	movwf	??i1_sprintf
  6189  0221  0825               	movf	??i1_sprintf,w
  6190  0222  07A0               	addwf	i1sprintf@f,f
  6191                           
  6192                           ;/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt.c: 614:    } while(isdigit((unsi
      +                          gned)*f));
  6193  0223  0820               	movf	i1sprintf@f,w
  6194  0224  0084               	movwf	4
  6195  0225  120A  118A  2700  120A  118A  	fcall	stringdir
  6196  022A  120A  158A  20F9  120A  118A  	fcall	i1_isdigit
  6197  022F  1803               	btfsc	3,0
  6198  0230  29F7               	goto	i1l3031
  6199  0231                     i1l3041:	
  6200  0231  3001               	movlw	1
  6201  0232  1283               	bcf	3,5	;RP0=0, select bank0
  6202  0233  1303               	bcf	3,6	;RP1=0, select bank0
  6203  0234  07A0               	addwf	i1sprintf@f,f
  6204  0235  30FF               	movlw	-1
  6205  0236  0720               	addwf	i1sprintf@f,w
  6206  0237  0084               	movwf	4
  6207  0238  120A  118A  2700  120A  118A  	fcall	stringdir
  6208  023D  00B0               	movwf	i1sprintf@c
  6209  023E  00A5               	movwf	??i1_sprintf
  6210  023F  01A6               	clrf	??i1_sprintf+1
  6211                           
  6212                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6213                           ; Switch size 1, requested type "simple"
  6214                           ; Number of cases is 1, Range of values is 0 to 0
  6215                           ; switch strategies available:
  6216                           ; Name         Instructions Cycles
  6217                           ; simple_byte            4     3 (average)
  6218                           ; direct_byte           11     8 (fixed)
  6219                           ; jumptable            260     6 (fixed)
  6220                           ;	Chosen strategy is simple_byte
  6221  0240  0826               	movf	??i1_sprintf+1,w
  6222  0241  3A00               	xorlw	0	; case 0
  6223  0242  1903               	skipnz
  6224  0243  2A45               	goto	i1l4091
  6225  0244  29C2               	goto	i1l3099
  6226  0245                     i1l4091:	
  6227                           
  6228                           ; Switch size 1, requested type "simple"
  6229                           ; Number of cases is 3, Range of values is 0 to 105
  6230                           ; switch strategies available:
  6231                           ; Name         Instructions Cycles
  6232                           ; simple_byte           10     6 (average)
  6233                           ; jumptable            260     6 (fixed)
  6234                           ;	Chosen strategy is simple_byte
  6235  0245  0825               	movf	??i1_sprintf,w
  6236  0246  3A00               	xorlw	0	; case 0
  6237  0247  1903               	skipnz
  6238  0248  2B1E               	goto	i1l3101
  6239  0249  3A64               	xorlw	100	; case 100
  6240  024A  1903               	skipnz
  6241  024B  2A50               	goto	i1l3043
  6242  024C  3A0D               	xorlw	13	; case 105
  6243  024D  1903               	skipnz
  6244  024E  2A50               	goto	i1l3043
  6245  024F  29C2               	goto	i1l3099
  6246  0250                     i1l3043:	
  6247                           
  6248                           ;/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt.c: 1272:   {;/opt/microchip/xc8/
      +                          v2.05/pic/sources/c90/common/doprnt.c: 1278:     val = (int)(*(int *)__va_arg((*(int **)
      +                          ap), (int)0));
  6249  0250  0828               	movf	i1sprintf@ap,w
  6250  0251  0084               	movwf	4
  6251  0252  1383               	bcf	3,7	;select IRP bank0
  6252  0253  0800               	movf	0,w
  6253  0254  00AB               	movwf	i1sprintf@val
  6254  0255  0A84               	incf	4,f
  6255  0256  0800               	movf	0,w
  6256  0257  00AC               	movwf	i1sprintf@val+1
  6257  0258  3002               	movlw	2
  6258  0259  00A5               	movwf	??i1_sprintf
  6259  025A  0825               	movf	??i1_sprintf,w
  6260  025B  07A8               	addwf	i1sprintf@ap,f
  6261                           
  6262                           ;/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt.c: 1280:    if((int)val < 0) {
  6263  025C  1FAC               	btfss	i1sprintf@val+1,7
  6264  025D  2A67               	goto	i1l3053
  6265                           
  6266                           ;/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt.c: 1281:     flag |= 0x03;
  6267  025E  3003               	movlw	3
  6268  025F  00A5               	movwf	??i1_sprintf
  6269  0260  0825               	movf	??i1_sprintf,w
  6270  0261  04AA               	iorwf	i1sprintf@flag,f
  6271                           
  6272                           ;/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt.c: 1282:     val = -val;
  6273  0262  09AB               	comf	i1sprintf@val,f
  6274  0263  09AC               	comf	i1sprintf@val+1,f
  6275  0264  0AAB               	incf	i1sprintf@val,f
  6276  0265  1903               	skipnz
  6277  0266  0AAC               	incf	i1sprintf@val+1,f
  6278  0267                     i1l3053:	
  6279                           
  6280                           ;/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt.c: 1285:   };/opt/microchip/xc8/
      +                          v2.05/pic/sources/c90/common/doprnt.c: 1324:    for(c = 1 ; c != sizeof dpowers/sizeof d
      +                          powers[0] ; c++)
  6281  0267  01B0               	clrf	i1sprintf@c
  6282  0268  0AB0               	incf	i1sprintf@c,f
  6283  0269                     i1l3059:	
  6284                           
  6285                           ;/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt.c: 1325:     if(val < dpowers[c]
      +                          )
  6286  0269  0830               	movf	i1sprintf@c,w
  6287  026A  00A5               	movwf	??i1_sprintf
  6288  026B  0725               	addwf	??i1_sprintf,w
  6289  026C  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  6290  026D  0084               	movwf	4
  6291  026E  120A  118A  2700  120A  118A  	fcall	stringdir
  6292  0273  00A6               	movwf	??i1_sprintf+1
  6293  0274  120A  118A  2700  120A  118A  	fcall	stringdir
  6294  0279  00A7               	movwf	??i1_sprintf+2
  6295  027A  0827               	movf	??i1_sprintf+2,w
  6296  027B  022C               	subwf	i1sprintf@val+1,w
  6297  027C  1D03               	skipz
  6298  027D  2A80               	goto	u222_25
  6299  027E  0826               	movf	??i1_sprintf+1,w
  6300  027F  022B               	subwf	i1sprintf@val,w
  6301  0280                     u222_25:	
  6302  0280  1C03               	btfss	3,0
  6303  0281  2A8A               	goto	i1l3065
  6304  0282  3001               	movlw	1
  6305  0283  00A5               	movwf	??i1_sprintf
  6306  0284  0825               	movf	??i1_sprintf,w
  6307  0285  07B0               	addwf	i1sprintf@c,f
  6308  0286  3005               	movlw	5
  6309  0287  0630               	xorwf	i1sprintf@c,w
  6310  0288  1D03               	btfss	3,2
  6311  0289  2A69               	goto	i1l3059
  6312  028A                     i1l3065:	
  6313                           
  6314                           ;/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt.c: 1364:   if(width && flag & 0x
      +                          03)
  6315  028A  082E               	movf	i1sprintf@width,w
  6316  028B  042F               	iorwf	i1sprintf@width+1,w
  6317  028C  1903               	btfsc	3,2
  6318  028D  2A98               	goto	i1l651
  6319  028E  082A               	movf	i1sprintf@flag,w
  6320  028F  3903               	andlw	3
  6321  0290  1903               	btfsc	3,2
  6322  0291  2A98               	goto	i1l651
  6323                           
  6324                           ;/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt.c: 1365:    width--;
  6325  0292  30FF               	movlw	255
  6326  0293  07AE               	addwf	i1sprintf@width,f
  6327  0294  1803               	skipnc
  6328  0295  0AAF               	incf	i1sprintf@width+1,f
  6329  0296  30FF               	movlw	255
  6330  0297  07AF               	addwf	i1sprintf@width+1,f
  6331  0298                     i1l651:	
  6332                           
  6333                           ;/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt.c: 1400:   if(width > c)
  6334  0298  082F               	movf	i1sprintf@width+1,w
  6335  0299  3A80               	xorlw	128
  6336  029A  3C80               	sublw	128
  6337  029B  1D03               	skipz
  6338  029C  2A9F               	goto	u226_25
  6339  029D  082E               	movf	i1sprintf@width,w
  6340  029E  0230               	subwf	i1sprintf@c,w
  6341  029F                     u226_25:	
  6342  029F  1803               	skipnc
  6343  02A0  2AAD               	goto	i1l3073
  6344                           
  6345                           ;/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt.c: 1401:    width -= c;
  6346  02A1  1283               	bcf	3,5	;RP0=0, select bank0
  6347  02A2  1303               	bcf	3,6	;RP1=0, select bank0
  6348  02A3  0830               	movf	i1sprintf@c,w
  6349  02A4  00A5               	movwf	??i1_sprintf
  6350  02A5  01A6               	clrf	??i1_sprintf+1
  6351  02A6  0825               	movf	??i1_sprintf,w
  6352  02A7  02AE               	subwf	i1sprintf@width,f
  6353  02A8  0826               	movf	??i1_sprintf+1,w
  6354  02A9  1C03               	skipc
  6355  02AA  03AF               	decf	i1sprintf@width+1,f
  6356  02AB  02AF               	subwf	i1sprintf@width+1,f
  6357  02AC  2AB1               	goto	i1l3075
  6358  02AD                     i1l3073:	
  6359                           
  6360                           ;/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt.c: 1403:    width = 0;
  6361  02AD  1283               	bcf	3,5	;RP0=0, select bank0
  6362  02AE  1303               	bcf	3,6	;RP1=0, select bank0
  6363  02AF  01AE               	clrf	i1sprintf@width
  6364  02B0  01AF               	clrf	i1sprintf@width+1
  6365  02B1                     i1l3075:	
  6366                           
  6367                           ;/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt.c: 1441:   {;/opt/microchip/xc8/
      +                          v2.05/pic/sources/c90/common/doprnt.c: 1443:    if(width
  6368  02B1  082E               	movf	i1sprintf@width,w
  6369  02B2  042F               	iorwf	i1sprintf@width+1,w
  6370  02B3  1903               	btfsc	3,2
  6371  02B4  2ACA               	goto	i1l3083
  6372  02B5                     i1l3077:	
  6373                           
  6374                           ;/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt.c: 1449:      ((*sp++ = (' ')));
  6375  02B5  3020               	movlw	32
  6376  02B6  00A5               	movwf	??i1_sprintf
  6377  02B7  082D               	movf	i1sprintf@sp,w
  6378  02B8  0084               	movwf	4
  6379  02B9  0825               	movf	??i1_sprintf,w
  6380  02BA  1383               	bcf	3,7	;select IRP bank0
  6381  02BB  0080               	movwf	0
  6382  02BC  3001               	movlw	1
  6383  02BD  00A5               	movwf	??i1_sprintf
  6384  02BE  0825               	movf	??i1_sprintf,w
  6385  02BF  07AD               	addwf	i1sprintf@sp,f
  6386  02C0  30FF               	movlw	255
  6387  02C1  07AE               	addwf	i1sprintf@width,f
  6388  02C2  1803               	skipnc
  6389  02C3  0AAF               	incf	i1sprintf@width+1,f
  6390  02C4  30FF               	movlw	255
  6391  02C5  07AF               	addwf	i1sprintf@width+1,f
  6392  02C6  082E               	movf	i1sprintf@width,w
  6393  02C7  042F               	iorwf	i1sprintf@width+1,w
  6394  02C8  1D03               	btfss	3,2
  6395  02C9  2AB5               	goto	i1l3077
  6396  02CA                     i1l3083:	
  6397                           
  6398                           ;/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt.c: 1457:    if(flag & 0x03)
  6399  02CA  082A               	movf	i1sprintf@flag,w
  6400  02CB  3903               	andlw	3
  6401  02CC  1903               	btfsc	3,2
  6402  02CD  2AD9               	goto	i1l3089
  6403                           
  6404                           ;/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt.c: 1458:     ((*sp++ = ('-')));
  6405  02CE  302D               	movlw	45
  6406  02CF  00A5               	movwf	??i1_sprintf
  6407  02D0  082D               	movf	i1sprintf@sp,w
  6408  02D1  0084               	movwf	4
  6409  02D2  0825               	movf	??i1_sprintf,w
  6410  02D3  1383               	bcf	3,7	;select IRP bank0
  6411  02D4  0080               	movwf	0
  6412  02D5  3001               	movlw	1
  6413  02D6  00A5               	movwf	??i1_sprintf
  6414  02D7  0825               	movf	??i1_sprintf,w
  6415  02D8  07AD               	addwf	i1sprintf@sp,f
  6416  02D9                     i1l3089:	
  6417                           
  6418                           ;/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt.c: 1488:   };/opt/microchip/xc8/
      +                          v2.05/pic/sources/c90/common/doprnt.c: 1491:   prec = c;
  6419  02D9  0830               	movf	i1sprintf@c,w
  6420  02DA  00A5               	movwf	??i1_sprintf
  6421  02DB  0825               	movf	??i1_sprintf,w
  6422  02DC  00A9               	movwf	i1sprintf@prec
  6423  02DD                     i1l3097:	
  6424                           ;/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt.c: 1493:   while(prec--) {
  6425                           
  6426                           
  6427                           ;/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt.c: 1493:   while(prec--) {
  6428  02DD  30FF               	movlw	255
  6429  02DE  00A5               	movwf	??i1_sprintf
  6430  02DF  0825               	movf	??i1_sprintf,w
  6431  02E0  07A9               	addwf	i1sprintf@prec,f
  6432  02E1  0A29               	incf	i1sprintf@prec,w
  6433  02E2  1903               	btfsc	3,2
  6434  02E3  29C2               	goto	i1l3099
  6435                           
  6436                           ;/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt.c: 1497:    {;/opt/microchip/xc8
      +                          /v2.05/pic/sources/c90/common/doprnt.c: 1508:     c = (val / dpowers[prec]) % 10 + '0';
  6437  02E4  300A               	movlw	10
  6438  02E5  00F8               	movwf	i1___lwmod@divisor
  6439  02E6  3000               	movlw	0
  6440  02E7  00F9               	movwf	i1___lwmod@divisor+1
  6441  02E8  0829               	movf	i1sprintf@prec,w
  6442  02E9  00A5               	movwf	??i1_sprintf
  6443  02EA  0725               	addwf	??i1_sprintf,w
  6444  02EB  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  6445  02EC  0084               	movwf	4
  6446  02ED  120A  118A  2700  120A  118A  	fcall	stringdir
  6447  02F2  00F0               	movwf	i1___lwdiv@divisor
  6448  02F3  120A  118A  2700  120A  118A  	fcall	stringdir
  6449  02F8  00F1               	movwf	i1___lwdiv@divisor+1
  6450  02F9  082C               	movf	i1sprintf@val+1,w
  6451  02FA  00F3               	movwf	i1___lwdiv@dividend+1
  6452  02FB  082B               	movf	i1sprintf@val,w
  6453  02FC  00F2               	movwf	i1___lwdiv@dividend
  6454  02FD  120A  158A  2305  120A  118A  	fcall	i1___lwdiv
  6455  0302  0871               	movf	?i1___lwdiv+1,w
  6456  0303  00FB               	movwf	i1___lwmod@dividend+1
  6457  0304  0870               	movf	?i1___lwdiv,w
  6458  0305  00FA               	movwf	i1___lwmod@dividend
  6459  0306  120A  158A  22D3  120A  118A  	fcall	i1___lwmod
  6460  030B  0878               	movf	?i1___lwmod,w
  6461  030C  3E30               	addlw	48
  6462  030D  1283               	bcf	3,5	;RP0=0, select bank0
  6463  030E  1303               	bcf	3,6	;RP1=0, select bank0
  6464  030F  00A6               	movwf	??i1_sprintf+1
  6465  0310  0826               	movf	??i1_sprintf+1,w
  6466  0311  00B0               	movwf	i1sprintf@c
  6467                           
  6468                           ;/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt.c: 1542:    };/opt/microchip/xc8
      +                          /v2.05/pic/sources/c90/common/doprnt.c: 1543:    ((*sp++ = (c)));
  6469  0312  0830               	movf	i1sprintf@c,w
  6470  0313  00A5               	movwf	??i1_sprintf
  6471  0314  082D               	movf	i1sprintf@sp,w
  6472  0315  0084               	movwf	4
  6473  0316  0825               	movf	??i1_sprintf,w
  6474  0317  1383               	bcf	3,7	;select IRP bank0
  6475  0318  0080               	movwf	0
  6476  0319  3001               	movlw	1
  6477  031A  00A5               	movwf	??i1_sprintf
  6478  031B  0825               	movf	??i1_sprintf,w
  6479  031C  07AD               	addwf	i1sprintf@sp,f
  6480  031D  2ADD               	goto	i1l3097
  6481  031E                     i1l3101:	
  6482                           
  6483                           ;/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt.c: 1557:  *sp = 0;
  6484  031E  082D               	movf	i1sprintf@sp,w
  6485  031F  0084               	movwf	4
  6486  0320  1383               	bcf	3,7	;select IRP bank0
  6487  0321  0180               	clrf	0
  6488  0322  0008               	return
  6489  0323                     __end_ofi1_sprintf:	
  6490                           
  6491                           	psect	text33
  6492  08F9                     __ptext33:	
  6493 ;; *************** function i1_isdigit *****************
  6494 ;; Defined at:
  6495 ;;		line 8 in file "/opt/microchip/xc8/v2.05/pic/sources/c90/common/isdigit.c"
  6496 ;; Parameters:    Size  Location     Type
  6497 ;;  c               1    wreg     unsigned char 
  6498 ;; Auto vars:     Size  Location     Type
  6499 ;;  c               1    1[COMMON] unsigned char 
  6500 ;; Return value:  Size  Location     Type
  6501 ;;		None               void
  6502 ;; Registers used:
  6503 ;;		wreg, status,2, status,0
  6504 ;; Tracked objects:
  6505 ;;		On entry : 0/0
  6506 ;;		On exit  : 0/0
  6507 ;;		Unchanged: 0/0
  6508 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6509 ;;      Params:         0       0       0       0       0
  6510 ;;      Locals:         2       0       0       0       0
  6511 ;;      Temps:          0       0       0       0       0
  6512 ;;      Totals:         2       0       0       0       0
  6513 ;;Total ram usage:        2 bytes
  6514 ;; Hardware stack levels used:    1
  6515 ;; This function calls:
  6516 ;;		Nothing
  6517 ;; This function is called by:
  6518 ;;		i1_sprintf
  6519 ;; This function uses a non-reentrant model
  6520 ;;
  6521                           
  6522                           
  6523                           ;psect for function i1_isdigit
  6524  08F9                     i1_isdigit:	
  6525                           
  6526                           ;incstack = 0
  6527 ;; hardware stack exceeded
  6528                           ; Regs used in i1_isdigit: [wreg+status,2+status,0]
  6529                           ;i1isdigit@c stored from wreg
  6530  08F9  00F1               	movwf	i1isdigit@c
  6531  08FA  01F0               	clrf	i1_isdigit$1104
  6532  08FB  303A               	movlw	58
  6533  08FC  0271               	subwf	i1isdigit@c,w
  6534  08FD  1803               	skipnc
  6535  08FE  2905               	goto	i1l2831
  6536  08FF  3030               	movlw	48
  6537  0900  0271               	subwf	i1isdigit@c,w
  6538  0901  1C03               	skipc
  6539  0902  2905               	goto	i1l2831
  6540  0903  01F0               	clrf	i1_isdigit$1104
  6541  0904  0AF0               	incf	i1_isdigit$1104,f
  6542  0905                     i1l2831:	
  6543  0905  0C70               	rrf	i1_isdigit$1104,w
  6544  0906  0008               	return
  6545  0907                     __end_ofi1_isdigit:	
  6546                           
  6547                           	psect	text34
  6548  0999                     __ptext34:	
  6549 ;; *************** function i1___wmul *****************
  6550 ;; Defined at:
  6551 ;;		line 15 in file "/opt/microchip/xc8/v2.05/pic/sources/c90/common/Umul16.c"
  6552 ;; Parameters:    Size  Location     Type
  6553 ;;  multiplier      2    0[COMMON] unsigned int 
  6554 ;;  multiplicand    2    2[COMMON] unsigned int 
  6555 ;; Auto vars:     Size  Location     Type
  6556 ;;  __wmul          2    4[COMMON] unsigned int 
  6557 ;; Return value:  Size  Location     Type
  6558 ;;                  2    0[COMMON] unsigned int 
  6559 ;; Registers used:
  6560 ;;		wreg, status,2, status,0
  6561 ;; Tracked objects:
  6562 ;;		On entry : 0/0
  6563 ;;		On exit  : 0/0
  6564 ;;		Unchanged: 0/0
  6565 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6566 ;;      Params:         4       0       0       0       0
  6567 ;;      Locals:         2       0       0       0       0
  6568 ;;      Temps:          0       0       0       0       0
  6569 ;;      Totals:         6       0       0       0       0
  6570 ;;Total ram usage:        6 bytes
  6571 ;; Hardware stack levels used:    1
  6572 ;; This function calls:
  6573 ;;		Nothing
  6574 ;; This function is called by:
  6575 ;;		i1_sprintf
  6576 ;; This function uses a non-reentrant model
  6577 ;;
  6578                           
  6579                           
  6580                           ;psect for function i1___wmul
  6581  0999                     i1___wmul:	
  6582                           
  6583                           ;incstack = 0
  6584 ;; hardware stack exceeded
  6585                           ; Regs used in i1___wmul: [wreg+status,2+status,0]
  6586  0999  01F4               	clrf	i1___wmul@product
  6587  099A  01F5               	clrf	i1___wmul@product+1
  6588  099B                     i1l2763:	
  6589  099B  1C70               	btfss	i1___wmul@multiplier,0
  6590  099C  29A3               	goto	i1l666
  6591  099D  0872               	movf	i1___wmul@multiplicand,w
  6592  099E  07F4               	addwf	i1___wmul@product,f
  6593  099F  1803               	skipnc
  6594  09A0  0AF5               	incf	i1___wmul@product+1,f
  6595  09A1  0873               	movf	i1___wmul@multiplicand+1,w
  6596  09A2  07F5               	addwf	i1___wmul@product+1,f
  6597  09A3                     i1l666:	
  6598  09A3  3001               	movlw	1
  6599  09A4                     u190_25:	
  6600  09A4  1003               	clrc
  6601  09A5  0DF2               	rlf	i1___wmul@multiplicand,f
  6602  09A6  0DF3               	rlf	i1___wmul@multiplicand+1,f
  6603  09A7  3EFF               	addlw	-1
  6604  09A8  1D03               	skipz
  6605  09A9  29A4               	goto	u190_25
  6606  09AA  3001               	movlw	1
  6607  09AB                     u191_25:	
  6608  09AB  1003               	clrc
  6609  09AC  0CF1               	rrf	i1___wmul@multiplier+1,f
  6610  09AD  0CF0               	rrf	i1___wmul@multiplier,f
  6611  09AE  3EFF               	addlw	-1
  6612  09AF  1D03               	skipz
  6613  09B0  29AB               	goto	u191_25
  6614  09B1  0870               	movf	i1___wmul@multiplier,w
  6615  09B2  0471               	iorwf	i1___wmul@multiplier+1,w
  6616  09B3  1D03               	btfss	3,2
  6617  09B4  299B               	goto	i1l2763
  6618  09B5  0875               	movf	i1___wmul@product+1,w
  6619  09B6  00F1               	movwf	?i1___wmul+1
  6620  09B7  0874               	movf	i1___wmul@product,w
  6621  09B8  00F0               	movwf	?i1___wmul
  6622  09B9  0008               	return
  6623  09BA                     __end_ofi1___wmul:	
  6624                           
  6625                           	psect	text35
  6626  0AD3                     __ptext35:	
  6627 ;; *************** function i1___lwmod *****************
  6628 ;; Defined at:
  6629 ;;		line 5 in file "/opt/microchip/xc8/v2.05/pic/sources/c90/common/lwmod.c"
  6630 ;; Parameters:    Size  Location     Type
  6631 ;;  divisor         2    8[COMMON] unsigned int 
  6632 ;;  dividend        2   10[COMMON] unsigned int 
  6633 ;; Auto vars:     Size  Location     Type
  6634 ;;  __lwmod         1   13[COMMON] unsigned char 
  6635 ;; Return value:  Size  Location     Type
  6636 ;;                  2    8[COMMON] unsigned int 
  6637 ;; Registers used:
  6638 ;;		wreg, status,2, status,0
  6639 ;; Tracked objects:
  6640 ;;		On entry : 0/0
  6641 ;;		On exit  : 0/0
  6642 ;;		Unchanged: 0/0
  6643 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6644 ;;      Params:         4       0       0       0       0
  6645 ;;      Locals:         1       0       0       0       0
  6646 ;;      Temps:          1       0       0       0       0
  6647 ;;      Totals:         6       0       0       0       0
  6648 ;;Total ram usage:        6 bytes
  6649 ;; Hardware stack levels used:    1
  6650 ;; This function calls:
  6651 ;;		Nothing
  6652 ;; This function is called by:
  6653 ;;		_updateLCD
  6654 ;;		i1_sprintf
  6655 ;; This function uses a non-reentrant model
  6656 ;;
  6657                           
  6658                           
  6659                           ;psect for function i1___lwmod
  6660  0AD3                     i1___lwmod:	
  6661                           
  6662                           ;incstack = 0
  6663 ;; hardware stack exceeded
  6664                           ; Regs used in i1___lwmod: [wreg+status,2+status,0]
  6665  0AD3  0878               	movf	i1___lwmod@divisor,w
  6666  0AD4  0479               	iorwf	i1___lwmod@divisor+1,w
  6667  0AD5  1903               	btfsc	3,2
  6668  0AD6  2B00               	goto	i1l2819
  6669  0AD7  01FD               	clrf	i1___lwmod@counter
  6670  0AD8  0AFD               	incf	i1___lwmod@counter,f
  6671  0AD9                     i1l2809:	
  6672  0AD9  1BF9               	btfsc	i1___lwmod@divisor+1,7
  6673  0ADA  2AE7               	goto	i1l2811
  6674  0ADB  3001               	movlw	1
  6675  0ADC                     u201_25:	
  6676  0ADC  1003               	clrc
  6677  0ADD  0DF8               	rlf	i1___lwmod@divisor,f
  6678  0ADE  0DF9               	rlf	i1___lwmod@divisor+1,f
  6679  0ADF  3EFF               	addlw	-1
  6680  0AE0  1D03               	skipz
  6681  0AE1  2ADC               	goto	u201_25
  6682  0AE2  3001               	movlw	1
  6683  0AE3  00FC               	movwf	??i1___lwmod
  6684  0AE4  087C               	movf	??i1___lwmod,w
  6685  0AE5  07FD               	addwf	i1___lwmod@counter,f
  6686  0AE6  2AD9               	goto	i1l2809
  6687  0AE7                     i1l2811:	
  6688  0AE7  0879               	movf	i1___lwmod@divisor+1,w
  6689  0AE8  027B               	subwf	i1___lwmod@dividend+1,w
  6690  0AE9  1D03               	skipz
  6691  0AEA  2AED               	goto	u203_25
  6692  0AEB  0878               	movf	i1___lwmod@divisor,w
  6693  0AEC  027A               	subwf	i1___lwmod@dividend,w
  6694  0AED                     u203_25:	
  6695  0AED  1C03               	skipc
  6696  0AEE  2AF5               	goto	i1l2815
  6697  0AEF  0878               	movf	i1___lwmod@divisor,w
  6698  0AF0  02FA               	subwf	i1___lwmod@dividend,f
  6699  0AF1  0879               	movf	i1___lwmod@divisor+1,w
  6700  0AF2  1C03               	skipc
  6701  0AF3  03FB               	decf	i1___lwmod@dividend+1,f
  6702  0AF4  02FB               	subwf	i1___lwmod@dividend+1,f
  6703  0AF5                     i1l2815:	
  6704  0AF5  3001               	movlw	1
  6705  0AF6                     u204_25:	
  6706  0AF6  1003               	clrc
  6707  0AF7  0CF9               	rrf	i1___lwmod@divisor+1,f
  6708  0AF8  0CF8               	rrf	i1___lwmod@divisor,f
  6709  0AF9  3EFF               	addlw	-1
  6710  0AFA  1D03               	skipz
  6711  0AFB  2AF6               	goto	u204_25
  6712  0AFC  3001               	movlw	1
  6713  0AFD  02FD               	subwf	i1___lwmod@counter,f
  6714  0AFE  1D03               	btfss	3,2
  6715  0AFF  2AE7               	goto	i1l2811
  6716  0B00                     i1l2819:	
  6717  0B00  087B               	movf	i1___lwmod@dividend+1,w
  6718  0B01  00F9               	movwf	?i1___lwmod+1
  6719  0B02  087A               	movf	i1___lwmod@dividend,w
  6720  0B03  00F8               	movwf	?i1___lwmod
  6721  0B04  0008               	return
  6722  0B05                     __end_ofi1___lwmod:	
  6723                           
  6724                           	psect	text36
  6725  0B05                     __ptext36:	
  6726 ;; *************** function i1___lwdiv *****************
  6727 ;; Defined at:
  6728 ;;		line 5 in file "/opt/microchip/xc8/v2.05/pic/sources/c90/common/lwdiv.c"
  6729 ;; Parameters:    Size  Location     Type
  6730 ;;  divisor         2    0[COMMON] unsigned int 
  6731 ;;  dividend        2    2[COMMON] unsigned int 
  6732 ;; Auto vars:     Size  Location     Type
  6733 ;;  __lwdiv         2    5[COMMON] unsigned int 
  6734 ;;  __lwdiv         1    7[COMMON] unsigned char 
  6735 ;; Return value:  Size  Location     Type
  6736 ;;                  2    0[COMMON] unsigned int 
  6737 ;; Registers used:
  6738 ;;		wreg, status,2, status,0
  6739 ;; Tracked objects:
  6740 ;;		On entry : 0/0
  6741 ;;		On exit  : 0/0
  6742 ;;		Unchanged: 0/0
  6743 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6744 ;;      Params:         4       0       0       0       0
  6745 ;;      Locals:         3       0       0       0       0
  6746 ;;      Temps:          1       0       0       0       0
  6747 ;;      Totals:         8       0       0       0       0
  6748 ;;Total ram usage:        8 bytes
  6749 ;; Hardware stack levels used:    1
  6750 ;; This function calls:
  6751 ;;		Nothing
  6752 ;; This function is called by:
  6753 ;;		_updateLCD
  6754 ;;		i1_sprintf
  6755 ;; This function uses a non-reentrant model
  6756 ;;
  6757                           
  6758                           
  6759                           ;psect for function i1___lwdiv
  6760  0B05                     i1___lwdiv:	
  6761                           
  6762                           ;incstack = 0
  6763 ;; hardware stack exceeded
  6764                           ; Regs used in i1___lwdiv: [wreg+status,2+status,0]
  6765  0B05  01F5               	clrf	i1___lwdiv@quotient
  6766  0B06  01F6               	clrf	i1___lwdiv@quotient+1
  6767  0B07  0870               	movf	i1___lwdiv@divisor,w
  6768  0B08  0471               	iorwf	i1___lwdiv@divisor+1,w
  6769  0B09  1903               	btfsc	3,2
  6770  0B0A  2B3C               	goto	i1l2797
  6771  0B0B  01F7               	clrf	i1___lwdiv@counter
  6772  0B0C  0AF7               	incf	i1___lwdiv@counter,f
  6773  0B0D                     i1l2785:	
  6774  0B0D  1BF1               	btfsc	i1___lwdiv@divisor+1,7
  6775  0B0E  2B1B               	goto	i1l2787
  6776  0B0F  3001               	movlw	1
  6777  0B10                     u194_25:	
  6778  0B10  1003               	clrc
  6779  0B11  0DF0               	rlf	i1___lwdiv@divisor,f
  6780  0B12  0DF1               	rlf	i1___lwdiv@divisor+1,f
  6781  0B13  3EFF               	addlw	-1
  6782  0B14  1D03               	skipz
  6783  0B15  2B10               	goto	u194_25
  6784  0B16  3001               	movlw	1
  6785  0B17  00F4               	movwf	??i1___lwdiv
  6786  0B18  0874               	movf	??i1___lwdiv,w
  6787  0B19  07F7               	addwf	i1___lwdiv@counter,f
  6788  0B1A  2B0D               	goto	i1l2785
  6789  0B1B                     i1l2787:	
  6790  0B1B  3001               	movlw	1
  6791  0B1C                     u196_25:	
  6792  0B1C  1003               	clrc
  6793  0B1D  0DF5               	rlf	i1___lwdiv@quotient,f
  6794  0B1E  0DF6               	rlf	i1___lwdiv@quotient+1,f
  6795  0B1F  3EFF               	addlw	-1
  6796  0B20  1D03               	skipz
  6797  0B21  2B1C               	goto	u196_25
  6798  0B22  0871               	movf	i1___lwdiv@divisor+1,w
  6799  0B23  0273               	subwf	i1___lwdiv@dividend+1,w
  6800  0B24  1D03               	skipz
  6801  0B25  2B28               	goto	u197_25
  6802  0B26  0870               	movf	i1___lwdiv@divisor,w
  6803  0B27  0272               	subwf	i1___lwdiv@dividend,w
  6804  0B28                     u197_25:	
  6805  0B28  1C03               	skipc
  6806  0B29  2B31               	goto	i1l2793
  6807  0B2A  0870               	movf	i1___lwdiv@divisor,w
  6808  0B2B  02F2               	subwf	i1___lwdiv@dividend,f
  6809  0B2C  0871               	movf	i1___lwdiv@divisor+1,w
  6810  0B2D  1C03               	skipc
  6811  0B2E  03F3               	decf	i1___lwdiv@dividend+1,f
  6812  0B2F  02F3               	subwf	i1___lwdiv@dividend+1,f
  6813  0B30  1475               	bsf	i1___lwdiv@quotient,0
  6814  0B31                     i1l2793:	
  6815  0B31  3001               	movlw	1
  6816  0B32                     u198_25:	
  6817  0B32  1003               	clrc
  6818  0B33  0CF1               	rrf	i1___lwdiv@divisor+1,f
  6819  0B34  0CF0               	rrf	i1___lwdiv@divisor,f
  6820  0B35  3EFF               	addlw	-1
  6821  0B36  1D03               	skipz
  6822  0B37  2B32               	goto	u198_25
  6823  0B38  3001               	movlw	1
  6824  0B39  02F7               	subwf	i1___lwdiv@counter,f
  6825  0B3A  1D03               	btfss	3,2
  6826  0B3B  2B1B               	goto	i1l2787
  6827  0B3C                     i1l2797:	
  6828  0B3C  0876               	movf	i1___lwdiv@quotient+1,w
  6829  0B3D  00F1               	movwf	?i1___lwdiv+1
  6830  0B3E  0875               	movf	i1___lwdiv@quotient,w
  6831  0B3F  00F0               	movwf	?i1___lwdiv
  6832  0B40  0008               	return
  6833  0B41                     __end_ofi1___lwdiv:	
  6834                           
  6835                           	psect	text37
  6836  095F                     __ptext37:	
  6837 ;; *************** function i1_putsXLCD *****************
  6838 ;; Defined at:
  6839 ;;		line 419 in file "lcd_pic16.c"
  6840 ;; Parameters:    Size  Location     Type
  6841 ;;  buffer          1    wreg     PTR unsigned char 
  6842 ;;		 -> lineTwo(17), lineOne(17), 
  6843 ;; Auto vars:     Size  Location     Type
  6844 ;;  buffer          1    5[COMMON] PTR unsigned char 
  6845 ;;		 -> lineTwo(17), lineOne(17), 
  6846 ;; Return value:  Size  Location     Type
  6847 ;;                  1    wreg      void 
  6848 ;; Registers used:
  6849 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6850 ;; Tracked objects:
  6851 ;;		On entry : 0/0
  6852 ;;		On exit  : 0/0
  6853 ;;		Unchanged: 0/0
  6854 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6855 ;;      Params:         0       0       0       0       0
  6856 ;;      Locals:         1       0       0       0       0
  6857 ;;      Temps:          1       0       0       0       0
  6858 ;;      Totals:         2       0       0       0       0
  6859 ;;Total ram usage:        2 bytes
  6860 ;; Hardware stack levels used:    1
  6861 ;; Hardware stack levels required when called:    2
  6862 ;; This function calls:
  6863 ;;		i1_BusyXLCD
  6864 ;;		i1_WriteDataXLCD
  6865 ;; This function is called by:
  6866 ;;		_updateLCD
  6867 ;; This function uses a non-reentrant model
  6868 ;;
  6869                           
  6870                           
  6871                           ;psect for function i1_putsXLCD
  6872  095F                     i1_putsXLCD:	
  6873                           
  6874                           ;incstack = 0
  6875 ;; hardware stack exceeded
  6876                           ; Regs used in i1_putsXLCD: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6877                           ;i1putsXLCD@buffer stored from wreg
  6878  095F  00F5               	movwf	i1putsXLCD@buffer
  6879  0960                     i1l3015:	
  6880                           ;lcd_pic16.c: 419: void putsXLCD(char *buffer);lcd_pic16.c: 420: {;lcd_pic16.c: 421:    
      +                               while(*buffer)
  6881                           
  6882                           
  6883                           ;lcd_pic16.c: 421:         while(*buffer)
  6884  0960  0875               	movf	i1putsXLCD@buffer,w
  6885  0961  0084               	movwf	4
  6886  0962  1383               	bcf	3,7	;select IRP bank0
  6887  0963  0800               	movf	0,w
  6888  0964  1903               	btfsc	3,2
  6889  0965  0008               	return
  6890  0966                     i1l3009:	
  6891  0966  120A  158A  20C9  120A  158A  	fcall	i1_BusyXLCD
  6892  096B  3A00               	xorlw	0
  6893  096C  1D03               	skipz
  6894  096D  2966               	goto	i1l3009
  6895                           
  6896                           ;lcd_pic16.c: 424:                 WriteDataXLCD(*buffer);
  6897  096E  0875               	movf	i1putsXLCD@buffer,w
  6898  096F  0084               	movwf	4
  6899  0970  1383               	bcf	3,7	;select IRP bank0
  6900  0971  0800               	movf	0,w
  6901  0972  120A  158A  23C9  120A  158A  	fcall	i1_WriteDataXLCD
  6902                           
  6903                           ;lcd_pic16.c: 425:                 buffer++;
  6904  0977  3001               	movlw	1
  6905  0978  00F4               	movwf	??i1_putsXLCD
  6906  0979  0874               	movf	??i1_putsXLCD,w
  6907  097A  07F5               	addwf	i1putsXLCD@buffer,f
  6908  097B  2960               	goto	i1l3015
  6909  097C                     __end_ofi1_putsXLCD:	
  6910                           
  6911                           	psect	text38
  6912  0BC9                     __ptext38:	
  6913 ;; *************** function i1_WriteDataXLCD *****************
  6914 ;; Defined at:
  6915 ;;		line 110 in file "lcd_pic16.c"
  6916 ;; Parameters:    Size  Location     Type
  6917 ;;  data            1    wreg     unsigned char 
  6918 ;; Auto vars:     Size  Location     Type
  6919 ;;  data            1    3[COMMON] unsigned char 
  6920 ;; Return value:  Size  Location     Type
  6921 ;;                  1    wreg      void 
  6922 ;; Registers used:
  6923 ;;		wreg, status,2, status,0, pclath, cstack
  6924 ;; Tracked objects:
  6925 ;;		On entry : 0/0
  6926 ;;		On exit  : 0/0
  6927 ;;		Unchanged: 0/0
  6928 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6929 ;;      Params:         0       0       0       0       0
  6930 ;;      Locals:         1       0       0       0       0
  6931 ;;      Temps:          2       0       0       0       0
  6932 ;;      Totals:         3       0       0       0       0
  6933 ;;Total ram usage:        3 bytes
  6934 ;; Hardware stack levels used:    1
  6935 ;; Hardware stack levels required when called:    1
  6936 ;; This function calls:
  6937 ;;		i1_DelayFor18TCY
  6938 ;; This function is called by:
  6939 ;;		i1_putsXLCD
  6940 ;; This function uses a non-reentrant model
  6941 ;;
  6942                           
  6943                           
  6944                           ;psect for function i1_WriteDataXLCD
  6945  0BC9                     i1_WriteDataXLCD:	
  6946                           
  6947                           ;incstack = 0
  6948 ;; hardware stack exceeded
  6949                           ; Regs used in i1_WriteDataXLCD: [wreg+status,2+status,0+pclath+cstack]
  6950                           ;i1WriteDataXLCD@data stored from wreg
  6951  0BC9  00F3               	movwf	i1WriteDataXLCD@data
  6952                           
  6953                           ;lcd_pic16.c: 110: void WriteDataXLCD(char data);lcd_pic16.c: 111: {;lcd_pic16.c: 125:  
      +                                 TRISB &= 0x0f;
  6954  0BCA  300F               	movlw	15
  6955  0BCB  00F1               	movwf	??i1_WriteDataXLCD
  6956  0BCC  0871               	movf	??i1_WriteDataXLCD,w
  6957  0BCD  1683               	bsf	3,5	;RP0=1, select bank1
  6958  0BCE  1303               	bcf	3,6	;RP1=0, select bank1
  6959  0BCF  0586               	andwf	6,f	;volatile
  6960                           
  6961                           ;lcd_pic16.c: 126:         PORTB &= 0x0f;
  6962  0BD0  300F               	movlw	15
  6963  0BD1  00F1               	movwf	??i1_WriteDataXLCD
  6964  0BD2  0871               	movf	??i1_WriteDataXLCD,w
  6965  0BD3  1283               	bcf	3,5	;RP0=0, select bank0
  6966  0BD4  1303               	bcf	3,6	;RP1=0, select bank0
  6967  0BD5  0586               	andwf	6,f	;volatile
  6968                           
  6969                           ;lcd_pic16.c: 127:         PORTB |= data&0xf0;
  6970  0BD6  0873               	movf	i1WriteDataXLCD@data,w
  6971  0BD7  39F0               	andlw	240
  6972  0BD8  00F1               	movwf	??i1_WriteDataXLCD
  6973  0BD9  0871               	movf	??i1_WriteDataXLCD,w
  6974  0BDA  0486               	iorwf	6,f	;volatile
  6975                           
  6976                           ;lcd_pic16.c: 133:         PORTBbits.RB1 = 1;
  6977  0BDB  1486               	bsf	6,1	;volatile
  6978                           
  6979                           ;lcd_pic16.c: 134:         PORTBbits.RB2 = 0;
  6980  0BDC  1106               	bcf	6,2	;volatile
  6981                           
  6982                           ;lcd_pic16.c: 135:         DelayFor18TCY();
  6983  0BDD  120A  158A  20AB  120A  158A  	fcall	i1_DelayFor18TCY
  6984                           
  6985                           ;lcd_pic16.c: 136:         PORTBbits.RB3 = 1;
  6986  0BE2  1283               	bcf	3,5	;RP0=0, select bank0
  6987  0BE3  1303               	bcf	3,6	;RP1=0, select bank0
  6988  0BE4  1586               	bsf	6,3	;volatile
  6989                           
  6990                           ;lcd_pic16.c: 137:         DelayFor18TCY();
  6991  0BE5  120A  158A  20AB  120A  158A  	fcall	i1_DelayFor18TCY
  6992                           
  6993                           ;lcd_pic16.c: 138:         PORTBbits.RB3 = 0;
  6994  0BEA  1283               	bcf	3,5	;RP0=0, select bank0
  6995  0BEB  1303               	bcf	3,6	;RP1=0, select bank0
  6996  0BEC  1186               	bcf	6,3	;volatile
  6997                           
  6998                           ;lcd_pic16.c: 140:         PORTB &= 0x0f;
  6999  0BED  300F               	movlw	15
  7000  0BEE  00F1               	movwf	??i1_WriteDataXLCD
  7001  0BEF  0871               	movf	??i1_WriteDataXLCD,w
  7002  0BF0  0586               	andwf	6,f	;volatile
  7003                           
  7004                           ;lcd_pic16.c: 141:         PORTB |= ((data<<4)&0xf0);
  7005  0BF1  0873               	movf	i1WriteDataXLCD@data,w
  7006  0BF2  00F1               	movwf	??i1_WriteDataXLCD
  7007  0BF3  3003               	movlw	3
  7008  0BF4                     u188_25:	
  7009  0BF4  1003               	clrc
  7010  0BF5  0DF1               	rlf	??i1_WriteDataXLCD,f
  7011  0BF6  3EFF               	addlw	-1
  7012  0BF7  1D03               	skipz
  7013  0BF8  2BF4               	goto	u188_25
  7014  0BF9  1003               	clrc
  7015  0BFA  0D71               	rlf	??i1_WriteDataXLCD,w
  7016  0BFB  39F0               	andlw	240
  7017  0BFC  00F2               	movwf	??i1_WriteDataXLCD+1
  7018  0BFD  0872               	movf	??i1_WriteDataXLCD+1,w
  7019  0BFE  0486               	iorwf	6,f	;volatile
  7020                           
  7021                           ;lcd_pic16.c: 146:         DelayFor18TCY();
  7022  0BFF  120A  158A  20AB  120A  158A  	fcall	i1_DelayFor18TCY
  7023                           
  7024                           ;lcd_pic16.c: 147:         PORTBbits.RB3 = 1;
  7025  0C04  1283               	bcf	3,5	;RP0=0, select bank0
  7026  0C05  1303               	bcf	3,6	;RP1=0, select bank0
  7027  0C06  1586               	bsf	6,3	;volatile
  7028                           
  7029                           ;lcd_pic16.c: 148:         DelayFor18TCY();
  7030  0C07  120A  158A  20AB   	fcall	i1_DelayFor18TCY
  7031                           
  7032                           ;lcd_pic16.c: 149:         PORTBbits.RB3 = 0;
  7033  0C0A  1283               	bcf	3,5	;RP0=0, select bank0
  7034  0C0B  1303               	bcf	3,6	;RP1=0, select bank0
  7035  0C0C  1186               	bcf	6,3	;volatile
  7036                           
  7037                           ;lcd_pic16.c: 151:         TRISB |= 0xf0;
  7038  0C0D  30F0               	movlw	240
  7039  0C0E  00F1               	movwf	??i1_WriteDataXLCD
  7040  0C0F  0871               	movf	??i1_WriteDataXLCD,w
  7041  0C10  1683               	bsf	3,5	;RP0=1, select bank1
  7042  0C11  1303               	bcf	3,6	;RP1=0, select bank1
  7043  0C12  0486               	iorwf	6,f	;volatile
  7044  0C13  0008               	return
  7045  0C14                     __end_ofi1_WriteDataXLCD:	
  7046                           
  7047                           	psect	text39
  7048  08C9                     __ptext39:	
  7049 ;; *************** function i1_BusyXLCD *****************
  7050 ;; Defined at:
  7051 ;;		line 451 in file "lcd_pic16.c"
  7052 ;; Parameters:    Size  Location     Type
  7053 ;;		None
  7054 ;; Auto vars:     Size  Location     Type
  7055 ;;		None
  7056 ;; Return value:  Size  Location     Type
  7057 ;;                  1    wreg      unsigned char 
  7058 ;; Registers used:
  7059 ;;		wreg
  7060 ;; Tracked objects:
  7061 ;;		On entry : 0/0
  7062 ;;		On exit  : 0/0
  7063 ;;		Unchanged: 0/0
  7064 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7065 ;;      Params:         0       0       0       0       0
  7066 ;;      Locals:         0       0       0       0       0
  7067 ;;      Temps:          2       0       0       0       0
  7068 ;;      Totals:         2       0       0       0       0
  7069 ;;Total ram usage:        2 bytes
  7070 ;; Hardware stack levels used:    1
  7071 ;; This function calls:
  7072 ;;		Nothing
  7073 ;; This function is called by:
  7074 ;;		i1_putsXLCD
  7075 ;; This function uses a non-reentrant model
  7076 ;;
  7077                           
  7078                           
  7079                           ;psect for function i1_BusyXLCD
  7080  08C9                     i1_BusyXLCD:	
  7081                           
  7082                           ;lcd_pic16.c: 504:         _delay((unsigned long)((5)*(4000000/4000.0)));
  7083                           
  7084                           ;incstack = 0
  7085 ;; hardware stack exceeded
  7086                           ; Regs used in i1_BusyXLCD: [wreg]
  7087  08C9  3007               	movlw	7
  7088  08CA  00F1               	movwf	??i1_BusyXLCD+1
  7089  08CB  307D               	movlw	125
  7090  08CC  00F0               	movwf	??i1_BusyXLCD
  7091  08CD                     u369_27:	
  7092  08CD  0BF0               	decfsz	??i1_BusyXLCD,f
  7093  08CE  28CD               	goto	u369_27
  7094  08CF  0BF1               	decfsz	??i1_BusyXLCD+1,f
  7095  08D0  28CD               	goto	u369_27
  7096                           
  7097                           ;lcd_pic16.c: 505:         return 0;
  7098  08D1  3000               	movlw	0
  7099  08D2  0008               	return
  7100  08D3                     __end_ofi1_BusyXLCD:	
  7101                           
  7102                           	psect	text40
  7103  0C5F                     __ptext40:	
  7104 ;; *************** function i1_SetDDRamAddr *****************
  7105 ;; Defined at:
  7106 ;;		line 217 in file "lcd_pic16.c"
  7107 ;; Parameters:    Size  Location     Type
  7108 ;;  DDaddr          1    wreg     unsigned char 
  7109 ;; Auto vars:     Size  Location     Type
  7110 ;;  DDaddr          1    3[COMMON] unsigned char 
  7111 ;; Return value:  Size  Location     Type
  7112 ;;                  1    wreg      void 
  7113 ;; Registers used:
  7114 ;;		wreg, status,2, status,0, pclath, cstack
  7115 ;; Tracked objects:
  7116 ;;		On entry : 0/0
  7117 ;;		On exit  : 0/0
  7118 ;;		Unchanged: 0/0
  7119 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7120 ;;      Params:         0       0       0       0       0
  7121 ;;      Locals:         1       0       0       0       0
  7122 ;;      Temps:          2       0       0       0       0
  7123 ;;      Totals:         3       0       0       0       0
  7124 ;;Total ram usage:        3 bytes
  7125 ;; Hardware stack levels used:    1
  7126 ;; Hardware stack levels required when called:    1
  7127 ;; This function calls:
  7128 ;;		i1_DelayFor18TCY
  7129 ;; This function is called by:
  7130 ;;		_updateLCD
  7131 ;; This function uses a non-reentrant model
  7132 ;;
  7133                           
  7134                           
  7135                           ;psect for function i1_SetDDRamAddr
  7136  0C5F                     i1_SetDDRamAddr:	
  7137                           
  7138                           ;incstack = 0
  7139 ;; hardware stack exceeded
  7140                           ; Regs used in i1_SetDDRamAddr: [wreg+status,2+status,0+pclath+cstack]
  7141                           ;i1SetDDRamAddr@DDaddr stored from wreg
  7142  0C5F  00F3               	movwf	i1SetDDRamAddr@DDaddr
  7143                           
  7144                           ;lcd_pic16.c: 217: void SetDDRamAddr(unsigned char DDaddr);lcd_pic16.c: 218: {;lcd_pic16
      +                          .c: 232:         TRISB &= 0x0f;
  7145  0C60  300F               	movlw	15
  7146  0C61  00F1               	movwf	??i1_SetDDRamAddr
  7147  0C62  0871               	movf	??i1_SetDDRamAddr,w
  7148  0C63  1683               	bsf	3,5	;RP0=1, select bank1
  7149  0C64  1303               	bcf	3,6	;RP1=0, select bank1
  7150  0C65  0586               	andwf	6,f	;volatile
  7151                           
  7152                           ;lcd_pic16.c: 233:         PORTB &= 0x0f;
  7153  0C66  300F               	movlw	15
  7154  0C67  00F1               	movwf	??i1_SetDDRamAddr
  7155  0C68  0871               	movf	??i1_SetDDRamAddr,w
  7156  0C69  1283               	bcf	3,5	;RP0=0, select bank0
  7157  0C6A  1303               	bcf	3,6	;RP1=0, select bank0
  7158  0C6B  0586               	andwf	6,f	;volatile
  7159                           
  7160                           ;lcd_pic16.c: 234:         PORTB |= ((DDaddr | 0b10000000) & 0xf0);
  7161  0C6C  0873               	movf	i1SetDDRamAddr@DDaddr,w
  7162  0C6D  3880               	iorlw	128
  7163  0C6E  39F0               	andlw	240
  7164  0C6F  00F1               	movwf	??i1_SetDDRamAddr
  7165  0C70  0871               	movf	??i1_SetDDRamAddr,w
  7166  0C71  0486               	iorwf	6,f	;volatile
  7167                           
  7168                           ;lcd_pic16.c: 240:         PORTBbits.RB2 = 0;
  7169  0C72  1106               	bcf	6,2	;volatile
  7170                           
  7171                           ;lcd_pic16.c: 241:         PORTBbits.RB1 = 0;
  7172  0C73  1086               	bcf	6,1	;volatile
  7173                           
  7174                           ;lcd_pic16.c: 242:         DelayFor18TCY();
  7175  0C74  120A  158A  20AB  120A  158A  	fcall	i1_DelayFor18TCY
  7176                           
  7177                           ;lcd_pic16.c: 243:         PORTBbits.RB3 = 1;
  7178  0C79  1283               	bcf	3,5	;RP0=0, select bank0
  7179  0C7A  1303               	bcf	3,6	;RP1=0, select bank0
  7180  0C7B  1586               	bsf	6,3	;volatile
  7181                           
  7182                           ;lcd_pic16.c: 244:         DelayFor18TCY();
  7183  0C7C  120A  158A  20AB  120A  158A  	fcall	i1_DelayFor18TCY
  7184                           
  7185                           ;lcd_pic16.c: 245:         PORTBbits.RB3 = 0;
  7186  0C81  1283               	bcf	3,5	;RP0=0, select bank0
  7187  0C82  1303               	bcf	3,6	;RP1=0, select bank0
  7188  0C83  1186               	bcf	6,3	;volatile
  7189                           
  7190                           ;lcd_pic16.c: 247:         PORTB &= 0x0f;
  7191  0C84  300F               	movlw	15
  7192  0C85  00F1               	movwf	??i1_SetDDRamAddr
  7193  0C86  0871               	movf	??i1_SetDDRamAddr,w
  7194  0C87  0586               	andwf	6,f	;volatile
  7195                           
  7196                           ;lcd_pic16.c: 248:         PORTB |= ((DDaddr<<4)&0xf0);
  7197  0C88  0873               	movf	i1SetDDRamAddr@DDaddr,w
  7198  0C89  00F1               	movwf	??i1_SetDDRamAddr
  7199  0C8A  3003               	movlw	3
  7200  0C8B                     u215_25:	
  7201  0C8B  1003               	clrc
  7202  0C8C  0DF1               	rlf	??i1_SetDDRamAddr,f
  7203  0C8D  3EFF               	addlw	-1
  7204  0C8E  1D03               	skipz
  7205  0C8F  2C8B               	goto	u215_25
  7206  0C90  1003               	clrc
  7207  0C91  0D71               	rlf	??i1_SetDDRamAddr,w
  7208  0C92  39F0               	andlw	240
  7209  0C93  00F2               	movwf	??i1_SetDDRamAddr+1
  7210  0C94  0872               	movf	??i1_SetDDRamAddr+1,w
  7211  0C95  0486               	iorwf	6,f	;volatile
  7212                           
  7213                           ;lcd_pic16.c: 253:         DelayFor18TCY();
  7214  0C96  120A  158A  20AB  120A  158A  	fcall	i1_DelayFor18TCY
  7215                           
  7216                           ;lcd_pic16.c: 254:         PORTBbits.RB3 = 1;
  7217  0C9B  1283               	bcf	3,5	;RP0=0, select bank0
  7218  0C9C  1303               	bcf	3,6	;RP1=0, select bank0
  7219  0C9D  1586               	bsf	6,3	;volatile
  7220                           
  7221                           ;lcd_pic16.c: 255:         DelayFor18TCY();
  7222  0C9E  120A  158A  20AB   	fcall	i1_DelayFor18TCY
  7223                           
  7224                           ;lcd_pic16.c: 256:         PORTBbits.RB3 = 0;
  7225  0CA1  1283               	bcf	3,5	;RP0=0, select bank0
  7226  0CA2  1303               	bcf	3,6	;RP1=0, select bank0
  7227  0CA3  1186               	bcf	6,3	;volatile
  7228                           
  7229                           ;lcd_pic16.c: 258:         TRISB |= 0xf0;
  7230  0CA4  30F0               	movlw	240
  7231  0CA5  00F1               	movwf	??i1_SetDDRamAddr
  7232  0CA6  0871               	movf	??i1_SetDDRamAddr,w
  7233  0CA7  1683               	bsf	3,5	;RP0=1, select bank1
  7234  0CA8  1303               	bcf	3,6	;RP1=0, select bank1
  7235  0CA9  0486               	iorwf	6,f	;volatile
  7236  0CAA  0008               	return
  7237  0CAB                     __end_ofi1_SetDDRamAddr:	
  7238                           
  7239                           	psect	text41
  7240  08AB                     __ptext41:	
  7241 ;; *************** function i1_DelayFor18TCY *****************
  7242 ;; Defined at:
  7243 ;;		line 22 in file "lcd_pic16.c"
  7244 ;; Parameters:    Size  Location     Type
  7245 ;;		None
  7246 ;; Auto vars:     Size  Location     Type
  7247 ;;		None
  7248 ;; Return value:  Size  Location     Type
  7249 ;;                  1    wreg      void 
  7250 ;; Registers used:
  7251 ;;		wreg
  7252 ;; Tracked objects:
  7253 ;;		On entry : 0/0
  7254 ;;		On exit  : 0/0
  7255 ;;		Unchanged: 0/0
  7256 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7257 ;;      Params:         0       0       0       0       0
  7258 ;;      Locals:         0       0       0       0       0
  7259 ;;      Temps:          1       0       0       0       0
  7260 ;;      Totals:         1       0       0       0       0
  7261 ;;Total ram usage:        1 bytes
  7262 ;; Hardware stack levels used:    1
  7263 ;; This function calls:
  7264 ;;		Nothing
  7265 ;; This function is called by:
  7266 ;;		i1_WriteDataXLCD
  7267 ;;		i1_SetDDRamAddr
  7268 ;; This function uses a non-reentrant model
  7269 ;;
  7270                           
  7271                           
  7272                           ;psect for function i1_DelayFor18TCY
  7273  08AB                     i1_DelayFor18TCY:	
  7274                           
  7275                           ;lcd_pic16.c: 24:    _delay((unsigned long)((18)*(4000000/4000000.0)));
  7276                           
  7277                           ;incstack = 0
  7278 ;; hardware stack exceeded
  7279                           ; Regs used in i1_DelayFor18TCY: [wreg]
  7280  08AB  3005               	movlw	5
  7281  08AC  00F0               	movwf	??i1_DelayFor18TCY
  7282  08AD                     u370_27:	
  7283  08AD  0BF0               	decfsz	??i1_DelayFor18TCY,f
  7284  08AE  28AD               	goto	u370_27
  7285  08AF  28B0               	nop2
  7286  08B0  0008               	return
  7287  08B1                     __end_ofi1_DelayFor18TCY:	
  7288                           
  7289                           	psect	text42
  7290  0B81                     __ptext42:	
  7291 ;; *************** function _time *****************
  7292 ;; Defined at:
  7293 ;;		line 138 in file "main.c"
  7294 ;; Parameters:    Size  Location     Type
  7295 ;;		None
  7296 ;; Auto vars:     Size  Location     Type
  7297 ;;		None
  7298 ;; Return value:  Size  Location     Type
  7299 ;;                  1    wreg      void 
  7300 ;; Registers used:
  7301 ;;		wreg, status,2, status,0, pclath, cstack
  7302 ;; Tracked objects:
  7303 ;;		On entry : 0/0
  7304 ;;		On exit  : 0/0
  7305 ;;		Unchanged: 0/0
  7306 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7307 ;;      Params:         0       0       0       0       0
  7308 ;;      Locals:         0       0       0       0       0
  7309 ;;      Temps:          1       0       0       0       0
  7310 ;;      Totals:         1       0       0       0       0
  7311 ;;Total ram usage:        1 bytes
  7312 ;; Hardware stack levels used:    1
  7313 ;; Hardware stack levels required when called:    2
  7314 ;; This function calls:
  7315 ;;		i1_setData
  7316 ;; This function is called by:
  7317 ;;		_inter
  7318 ;; This function uses a non-reentrant model
  7319 ;;
  7320                           
  7321                           
  7322                           ;psect for function _time
  7323  0B81                     _time:	
  7324                           
  7325                           ;main.c: 139:     hundredMiliSeconds++;
  7326                           
  7327                           ;incstack = 0
  7328 ;; hardware stack exceeded
  7329                           ; Regs used in _time: [wreg+status,2+status,0+pclath+cstack]
  7330  0B81  3001               	movlw	1
  7331  0B82  00F5               	movwf	??_time
  7332  0B83  0875               	movf	??_time,w
  7333  0B84  1283               	bcf	3,5	;RP0=0, select bank0
  7334  0B85  1303               	bcf	3,6	;RP1=0, select bank0
  7335  0B86  07D0               	addwf	_hundredMiliSeconds,f
  7336                           
  7337                           ;main.c: 140:     if(hundredMiliSeconds >= 10){
  7338  0B87  300A               	movlw	10
  7339  0B88  0250               	subwf	_hundredMiliSeconds,w
  7340  0B89  1C03               	skipc
  7341  0B8A  0008               	return
  7342                           
  7343                           ;main.c: 141:         hundredMiliSeconds = 0;
  7344  0B8B  01D0               	clrf	_hundredMiliSeconds
  7345                           
  7346                           ;main.c: 142:         seconds++;
  7347  0B8C  3001               	movlw	1
  7348  0B8D  00F5               	movwf	??_time
  7349  0B8E  0875               	movf	??_time,w
  7350  0B8F  07D1               	addwf	_seconds,f
  7351                           
  7352                           ;main.c: 143:         if(seconds >= 60){
  7353  0B90  303C               	movlw	60
  7354  0B91  0251               	subwf	_seconds,w
  7355  0B92  1C03               	skipc
  7356  0B93  0008               	return
  7357                           
  7358                           ;main.c: 144:             seconds = 0;
  7359  0B94  01D1               	clrf	_seconds
  7360                           
  7361                           ;main.c: 145:             minutes++;
  7362  0B95  3001               	movlw	1
  7363  0B96  00F5               	movwf	??_time
  7364  0B97  0875               	movf	??_time,w
  7365  0B98  07C7               	addwf	_minutes,f
  7366                           
  7367                           ;main.c: 146:             if(minutes >= 60){
  7368  0B99  303C               	movlw	60
  7369  0B9A  0247               	subwf	_minutes,w
  7370  0B9B  1C03               	skipc
  7371  0B9C  0008               	return
  7372                           
  7373                           ;main.c: 147:                 minutes = 0;
  7374  0B9D  01C7               	clrf	_minutes
  7375                           
  7376                           ;main.c: 148:                 hours++;
  7377  0B9E  3001               	movlw	1
  7378  0B9F  00F5               	movwf	??_time
  7379  0BA0  0875               	movf	??_time,w
  7380  0BA1  07C8               	addwf	_hours,f
  7381                           
  7382                           ;main.c: 149:                 setData(0);
  7383  0BA2  3000               	movlw	0
  7384  0BA3  120A  158A  2545  120A  158A  	fcall	i1_setData
  7385                           
  7386                           ;main.c: 150:                 if(hours >= 24){
  7387  0BA8  3018               	movlw	24
  7388  0BA9  1283               	bcf	3,5	;RP0=0, select bank0
  7389  0BAA  1303               	bcf	3,6	;RP1=0, select bank0
  7390  0BAB  0248               	subwf	_hours,w
  7391  0BAC  1C03               	skipc
  7392  0BAD  0008               	return
  7393                           
  7394                           ;main.c: 151:                     hours = 0;
  7395  0BAE  01C8               	clrf	_hours
  7396                           
  7397                           ;main.c: 152:                     days++;
  7398  0BAF  3001               	movlw	1
  7399  0BB0  00F5               	movwf	??_time
  7400  0BB1  0875               	movf	??_time,w
  7401  0BB2  07C9               	addwf	_days,f
  7402                           
  7403                           ;main.c: 153:                     if(days >= 30){
  7404  0BB3  301E               	movlw	30
  7405  0BB4  0249               	subwf	_days,w
  7406  0BB5  1C03               	skipc
  7407  0BB6  2BBC               	goto	i1l3361
  7408                           
  7409                           ;main.c: 154:                         days = 0;
  7410  0BB7  01C9               	clrf	_days
  7411                           
  7412                           ;main.c: 155:                         months++;
  7413  0BB8  3001               	movlw	1
  7414  0BB9  00F5               	movwf	??_time
  7415  0BBA  0875               	movf	??_time,w
  7416  0BBB  07CA               	addwf	_months,f
  7417  0BBC                     i1l3361:	
  7418  0BBC  300D               	movlw	13
  7419  0BBD  0649               	xorwf	_days,w
  7420  0BBE  1D03               	btfss	3,2
  7421  0BBF  2BC6               	goto	i1l229
  7422  0BC0  3006               	movlw	6
  7423  0BC1  064A               	xorwf	_months,w
  7424  0BC2  1D03               	btfss	3,2
  7425  0BC3  2BC6               	goto	i1l229
  7426  0BC4  01CF               	clrf	_functionalStat
  7427                           
  7428                           ;main.c: 159:                     }else{
  7429  0BC5  0008               	return
  7430  0BC6                     i1l229:	
  7431  0BC6  01CF               	clrf	_functionalStat
  7432  0BC7  0ACF               	incf	_functionalStat,f
  7433  0BC8  0008               	return
  7434  0BC9                     __end_of_time:	
  7435                           
  7436                           	psect	text43
  7437  0D45                     __ptext43:	
  7438 ;; *************** function i1_setData *****************
  7439 ;; Defined at:
  7440 ;;		line 44 in file "eeprom.c"
  7441 ;; Parameters:    Size  Location     Type
  7442 ;;  full            1    wreg     unsigned char 
  7443 ;; Auto vars:     Size  Location     Type
  7444 ;;  full            1  (no storage) unsigned char 
  7445 ;;  setData         1    4[COMMON] unsigned char 
  7446 ;;  setData         1    3[COMMON] unsigned char 
  7447 ;; Return value:  Size  Location     Type
  7448 ;;                  1    wreg      void 
  7449 ;; Registers used:
  7450 ;;		wreg, status,2, status,0, pclath, cstack
  7451 ;; Tracked objects:
  7452 ;;		On entry : 0/0
  7453 ;;		On exit  : 0/0
  7454 ;;		Unchanged: 0/0
  7455 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7456 ;;      Params:         0       0       0       0       0
  7457 ;;      Locals:         2       0       0       0       0
  7458 ;;      Temps:          1       0       0       0       0
  7459 ;;      Totals:         3       0       0       0       0
  7460 ;;Total ram usage:        3 bytes
  7461 ;; Hardware stack levels used:    1
  7462 ;; Hardware stack levels required when called:    1
  7463 ;; This function calls:
  7464 ;;		i1_writeEEPROM
  7465 ;; This function is called by:
  7466 ;;		_time
  7467 ;; This function uses a non-reentrant model
  7468 ;;
  7469                           
  7470                           
  7471                           ;psect for function i1_setData
  7472  0D45                     i1_setData:	
  7473                           
  7474                           ;eeprom.c: 45:     unsigned char data0 = frequency & 0x00FF;
  7475                           
  7476                           ;incstack = 0
  7477 ;; hardware stack exceeded
  7478                           ; Regs used in i1_setData: [wreg+status,2+status,0+pclath+cstack]
  7479  0D45  1283               	bcf	3,5	;RP0=0, select bank0
  7480  0D46  1303               	bcf	3,6	;RP1=0, select bank0
  7481  0D47  0844               	movf	_frequency,w
  7482  0D48  00F2               	movwf	??i1_setData
  7483  0D49  0872               	movf	??i1_setData,w
  7484  0D4A  00F3               	movwf	i1setData@data0
  7485                           
  7486                           ;eeprom.c: 46:     unsigned char data1 = frequency >> 8;
  7487  0D4B  0845               	movf	_frequency+1,w
  7488  0D4C  00F2               	movwf	??i1_setData
  7489  0D4D  0872               	movf	??i1_setData,w
  7490  0D4E  00F4               	movwf	i1setData@data1
  7491                           
  7492                           ;eeprom.c: 47:     writeEEPROM(data0 ,0);
  7493  0D4F  01F0               	clrf	i1writeEEPROM@address
  7494  0D50  0873               	movf	i1setData@data0,w
  7495  0D51  120A  118A  26E7  120A  158A  	fcall	i1_writeEEPROM
  7496                           
  7497                           ;eeprom.c: 48:     writeEEPROM(data1 ,1);
  7498  0D56  01F0               	clrf	i1writeEEPROM@address
  7499  0D57  0AF0               	incf	i1writeEEPROM@address,f
  7500  0D58  0874               	movf	i1setData@data1,w
  7501  0D59  120A  118A  26E7  120A  158A  	fcall	i1_writeEEPROM
  7502                           
  7503                           ;eeprom.c: 49:     writeEEPROM(months ,2);
  7504  0D5E  3002               	movlw	2
  7505  0D5F  00F2               	movwf	??i1_setData
  7506  0D60  0872               	movf	??i1_setData,w
  7507  0D61  00F0               	movwf	i1writeEEPROM@address
  7508  0D62  1283               	bcf	3,5	;RP0=0, select bank0
  7509  0D63  1303               	bcf	3,6	;RP1=0, select bank0
  7510  0D64  084A               	movf	_months,w
  7511  0D65  120A  118A  26E7  120A  158A  	fcall	i1_writeEEPROM
  7512                           
  7513                           ;eeprom.c: 50:     writeEEPROM(days ,3);
  7514  0D6A  3003               	movlw	3
  7515  0D6B  00F2               	movwf	??i1_setData
  7516  0D6C  0872               	movf	??i1_setData,w
  7517  0D6D  00F0               	movwf	i1writeEEPROM@address
  7518  0D6E  1283               	bcf	3,5	;RP0=0, select bank0
  7519  0D6F  1303               	bcf	3,6	;RP1=0, select bank0
  7520  0D70  0849               	movf	_days,w
  7521  0D71  120A  118A  26E7  120A  158A  	fcall	i1_writeEEPROM
  7522                           
  7523                           ;eeprom.c: 51:     writeEEPROM(hours ,4);
  7524  0D76  3004               	movlw	4
  7525  0D77  00F2               	movwf	??i1_setData
  7526  0D78  0872               	movf	??i1_setData,w
  7527  0D79  00F0               	movwf	i1writeEEPROM@address
  7528  0D7A  1283               	bcf	3,5	;RP0=0, select bank0
  7529  0D7B  1303               	bcf	3,6	;RP1=0, select bank0
  7530  0D7C  0848               	movf	_hours,w
  7531  0D7D  120A  118A  26E7  120A  158A  	fcall	i1_writeEEPROM
  7532                           
  7533                           ;eeprom.c: 52:     writeEEPROM(minutes ,5);
  7534  0D82  3005               	movlw	5
  7535  0D83  00F2               	movwf	??i1_setData
  7536  0D84  0872               	movf	??i1_setData,w
  7537  0D85  00F0               	movwf	i1writeEEPROM@address
  7538  0D86  1283               	bcf	3,5	;RP0=0, select bank0
  7539  0D87  1303               	bcf	3,6	;RP1=0, select bank0
  7540  0D88  0847               	movf	_minutes,w
  7541  0D89  120A  118A  26E7  120A  158A  	fcall	i1_writeEEPROM
  7542                           
  7543                           ;eeprom.c: 53:     writeEEPROM(functionalStat ,6);
  7544  0D8E  3006               	movlw	6
  7545  0D8F  00F2               	movwf	??i1_setData
  7546  0D90  0872               	movf	??i1_setData,w
  7547  0D91  00F0               	movwf	i1writeEEPROM@address
  7548  0D92  1283               	bcf	3,5	;RP0=0, select bank0
  7549  0D93  1303               	bcf	3,6	;RP1=0, select bank0
  7550  0D94  084F               	movf	_functionalStat,w
  7551  0D95  120A  118A  26E7   	fcall	i1_writeEEPROM
  7552  0D98  0008               	return
  7553  0D99                     __end_ofi1_setData:	
  7554                           
  7555                           	psect	text44
  7556  06E7                     __ptext44:	
  7557 ;; *************** function i1_writeEEPROM *****************
  7558 ;; Defined at:
  7559 ;;		line 14 in file "eeprom.c"
  7560 ;; Parameters:    Size  Location     Type
  7561 ;;  data            1    wreg     unsigned char 
  7562 ;;  address         1    0[COMMON] unsigned char 
  7563 ;; Auto vars:     Size  Location     Type
  7564 ;;  data            1    1[COMMON] unsigned char 
  7565 ;; Return value:  Size  Location     Type
  7566 ;;                  1    wreg      void 
  7567 ;; Registers used:
  7568 ;;		wreg
  7569 ;; Tracked objects:
  7570 ;;		On entry : 0/0
  7571 ;;		On exit  : 0/0
  7572 ;;		Unchanged: 0/0
  7573 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7574 ;;      Params:         1       0       0       0       0
  7575 ;;      Locals:         1       0       0       0       0
  7576 ;;      Temps:          0       0       0       0       0
  7577 ;;      Totals:         2       0       0       0       0
  7578 ;;Total ram usage:        2 bytes
  7579 ;; Hardware stack levels used:    1
  7580 ;; This function calls:
  7581 ;;		Nothing
  7582 ;; This function is called by:
  7583 ;;		i1_setData
  7584 ;; This function uses a non-reentrant model
  7585 ;;
  7586                           
  7587                           
  7588                           ;psect for function i1_writeEEPROM
  7589  06E7                     i1_writeEEPROM:	
  7590                           
  7591                           ;incstack = 0
  7592 ;; hardware stack exceeded
  7593                           ; Regs used in i1_writeEEPROM: [wreg]
  7594                           ;i1writeEEPROM@data stored from wreg
  7595  06E7  00F1               	movwf	i1writeEEPROM@data
  7596                           
  7597                           ;eeprom.c: 15:     EEADR = address;
  7598  06E8  0870               	movf	i1writeEEPROM@address,w
  7599  06E9  1283               	bcf	3,5	;RP0=0, select bank2
  7600  06EA  1703               	bsf	3,6	;RP1=1, select bank2
  7601  06EB  008D               	movwf	13	;volatile
  7602                           
  7603                           ;eeprom.c: 16:     EEDATA = data;
  7604  06EC  0871               	movf	i1writeEEPROM@data,w
  7605  06ED  008C               	movwf	12	;volatile
  7606                           
  7607                           ;eeprom.c: 18:     EECON1bits.EEPGD = 0;
  7608  06EE  1683               	bsf	3,5	;RP0=1, select bank3
  7609  06EF  1703               	bsf	3,6	;RP1=1, select bank3
  7610  06F0  138C               	bcf	12,7	;volsfr
  7611                           
  7612                           ;eeprom.c: 19:     EECON1bits.WREN = 1;
  7613  06F1  150C               	bsf	12,2	;volsfr
  7614                           
  7615                           ;eeprom.c: 21:     INTCONbits.GIE = 0;
  7616  06F2  138B               	bcf	11,7	;volatile
  7617                           
  7618                           ;eeprom.c: 22:     EECON2 = 0x55;
  7619  06F3  3055               	movlw	85
  7620  06F4  008D               	movwf	13	;volsfr
  7621                           
  7622                           ;eeprom.c: 23:     EECON2 = 0xAA;
  7623  06F5  30AA               	movlw	170
  7624  06F6  008D               	movwf	13	;volsfr
  7625                           
  7626                           ;eeprom.c: 24:     EECON1bits.WR = 1;
  7627  06F7  148C               	bsf	12,1	;volsfr
  7628                           
  7629                           ;eeprom.c: 25:     INTCONbits.GIE = 1;
  7630  06F8  178B               	bsf	11,7	;volatile
  7631  06F9                     i1l60:	
  7632                           ;eeprom.c: 27:     while(PIR2bits.EEIF == 0) continue;
  7633                           
  7634  06F9  1283               	bcf	3,5	;RP0=0, select bank0
  7635  06FA  1303               	bcf	3,6	;RP1=0, select bank0
  7636  06FB  1A0D               	btfsc	13,4	;volatile
  7637  06FC  0008               	return
  7638  06FD  2EF9               	goto	i1l60
  7639  06FE                     __end_ofi1_writeEEPROM:	
  7640  007E                     btemp	set	126	;btemp
  7641  007E                     wtemp0	set	126


Data Sizes:
    Strings     154
    Constant    14
    Data        9
    BSS         41
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     36      51
    BANK1            80     34      69
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 18
		 -> STR_12(CODE[18]), STR_11(CODE[17]), STR_10(CODE[17]), STR_9(CODE[18]), 
		 -> STR_7(CODE[17]), STR_6(CODE[17]), STR_5(CODE[17]), STR_4(CODE[17]), 
		 -> STR_3(CODE[17]), STR_2(CODE[17]), STR_1(CODE[17]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 17
		 -> lineTwo(BANK1[17]), lineOne(BANK1[17]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK1[2]), 

    putrsXLCD@buffer	PTR const unsigned char  size(1) Largest target is 17
		 -> STR_8(CODE[17]), 

    putsXLCD@buffer	PTR unsigned char  size(1) Largest target is 17
		 -> lineTwo(BANK1[17]), lineOne(BANK1[17]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _inter in COMMON

    _updateLCD->i1___lwmod
    i1_sprintf->i1___lwmod
    i1___lwmod->i1___lwdiv
    i1_putsXLCD->i1_WriteDataXLCD
    i1_WriteDataXLCD->i1_DelayFor18TCY
    i1_SetDDRamAddr->i1_DelayFor18TCY
    _time->i1_setData
    i1_setData->i1_writeEEPROM

Critical Paths under _main in BANK0

    _main->_beep
    _main->_getData
    _start->_beep
    _setFrequency->_beep
    _writeFrequency->_beep
    _beep->___wmul
    _setData->_writeEEPROM
    _principalScreen->___lwmod
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _putsXLCD->_WriteDataXLCD
    _putrsXLCD->_WriteDataXLCD
    _WriteDataXLCD->_DelayFor18TCY
    _getData->_readEEPROM
    _initLCD->_OpenXLCD
    _SendCMDLCD->_WriteCmdXLCD
    _OpenXLCD->_SetDDRamAddr
    _OpenXLCD->_WriteCmdXLCD
    _WriteCmdXLCD->_DelayFor18TCY
    _SetDDRamAddr->_DelayFor18TCY

Critical Paths under _inter in BANK0

    _inter->_updateLCD
    _updateLCD->i1_sprintf

Critical Paths under _main in BANK1

    _main->_principalScreen
    _start->_sprintf
    _setFrequency->_lockingScreen
    _writeFrequency->_beep
    _lockingScreen->_sprintf
    _principalScreen->_sprintf
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _config->_initLCD

Critical Paths under _inter in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _inter in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _inter in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0   35427
                                             31 BANK1      3     3      0
                               _beep
                             _config
                            _getData
                      _lockingScreen
                    _principalScreen
                       _setFrequency
                              _start
                     _writeFrequency
 ---------------------------------------------------------------------------------
 (1) _start                                                4     4      0    6564
                                             24 BANK1      4     4      0
                       _SetDDRamAddr
                               _beep
                           _putsXLCD
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _setFrequency                                         3     3      0   13770
                                             25 BANK1      3     3      0
                       _SetDDRamAddr
                               _beep
                      _lockingScreen
                           _putsXLCD
                            _setData
                            _sprintf
                     _writeFrequency
 ---------------------------------------------------------------------------------
 (1) _writeFrequency                                       9     7      2    1839
                                              2 BANK1      9     7      2
                               _beep
                            _codFreq
 ---------------------------------------------------------------------------------
 (2) _codFreq                                              4     2      2     155
                                             29 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (2) _beep                                                 3     1      2    1405
                                             35 BANK0      1     1      0
                                              0 BANK1      2     0      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) _setData                                              4     4      0     622
                                             31 BANK0      3     3      0
                        _writeEEPROM
 ---------------------------------------------------------------------------------
 (3) _writeEEPROM                                          2     1      1     576
                                             29 BANK0      2     1      1
 ---------------------------------------------------------------------------------
 (2) _lockingScreen                                        1     1      0    4952
                                             24 BANK1      1     1      0
                       _SetDDRamAddr
                           _putsXLCD
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _principalScreen                                      7     7      0    6555
                                             24 BANK1      7     7      0
                       _SetDDRamAddr
                            ___lwdiv
                            ___lwmod
                          _putrsXLCD
                           _putsXLCD
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             25    20      5    4423
                                              7 BANK1     17    12      5
                            ___lwdiv
                            ___lwmod
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (3) _isdigit                                              2     2      0      68
                                             29 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     496
                                             29 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     702
                                             34 BANK0      2     2      0
                                              3 BANK1      4     0      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     711
                                             29 BANK0      5     1      4
                                              0 BANK1      3     3      0
 ---------------------------------------------------------------------------------
 (2) _putsXLCD                                             2     2      0     485
                                             33 BANK0      2     2      0
                           _BusyXLCD
                      _WriteDataXLCD
 ---------------------------------------------------------------------------------
 (2) _putrsXLCD                                            2     2      0     122
                                             33 BANK0      2     2      0
                           _BusyXLCD
                      _WriteDataXLCD
 ---------------------------------------------------------------------------------
 (3) _WriteDataXLCD                                        3     3      0      44
                                             30 BANK0      3     3      0
                      _DelayFor18TCY
 ---------------------------------------------------------------------------------
 (1) _getData                                              6     6      0      68
                                             30 BANK0      6     6      0
                         _readEEPROM
 ---------------------------------------------------------------------------------
 (2) _readEEPROM                                           1     1      0      22
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _config                                               0     0      0     274
                            _initLCD
                       _setTransStat
 ---------------------------------------------------------------------------------
 (2) _setTransStat                                         4     2      2      98
                                             29 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (2) _initLCD                                              2     2      0     176
                                              0 BANK1      2     2      0
                           _OpenXLCD
                         _SendCMDLCD
 ---------------------------------------------------------------------------------
 (3) _SendCMDLCD                                           1     1      0      66
                                             33 BANK0      1     1      0
                           _BusyXLCD
                       _WriteCmdXLCD
 ---------------------------------------------------------------------------------
 (3) _OpenXLCD                                             3     3      0     110
                                             33 BANK0      3     3      0
                           _BusyXLCD
                       _DelayPORXLCD
                       _SetDDRamAddr
                       _WriteCmdXLCD
 ---------------------------------------------------------------------------------
 (4) _WriteCmdXLCD                                         3     3      0      44
                                             30 BANK0      3     3      0
                      _DelayFor18TCY
 ---------------------------------------------------------------------------------
 (2) _SetDDRamAddr                                         3     3      0      44
                                             30 BANK0      3     3      0
                      _DelayFor18TCY
 ---------------------------------------------------------------------------------
 (4) _DelayFor18TCY                                        1     1      0       0
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _DelayPORXLCD                                         2     2      0       0
                                             29 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (3) _BusyXLCD                                             2     2      0       0
                                             29 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _inter                                                5     5      0    2497
                                             24 BANK0      5     5      0
                               _time
                          _updateLCD
 ---------------------------------------------------------------------------------
 (7) _updateLCD                                            7     7      0    2225
                                             17 BANK0      7     7      0
                     i1_SetDDRamAddr
                          i1___lwdiv
                          i1___lwmod
                         i1_putsXLCD
                          i1_sprintf
 ---------------------------------------------------------------------------------
 (8) i1_sprintf                                           25    20      5    1517
                                              0 BANK0     17    12      5
                          i1___lwdiv
                          i1___lwmod
                           i1___wmul
                          i1_isdigit
 ---------------------------------------------------------------------------------
 (9) i1_isdigit                                            2     2      0      68
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (9) i1___wmul                                             6     2      4     144
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (9) i1___lwmod                                            6     2      4     263
                                              8 COMMON     6     2      4
                          i1___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (9) i1___lwdiv                                            8     4      4     266
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (8) i1_putsXLCD                                           2     2      0      89
                                              4 COMMON     2     2      0
                         i1_BusyXLCD
                    i1_WriteDataXLCD
 ---------------------------------------------------------------------------------
 (9) i1_WriteDataXLCD                                      3     3      0      44
                                              1 COMMON     3     3      0
                    i1_DelayFor18TCY
 ---------------------------------------------------------------------------------
 (9) i1_BusyXLCD                                           2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (8) i1_SetDDRamAddr                                       3     3      0      44
                                              1 COMMON     3     3      0
                    i1_DelayFor18TCY
 ---------------------------------------------------------------------------------
 (10) i1_DelayFor18TCY                                     1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (7) _time                                                 1     1      0     272
                                              5 COMMON     1     1      0
                          i1_setData
 ---------------------------------------------------------------------------------
 (8) i1_setData                                            4     4      0     272
                                              2 COMMON     3     3      0
                      i1_writeEEPROM
 ---------------------------------------------------------------------------------
 (9) i1_writeEEPROM                                        2     1      1     226
                                              0 COMMON     2     1      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _beep
     ___wmul
   _config
     _initLCD
       _OpenXLCD
         _BusyXLCD
         _DelayPORXLCD
         _SetDDRamAddr
           _DelayFor18TCY
         _WriteCmdXLCD
           _DelayFor18TCY
       _SendCMDLCD
         _BusyXLCD
         _WriteCmdXLCD
           _DelayFor18TCY
     _setTransStat
   _getData
     _readEEPROM
   _lockingScreen
     _SetDDRamAddr
       _DelayFor18TCY
     _putsXLCD
       _BusyXLCD
       _WriteDataXLCD
         _DelayFor18TCY
     _sprintf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
       ___wmul
       _isdigit
   _principalScreen
     _SetDDRamAddr
       _DelayFor18TCY
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)
     _putrsXLCD
       _BusyXLCD
       _WriteDataXLCD
         _DelayFor18TCY
     _putsXLCD
       _BusyXLCD
       _WriteDataXLCD
         _DelayFor18TCY
     _sprintf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
       ___wmul
       _isdigit
   _setFrequency
     _SetDDRamAddr
       _DelayFor18TCY
     _beep
       ___wmul
     _lockingScreen
       _SetDDRamAddr
         _DelayFor18TCY
       _putsXLCD
         _BusyXLCD
         _WriteDataXLCD
           _DelayFor18TCY
       _sprintf
         ___lwdiv
         ___lwmod
           ___lwdiv (ARG)
         ___wmul
         _isdigit
     _putsXLCD
       _BusyXLCD
       _WriteDataXLCD
         _DelayFor18TCY
     _setData
       _writeEEPROM
     _sprintf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
       ___wmul
       _isdigit
     _writeFrequency
       _beep
         ___wmul
       _codFreq
   _start
     _SetDDRamAddr
       _DelayFor18TCY
     _beep
       ___wmul
     _putsXLCD
       _BusyXLCD
       _WriteDataXLCD
         _DelayFor18TCY
     _sprintf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
       ___wmul
       _isdigit
   _writeFrequency
     _beep
       ___wmul
     _codFreq

 _inter (ROOT)
   _time
     i1_setData
       i1_writeEEPROM
   _updateLCD
     i1_SetDDRamAddr
       i1_DelayFor18TCY
     i1___lwdiv
     i1___lwmod
       i1___lwdiv (ARG)
     i1_putsXLCD
       i1_BusyXLCD
       i1_WriteDataXLCD
         i1_DelayFor18TCY
     i1_sprintf
       i1___lwdiv
       i1___lwmod
         i1___lwdiv (ARG)
       i1___wmul
       i1_isdigit

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50     22      45       7       86.2%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     24      33       5       63.8%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      86      12        0.0%
ABS                  0      0      86       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Fri Aug 23 21:11:25 2019

              __CFG_CP$ON 0000          ??i1_SetDDRamAddr 0071                         _i 00A0  
                       pc 0002                _UN_BLOCKED 0712                        l60 0994  
             __CFG_CPD$ON 0000                        fsr 0004       ___wmul@multiplicand 003F  
        i1___wmul@product 0074                       l242 0478                       l251 0528  
                     l243 04D0                       l252 04DF                       l244 0487  
                     l239 0474                       l256 0511                       l248 04B9  
                     l257 051C                       l249 04C4                       l266 095C  
                     l194 0FAC                       l540 062B                       l199 0FF6  
                     l537 05C1                       l651 011E                       l666 09E9  
                     fsr0 0004                       indf 0000     __size_of_WriteCmdXLCD 004D  
         __end_of_BLOCKED 0714              __CFG_FOSC$XT 0000              __CFG_LVP$OFF 0000  
                    l4031 0FCC                      l2701 06CC                      l4037 0FE1  
                    l2455 0924                      l2705 06DA                      l2713 093A  
                    l2641 09C3                      l3603 0B4B                      l3605 0B5D  
                    l3613 0B7A                      l3701 015F                      l2647 09BD  
                    l3711 003A                      l2681 0686                      l3609 0B6D  
                    l3713 01B6                      l4089 00CB                      l2675 066E  
                    l3643 006F                      l3619 0C37                      l2693 06B0  
                    l2685 0694                      l2677 0676                      l3581 0E0F  
                    l3557 09E1                      l3709 0163                      l3653 00B7  
                    l3637 005A                      l3591 0E39                      l3671 00EF  
                    l3655 00D6                      l3751 0596                      l2697 06BE  
                    l2689 06A2                      l2961 0A4F                      l3665 00ED  
                    l2955 0A59                      l3587 0E2B                      l3579 0DFD  
                    l2949 0951                      l3685 0133                      l3677 0110  
                    l3765 05C4                      l3773 05D6                      l3853 0492  
                    l3909 0335                      l3695 0150                      l3687 0137  
                    l3871 04EA                      l3863 04A8                      l3935 038D  
                    l3689 013B                      l3785 0616                      l3881 0500  
                    l3961 03E5                      STR_1 0737                      STR_2 079D  
                    STR_3 0737                      STR_4 0759                      STR_5 0737  
                    STR_6 077B                      STR_7 0748                      STR_8 076A  
                    STR_9 0714                      u3300 03E2                      u1375 07DC  
                    u3064 05A3                      u3240 0332                      u1385 0CD8  
                    u3065 05A0                      u1395 0D25                      u3270 038A  
                    u3407 0F9E                      _PIE1 008C                      u3417 0FD8  
                    u3507 0522                      u3427 0FEB                      u2805 0E12  
                    u3517 0532                      u3437 036B                      u2815 0E20  
                    u3607 0C53                      u3527 058F                      u3447 03C3  
                    u3617 0957                      u2825 0E2D                      u2745 09EA  
                    u2905 0C40                      u3537 05B0                      u3457 041B  
                    u3627 0A30                      u2755 09F1                      u3547 05C8  
                    u3467 0440                      u3387 0F66                      u3637 0A46  
                    u3557 05DA                      u3477 04A3                      u3397 0F75  
                    u3647 0655                      u2855 0B50                      u3567 05F4  
                    u3487 04CA                      u3657 0664                      u2785 0E02  
                    u3577 060D                      u3497 04FB                      u3667 08B5  
                    u2875 0B65                      u2955 0106                      u3587 0620  
                    i1l60 06F9                      u3677 08D9                      u2885 0B6E  
                    u3597 0C49                      u3687 08E5                      u2995 0125  
            __CFG_WRT$OFF 0000              _stereoEnable 0046                      _beep 0C14  
                    _days 0049                      _main 0F60                      _time 0B81  
                    btemp 007E    __size_of_WriteDataXLCD 004D                      start 0012  
       ??i1_WriteDataXLCD 0071             __CFG_IESO$OFF 0000             __CFG_MCLRE$ON 0000  
              i1_putsXLCD 095F               _writeEEPROM 097C              _WriteCmdXLCD 0CAB  
        ??_writeFrequency 00C7                     ?_beep 00C3        writeEEPROM@address 003D  
           ?_SetDDRamAddr 0070                     ?_main 0070                     _EEADR 010D  
                   STR_10 0726                     STR_11 078C                     STR_12 0714  
           __CFG_WDTE$OFF 0000                     ?_time 0070                     _ANSEL 0188  
                   _T1CON 0010           __end_of___lwdiv 0E46                     i1l229 0BC6  
         __end_of___lwmod 0B81                     i1l651 0298                     i1l666 09A3  
                   _TMR1H 000F                     _TMR1L 000E                     _PORTA 0005  
                   _PORTB 0006                     _PORTC 0007                     _TRISA 0085  
                   _TRISB 0086                     _TRISC 0087           __end_of_codFreq 08F9  
              i1isdigit@c 0071           __end_of_getData 0EFD            __CFG_FCMEN$OFF 0000  
      i1___lwmod@dividend 007A           __end_of_initLCD 0A4C               ?i1_BusyXLCD 0070  
         __end_of_dpowers 0710      writeFrequency@buffer 00CA                     _level 004D  
                   _inter 0A00           __end_of_isdigit 0926                     _hours 0048  
         __end_of_setData 0DEF                     _start 0323            __CFG_BOREN$OFF 0000  
                   pclath 000A          __end_ofi1___wmul 09BA                     status 0003  
     i1___wmul@multiplier 0070                     wtemp0 007E           __end_of_sprintf 01BB  
      __size_ofi1___lwdiv 003C        __size_ofi1___lwmod 0032  __size_of_principalScreen 0063  
         __initialization 0015     __end_ofi1_writeEEPROM 06FE         __end_of_FINAL_DAY 0711  
            __end_of_beep 0C5F              __end_of_main 1000              __end_of_time 0BC9  
        __end_of_BusyXLCD 08EC        __size_ofi1_isdigit 000E        __size_ofi1_setData 0054  
   __size_of_DelayPORXLCD 000C                i1sprintf@c 0030                i1sprintf@f 0020  
          ??_SetDDRamAddr 003E                _SendCMDLCD 0937                    ??_beep 0043  
        __end_of_OpenXLCD 06E7                    ??_main 00E2                    ??_time 0075  
      __size_ofi1_sprintf 0168             _WriteDataXLCD 0CF8  __size_ofi1_DelayFor18TCY 0006  
      _hundredMiliSeconds 0050                    _ADCON0 001F                    _ADCON1 009F  
                  ?_inter 0070                    _EEDATA 010C                    _EECON2 018D  
                  ?_start 0070                    _ANSELH 0189                    i1l3101 031E  
                  i1l3015 0960                    i1l3031 01F7                    i1l3009 0966  
                  i1l3041 0231                    i1l3025 01E2                    i1l3043 0250  
                  i1l3053 0267                    i1l3073 02AD                    i1l3065 028A  
                  i1l3083 02CA                    i1l3075 02B1                    i1l3059 0269  
                  u201_25 0ADC                    i1l3077 02B5                    i1l3361 0BBC  
                  i1l3097 02DD                    i1l3089 02D9                    i1l2811 0AE7  
                  i1l4091 0245                    i1l3099 01C2                    i1l3437 0A18  
                  i1l2815 0AF5                    i1l2831 0905                    i1l2809 0AD9  
                  i1l2819 0B00                    i1l2763 099B                    u203_25 0AED  
                  i1l2793 0B31                    i1l2785 0B0D                    i1l2787 0B1B  
                  i1l2797 0B3C                    u204_25 0AF6                    u222_25 0280  
                  u215_25 0C8B                    _INTCON 000B                    u226_25 029F  
                  u190_25 09A4                    u191_25 09AB                    u194_25 0B10  
                  u370_27 08AD                    u188_25 0BF4                    u196_25 0B1C  
                  u197_25 0B28                    u198_25 0B32                    u369_27 08CD  
           i1sprintf@flag 002A             i1sprintf@prec 0029            __CFG_PWRTE$OFF 0000  
            _DelayPORXLCD 08D3               ?i1_putsXLCD 0070                    ___wmul 09DD  
               ??___lwdiv 0041       __size_ofi1_BusyXLCD 000A                    beep@ms 00C3  
               ??___lwmod 0042                    _config 0A76                 ??_codFreq 003F  
               ??_getData 003E                    _months 004A            ?_WriteDataXLCD 0070  
               ??_initLCD 00C3         __end_ofi1___lwdiv 0B41         __end_ofi1___lwmod 0B05  
               ??_isdigit 003D                 ??_setData 003F                    saved_w 007E  
        __end_of_putsXLCD 09DD                    start@i 00DE                 ??_sprintf 00CF  
       __end_ofi1_isdigit 0907         __end_ofi1_setData 0D99   __end_of__initialization 002F  
       __end_ofi1_sprintf 0323           writeEEPROM@data 003E            __pcstackCOMMON 0070  
            __pidataBANK0 08C0             __end_of_inter 0A24         ??_principalScreen 00DB  
           __end_of_start 044D               ?_SendCMDLCD 0070                 ?i1___wmul 0070  
    i1SetDDRamAddr@DDaddr 0073               setData@full 0070               i1sprintf@ap 0028  
             i1sprintf@sp 002D    __size_of_lockingScreen 002F           i1_WriteDataXLCD 0BC9  
     __size_ofi1_putsXLCD 001D                   ??_inter 0038    __size_of_DelayFor18TCY 0007  
            sprintf@width 00D7                   ??_start 00DB         ??i1_DelayFor18TCY 0070  
           ?_setFrequency 0070                __pbssBANK0 004D                __pbssBANK1 00A0  
               ?_BusyXLCD 0070           WriteCmdXLCD@cmd 0040      __end_of_SetDDRamAddr 07FC  
               ?_OpenXLCD 0070                __pmaintext 0F60              ?_writeEEPROM 003D  
       WriteDataXLCD@data 0040                   ?___wmul 003D                __pintentry 0004  
                 ?_config 0070           ??_WriteDataXLCD 003E                   _BLOCKED 0713  
          updateLCD@decim 0036                ??i1___wmul 0074            updateLCD@integ 0037  
              _isOnConfig 004E             ?_setTransStat 003D        __size_of_updateLCD 005A  
            ??i1_BusyXLCD 0070            ??_setFrequency 00DC                __stringtab 0700  
      __size_of_putrsXLCD 002A                ??_BusyXLCD 003D            i1sprintf@width 002E  
              _readEEPROM 0907       __size_of_SendCMDLCD 0012                ??_OpenXLCD 0041  
           _lockingScreen 0AA4             _DelayFor18TCY 08B1           __size_of___wmul 0023  
               ?_putsXLCD 0070                   ___lwdiv 0DEF                   ___lwmod 0B41  
         __size_of_config 002E        __end_ofi1_BusyXLCD 08D3                 _FINAL_DAY 0710  
                 _codFreq 08EC           putrsXLCD@buffer 0042                   _getData 0EA0  
                 __ptext1 0323                   __ptext2 044D                   __ptext3 0565  
                 __ptext4 08EC                   __ptext5 0C14                   __ptext6 0D99  
                 __ptext7 097C                   __ptext8 0AA4                   __ptext9 0EFD  
                 _cntTmr1 0052   __end_ofi1_WriteDataXLCD 0C14                   _initLCD 0A24  
               _T1CONbits 0010            ??_setTransStat 003F                   _dpowers 0706  
       i1___lwdiv@divisor 0070                   _lineOne 00B2                   _lineTwo 00A1  
                 _isdigit 0916         i1___lwdiv@counter 0077                   _prTmr1H 004B  
                 _prTmr1L 004C                   _setData 0D99                   _minutes 0047  
 __size_ofi1_SetDDRamAddr 004C                   _seconds 0051                   _sprintf 0033  
                 clrloop0 08B9      end_of_initialization 002F        __end_of_UN_BLOCKED 0713  
          ?_lockingScreen 0070              ??i1_putsXLCD 0074         __end_of_updateLCD 0EA0  
          ?_DelayFor18TCY 0070                ??_putsXLCD 0041     i1___wmul@multiplicand 0072  
       __end_of_putrsXLCD 0A76                 _PORTAbits 0005                 _PORTBbits 0006  
               _PORTCbits 0007                 _TRISBbits 0086   __size_of_writeFrequency 00CA  
   __size_of_SetDDRamAddr 004E                 i1___lwdiv 0B05                 i1___lwmod 0AD3  
  __size_ofi1_writeEEPROM 0017         readEEPROM@address 003D        __end_ofi1_putsXLCD 097C  
             ?_readEEPROM 0070           _principalScreen 0EFD                 i1_isdigit 08F9  
               i1_setData 0D45                 i1_sprintf 01BB       __end_of_FINAL_MONTH 0712  
    __size_of_writeEEPROM 001D      __end_of_setFrequency 0565            __end_of___wmul 0A00  
            ??_SendCMDLCD 0041            __end_of_config 0AA4         i1___lwmod@divisor 0078  
       i1___lwmod@counter 007D              _SetDDRamAddr 07AE           i1_DelayFor18TCY 08AB  
        ?i1_WriteDataXLCD 0070        SetDDRamAddr@DDaddr 0040       start_initialization 0015  
       __size_ofi1___wmul 0021                ?i1___lwdiv 0070                ?i1___lwmod 0078  
       __size_of_BusyXLCD 000D                ?i1_isdigit 0070              setData@data0 0040  
            setData@data1 0041           ??_lockingScreen 00DB                ?i1_setData 0070  
      __end_of_SendCMDLCD 0949      __end_of_setTransStat 095F              i1sprintf@val 002B  
         ??_DelayFor18TCY 003D         __size_of_OpenXLCD 00B8                ?i1_sprintf 0020  
           i1_writeEEPROM 06E7                  ??___wmul 0041                init_fetch0 0926  
           ?_WriteCmdXLCD 0070                  ??_config 0044               __pdataBANK0 0044  
     __size_of_readEEPROM 000F            i1_SetDDRamAddr 0C5F                 ___latbits 0002  
           __pcstackBANK0 0020             __pcstackBANK1 00C3              _isdigit$1104 003D  
 __end_of_principalScreen 0F60               sprintf@flag 00D4               sprintf@prec 00D3  
             _FINAL_MONTH 0711            putsXLCD@buffer 0042            i1setData@data0 0073  
          i1setData@data1 0074          ___lwdiv@dividend 003F            ?i1_writeEEPROM 0070  
 __end_ofi1_DelayFor18TCY 08B1            ??_WriteCmdXLCD 003E                  ?___lwdiv 003D  
                ?___lwmod 00C6                  ?_codFreq 003D                  ?_getData 0070  
           SendCMDLCD@CMD 0041                 __pstrings 0700         __size_of_putsXLCD 0023  
   __end_of_WriteDataXLCD 0D45    __end_ofi1_SetDDRamAddr 0CAB                  ?_initLCD 0070  
                ?_isdigit 0070                  ?_setData 0070            _writeFrequency 0565  
               _frequency 0044       i1WriteDataXLCD@data 0073          ___lwdiv@quotient 00C4  
             ??i1___lwdiv 0074               ??i1___lwmod 007C                 codFreq@fr 003F  
                ?_sprintf 00CA            __size_of_inter 0024            __size_of_start 012A  
          i1_isdigit$1104 0070         interrupt_function 0004            ___wmul@product 0041  
             ??i1_isdigit 0070                 clear_ram0 08B8               ??i1_setData 0072  
           ?_DelayPORXLCD 0070     __size_of_setFrequency 0118                  _PIR1bits 000C  
         OpenXLCD@lcdtype 0043                  _PIR2bits 000D          setTransStat@stat 003D  
             ??i1_sprintf 0025                 _updateLCD 0E46            _functionalStat 004F  
             __stringbase 0705         ___wmul@multiplier 003D                  i1___wmul 0999  
         ?i1_SetDDRamAddr 0070    __end_of_writeFrequency 062F                 _putrsXLCD 0A4C  
        ?_principalScreen 0070              _setFrequency 044D                  _BusyXLCD 08DF  
   __size_of_setTransStat 0016              ??_readEEPROM 003D            ??_DelayPORXLCD 003D  
              _EECON1bits 018C                  _OpenXLCD 062F           ??i1_writeEEPROM 0071  
        ?i1_DelayFor18TCY 0070                ?_updateLCD 0070          __size_of___lwdiv 0057  
        __size_of___lwmod 0040      i1writeEEPROM@address 0070        __end_of__stringtab 0706  
        __size_of_codFreq 000D          __size_of_getData 005D           ?_writeFrequency 00C5  
              sprintf@val 00D5                ?_putrsXLCD 0070          __size_of_initLCD 0028  
      __end_of_readEEPROM 0916              _setTransStat 0949          __size_of_isdigit 0010  
         ___lwdiv@divisor 003D          __size_of_setData 0056           ___lwdiv@counter 00C3  
                __ptext10 0033                  __ptext11 0916                  __ptext20 0A76  
                __ptext12 09DD                  __ptext21 0949                  __ptext13 0B41  
                __ptext30 0A00                  __ptext22 0A24                  __ptext14 0DEF  
                __ptext31 0E46                  __ptext23 0937                  __ptext15 09BA  
                __ptext40 0C5F                  __ptext32 01BB                  __ptext24 062F  
                __ptext16 0A4C                  __ptext41 08AB                  __ptext33 08F9  
                __ptext25 0CAB                  __ptext17 0CF8                  __ptext42 0B81  
                __ptext34 0999                  __ptext26 07AE                  __ptext18 0EA0  
                __ptext43 0D45                  __ptext35 0AD3                  __ptext27 08B1  
                __ptext19 0907                  __ptext44 06E7                  __ptext36 0B05  
                __ptext28 08D3                  __ptext37 095F                  __ptext29 08DF  
                __ptext38 0BC9                  __ptext39 08C9         __CFG_BOR4V$BOR40V 0000  
    __end_of_WriteCmdXLCD 0CF8          __size_of_sprintf 0188        i1___lwdiv@dividend 0072  
           __size_of_beep 004B         i1writeEEPROM@data 0071                  codFreq@f 003D  
           __size_of_main 00A0             __size_of_time 0048             ??_writeEEPROM 003E  
                _putsXLCD 09BA           writeFrequency@f 00C5           writeFrequency@r 00CC  
      i1___lwdiv@quotient 0075               getData@aux0 0042               getData@aux1 0043  
              _INTCONbits 000B                  init_ram0 092A                  isdigit@c 003E  
__size_ofi1_WriteDataXLCD 004B                  intlevel1 0000                 sprintf@ap 00D2  
               sprintf@sp 00D9          ___lwmod@dividend 00C8                 stringcode 0700  
   __end_of_lockingScreen 0AD3     __end_of_DelayFor18TCY 08B8               ??_updateLCD 0031  
     __end_of_writeEEPROM 0999                  sprintf@c 00DA                  sprintf@f 00CA  
    __end_of_DelayPORXLCD 08DF          i1putsXLCD@buffer 0075               ??_putrsXLCD 0041  
         ___lwmod@divisor 00C6           ___lwmod@counter 0043                  stringdir 0700  
                stringtab 0700                i1_BusyXLCD 08C9      principalScreen@decim 00E0  
    principalScreen@integ 00E1  
