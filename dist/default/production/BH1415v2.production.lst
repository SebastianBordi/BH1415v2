

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Wed Aug  7 15:50:27 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	18F452
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	eeprom_data,global,class=EEDATA,delta=1,noexec
     6                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     8                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    16                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    17                           	psect	text0,global,reloc=2,class=CODE,delta=1
    18                           	psect	text1,global,reloc=2,class=CODE,delta=1
    19                           	psect	text2,global,reloc=2,class=CODE,delta=1
    20                           	psect	text3,global,reloc=2,class=CODE,delta=1
    21                           	psect	text4,global,reloc=2,class=CODE,delta=1
    22                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=2
    23                           	psect	text6,global,reloc=2,class=CODE,delta=1
    24                           	psect	text7,global,reloc=2,class=CODE,delta=1
    25                           	psect	text8,global,reloc=2,class=CODE,delta=1
    26                           	psect	text9,global,reloc=2,class=CODE,delta=1
    27                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=2
    28                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    29                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    30                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=2
    31                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=2
    32                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=1
    33                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=1
    34                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=2
    35                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=2
    36                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    37                           	psect	text20,global,reloc=2,class=CODE,delta=1
    38                           	psect	text21,global,reloc=2,class=CODE,delta=1
    39                           	psect	text22,global,reloc=2,class=CODE,delta=1
    40                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=1
    41                           	psect	text24,global,reloc=2,class=CODE,delta=1
    42                           	psect	text25,global,reloc=2,class=CODE,delta=1
    43                           	psect	text26,global,reloc=2,class=CODE,delta=1
    44                           	psect	text27,global,reloc=2,class=CODE,delta=1
    45                           	psect	text28,global,reloc=2,class=CODE,delta=1
    46                           	psect	text29,global,reloc=2,class=CODE,delta=1
    47                           	psect	text30,global,reloc=2,class=CODE,delta=1
    48                           	psect	text31,global,reloc=2,class=CODE,delta=1
    49                           	psect	text32,global,reloc=2,class=CODE,delta=1
    50                           	psect	text33,global,reloc=2,class=CODE,delta=1
    51                           	psect	text34,global,reloc=2,class=CODE,delta=1
    52                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    53                           	psect	text36,global,reloc=2,class=CODE,delta=1
    54                           	psect	text37,global,reloc=2,class=CODE,delta=1
    55                           	psect	text38,global,reloc=2,class=CODE,delta=1
    56                           	psect	text39,global,reloc=2,class=CODE,delta=1
    57                           	psect	text40,global,reloc=2,class=CODE,delta=1
    58                           	psect	text41,global,reloc=2,class=CODE,delta=1
    59                           	psect	text42,global,reloc=2,class=CODE,delta=1
    60                           	psect	text43,global,reloc=2,class=CODE,delta=1
    61                           	psect	text44,global,reloc=2,class=CODE,delta=1
    62                           	psect	text45,global,reloc=2,class=CODE,delta=1
    63                           	psect	text46,global,reloc=2,class=CODE,delta=1
    64                           	psect	text47,global,reloc=2,class=CODE,delta=1
    65                           	psect	text48,global,reloc=2,class=CODE,delta=1
    66                           	psect	text49,global,reloc=2,class=CODE,delta=1
    67                           	psect	text50,global,reloc=2,class=CODE,delta=1
    68                           	psect	text51,global,reloc=2,class=CODE,delta=1
    69                           	psect	text52,global,reloc=2,class=CODE,delta=1
    70                           	psect	text53,global,reloc=2,class=CODE,delta=1
    71                           	psect	text54,global,reloc=2,class=CODE,delta=1
    72                           	psect	text55,global,reloc=2,class=CODE,delta=1
    73                           	psect	text56,global,reloc=2,class=CODE,delta=1
    74                           	psect	text57,global,reloc=2,class=CODE,delta=1
    75                           	psect	text58,global,reloc=2,class=CODE,delta=1,group=1
    76                           	psect	text59,global,reloc=2,class=CODE,delta=1,group=1
    77                           	psect	text60,global,reloc=2,class=CODE,delta=1
    78                           	psect	text61,global,reloc=2,class=CODE,delta=1
    79                           	psect	text62,global,reloc=2,class=CODE,delta=1
    80                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    81                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    82                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    83  0000                     
    84                           ; Version 2.05
    85                           ; Generated 20/12/2018 GMT
    86                           ; 
    87                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    88                           ; All rights reserved.
    89                           ; 
    90                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    91                           ; 
    92                           ; Redistribution and use in source and binary forms, with or without modification, are
    93                           ; permitted provided that the following conditions are met:
    94                           ; 
    95                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    96                           ;        conditions and the following disclaimer.
    97                           ; 
    98                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    99                           ;        of conditions and the following disclaimer in the documentation and/or other
   100                           ;        materials provided with the distribution.
   101                           ; 
   102                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   103                           ;        software without specific prior written permission.
   104                           ; 
   105                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   106                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   107                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   108                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   109                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   110                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   111                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   112                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   113                           ; 
   114                           ; 
   115                           ; Code-generator required, PIC18F452 Definitions
   116                           ; 
   117                           ; SFR Addresses
   118  0000                     
   119                           	psect	eeprom_data
   120  F00000  7E 03 00 00 00 00 01 00 	db	126,3,0,0,0,0,1,0	;# 
   121  F00008  7E 03 00 00 00 00 01 00 	db	126,3,0,0,0,0,1,0	;# 
   122  F00010  7E 03 00 00 00 00 01 00 	db	126,3,0,0,0,0,1,0	;# 
   123  F00018  7E 03 00 00 00 00 01 00 	db	126,3,0,0,0,0,1,0	;# 
   124  F00020  7E 03 00 00 00 00 01 00 	db	126,3,0,0,0,0,1,0	;# 
   125                           
   126                           	psect	idataCOMRAM
   127  002A93                     __pidataCOMRAM:
   128                           	opt callstack 0
   129                           
   130                           ;initializer for _prTmr0H
   131  002A93  C5                 	db	197
   132                           
   133                           ;initializer for _prTmr0L
   134  002A94  68                 	db	104
   135                           
   136                           ;initializer for _prTmr1H
   137  002A95  6D                 	db	109
   138                           
   139                           ;initializer for _prTmr1L
   140  002A96  84                 	db	132
   141                           
   142                           	psect	idataBANK0
   143  002A8E                     __pidataBANK0:
   144                           	opt callstack 0
   145                           
   146                           ;initializer for _stereoEnable
   147  002A8E  01                 	db	1
   148                           
   149                           ;initializer for _minutes
   150  002A8F  0F                 	db	15
   151                           
   152                           ;initializer for _hours
   153  002A90  16                 	db	22
   154                           
   155                           ;initializer for _days
   156  002A91  13                 	db	19
   157                           
   158                           ;initializer for _months
   159  002A92  03                 	db	3
   160                           
   161                           	psect	smallconst
   162  000600                     __psmallconst:
   163                           	opt callstack 0
   164  000600  00                 	db	0
   165  000601  0D                 	db	13
   166  000602                     __end_of_FINAL_DAY:
   167                           	opt callstack 0
   168  000602  06                 	db	6
   169  000603                     __end_of_FINAL_MONTH:
   170                           	opt callstack 0
   171  000603  01                 	db	1
   172  000604                     __end_of_UN_BLOCKED:
   173                           	opt callstack 0
   174  000604  00                 	db	0
   175  000605                     __end_of_BLOCKED:
   176                           	opt callstack 0
   177  0000                     _PORTEbits	set	3972
   178  0000                     _TRISDbits	set	3989
   179  0000                     _PORTD	set	3971
   180  0000                     _PORTDbits	set	3971
   181  0000                     _PORTB	set	3969
   182  0000                     _TMR0L	set	4054
   183  0000                     _TMR0H	set	4055
   184  0000                     _TMR1L	set	4046
   185  0000                     _TMR1H	set	4047
   186  0000                     _PIR1bits	set	3998
   187  0000                     _T1CONbits	set	4045
   188  0000                     _ADCON0bits	set	4034
   189  0000                     _ADCON1	set	4033
   190  0000                     _ADCON0	set	4034
   191  0000                     _T0CON	set	4053
   192  0000                     _T1CON	set	4045
   193  0000                     _TRISE	set	3990
   194  0000                     _TRISD	set	3989
   195  0000                     _TRISC	set	3988
   196  0000                     _TRISB	set	3987
   197  0000                     _TRISA	set	3986
   198  0000                     _PIE1	set	3997
   199  0000                     _INTCON	set	4082
   200  0000                     _OSCCON	set	4051
   201  0000                     _ADRESH	set	4036
   202  0000                     _PORTCbits	set	3970
   203  0000                     _PORTAbits	set	3968
   204  0000                     _PIR2bits	set	4001
   205  0000                     _EECON2	set	4007
   206  0000                     _INTCONbits	set	4082
   207  0000                     _EEDATA	set	4008
   208  0000                     _EECON1bits	set	4006
   209  0000                     _EEADR	set	4009
   210  000605                     STR_4:
   211  000605  46                 	db	70	;'F'
   212  000606  63                 	db	99	;'c'
   213  000607  69                 	db	105	;'i'
   214  000608  61                 	db	97	;'a'
   215  000609  2E                 	db	46
   216  00060A  20                 	db	32
   217  00060B  20                 	db	32
   218  00060C  25                 	db	37
   219  00060D  33                 	db	51	;'3'
   220  00060E  64                 	db	100	;'d'
   221  00060F  2E                 	db	46
   222  000610  25                 	db	37
   223  000611  64                 	db	100	;'d'
   224  000612  20                 	db	32
   225  000613  4D                 	db	77	;'M'
   226  000614  48                 	db	72	;'H'
   227  000615  7A                 	db	122	;'z'
   228  000616  00                 	db	0
   229  000617                     STR_1:
   230  000617  46                 	db	70	;'F'
   231  000618  69                 	db	105	;'i'
   232  000619  6A                 	db	106	;'j'
   233  00061A  61                 	db	97	;'a'
   234  00061B  6E                 	db	110	;'n'
   235  00061C  64                 	db	100	;'d'
   236  00061D  6F                 	db	111	;'o'
   237  00061E  20                 	db	32
   238  00061F  46                 	db	70	;'F'
   239  000620  63                 	db	99	;'c'
   240  000621  69                 	db	105	;'i'
   241  000622  61                 	db	97	;'a'
   242  000623  2E                 	db	46
   243  000624  20                 	db	32
   244  000625  20                 	db	32
   245  000626  20                 	db	32
   246  000627  00                 	db	0
   247  000628                     STR_3:
   248  000628  53                 	db	83	;'S'
   249  000629  65                 	db	101	;'e'
   250  00062A  6C                 	db	108	;'l'
   251  00062B  65                 	db	101	;'e'
   252  00062C  63                 	db	99	;'c'
   253  00062D  63                 	db	99	;'c'
   254  00062E  69                 	db	105	;'i'
   255  00062F  6F                 	db	111	;'o'
   256  000630  6E                 	db	110	;'n'
   257  000631  65                 	db	101	;'e'
   258  000632  20                 	db	32
   259  000633  46                 	db	70	;'F'
   260  000634  63                 	db	99	;'c'
   261  000635  69                 	db	105	;'i'
   262  000636  61                 	db	97	;'a'
   263  000637  2E                 	db	46
   264  000638  00                 	db	0
   265  000639                     STR_2:
   266  000639  41                 	db	65	;'A'
   267  00063A  4D                 	db	77	;'M'
   268  00063B  50                 	db	80	;'P'
   269  00063C  52                 	db	82	;'R'
   270  00063D  4F                 	db	79	;'O'
   271  00063E  20                 	db	32
   272  00063F  20                 	db	32
   273  000640  20                 	db	32
   274  000641  20                 	db	32
   275  000642  20                 	db	32
   276  000643  20                 	db	32
   277  000644  45                 	db	69	;'E'
   278  000645  58                 	db	88	;'X'
   279  000646  2D                 	db	45
   280  000647  46                 	db	70	;'F'
   281  000648  4D                 	db	77	;'M'
   282  000649  00                 	db	0
   283                           
   284                           ; #config settings
   285  00064A  00                 	db	0	; dummy byte at the end
   286  0000                     
   287                           	psect	cinit
   288  0021F2                     __pcinit:
   289                           	opt callstack 0
   290  0021F2                     start_initialization:
   291                           	opt callstack 0
   292  0021F2                     __initialization:
   293                           	opt callstack 0
   294                           
   295                           ; Initialize objects allocated to BANK0 (5 bytes)
   296                           ; load TBLPTR registers with __pidataBANK0
   297  0021F2  0E8E               	movlw	low __pidataBANK0
   298  0021F4  6EF6               	movwf	tblptrl,c
   299  0021F6  0E2A               	movlw	high __pidataBANK0
   300  0021F8  6EF7               	movwf	tblptrh,c
   301  0021FA  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   302  0021FC  6EF8               	movwf	tblptru,c
   303  0021FE  EE00  F0FA         	lfsr	0,__pdataBANK0
   304  002202  EE10 F005          	lfsr	1,5
   305  002206                     copy_data0:
   306  002206  0009               	tblrd		*+
   307  002208  CFF5 FFEE          	movff	tablat,postinc0
   308  00220C  50E5               	movf	postdec1,w,c
   309  00220E  50E1               	movf	fsr1l,w,c
   310  002210  E1FA               	bnz	copy_data0
   311                           
   312                           ; Initialize objects allocated to COMRAM (4 bytes)
   313                           ; load TBLPTR registers with __pidataCOMRAM
   314  002212  0E93               	movlw	low __pidataCOMRAM
   315  002214  6EF6               	movwf	tblptrl,c
   316  002216  0E2A               	movlw	high __pidataCOMRAM
   317  002218  6EF7               	movwf	tblptrh,c
   318  00221A  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   319  00221C  6EF8               	movwf	tblptru,c
   320  00221E  EE00  F07A         	lfsr	0,__pdataCOMRAM
   321  002222  EE10 F004          	lfsr	1,4
   322  002226                     copy_data1:
   323  002226  0009               	tblrd		*+
   324  002228  CFF5 FFEE          	movff	tablat,postinc0
   325  00222C  50E5               	movf	postdec1,w,c
   326  00222E  50E1               	movf	fsr1l,w,c
   327  002230  E1FA               	bnz	copy_data1
   328                           
   329                           ; Clear objects allocated to BANK1 (68 bytes)
   330  002232  EE01  F000         	lfsr	0,__pbssBANK1
   331  002236  0E44               	movlw	68
   332  002238                     clear_0:
   333  002238  6AEE               	clrf	postinc0,c
   334  00223A  06E8               	decf	wreg,f,c
   335  00223C  E1FD               	bnz	clear_0
   336                           
   337                           ; Clear objects allocated to BANK0 (12 bytes)
   338  00223E  EE00  F0EE         	lfsr	0,__pbssBANK0
   339  002242  0E0C               	movlw	12
   340  002244                     clear_1:
   341  002244  6AEE               	clrf	postinc0,c
   342  002246  06E8               	decf	wreg,f,c
   343  002248  E1FD               	bnz	clear_1
   344                           
   345                           ; Clear objects allocated to COMRAM (1 bytes)
   346  00224A  6A7E               	clrf	__pbssCOMRAM& (0+255),c
   347  00224C                     end_of_initialization:
   348                           	opt callstack 0
   349  00224C                     __end_of__initialization:
   350                           	opt callstack 0
   351  00224C  907F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   352  00224E  927F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   353  002250  0E00               	movlw	low (__Lmediumconst shr (0+16))
   354  002252  6EF8               	movwf	tblptru,c
   355  002254  0100               	movlb	0
   356  002256  EF6A  F00D         	goto	_main	;jump to C main() function
   357                           
   358                           	psect	bssCOMRAM
   359  00007E                     __pbssCOMRAM:
   360                           	opt callstack 0
   361  00007E                     _cntTmr1:
   362                           	opt callstack 0
   363  00007E                     	ds	1
   364                           
   365                           	psect	dataCOMRAM
   366  00007A                     __pdataCOMRAM:
   367                           	opt callstack 0
   368  00007A                     _prTmr0H:
   369                           	opt callstack 0
   370  00007A                     	ds	1
   371  00007B                     _prTmr0L:
   372                           	opt callstack 0
   373  00007B                     	ds	1
   374  00007C                     _prTmr1H:
   375                           	opt callstack 0
   376  00007C                     	ds	1
   377  00007D                     _prTmr1L:
   378                           	opt callstack 0
   379  00007D                     	ds	1
   380                           
   381                           	psect	bssBANK0
   382  0000EE                     __pbssBANK0:
   383                           	opt callstack 0
   384  0000EE                     _width:
   385                           	opt callstack 0
   386  0000EE                     	ds	2
   387  0000F0                     _prec:
   388                           	opt callstack 0
   389  0000F0                     	ds	2
   390  0000F2                     _flags:
   391                           	opt callstack 0
   392  0000F2                     	ds	2
   393  0000F4                     _frequency:
   394                           	opt callstack 0
   395  0000F4                     	ds	2
   396  0000F6                     _functionalStat:
   397                           	opt callstack 0
   398  0000F6                     	ds	1
   399  0000F7                     _hundredMiliSeconds:
   400                           	opt callstack 0
   401  0000F7                     	ds	1
   402  0000F8                     _seconds:
   403                           	opt callstack 0
   404  0000F8                     	ds	1
   405  0000F9                     _level:
   406                           	opt callstack 0
   407  0000F9                     	ds	1
   408                           
   409                           	psect	dataBANK0
   410  0000FA                     __pdataBANK0:
   411                           	opt callstack 0
   412  0000FA                     _stereoEnable:
   413                           	opt callstack 0
   414  0000FA                     	ds	1
   415  0000FB                     _minutes:
   416                           	opt callstack 0
   417  0000FB                     	ds	1
   418  0000FC                     _hours:
   419                           	opt callstack 0
   420  0000FC                     	ds	1
   421  0000FD                     _days:
   422                           	opt callstack 0
   423  0000FD                     	ds	1
   424  0000FE                     _months:
   425                           	opt callstack 0
   426  0000FE                     	ds	1
   427                           
   428                           	psect	bssBANK1
   429  000100                     __pbssBANK1:
   430                           	opt callstack 0
   431  000100                     _nout:
   432                           	opt callstack 0
   433  000100                     	ds	2
   434  000102                     _dbuf:
   435                           	opt callstack 0
   436  000102                     	ds	32
   437  000122                     _lineTwo:
   438                           	opt callstack 0
   439  000122                     	ds	17
   440  000133                     _lineOne:
   441                           	opt callstack 0
   442  000133                     	ds	17
   443                           
   444                           	psect	cstackBANK0
   445  000080                     __pcstackBANK0:
   446                           	opt callstack 0
   447  000080                     ??_vumeter:
   448  000080                     ??_BusyXLCD:
   449  000080                     ??_DelayPORXLCD:
   450  000080                     ?_strlen:
   451                           	opt callstack 0
   452  000080                     ?_isdigit:
   453                           	opt callstack 0
   454  000080                     ?_isspace:
   455                           	opt callstack 0
   456  000080                     ?_codFreq:
   457                           	opt callstack 0
   458  000080                     ?___wmul:
   459                           	opt callstack 0
   460  000080                     ?___aodiv:
   461                           	opt callstack 0
   462  000080                     ?___aomod:
   463                           	opt callstack 0
   464  000080                     readEEPROM@address:
   465                           	opt callstack 0
   466  000080                     writeEEPROM@address:
   467                           	opt callstack 0
   468  000080                     WriteCmdXLCD@cmd:
   469                           	opt callstack 0
   470  000080                     SetDDRamAddr@DDaddr:
   471                           	opt callstack 0
   472  000080                     codFreq@f:
   473                           	opt callstack 0
   474  000080                     ___wmul@multiplier:
   475                           	opt callstack 0
   476  000080                     isdigit@c:
   477                           	opt callstack 0
   478  000080                     isspace@c:
   479                           	opt callstack 0
   480  000080                     fputc@c:
   481                           	opt callstack 0
   482  000080                     strlen@s:
   483                           	opt callstack 0
   484  000080                     ___aodiv@dividend:
   485                           	opt callstack 0
   486  000080                     ___aomod@dividend:
   487                           	opt callstack 0
   488                           
   489                           ; 8 bytes @ 0x0
   490  000080                     	ds	1
   491  000081                     ??_getData:
   492  000081                     ??_OpenXLCD:
   493  000081                     writeEEPROM@data:
   494                           	opt callstack 0
   495  000081                     SendCMDLCD@CMD:
   496                           	opt callstack 0
   497                           
   498                           ; 1 bytes @ 0x1
   499  000081                     	ds	1
   500  000082                     ??_isdigit:
   501  000082                     ??_isspace:
   502  000082                     setData@data0:
   503                           	opt callstack 0
   504  000082                     OpenXLCD@lcdtype:
   505                           	opt callstack 0
   506  000082                     writeFrequency@f:
   507                           	opt callstack 0
   508  000082                     ___wmul@multiplicand:
   509                           	opt callstack 0
   510  000082                     fputc@fp:
   511                           	opt callstack 0
   512  000082                     strlen@a:
   513                           	opt callstack 0
   514                           
   515                           ; 2 bytes @ 0x2
   516  000082                     	ds	1
   517  000083                     ??_initLCD:
   518  000083                     getData@aux0:
   519                           	opt callstack 0
   520  000083                     setData@data1:
   521                           	opt callstack 0
   522  000083                     vumeter@vumLevel:
   523                           	opt callstack 0
   524                           
   525                           ; 1 bytes @ 0x3
   526  000083                     	ds	1
   527  000084                     ??_writeFrequency:
   528  000084                     ??_fputc:
   529  000084                     getData@aux1:
   530                           	opt callstack 0
   531  000084                     setData@full:
   532                           	opt callstack 0
   533  000084                     ___wmul@product:
   534                           	opt callstack 0
   535                           
   536                           ; 2 bytes @ 0x4
   537  000084                     	ds	1
   538  000085                     
   539                           ; 1 bytes @ 0x5
   540  000085                     	ds	1
   541  000086                     _isspace$1521:
   542                           	opt callstack 0
   543  000086                     beep@ms:
   544                           	opt callstack 0
   545                           
   546                           ; 2 bytes @ 0x6
   547  000086                     	ds	1
   548  000087                     ?_atoi:
   549                           	opt callstack 0
   550  000087                     writeFrequency@buffer:
   551                           	opt callstack 0
   552  000087                     atoi@s:
   553                           	opt callstack 0
   554                           
   555                           ; 2 bytes @ 0x7
   556  000087                     	ds	1
   557  000088                     ___aodiv@divisor:
   558                           	opt callstack 0
   559  000088                     ___aomod@divisor:
   560                           	opt callstack 0
   561                           
   562                           ; 8 bytes @ 0x8
   563  000088                     	ds	1
   564  000089                     ??_atoi:
   565  000089                     writeFrequency@r:
   566                           	opt callstack 0
   567  000089                     fputs@s:
   568                           	opt callstack 0
   569                           
   570                           ; 2 bytes @ 0x9
   571  000089                     	ds	2
   572  00008B                     writeFrequency@i:
   573                           	opt callstack 0
   574  00008B                     fputs@fp:
   575                           	opt callstack 0
   576                           
   577                           ; 2 bytes @ 0xB
   578  00008B                     	ds	2
   579  00008D                     fputs@c:
   580                           	opt callstack 0
   581  00008D                     atoi@neg:
   582                           	opt callstack 0
   583                           
   584                           ; 2 bytes @ 0xD
   585  00008D                     	ds	1
   586  00008E                     fputs@i:
   587                           	opt callstack 0
   588                           
   589                           ; 2 bytes @ 0xE
   590  00008E                     	ds	1
   591  00008F                     _atoi$1503:
   592                           	opt callstack 0
   593                           
   594                           ; 2 bytes @ 0xF
   595  00008F                     	ds	1
   596  000090                     ?_pad:
   597                           	opt callstack 0
   598  000090                     ___aodiv@counter:
   599                           	opt callstack 0
   600  000090                     ___aomod@counter:
   601                           	opt callstack 0
   602  000090                     pad@fp:
   603                           	opt callstack 0
   604                           
   605                           ; 2 bytes @ 0x10
   606  000090                     	ds	1
   607  000091                     ___aodiv@sign:
   608                           	opt callstack 0
   609  000091                     ___aomod@sign:
   610                           	opt callstack 0
   611  000091                     _atoi$1505:
   612                           	opt callstack 0
   613                           
   614                           ; 2 bytes @ 0x11
   615  000091                     	ds	1
   616  000092                     ?_abs:
   617                           	opt callstack 0
   618  000092                     pad@buf:
   619                           	opt callstack 0
   620  000092                     abs@a:
   621                           	opt callstack 0
   622  000092                     ___aodiv@quotient:
   623                           	opt callstack 0
   624                           
   625                           ; 8 bytes @ 0x12
   626  000092                     	ds	1
   627  000093                     _atoi$1504:
   628                           	opt callstack 0
   629                           
   630                           ; 1 bytes @ 0x13
   631  000093                     	ds	1
   632  000094                     ??_abs:
   633  000094                     pad@p:
   634                           	opt callstack 0
   635  000094                     atoi@n:
   636                           	opt callstack 0
   637                           
   638                           ; 2 bytes @ 0x14
   639  000094                     	ds	2
   640  000096                     ??_pad:
   641                           
   642                           ; 1 bytes @ 0x16
   643  000096                     	ds	1
   644  000097                     pad@i:
   645                           	opt callstack 0
   646                           
   647                           ; 2 bytes @ 0x17
   648  000097                     	ds	2
   649  000099                     pad@w:
   650                           	opt callstack 0
   651                           
   652                           ; 2 bytes @ 0x19
   653  000099                     	ds	2
   654  00009B                     ?_dtoa:
   655                           	opt callstack 0
   656  00009B                     dtoa@fp:
   657                           	opt callstack 0
   658                           
   659                           ; 2 bytes @ 0x1B
   660  00009B                     	ds	2
   661  00009D                     dtoa@d:
   662                           	opt callstack 0
   663                           
   664                           ; 8 bytes @ 0x1D
   665  00009D                     	ds	8
   666  0000A5                     ??_dtoa:
   667                           
   668                           ; 1 bytes @ 0x25
   669  0000A5                     	ds	8
   670  0000AD                     _dtoa$1031:
   671                           	opt callstack 0
   672                           
   673                           ; 2 bytes @ 0x2D
   674  0000AD                     	ds	2
   675  0000AF                     dtoa@p:
   676                           	opt callstack 0
   677                           
   678                           ; 2 bytes @ 0x2F
   679  0000AF                     	ds	2
   680  0000B1                     dtoa@w:
   681                           	opt callstack 0
   682                           
   683                           ; 2 bytes @ 0x31
   684  0000B1                     	ds	2
   685  0000B3                     dtoa@s:
   686                           	opt callstack 0
   687                           
   688                           ; 2 bytes @ 0x33
   689  0000B3                     	ds	2
   690  0000B5                     dtoa@n:
   691                           	opt callstack 0
   692                           
   693                           ; 8 bytes @ 0x35
   694  0000B5                     	ds	8
   695  0000BD                     dtoa@i:
   696                           	opt callstack 0
   697                           
   698                           ; 2 bytes @ 0x3D
   699  0000BD                     	ds	2
   700  0000BF                     ?_vfpfcnvrt:
   701                           	opt callstack 0
   702  0000BF                     vfpfcnvrt@fp:
   703                           	opt callstack 0
   704                           
   705                           ; 2 bytes @ 0x3F
   706  0000BF                     	ds	2
   707  0000C1                     vfpfcnvrt@fmt:
   708                           	opt callstack 0
   709                           
   710                           ; 2 bytes @ 0x41
   711  0000C1                     	ds	2
   712  0000C3                     vfpfcnvrt@ap:
   713                           	opt callstack 0
   714                           
   715                           ; 2 bytes @ 0x43
   716  0000C3                     	ds	2
   717  0000C5                     ??_vfpfcnvrt:
   718                           
   719                           ; 1 bytes @ 0x45
   720  0000C5                     	ds	4
   721  0000C9                     vfpfcnvrt@ll:
   722                           	opt callstack 0
   723                           
   724                           ; 8 bytes @ 0x49
   725  0000C9                     	ds	8
   726  0000D1                     _vfpfcnvrt$1046:
   727                           	opt callstack 0
   728                           
   729                           ; 2 bytes @ 0x51
   730  0000D1                     	ds	2
   731  0000D3                     ?_vfprintf:
   732                           	opt callstack 0
   733  0000D3                     vfprintf@fp:
   734                           	opt callstack 0
   735                           
   736                           ; 2 bytes @ 0x53
   737  0000D3                     	ds	2
   738  0000D5                     vfprintf@fmt:
   739                           	opt callstack 0
   740                           
   741                           ; 2 bytes @ 0x55
   742  0000D5                     	ds	2
   743  0000D7                     vfprintf@ap:
   744                           	opt callstack 0
   745                           
   746                           ; 2 bytes @ 0x57
   747  0000D7                     	ds	2
   748  0000D9                     vfprintf@cfmt:
   749                           	opt callstack 0
   750                           
   751                           ; 2 bytes @ 0x59
   752  0000D9                     	ds	2
   753  0000DB                     ?_sprintf:
   754                           	opt callstack 0
   755  0000DB                     sprintf@s:
   756                           	opt callstack 0
   757                           
   758                           ; 2 bytes @ 0x5B
   759  0000DB                     	ds	2
   760  0000DD                     sprintf@fmt:
   761                           	opt callstack 0
   762                           
   763                           ; 2 bytes @ 0x5D
   764  0000DD                     	ds	2
   765  0000DF                     
   766                           ; 1 bytes @ 0x5F
   767  0000DF                     	ds	2
   768  0000E1                     sprintf@ap:
   769                           	opt callstack 0
   770                           
   771                           ; 2 bytes @ 0x61
   772  0000E1                     	ds	2
   773  0000E3                     sprintf@f:
   774                           	opt callstack 0
   775                           
   776                           ; 6 bytes @ 0x63
   777  0000E3                     	ds	6
   778  0000E9                     ??_setFrequency:
   779                           
   780                           ; 1 bytes @ 0x69
   781  0000E9                     	ds	2
   782  0000EB                     ??_main:
   783                           
   784                           ; 1 bytes @ 0x6B
   785  0000EB                     	ds	2
   786  0000ED                     main@i:
   787                           	opt callstack 0
   788                           
   789                           ; 1 bytes @ 0x6D
   790  0000ED                     	ds	1
   791                           
   792                           	psect	cstackCOMRAM
   793  000001                     __pcstackCOMRAM:
   794                           	opt callstack 0
   795  000001                     ??i2_BusyXLCD:
   796  000001                     ?___lwdiv:
   797                           	opt callstack 0
   798  000001                     ?___lwmod:
   799                           	opt callstack 0
   800  000001                     ?i2___wmul:
   801                           	opt callstack 0
   802  000001                     ?i2_isdigit:
   803                           	opt callstack 0
   804  000001                     ?i2_isspace:
   805                           	opt callstack 0
   806  000001                     ?i2_strlen:
   807                           	opt callstack 0
   808  000001                     ?i2___aodiv:
   809                           	opt callstack 0
   810  000001                     ?i2___aomod:
   811                           	opt callstack 0
   812  000001                     WriteDataXLCD@data:
   813                           	opt callstack 0
   814  000001                     i2writeEEPROM@address:
   815                           	opt callstack 0
   816  000001                     i2SetDDRamAddr@DDaddr:
   817                           	opt callstack 0
   818  000001                     ___lwdiv@dividend:
   819                           	opt callstack 0
   820  000001                     ___lwmod@dividend:
   821                           	opt callstack 0
   822  000001                     i2___wmul@multiplier:
   823                           	opt callstack 0
   824  000001                     i2isdigit@c:
   825                           	opt callstack 0
   826  000001                     i2isspace@c:
   827                           	opt callstack 0
   828  000001                     i2fputc@c:
   829                           	opt callstack 0
   830  000001                     i2strlen@s:
   831                           	opt callstack 0
   832  000001                     i2___aodiv@dividend:
   833                           	opt callstack 0
   834  000001                     i2___aomod@dividend:
   835                           	opt callstack 0
   836                           
   837                           ; 8 bytes @ 0x0
   838  000001                     	ds	1
   839  000002                     i2writeEEPROM@data:
   840                           	opt callstack 0
   841  000002                     putsXLCD@buffer:
   842                           	opt callstack 0
   843                           
   844                           ; 2 bytes @ 0x1
   845  000002                     	ds	1
   846  000003                     ??i2_isdigit:
   847  000003                     ??i2_isspace:
   848  000003                     i2setData@data0:
   849                           	opt callstack 0
   850  000003                     ___lwdiv@divisor:
   851                           	opt callstack 0
   852  000003                     ___lwmod@divisor:
   853                           	opt callstack 0
   854  000003                     i2___wmul@multiplicand:
   855                           	opt callstack 0
   856  000003                     i2fputc@fp:
   857                           	opt callstack 0
   858  000003                     i2strlen@a:
   859                           	opt callstack 0
   860                           
   861                           ; 2 bytes @ 0x2
   862  000003                     	ds	1
   863  000004                     i2setData@data1:
   864                           	opt callstack 0
   865                           
   866                           ; 1 bytes @ 0x3
   867  000004                     	ds	1
   868  000005                     ??i2_fputc:
   869  000005                     ___lwmod@counter:
   870                           	opt callstack 0
   871  000005                     i2setData@full:
   872                           	opt callstack 0
   873  000005                     ___lwdiv@quotient:
   874                           	opt callstack 0
   875  000005                     i2___wmul@product:
   876                           	opt callstack 0
   877                           
   878                           ; 2 bytes @ 0x4
   879  000005                     	ds	1
   880  000006                     
   881                           ; 1 bytes @ 0x5
   882  000006                     	ds	1
   883  000007                     ___lwdiv@counter:
   884                           	opt callstack 0
   885  000007                     i2_isspace$1521:
   886                           	opt callstack 0
   887                           
   888                           ; 1 bytes @ 0x6
   889  000007                     	ds	1
   890  000008                     ?i2_atoi:
   891                           	opt callstack 0
   892  000008                     i2atoi@s:
   893                           	opt callstack 0
   894                           
   895                           ; 2 bytes @ 0x7
   896  000008                     	ds	1
   897  000009                     i2___aodiv@divisor:
   898                           	opt callstack 0
   899  000009                     i2___aomod@divisor:
   900                           	opt callstack 0
   901                           
   902                           ; 8 bytes @ 0x8
   903  000009                     	ds	1
   904  00000A                     ??i2_atoi:
   905  00000A                     i2fputs@s:
   906                           	opt callstack 0
   907                           
   908                           ; 2 bytes @ 0x9
   909  00000A                     	ds	2
   910  00000C                     i2fputs@fp:
   911                           	opt callstack 0
   912                           
   913                           ; 2 bytes @ 0xB
   914  00000C                     	ds	2
   915  00000E                     i2fputs@c:
   916                           	opt callstack 0
   917  00000E                     i2atoi@neg:
   918                           	opt callstack 0
   919                           
   920                           ; 2 bytes @ 0xD
   921  00000E                     	ds	1
   922  00000F                     i2fputs@i:
   923                           	opt callstack 0
   924                           
   925                           ; 2 bytes @ 0xE
   926  00000F                     	ds	1
   927  000010                     i2_atoi$1503:
   928                           	opt callstack 0
   929                           
   930                           ; 2 bytes @ 0xF
   931  000010                     	ds	1
   932  000011                     ?i2_pad:
   933                           	opt callstack 0
   934  000011                     i2___aodiv@counter:
   935                           	opt callstack 0
   936  000011                     i2___aomod@counter:
   937                           	opt callstack 0
   938  000011                     i2pad@fp:
   939                           	opt callstack 0
   940                           
   941                           ; 2 bytes @ 0x10
   942  000011                     	ds	1
   943  000012                     i2___aodiv@sign:
   944                           	opt callstack 0
   945  000012                     i2___aomod@sign:
   946                           	opt callstack 0
   947  000012                     i2_atoi$1505:
   948                           	opt callstack 0
   949                           
   950                           ; 2 bytes @ 0x11
   951  000012                     	ds	1
   952  000013                     ?i2_abs:
   953                           	opt callstack 0
   954  000013                     i2pad@buf:
   955                           	opt callstack 0
   956  000013                     i2abs@a:
   957                           	opt callstack 0
   958  000013                     i2___aodiv@quotient:
   959                           	opt callstack 0
   960                           
   961                           ; 8 bytes @ 0x12
   962  000013                     	ds	1
   963  000014                     i2_atoi$1504:
   964                           	opt callstack 0
   965                           
   966                           ; 1 bytes @ 0x13
   967  000014                     	ds	1
   968  000015                     ??i2_abs:
   969  000015                     i2pad@p:
   970                           	opt callstack 0
   971  000015                     i2atoi@n:
   972                           	opt callstack 0
   973                           
   974                           ; 2 bytes @ 0x14
   975  000015                     	ds	2
   976  000017                     ??i2_pad:
   977                           
   978                           ; 1 bytes @ 0x16
   979  000017                     	ds	1
   980  000018                     i2pad@i:
   981                           	opt callstack 0
   982                           
   983                           ; 2 bytes @ 0x17
   984  000018                     	ds	2
   985  00001A                     i2pad@w:
   986                           	opt callstack 0
   987                           
   988                           ; 2 bytes @ 0x19
   989  00001A                     	ds	2
   990  00001C                     ?i2_dtoa:
   991                           	opt callstack 0
   992  00001C                     i2dtoa@fp:
   993                           	opt callstack 0
   994                           
   995                           ; 2 bytes @ 0x1B
   996  00001C                     	ds	2
   997  00001E                     i2dtoa@d:
   998                           	opt callstack 0
   999                           
  1000                           ; 8 bytes @ 0x1D
  1001  00001E                     	ds	8
  1002  000026                     ??i2_dtoa:
  1003                           
  1004                           ; 1 bytes @ 0x25
  1005  000026                     	ds	8
  1006  00002E                     i2_dtoa$1031:
  1007                           	opt callstack 0
  1008                           
  1009                           ; 2 bytes @ 0x2D
  1010  00002E                     	ds	2
  1011  000030                     i2dtoa@p:
  1012                           	opt callstack 0
  1013                           
  1014                           ; 2 bytes @ 0x2F
  1015  000030                     	ds	2
  1016  000032                     i2dtoa@w:
  1017                           	opt callstack 0
  1018                           
  1019                           ; 2 bytes @ 0x31
  1020  000032                     	ds	2
  1021  000034                     i2dtoa@s:
  1022                           	opt callstack 0
  1023                           
  1024                           ; 2 bytes @ 0x33
  1025  000034                     	ds	2
  1026  000036                     i2dtoa@n:
  1027                           	opt callstack 0
  1028                           
  1029                           ; 8 bytes @ 0x35
  1030  000036                     	ds	8
  1031  00003E                     i2dtoa@i:
  1032                           	opt callstack 0
  1033                           
  1034                           ; 2 bytes @ 0x3D
  1035  00003E                     	ds	2
  1036  000040                     ?i2_vfpfcnvrt:
  1037                           	opt callstack 0
  1038  000040                     i2vfpfcnvrt@fp:
  1039                           	opt callstack 0
  1040                           
  1041                           ; 2 bytes @ 0x3F
  1042  000040                     	ds	2
  1043  000042                     i2vfpfcnvrt@fmt:
  1044                           	opt callstack 0
  1045                           
  1046                           ; 2 bytes @ 0x41
  1047  000042                     	ds	2
  1048  000044                     i2vfpfcnvrt@ap:
  1049                           	opt callstack 0
  1050                           
  1051                           ; 2 bytes @ 0x43
  1052  000044                     	ds	2
  1053  000046                     ??i2_vfpfcnvrt:
  1054                           
  1055                           ; 1 bytes @ 0x45
  1056  000046                     	ds	4
  1057  00004A                     i2vfpfcnvrt@ll:
  1058                           	opt callstack 0
  1059                           
  1060                           ; 8 bytes @ 0x49
  1061  00004A                     	ds	8
  1062  000052                     i2_vfpfcnvrt$1046:
  1063                           	opt callstack 0
  1064                           
  1065                           ; 2 bytes @ 0x51
  1066  000052                     	ds	2
  1067  000054                     ?i2_vfprintf:
  1068                           	opt callstack 0
  1069  000054                     i2vfprintf@fp:
  1070                           	opt callstack 0
  1071                           
  1072                           ; 2 bytes @ 0x53
  1073  000054                     	ds	2
  1074  000056                     i2vfprintf@fmt:
  1075                           	opt callstack 0
  1076                           
  1077                           ; 2 bytes @ 0x55
  1078  000056                     	ds	2
  1079  000058                     i2vfprintf@ap:
  1080                           	opt callstack 0
  1081                           
  1082                           ; 2 bytes @ 0x57
  1083  000058                     	ds	2
  1084  00005A                     i2vfprintf@cfmt:
  1085                           	opt callstack 0
  1086                           
  1087                           ; 2 bytes @ 0x59
  1088  00005A                     	ds	2
  1089  00005C                     ?i2_sprintf:
  1090                           	opt callstack 0
  1091  00005C                     i2sprintf@s:
  1092                           	opt callstack 0
  1093                           
  1094                           ; 2 bytes @ 0x5B
  1095  00005C                     	ds	2
  1096  00005E                     i2sprintf@fmt:
  1097                           	opt callstack 0
  1098                           
  1099                           ; 2 bytes @ 0x5D
  1100  00005E                     	ds	6
  1101  000064                     
  1102                           ; 1 bytes @ 0x63
  1103  000064                     	ds	2
  1104  000066                     i2sprintf@ap:
  1105                           	opt callstack 0
  1106                           
  1107                           ; 2 bytes @ 0x65
  1108  000066                     	ds	2
  1109  000068                     i2sprintf@f:
  1110                           	opt callstack 0
  1111                           
  1112                           ; 6 bytes @ 0x67
  1113  000068                     	ds	6
  1114  00006E                     updateLCD@integ:
  1115                           	opt callstack 0
  1116                           
  1117                           ; 1 bytes @ 0x6D
  1118  00006E                     	ds	1
  1119  00006F                     updateLCD@decim:
  1120                           	opt callstack 0
  1121                           
  1122                           ; 1 bytes @ 0x6E
  1123  00006F                     	ds	1
  1124  000070                     ??_inter:
  1125                           
  1126                           ; 1 bytes @ 0x6F
  1127  000070                     	ds	10
  1128                           
  1129 ;;
  1130 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1131 ;;
  1132 ;; *************** function _main *****************
  1133 ;; Defined at:
  1134 ;;		line 5 in file "main.c"
  1135 ;; Parameters:    Size  Location     Type
  1136 ;;		None
  1137 ;; Auto vars:     Size  Location     Type
  1138 ;;  i               1  109[BANK0 ] unsigned char 
  1139 ;; Return value:  Size  Location     Type
  1140 ;;                  1    wreg      void 
  1141 ;; Registers used:
  1142 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1143 ;; Tracked objects:
  1144 ;;		On entry : 0/0
  1145 ;;		On exit  : 0/0
  1146 ;;		Unchanged: 0/0
  1147 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1148 ;;      Params:         0       0       0       0       0       0       0
  1149 ;;      Locals:         0       1       0       0       0       0       0
  1150 ;;      Temps:          0       2       0       0       0       0       0
  1151 ;;      Totals:         0       3       0       0       0       0       0
  1152 ;;Total ram usage:        3 bytes
  1153 ;; Hardware stack levels required when called:   19
  1154 ;; This function calls:
  1155 ;;		_beep
  1156 ;;		_config
  1157 ;;		_getData
  1158 ;;		_setFrequency
  1159 ;;		_sprintf
  1160 ;;		_vumeter
  1161 ;; This function is called by:
  1162 ;;		Startup code after reset
  1163 ;; This function uses a non-reentrant model
  1164 ;;
  1165                           
  1166                           	psect	text0
  1167  001AD4                     __ptext0:
  1168                           	opt callstack 0
  1169  001AD4                     _main:
  1170                           	opt callstack 0
  1171  001AD4  FFFF               	dw	65535	; assembler added errata NOP
  1172                           
  1173                           ;main.c: 6:     char i = 0;
  1174                           
  1175                           ;incstack = 0
  1176  001AD6  0E00               	movlw	0
  1177  001AD8  0100               	movlb	0	; () banked
  1178  001ADA  6FED               	movwf	main@i& (0+255),b
  1179                           
  1180                           ; BSR set to: 0
  1181                           ;main.c: 7:     PORTAbits.RA5 = 0;
  1182  001ADC  9A80               	bcf	3968,5,c	;volatile
  1183                           
  1184                           ; BSR set to: 0
  1185                           ;main.c: 8:     _delay((unsigned long)((100)*(12000000/4000.0)));
  1186  001ADE  0E02               	movlw	2
  1187  001AE0  0100               	movlb	0	; () banked
  1188  001AE2  6FEC               	movwf	(??_main+1)& (0+255),b
  1189  001AE4  0E25               	movlw	37
  1190  001AE6  6FEB               	movwf	??_main& (0+255),b
  1191  001AE8  0E63               	movlw	99
  1192  001AEA                     u3797:
  1193  001AEA  FFFF               	dw	65535	; errata NOP
  1194  001AEC  2EE8               	decfsz	wreg,f,c
  1195  001AEE  D7FD               	bra	u3797
  1196  001AF0  2FEB               	decfsz	??_main& (0+255),f,b
  1197  001AF2  D7FB               	bra	u3797
  1198  001AF4  2FEC               	decfsz	(??_main+1)& (0+255),f,b
  1199  001AF6  D7F9               	bra	u3797
  1200  001AF8  F000               	nop	
  1201                           
  1202                           ;main.c: 9:     config();
  1203  001AFA  ECC2  F013         	call	_config	;wreg free
  1204                           
  1205                           ;main.c: 10:     getData();
  1206  001AFE  ECC4  F010         	call	_getData	;wreg free
  1207                           
  1208                           ;main.c: 11:     beep(10);
  1209  001B02  0E00               	movlw	0
  1210  001B04  0100               	movlb	0	; () banked
  1211  001B06  6F87               	movwf	(beep@ms+1)& (0+255),b
  1212  001B08  0E0A               	movlw	10
  1213  001B0A  6F86               	movwf	beep@ms& (0+255),b
  1214  001B0C  ECC1  F011         	call	_beep	;wreg free
  1215                           
  1216                           ;main.c: 12:     if(!PORTCbits.RC0){
  1217  001B10  B082               	btfsc	3970,0,c	;volatile
  1218  001B12  D00D               	goto	l4074
  1219                           
  1220                           ;main.c: 13:         _delay((unsigned long)((25)*(12000000/4000.0)));
  1221  001B14  0E4A               	movlw	74
  1222  001B16  0100               	movlb	0	; () banked
  1223  001B18  6FEB               	movwf	??_main& (0+255),b
  1224  001B1A  0E18               	movlw	24
  1225  001B1C                     u3807:
  1226  001B1C  FFFF               	dw	65535	; errata NOP
  1227  001B1E  2EE8               	decfsz	wreg,f,c
  1228  001B20  D7FD               	bra	u3807
  1229  001B22  2FEB               	decfsz	??_main& (0+255),f,b
  1230  001B24  D7FB               	bra	u3807
  1231  001B26  F000               	nop	
  1232                           
  1233                           ;main.c: 14:         if(!PORTCbits.RC0) setFrequency();
  1234  001B28  A082               	btfss	3970,0,c	;volatile
  1235  001B2A  EC15  F008         	call	_setFrequency	;wreg free
  1236  001B2E                     l4074:
  1237  001B2E  FFFF               	dw	65535	; assembler added errata NOP
  1238                           
  1239                           ;main.c: 16:     beep(100);
  1240  001B30  0E00               	movlw	0
  1241  001B32  0100               	movlb	0	; () banked
  1242  001B34  6F87               	movwf	(beep@ms+1)& (0+255),b
  1243  001B36  0E64               	movlw	100
  1244  001B38  6F86               	movwf	beep@ms& (0+255),b
  1245  001B3A  ECC1  F011         	call	_beep	;wreg free
  1246  001B3E                     l4080:
  1247  001B3E  FFFF               	dw	65535	; assembler added errata NOP
  1248                           
  1249                           ;main.c: 18:         sprintf(lineOne,"Fijando Fcia.   ");
  1250  001B40  0E33               	movlw	low _lineOne
  1251  001B42  0100               	movlb	0	; () banked
  1252  001B44  6FDB               	movwf	sprintf@s& (0+255),b
  1253  001B46  0E01               	movlw	high _lineOne
  1254  001B48  6FDC               	movwf	(sprintf@s+1)& (0+255),b
  1255  001B4A  0E17               	movlw	low STR_1
  1256  001B4C  6FDD               	movwf	sprintf@fmt& (0+255),b
  1257  001B4E  0E06               	movlw	high STR_1
  1258  001B50  6FDE               	movwf	(sprintf@fmt+1)& (0+255),b
  1259  001B52  ECED  F011         	call	_sprintf	;wreg free
  1260                           
  1261                           ;main.c: 19:         _delay((unsigned long)((90)*(12000000/4000.0)));
  1262  001B56  0E02               	movlw	2
  1263  001B58  0100               	movlb	0	; () banked
  1264  001B5A  6FEC               	movwf	(??_main+1)& (0+255),b
  1265  001B5C  0E08               	movlw	8
  1266  001B5E  6FEB               	movwf	??_main& (0+255),b
  1267  001B60  0E25               	movlw	37
  1268  001B62                     u3817:
  1269  001B62  FFFF               	dw	65535	; errata NOP
  1270  001B64  2EE8               	decfsz	wreg,f,c
  1271  001B66  D7FD               	bra	u3817
  1272  001B68  2FEB               	decfsz	??_main& (0+255),f,b
  1273  001B6A  D7FB               	bra	u3817
  1274  001B6C  2FEC               	decfsz	(??_main+1)& (0+255),f,b
  1275  001B6E  D7F9               	bra	u3817
  1276  001B70  D000               	nop2	
  1277  001B72  F000               	nop	
  1278                           
  1279                           ;main.c: 20:     }
  1280  001B74  0100               	movlb	0	; () banked
  1281  001B76  2BED               	incf	main@i& (0+255),f,b
  1282                           
  1283                           ; BSR set to: 0
  1284  001B78  0E31               	movlw	49
  1285  001B7A  65ED               	cpfsgt	main@i& (0+255),b
  1286  001B7C  D7E0               	goto	l4080
  1287                           
  1288                           ; BSR set to: 0
  1289                           ;main.c: 22:     sprintf(lineOne,"AMPRO      EX-FM");
  1290  001B7E  0E33               	movlw	low _lineOne
  1291  001B80  6FDB               	movwf	sprintf@s& (0+255),b
  1292  001B82  0E01               	movlw	high _lineOne
  1293  001B84  6FDC               	movwf	(sprintf@s+1)& (0+255),b
  1294  001B86  0E39               	movlw	low STR_2
  1295  001B88  6FDD               	movwf	sprintf@fmt& (0+255),b
  1296  001B8A  0E06               	movlw	high STR_2
  1297  001B8C  6FDE               	movwf	(sprintf@fmt+1)& (0+255),b
  1298  001B8E  ECED  F011         	call	_sprintf	;wreg free
  1299  001B92                     l4090:
  1300  001B92  FFFF               	dw	65535	; assembler added errata NOP
  1301  001B94  0100               	movlb	0	; () banked
  1302  001B96  05F6               	decf	_functionalStat& (0+255),w,b
  1303  001B98  A4D8               	btfss	status,2,c
  1304  001B9A  D002               	goto	l197
  1305                           
  1306                           ; BSR set to: 0
  1307                           ;main.c: 25:             PORTAbits.RA5 = 1;
  1308  001B9C  8A80               	bsf	3968,5,c	;volatile
  1309                           
  1310                           ;main.c: 26:         }else{
  1311  001B9E  D002               	goto	l4094
  1312  001BA0                     l197:
  1313  001BA0  FFFF               	dw	65535	; assembler added errata NOP
  1314                           
  1315                           ; BSR set to: 0
  1316                           ;main.c: 27:             PORTAbits.RA5 = 0;
  1317  001BA2  9A80               	bcf	3968,5,c	;volatile
  1318  001BA4                     l4094:
  1319  001BA4  FFFF               	dw	65535	; assembler added errata NOP
  1320                           
  1321                           ; BSR set to: 0
  1322                           ;main.c: 30:         vumeter(ADRESH);
  1323  001BA6  50C4               	movf	4036,w,c	;volatile
  1324  001BA8  EC93  F00F         	call	_vumeter
  1325  001BAC  D7F2               	goto	l4090
  1326  001BAE                     __end_of_main:
  1327                           	opt callstack 0
  1328                           
  1329 ;; *************** function _vumeter *****************
  1330 ;; Defined at:
  1331 ;;		line 90 in file "main.c"
  1332 ;; Parameters:    Size  Location     Type
  1333 ;;  vumLevel        1    wreg     unsigned char 
  1334 ;; Auto vars:     Size  Location     Type
  1335 ;;  vumLevel        1    3[BANK0 ] unsigned char 
  1336 ;; Return value:  Size  Location     Type
  1337 ;;                  1    wreg      void 
  1338 ;; Registers used:
  1339 ;;		wreg, status,2, status,0
  1340 ;; Tracked objects:
  1341 ;;		On entry : 0/0
  1342 ;;		On exit  : 0/0
  1343 ;;		Unchanged: 0/0
  1344 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1345 ;;      Params:         0       0       0       0       0       0       0
  1346 ;;      Locals:         0       1       0       0       0       0       0
  1347 ;;      Temps:          0       3       0       0       0       0       0
  1348 ;;      Totals:         0       4       0       0       0       0       0
  1349 ;;Total ram usage:        4 bytes
  1350 ;; Hardware stack levels used:    1
  1351 ;; Hardware stack levels required when called:   10
  1352 ;; This function calls:
  1353 ;;		Nothing
  1354 ;; This function is called by:
  1355 ;;		_main
  1356 ;; This function uses a non-reentrant model
  1357 ;;
  1358                           
  1359                           	psect	text1
  1360  001F26                     __ptext1:
  1361                           	opt callstack 0
  1362  001F26                     _vumeter:
  1363                           	opt callstack 0
  1364  001F26  FFFF               	dw	65535	; assembler added errata NOP
  1365                           
  1366                           ;incstack = 0
  1367                           ;vumeter@vumLevel stored from wreg
  1368  001F28  0100               	movlb	0	; () banked
  1369  001F2A  6F83               	movwf	vumeter@vumLevel& (0+255),b
  1370                           
  1371                           ;main.c: 102:     if (vumLevel >= 128) level = 8;
  1372  001F2C  0E7F               	movlw	127
  1373  001F2E  0100               	movlb	0	; () banked
  1374  001F30  6583               	cpfsgt	vumeter@vumLevel& (0+255),b
  1375  001F32  D002               	goto	l3966
  1376                           
  1377                           ; BSR set to: 0
  1378  001F34  0E08               	movlw	8
  1379  001F36  D029               	goto	L7
  1380  001F38                     l3966:
  1381  001F38  FFFF               	dw	65535	; assembler added errata NOP
  1382                           
  1383                           ; BSR set to: 0
  1384  001F3A  0E3F               	movlw	63
  1385  001F3C  6583               	cpfsgt	vumeter@vumLevel& (0+255),b
  1386  001F3E  D002               	goto	l3970
  1387                           
  1388                           ; BSR set to: 0
  1389  001F40  0E07               	movlw	7
  1390  001F42  D023               	goto	L7
  1391  001F44                     l3970:
  1392  001F44  FFFF               	dw	65535	; assembler added errata NOP
  1393                           
  1394                           ; BSR set to: 0
  1395  001F46  0E1F               	movlw	31
  1396  001F48  6583               	cpfsgt	vumeter@vumLevel& (0+255),b
  1397  001F4A  D002               	goto	l3974
  1398                           
  1399                           ; BSR set to: 0
  1400  001F4C  0E06               	movlw	6
  1401  001F4E  D01D               	goto	L7
  1402  001F50                     l3974:
  1403  001F50  FFFF               	dw	65535	; assembler added errata NOP
  1404                           
  1405                           ; BSR set to: 0
  1406  001F52  0E0F               	movlw	15
  1407  001F54  6583               	cpfsgt	vumeter@vumLevel& (0+255),b
  1408  001F56  D002               	goto	l3978
  1409                           
  1410                           ; BSR set to: 0
  1411  001F58  0E05               	movlw	5
  1412  001F5A  D017               	goto	L7
  1413  001F5C                     l3978:
  1414  001F5C  FFFF               	dw	65535	; assembler added errata NOP
  1415                           
  1416                           ; BSR set to: 0
  1417  001F5E  0E07               	movlw	7
  1418  001F60  6583               	cpfsgt	vumeter@vumLevel& (0+255),b
  1419  001F62  D002               	goto	l3982
  1420                           
  1421                           ; BSR set to: 0
  1422  001F64  0E04               	movlw	4
  1423  001F66  D011               	goto	L7
  1424  001F68                     l3982:
  1425  001F68  FFFF               	dw	65535	; assembler added errata NOP
  1426                           
  1427                           ; BSR set to: 0
  1428  001F6A  0E03               	movlw	3
  1429  001F6C  6583               	cpfsgt	vumeter@vumLevel& (0+255),b
  1430  001F6E  D002               	goto	l3986
  1431                           
  1432                           ; BSR set to: 0
  1433  001F70  0E03               	movlw	3
  1434  001F72  D00B               	goto	L7
  1435  001F74                     l3986:
  1436  001F74  FFFF               	dw	65535	; assembler added errata NOP
  1437                           
  1438                           ; BSR set to: 0
  1439  001F76  0E01               	movlw	1
  1440  001F78  6583               	cpfsgt	vumeter@vumLevel& (0+255),b
  1441  001F7A  D002               	goto	l3990
  1442                           
  1443                           ; BSR set to: 0
  1444  001F7C  0E02               	movlw	2
  1445  001F7E  D005               	goto	L7
  1446  001F80                     l3990:
  1447  001F80  FFFF               	dw	65535	; assembler added errata NOP
  1448                           
  1449                           ; BSR set to: 0
  1450  001F82  5183               	movf	vumeter@vumLevel& (0+255),w,b
  1451  001F84  B4D8               	btfsc	status,2,c
  1452  001F86  D003               	goto	l224
  1453                           
  1454                           ; BSR set to: 0
  1455  001F88  0E01               	movlw	1
  1456  001F8A                     L7:
  1457  001F8A  FFFF               	dw	65535	; assembler added errata NOP
  1458  001F8C  6FF9               	movwf	_level& (0+255),b
  1459  001F8E                     l224:
  1460  001F8E  FFFF               	dw	65535	; assembler added errata NOP
  1461                           
  1462                           ; BSR set to: 0
  1463                           ;main.c: 111:     PORTB = 0x0100 >> level;
  1464                           
  1465                           ; BSR set to: 0
  1466  001F90  C0F9  F080         	movff	_level,??_vumeter
  1467  001F94  0E00               	movlw	0
  1468  001F96  6F81               	movwf	(??_vumeter+1)& (0+255),b
  1469  001F98  0E01               	movlw	1
  1470  001F9A  6F82               	movwf	(??_vumeter+2)& (0+255),b
  1471  001F9C  2B80               	incf	??_vumeter& (0+255),f,b
  1472  001F9E  D004               	goto	u3624
  1473  001FA0                     u3625:
  1474  001FA0  FFFF               	dw	65535	; assembler added errata NOP
  1475  001FA2  3582               	rlcf	(??_vumeter+2)& (0+255),w,b
  1476  001FA4  3382               	rrcf	(??_vumeter+2)& (0+255),f,b
  1477  001FA6  3381               	rrcf	(??_vumeter+1)& (0+255),f,b
  1478  001FA8                     u3624:
  1479  001FA8  FFFF               	dw	65535	; assembler added errata NOP
  1480  001FAA  2F80               	decfsz	??_vumeter& (0+255),f,b
  1481  001FAC  D7F9               	goto	u3625
  1482  001FAE  0100               	movlb	0	; () banked
  1483  001FB0  5181               	movf	(??_vumeter+1)& (0+255),w,b
  1484  001FB2  6E81               	movwf	3969,c	;volatile
  1485                           
  1486                           ; BSR set to: 0
  1487  001FB4  0012               	return		;funcret
  1488  001FB6  FFFF               	dw	65535	; errata NOP
  1489  001FB8                     __end_of_vumeter:
  1490                           	opt callstack 0
  1491                           
  1492 ;; *************** function _setFrequency *****************
  1493 ;; Defined at:
  1494 ;;		line 156 in file "main.c"
  1495 ;; Parameters:    Size  Location     Type
  1496 ;;		None
  1497 ;; Auto vars:     Size  Location     Type
  1498 ;;		None
  1499 ;; Return value:  Size  Location     Type
  1500 ;;                  1    wreg      void 
  1501 ;; Registers used:
  1502 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1503 ;; Tracked objects:
  1504 ;;		On entry : 0/0
  1505 ;;		On exit  : 0/0
  1506 ;;		Unchanged: 0/0
  1507 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1508 ;;      Params:         0       0       0       0       0       0       0
  1509 ;;      Locals:         0       0       0       0       0       0       0
  1510 ;;      Temps:          0       2       0       0       0       0       0
  1511 ;;      Totals:         0       2       0       0       0       0       0
  1512 ;;Total ram usage:        2 bytes
  1513 ;; Hardware stack levels used:    1
  1514 ;; Hardware stack levels required when called:   18
  1515 ;; This function calls:
  1516 ;;		_beep
  1517 ;;		_setData
  1518 ;;		_sprintf
  1519 ;;		_writeFrequency
  1520 ;; This function is called by:
  1521 ;;		_main
  1522 ;; This function uses a non-reentrant model
  1523 ;;
  1524                           
  1525                           	psect	text2
  1526  00102A                     __ptext2:
  1527                           	opt callstack 0
  1528  00102A                     _setFrequency:
  1529                           	opt callstack 0
  1530  00102A  FFFF               	dw	65535	; assembler added errata NOP
  1531                           
  1532                           ;main.c: 157:     sprintf(lineOne,"Seleccione Fcia.");
  1533                           
  1534                           ; BSR set to: 0
  1535                           ;incstack = 0
  1536  00102C  0E33               	movlw	low _lineOne
  1537  00102E  0100               	movlb	0	; () banked
  1538  001030  6FDB               	movwf	sprintf@s& (0+255),b
  1539  001032  0E01               	movlw	high _lineOne
  1540  001034  6FDC               	movwf	(sprintf@s+1)& (0+255),b
  1541  001036  0E28               	movlw	low STR_3
  1542  001038  6FDD               	movwf	sprintf@fmt& (0+255),b
  1543  00103A  0E06               	movlw	high STR_3
  1544  00103C  6FDE               	movwf	(sprintf@fmt+1)& (0+255),b
  1545  00103E  ECED  F011         	call	_sprintf	;wreg free
  1546                           
  1547                           ;main.c: 158:     beep(200);
  1548  001042  0E00               	movlw	0
  1549  001044  0100               	movlb	0	; () banked
  1550  001046  6F87               	movwf	(beep@ms+1)& (0+255),b
  1551  001048  0EC8               	movlw	200
  1552  00104A  6F86               	movwf	beep@ms& (0+255),b
  1553  00104C  ECC1  F011         	call	_beep	;wreg free
  1554  001050                     l248:
  1555  001050  FFFF               	dw	65535	; assembler added errata NOP
  1556  001052  A082               	btfss	3970,0,c	;volatile
  1557  001054  D7FD               	goto	l248
  1558  001056                     u3390:
  1559  001056  FFFF               	dw	65535	; assembler added errata NOP
  1560                           
  1561                           ;main.c: 162:         if(!PORTCbits.RC1){
  1562                           
  1563                           ;main.c: 161:     while(1){
  1564  001058  B282               	btfsc	3970,1,c	;volatile
  1565  00105A  D04A               	goto	u3450
  1566                           
  1567                           ;main.c: 163:             if(frequency < 1080)frequency++;
  1568  00105C  0E38               	movlw	56
  1569  00105E  0100               	movlb	0	; () banked
  1570  001060  5DF4               	subwf	_frequency& (0+255),w,b
  1571  001062  0E04               	movlw	4
  1572  001064  59F5               	subwfb	(_frequency+1)& (0+255),w,b
  1573  001066  B0D8               	btfsc	status,0,c
  1574  001068  D002               	goto	l3906
  1575                           
  1576                           ; BSR set to: 0
  1577  00106A  4BF4               	infsnz	_frequency& (0+255),f,b
  1578  00106C  2BF5               	incf	(_frequency+1)& (0+255),f,b
  1579  00106E                     l3906:
  1580  00106E  FFFF               	dw	65535	; assembler added errata NOP
  1581                           
  1582                           ; BSR set to: 0
  1583                           ;main.c: 164:             if(frequency > 1080)frequency = 1080;
  1584  001070  0E39               	movlw	57
  1585  001072  5DF4               	subwf	_frequency& (0+255),w,b
  1586  001074  0E04               	movlw	4
  1587  001076  59F5               	subwfb	(_frequency+1)& (0+255),w,b
  1588  001078  A0D8               	btfss	status,0,c
  1589  00107A  D004               	goto	l3910
  1590                           
  1591                           ; BSR set to: 0
  1592  00107C  0E04               	movlw	4
  1593  00107E  6FF5               	movwf	(_frequency+1)& (0+255),b
  1594  001080  0E38               	movlw	56
  1595  001082  6FF4               	movwf	_frequency& (0+255),b
  1596  001084                     l3910:
  1597  001084  FFFF               	dw	65535	; assembler added errata NOP
  1598                           
  1599                           ; BSR set to: 0
  1600                           ;main.c: 165:             beep(100);
  1601  001086  0E00               	movlw	0
  1602  001088  6F87               	movwf	(beep@ms+1)& (0+255),b
  1603  00108A  0E64               	movlw	100
  1604  00108C  6F86               	movwf	beep@ms& (0+255),b
  1605  00108E  ECC1  F011         	call	_beep	;wreg free
  1606                           
  1607                           ;main.c: 166:             _delay((unsigned long)((500)*(12000000/4000.0)));
  1608  001092  0E06               	movlw	6
  1609  001094  0100               	movlb	0	; () banked
  1610  001096  6FEA               	movwf	(??_setFrequency+1)& (0+255),b
  1611  001098  0EB6               	movlw	182
  1612  00109A  6FE9               	movwf	??_setFrequency& (0+255),b
  1613  00109C  0EF8               	movlw	248
  1614  00109E                     u3827:
  1615  00109E  FFFF               	dw	65535	; errata NOP
  1616  0010A0  2EE8               	decfsz	wreg,f,c
  1617  0010A2  D7FD               	bra	u3827
  1618  0010A4  2FE9               	decfsz	??_setFrequency& (0+255),f,b
  1619  0010A6  D7FB               	bra	u3827
  1620  0010A8  2FEA               	decfsz	(??_setFrequency+1)& (0+255),f,b
  1621  0010AA  D7F9               	bra	u3827
  1622  0010AC  D000               	nop2	
  1623  0010AE  F000               	nop	
  1624                           
  1625                           ;main.c: 167:             while(!PORTCbits.RC1){
  1626  0010B0  D01C               	goto	l3924
  1627  0010B2                     l3914:
  1628  0010B2  FFFF               	dw	65535	; assembler added errata NOP
  1629                           
  1630                           ;main.c: 168:                 if(frequency < 1080)frequency++;
  1631  0010B4  0E38               	movlw	56
  1632  0010B6  0100               	movlb	0	; () banked
  1633  0010B8  5DF4               	subwf	_frequency& (0+255),w,b
  1634  0010BA  0E04               	movlw	4
  1635  0010BC  59F5               	subwfb	(_frequency+1)& (0+255),w,b
  1636  0010BE  B0D8               	btfsc	status,0,c
  1637  0010C0  D002               	goto	l3918
  1638                           
  1639                           ; BSR set to: 0
  1640  0010C2  4BF4               	infsnz	_frequency& (0+255),f,b
  1641  0010C4  2BF5               	incf	(_frequency+1)& (0+255),f,b
  1642  0010C6                     l3918:
  1643  0010C6  FFFF               	dw	65535	; assembler added errata NOP
  1644                           
  1645                           ; BSR set to: 0
  1646                           ;main.c: 169:                 if(frequency > 1080)frequency = 1080;
  1647  0010C8  0E39               	movlw	57
  1648  0010CA  5DF4               	subwf	_frequency& (0+255),w,b
  1649  0010CC  0E04               	movlw	4
  1650  0010CE  59F5               	subwfb	(_frequency+1)& (0+255),w,b
  1651  0010D0  A0D8               	btfss	status,0,c
  1652  0010D2  D004               	goto	l3922
  1653                           
  1654                           ; BSR set to: 0
  1655  0010D4  0E04               	movlw	4
  1656  0010D6  6FF5               	movwf	(_frequency+1)& (0+255),b
  1657  0010D8  0E38               	movlw	56
  1658  0010DA  6FF4               	movwf	_frequency& (0+255),b
  1659  0010DC                     l3922:
  1660  0010DC  FFFF               	dw	65535	; assembler added errata NOP
  1661                           
  1662                           ; BSR set to: 0
  1663                           ;main.c: 170:                 beep(100);
  1664  0010DE  0E00               	movlw	0
  1665  0010E0  6F87               	movwf	(beep@ms+1)& (0+255),b
  1666  0010E2  0E64               	movlw	100
  1667  0010E4  6F86               	movwf	beep@ms& (0+255),b
  1668  0010E6  ECC1  F011         	call	_beep	;wreg free
  1669  0010EA                     l3924:
  1670  0010EA  FFFF               	dw	65535	; assembler added errata NOP
  1671                           
  1672                           ;main.c: 167:             while(!PORTCbits.RC1){
  1673  0010EC  A282               	btfss	3970,1,c	;volatile
  1674  0010EE  D7E1               	goto	l3914
  1675  0010F0                     u3450:
  1676  0010F0  FFFF               	dw	65535	; assembler added errata NOP
  1677                           
  1678                           ;main.c: 174:         if(!PORTCbits.RC2){
  1679                           
  1680                           ;main.c: 172:         }
  1681  0010F2  B482               	btfsc	3970,2,c	;volatile
  1682  0010F4  D04C               	goto	u3510
  1683                           
  1684                           ;main.c: 175:             if(frequency > 880)frequency--;
  1685  0010F6  0E71               	movlw	113
  1686  0010F8  0100               	movlb	0	; () banked
  1687  0010FA  5DF4               	subwf	_frequency& (0+255),w,b
  1688  0010FC  0E03               	movlw	3
  1689  0010FE  59F5               	subwfb	(_frequency+1)& (0+255),w,b
  1690  001100  A0D8               	btfss	status,0,c
  1691  001102  D003               	goto	l3930
  1692                           
  1693                           ; BSR set to: 0
  1694  001104  07F4               	decf	_frequency& (0+255),f,b
  1695  001106  A0D8               	btfss	status,0,c
  1696  001108  07F5               	decf	(_frequency+1)& (0+255),f,b
  1697  00110A                     l3930:
  1698  00110A  FFFF               	dw	65535	; assembler added errata NOP
  1699                           
  1700                           ; BSR set to: 0
  1701                           ;main.c: 176:             if(frequency < 880)frequency = 880;
  1702  00110C  0E70               	movlw	112
  1703  00110E  5DF4               	subwf	_frequency& (0+255),w,b
  1704  001110  0E03               	movlw	3
  1705  001112  59F5               	subwfb	(_frequency+1)& (0+255),w,b
  1706  001114  B0D8               	btfsc	status,0,c
  1707  001116  D004               	goto	l3934
  1708                           
  1709                           ; BSR set to: 0
  1710  001118  0E03               	movlw	3
  1711  00111A  6FF5               	movwf	(_frequency+1)& (0+255),b
  1712  00111C  0E70               	movlw	112
  1713  00111E  6FF4               	movwf	_frequency& (0+255),b
  1714  001120                     l3934:
  1715  001120  FFFF               	dw	65535	; assembler added errata NOP
  1716                           
  1717                           ; BSR set to: 0
  1718                           ;main.c: 177:             beep(100);
  1719  001122  0E00               	movlw	0
  1720  001124  6F87               	movwf	(beep@ms+1)& (0+255),b
  1721  001126  0E64               	movlw	100
  1722  001128  6F86               	movwf	beep@ms& (0+255),b
  1723  00112A  ECC1  F011         	call	_beep	;wreg free
  1724                           
  1725                           ;main.c: 178:             _delay((unsigned long)((500)*(12000000/4000.0)));
  1726  00112E  0E06               	movlw	6
  1727  001130  0100               	movlb	0	; () banked
  1728  001132  6FEA               	movwf	(??_setFrequency+1)& (0+255),b
  1729  001134  0EB6               	movlw	182
  1730  001136  6FE9               	movwf	??_setFrequency& (0+255),b
  1731  001138  0EF8               	movlw	248
  1732  00113A                     u3837:
  1733  00113A  FFFF               	dw	65535	; errata NOP
  1734  00113C  2EE8               	decfsz	wreg,f,c
  1735  00113E  D7FD               	bra	u3837
  1736  001140  2FE9               	decfsz	??_setFrequency& (0+255),f,b
  1737  001142  D7FB               	bra	u3837
  1738  001144  2FEA               	decfsz	(??_setFrequency+1)& (0+255),f,b
  1739  001146  D7F9               	bra	u3837
  1740  001148  D000               	nop2	
  1741  00114A  F000               	nop	
  1742                           
  1743                           ;main.c: 179:             while(!PORTCbits.RC2){
  1744  00114C  D01D               	goto	l3948
  1745  00114E                     l3938:
  1746  00114E  FFFF               	dw	65535	; assembler added errata NOP
  1747                           
  1748                           ;main.c: 180:                 if(frequency > 880)frequency--;
  1749  001150  0E71               	movlw	113
  1750  001152  0100               	movlb	0	; () banked
  1751  001154  5DF4               	subwf	_frequency& (0+255),w,b
  1752  001156  0E03               	movlw	3
  1753  001158  59F5               	subwfb	(_frequency+1)& (0+255),w,b
  1754  00115A  A0D8               	btfss	status,0,c
  1755  00115C  D003               	goto	l3942
  1756                           
  1757                           ; BSR set to: 0
  1758  00115E  07F4               	decf	_frequency& (0+255),f,b
  1759  001160  A0D8               	btfss	status,0,c
  1760  001162  07F5               	decf	(_frequency+1)& (0+255),f,b
  1761  001164                     l3942:
  1762  001164  FFFF               	dw	65535	; assembler added errata NOP
  1763                           
  1764                           ; BSR set to: 0
  1765                           ;main.c: 181:                 if(frequency < 880)frequency = 880;
  1766  001166  0E70               	movlw	112
  1767  001168  5DF4               	subwf	_frequency& (0+255),w,b
  1768  00116A  0E03               	movlw	3
  1769  00116C  59F5               	subwfb	(_frequency+1)& (0+255),w,b
  1770  00116E  B0D8               	btfsc	status,0,c
  1771  001170  D004               	goto	l3946
  1772                           
  1773                           ; BSR set to: 0
  1774  001172  0E03               	movlw	3
  1775  001174  6FF5               	movwf	(_frequency+1)& (0+255),b
  1776  001176  0E70               	movlw	112
  1777  001178  6FF4               	movwf	_frequency& (0+255),b
  1778  00117A                     l3946:
  1779  00117A  FFFF               	dw	65535	; assembler added errata NOP
  1780                           
  1781                           ; BSR set to: 0
  1782                           ;main.c: 182:                 beep(100);
  1783  00117C  0E00               	movlw	0
  1784  00117E  6F87               	movwf	(beep@ms+1)& (0+255),b
  1785  001180  0E64               	movlw	100
  1786  001182  6F86               	movwf	beep@ms& (0+255),b
  1787  001184  ECC1  F011         	call	_beep	;wreg free
  1788  001188                     l3948:
  1789  001188  FFFF               	dw	65535	; assembler added errata NOP
  1790                           
  1791                           ;main.c: 179:             while(!PORTCbits.RC2){
  1792  00118A  A482               	btfss	3970,2,c	;volatile
  1793  00118C  D7E0               	goto	l3938
  1794  00118E                     u3510:
  1795  00118E  FFFF               	dw	65535	; assembler added errata NOP
  1796                           
  1797                           ;main.c: 186:         if(!PORTCbits.RC0){
  1798                           
  1799                           ;main.c: 184:         }
  1800  001190  B082               	btfsc	3970,0,c	;volatile
  1801  001192  D761               	goto	u3390
  1802                           
  1803                           ;main.c: 187:             _delay((unsigned long)((500)*(12000000/4000.0)));
  1804  001194  0E06               	movlw	6
  1805  001196  0100               	movlb	0	; () banked
  1806  001198  6FEA               	movwf	(??_setFrequency+1)& (0+255),b
  1807  00119A  0EB6               	movlw	182
  1808  00119C  6FE9               	movwf	??_setFrequency& (0+255),b
  1809  00119E  0EF8               	movlw	248
  1810  0011A0                     u3847:
  1811  0011A0  FFFF               	dw	65535	; errata NOP
  1812  0011A2  2EE8               	decfsz	wreg,f,c
  1813  0011A4  D7FD               	bra	u3847
  1814  0011A6  2FE9               	decfsz	??_setFrequency& (0+255),f,b
  1815  0011A8  D7FB               	bra	u3847
  1816  0011AA  2FEA               	decfsz	(??_setFrequency+1)& (0+255),f,b
  1817  0011AC  D7F9               	bra	u3847
  1818  0011AE  D000               	nop2	
  1819  0011B0  F000               	nop	
  1820                           
  1821                           ;main.c: 188:             if(!PORTCbits.RC0){
  1822  0011B2  B082               	btfsc	3970,0,c	;volatile
  1823  0011B4  D750               	goto	u3390
  1824                           
  1825                           ;main.c: 189:                 setData(1);
  1826  0011B6  0E01               	movlw	1
  1827  0011B8  EC19  F010         	call	_setData
  1828                           
  1829                           ;main.c: 190:                 beep(1000);
  1830  0011BC  0E03               	movlw	3
  1831  0011BE  0100               	movlb	0	; () banked
  1832  0011C0  6F87               	movwf	(beep@ms+1)& (0+255),b
  1833  0011C2  0EE8               	movlw	232
  1834  0011C4  6F86               	movwf	beep@ms& (0+255),b
  1835  0011C6  ECC1  F011         	call	_beep	;wreg free
  1836                           
  1837                           ;main.c: 195:     writeFrequency(frequency);
  1838                           
  1839                           ;main.c: 191:                 break;
  1840  0011CA  C0F4  F082         	movff	_frequency,writeFrequency@f
  1841  0011CE  C0F5  F083         	movff	_frequency+1,writeFrequency@f+1
  1842  0011D2  ECD7  F00D         	call	_writeFrequency	;wreg free
  1843  0011D6  0012               	return		;funcret
  1844  0011D8  FFFF               	dw	65535	; errata NOP
  1845  0011DA                     __end_of_setFrequency:
  1846                           	opt callstack 0
  1847                           
  1848 ;; *************** function _writeFrequency *****************
  1849 ;; Defined at:
  1850 ;;		line 15 in file "bh1514.c"
  1851 ;; Parameters:    Size  Location     Type
  1852 ;;  f               2    2[BANK0 ] unsigned int 
  1853 ;; Auto vars:     Size  Location     Type
  1854 ;;  r               2    9[BANK0 ] unsigned int 
  1855 ;;  buffer          2    7[BANK0 ] unsigned int 
  1856 ;;  i               1   11[BANK0 ] unsigned char 
  1857 ;; Return value:  Size  Location     Type
  1858 ;;                  1    wreg      void 
  1859 ;; Registers used:
  1860 ;;		wreg, status,2, status,0, cstack
  1861 ;; Tracked objects:
  1862 ;;		On entry : 0/0
  1863 ;;		On exit  : 0/0
  1864 ;;		Unchanged: 0/0
  1865 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1866 ;;      Params:         0       2       0       0       0       0       0
  1867 ;;      Locals:         0       5       0       0       0       0       0
  1868 ;;      Temps:          0       3       0       0       0       0       0
  1869 ;;      Totals:         0      10       0       0       0       0       0
  1870 ;;Total ram usage:       10 bytes
  1871 ;; Hardware stack levels used:    1
  1872 ;; Hardware stack levels required when called:   11
  1873 ;; This function calls:
  1874 ;;		_codFreq
  1875 ;; This function is called by:
  1876 ;;		_setFrequency
  1877 ;; This function uses a non-reentrant model
  1878 ;;
  1879                           
  1880                           	psect	text3
  1881  001BAE                     __ptext3:
  1882                           	opt callstack 0
  1883  001BAE                     _writeFrequency:
  1884                           	opt callstack 0
  1885  001BAE  FFFF               	dw	65535	; assembler added errata NOP
  1886                           
  1887                           ;bh1514.c: 16:     unsigned int buffer;;bh1514.c: 17:     unsigned int r;;bh1514.c: 18: 
      +                              unsigned char i;;bh1514.c: 20:     buffer = codFreq(f);
  1888                           
  1889                           ;incstack = 0
  1890  001BB0  C082  F080         	movff	writeFrequency@f,codFreq@f
  1891  001BB4  C083  F081         	movff	writeFrequency@f+1,codFreq@f+1
  1892  001BB8  ECFE  F014         	call	_codFreq	;wreg free
  1893  001BBC  C080  F087         	movff	?_codFreq,writeFrequency@buffer
  1894  001BC0  C081  F088         	movff	?_codFreq+1,writeFrequency@buffer+1
  1895                           
  1896                           ;bh1514.c: 22:     PORTEbits.RE0 = 1;
  1897  001BC4  8084               	bsf	3972,0,c	;volatile
  1898                           
  1899                           ;bh1514.c: 23:     _delay((unsigned long)((1)*(12000000/4000.0)));
  1900  001BC6  0E03               	movlw	3
  1901  001BC8  0100               	movlb	0	; () banked
  1902  001BCA  6F84               	movwf	??_writeFrequency& (0+255),b
  1903  001BCC  0EEB               	movlw	235
  1904  001BCE                     u3857:
  1905  001BCE  FFFF               	dw	65535	; errata NOP
  1906  001BD0  2EE8               	decfsz	wreg,f,c
  1907  001BD2  D7FD               	bra	u3857
  1908  001BD4  2F84               	decfsz	??_writeFrequency& (0+255),f,b
  1909  001BD6  D7FB               	bra	u3857
  1910  001BD8  D000               	nop2	
  1911  001BDA  F000               	nop	
  1912                           
  1913                           ;bh1514.c: 24:     for(i = 0; i < 16; i++){
  1914  001BDC  0E00               	movlw	0
  1915  001BDE  0100               	movlb	0	; () banked
  1916  001BE0  6F8B               	movwf	writeFrequency@i& (0+255),b
  1917  001BE2                     l3750:
  1918  001BE2  FFFF               	dw	65535	; assembler added errata NOP
  1919                           
  1920                           ; BSR set to: 0
  1921                           ;bh1514.c: 25:         r = (buffer >> i) & 0x0001;
  1922  001BE4  C08B  F084         	movff	writeFrequency@i,??_writeFrequency
  1923  001BE8  C087  F085         	movff	writeFrequency@buffer,??_writeFrequency+1
  1924  001BEC  C088  F086         	movff	writeFrequency@buffer+1,??_writeFrequency+2
  1925  001BF0  2B84               	incf	??_writeFrequency& (0+255),f,b
  1926  001BF2  D004               	goto	u3264
  1927  001BF4                     u3265:
  1928  001BF4  FFFF               	dw	65535	; assembler added errata NOP
  1929  001BF6  90D8               	bcf	status,0,c
  1930  001BF8  3386               	rrcf	(??_writeFrequency+2)& (0+255),f,b
  1931  001BFA  3385               	rrcf	(??_writeFrequency+1)& (0+255),f,b
  1932  001BFC                     u3264:
  1933  001BFC  FFFF               	dw	65535	; assembler added errata NOP
  1934  001BFE  2F84               	decfsz	??_writeFrequency& (0+255),f,b
  1935  001C00  D7F9               	goto	u3265
  1936  001C02  0E01               	movlw	1
  1937  001C04  0100               	movlb	0	; () banked
  1938  001C06  1585               	andwf	(??_writeFrequency+1)& (0+255),w,b
  1939  001C08  6F89               	movwf	writeFrequency@r& (0+255),b
  1940  001C0A  6B8A               	clrf	(writeFrequency@r+1)& (0+255),b
  1941                           
  1942                           ;bh1514.c: 26:         if(r == 1){
  1943  001C0C  0589               	decf	writeFrequency@r& (0+255),w,b
  1944  001C0E  118A               	iorwf	(writeFrequency@r+1)& (0+255),w,b
  1945  001C10  A4D8               	btfss	status,2,c
  1946  001C12  D002               	goto	l534
  1947                           
  1948                           ; BSR set to: 0
  1949                           ;bh1514.c: 27:             PORTEbits.RE2 = 1;
  1950  001C14  8484               	bsf	3972,2,c	;volatile
  1951                           
  1952                           ;bh1514.c: 28:         }else{
  1953  001C16  D002               	goto	l3754
  1954  001C18                     l534:
  1955  001C18  FFFF               	dw	65535	; assembler added errata NOP
  1956                           
  1957                           ; BSR set to: 0
  1958                           ;bh1514.c: 29:             PORTEbits.RE2 = 0;
  1959  001C1A  9484               	bcf	3972,2,c	;volatile
  1960  001C1C                     l3754:
  1961  001C1C  FFFF               	dw	65535	; assembler added errata NOP
  1962                           
  1963                           ; BSR set to: 0
  1964                           ;bh1514.c: 31:         _delay((unsigned long)((1)*(12000000/4000.0)));
  1965  001C1E  0E03               	movlw	3
  1966  001C20  0100               	movlb	0	; () banked
  1967  001C22  6F84               	movwf	??_writeFrequency& (0+255),b
  1968  001C24  0EEB               	movlw	235
  1969  001C26                     u3867:
  1970  001C26  FFFF               	dw	65535	; errata NOP
  1971  001C28  2EE8               	decfsz	wreg,f,c
  1972  001C2A  D7FD               	bra	u3867
  1973  001C2C  2F84               	decfsz	??_writeFrequency& (0+255),f,b
  1974  001C2E  D7FB               	bra	u3867
  1975  001C30  D000               	nop2	
  1976  001C32  F000               	nop	
  1977                           
  1978                           ;bh1514.c: 32:         PORTEbits.RE1 = 1;
  1979  001C34  8284               	bsf	3972,1,c	;volatile
  1980                           
  1981                           ;bh1514.c: 33:         _delay((unsigned long)((1)*(12000000/4000.0)));
  1982  001C36  0E03               	movlw	3
  1983  001C38  0100               	movlb	0	; () banked
  1984  001C3A  6F84               	movwf	??_writeFrequency& (0+255),b
  1985  001C3C  0EEB               	movlw	235
  1986  001C3E                     u3877:
  1987  001C3E  FFFF               	dw	65535	; errata NOP
  1988  001C40  2EE8               	decfsz	wreg,f,c
  1989  001C42  D7FD               	bra	u3877
  1990  001C44  2F84               	decfsz	??_writeFrequency& (0+255),f,b
  1991  001C46  D7FB               	bra	u3877
  1992  001C48  D000               	nop2	
  1993  001C4A  F000               	nop	
  1994                           
  1995                           ;bh1514.c: 34:         PORTEbits.RE1 = 0;
  1996  001C4C  9284               	bcf	3972,1,c	;volatile
  1997                           
  1998                           ;bh1514.c: 35:     }
  1999  001C4E  0100               	movlb	0	; () banked
  2000  001C50  2B8B               	incf	writeFrequency@i& (0+255),f,b
  2001  001C52  0E0F               	movlw	15
  2002  001C54  658B               	cpfsgt	writeFrequency@i& (0+255),b
  2003  001C56  D7C5               	goto	l3750
  2004                           
  2005                           ; BSR set to: 0
  2006                           ;bh1514.c: 36:     _delay((unsigned long)((1)*(12000000/4000.0)));
  2007  001C58  0E03               	movlw	3
  2008  001C5A  0100               	movlb	0	; () banked
  2009  001C5C  6F84               	movwf	??_writeFrequency& (0+255),b
  2010  001C5E  0EEB               	movlw	235
  2011  001C60                     u3887:
  2012  001C60  FFFF               	dw	65535	; errata NOP
  2013  001C62  2EE8               	decfsz	wreg,f,c
  2014  001C64  D7FD               	bra	u3887
  2015  001C66  2F84               	decfsz	??_writeFrequency& (0+255),f,b
  2016  001C68  D7FB               	bra	u3887
  2017  001C6A  D000               	nop2	
  2018  001C6C  F000               	nop	
  2019                           
  2020                           ;bh1514.c: 37:     PORTEbits.RE0 = 0;
  2021  001C6E  9084               	bcf	3972,0,c	;volatile
  2022  001C70  0012               	return		;funcret
  2023  001C72  FFFF               	dw	65535	; errata NOP
  2024  001C74                     __end_of_writeFrequency:
  2025                           	opt callstack 0
  2026                           
  2027 ;; *************** function _codFreq *****************
  2028 ;; Defined at:
  2029 ;;		line 6 in file "bh1514.c"
  2030 ;; Parameters:    Size  Location     Type
  2031 ;;  f               2    0[BANK0 ] unsigned int 
  2032 ;; Auto vars:     Size  Location     Type
  2033 ;;		None
  2034 ;; Return value:  Size  Location     Type
  2035 ;;                  2    0[BANK0 ] unsigned int 
  2036 ;; Registers used:
  2037 ;;		wreg, status,2, status,0
  2038 ;; Tracked objects:
  2039 ;;		On entry : 0/0
  2040 ;;		On exit  : 0/0
  2041 ;;		Unchanged: 0/0
  2042 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2043 ;;      Params:         0       2       0       0       0       0       0
  2044 ;;      Locals:         0       0       0       0       0       0       0
  2045 ;;      Temps:          0       0       0       0       0       0       0
  2046 ;;      Totals:         0       2       0       0       0       0       0
  2047 ;;Total ram usage:        2 bytes
  2048 ;; Hardware stack levels used:    1
  2049 ;; Hardware stack levels required when called:   10
  2050 ;; This function calls:
  2051 ;;		Nothing
  2052 ;; This function is called by:
  2053 ;;		_writeFrequency
  2054 ;; This function uses a non-reentrant model
  2055 ;;
  2056                           
  2057                           	psect	text4
  2058  0029FC                     __ptext4:
  2059                           	opt callstack 0
  2060  0029FC                     _codFreq:
  2061                           	opt callstack 0
  2062  0029FC  FFFF               	dw	65535	; assembler added errata NOP
  2063                           
  2064                           ;bh1514.c: 8:         f = f | 0b0100100000000000;
  2065                           
  2066                           ;incstack = 0
  2067  0029FE  0E00               	movlw	0
  2068  002A00  0100               	movlb	0	; () banked
  2069  002A02  1180               	iorwf	codFreq@f& (0+255),w,b
  2070  002A04  6F80               	movwf	codFreq@f& (0+255),b
  2071  002A06  0E48               	movlw	72
  2072  002A08  1181               	iorwf	(codFreq@f+1)& (0+255),w,b
  2073  002A0A  6F81               	movwf	(codFreq@f+1)& (0+255),b
  2074                           
  2075                           ; BSR set to: 0
  2076                           ;bh1514.c: 12:     return f;
  2077                           
  2078                           ;bh1514.c: 9:     }else{
  2079  002A0C  C080  F080         	movff	codFreq@f,?_codFreq
  2080  002A10  C081  F081         	movff	codFreq@f+1,?_codFreq+1
  2081                           
  2082                           ; BSR set to: 0
  2083  002A14  0012               	return		;funcret
  2084  002A16  FFFF               	dw	65535	; errata NOP
  2085  002A18                     __end_of_codFreq:
  2086                           	opt callstack 0
  2087                           
  2088 ;; *************** function _sprintf *****************
  2089 ;; Defined at:
  2090 ;;		line 9 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/nf_sprintf.c"
  2091 ;; Parameters:    Size  Location     Type
  2092 ;;  s               2   91[BANK0 ] PTR unsigned char 
  2093 ;;		 -> lineTwo(17), lineOne(17), 
  2094 ;;  fmt             2   93[BANK0 ] PTR const unsigned char 
  2095 ;;		 -> STR_4(18), STR_3(17), STR_2(17), STR_1(17), 
  2096 ;; Auto vars:     Size  Location     Type
  2097 ;;  f               6   99[BANK0 ] struct _IO_FILE
  2098 ;;  ap              2   97[BANK0 ] PTR void [1]
  2099 ;;		 -> ?_sprintf(2), 
  2100 ;;  ret             2    0        int 
  2101 ;; Return value:  Size  Location     Type
  2102 ;;                  2   91[BANK0 ] int 
  2103 ;; Registers used:
  2104 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2105 ;; Tracked objects:
  2106 ;;		On entry : 0/0
  2107 ;;		On exit  : 0/0
  2108 ;;		Unchanged: 0/0
  2109 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2110 ;;      Params:         0       4       0       0       0       0       0
  2111 ;;      Locals:         0      10       0       0       0       0       0
  2112 ;;      Temps:          0       0       0       0       0       0       0
  2113 ;;      Totals:         0      14       0       0       0       0       0
  2114 ;;Total ram usage:       14 bytes
  2115 ;; Hardware stack levels used:    1
  2116 ;; Hardware stack levels required when called:   17
  2117 ;; This function calls:
  2118 ;;		_vfprintf
  2119 ;; This function is called by:
  2120 ;;		_main
  2121 ;;		_setFrequency
  2122 ;; This function uses a non-reentrant model
  2123 ;;
  2124                           
  2125                           	psect	text5
  2126  0023DA                     __ptext5:
  2127                           	opt callstack 0
  2128  0023DA                     _sprintf:
  2129                           	opt callstack 0
  2130  0023DA  FFFF               	dw	65535	; assembler added errata NOP
  2131                           
  2132                           ; BSR set to: 0
  2133                           ;incstack = 0
  2134  0023DC  0EDF               	movlw	low (?_sprintf+4)
  2135  0023DE  0100               	movlb	0	; () banked
  2136  0023E0  6FE1               	movwf	sprintf@ap& (0+255),b
  2137  0023E2  0E00               	movlw	high (?_sprintf+4)
  2138  0023E4  6FE2               	movwf	(sprintf@ap+1)& (0+255),b
  2139  0023E6  C0DB  F0E3         	movff	sprintf@s,sprintf@f
  2140  0023EA  C0DC  F0E4         	movff	sprintf@s+1,sprintf@f+1
  2141                           
  2142                           ; BSR set to: 0
  2143  0023EE  0E00               	movlw	0
  2144  0023F0  6FE6               	movwf	(sprintf@f+3)& (0+255),b
  2145  0023F2  0E00               	movlw	0
  2146  0023F4  6FE5               	movwf	(sprintf@f+2)& (0+255),b
  2147                           
  2148                           ; BSR set to: 0
  2149  0023F6  0E00               	movlw	0
  2150  0023F8  6FE8               	movwf	(sprintf@f+5)& (0+255),b
  2151  0023FA  0E00               	movlw	0
  2152  0023FC  6FE7               	movwf	(sprintf@f+4)& (0+255),b
  2153                           
  2154                           ; BSR set to: 0
  2155  0023FE  0EE3               	movlw	low sprintf@f
  2156  002400  6FD3               	movwf	vfprintf@fp& (0+255),b
  2157  002402  0E00               	movlw	high sprintf@f
  2158  002404  6FD4               	movwf	(vfprintf@fp+1)& (0+255),b
  2159  002406  C0DD  F0D5         	movff	sprintf@fmt,vfprintf@fmt
  2160  00240A  C0DE  F0D6         	movff	sprintf@fmt+1,vfprintf@fmt+1
  2161  00240E  0EE1               	movlw	low sprintf@ap
  2162  002410  6FD7               	movwf	vfprintf@ap& (0+255),b
  2163  002412  0E00               	movlw	high sprintf@ap
  2164  002414  6FD8               	movwf	(vfprintf@ap+1)& (0+255),b
  2165  002416  EC2D  F011         	call	_vfprintf	;wreg free
  2166  00241A  0100               	movlb	0	; () banked
  2167  00241C  51E5               	movf	(sprintf@f+2)& (0+255),w,b
  2168  00241E  25DB               	addwf	sprintf@s& (0+255),w,b
  2169  002420  6ED9               	movwf	fsr2l,c
  2170  002422  51E6               	movf	(sprintf@f+3)& (0+255),w,b
  2171  002424  21DC               	addwfc	(sprintf@s+1)& (0+255),w,b
  2172  002426  6EDA               	movwf	fsr2h,c
  2173  002428  0E00               	movlw	0
  2174  00242A  6EDF               	movwf	indf2,c
  2175                           
  2176                           ; BSR set to: 0
  2177  00242C  0012               	return		;funcret
  2178  00242E  FFFF               	dw	65535	; errata NOP
  2179  002430                     __end_of_sprintf:
  2180                           	opt callstack 0
  2181                           
  2182 ;; *************** function _vfprintf *****************
  2183 ;; Defined at:
  2184 ;;		line 1368 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  2185 ;; Parameters:    Size  Location     Type
  2186 ;;  fp              2   83[BANK0 ] PTR struct _IO_FILE
  2187 ;;		 -> sprintf@f(6), 
  2188 ;;  fmt             2   85[BANK0 ] PTR const unsigned char 
  2189 ;;		 -> STR_4(18), STR_3(17), STR_2(17), STR_1(17), 
  2190 ;;  ap              2   87[BANK0 ] PTR PTR void 
  2191 ;;		 -> sprintf@ap(2), 
  2192 ;; Auto vars:     Size  Location     Type
  2193 ;;  cfmt            2   89[BANK0 ] PTR unsigned char 
  2194 ;;		 -> STR_4(18), STR_3(17), STR_2(17), STR_1(17), 
  2195 ;; Return value:  Size  Location     Type
  2196 ;;                  2   83[BANK0 ] int 
  2197 ;; Registers used:
  2198 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2199 ;; Tracked objects:
  2200 ;;		On entry : 0/0
  2201 ;;		On exit  : 0/0
  2202 ;;		Unchanged: 0/0
  2203 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2204 ;;      Params:         0       6       0       0       0       0       0
  2205 ;;      Locals:         0       2       0       0       0       0       0
  2206 ;;      Temps:          0       0       0       0       0       0       0
  2207 ;;      Totals:         0       8       0       0       0       0       0
  2208 ;;Total ram usage:        8 bytes
  2209 ;; Hardware stack levels used:    1
  2210 ;; Hardware stack levels required when called:   16
  2211 ;; This function calls:
  2212 ;;		_vfpfcnvrt
  2213 ;; This function is called by:
  2214 ;;		_sprintf
  2215 ;; This function uses a non-reentrant model
  2216 ;;
  2217                           
  2218                           	psect	text6
  2219  00225A                     __ptext6:
  2220                           	opt callstack 0
  2221  00225A                     _vfprintf:
  2222                           	opt callstack 0
  2223  00225A  FFFF               	dw	65535	; assembler added errata NOP
  2224                           
  2225                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1368: int vfprintf(FILE *fp, 
      +                          const char *fmt, va_list ap);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1
      +                          369: {;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1371:     char *cfmt;;/
      +                          opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1373:     cfmt = (char *)fmt;
  2226                           
  2227                           ; BSR set to: 0
  2228                           ;incstack = 0
  2229  00225C  C0D5  F0D9         	movff	vfprintf@fmt,vfprintf@cfmt
  2230  002260  C0D6  F0DA         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  2231                           
  2232                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1374:     nout = 0;
  2233  002264  0E00               	movlw	0
  2234  002266  0101               	movlb	1	; () banked
  2235  002268  6F01               	movwf	(_nout+1)& (0+255),b
  2236  00226A  0E00               	movlw	0
  2237  00226C  6F00               	movwf	_nout& (0+255),b
  2238                           
  2239                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
  2240  00226E  D018               	goto	l3642
  2241  002270                     l3640:
  2242  002270  FFFF               	dw	65535	; assembler added errata NOP
  2243                           
  2244                           ; BSR set to: 1
  2245                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1376:         nout += vfpfcnv
      +                          rt(fp, &cfmt, ap);
  2246  002272  C0D3  F0BF         	movff	vfprintf@fp,vfpfcnvrt@fp
  2247  002276  C0D4  F0C0         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  2248  00227A  0ED9               	movlw	low vfprintf@cfmt
  2249  00227C  0100               	movlb	0	; () banked
  2250  00227E  6FC1               	movwf	vfpfcnvrt@fmt& (0+255),b
  2251  002280  0E00               	movlw	high vfprintf@cfmt
  2252  002282  6FC2               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
  2253  002284  C0D7  F0C3         	movff	vfprintf@ap,vfpfcnvrt@ap
  2254  002288  C0D8  F0C4         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  2255  00228C  EC26  F003         	call	_vfpfcnvrt	;wreg free
  2256  002290  0100               	movlb	0	; () banked
  2257  002292  51BF               	movf	?_vfpfcnvrt& (0+255),w,b
  2258  002294  0101               	movlb	1	; () banked
  2259  002296  2700               	addwf	_nout& (0+255),f,b
  2260  002298  0100               	movlb	0	; () banked
  2261  00229A  51C0               	movf	(?_vfpfcnvrt+1)& (0+255),w,b
  2262  00229C  0101               	movlb	1	; () banked
  2263  00229E  2301               	addwfc	(_nout+1)& (0+255),f,b
  2264  0022A0                     l3642:
  2265  0022A0  FFFF               	dw	65535	; assembler added errata NOP
  2266                           
  2267                           ; BSR set to: 1
  2268                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
  2269  0022A2  C0D9  FFF6         	movff	vfprintf@cfmt,tblptrl
  2270  0022A6  C0DA  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  2271  0022AA                     	if	0	;tblptru may be non-zero
  2272  0022AA                     	endif
  2273  0022AA                     	if	0	;tblptru may be non-zero
  2274  0022AA                     	endif
  2275  0022AA  0008               	tblrd		*
  2276  0022AC  FFFF               	dw	65535	; errata NOP
  2277  0022AE  50F5               	movf	tablat,w,c
  2278  0022B0  0900               	iorlw	0
  2279  0022B2  A4D8               	btfss	status,2,c
  2280  0022B4  D7DD               	goto	l3640
  2281                           
  2282                           ; BSR set to: 1
  2283                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1378:     return nout;
  2284  0022B6  C100  F0D3         	movff	_nout,?_vfprintf
  2285  0022BA  C101  F0D4         	movff	_nout+1,?_vfprintf+1
  2286                           
  2287                           ; BSR set to: 1
  2288  0022BE  0012               	return		;funcret
  2289  0022C0  FFFF               	dw	65535	; errata NOP
  2290  0022C2                     __end_of_vfprintf:
  2291                           	opt callstack 0
  2292                           
  2293 ;; *************** function _vfpfcnvrt *****************
  2294 ;; Defined at:
  2295 ;;		line 670 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  2296 ;; Parameters:    Size  Location     Type
  2297 ;;  fp              2   63[BANK0 ] PTR struct _IO_FILE
  2298 ;;		 -> sprintf@f(6), 
  2299 ;;  fmt             2   65[BANK0 ] PTR PTR unsigned char 
  2300 ;;		 -> vfprintf@cfmt(2), 
  2301 ;;  ap              2   67[BANK0 ] PTR PTR void 
  2302 ;;		 -> sprintf@ap(2), 
  2303 ;; Auto vars:     Size  Location     Type
  2304 ;;  ll              8   73[BANK0 ] long long 
  2305 ;;  llu             8    0        unsigned long long 
  2306 ;;  f               4    0        unsigned long long 
  2307 ;;  vp              3    0        PTR void 
  2308 ;;  ct              3    0        unsigned char [3]
  2309 ;;  cp              3    0        PTR unsigned char 
  2310 ;;  i               2    0        int 
  2311 ;;  done            2    0        int 
  2312 ;;  c               1    0        unsigned char 
  2313 ;; Return value:  Size  Location     Type
  2314 ;;                  2   63[BANK0 ] int 
  2315 ;; Registers used:
  2316 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2317 ;; Tracked objects:
  2318 ;;		On entry : 0/0
  2319 ;;		On exit  : 0/0
  2320 ;;		Unchanged: 0/0
  2321 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2322 ;;      Params:         0       6       0       0       0       0       0
  2323 ;;      Locals:         0      10       0       0       0       0       0
  2324 ;;      Temps:          0       4       0       0       0       0       0
  2325 ;;      Totals:         0      20       0       0       0       0       0
  2326 ;;Total ram usage:       20 bytes
  2327 ;; Hardware stack levels used:    1
  2328 ;; Hardware stack levels required when called:   15
  2329 ;; This function calls:
  2330 ;;		_atoi
  2331 ;;		_dtoa
  2332 ;;		_fputc
  2333 ;;		_isdigit
  2334 ;; This function is called by:
  2335 ;;		_vfprintf
  2336 ;; This function uses a non-reentrant model
  2337 ;;
  2338                           
  2339                           	psect	text7
  2340  00064C                     __ptext7:
  2341                           	opt callstack 0
  2342  00064C                     _vfpfcnvrt:
  2343                           	opt callstack 0
  2344  00064C  FFFF               	dw	65535	; assembler added errata NOP
  2345                           
  2346                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 670: static int vfpfcnvrt(FIL
      +                          E *fp, char *fmt[], va_list ap);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c
      +                          : 671: {;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 672:     char c, *cp,
      +                           ct[3];;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 673:     int done, i;;
      +                          /opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 674:     long long ll;;/opt/mi
      +                          crochip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 675:     unsigned long long llu;
  2347                           
  2348                           ; BSR set to: 1
  2349                           ;incstack = 0
  2350  00064E  C0C1  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2351  000652  C0C2  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2352  000656  CFDE FFF6          	movff	postinc2,tblptrl
  2353  00065A  CFDD FFF7          	movff	postdec2,tblptrh
  2354  00065E                     	if	0	;tblptru may be non-zero
  2355  00065E                     	endif
  2356  00065E                     	if	0	;tblptru may be non-zero
  2357  00065E                     	endif
  2358  00065E  0008               	tblrd		*
  2359  000660  FFFF               	dw	65535	; errata NOP
  2360  000662  50F5               	movf	tablat,w,c
  2361  000664  0A25               	xorlw	37
  2362  000666  A4D8               	btfss	status,2,c
  2363  000668  D114               	goto	l3450
  2364                           
  2365                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 681:         ++*fmt;
  2366  00066A  C0C1  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2367  00066E  C0C2  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2368  000672  2ADE               	incf	postinc2,f,c
  2369  000674  0E00               	movlw	0
  2370  000676  22DD               	addwfc	postdec2,f,c
  2371                           
  2372                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 683:         flags = width = 
      +                          0;
  2373  000678  0E00               	movlw	0
  2374  00067A  0100               	movlb	0	; () banked
  2375  00067C  6FEF               	movwf	(_width+1)& (0+255),b
  2376  00067E  0E00               	movlw	0
  2377  000680  6FEE               	movwf	_width& (0+255),b
  2378  000682  C0EE  F0F2         	movff	_width,_flags
  2379  000686  C0EF  F0F3         	movff	_width+1,_flags+1
  2380                           
  2381                           ; BSR set to: 0
  2382                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 684:         prec = -1;
  2383  00068A  69F0               	setf	_prec& (0+255),b
  2384  00068C  69F1               	setf	(_prec+1)& (0+255),b
  2385                           
  2386                           ; BSR set to: 0
  2387                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 723:         if ((*fmt)[0] ==
      +                           '*') {
  2388  00068E  C0C1  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2389  000692  C0C2  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2390  000696  CFDE FFF6          	movff	postinc2,tblptrl
  2391  00069A  CFDD FFF7          	movff	postdec2,tblptrh
  2392  00069E                     	if	0	;tblptru may be non-zero
  2393  00069E                     	endif
  2394  00069E                     	if	0	;tblptru may be non-zero
  2395  00069E                     	endif
  2396  00069E  0008               	tblrd		*
  2397  0006A0  FFFF               	dw	65535	; errata NOP
  2398  0006A2  50F5               	movf	tablat,w,c
  2399  0006A4  0A2A               	xorlw	42
  2400  0006A6  A4D8               	btfss	status,2,c
  2401  0006A8  D023               	goto	l3414
  2402                           
  2403                           ; BSR set to: 0
  2404                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 724:             ++*fmt;
  2405  0006AA  C0C1  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2406  0006AE  C0C2  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2407  0006B2  2ADE               	incf	postinc2,f,c
  2408  0006B4  0E00               	movlw	0
  2409  0006B6  22DD               	addwfc	postdec2,f,c
  2410                           
  2411                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 725:             width = (*(i
      +                          nt *)__va_arg(*(int **)ap, (int)0));
  2412  0006B8  C0C3  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2413  0006BC  C0C4  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2414  0006C0  CFDF F0C5          	movff	indf2,??_vfpfcnvrt
  2415  0006C4  0E02               	movlw	2
  2416  0006C6  26DE               	addwf	postinc2,f,c
  2417  0006C8  CFDF F0C6          	movff	indf2,??_vfpfcnvrt+1
  2418  0006CC  0E00               	movlw	0
  2419  0006CE  22DD               	addwfc	postdec2,f,c
  2420  0006D0  C0C5  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2421  0006D4  C0C6  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2422  0006D8  CFDE F0EE          	movff	postinc2,_width
  2423  0006DC  CFDD F0EF          	movff	postdec2,_width+1
  2424                           
  2425                           ; BSR set to: 0
  2426                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 726:             if (width < 
      +                          0) {
  2427  0006E0  AFEF               	btfss	(_width+1)& (0+255),7,b
  2428  0006E2  D046               	goto	u2950
  2429                           
  2430                           ; BSR set to: 0
  2431                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 727:                 flags |=
      +                           (1 << 0);
  2432  0006E4  81F2               	bsf	_flags& (0+255),0,b
  2433                           
  2434                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 728:                 width = 
      +                          -width;
  2435  0006E6  6DEE               	negf	_width& (0+255),b
  2436  0006E8  1FEF               	comf	(_width+1)& (0+255),f,b
  2437  0006EA  B0D8               	btfsc	status,0,c
  2438  0006EC  2BEF               	incf	(_width+1)& (0+255),f,b
  2439  0006EE  D040               	goto	u2950
  2440  0006F0                     l3414:
  2441  0006F0  FFFF               	dw	65535	; assembler added errata NOP
  2442                           
  2443                           ; BSR set to: 0
  2444                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 731:             width = atoi
      +                          (*fmt);
  2445  0006F2  C0C1  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2446  0006F6  C0C2  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2447  0006FA  CFDE F087          	movff	postinc2,atoi@s
  2448  0006FE  CFDD F088          	movff	postdec2,atoi@s+1
  2449  000702  ECED  F008         	call	_atoi	;wreg free
  2450  000706  C087  F0EE         	movff	?_atoi,_width
  2451  00070A  C088  F0EF         	movff	?_atoi+1,_width+1
  2452                           
  2453                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 732:             while ((0 ? 
      +                          isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  2454  00070E  D008               	goto	l3418
  2455  000710                     l3416:
  2456  000710  FFFF               	dw	65535	; assembler added errata NOP
  2457                           
  2458                           ; BSR set to: 0
  2459                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 733:                 ++*fmt;
  2460  000712  C0C1  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2461  000716  C0C2  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2462  00071A  2ADE               	incf	postinc2,f,c
  2463  00071C  0E00               	movlw	0
  2464  00071E  22DD               	addwfc	postdec2,f,c
  2465  000720                     l3418:
  2466  000720  FFFF               	dw	65535	; assembler added errata NOP
  2467  000722  0ED0               	movlw	208
  2468  000724  0100               	movlb	0	; () banked
  2469  000726  6FC5               	movwf	??_vfpfcnvrt& (0+255),b
  2470  000728  0EFF               	movlw	255
  2471  00072A  6FC6               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  2472  00072C  C0C1  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2473  000730  C0C2  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2474  000734  CFDE FFF6          	movff	postinc2,tblptrl
  2475  000738  CFDD FFF7          	movff	postdec2,tblptrh
  2476  00073C                     	if	0	;tblptru may be non-zero
  2477  00073C                     	endif
  2478  00073C                     	if	0	;tblptru may be non-zero
  2479  00073C                     	endif
  2480  00073C  0008               	tblrd		*
  2481  00073E  FFFF               	dw	65535	; errata NOP
  2482  000740  50F5               	movf	tablat,w,c
  2483  000742  6FC7               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  2484  000744  6BC8               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  2485  000746  51C5               	movf	??_vfpfcnvrt& (0+255),w,b
  2486  000748  27C7               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  2487  00074A  51C6               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  2488  00074C  23C8               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  2489  00074E  51C8               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  2490  000750  E106               	bnz	u2930
  2491  000752  0E0A               	movlw	10
  2492  000754  5DC7               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  2493  000756  B0D8               	btfsc	status,0,c
  2494  000758  D002               	goto	u2930
  2495  00075A  0E01               	movlw	1
  2496  00075C  D002               	goto	u2940
  2497  00075E                     u2930:
  2498  00075E  FFFF               	dw	65535	; assembler added errata NOP
  2499  000760  0E00               	movlw	0
  2500  000762                     u2940:
  2501  000762  FFFF               	dw	65535	; assembler added errata NOP
  2502  000764  6FD1               	movwf	_vfpfcnvrt$1046& (0+255),b
  2503  000766  6BD2               	clrf	(_vfpfcnvrt$1046+1)& (0+255),b
  2504                           
  2505                           ; BSR set to: 0
  2506  000768  51D1               	movf	_vfpfcnvrt$1046& (0+255),w,b
  2507  00076A  11D2               	iorwf	(_vfpfcnvrt$1046+1)& (0+255),w,b
  2508  00076C  A4D8               	btfss	status,2,c
  2509  00076E  D7D0               	goto	l3416
  2510  000770                     u2950:
  2511  000770  FFFF               	dw	65535	; assembler added errata NOP
  2512                           
  2513                           ; BSR set to: 0
  2514                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 825:         if ((*fmt[0] == 
      +                          'd') || (*fmt[0] == 'i')) {
  2515  000772  C0C1  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2516  000776  C0C2  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2517  00077A  CFDE FFF6          	movff	postinc2,tblptrl
  2518  00077E  CFDD FFF7          	movff	postdec2,tblptrh
  2519  000782                     	if	0	;tblptru may be non-zero
  2520  000782                     	endif
  2521  000782                     	if	0	;tblptru may be non-zero
  2522  000782                     	endif
  2523  000782  0008               	tblrd		*
  2524  000784  FFFF               	dw	65535	; errata NOP
  2525  000786  50F5               	movf	tablat,w,c
  2526  000788  0A64               	xorlw	100
  2527  00078A  B4D8               	btfsc	status,2,c
  2528  00078C  D00E               	goto	u2970
  2529                           
  2530                           ; BSR set to: 0
  2531  00078E  C0C1  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2532  000792  C0C2  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2533  000796  CFDE FFF6          	movff	postinc2,tblptrl
  2534  00079A  CFDD FFF7          	movff	postdec2,tblptrh
  2535  00079E                     	if	0	;tblptru may be non-zero
  2536  00079E                     	endif
  2537  00079E                     	if	0	;tblptru may be non-zero
  2538  00079E                     	endif
  2539  00079E  0008               	tblrd		*
  2540  0007A0  FFFF               	dw	65535	; errata NOP
  2541  0007A2  50F5               	movf	tablat,w,c
  2542  0007A4  0A69               	xorlw	105
  2543  0007A6  A4D8               	btfss	status,2,c
  2544  0007A8  D040               	goto	l3434
  2545  0007AA                     u2970:
  2546  0007AA  FFFF               	dw	65535	; assembler added errata NOP
  2547                           
  2548                           ; BSR set to: 0
  2549                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 827:             ++*fmt;
  2550  0007AC  C0C1  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2551  0007B0  C0C2  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2552  0007B4  2ADE               	incf	postinc2,f,c
  2553  0007B6  0E00               	movlw	0
  2554  0007B8  22DD               	addwfc	postdec2,f,c
  2555                           
  2556                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 828:             ll = (long l
      +                          ong)(*(int *)__va_arg(*(int **)ap, (int)0));
  2557  0007BA  C0C3  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2558  0007BE  C0C4  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2559  0007C2  CFDF F0C5          	movff	indf2,??_vfpfcnvrt
  2560  0007C6  0E02               	movlw	2
  2561  0007C8  26DE               	addwf	postinc2,f,c
  2562  0007CA  CFDF F0C6          	movff	indf2,??_vfpfcnvrt+1
  2563  0007CE  0E00               	movlw	0
  2564  0007D0  22DD               	addwfc	postdec2,f,c
  2565  0007D2  C0C5  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2566  0007D6  C0C6  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2567  0007DA  CFDE F0C9          	movff	postinc2,vfpfcnvrt@ll
  2568  0007DE  CFDD F0CA          	movff	postdec2,vfpfcnvrt@ll+1
  2569  0007E2  0E00               	movlw	0
  2570  0007E4  BFCA               	btfsc	(vfpfcnvrt@ll+1)& (0+255),7,b
  2571  0007E6  0EFF               	movlw	-1
  2572  0007E8  6FCB               	movwf	(vfpfcnvrt@ll+2)& (0+255),b
  2573  0007EA  6FCC               	movwf	(vfpfcnvrt@ll+3)& (0+255),b
  2574  0007EC  6FCD               	movwf	(vfpfcnvrt@ll+4)& (0+255),b
  2575  0007EE  6FCE               	movwf	(vfpfcnvrt@ll+5)& (0+255),b
  2576  0007F0  6FCF               	movwf	(vfpfcnvrt@ll+6)& (0+255),b
  2577  0007F2  6FD0               	movwf	(vfpfcnvrt@ll+7)& (0+255),b
  2578                           
  2579                           ; BSR set to: 0
  2580                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 830:             return dtoa(
      +                          fp, ll);
  2581  0007F4  C0BF  F09B         	movff	vfpfcnvrt@fp,dtoa@fp
  2582  0007F8  C0C0  F09C         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  2583  0007FC  C0C9  F09D         	movff	vfpfcnvrt@ll,dtoa@d
  2584  000800  C0CA  F09E         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  2585  000804  C0CB  F09F         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  2586  000808  C0CC  F0A0         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  2587  00080C  C0CD  F0A1         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  2588  000810  C0CE  F0A2         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  2589  000814  C0CF  F0A3         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  2590  000818  C0D0  F0A4         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  2591  00081C  ECA9  F005         	call	_dtoa	;wreg free
  2592  000820  C09B  F0BF         	movff	?_dtoa,?_vfpfcnvrt
  2593  000824  C09C  F0C0         	movff	?_dtoa+1,?_vfpfcnvrt+1
  2594  000828  D051               	goto	l615
  2595  00082A                     l3434:
  2596  00082A  FFFF               	dw	65535	; assembler added errata NOP
  2597                           
  2598                           ; BSR set to: 0
  2599                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1350:         if ((*fmt)[0] =
      +                          = '%') {
  2600  00082C  C0C1  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2601  000830  C0C2  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2602  000834  CFDE FFF6          	movff	postinc2,tblptrl
  2603  000838  CFDD FFF7          	movff	postdec2,tblptrh
  2604  00083C                     	if	0	;tblptru may be non-zero
  2605  00083C                     	endif
  2606  00083C                     	if	0	;tblptru may be non-zero
  2607  00083C                     	endif
  2608  00083C  0008               	tblrd		*
  2609  00083E  FFFF               	dw	65535	; errata NOP
  2610  000840  50F5               	movf	tablat,w,c
  2611  000842  0A25               	xorlw	37
  2612  000844  A4D8               	btfss	status,2,c
  2613  000846  D017               	goto	l3444
  2614                           
  2615                           ; BSR set to: 0
  2616                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1351:             ++*fmt;
  2617  000848  C0C1  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2618  00084C  C0C2  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2619  000850  2ADE               	incf	postinc2,f,c
  2620  000852  0E00               	movlw	0
  2621  000854  22DD               	addwfc	postdec2,f,c
  2622                           
  2623                           ; BSR set to: 0
  2624                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1352:             fputc((int)
      +                          '%', fp);
  2625  000856  0E00               	movlw	0
  2626  000858  6F81               	movwf	(fputc@c+1)& (0+255),b
  2627  00085A  0E25               	movlw	37
  2628  00085C  6F80               	movwf	fputc@c& (0+255),b
  2629  00085E  C0BF  F082         	movff	vfpfcnvrt@fp,fputc@fp
  2630  000862  C0C0  F083         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2631  000866  EC91  F00E         	call	_fputc	;wreg free
  2632  00086A                     l3440:
  2633  00086A  FFFF               	dw	65535	; assembler added errata NOP
  2634                           
  2635                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1353:             return 1;
  2636  00086C  0E00               	movlw	0
  2637  00086E  0100               	movlb	0	; () banked
  2638  000870  6FC0               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  2639  000872  0E01               	movlw	1
  2640  000874  D00B               	goto	L8
  2641  000876                     l3444:
  2642  000876  FFFF               	dw	65535	; assembler added errata NOP
  2643                           
  2644                           ; BSR set to: 0
  2645                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1357:         ++*fmt;
  2646  000878  C0C1  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2647  00087C  C0C2  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2648  000880  2ADE               	incf	postinc2,f,c
  2649  000882  0E00               	movlw	0
  2650  000884  22DD               	addwfc	postdec2,f,c
  2651                           
  2652                           ; BSR set to: 0
  2653                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1358:         return 0;
  2654  000886  0E00               	movlw	0
  2655  000888  6FC0               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  2656  00088A  0E00               	movlw	0
  2657  00088C                     L8:
  2658  00088C  FFFF               	dw	65535	; assembler added errata NOP
  2659  00088E  6FBF               	movwf	?_vfpfcnvrt& (0+255),b
  2660  000890  D01D               	goto	l615
  2661  000892                     l3450:
  2662  000892  FFFF               	dw	65535	; assembler added errata NOP
  2663                           
  2664                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1362:     fputc((int)(*fmt)[0
      +                          ], fp);
  2665  000894  C0C1  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2666  000898  C0C2  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2667  00089C  CFDE FFF6          	movff	postinc2,tblptrl
  2668  0008A0  CFDD FFF7          	movff	postdec2,tblptrh
  2669  0008A4                     	if	0	;tblptru may be non-zero
  2670  0008A4                     	endif
  2671  0008A4                     	if	0	;tblptru may be non-zero
  2672  0008A4                     	endif
  2673  0008A4  0008               	tblrd		*
  2674  0008A6  FFFF               	dw	65535	; errata NOP
  2675  0008A8  50F5               	movf	tablat,w,c
  2676  0008AA  0100               	movlb	0	; () banked
  2677  0008AC  6F80               	movwf	fputc@c& (0+255),b
  2678  0008AE  6B81               	clrf	(fputc@c+1)& (0+255),b
  2679  0008B0  C0BF  F082         	movff	vfpfcnvrt@fp,fputc@fp
  2680  0008B4  C0C0  F083         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2681  0008B8  EC91  F00E         	call	_fputc	;wreg free
  2682                           
  2683                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1363:     ++*fmt;
  2684  0008BC  C0C1  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2685  0008C0  C0C2  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2686  0008C4  2ADE               	incf	postinc2,f,c
  2687  0008C6  0E00               	movlw	0
  2688  0008C8  22DD               	addwfc	postdec2,f,c
  2689  0008CA  D7CF               	goto	l3440
  2690  0008CC                     l615:
  2691  0008CC  FFFF               	dw	65535	; assembler added errata NOP
  2692  0008CE  0012               	return		;funcret
  2693  0008D0  FFFF               	dw	65535	; errata NOP
  2694  0008D2                     __end_of_vfpfcnvrt:
  2695                           	opt callstack 0
  2696                           
  2697 ;; *************** function _dtoa *****************
  2698 ;; Defined at:
  2699 ;;		line 274 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  2700 ;; Parameters:    Size  Location     Type
  2701 ;;  fp              2   27[BANK0 ] PTR struct _IO_FILE
  2702 ;;		 -> sprintf@f(6), 
  2703 ;;  d               8   29[BANK0 ] long long 
  2704 ;; Auto vars:     Size  Location     Type
  2705 ;;  n               8   53[BANK0 ] long long 
  2706 ;;  i               2   61[BANK0 ] int 
  2707 ;;  s               2   51[BANK0 ] int 
  2708 ;;  w               2   49[BANK0 ] int 
  2709 ;;  p               2   47[BANK0 ] int 
  2710 ;; Return value:  Size  Location     Type
  2711 ;;                  2   27[BANK0 ] int 
  2712 ;; Registers used:
  2713 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2714 ;; Tracked objects:
  2715 ;;		On entry : 0/0
  2716 ;;		On exit  : 0/0
  2717 ;;		Unchanged: 0/0
  2718 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2719 ;;      Params:         0      10       0       0       0       0       0
  2720 ;;      Locals:         0      18       0       0       0       0       0
  2721 ;;      Temps:          0       8       0       0       0       0       0
  2722 ;;      Totals:         0      36       0       0       0       0       0
  2723 ;;Total ram usage:       36 bytes
  2724 ;; Hardware stack levels used:    1
  2725 ;; Hardware stack levels required when called:   14
  2726 ;; This function calls:
  2727 ;;		___aodiv
  2728 ;;		___aomod
  2729 ;;		_abs
  2730 ;;		_pad
  2731 ;; This function is called by:
  2732 ;;		_vfpfcnvrt
  2733 ;; This function uses a non-reentrant model
  2734 ;;
  2735                           
  2736                           	psect	text8
  2737  000B52                     __ptext8:
  2738                           	opt callstack 0
  2739  000B52                     _dtoa:
  2740                           	opt callstack 0
  2741  000B52  FFFF               	dw	65535	; assembler added errata NOP
  2742                           
  2743                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 274: static int dtoa(FILE *fp
      +                          , long long d);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 275: {;/opt/mic
      +                          rochip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 276:     int i, p, s, w;;/opt/microchi
      +                          p/xc8/v2.05/pic/sources/c99/common/doprnt.c: 277:     long long n;;/opt/microchip/xc8/v2
      +                          .05/pic/sources/c99/common/doprnt.c: 280:     n = d;
  2744                           
  2745                           ;incstack = 0
  2746  000B54  C09D  F0B5         	movff	dtoa@d,dtoa@n
  2747  000B58  C09E  F0B6         	movff	dtoa@d+1,dtoa@n+1
  2748  000B5C  C09F  F0B7         	movff	dtoa@d+2,dtoa@n+2
  2749  000B60  C0A0  F0B8         	movff	dtoa@d+3,dtoa@n+3
  2750  000B64  C0A1  F0B9         	movff	dtoa@d+4,dtoa@n+4
  2751  000B68  C0A2  F0BA         	movff	dtoa@d+5,dtoa@n+5
  2752  000B6C  C0A3  F0BB         	movff	dtoa@d+6,dtoa@n+6
  2753  000B70  C0A4  F0BC         	movff	dtoa@d+7,dtoa@n+7
  2754                           
  2755                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 281:     s = n < 0 ? 1 : 0;
  2756  000B74  0100               	movlb	0	; () banked
  2757  000B76  AFBC               	btfss	(dtoa@n+7)& (0+255),7,b
  2758  000B78  D002               	goto	u2460
  2759  000B7A  0E01               	movlw	1
  2760  000B7C  D002               	goto	u2470
  2761  000B7E                     u2460:
  2762  000B7E  FFFF               	dw	65535	; assembler added errata NOP
  2763  000B80  0E00               	movlw	0
  2764  000B82                     u2470:
  2765  000B82  FFFF               	dw	65535	; assembler added errata NOP
  2766  000B84  6FB3               	movwf	dtoa@s& (0+255),b
  2767  000B86  6BB4               	clrf	(dtoa@s+1)& (0+255),b
  2768                           
  2769                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 282:     if (s) {
  2770  000B88  51B3               	movf	dtoa@s& (0+255),w,b
  2771  000B8A  11B4               	iorwf	(dtoa@s+1)& (0+255),w,b
  2772  000B8C  B4D8               	btfsc	status,2,c
  2773  000B8E  D010               	goto	l3142
  2774                           
  2775                           ; BSR set to: 0
  2776                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 283:         n = -n;
  2777  000B90  1FBC               	comf	(dtoa@n+7)& (0+255),f,b
  2778  000B92  1FBB               	comf	(dtoa@n+6)& (0+255),f,b
  2779  000B94  1FBA               	comf	(dtoa@n+5)& (0+255),f,b
  2780  000B96  1FB9               	comf	(dtoa@n+4)& (0+255),f,b
  2781  000B98  1FB8               	comf	(dtoa@n+3)& (0+255),f,b
  2782  000B9A  1FB7               	comf	(dtoa@n+2)& (0+255),f,b
  2783  000B9C  1FB6               	comf	(dtoa@n+1)& (0+255),f,b
  2784  000B9E  6DB5               	negf	dtoa@n& (0+255),b
  2785  000BA0  0E00               	movlw	0
  2786  000BA2  23B6               	addwfc	(dtoa@n+1)& (0+255),f,b
  2787  000BA4  23B7               	addwfc	(dtoa@n+2)& (0+255),f,b
  2788  000BA6  23B8               	addwfc	(dtoa@n+3)& (0+255),f,b
  2789  000BA8  23B9               	addwfc	(dtoa@n+4)& (0+255),f,b
  2790  000BAA  23BA               	addwfc	(dtoa@n+5)& (0+255),f,b
  2791  000BAC  23BB               	addwfc	(dtoa@n+6)& (0+255),f,b
  2792  000BAE  23BC               	addwfc	(dtoa@n+7)& (0+255),f,b
  2793  000BB0                     l3142:
  2794  000BB0  FFFF               	dw	65535	; assembler added errata NOP
  2795                           
  2796                           ; BSR set to: 0
  2797                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 287:     if (!(prec < 0)) {
  2798  000BB2  AFF1               	btfss	(_prec+1)& (0+255),7,b
  2799                           
  2800                           ; BSR set to: 0
  2801                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 288:         flags &= ~(1 << 
      +                          1);
  2802  000BB4  93F2               	bcf	_flags& (0+255),1,b
  2803                           
  2804                           ; BSR set to: 0
  2805                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 290:     p = (0 < prec) ? pre
      +                          c : 1;
  2806  000BB6  BFF1               	btfsc	(_prec+1)& (0+255),7,b
  2807  000BB8  D005               	goto	u2500
  2808  000BBA  51F1               	movf	(_prec+1)& (0+255),w,b
  2809  000BBC  E109               	bnz	l578
  2810  000BBE  05F0               	decf	_prec& (0+255),w,b
  2811  000BC0  B0D8               	btfsc	status,0,c
  2812  000BC2  D006               	goto	l578
  2813  000BC4                     u2500:
  2814  000BC4  FFFF               	dw	65535	; assembler added errata NOP
  2815                           
  2816                           ; BSR set to: 0
  2817  000BC6  0E00               	movlw	0
  2818  000BC8  6FB0               	movwf	(dtoa@p+1)& (0+255),b
  2819  000BCA  0E01               	movlw	1
  2820  000BCC  6FAF               	movwf	dtoa@p& (0+255),b
  2821  000BCE  D005               	goto	l580
  2822  000BD0                     l578:
  2823  000BD0  FFFF               	dw	65535	; assembler added errata NOP
  2824                           
  2825                           ; BSR set to: 0
  2826  000BD2  C0F0  F0AF         	movff	_prec,dtoa@p
  2827  000BD6  C0F1  F0B0         	movff	_prec+1,dtoa@p+1
  2828  000BDA                     l580:
  2829  000BDA  FFFF               	dw	65535	; assembler added errata NOP
  2830                           
  2831                           ; BSR set to: 0
  2832                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 291:     w = width;
  2833  000BDC  C0EE  F0B1         	movff	_width,dtoa@w
  2834  000BE0  C0EF  F0B2         	movff	_width+1,dtoa@w+1
  2835                           
  2836                           ; BSR set to: 0
  2837                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 292:     if (s || (flags & (1
      +                           << 2))) {
  2838  000BE4  51B3               	movf	dtoa@s& (0+255),w,b
  2839  000BE6  11B4               	iorwf	(dtoa@s+1)& (0+255),w,b
  2840  000BE8  A4D8               	btfss	status,2,c
  2841  000BEA  D002               	goto	u2520
  2842                           
  2843                           ; BSR set to: 0
  2844  000BEC  A5F2               	btfss	_flags& (0+255),2,b
  2845  000BEE  D004               	goto	l3156
  2846  000BF0                     u2520:
  2847  000BF0  FFFF               	dw	65535	; assembler added errata NOP
  2848                           
  2849                           ; BSR set to: 0
  2850                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 293:         --w;
  2851  000BF2  07B1               	decf	dtoa@w& (0+255),f,b
  2852  000BF4  A0D8               	btfss	status,0,c
  2853  000BF6  07B2               	decf	(dtoa@w+1)& (0+255),f,b
  2854  000BF8                     l3156:
  2855  000BF8  FFFF               	dw	65535	; assembler added errata NOP
  2856                           
  2857                           ; BSR set to: 0
  2858                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 297:     i = sizeof(dbuf) - 1
      +                          ;
  2859  000BFA  0E00               	movlw	0
  2860  000BFC  6FBE               	movwf	(dtoa@i+1)& (0+255),b
  2861  000BFE  0E1F               	movlw	31
  2862  000C00  6FBD               	movwf	dtoa@i& (0+255),b
  2863                           
  2864                           ; BSR set to: 0
  2865                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 298:     dbuf[i] = '\0';
  2866  000C02  0E00               	movlw	0
  2867  000C04  0101               	movlb	1	; () banked
  2868  000C06  6F21               	movwf	(_dbuf+31)& (0+255),b
  2869                           
  2870                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  2871  000C08  D07E               	goto	l3170
  2872  000C0A                     l3160:
  2873  000C0A  FFFF               	dw	65535	; assembler added errata NOP
  2874                           
  2875                           ; BSR set to: 0
  2876                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 300:         --i;
  2877  000C0C  07BD               	decf	dtoa@i& (0+255),f,b
  2878  000C0E  A0D8               	btfss	status,0,c
  2879  000C10  07BE               	decf	(dtoa@i+1)& (0+255),f,b
  2880                           
  2881                           ; BSR set to: 0
  2882                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 301:         dbuf[i] = '0' + 
      +                          abs(n % 10);
  2883  000C12  0E02               	movlw	low _dbuf
  2884  000C14  25BD               	addwf	dtoa@i& (0+255),w,b
  2885  000C16  6ED9               	movwf	fsr2l,c
  2886  000C18  0E01               	movlw	high _dbuf
  2887  000C1A  21BE               	addwfc	(dtoa@i+1)& (0+255),w,b
  2888  000C1C  6EDA               	movwf	fsr2h,c
  2889  000C1E  C0B5  F080         	movff	dtoa@n,___aomod@dividend
  2890  000C22  C0B6  F081         	movff	dtoa@n+1,___aomod@dividend+1
  2891  000C26  C0B7  F082         	movff	dtoa@n+2,___aomod@dividend+2
  2892  000C2A  C0B8  F083         	movff	dtoa@n+3,___aomod@dividend+3
  2893  000C2E  C0B9  F084         	movff	dtoa@n+4,___aomod@dividend+4
  2894  000C32  C0BA  F085         	movff	dtoa@n+5,___aomod@dividend+5
  2895  000C36  C0BB  F086         	movff	dtoa@n+6,___aomod@dividend+6
  2896  000C3A  C0BC  F087         	movff	dtoa@n+7,___aomod@dividend+7
  2897  000C3E  0E0A               	movlw	10
  2898  000C40  6F88               	movwf	___aomod@divisor& (0+255),b
  2899  000C42  0E00               	movlw	0
  2900  000C44  6F89               	movwf	(___aomod@divisor+1)& (0+255),b
  2901  000C46  0E00               	movlw	0
  2902  000C48  6F8A               	movwf	(___aomod@divisor+2)& (0+255),b
  2903  000C4A  0E00               	movlw	0
  2904  000C4C  6F8B               	movwf	(___aomod@divisor+3)& (0+255),b
  2905  000C4E  0E00               	movlw	0
  2906  000C50  6F8C               	movwf	(___aomod@divisor+4)& (0+255),b
  2907  000C52  0E00               	movlw	0
  2908  000C54  6F8D               	movwf	(___aomod@divisor+5)& (0+255),b
  2909  000C56  0E00               	movlw	0
  2910  000C58  6F8E               	movwf	(___aomod@divisor+6)& (0+255),b
  2911  000C5A  0E00               	movlw	0
  2912  000C5C  6F8F               	movwf	(___aomod@divisor+7)& (0+255),b
  2913  000C5E  ECB2  F00B         	call	___aomod	;wreg free
  2914  000C62  C080  F0A5         	movff	?___aomod,??_dtoa
  2915  000C66  C081  F0A6         	movff	?___aomod+1,??_dtoa+1
  2916  000C6A  C082  F0A7         	movff	?___aomod+2,??_dtoa+2
  2917  000C6E  C083  F0A8         	movff	?___aomod+3,??_dtoa+3
  2918  000C72  C084  F0A9         	movff	?___aomod+4,??_dtoa+4
  2919  000C76  C085  F0AA         	movff	?___aomod+5,??_dtoa+5
  2920  000C7A  C086  F0AB         	movff	?___aomod+6,??_dtoa+6
  2921  000C7E  C087  F0AC         	movff	?___aomod+7,??_dtoa+7
  2922  000C82  C0A5  F092         	movff	??_dtoa,abs@a
  2923  000C86  C0A7  F093         	movff	??_dtoa+2,abs@a+1
  2924  000C8A  ECA3  F013         	call	_abs	;wreg free
  2925  000C8E  0100               	movlb	0	; () banked
  2926  000C90  5192               	movf	?_abs& (0+255),w,b
  2927  000C92  0F30               	addlw	48
  2928  000C94  6EDF               	movwf	indf2,c
  2929                           
  2930                           ; BSR set to: 0
  2931                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 302:         --p;
  2932  000C96  07AF               	decf	dtoa@p& (0+255),f,b
  2933  000C98  A0D8               	btfss	status,0,c
  2934  000C9A  07B0               	decf	(dtoa@p+1)& (0+255),f,b
  2935                           
  2936                           ; BSR set to: 0
  2937                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 303:         --w;
  2938  000C9C  07B1               	decf	dtoa@w& (0+255),f,b
  2939  000C9E  A0D8               	btfss	status,0,c
  2940  000CA0  07B2               	decf	(dtoa@w+1)& (0+255),f,b
  2941                           
  2942                           ; BSR set to: 0
  2943                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 304:         n = n / 10;
  2944  000CA2  C0B5  F080         	movff	dtoa@n,___aodiv@dividend
  2945  000CA6  C0B6  F081         	movff	dtoa@n+1,___aodiv@dividend+1
  2946  000CAA  C0B7  F082         	movff	dtoa@n+2,___aodiv@dividend+2
  2947  000CAE  C0B8  F083         	movff	dtoa@n+3,___aodiv@dividend+3
  2948  000CB2  C0B9  F084         	movff	dtoa@n+4,___aodiv@dividend+4
  2949  000CB6  C0BA  F085         	movff	dtoa@n+5,___aodiv@dividend+5
  2950  000CBA  C0BB  F086         	movff	dtoa@n+6,___aodiv@dividend+6
  2951  000CBE  C0BC  F087         	movff	dtoa@n+7,___aodiv@dividend+7
  2952  000CC2  0E0A               	movlw	10
  2953  000CC4  6F88               	movwf	___aodiv@divisor& (0+255),b
  2954  000CC6  0E00               	movlw	0
  2955  000CC8  6F89               	movwf	(___aodiv@divisor+1)& (0+255),b
  2956  000CCA  0E00               	movlw	0
  2957  000CCC  6F8A               	movwf	(___aodiv@divisor+2)& (0+255),b
  2958  000CCE  0E00               	movlw	0
  2959  000CD0  6F8B               	movwf	(___aodiv@divisor+3)& (0+255),b
  2960  000CD2  0E00               	movlw	0
  2961  000CD4  6F8C               	movwf	(___aodiv@divisor+4)& (0+255),b
  2962  000CD6  0E00               	movlw	0
  2963  000CD8  6F8D               	movwf	(___aodiv@divisor+5)& (0+255),b
  2964  000CDA  0E00               	movlw	0
  2965  000CDC  6F8E               	movwf	(___aodiv@divisor+6)& (0+255),b
  2966  000CDE  0E00               	movlw	0
  2967  000CE0  6F8F               	movwf	(___aodiv@divisor+7)& (0+255),b
  2968  000CE2  EC55  F00A         	call	___aodiv	;wreg free
  2969  000CE6  C080  F0B5         	movff	?___aodiv,dtoa@n
  2970  000CEA  C081  F0B6         	movff	?___aodiv+1,dtoa@n+1
  2971  000CEE  C082  F0B7         	movff	?___aodiv+2,dtoa@n+2
  2972  000CF2  C083  F0B8         	movff	?___aodiv+3,dtoa@n+3
  2973  000CF6  C084  F0B9         	movff	?___aodiv+4,dtoa@n+4
  2974  000CFA  C085  F0BA         	movff	?___aodiv+5,dtoa@n+5
  2975  000CFE  C086  F0BB         	movff	?___aodiv+6,dtoa@n+6
  2976  000D02  C087  F0BC         	movff	?___aodiv+7,dtoa@n+7
  2977  000D06                     l3170:
  2978  000D06  FFFF               	dw	65535	; assembler added errata NOP
  2979                           
  2980                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  2981  000D08  0100               	movlb	0	; () banked
  2982  000D0A  BFBE               	btfsc	(dtoa@i+1)& (0+255),7,b
  2983  000D0C  D020               	goto	u2570
  2984  000D0E  51BE               	movf	(dtoa@i+1)& (0+255),w,b
  2985  000D10  E103               	bnz	u2530
  2986  000D12  05BD               	decf	dtoa@i& (0+255),w,b
  2987  000D14  A0D8               	btfss	status,0,c
  2988  000D16  D01B               	goto	u2570
  2989  000D18                     u2530:
  2990                           
  2991                           ; BSR set to: 0
  2992  000D18  51B5               	movf	dtoa@n& (0+255),w,b
  2993  000D1A  11B6               	iorwf	(dtoa@n+1)& (0+255),w,b
  2994  000D1C  11B7               	iorwf	(dtoa@n+2)& (0+255),w,b
  2995  000D1E  11B8               	iorwf	(dtoa@n+3)& (0+255),w,b
  2996  000D20  11B9               	iorwf	(dtoa@n+4)& (0+255),w,b
  2997  000D22  11BA               	iorwf	(dtoa@n+5)& (0+255),w,b
  2998  000D24  11BB               	iorwf	(dtoa@n+6)& (0+255),w,b
  2999  000D26  11BC               	iorwf	(dtoa@n+7)& (0+255),w,b
  3000  000D28  A4D8               	btfss	status,2,c
  3001  000D2A  D76F               	goto	l3160
  3002                           
  3003                           ; BSR set to: 0
  3004  000D2C  BFB0               	btfsc	(dtoa@p+1)& (0+255),7,b
  3005  000D2E  D005               	goto	u2550
  3006  000D30  51B0               	movf	(dtoa@p+1)& (0+255),w,b
  3007  000D32  E102               	bnz	u2551
  3008  000D34  05AF               	decf	dtoa@p& (0+255),w,b
  3009  000D36  B0D8               	btfsc	status,0,c
  3010  000D38                     u2551:
  3011  000D38  D768               	goto	l3160
  3012  000D3A                     u2550:
  3013  000D3A  FFFF               	dw	65535	; assembler added errata NOP
  3014                           
  3015                           ; BSR set to: 0
  3016  000D3C  BFB2               	btfsc	(dtoa@w+1)& (0+255),7,b
  3017  000D3E  D007               	goto	u2570
  3018  000D40  51B2               	movf	(dtoa@w+1)& (0+255),w,b
  3019  000D42  E103               	bnz	u2560
  3020  000D44  05B1               	decf	dtoa@w& (0+255),w,b
  3021  000D46  A0D8               	btfss	status,0,c
  3022  000D48  D002               	goto	u2570
  3023  000D4A                     u2560:
  3024                           
  3025                           ; BSR set to: 0
  3026  000D4A  B3F2               	btfsc	_flags& (0+255),1,b
  3027  000D4C  D75E               	goto	l3160
  3028  000D4E                     u2570:
  3029  000D4E  FFFF               	dw	65535	; assembler added errata NOP
  3030                           
  3031                           ; BSR set to: 0
  3032                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 308:     if (s || (flags & (1
      +                           << 2))) {
  3033  000D50  51B3               	movf	dtoa@s& (0+255),w,b
  3034  000D52  11B4               	iorwf	(dtoa@s+1)& (0+255),w,b
  3035  000D54  A4D8               	btfss	status,2,c
  3036  000D56  D002               	goto	u2590
  3037                           
  3038                           ; BSR set to: 0
  3039  000D58  A5F2               	btfss	_flags& (0+255),2,b
  3040  000D5A  D01A               	goto	l3194
  3041  000D5C                     u2590:
  3042  000D5C  FFFF               	dw	65535	; assembler added errata NOP
  3043                           
  3044                           ; BSR set to: 0
  3045                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 309:         --i;
  3046  000D5E  07BD               	decf	dtoa@i& (0+255),f,b
  3047  000D60  A0D8               	btfss	status,0,c
  3048  000D62  07BE               	decf	(dtoa@i+1)& (0+255),f,b
  3049                           
  3050                           ; BSR set to: 0
  3051                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 310:         dbuf[i] = s ? '-
      +                          ' : '+';
  3052  000D64  51B3               	movf	dtoa@s& (0+255),w,b
  3053  000D66  11B4               	iorwf	(dtoa@s+1)& (0+255),w,b
  3054  000D68  A4D8               	btfss	status,2,c
  3055  000D6A  D004               	goto	l3190
  3056                           
  3057                           ; BSR set to: 0
  3058  000D6C  0E00               	movlw	0
  3059  000D6E  6FAE               	movwf	(_dtoa$1031+1)& (0+255),b
  3060  000D70  0E2B               	movlw	43
  3061  000D72  D004               	goto	L9
  3062  000D74                     l3190:
  3063  000D74  FFFF               	dw	65535	; assembler added errata NOP
  3064                           
  3065                           ; BSR set to: 0
  3066  000D76  0E00               	movlw	0
  3067  000D78  6FAE               	movwf	(_dtoa$1031+1)& (0+255),b
  3068  000D7A  0E2D               	movlw	45
  3069  000D7C                     L9:
  3070  000D7C  FFFF               	dw	65535	; assembler added errata NOP
  3071  000D7E  6FAD               	movwf	_dtoa$1031& (0+255),b
  3072                           
  3073                           ; BSR set to: 0
  3074  000D80  0E02               	movlw	low _dbuf
  3075  000D82  25BD               	addwf	dtoa@i& (0+255),w,b
  3076  000D84  6ED9               	movwf	fsr2l,c
  3077  000D86  0E01               	movlw	high _dbuf
  3078  000D88  21BE               	addwfc	(dtoa@i+1)& (0+255),w,b
  3079  000D8A  6EDA               	movwf	fsr2h,c
  3080  000D8C  C0AD  FFDF         	movff	_dtoa$1031,indf2
  3081  000D90                     l3194:
  3082  000D90  FFFF               	dw	65535	; assembler added errata NOP
  3083                           
  3084                           ; BSR set to: 0
  3085                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 314:     return pad(fp, &dbuf
      +                          [i], w);
  3086  000D92  C09B  F090         	movff	dtoa@fp,pad@fp
  3087  000D96  C09C  F091         	movff	dtoa@fp+1,pad@fp+1
  3088  000D9A  0E02               	movlw	low _dbuf
  3089  000D9C  25BD               	addwf	dtoa@i& (0+255),w,b
  3090  000D9E  6F92               	movwf	pad@buf& (0+255),b
  3091  000DA0  0E01               	movlw	high _dbuf
  3092  000DA2  21BE               	addwfc	(dtoa@i+1)& (0+255),w,b
  3093  000DA4  6F93               	movwf	(pad@buf+1)& (0+255),b
  3094  000DA6  C0B1  F094         	movff	dtoa@w,pad@p
  3095  000DAA  C0B2  F095         	movff	dtoa@w+1,pad@p+1
  3096  000DAE  EC3A  F00E         	call	_pad	;wreg free
  3097  000DB2  C090  F09B         	movff	?_pad,?_dtoa
  3098  000DB6  C091  F09C         	movff	?_pad+1,?_dtoa+1
  3099  000DBA  0012               	return		;funcret
  3100  000DBC  FFFF               	dw	65535	; errata NOP
  3101  000DBE                     __end_of_dtoa:
  3102                           	opt callstack 0
  3103                           
  3104 ;; *************** function _pad *****************
  3105 ;; Defined at:
  3106 ;;		line 72 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  3107 ;; Parameters:    Size  Location     Type
  3108 ;;  fp              2   16[BANK0 ] PTR struct _IO_FILE
  3109 ;;		 -> sprintf@f(6), 
  3110 ;;  buf             2   18[BANK0 ] PTR unsigned char 
  3111 ;;		 -> dbuf(32), 
  3112 ;;  p               2   20[BANK0 ] int 
  3113 ;; Auto vars:     Size  Location     Type
  3114 ;;  w               2   25[BANK0 ] int 
  3115 ;;  i               2   23[BANK0 ] int 
  3116 ;; Return value:  Size  Location     Type
  3117 ;;                  2   16[BANK0 ] int 
  3118 ;; Registers used:
  3119 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3120 ;; Tracked objects:
  3121 ;;		On entry : 0/0
  3122 ;;		On exit  : 0/0
  3123 ;;		Unchanged: 0/0
  3124 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3125 ;;      Params:         0       6       0       0       0       0       0
  3126 ;;      Locals:         0       4       0       0       0       0       0
  3127 ;;      Temps:          0       1       0       0       0       0       0
  3128 ;;      Totals:         0      11       0       0       0       0       0
  3129 ;;Total ram usage:       11 bytes
  3130 ;; Hardware stack levels used:    1
  3131 ;; Hardware stack levels required when called:   13
  3132 ;; This function calls:
  3133 ;;		_fputc
  3134 ;;		_fputs
  3135 ;;		_strlen
  3136 ;; This function is called by:
  3137 ;;		_dtoa
  3138 ;; This function uses a non-reentrant model
  3139 ;;
  3140                           
  3141                           	psect	text9
  3142  001C74                     __ptext9:
  3143                           	opt callstack 0
  3144  001C74                     _pad:
  3145                           	opt callstack 0
  3146  001C74  FFFF               	dw	65535	; assembler added errata NOP
  3147                           
  3148                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 72: static int pad(FILE *fp, 
      +                          char *buf, int p);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 73: {;/opt/m
      +                          icrochip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 74:     int i, w;;/opt/microchip/xc8
      +                          /v2.05/pic/sources/c99/common/doprnt.c: 77:     if (flags & (1 << 0)) {
  3149                           
  3150                           ;incstack = 0
  3151  001C76  0100               	movlb	0	; () banked
  3152  001C78  A1F2               	btfss	_flags& (0+255),0,b
  3153  001C7A  D00A               	goto	l2882
  3154                           
  3155                           ; BSR set to: 0
  3156                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 78:         fputs((const char
      +                           *)buf, fp);
  3157  001C7C  C092  F089         	movff	pad@buf,fputs@s
  3158  001C80  C093  F08A         	movff	pad@buf+1,fputs@s+1
  3159  001C84  C090  F08B         	movff	pad@fp,fputs@fp
  3160  001C88  C091  F08C         	movff	pad@fp+1,fputs@fp+1
  3161  001C8C  ECD7  F012         	call	_fputs	;wreg free
  3162  001C90                     l2882:
  3163  001C90  FFFF               	dw	65535	; assembler added errata NOP
  3164                           
  3165                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 82:     w = (p < 0) ? 0 : p;
  3166  001C92  0100               	movlb	0	; () banked
  3167  001C94  BF95               	btfsc	(pad@p+1)& (0+255),7,b
  3168  001C96  D005               	goto	l2886
  3169                           
  3170                           ; BSR set to: 0
  3171  001C98  C094  F099         	movff	pad@p,pad@w
  3172  001C9C  C095  F09A         	movff	pad@p+1,pad@w+1
  3173  001CA0  D005               	goto	l567
  3174  001CA2                     l2886:
  3175  001CA2  FFFF               	dw	65535	; assembler added errata NOP
  3176                           
  3177                           ; BSR set to: 0
  3178  001CA4  0E00               	movlw	0
  3179  001CA6  6F9A               	movwf	(pad@w+1)& (0+255),b
  3180  001CA8  0E00               	movlw	0
  3181  001CAA  6F99               	movwf	pad@w& (0+255),b
  3182  001CAC                     l567:
  3183  001CAC  FFFF               	dw	65535	; assembler added errata NOP
  3184                           
  3185                           ; BSR set to: 0
  3186                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 83:     i = 0;
  3187  001CAE  0E00               	movlw	0
  3188  001CB0  6F98               	movwf	(pad@i+1)& (0+255),b
  3189  001CB2  0E00               	movlw	0
  3190  001CB4  6F97               	movwf	pad@i& (0+255),b
  3191                           
  3192                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
  3193  001CB6  D00E               	goto	l2892
  3194  001CB8                     l2888:
  3195  001CB8  FFFF               	dw	65535	; assembler added errata NOP
  3196                           
  3197                           ; BSR set to: 0
  3198                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 85:         fputc(' ', fp);
  3199  001CBA  0E00               	movlw	0
  3200  001CBC  6F81               	movwf	(fputc@c+1)& (0+255),b
  3201  001CBE  0E20               	movlw	32
  3202  001CC0  6F80               	movwf	fputc@c& (0+255),b
  3203  001CC2  C090  F082         	movff	pad@fp,fputc@fp
  3204  001CC6  C091  F083         	movff	pad@fp+1,fputc@fp+1
  3205  001CCA  EC91  F00E         	call	_fputc	;wreg free
  3206                           
  3207                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 86:         ++i;
  3208  001CCE  0100               	movlb	0	; () banked
  3209  001CD0  4B97               	infsnz	pad@i& (0+255),f,b
  3210  001CD2  2B98               	incf	(pad@i+1)& (0+255),f,b
  3211  001CD4                     l2892:
  3212  001CD4  FFFF               	dw	65535	; assembler added errata NOP
  3213                           
  3214                           ; BSR set to: 0
  3215                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
  3216  001CD6  5199               	movf	pad@w& (0+255),w,b
  3217  001CD8  5D97               	subwf	pad@i& (0+255),w,b
  3218  001CDA  5198               	movf	(pad@i+1)& (0+255),w,b
  3219  001CDC  0A80               	xorlw	128
  3220  001CDE  6F96               	movwf	??_pad& (0+255),b
  3221  001CE0  519A               	movf	(pad@w+1)& (0+255),w,b
  3222  001CE2  0A80               	xorlw	128
  3223  001CE4  5996               	subwfb	??_pad& (0+255),w,b
  3224  001CE6  A0D8               	btfss	status,0,c
  3225  001CE8  D7E7               	goto	l2888
  3226                           
  3227                           ; BSR set to: 0
  3228                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 90:     if (!(flags & (1 << 0
      +                          ))) {
  3229  001CEA  B1F2               	btfsc	_flags& (0+255),0,b
  3230  001CEC  D00A               	goto	l2896
  3231                           
  3232                           ; BSR set to: 0
  3233                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 91:         fputs((const char
      +                           *)buf, fp);
  3234  001CEE  C092  F089         	movff	pad@buf,fputs@s
  3235  001CF2  C093  F08A         	movff	pad@buf+1,fputs@s+1
  3236  001CF6  C090  F08B         	movff	pad@fp,fputs@fp
  3237  001CFA  C091  F08C         	movff	pad@fp+1,fputs@fp+1
  3238  001CFE  ECD7  F012         	call	_fputs	;wreg free
  3239  001D02                     l2896:
  3240  001D02  FFFF               	dw	65535	; assembler added errata NOP
  3241                           
  3242                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 94:     return strlen(buf) + 
      +                          w;
  3243  001D04  C092  F080         	movff	pad@buf,strlen@s
  3244  001D08  C093  F081         	movff	pad@buf+1,strlen@s+1
  3245  001D0C  EC54  F014         	call	_strlen	;wreg free
  3246  001D10  0100               	movlb	0	; () banked
  3247  001D12  5199               	movf	pad@w& (0+255),w,b
  3248  001D14  2580               	addwf	?_strlen& (0+255),w,b
  3249  001D16  6F90               	movwf	?_pad& (0+255),b
  3250  001D18  519A               	movf	(pad@w+1)& (0+255),w,b
  3251  001D1A  2181               	addwfc	(?_strlen+1)& (0+255),w,b
  3252  001D1C  6F91               	movwf	(?_pad+1)& (0+255),b
  3253                           
  3254                           ; BSR set to: 0
  3255  001D1E  0012               	return		;funcret
  3256  001D20  FFFF               	dw	65535	; errata NOP
  3257  001D22                     __end_of_pad:
  3258                           	opt callstack 0
  3259                           
  3260 ;; *************** function _strlen *****************
  3261 ;; Defined at:
  3262 ;;		line 12 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/strlen.c"
  3263 ;; Parameters:    Size  Location     Type
  3264 ;;  s               2    0[BANK0 ] PTR const unsigned char 
  3265 ;;		 -> dbuf(32), 
  3266 ;; Auto vars:     Size  Location     Type
  3267 ;;  a               2    2[BANK0 ] PTR const unsigned char 
  3268 ;;		 -> dbuf(32), 
  3269 ;; Return value:  Size  Location     Type
  3270 ;;                  2    0[BANK0 ] unsigned int 
  3271 ;; Registers used:
  3272 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3273 ;; Tracked objects:
  3274 ;;		On entry : 0/0
  3275 ;;		On exit  : 0/0
  3276 ;;		Unchanged: 0/0
  3277 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3278 ;;      Params:         0       2       0       0       0       0       0
  3279 ;;      Locals:         0       2       0       0       0       0       0
  3280 ;;      Temps:          0       0       0       0       0       0       0
  3281 ;;      Totals:         0       4       0       0       0       0       0
  3282 ;;Total ram usage:        4 bytes
  3283 ;; Hardware stack levels used:    1
  3284 ;; Hardware stack levels required when called:   10
  3285 ;; This function calls:
  3286 ;;		Nothing
  3287 ;; This function is called by:
  3288 ;;		_pad
  3289 ;; This function uses a non-reentrant model
  3290 ;;
  3291                           
  3292                           	psect	text10
  3293  0028A8                     __ptext10:
  3294                           	opt callstack 0
  3295  0028A8                     _strlen:
  3296                           	opt callstack 0
  3297  0028A8  FFFF               	dw	65535	; assembler added errata NOP
  3298                           
  3299                           ; BSR set to: 0
  3300                           ;incstack = 0
  3301  0028AA  C080  F082         	movff	strlen@s,strlen@a
  3302  0028AE  C081  F083         	movff	strlen@s+1,strlen@a+1
  3303  0028B2  D004               	goto	l2854
  3304  0028B4                     l2852:
  3305  0028B4  FFFF               	dw	65535	; assembler added errata NOP
  3306  0028B6  0100               	movlb	0	; () banked
  3307  0028B8  4B80               	infsnz	strlen@s& (0+255),f,b
  3308  0028BA  2B81               	incf	(strlen@s+1)& (0+255),f,b
  3309  0028BC                     l2854:
  3310  0028BC  FFFF               	dw	65535	; assembler added errata NOP
  3311  0028BE  C080  FFD9         	movff	strlen@s,fsr2l
  3312  0028C2  C081  FFDA         	movff	strlen@s+1,fsr2h
  3313  0028C6  50DF               	movf	indf2,w,c
  3314  0028C8  A4D8               	btfss	status,2,c
  3315  0028CA  D7F4               	goto	l2852
  3316  0028CC  0100               	movlb	0	; () banked
  3317  0028CE  5182               	movf	strlen@a& (0+255),w,b
  3318  0028D0  5D80               	subwf	strlen@s& (0+255),w,b
  3319  0028D2  6F80               	movwf	?_strlen& (0+255),b
  3320  0028D4  5183               	movf	(strlen@a+1)& (0+255),w,b
  3321  0028D6  5981               	subwfb	(strlen@s+1)& (0+255),w,b
  3322  0028D8  6F81               	movwf	(?_strlen+1)& (0+255),b
  3323                           
  3324                           ; BSR set to: 0
  3325  0028DA  0012               	return		;funcret
  3326  0028DC  FFFF               	dw	65535	; errata NOP
  3327  0028DE                     __end_of_strlen:
  3328                           	opt callstack 0
  3329                           
  3330 ;; *************** function _fputs *****************
  3331 ;; Defined at:
  3332 ;;		line 8 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/nf_fputs.c"
  3333 ;; Parameters:    Size  Location     Type
  3334 ;;  s               2    9[BANK0 ] PTR const unsigned char 
  3335 ;;		 -> dbuf(32), 
  3336 ;;  fp              2   11[BANK0 ] PTR struct _IO_FILE
  3337 ;;		 -> sprintf@f(6), 
  3338 ;; Auto vars:     Size  Location     Type
  3339 ;;  i               2   14[BANK0 ] int 
  3340 ;;  c               1   13[BANK0 ] unsigned char 
  3341 ;; Return value:  Size  Location     Type
  3342 ;;                  2    9[BANK0 ] int 
  3343 ;; Registers used:
  3344 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3345 ;; Tracked objects:
  3346 ;;		On entry : 0/0
  3347 ;;		On exit  : 0/0
  3348 ;;		Unchanged: 0/0
  3349 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3350 ;;      Params:         0       4       0       0       0       0       0
  3351 ;;      Locals:         0       3       0       0       0       0       0
  3352 ;;      Temps:          0       0       0       0       0       0       0
  3353 ;;      Totals:         0       7       0       0       0       0       0
  3354 ;;Total ram usage:        7 bytes
  3355 ;; Hardware stack levels used:    1
  3356 ;; Hardware stack levels required when called:   12
  3357 ;; This function calls:
  3358 ;;		_fputc
  3359 ;; This function is called by:
  3360 ;;		_pad
  3361 ;; This function uses a non-reentrant model
  3362 ;;
  3363                           
  3364                           	psect	text11
  3365  0025AE                     __ptext11:
  3366                           	opt callstack 0
  3367  0025AE                     _fputs:
  3368                           	opt callstack 0
  3369  0025AE  FFFF               	dw	65535	; assembler added errata NOP
  3370                           
  3371                           ; BSR set to: 0
  3372                           ;incstack = 0
  3373  0025B0  0E00               	movlw	0
  3374  0025B2  0100               	movlb	0	; () banked
  3375  0025B4  6F8F               	movwf	(fputs@i+1)& (0+255),b
  3376  0025B6  0E00               	movlw	0
  3377  0025B8  6F8E               	movwf	fputs@i& (0+255),b
  3378  0025BA  D00D               	goto	l2848
  3379  0025BC                     l2844:
  3380  0025BC  FFFF               	dw	65535	; assembler added errata NOP
  3381                           
  3382                           ; BSR set to: 0
  3383  0025BE  C08D  F080         	movff	fputs@c,fputc@c
  3384  0025C2  6B81               	clrf	(fputc@c+1)& (0+255),b
  3385  0025C4  C08B  F082         	movff	fputs@fp,fputc@fp
  3386  0025C8  C08C  F083         	movff	fputs@fp+1,fputc@fp+1
  3387  0025CC  EC91  F00E         	call	_fputc	;wreg free
  3388  0025D0  0100               	movlb	0	; () banked
  3389  0025D2  4B8E               	infsnz	fputs@i& (0+255),f,b
  3390  0025D4  2B8F               	incf	(fputs@i+1)& (0+255),f,b
  3391  0025D6                     l2848:
  3392  0025D6  FFFF               	dw	65535	; assembler added errata NOP
  3393                           
  3394                           ; BSR set to: 0
  3395  0025D8  518E               	movf	fputs@i& (0+255),w,b
  3396  0025DA  2589               	addwf	fputs@s& (0+255),w,b
  3397  0025DC  6ED9               	movwf	fsr2l,c
  3398  0025DE  518F               	movf	(fputs@i+1)& (0+255),w,b
  3399  0025E0  218A               	addwfc	(fputs@s+1)& (0+255),w,b
  3400  0025E2  6EDA               	movwf	fsr2h,c
  3401  0025E4  50DF               	movf	indf2,w,c
  3402  0025E6  6F8D               	movwf	fputs@c& (0+255),b
  3403  0025E8  518D               	movf	fputs@c& (0+255),w,b
  3404  0025EA  B4D8               	btfsc	status,2,c
  3405                           
  3406                           ; BSR set to: 0
  3407  0025EC  0012               	return		;funcret
  3408  0025EE  FFFF               	dw	65535	; assembler added errata NOP
  3409  0025F0  D7E5               	goto	l2844
  3410  0025F2  FFFF               	dw	65535	; errata NOP
  3411  0025F4                     __end_of_fputs:
  3412                           	opt callstack 0
  3413                           
  3414 ;; *************** function _fputc *****************
  3415 ;; Defined at:
  3416 ;;		line 8 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/nf_fputc.c"
  3417 ;; Parameters:    Size  Location     Type
  3418 ;;  c               2    0[BANK0 ] int 
  3419 ;;  fp              2    2[BANK0 ] PTR struct _IO_FILE
  3420 ;;		 -> sprintf@f(6), 
  3421 ;; Auto vars:     Size  Location     Type
  3422 ;;		None
  3423 ;; Return value:  Size  Location     Type
  3424 ;;                  2    0[BANK0 ] int 
  3425 ;; Registers used:
  3426 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3427 ;; Tracked objects:
  3428 ;;		On entry : 0/0
  3429 ;;		On exit  : 0/0
  3430 ;;		Unchanged: 0/0
  3431 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3432 ;;      Params:         0       4       0       0       0       0       0
  3433 ;;      Locals:         0       0       0       0       0       0       0
  3434 ;;      Temps:          0       5       0       0       0       0       0
  3435 ;;      Totals:         0       9       0       0       0       0       0
  3436 ;;Total ram usage:        9 bytes
  3437 ;; Hardware stack levels used:    1
  3438 ;; Hardware stack levels required when called:   11
  3439 ;; This function calls:
  3440 ;;		_putch
  3441 ;; This function is called by:
  3442 ;;		_pad
  3443 ;;		_vfpfcnvrt
  3444 ;;		_fputs
  3445 ;; This function uses a non-reentrant model
  3446 ;;
  3447                           
  3448                           	psect	text12
  3449  001D22                     __ptext12:
  3450                           	opt callstack 0
  3451  001D22                     _fputc:
  3452                           	opt callstack 0
  3453  001D22  FFFF               	dw	65535	; assembler added errata NOP
  3454                           
  3455                           ; BSR set to: 0
  3456                           ;incstack = 0
  3457  001D24  0100               	movlb	0	; () banked
  3458  001D26  5182               	movf	fputc@fp& (0+255),w,b
  3459  001D28  1183               	iorwf	(fputc@fp+1)& (0+255),w,b
  3460  001D2A  B4D8               	btfsc	status,2,c
  3461  001D2C  D004               	goto	u1910
  3462                           
  3463                           ; BSR set to: 0
  3464  001D2E  5182               	movf	fputc@fp& (0+255),w,b
  3465  001D30  1183               	iorwf	(fputc@fp+1)& (0+255),w,b
  3466  001D32  A4D8               	btfss	status,2,c
  3467  001D34  D005               	goto	l2820
  3468  001D36                     u1910:
  3469  001D36  FFFF               	dw	65535	; assembler added errata NOP
  3470                           
  3471                           ; BSR set to: 0
  3472  001D38  5180               	movf	fputc@c& (0+255),w,b
  3473  001D3A  EC41  F015         	call	_putch
  3474  001D3E  D045               	goto	l1360
  3475  001D40                     l2820:
  3476  001D40  FFFF               	dw	65535	; assembler added errata NOP
  3477                           
  3478                           ; BSR set to: 0
  3479  001D42  EE20 F004          	lfsr	2,4
  3480  001D46  5182               	movf	fputc@fp& (0+255),w,b
  3481  001D48  26D9               	addwf	fsr2l,f,c
  3482  001D4A  5183               	movf	(fputc@fp+1)& (0+255),w,b
  3483  001D4C  22DA               	addwfc	fsr2h,f,c
  3484  001D4E  50DE               	movf	postinc2,w,c
  3485  001D50  10DE               	iorwf	postinc2,w,c
  3486  001D52  B4D8               	btfsc	status,2,c
  3487  001D54  D016               	goto	u1930
  3488                           
  3489                           ; BSR set to: 0
  3490  001D56  EE20 F004          	lfsr	2,4
  3491  001D5A  5182               	movf	fputc@fp& (0+255),w,b
  3492  001D5C  26D9               	addwf	fsr2l,f,c
  3493  001D5E  5183               	movf	(fputc@fp+1)& (0+255),w,b
  3494  001D60  22DA               	addwfc	fsr2h,f,c
  3495  001D62  EE10 F002          	lfsr	1,2
  3496  001D66  5182               	movf	fputc@fp& (0+255),w,b
  3497  001D68  26E1               	addwf	fsr1l,f,c
  3498  001D6A  5183               	movf	(fputc@fp+1)& (0+255),w,b
  3499  001D6C  22E2               	addwfc	fsr1h,f,c
  3500  001D6E  50DE               	movf	postinc2,w,c
  3501  001D70  5CE6               	subwf	postinc1,w,c
  3502  001D72  50E6               	movf	postinc1,w,c
  3503  001D74  0A80               	xorlw	128
  3504  001D76  6F88               	movwf	(??_fputc+4)& (0+255),b
  3505  001D78  50DE               	movf	postinc2,w,c
  3506  001D7A  0A80               	xorlw	128
  3507  001D7C  5988               	subwfb	(??_fputc+4)& (0+255),w,b
  3508  001D7E  B0D8               	btfsc	status,0,c
  3509  001D80  D024               	goto	l1360
  3510  001D82                     u1930:
  3511  001D82  FFFF               	dw	65535	; assembler added errata NOP
  3512                           
  3513                           ; BSR set to: 0
  3514  001D84  EE20 F002          	lfsr	2,2
  3515  001D88  5182               	movf	fputc@fp& (0+255),w,b
  3516  001D8A  26D9               	addwf	fsr2l,f,c
  3517  001D8C  5183               	movf	(fputc@fp+1)& (0+255),w,b
  3518  001D8E  22DA               	addwfc	fsr2h,f,c
  3519  001D90  CFDE F084          	movff	postinc2,??_fputc
  3520  001D94  CFDD F085          	movff	postdec2,??_fputc+1
  3521  001D98  C082  FFD9         	movff	fputc@fp,fsr2l
  3522  001D9C  C083  FFDA         	movff	fputc@fp+1,fsr2h
  3523  001DA0  CFDE F086          	movff	postinc2,??_fputc+2
  3524  001DA4  CFDD F087          	movff	postdec2,??_fputc+3
  3525  001DA8  5184               	movf	??_fputc& (0+255),w,b
  3526  001DAA  2586               	addwf	(??_fputc+2)& (0+255),w,b
  3527  001DAC  6ED9               	movwf	fsr2l,c
  3528  001DAE  5185               	movf	(??_fputc+1)& (0+255),w,b
  3529  001DB0  2187               	addwfc	(??_fputc+3)& (0+255),w,b
  3530  001DB2  6EDA               	movwf	fsr2h,c
  3531  001DB4  C080  FFDF         	movff	fputc@c,indf2
  3532  001DB8  EE20 F002          	lfsr	2,2
  3533  001DBC  5182               	movf	fputc@fp& (0+255),w,b
  3534  001DBE  26D9               	addwf	fsr2l,f,c
  3535  001DC0  5183               	movf	(fputc@fp+1)& (0+255),w,b
  3536  001DC2  22DA               	addwfc	fsr2h,f,c
  3537  001DC4  2ADE               	incf	postinc2,f,c
  3538  001DC6  0E00               	movlw	0
  3539  001DC8  22DD               	addwfc	postdec2,f,c
  3540  001DCA                     l1360:
  3541  001DCA  FFFF               	dw	65535	; assembler added errata NOP
  3542  001DCC  0012               	return		;funcret
  3543  001DCE  FFFF               	dw	65535	; errata NOP
  3544  001DD0                     __end_of_fputc:
  3545                           	opt callstack 0
  3546                           
  3547 ;; *************** function _putch *****************
  3548 ;; Defined at:
  3549 ;;		line 7 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/putch.c"
  3550 ;; Parameters:    Size  Location     Type
  3551 ;;  c               1    wreg     unsigned char 
  3552 ;; Auto vars:     Size  Location     Type
  3553 ;;  c               1    0[COMRAM] unsigned char 
  3554 ;; Return value:  Size  Location     Type
  3555 ;;                  1    wreg      void 
  3556 ;; Registers used:
  3557 ;;		wreg
  3558 ;; Tracked objects:
  3559 ;;		On entry : 0/0
  3560 ;;		On exit  : 0/0
  3561 ;;		Unchanged: 0/0
  3562 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3563 ;;      Params:         0       0       0       0       0       0       0
  3564 ;;      Locals:         0       0       0       0       0       0       0
  3565 ;;      Temps:          0       0       0       0       0       0       0
  3566 ;;      Totals:         0       0       0       0       0       0       0
  3567 ;;Total ram usage:        0 bytes
  3568 ;; Hardware stack levels used:    1
  3569 ;; Hardware stack levels required when called:   10
  3570 ;; This function calls:
  3571 ;;		Nothing
  3572 ;; This function is called by:
  3573 ;;		_fputc
  3574 ;; This function uses a non-reentrant model
  3575 ;;
  3576                           
  3577                           	psect	text13
  3578  002A82                     __ptext13:
  3579                           	opt callstack 0
  3580  002A82                     _putch:
  3581                           	opt callstack 0
  3582  002A82  FFFF               	dw	65535	; assembler added errata NOP
  3583                           
  3584                           ;incstack = 0
  3585  002A84  0012               	return		;funcret
  3586  002A86  FFFF               	dw	65535	; errata NOP
  3587  002A88                     __end_of_putch:
  3588                           	opt callstack 0
  3589                           
  3590 ;; *************** function _abs *****************
  3591 ;; Defined at:
  3592 ;;		line 1 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/abs.c"
  3593 ;; Parameters:    Size  Location     Type
  3594 ;;  a               2   18[BANK0 ] int 
  3595 ;; Auto vars:     Size  Location     Type
  3596 ;;		None
  3597 ;; Return value:  Size  Location     Type
  3598 ;;                  2   18[BANK0 ] int 
  3599 ;; Registers used:
  3600 ;;		wreg, status,2, status,0
  3601 ;; Tracked objects:
  3602 ;;		On entry : 0/0
  3603 ;;		On exit  : 0/0
  3604 ;;		Unchanged: 0/0
  3605 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3606 ;;      Params:         0       2       0       0       0       0       0
  3607 ;;      Locals:         0       0       0       0       0       0       0
  3608 ;;      Temps:          0       2       0       0       0       0       0
  3609 ;;      Totals:         0       4       0       0       0       0       0
  3610 ;;Total ram usage:        4 bytes
  3611 ;; Hardware stack levels used:    1
  3612 ;; Hardware stack levels required when called:   10
  3613 ;; This function calls:
  3614 ;;		Nothing
  3615 ;; This function is called by:
  3616 ;;		_dtoa
  3617 ;; This function uses a non-reentrant model
  3618 ;;
  3619                           
  3620                           	psect	text14
  3621  002746                     __ptext14:
  3622                           	opt callstack 0
  3623  002746                     _abs:
  3624                           	opt callstack 0
  3625  002746  FFFF               	dw	65535	; assembler added errata NOP
  3626                           
  3627                           ;incstack = 0
  3628  002748  0100               	movlb	0	; () banked
  3629  00274A  BF93               	btfsc	(abs@a+1)& (0+255),7,b
  3630  00274C  D005               	goto	u2060
  3631  00274E  5193               	movf	(abs@a+1)& (0+255),w,b
  3632  002750  E111               	bnz	l1300
  3633  002752  0592               	decf	abs@a& (0+255),w,b
  3634  002754  B0D8               	btfsc	status,0,c
  3635  002756  D00E               	goto	l1300
  3636  002758                     u2060:
  3637  002758  FFFF               	dw	65535	; assembler added errata NOP
  3638                           
  3639                           ; BSR set to: 0
  3640  00275A  C092  F094         	movff	abs@a,??_abs
  3641  00275E  C093  F095         	movff	abs@a+1,??_abs+1
  3642  002762  1F94               	comf	??_abs& (0+255),f,b
  3643  002764  1F95               	comf	(??_abs+1)& (0+255),f,b
  3644  002766  4B94               	infsnz	??_abs& (0+255),f,b
  3645  002768  2B95               	incf	(??_abs+1)& (0+255),f,b
  3646  00276A  C094  F092         	movff	??_abs,?_abs
  3647  00276E  C095  F093         	movff	??_abs+1,?_abs+1
  3648  002772  D005               	goto	l1303
  3649  002774                     l1300:
  3650  002774  FFFF               	dw	65535	; assembler added errata NOP
  3651                           
  3652                           ; BSR set to: 0
  3653  002776  C092  F092         	movff	abs@a,?_abs
  3654  00277A  C093  F093         	movff	abs@a+1,?_abs+1
  3655  00277E                     l1303:
  3656  00277E  FFFF               	dw	65535	; assembler added errata NOP
  3657                           
  3658                           ; BSR set to: 0
  3659  002780  0012               	return		;funcret
  3660  002782  FFFF               	dw	65535	; errata NOP
  3661  002784                     __end_of_abs:
  3662                           	opt callstack 0
  3663                           
  3664 ;; *************** function ___aomod *****************
  3665 ;; Defined at:
  3666 ;;		line 9 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/aomod.c"
  3667 ;; Parameters:    Size  Location     Type
  3668 ;;  dividend        8    0[BANK0 ] long long 
  3669 ;;  divisor         8    8[BANK0 ] long long 
  3670 ;; Auto vars:     Size  Location     Type
  3671 ;;  sign            1   17[BANK0 ] unsigned char 
  3672 ;;  counter         1   16[BANK0 ] unsigned char 
  3673 ;; Return value:  Size  Location     Type
  3674 ;;                  8    0[BANK0 ] long long 
  3675 ;; Registers used:
  3676 ;;		wreg, status,2, status,0
  3677 ;; Tracked objects:
  3678 ;;		On entry : 0/0
  3679 ;;		On exit  : 0/0
  3680 ;;		Unchanged: 0/0
  3681 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3682 ;;      Params:         0      16       0       0       0       0       0
  3683 ;;      Locals:         0       2       0       0       0       0       0
  3684 ;;      Temps:          0       0       0       0       0       0       0
  3685 ;;      Totals:         0      18       0       0       0       0       0
  3686 ;;Total ram usage:       18 bytes
  3687 ;; Hardware stack levels used:    1
  3688 ;; Hardware stack levels required when called:   10
  3689 ;; This function calls:
  3690 ;;		Nothing
  3691 ;; This function is called by:
  3692 ;;		_dtoa
  3693 ;; This function uses a non-reentrant model
  3694 ;;
  3695                           
  3696                           	psect	text15
  3697  001764                     __ptext15:
  3698                           	opt callstack 0
  3699  001764                     ___aomod:
  3700                           	opt callstack 0
  3701  001764  FFFF               	dw	65535	; assembler added errata NOP
  3702                           
  3703                           ; BSR set to: 0
  3704                           ;incstack = 0
  3705  001766  0E00               	movlw	0
  3706  001768  0100               	movlb	0	; () banked
  3707  00176A  6F91               	movwf	___aomod@sign& (0+255),b
  3708                           
  3709                           ; BSR set to: 0
  3710  00176C  AF87               	btfss	(___aomod@dividend+7)& (0+255),7,b
  3711  00176E  D012               	goto	l2966
  3712                           
  3713                           ; BSR set to: 0
  3714  001770  1F87               	comf	(___aomod@dividend+7)& (0+255),f,b
  3715  001772  1F86               	comf	(___aomod@dividend+6)& (0+255),f,b
  3716  001774  1F85               	comf	(___aomod@dividend+5)& (0+255),f,b
  3717  001776  1F84               	comf	(___aomod@dividend+4)& (0+255),f,b
  3718  001778  1F83               	comf	(___aomod@dividend+3)& (0+255),f,b
  3719  00177A  1F82               	comf	(___aomod@dividend+2)& (0+255),f,b
  3720  00177C  1F81               	comf	(___aomod@dividend+1)& (0+255),f,b
  3721  00177E  6D80               	negf	___aomod@dividend& (0+255),b
  3722  001780  0E00               	movlw	0
  3723  001782  2381               	addwfc	(___aomod@dividend+1)& (0+255),f,b
  3724  001784  2382               	addwfc	(___aomod@dividend+2)& (0+255),f,b
  3725  001786  2383               	addwfc	(___aomod@dividend+3)& (0+255),f,b
  3726  001788  2384               	addwfc	(___aomod@dividend+4)& (0+255),f,b
  3727  00178A  2385               	addwfc	(___aomod@dividend+5)& (0+255),f,b
  3728  00178C  2386               	addwfc	(___aomod@dividend+6)& (0+255),f,b
  3729  00178E  2387               	addwfc	(___aomod@dividend+7)& (0+255),f,b
  3730                           
  3731                           ; BSR set to: 0
  3732  001790  0E01               	movlw	1
  3733  001792  6F91               	movwf	___aomod@sign& (0+255),b
  3734  001794                     l2966:
  3735  001794  FFFF               	dw	65535	; assembler added errata NOP
  3736                           
  3737                           ; BSR set to: 0
  3738  001796  AF8F               	btfss	(___aomod@divisor+7)& (0+255),7,b
  3739  001798  D010               	goto	l2970
  3740                           
  3741                           ; BSR set to: 0
  3742  00179A  1F8F               	comf	(___aomod@divisor+7)& (0+255),f,b
  3743  00179C  1F8E               	comf	(___aomod@divisor+6)& (0+255),f,b
  3744  00179E  1F8D               	comf	(___aomod@divisor+5)& (0+255),f,b
  3745  0017A0  1F8C               	comf	(___aomod@divisor+4)& (0+255),f,b
  3746  0017A2  1F8B               	comf	(___aomod@divisor+3)& (0+255),f,b
  3747  0017A4  1F8A               	comf	(___aomod@divisor+2)& (0+255),f,b
  3748  0017A6  1F89               	comf	(___aomod@divisor+1)& (0+255),f,b
  3749  0017A8  6D88               	negf	___aomod@divisor& (0+255),b
  3750  0017AA  0E00               	movlw	0
  3751  0017AC  2389               	addwfc	(___aomod@divisor+1)& (0+255),f,b
  3752  0017AE  238A               	addwfc	(___aomod@divisor+2)& (0+255),f,b
  3753  0017B0  238B               	addwfc	(___aomod@divisor+3)& (0+255),f,b
  3754  0017B2  238C               	addwfc	(___aomod@divisor+4)& (0+255),f,b
  3755  0017B4  238D               	addwfc	(___aomod@divisor+5)& (0+255),f,b
  3756  0017B6  238E               	addwfc	(___aomod@divisor+6)& (0+255),f,b
  3757  0017B8  238F               	addwfc	(___aomod@divisor+7)& (0+255),f,b
  3758  0017BA                     l2970:
  3759  0017BA  FFFF               	dw	65535	; assembler added errata NOP
  3760                           
  3761                           ; BSR set to: 0
  3762  0017BC  5188               	movf	___aomod@divisor& (0+255),w,b
  3763  0017BE  1189               	iorwf	(___aomod@divisor+1)& (0+255),w,b
  3764  0017C0  118A               	iorwf	(___aomod@divisor+2)& (0+255),w,b
  3765  0017C2  118B               	iorwf	(___aomod@divisor+3)& (0+255),w,b
  3766  0017C4  118C               	iorwf	(___aomod@divisor+4)& (0+255),w,b
  3767  0017C6  118D               	iorwf	(___aomod@divisor+5)& (0+255),w,b
  3768  0017C8  118E               	iorwf	(___aomod@divisor+6)& (0+255),w,b
  3769  0017CA  118F               	iorwf	(___aomod@divisor+7)& (0+255),w,b
  3770  0017CC  B4D8               	btfsc	status,2,c
  3771  0017CE  D040               	goto	l2986
  3772                           
  3773                           ; BSR set to: 0
  3774  0017D0  0E01               	movlw	1
  3775  0017D2  6F90               	movwf	___aomod@counter& (0+255),b
  3776  0017D4  D00B               	goto	l2976
  3777  0017D6                     l2974:
  3778  0017D6  FFFF               	dw	65535	; assembler added errata NOP
  3779                           
  3780                           ; BSR set to: 0
  3781  0017D8  90D8               	bcf	status,0,c
  3782  0017DA  3788               	rlcf	___aomod@divisor& (0+255),f,b
  3783  0017DC  3789               	rlcf	(___aomod@divisor+1)& (0+255),f,b
  3784  0017DE  378A               	rlcf	(___aomod@divisor+2)& (0+255),f,b
  3785  0017E0  378B               	rlcf	(___aomod@divisor+3)& (0+255),f,b
  3786  0017E2  378C               	rlcf	(___aomod@divisor+4)& (0+255),f,b
  3787  0017E4  378D               	rlcf	(___aomod@divisor+5)& (0+255),f,b
  3788  0017E6  378E               	rlcf	(___aomod@divisor+6)& (0+255),f,b
  3789  0017E8  378F               	rlcf	(___aomod@divisor+7)& (0+255),f,b
  3790  0017EA  2B90               	incf	___aomod@counter& (0+255),f,b
  3791  0017EC                     l2976:
  3792  0017EC  FFFF               	dw	65535	; assembler added errata NOP
  3793                           
  3794                           ; BSR set to: 0
  3795  0017EE  AF8F               	btfss	(___aomod@divisor+7)& (0+255),7,b
  3796  0017F0  D7F2               	goto	l2974
  3797  0017F2                     u2190:
  3798  0017F2  FFFF               	dw	65535	; assembler added errata NOP
  3799                           
  3800                           ; BSR set to: 0
  3801  0017F4  5188               	movf	___aomod@divisor& (0+255),w,b
  3802  0017F6  5D80               	subwf	___aomod@dividend& (0+255),w,b
  3803  0017F8  5189               	movf	(___aomod@divisor+1)& (0+255),w,b
  3804  0017FA  5981               	subwfb	(___aomod@dividend+1)& (0+255),w,b
  3805  0017FC  518A               	movf	(___aomod@divisor+2)& (0+255),w,b
  3806  0017FE  5982               	subwfb	(___aomod@dividend+2)& (0+255),w,b
  3807  001800  518B               	movf	(___aomod@divisor+3)& (0+255),w,b
  3808  001802  5983               	subwfb	(___aomod@dividend+3)& (0+255),w,b
  3809  001804  518C               	movf	(___aomod@divisor+4)& (0+255),w,b
  3810  001806  5984               	subwfb	(___aomod@dividend+4)& (0+255),w,b
  3811  001808  518D               	movf	(___aomod@divisor+5)& (0+255),w,b
  3812  00180A  5985               	subwfb	(___aomod@dividend+5)& (0+255),w,b
  3813  00180C  518E               	movf	(___aomod@divisor+6)& (0+255),w,b
  3814  00180E  5986               	subwfb	(___aomod@dividend+6)& (0+255),w,b
  3815  001810  518F               	movf	(___aomod@divisor+7)& (0+255),w,b
  3816  001812  5987               	subwfb	(___aomod@dividend+7)& (0+255),w,b
  3817  001814  A0D8               	btfss	status,0,c
  3818  001816  D010               	goto	l2982
  3819                           
  3820                           ; BSR set to: 0
  3821  001818  5188               	movf	___aomod@divisor& (0+255),w,b
  3822  00181A  5F80               	subwf	___aomod@dividend& (0+255),f,b
  3823  00181C  5189               	movf	(___aomod@divisor+1)& (0+255),w,b
  3824  00181E  5B81               	subwfb	(___aomod@dividend+1)& (0+255),f,b
  3825  001820  518A               	movf	(___aomod@divisor+2)& (0+255),w,b
  3826  001822  5B82               	subwfb	(___aomod@dividend+2)& (0+255),f,b
  3827  001824  518B               	movf	(___aomod@divisor+3)& (0+255),w,b
  3828  001826  5B83               	subwfb	(___aomod@dividend+3)& (0+255),f,b
  3829  001828  518C               	movf	(___aomod@divisor+4)& (0+255),w,b
  3830  00182A  5B84               	subwfb	(___aomod@dividend+4)& (0+255),f,b
  3831  00182C  518D               	movf	(___aomod@divisor+5)& (0+255),w,b
  3832  00182E  5B85               	subwfb	(___aomod@dividend+5)& (0+255),f,b
  3833  001830  518E               	movf	(___aomod@divisor+6)& (0+255),w,b
  3834  001832  5B86               	subwfb	(___aomod@dividend+6)& (0+255),f,b
  3835  001834  518F               	movf	(___aomod@divisor+7)& (0+255),w,b
  3836  001836  5B87               	subwfb	(___aomod@dividend+7)& (0+255),f,b
  3837  001838                     l2982:
  3838  001838  FFFF               	dw	65535	; assembler added errata NOP
  3839                           
  3840                           ; BSR set to: 0
  3841  00183A  90D8               	bcf	status,0,c
  3842  00183C  338F               	rrcf	(___aomod@divisor+7)& (0+255),f,b
  3843  00183E  338E               	rrcf	(___aomod@divisor+6)& (0+255),f,b
  3844  001840  338D               	rrcf	(___aomod@divisor+5)& (0+255),f,b
  3845  001842  338C               	rrcf	(___aomod@divisor+4)& (0+255),f,b
  3846  001844  338B               	rrcf	(___aomod@divisor+3)& (0+255),f,b
  3847  001846  338A               	rrcf	(___aomod@divisor+2)& (0+255),f,b
  3848  001848  3389               	rrcf	(___aomod@divisor+1)& (0+255),f,b
  3849  00184A  3388               	rrcf	___aomod@divisor& (0+255),f,b
  3850                           
  3851                           ; BSR set to: 0
  3852  00184C  2F90               	decfsz	___aomod@counter& (0+255),f,b
  3853  00184E  D7D1               	goto	u2190
  3854  001850                     l2986:
  3855  001850  FFFF               	dw	65535	; assembler added errata NOP
  3856                           
  3857                           ; BSR set to: 0
  3858  001852  5191               	movf	___aomod@sign& (0+255),w,b
  3859  001854  B4D8               	btfsc	status,2,c
  3860  001856  D010               	goto	l2990
  3861                           
  3862                           ; BSR set to: 0
  3863  001858  1F87               	comf	(___aomod@dividend+7)& (0+255),f,b
  3864  00185A  1F86               	comf	(___aomod@dividend+6)& (0+255),f,b
  3865  00185C  1F85               	comf	(___aomod@dividend+5)& (0+255),f,b
  3866  00185E  1F84               	comf	(___aomod@dividend+4)& (0+255),f,b
  3867  001860  1F83               	comf	(___aomod@dividend+3)& (0+255),f,b
  3868  001862  1F82               	comf	(___aomod@dividend+2)& (0+255),f,b
  3869  001864  1F81               	comf	(___aomod@dividend+1)& (0+255),f,b
  3870  001866  6D80               	negf	___aomod@dividend& (0+255),b
  3871  001868  0E00               	movlw	0
  3872  00186A  2381               	addwfc	(___aomod@dividend+1)& (0+255),f,b
  3873  00186C  2382               	addwfc	(___aomod@dividend+2)& (0+255),f,b
  3874  00186E  2383               	addwfc	(___aomod@dividend+3)& (0+255),f,b
  3875  001870  2384               	addwfc	(___aomod@dividend+4)& (0+255),f,b
  3876  001872  2385               	addwfc	(___aomod@dividend+5)& (0+255),f,b
  3877  001874  2386               	addwfc	(___aomod@dividend+6)& (0+255),f,b
  3878  001876  2387               	addwfc	(___aomod@dividend+7)& (0+255),f,b
  3879  001878                     l2990:
  3880  001878  FFFF               	dw	65535	; assembler added errata NOP
  3881                           
  3882                           ; BSR set to: 0
  3883  00187A  C080  F080         	movff	___aomod@dividend,?___aomod
  3884  00187E  C081  F081         	movff	___aomod@dividend+1,?___aomod+1
  3885  001882  C082  F082         	movff	___aomod@dividend+2,?___aomod+2
  3886  001886  C083  F083         	movff	___aomod@dividend+3,?___aomod+3
  3887  00188A  C084  F084         	movff	___aomod@dividend+4,?___aomod+4
  3888  00188E  C085  F085         	movff	___aomod@dividend+5,?___aomod+5
  3889  001892  C086  F086         	movff	___aomod@dividend+6,?___aomod+6
  3890  001896  C087  F087         	movff	___aomod@dividend+7,?___aomod+7
  3891                           
  3892                           ; BSR set to: 0
  3893  00189A  0012               	return		;funcret
  3894  00189C  FFFF               	dw	65535	; errata NOP
  3895  00189E                     __end_of___aomod:
  3896                           	opt callstack 0
  3897                           
  3898 ;; *************** function ___aodiv *****************
  3899 ;; Defined at:
  3900 ;;		line 9 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/aodiv.c"
  3901 ;; Parameters:    Size  Location     Type
  3902 ;;  dividend        8    0[BANK0 ] long long 
  3903 ;;  divisor         8    8[BANK0 ] long long 
  3904 ;; Auto vars:     Size  Location     Type
  3905 ;;  quotient        8   18[BANK0 ] long long 
  3906 ;;  sign            1   17[BANK0 ] unsigned char 
  3907 ;;  counter         1   16[BANK0 ] unsigned char 
  3908 ;; Return value:  Size  Location     Type
  3909 ;;                  8    0[BANK0 ] long long 
  3910 ;; Registers used:
  3911 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3912 ;; Tracked objects:
  3913 ;;		On entry : 0/0
  3914 ;;		On exit  : 0/0
  3915 ;;		Unchanged: 0/0
  3916 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3917 ;;      Params:         0      16       0       0       0       0       0
  3918 ;;      Locals:         0      10       0       0       0       0       0
  3919 ;;      Temps:          0       0       0       0       0       0       0
  3920 ;;      Totals:         0      26       0       0       0       0       0
  3921 ;;Total ram usage:       26 bytes
  3922 ;; Hardware stack levels used:    1
  3923 ;; Hardware stack levels required when called:   10
  3924 ;; This function calls:
  3925 ;;		Nothing
  3926 ;; This function is called by:
  3927 ;;		_dtoa
  3928 ;; This function uses a non-reentrant model
  3929 ;;
  3930                           
  3931                           	psect	text16
  3932  0014AA                     __ptext16:
  3933                           	opt callstack 0
  3934  0014AA                     ___aodiv:
  3935                           	opt callstack 0
  3936  0014AA  FFFF               	dw	65535	; assembler added errata NOP
  3937                           
  3938                           ; BSR set to: 0
  3939                           ;incstack = 0
  3940  0014AC  0E00               	movlw	0
  3941  0014AE  0100               	movlb	0	; () banked
  3942  0014B0  6F91               	movwf	___aodiv@sign& (0+255),b
  3943                           
  3944                           ; BSR set to: 0
  3945  0014B2  AF8F               	btfss	(___aodiv@divisor+7)& (0+255),7,b
  3946  0014B4  D012               	goto	l2922
  3947                           
  3948                           ; BSR set to: 0
  3949  0014B6  1F8F               	comf	(___aodiv@divisor+7)& (0+255),f,b
  3950  0014B8  1F8E               	comf	(___aodiv@divisor+6)& (0+255),f,b
  3951  0014BA  1F8D               	comf	(___aodiv@divisor+5)& (0+255),f,b
  3952  0014BC  1F8C               	comf	(___aodiv@divisor+4)& (0+255),f,b
  3953  0014BE  1F8B               	comf	(___aodiv@divisor+3)& (0+255),f,b
  3954  0014C0  1F8A               	comf	(___aodiv@divisor+2)& (0+255),f,b
  3955  0014C2  1F89               	comf	(___aodiv@divisor+1)& (0+255),f,b
  3956  0014C4  6D88               	negf	___aodiv@divisor& (0+255),b
  3957  0014C6  0E00               	movlw	0
  3958  0014C8  2389               	addwfc	(___aodiv@divisor+1)& (0+255),f,b
  3959  0014CA  238A               	addwfc	(___aodiv@divisor+2)& (0+255),f,b
  3960  0014CC  238B               	addwfc	(___aodiv@divisor+3)& (0+255),f,b
  3961  0014CE  238C               	addwfc	(___aodiv@divisor+4)& (0+255),f,b
  3962  0014D0  238D               	addwfc	(___aodiv@divisor+5)& (0+255),f,b
  3963  0014D2  238E               	addwfc	(___aodiv@divisor+6)& (0+255),f,b
  3964  0014D4  238F               	addwfc	(___aodiv@divisor+7)& (0+255),f,b
  3965                           
  3966                           ; BSR set to: 0
  3967  0014D6  0E01               	movlw	1
  3968  0014D8  6F91               	movwf	___aodiv@sign& (0+255),b
  3969  0014DA                     l2922:
  3970  0014DA  FFFF               	dw	65535	; assembler added errata NOP
  3971                           
  3972                           ; BSR set to: 0
  3973  0014DC  AF87               	btfss	(___aodiv@dividend+7)& (0+255),7,b
  3974  0014DE  D012               	goto	l2928
  3975                           
  3976                           ; BSR set to: 0
  3977  0014E0  1F87               	comf	(___aodiv@dividend+7)& (0+255),f,b
  3978  0014E2  1F86               	comf	(___aodiv@dividend+6)& (0+255),f,b
  3979  0014E4  1F85               	comf	(___aodiv@dividend+5)& (0+255),f,b
  3980  0014E6  1F84               	comf	(___aodiv@dividend+4)& (0+255),f,b
  3981  0014E8  1F83               	comf	(___aodiv@dividend+3)& (0+255),f,b
  3982  0014EA  1F82               	comf	(___aodiv@dividend+2)& (0+255),f,b
  3983  0014EC  1F81               	comf	(___aodiv@dividend+1)& (0+255),f,b
  3984  0014EE  6D80               	negf	___aodiv@dividend& (0+255),b
  3985  0014F0  0E00               	movlw	0
  3986  0014F2  2381               	addwfc	(___aodiv@dividend+1)& (0+255),f,b
  3987  0014F4  2382               	addwfc	(___aodiv@dividend+2)& (0+255),f,b
  3988  0014F6  2383               	addwfc	(___aodiv@dividend+3)& (0+255),f,b
  3989  0014F8  2384               	addwfc	(___aodiv@dividend+4)& (0+255),f,b
  3990  0014FA  2385               	addwfc	(___aodiv@dividend+5)& (0+255),f,b
  3991  0014FC  2386               	addwfc	(___aodiv@dividend+6)& (0+255),f,b
  3992  0014FE  2387               	addwfc	(___aodiv@dividend+7)& (0+255),f,b
  3993                           
  3994                           ; BSR set to: 0
  3995  001500  0E01               	movlw	1
  3996  001502  1B91               	xorwf	___aodiv@sign& (0+255),f,b
  3997  001504                     l2928:
  3998  001504  FFFF               	dw	65535	; assembler added errata NOP
  3999                           
  4000                           ; BSR set to: 0
  4001  001506  EE20  F092         	lfsr	2,___aodiv@quotient
  4002  00150A  0E07               	movlw	7
  4003  00150C                     u2111:
  4004  00150C  6ADE               	clrf	postinc2,c
  4005  00150E  06E8               	decf	wreg,f,c
  4006  001510  E2FD               	bc	u2111
  4007                           
  4008                           ; BSR set to: 0
  4009  001512  5188               	movf	___aodiv@divisor& (0+255),w,b
  4010  001514  1189               	iorwf	(___aodiv@divisor+1)& (0+255),w,b
  4011  001516  118A               	iorwf	(___aodiv@divisor+2)& (0+255),w,b
  4012  001518  118B               	iorwf	(___aodiv@divisor+3)& (0+255),w,b
  4013  00151A  118C               	iorwf	(___aodiv@divisor+4)& (0+255),w,b
  4014  00151C  118D               	iorwf	(___aodiv@divisor+5)& (0+255),w,b
  4015  00151E  118E               	iorwf	(___aodiv@divisor+6)& (0+255),w,b
  4016  001520  118F               	iorwf	(___aodiv@divisor+7)& (0+255),w,b
  4017  001522  B4D8               	btfsc	status,2,c
  4018  001524  D04A               	goto	l2950
  4019                           
  4020                           ; BSR set to: 0
  4021  001526  0E01               	movlw	1
  4022  001528  6F90               	movwf	___aodiv@counter& (0+255),b
  4023  00152A  D00B               	goto	l2936
  4024  00152C                     l2934:
  4025  00152C  FFFF               	dw	65535	; assembler added errata NOP
  4026                           
  4027                           ; BSR set to: 0
  4028  00152E  90D8               	bcf	status,0,c
  4029  001530  3788               	rlcf	___aodiv@divisor& (0+255),f,b
  4030  001532  3789               	rlcf	(___aodiv@divisor+1)& (0+255),f,b
  4031  001534  378A               	rlcf	(___aodiv@divisor+2)& (0+255),f,b
  4032  001536  378B               	rlcf	(___aodiv@divisor+3)& (0+255),f,b
  4033  001538  378C               	rlcf	(___aodiv@divisor+4)& (0+255),f,b
  4034  00153A  378D               	rlcf	(___aodiv@divisor+5)& (0+255),f,b
  4035  00153C  378E               	rlcf	(___aodiv@divisor+6)& (0+255),f,b
  4036  00153E  378F               	rlcf	(___aodiv@divisor+7)& (0+255),f,b
  4037  001540  2B90               	incf	___aodiv@counter& (0+255),f,b
  4038  001542                     l2936:
  4039  001542  FFFF               	dw	65535	; assembler added errata NOP
  4040                           
  4041                           ; BSR set to: 0
  4042  001544  AF8F               	btfss	(___aodiv@divisor+7)& (0+255),7,b
  4043  001546  D7F2               	goto	l2934
  4044  001548                     u2130:
  4045  001548  FFFF               	dw	65535	; assembler added errata NOP
  4046                           
  4047                           ; BSR set to: 0
  4048  00154A  90D8               	bcf	status,0,c
  4049  00154C  3792               	rlcf	___aodiv@quotient& (0+255),f,b
  4050  00154E  3793               	rlcf	(___aodiv@quotient+1)& (0+255),f,b
  4051  001550  3794               	rlcf	(___aodiv@quotient+2)& (0+255),f,b
  4052  001552  3795               	rlcf	(___aodiv@quotient+3)& (0+255),f,b
  4053  001554  3796               	rlcf	(___aodiv@quotient+4)& (0+255),f,b
  4054  001556  3797               	rlcf	(___aodiv@quotient+5)& (0+255),f,b
  4055  001558  3798               	rlcf	(___aodiv@quotient+6)& (0+255),f,b
  4056  00155A  3799               	rlcf	(___aodiv@quotient+7)& (0+255),f,b
  4057                           
  4058                           ; BSR set to: 0
  4059  00155C  5188               	movf	___aodiv@divisor& (0+255),w,b
  4060  00155E  5D80               	subwf	___aodiv@dividend& (0+255),w,b
  4061  001560  5189               	movf	(___aodiv@divisor+1)& (0+255),w,b
  4062  001562  5981               	subwfb	(___aodiv@dividend+1)& (0+255),w,b
  4063  001564  518A               	movf	(___aodiv@divisor+2)& (0+255),w,b
  4064  001566  5982               	subwfb	(___aodiv@dividend+2)& (0+255),w,b
  4065  001568  518B               	movf	(___aodiv@divisor+3)& (0+255),w,b
  4066  00156A  5983               	subwfb	(___aodiv@dividend+3)& (0+255),w,b
  4067  00156C  518C               	movf	(___aodiv@divisor+4)& (0+255),w,b
  4068  00156E  5984               	subwfb	(___aodiv@dividend+4)& (0+255),w,b
  4069  001570  518D               	movf	(___aodiv@divisor+5)& (0+255),w,b
  4070  001572  5985               	subwfb	(___aodiv@dividend+5)& (0+255),w,b
  4071  001574  518E               	movf	(___aodiv@divisor+6)& (0+255),w,b
  4072  001576  5986               	subwfb	(___aodiv@dividend+6)& (0+255),w,b
  4073  001578  518F               	movf	(___aodiv@divisor+7)& (0+255),w,b
  4074  00157A  5987               	subwfb	(___aodiv@dividend+7)& (0+255),w,b
  4075  00157C  A0D8               	btfss	status,0,c
  4076  00157E  D011               	goto	l2946
  4077                           
  4078                           ; BSR set to: 0
  4079  001580  5188               	movf	___aodiv@divisor& (0+255),w,b
  4080  001582  5F80               	subwf	___aodiv@dividend& (0+255),f,b
  4081  001584  5189               	movf	(___aodiv@divisor+1)& (0+255),w,b
  4082  001586  5B81               	subwfb	(___aodiv@dividend+1)& (0+255),f,b
  4083  001588  518A               	movf	(___aodiv@divisor+2)& (0+255),w,b
  4084  00158A  5B82               	subwfb	(___aodiv@dividend+2)& (0+255),f,b
  4085  00158C  518B               	movf	(___aodiv@divisor+3)& (0+255),w,b
  4086  00158E  5B83               	subwfb	(___aodiv@dividend+3)& (0+255),f,b
  4087  001590  518C               	movf	(___aodiv@divisor+4)& (0+255),w,b
  4088  001592  5B84               	subwfb	(___aodiv@dividend+4)& (0+255),f,b
  4089  001594  518D               	movf	(___aodiv@divisor+5)& (0+255),w,b
  4090  001596  5B85               	subwfb	(___aodiv@dividend+5)& (0+255),f,b
  4091  001598  518E               	movf	(___aodiv@divisor+6)& (0+255),w,b
  4092  00159A  5B86               	subwfb	(___aodiv@dividend+6)& (0+255),f,b
  4093  00159C  518F               	movf	(___aodiv@divisor+7)& (0+255),w,b
  4094  00159E  5B87               	subwfb	(___aodiv@dividend+7)& (0+255),f,b
  4095                           
  4096                           ; BSR set to: 0
  4097  0015A0  8192               	bsf	___aodiv@quotient& (0+255),0,b
  4098  0015A2                     l2946:
  4099  0015A2  FFFF               	dw	65535	; assembler added errata NOP
  4100                           
  4101                           ; BSR set to: 0
  4102  0015A4  90D8               	bcf	status,0,c
  4103  0015A6  338F               	rrcf	(___aodiv@divisor+7)& (0+255),f,b
  4104  0015A8  338E               	rrcf	(___aodiv@divisor+6)& (0+255),f,b
  4105  0015AA  338D               	rrcf	(___aodiv@divisor+5)& (0+255),f,b
  4106  0015AC  338C               	rrcf	(___aodiv@divisor+4)& (0+255),f,b
  4107  0015AE  338B               	rrcf	(___aodiv@divisor+3)& (0+255),f,b
  4108  0015B0  338A               	rrcf	(___aodiv@divisor+2)& (0+255),f,b
  4109  0015B2  3389               	rrcf	(___aodiv@divisor+1)& (0+255),f,b
  4110  0015B4  3388               	rrcf	___aodiv@divisor& (0+255),f,b
  4111                           
  4112                           ; BSR set to: 0
  4113  0015B6  2F90               	decfsz	___aodiv@counter& (0+255),f,b
  4114  0015B8  D7C7               	goto	u2130
  4115  0015BA                     l2950:
  4116  0015BA  FFFF               	dw	65535	; assembler added errata NOP
  4117                           
  4118                           ; BSR set to: 0
  4119  0015BC  5191               	movf	___aodiv@sign& (0+255),w,b
  4120  0015BE  B4D8               	btfsc	status,2,c
  4121  0015C0  D010               	goto	l2954
  4122                           
  4123                           ; BSR set to: 0
  4124  0015C2  1F99               	comf	(___aodiv@quotient+7)& (0+255),f,b
  4125  0015C4  1F98               	comf	(___aodiv@quotient+6)& (0+255),f,b
  4126  0015C6  1F97               	comf	(___aodiv@quotient+5)& (0+255),f,b
  4127  0015C8  1F96               	comf	(___aodiv@quotient+4)& (0+255),f,b
  4128  0015CA  1F95               	comf	(___aodiv@quotient+3)& (0+255),f,b
  4129  0015CC  1F94               	comf	(___aodiv@quotient+2)& (0+255),f,b
  4130  0015CE  1F93               	comf	(___aodiv@quotient+1)& (0+255),f,b
  4131  0015D0  6D92               	negf	___aodiv@quotient& (0+255),b
  4132  0015D2  0E00               	movlw	0
  4133  0015D4  2393               	addwfc	(___aodiv@quotient+1)& (0+255),f,b
  4134  0015D6  2394               	addwfc	(___aodiv@quotient+2)& (0+255),f,b
  4135  0015D8  2395               	addwfc	(___aodiv@quotient+3)& (0+255),f,b
  4136  0015DA  2396               	addwfc	(___aodiv@quotient+4)& (0+255),f,b
  4137  0015DC  2397               	addwfc	(___aodiv@quotient+5)& (0+255),f,b
  4138  0015DE  2398               	addwfc	(___aodiv@quotient+6)& (0+255),f,b
  4139  0015E0  2399               	addwfc	(___aodiv@quotient+7)& (0+255),f,b
  4140  0015E2                     l2954:
  4141  0015E2  FFFF               	dw	65535	; assembler added errata NOP
  4142                           
  4143                           ; BSR set to: 0
  4144  0015E4  C092  F080         	movff	___aodiv@quotient,?___aodiv
  4145  0015E8  C093  F081         	movff	___aodiv@quotient+1,?___aodiv+1
  4146  0015EC  C094  F082         	movff	___aodiv@quotient+2,?___aodiv+2
  4147  0015F0  C095  F083         	movff	___aodiv@quotient+3,?___aodiv+3
  4148  0015F4  C096  F084         	movff	___aodiv@quotient+4,?___aodiv+4
  4149  0015F8  C097  F085         	movff	___aodiv@quotient+5,?___aodiv+5
  4150  0015FC  C098  F086         	movff	___aodiv@quotient+6,?___aodiv+6
  4151  001600  C099  F087         	movff	___aodiv@quotient+7,?___aodiv+7
  4152                           
  4153                           ; BSR set to: 0
  4154  001604  0012               	return		;funcret
  4155  001606  FFFF               	dw	65535	; errata NOP
  4156  001608                     __end_of___aodiv:
  4157                           	opt callstack 0
  4158                           
  4159 ;; *************** function _atoi *****************
  4160 ;; Defined at:
  4161 ;;		line 4 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/atoi.c"
  4162 ;; Parameters:    Size  Location     Type
  4163 ;;  s               2    7[BANK0 ] PTR const unsigned char 
  4164 ;;		 -> STR_4(18), STR_3(17), STR_2(17), STR_1(17), 
  4165 ;; Auto vars:     Size  Location     Type
  4166 ;;  n               2   20[BANK0 ] int 
  4167 ;;  neg             2   13[BANK0 ] int 
  4168 ;; Return value:  Size  Location     Type
  4169 ;;                  2    7[BANK0 ] int 
  4170 ;; Registers used:
  4171 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4172 ;; Tracked objects:
  4173 ;;		On entry : 0/0
  4174 ;;		On exit  : 0/0
  4175 ;;		Unchanged: 0/0
  4176 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4177 ;;      Params:         0       2       0       0       0       0       0
  4178 ;;      Locals:         0       9       0       0       0       0       0
  4179 ;;      Temps:          0       4       0       0       0       0       0
  4180 ;;      Totals:         0      15       0       0       0       0       0
  4181 ;;Total ram usage:       15 bytes
  4182 ;; Hardware stack levels used:    1
  4183 ;; Hardware stack levels required when called:   11
  4184 ;; This function calls:
  4185 ;;		___wmul
  4186 ;;		_isdigit
  4187 ;;		_isspace
  4188 ;; This function is called by:
  4189 ;;		_vfpfcnvrt
  4190 ;; This function uses a non-reentrant model
  4191 ;;
  4192                           
  4193                           	psect	text17
  4194  0011DA                     __ptext17:
  4195                           	opt callstack 0
  4196  0011DA                     _atoi:
  4197                           	opt callstack 0
  4198  0011DA  FFFF               	dw	65535	; assembler added errata NOP
  4199                           
  4200                           ; BSR set to: 0
  4201                           ;incstack = 0
  4202  0011DC  0E00               	movlw	0
  4203  0011DE  0100               	movlb	0	; () banked
  4204  0011E0  6F95               	movwf	(atoi@n+1)& (0+255),b
  4205  0011E2  0E00               	movlw	0
  4206  0011E4  6F94               	movwf	atoi@n& (0+255),b
  4207  0011E6  0E00               	movlw	0
  4208  0011E8  6F8E               	movwf	(atoi@neg+1)& (0+255),b
  4209  0011EA  0E00               	movlw	0
  4210  0011EC  6F8D               	movwf	atoi@neg& (0+255),b
  4211  0011EE  D003               	goto	l3202
  4212  0011F0                     l3200:
  4213  0011F0  FFFF               	dw	65535	; assembler added errata NOP
  4214                           
  4215                           ; BSR set to: 0
  4216  0011F2  4B87               	infsnz	atoi@s& (0+255),f,b
  4217  0011F4  2B88               	incf	(atoi@s+1)& (0+255),f,b
  4218  0011F6                     l3202:
  4219  0011F6  FFFF               	dw	65535	; assembler added errata NOP
  4220                           
  4221                           ; BSR set to: 0
  4222  0011F8  0E01               	movlw	1
  4223  0011FA  6F93               	movwf	_atoi$1504& (0+255),b
  4224                           
  4225                           ; BSR set to: 0
  4226  0011FC  C087  FFF6         	movff	atoi@s,tblptrl
  4227  001200  C088  FFF7         	movff	atoi@s+1,tblptrh
  4228  001204                     	if	0	;tblptru may be non-zero
  4229  001204                     	endif
  4230  001204                     	if	0	;tblptru may be non-zero
  4231  001204                     	endif
  4232  001204  0008               	tblrd		*
  4233  001206  FFFF               	dw	65535	; errata NOP
  4234  001208  50F5               	movf	tablat,w,c
  4235  00120A  0A20               	xorlw	32
  4236  00120C  B4D8               	btfsc	status,2,c
  4237  00120E  D019               	goto	l3210
  4238                           
  4239                           ; BSR set to: 0
  4240  001210  0EF7               	movlw	247
  4241  001212  6F89               	movwf	??_atoi& (0+255),b
  4242  001214  0EFF               	movlw	255
  4243  001216  6F8A               	movwf	(??_atoi+1)& (0+255),b
  4244  001218  C087  FFF6         	movff	atoi@s,tblptrl
  4245  00121C  C088  FFF7         	movff	atoi@s+1,tblptrh
  4246  001220                     	if	0	;tblptru may be non-zero
  4247  001220                     	endif
  4248  001220                     	if	0	;tblptru may be non-zero
  4249  001220                     	endif
  4250  001220  0008               	tblrd		*
  4251  001222  FFFF               	dw	65535	; errata NOP
  4252  001224  50F5               	movf	tablat,w,c
  4253  001226  6F8B               	movwf	(??_atoi+2)& (0+255),b
  4254  001228  6B8C               	clrf	(??_atoi+3)& (0+255),b
  4255  00122A  5189               	movf	??_atoi& (0+255),w,b
  4256  00122C  278B               	addwf	(??_atoi+2)& (0+255),f,b
  4257  00122E  518A               	movf	(??_atoi+1)& (0+255),w,b
  4258  001230  238C               	addwfc	(??_atoi+3)& (0+255),f,b
  4259  001232  518C               	movf	(??_atoi+3)& (0+255),w,b
  4260  001234  E104               	bnz	u2620
  4261  001236  0E05               	movlw	5
  4262  001238  5D8B               	subwf	(??_atoi+2)& (0+255),w,b
  4263  00123A  A0D8               	btfss	status,0,c
  4264  00123C  D002               	goto	l3210
  4265  00123E                     u2620:
  4266                           
  4267                           ; BSR set to: 0
  4268  00123E  0E00               	movlw	0
  4269  001240  6F93               	movwf	_atoi$1504& (0+255),b
  4270  001242                     l3210:
  4271  001242  FFFF               	dw	65535	; assembler added errata NOP
  4272                           
  4273                           ; BSR set to: 0
  4274  001244  C093  F08F         	movff	_atoi$1504,_atoi$1503
  4275  001248  6B90               	clrf	(_atoi$1503+1)& (0+255),b
  4276                           
  4277                           ; BSR set to: 0
  4278  00124A  518F               	movf	_atoi$1503& (0+255),w,b
  4279  00124C  1190               	iorwf	(_atoi$1503+1)& (0+255),w,b
  4280  00124E  B4D8               	btfsc	status,2,c
  4281  001250  D00A               	goto	l3220
  4282  001252  D7CE               	goto	l3200
  4283  001254                     l3216:
  4284  001254  FFFF               	dw	65535	; assembler added errata NOP
  4285                           
  4286                           ; BSR set to: 0
  4287  001256  0E00               	movlw	0
  4288  001258  6F8E               	movwf	(atoi@neg+1)& (0+255),b
  4289  00125A  0E01               	movlw	1
  4290  00125C  6F8D               	movwf	atoi@neg& (0+255),b
  4291  00125E                     l3218:
  4292  00125E  FFFF               	dw	65535	; assembler added errata NOP
  4293                           
  4294                           ; BSR set to: 0
  4295  001260  4B87               	infsnz	atoi@s& (0+255),f,b
  4296  001262  2B88               	incf	(atoi@s+1)& (0+255),f,b
  4297  001264  D033               	goto	l3226
  4298  001266                     l3220:
  4299  001266  FFFF               	dw	65535	; assembler added errata NOP
  4300                           
  4301                           ; BSR set to: 0
  4302  001268  C087  FFF6         	movff	atoi@s,tblptrl
  4303  00126C  C088  FFF7         	movff	atoi@s+1,tblptrh
  4304  001270                     	if	0	;tblptru may be non-zero
  4305  001270                     	endif
  4306  001270                     	if	0	;tblptru may be non-zero
  4307  001270                     	endif
  4308  001270  0008               	tblrd		*
  4309  001272  FFFF               	dw	65535	; errata NOP
  4310  001274  50F5               	movf	tablat,w,c
  4311  001276  6F89               	movwf	??_atoi& (0+255),b
  4312  001278  6B8A               	clrf	(??_atoi+1)& (0+255),b
  4313                           
  4314                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4315                           ; Switch size 1, requested type "simple"
  4316                           ; Number of cases is 1, Range of values is 0 to 0
  4317                           ; switch strategies available:
  4318                           ; Name         Instructions Cycles
  4319                           ; simple_byte            4     3 (average)
  4320                           ;	Chosen strategy is simple_byte
  4321  00127A  518A               	movf	(??_atoi+1)& (0+255),w,b
  4322  00127C  0A00               	xorlw	0	; case 0
  4323  00127E  A4D8               	btfss	status,2,c
  4324  001280  D025               	goto	l3226
  4325                           
  4326                           ; BSR set to: 0
  4327                           ; Switch size 1, requested type "simple"
  4328                           ; Number of cases is 2, Range of values is 43 to 45
  4329                           ; switch strategies available:
  4330                           ; Name         Instructions Cycles
  4331                           ; simple_byte            7     4 (average)
  4332                           ;	Chosen strategy is simple_byte
  4333  001282  5189               	movf	??_atoi& (0+255),w,b
  4334  001284  0A2B               	xorlw	43	; case 43
  4335  001286  B4D8               	btfsc	status,2,c
  4336  001288  D7EA               	goto	l3218
  4337  00128A  0A06               	xorlw	6	; case 45
  4338  00128C  B4D8               	btfsc	status,2,c
  4339  00128E  D7E2               	goto	l3216
  4340  001290  D01D               	goto	l3226
  4341  001292                     l3222:
  4342  001292  FFFF               	dw	65535	; assembler added errata NOP
  4343                           
  4344                           ; BSR set to: 0
  4345  001294  C094  F080         	movff	atoi@n,___wmul@multiplier
  4346  001298  C095  F081         	movff	atoi@n+1,___wmul@multiplier+1
  4347  00129C  0E00               	movlw	0
  4348  00129E  6F83               	movwf	(___wmul@multiplicand+1)& (0+255),b
  4349  0012A0  0E0A               	movlw	10
  4350  0012A2  6F82               	movwf	___wmul@multiplicand& (0+255),b
  4351  0012A4  EC9F  F014         	call	___wmul	;wreg free
  4352  0012A8  C087  FFF6         	movff	atoi@s,tblptrl
  4353  0012AC  C088  FFF7         	movff	atoi@s+1,tblptrh
  4354  0012B0                     	if	0	;tblptru may be non-zero
  4355  0012B0                     	endif
  4356  0012B0                     	if	0	;tblptru may be non-zero
  4357  0012B0                     	endif
  4358  0012B0  0008               	tblrd		*
  4359  0012B2  FFFF               	dw	65535	; errata NOP
  4360  0012B4  50F5               	movf	tablat,w,c
  4361  0012B6  0100               	movlb	0	; () banked
  4362  0012B8  5F80               	subwf	?___wmul& (0+255),f,b
  4363  0012BA  0E00               	movlw	0
  4364  0012BC  5B81               	subwfb	(?___wmul+1)& (0+255),f,b
  4365  0012BE  0E30               	movlw	48
  4366  0012C0  2580               	addwf	?___wmul& (0+255),w,b
  4367  0012C2  6F94               	movwf	atoi@n& (0+255),b
  4368  0012C4  0E00               	movlw	0
  4369  0012C6  2181               	addwfc	(?___wmul+1)& (0+255),w,b
  4370  0012C8  6F95               	movwf	(atoi@n+1)& (0+255),b
  4371  0012CA  D7C9               	goto	l3218
  4372  0012CC                     l3226:
  4373  0012CC  FFFF               	dw	65535	; assembler added errata NOP
  4374                           
  4375                           ; BSR set to: 0
  4376  0012CE  0ED0               	movlw	208
  4377  0012D0  6F89               	movwf	??_atoi& (0+255),b
  4378  0012D2  0EFF               	movlw	255
  4379  0012D4  6F8A               	movwf	(??_atoi+1)& (0+255),b
  4380  0012D6  C087  FFF6         	movff	atoi@s,tblptrl
  4381  0012DA  C088  FFF7         	movff	atoi@s+1,tblptrh
  4382  0012DE                     	if	0	;tblptru may be non-zero
  4383  0012DE                     	endif
  4384  0012DE                     	if	0	;tblptru may be non-zero
  4385  0012DE                     	endif
  4386  0012DE  0008               	tblrd		*
  4387  0012E0  FFFF               	dw	65535	; errata NOP
  4388  0012E2  50F5               	movf	tablat,w,c
  4389  0012E4  6F8B               	movwf	(??_atoi+2)& (0+255),b
  4390  0012E6  6B8C               	clrf	(??_atoi+3)& (0+255),b
  4391  0012E8  5189               	movf	??_atoi& (0+255),w,b
  4392  0012EA  278B               	addwf	(??_atoi+2)& (0+255),f,b
  4393  0012EC  518A               	movf	(??_atoi+1)& (0+255),w,b
  4394  0012EE  238C               	addwfc	(??_atoi+3)& (0+255),f,b
  4395  0012F0  518C               	movf	(??_atoi+3)& (0+255),w,b
  4396  0012F2  E106               	bnz	u2640
  4397  0012F4  0E0A               	movlw	10
  4398  0012F6  5D8B               	subwf	(??_atoi+2)& (0+255),w,b
  4399  0012F8  B0D8               	btfsc	status,0,c
  4400  0012FA  D002               	goto	u2640
  4401  0012FC  0E01               	movlw	1
  4402  0012FE  D002               	goto	u2650
  4403  001300                     u2640:
  4404  001300  FFFF               	dw	65535	; assembler added errata NOP
  4405  001302  0E00               	movlw	0
  4406  001304                     u2650:
  4407  001304  FFFF               	dw	65535	; assembler added errata NOP
  4408  001306  6F91               	movwf	_atoi$1505& (0+255),b
  4409  001308  6B92               	clrf	(_atoi$1505+1)& (0+255),b
  4410                           
  4411                           ; BSR set to: 0
  4412  00130A  5191               	movf	_atoi$1505& (0+255),w,b
  4413  00130C  1192               	iorwf	(_atoi$1505+1)& (0+255),w,b
  4414  00130E  A4D8               	btfss	status,2,c
  4415  001310  D7C0               	goto	l3222
  4416                           
  4417                           ; BSR set to: 0
  4418  001312  518D               	movf	atoi@neg& (0+255),w,b
  4419  001314  118E               	iorwf	(atoi@neg+1)& (0+255),w,b
  4420  001316  A4D8               	btfss	status,2,c
  4421  001318  D00D               	goto	l1331
  4422                           
  4423                           ; BSR set to: 0
  4424  00131A  C094  F089         	movff	atoi@n,??_atoi
  4425  00131E  C095  F08A         	movff	atoi@n+1,??_atoi+1
  4426  001322  1F89               	comf	??_atoi& (0+255),f,b
  4427  001324  1F8A               	comf	(??_atoi+1)& (0+255),f,b
  4428  001326  4B89               	infsnz	??_atoi& (0+255),f,b
  4429  001328  2B8A               	incf	(??_atoi+1)& (0+255),f,b
  4430  00132A  C089  F087         	movff	??_atoi,?_atoi
  4431  00132E  C08A  F088         	movff	??_atoi+1,?_atoi+1
  4432  001332  D005               	goto	l1334
  4433  001334                     l1331:
  4434  001334  FFFF               	dw	65535	; assembler added errata NOP
  4435                           
  4436                           ; BSR set to: 0
  4437  001336  C094  F087         	movff	atoi@n,?_atoi
  4438  00133A  C095  F088         	movff	atoi@n+1,?_atoi+1
  4439  00133E                     l1334:
  4440  00133E  FFFF               	dw	65535	; assembler added errata NOP
  4441                           
  4442                           ; BSR set to: 0
  4443  001340  0012               	return		;funcret
  4444  001342  FFFF               	dw	65535	; errata NOP
  4445  001344                     __end_of_atoi:
  4446                           	opt callstack 0
  4447                           
  4448 ;; *************** function _isspace *****************
  4449 ;; Defined at:
  4450 ;;		line 5 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/isspace.c"
  4451 ;; Parameters:    Size  Location     Type
  4452 ;;  c               2    0[BANK0 ] int 
  4453 ;; Auto vars:     Size  Location     Type
  4454 ;;		None
  4455 ;; Return value:  Size  Location     Type
  4456 ;;                  2    0[BANK0 ] int 
  4457 ;; Registers used:
  4458 ;;		wreg, status,2, status,0
  4459 ;; Tracked objects:
  4460 ;;		On entry : 0/0
  4461 ;;		On exit  : 0/0
  4462 ;;		Unchanged: 0/0
  4463 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4464 ;;      Params:         0       2       0       0       0       0       0
  4465 ;;      Locals:         0       1       0       0       0       0       0
  4466 ;;      Temps:          0       4       0       0       0       0       0
  4467 ;;      Totals:         0       7       0       0       0       0       0
  4468 ;;Total ram usage:        7 bytes
  4469 ;; Hardware stack levels used:    1
  4470 ;; Hardware stack levels required when called:   10
  4471 ;; This function calls:
  4472 ;;		Nothing
  4473 ;; This function is called by:
  4474 ;;		_atoi
  4475 ;; This function uses a non-reentrant model
  4476 ;;
  4477                           
  4478                           	psect	text18
  4479  0025F4                     __ptext18:
  4480                           	opt callstack 0
  4481  0025F4                     _isspace:
  4482                           	opt callstack 0
  4483  0025F4  FFFF               	dw	65535	; assembler added errata NOP
  4484                           
  4485                           ; BSR set to: 0
  4486                           ;incstack = 0
  4487  0025F6  0E01               	movlw	1
  4488  0025F8  0100               	movlb	0	; () banked
  4489  0025FA  6F86               	movwf	_isspace$1521& (0+255),b
  4490                           
  4491                           ; BSR set to: 0
  4492  0025FC  0E20               	movlw	32
  4493  0025FE  1980               	xorwf	isspace@c& (0+255),w,b
  4494  002600  1181               	iorwf	(isspace@c+1)& (0+255),w,b
  4495  002602  B4D8               	btfsc	status,2,c
  4496  002604  D014               	goto	l3002
  4497                           
  4498                           ; BSR set to: 0
  4499  002606  0EF7               	movlw	247
  4500  002608  6F82               	movwf	??_isspace& (0+255),b
  4501  00260A  0EFF               	movlw	255
  4502  00260C  6F83               	movwf	(??_isspace+1)& (0+255),b
  4503  00260E  C080  F084         	movff	isspace@c,??_isspace+2
  4504  002612  C081  F085         	movff	isspace@c+1,??_isspace+3
  4505  002616  5182               	movf	??_isspace& (0+255),w,b
  4506  002618  2784               	addwf	(??_isspace+2)& (0+255),f,b
  4507  00261A  5183               	movf	(??_isspace+1)& (0+255),w,b
  4508  00261C  2385               	addwfc	(??_isspace+3)& (0+255),f,b
  4509  00261E  5185               	movf	(??_isspace+3)& (0+255),w,b
  4510  002620  E104               	bnz	u2230
  4511  002622  0E05               	movlw	5
  4512  002624  5D84               	subwf	(??_isspace+2)& (0+255),w,b
  4513  002626  A0D8               	btfss	status,0,c
  4514  002628  D002               	goto	l3002
  4515  00262A                     u2230:
  4516                           
  4517                           ; BSR set to: 0
  4518  00262A  0E00               	movlw	0
  4519  00262C  6F86               	movwf	_isspace$1521& (0+255),b
  4520  00262E                     l3002:
  4521  00262E  FFFF               	dw	65535	; assembler added errata NOP
  4522                           
  4523                           ; BSR set to: 0
  4524  002630  C086  F080         	movff	_isspace$1521,?_isspace
  4525  002634  6B81               	clrf	(?_isspace+1)& (0+255),b
  4526                           
  4527                           ; BSR set to: 0
  4528  002636  0012               	return		;funcret
  4529  002638  FFFF               	dw	65535	; errata NOP
  4530  00263A                     __end_of_isspace:
  4531                           	opt callstack 0
  4532                           
  4533 ;; *************** function _isdigit *****************
  4534 ;; Defined at:
  4535 ;;		line 5 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/isdigit.c"
  4536 ;; Parameters:    Size  Location     Type
  4537 ;;  c               2    0[BANK0 ] int 
  4538 ;; Auto vars:     Size  Location     Type
  4539 ;;		None
  4540 ;; Return value:  Size  Location     Type
  4541 ;;                  2    0[BANK0 ] int 
  4542 ;; Registers used:
  4543 ;;		wreg, status,2, status,0
  4544 ;; Tracked objects:
  4545 ;;		On entry : 0/0
  4546 ;;		On exit  : 0/0
  4547 ;;		Unchanged: 0/0
  4548 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4549 ;;      Params:         0       2       0       0       0       0       0
  4550 ;;      Locals:         0       0       0       0       0       0       0
  4551 ;;      Temps:          0       4       0       0       0       0       0
  4552 ;;      Totals:         0       6       0       0       0       0       0
  4553 ;;Total ram usage:        6 bytes
  4554 ;; Hardware stack levels used:    1
  4555 ;; Hardware stack levels required when called:   10
  4556 ;; This function calls:
  4557 ;;		Nothing
  4558 ;; This function is called by:
  4559 ;;		_vfpfcnvrt
  4560 ;;		_atoi
  4561 ;; This function uses a non-reentrant model
  4562 ;;
  4563                           
  4564                           	psect	text19
  4565  0027FE                     __ptext19:
  4566                           	opt callstack 0
  4567  0027FE                     _isdigit:
  4568                           	opt callstack 0
  4569  0027FE  FFFF               	dw	65535	; assembler added errata NOP
  4570                           
  4571                           ; BSR set to: 0
  4572                           ;incstack = 0
  4573  002800  0ED0               	movlw	208
  4574  002802  0100               	movlb	0	; () banked
  4575  002804  6F82               	movwf	??_isdigit& (0+255),b
  4576  002806  0EFF               	movlw	255
  4577  002808  6F83               	movwf	(??_isdigit+1)& (0+255),b
  4578  00280A  C080  F084         	movff	isdigit@c,??_isdigit+2
  4579  00280E  C081  F085         	movff	isdigit@c+1,??_isdigit+3
  4580  002812  5182               	movf	??_isdigit& (0+255),w,b
  4581  002814  2784               	addwf	(??_isdigit+2)& (0+255),f,b
  4582  002816  5183               	movf	(??_isdigit+1)& (0+255),w,b
  4583  002818  2385               	addwfc	(??_isdigit+3)& (0+255),f,b
  4584  00281A  5185               	movf	(??_isdigit+3)& (0+255),w,b
  4585  00281C  E106               	bnz	u2070
  4586  00281E  0E0A               	movlw	10
  4587  002820  5D84               	subwf	(??_isdigit+2)& (0+255),w,b
  4588  002822  B0D8               	btfsc	status,0,c
  4589  002824  D002               	goto	u2070
  4590  002826  0E01               	movlw	1
  4591  002828  D002               	goto	u2080
  4592  00282A                     u2070:
  4593  00282A  FFFF               	dw	65535	; assembler added errata NOP
  4594  00282C  0E00               	movlw	0
  4595  00282E                     u2080:
  4596  00282E  FFFF               	dw	65535	; assembler added errata NOP
  4597  002830  6F80               	movwf	?_isdigit& (0+255),b
  4598  002832  6B81               	clrf	(?_isdigit+1)& (0+255),b
  4599                           
  4600                           ; BSR set to: 0
  4601  002834  0012               	return		;funcret
  4602  002836  FFFF               	dw	65535	; errata NOP
  4603  002838                     __end_of_isdigit:
  4604                           	opt callstack 0
  4605                           
  4606 ;; *************** function _setData *****************
  4607 ;; Defined at:
  4608 ;;		line 46 in file "eeprom.c"
  4609 ;; Parameters:    Size  Location     Type
  4610 ;;  full            1    wreg     unsigned char 
  4611 ;; Auto vars:     Size  Location     Type
  4612 ;;  full            1    4[BANK0 ] unsigned char 
  4613 ;;  data1           1    3[BANK0 ] unsigned char 
  4614 ;;  data0           1    2[BANK0 ] unsigned char 
  4615 ;; Return value:  Size  Location     Type
  4616 ;;                  1    wreg      void 
  4617 ;; Registers used:
  4618 ;;		wreg, status,2, cstack
  4619 ;; Tracked objects:
  4620 ;;		On entry : 0/0
  4621 ;;		On exit  : 0/0
  4622 ;;		Unchanged: 0/0
  4623 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4624 ;;      Params:         0       0       0       0       0       0       0
  4625 ;;      Locals:         0       3       0       0       0       0       0
  4626 ;;      Temps:          0       0       0       0       0       0       0
  4627 ;;      Totals:         0       3       0       0       0       0       0
  4628 ;;Total ram usage:        3 bytes
  4629 ;; Hardware stack levels used:    1
  4630 ;; Hardware stack levels required when called:   11
  4631 ;; This function calls:
  4632 ;;		_writeEEPROM
  4633 ;; This function is called by:
  4634 ;;		_setFrequency
  4635 ;; This function uses a non-reentrant model
  4636 ;;
  4637                           
  4638                           	psect	text20
  4639  002032                     __ptext20:
  4640                           	opt callstack 0
  4641  002032                     _setData:
  4642                           	opt callstack 0
  4643  002032  FFFF               	dw	65535	; assembler added errata NOP
  4644                           
  4645                           ; BSR set to: 0
  4646                           ;incstack = 0
  4647                           ;setData@full stored from wreg
  4648  002034  0100               	movlb	0	; () banked
  4649  002036  6F84               	movwf	setData@full& (0+255),b
  4650                           
  4651                           ;eeprom.c: 47:     unsigned char data0 = frequency & 0x00FF;
  4652  002038  C0F4  F082         	movff	_frequency,setData@data0
  4653                           
  4654                           ;eeprom.c: 48:     unsigned char data1 = frequency >> 8;
  4655  00203C  0100               	movlb	0	; () banked
  4656  00203E  51F5               	movf	(_frequency+1)& (0+255),w,b
  4657  002040  6F83               	movwf	setData@data1& (0+255),b
  4658                           
  4659                           ; BSR set to: 0
  4660                           ;eeprom.c: 49:     if(full)writeEEPROM(data0 ,0);
  4661  002042  5184               	movf	setData@full& (0+255),w,b
  4662  002044  B4D8               	btfsc	status,2,c
  4663  002046  D005               	goto	l3696
  4664                           
  4665                           ; BSR set to: 0
  4666  002048  0E00               	movlw	0
  4667  00204A  6F80               	movwf	writeEEPROM@address& (0+255),b
  4668  00204C  5182               	movf	setData@data0& (0+255),w,b
  4669  00204E  EC88  F014         	call	_writeEEPROM
  4670  002052                     l3696:
  4671  002052  FFFF               	dw	65535	; assembler added errata NOP
  4672                           
  4673                           ;eeprom.c: 50:     if(full)writeEEPROM(data1 ,1);
  4674  002054  0100               	movlb	0	; () banked
  4675  002056  5184               	movf	setData@full& (0+255),w,b
  4676  002058  B4D8               	btfsc	status,2,c
  4677  00205A  D005               	goto	l70
  4678                           
  4679                           ; BSR set to: 0
  4680  00205C  0E01               	movlw	1
  4681  00205E  6F80               	movwf	writeEEPROM@address& (0+255),b
  4682  002060  5183               	movf	setData@data1& (0+255),w,b
  4683  002062  EC88  F014         	call	_writeEEPROM
  4684  002066                     l70:
  4685  002066  FFFF               	dw	65535	; assembler added errata NOP
  4686                           
  4687                           ;eeprom.c: 51:     writeEEPROM(months ,2);
  4688  002068  0E02               	movlw	2
  4689  00206A  0100               	movlb	0	; () banked
  4690  00206C  6F80               	movwf	writeEEPROM@address& (0+255),b
  4691  00206E  51FE               	movf	_months& (0+255),w,b
  4692  002070  EC88  F014         	call	_writeEEPROM
  4693                           
  4694                           ;eeprom.c: 52:     writeEEPROM(days ,3);
  4695  002074  0E03               	movlw	3
  4696  002076  0100               	movlb	0	; () banked
  4697  002078  6F80               	movwf	writeEEPROM@address& (0+255),b
  4698  00207A  51FD               	movf	_days& (0+255),w,b
  4699  00207C  EC88  F014         	call	_writeEEPROM
  4700                           
  4701                           ;eeprom.c: 53:     writeEEPROM(hours ,4);
  4702  002080  0E04               	movlw	4
  4703  002082  0100               	movlb	0	; () banked
  4704  002084  6F80               	movwf	writeEEPROM@address& (0+255),b
  4705  002086  51FC               	movf	_hours& (0+255),w,b
  4706  002088  EC88  F014         	call	_writeEEPROM
  4707                           
  4708                           ;eeprom.c: 54:     writeEEPROM(minutes ,5);
  4709  00208C  0E05               	movlw	5
  4710  00208E  0100               	movlb	0	; () banked
  4711  002090  6F80               	movwf	writeEEPROM@address& (0+255),b
  4712  002092  51FB               	movf	_minutes& (0+255),w,b
  4713  002094  EC88  F014         	call	_writeEEPROM
  4714                           
  4715                           ;eeprom.c: 55:     writeEEPROM(functionalStat ,6);
  4716  002098  0E06               	movlw	6
  4717  00209A  0100               	movlb	0	; () banked
  4718  00209C  6F80               	movwf	writeEEPROM@address& (0+255),b
  4719  00209E  51F6               	movf	_functionalStat& (0+255),w,b
  4720  0020A0  EC88  F014         	call	_writeEEPROM
  4721  0020A4  0012               	return		;funcret
  4722  0020A6  FFFF               	dw	65535	; errata NOP
  4723  0020A8                     __end_of_setData:
  4724                           	opt callstack 0
  4725                           
  4726 ;; *************** function _writeEEPROM *****************
  4727 ;; Defined at:
  4728 ;;		line 15 in file "eeprom.c"
  4729 ;; Parameters:    Size  Location     Type
  4730 ;;  data            1    wreg     unsigned char 
  4731 ;;  address         1    0[BANK0 ] unsigned char 
  4732 ;; Auto vars:     Size  Location     Type
  4733 ;;  data            1    1[BANK0 ] unsigned char 
  4734 ;; Return value:  Size  Location     Type
  4735 ;;                  1    wreg      void 
  4736 ;; Registers used:
  4737 ;;		wreg, status,2
  4738 ;; Tracked objects:
  4739 ;;		On entry : 0/0
  4740 ;;		On exit  : 0/0
  4741 ;;		Unchanged: 0/0
  4742 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4743 ;;      Params:         0       1       0       0       0       0       0
  4744 ;;      Locals:         0       1       0       0       0       0       0
  4745 ;;      Temps:          0       0       0       0       0       0       0
  4746 ;;      Totals:         0       2       0       0       0       0       0
  4747 ;;Total ram usage:        2 bytes
  4748 ;; Hardware stack levels used:    1
  4749 ;; Hardware stack levels required when called:   10
  4750 ;; This function calls:
  4751 ;;		Nothing
  4752 ;; This function is called by:
  4753 ;;		_setData
  4754 ;; This function uses a non-reentrant model
  4755 ;;
  4756                           
  4757                           	psect	text21
  4758  002910                     __ptext21:
  4759                           	opt callstack 0
  4760  002910                     _writeEEPROM:
  4761                           	opt callstack 0
  4762  002910  FFFF               	dw	65535	; assembler added errata NOP
  4763                           
  4764                           ;incstack = 0
  4765                           ;writeEEPROM@data stored from wreg
  4766  002912  0100               	movlb	0	; () banked
  4767  002914  6F81               	movwf	writeEEPROM@data& (0+255),b
  4768                           
  4769                           ;eeprom.c: 16:     EEADR = address;
  4770  002916  C080  FFA9         	movff	writeEEPROM@address,4009	;volatile
  4771                           
  4772                           ;eeprom.c: 17:     EEDATA = data;
  4773  00291A  C081  FFA8         	movff	writeEEPROM@data,4008	;volatile
  4774                           
  4775                           ;eeprom.c: 19:     EECON1bits.EEPGD = 0;
  4776  00291E  9EA6               	bcf	4006,7,c	;volsfr
  4777                           
  4778                           ;eeprom.c: 20:     EECON1bits.CFGS = 0;
  4779  002920  9CA6               	bcf	4006,6,c	;volsfr
  4780                           
  4781                           ;eeprom.c: 21:     EECON1bits.WREN = 1;
  4782  002922  84A6               	bsf	4006,2,c	;volsfr
  4783                           
  4784                           ;eeprom.c: 23:     INTCONbits.GIE = 0;
  4785  002924  9EF2               	bcf	4082,7,c	;volatile
  4786                           
  4787                           ;eeprom.c: 24:     EECON2 = 0x55;
  4788  002926  0E55               	movlw	85
  4789  002928  6EA7               	movwf	4007,c	;volsfr
  4790                           
  4791                           ;eeprom.c: 25:     EECON2 = 0xAA;
  4792  00292A  0EAA               	movlw	170
  4793  00292C  6EA7               	movwf	4007,c	;volsfr
  4794                           
  4795                           ;eeprom.c: 26:     EECON1bits.WR = 1;
  4796  00292E  82A6               	bsf	4006,1,c	;volsfr
  4797                           
  4798                           ;eeprom.c: 27:     INTCONbits.GIE = 1;
  4799  002930  8EF2               	bsf	4082,7,c	;volatile
  4800  002932                     l60:
  4801  002932  FFFF               	dw	65535	; assembler added errata NOP
  4802  002934  B8A1               	btfsc	4001,4,c	;volatile
  4803  002936  0012               	return		;funcret
  4804  002938  FFFF               	dw	65535	; assembler added errata NOP
  4805  00293A  D7FB               	goto	l60
  4806  00293C  FFFF               	dw	65535	; errata NOP
  4807  00293E                     __end_of_writeEEPROM:
  4808                           	opt callstack 0
  4809                           
  4810 ;; *************** function _beep *****************
  4811 ;; Defined at:
  4812 ;;		line 145 in file "main.c"
  4813 ;; Parameters:    Size  Location     Type
  4814 ;;  ms              2    6[BANK0 ] int 
  4815 ;; Auto vars:     Size  Location     Type
  4816 ;;		None
  4817 ;; Return value:  Size  Location     Type
  4818 ;;                  1    wreg      void 
  4819 ;; Registers used:
  4820 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  4821 ;; Tracked objects:
  4822 ;;		On entry : 0/0
  4823 ;;		On exit  : 0/0
  4824 ;;		Unchanged: 0/0
  4825 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4826 ;;      Params:         0       2       0       0       0       0       0
  4827 ;;      Locals:         0       0       0       0       0       0       0
  4828 ;;      Temps:          0       0       0       0       0       0       0
  4829 ;;      Totals:         0       2       0       0       0       0       0
  4830 ;;Total ram usage:        2 bytes
  4831 ;; Hardware stack levels used:    1
  4832 ;; Hardware stack levels required when called:   11
  4833 ;; This function calls:
  4834 ;;		___wmul
  4835 ;; This function is called by:
  4836 ;;		_main
  4837 ;;		_setFrequency
  4838 ;; This function uses a non-reentrant model
  4839 ;;
  4840                           
  4841                           	psect	text22
  4842  002382                     __ptext22:
  4843                           	opt callstack 0
  4844  002382                     _beep:
  4845                           	opt callstack 0
  4846  002382  FFFF               	dw	65535	; assembler added errata NOP
  4847                           
  4848                           ;main.c: 146:     ms *= 5;
  4849                           
  4850                           ;incstack = 0
  4851  002384  C086  F080         	movff	beep@ms,___wmul@multiplier
  4852  002388  C087  F081         	movff	beep@ms+1,___wmul@multiplier+1
  4853  00238C  0E00               	movlw	0
  4854  00238E  0100               	movlb	0	; () banked
  4855  002390  6F83               	movwf	(___wmul@multiplicand+1)& (0+255),b
  4856  002392  0E05               	movlw	5
  4857  002394  6F82               	movwf	___wmul@multiplicand& (0+255),b
  4858  002396  EC9F  F014         	call	___wmul	;wreg free
  4859  00239A  C080  F086         	movff	?___wmul,beep@ms
  4860  00239E  C081  F087         	movff	?___wmul+1,beep@ms+1
  4861  0023A2  0100               	movlb	0	; () banked
  4862  0023A4  D00F               	goto	L10
  4863  0023A6                     l243:
  4864  0023A6  FFFF               	dw	65535	; assembler added errata NOP
  4865                           
  4866                           ; BSR set to: 0
  4867                           ;main.c: 148:         PORTDbits.RD0 = 1;
  4868  0023A8  8083               	bsf	3971,0,c	;volatile
  4869                           
  4870                           ; BSR set to: 0
  4871                           ;main.c: 149:         _delay((unsigned long)((100)*(12000000/4000000.0)));
  4872  0023AA  0E4B               	movlw	75
  4873  0023AC                     u3897:
  4874  0023AC  FFFF               	dw	65535	; errata NOP
  4875  0023AE  2EE8               	decfsz	wreg,f,c
  4876  0023B0  D7FD               	bra	u3897
  4877                           
  4878                           ;main.c: 150:         PORTDbits.RD0 = 0;
  4879  0023B2  9083               	bcf	3971,0,c	;volatile
  4880                           
  4881                           ;main.c: 151:         _delay((unsigned long)((100)*(12000000/4000000.0)));
  4882  0023B4  0E4B               	movlw	75
  4883  0023B6                     u3907:
  4884  0023B6  FFFF               	dw	65535	; errata NOP
  4885  0023B8  2EE8               	decfsz	wreg,f,c
  4886  0023BA  D7FD               	bra	u3907
  4887                           
  4888                           ;main.c: 152:     }
  4889  0023BC  0100               	movlb	0	; () banked
  4890  0023BE  0786               	decf	beep@ms& (0+255),f,b
  4891  0023C0  A0D8               	btfss	status,0,c
  4892  0023C2  0787               	decf	(beep@ms+1)& (0+255),f,b
  4893  0023C4                     L10:
  4894  0023C4  FFFF               	dw	65535	; assembler added errata NOP
  4895  0023C6  BF87               	btfsc	(beep@ms+1)& (0+255),7,b
  4896  0023C8  D005               	goto	u3250
  4897  0023CA  5187               	movf	(beep@ms+1)& (0+255),w,b
  4898  0023CC  E1EC               	bnz	l243
  4899  0023CE  0586               	decf	beep@ms& (0+255),w,b
  4900  0023D0  B0D8               	btfsc	status,0,c
  4901  0023D2  D7E9               	goto	l243
  4902  0023D4                     u3250:
  4903  0023D4  FFFF               	dw	65535	; assembler added errata NOP
  4904                           
  4905                           ; BSR set to: 0
  4906  0023D6  0012               	return		;funcret
  4907  0023D8  FFFF               	dw	65535	; errata NOP
  4908  0023DA                     __end_of_beep:
  4909                           	opt callstack 0
  4910                           
  4911 ;; *************** function ___wmul *****************
  4912 ;; Defined at:
  4913 ;;		line 15 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/Umul16.c"
  4914 ;; Parameters:    Size  Location     Type
  4915 ;;  multiplier      2    0[BANK0 ] unsigned int 
  4916 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  4917 ;; Auto vars:     Size  Location     Type
  4918 ;;  product         2    4[BANK0 ] unsigned int 
  4919 ;; Return value:  Size  Location     Type
  4920 ;;                  2    0[BANK0 ] unsigned int 
  4921 ;; Registers used:
  4922 ;;		wreg, status,2, status,0, prodl, prodh
  4923 ;; Tracked objects:
  4924 ;;		On entry : 0/0
  4925 ;;		On exit  : 0/0
  4926 ;;		Unchanged: 0/0
  4927 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4928 ;;      Params:         0       4       0       0       0       0       0
  4929 ;;      Locals:         0       2       0       0       0       0       0
  4930 ;;      Temps:          0       0       0       0       0       0       0
  4931 ;;      Totals:         0       6       0       0       0       0       0
  4932 ;;Total ram usage:        6 bytes
  4933 ;; Hardware stack levels used:    1
  4934 ;; Hardware stack levels required when called:   10
  4935 ;; This function calls:
  4936 ;;		Nothing
  4937 ;; This function is called by:
  4938 ;;		_beep
  4939 ;;		_atoi
  4940 ;; This function uses a non-reentrant model
  4941 ;;
  4942                           
  4943                           	psect	text23
  4944  00293E                     __ptext23:
  4945                           	opt callstack 0
  4946  00293E                     ___wmul:
  4947                           	opt callstack 0
  4948  00293E  FFFF               	dw	65535	; assembler added errata NOP
  4949                           
  4950                           ; BSR set to: 0
  4951                           ;incstack = 0
  4952  002940  0100               	movlb	0	; () banked
  4953  002942  5180               	movf	___wmul@multiplier& (0+255),w,b
  4954  002944  0382               	mulwf	___wmul@multiplicand& (0+255),b
  4955  002946  CFF3 F084          	movff	prodl,___wmul@product
  4956  00294A  CFF4 F085          	movff	prodh,___wmul@product+1
  4957  00294E  5180               	movf	___wmul@multiplier& (0+255),w,b
  4958  002950  0383               	mulwf	(___wmul@multiplicand+1)& (0+255),b
  4959  002952  50F3               	movf	prodl,w,c
  4960  002954  2785               	addwf	(___wmul@product+1)& (0+255),f,b
  4961  002956  5181               	movf	(___wmul@multiplier+1)& (0+255),w,b
  4962  002958  0382               	mulwf	___wmul@multiplicand& (0+255),b
  4963  00295A  50F3               	movf	prodl,w,c
  4964  00295C  2785               	addwf	(___wmul@product+1)& (0+255),f,b
  4965                           
  4966                           ; BSR set to: 0
  4967  00295E  C084  F080         	movff	___wmul@product,?___wmul
  4968  002962  C085  F081         	movff	___wmul@product+1,?___wmul+1
  4969                           
  4970                           ; BSR set to: 0
  4971  002966  0012               	return		;funcret
  4972  002968  FFFF               	dw	65535	; errata NOP
  4973  00296A                     __end_of___wmul:
  4974                           	opt callstack 0
  4975                           
  4976 ;; *************** function _getData *****************
  4977 ;; Defined at:
  4978 ;;		line 33 in file "eeprom.c"
  4979 ;; Parameters:    Size  Location     Type
  4980 ;;		None
  4981 ;; Auto vars:     Size  Location     Type
  4982 ;;  aux1            1    4[BANK0 ] unsigned char 
  4983 ;;  aux0            1    3[BANK0 ] unsigned char 
  4984 ;; Return value:  Size  Location     Type
  4985 ;;                  1    wreg      void 
  4986 ;; Registers used:
  4987 ;;		wreg, status,2, status,0, cstack
  4988 ;; Tracked objects:
  4989 ;;		On entry : 0/0
  4990 ;;		On exit  : 0/0
  4991 ;;		Unchanged: 0/0
  4992 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4993 ;;      Params:         0       0       0       0       0       0       0
  4994 ;;      Locals:         0       2       0       0       0       0       0
  4995 ;;      Temps:          0       2       0       0       0       0       0
  4996 ;;      Totals:         0       4       0       0       0       0       0
  4997 ;;Total ram usage:        4 bytes
  4998 ;; Hardware stack levels used:    1
  4999 ;; Hardware stack levels required when called:   11
  5000 ;; This function calls:
  5001 ;;		_readEEPROM
  5002 ;; This function is called by:
  5003 ;;		_main
  5004 ;; This function uses a non-reentrant model
  5005 ;;
  5006                           
  5007                           	psect	text24
  5008  002188                     __ptext24:
  5009                           	opt callstack 0
  5010  002188                     _getData:
  5011                           	opt callstack 0
  5012  002188  FFFF               	dw	65535	; assembler added errata NOP
  5013                           
  5014                           ;eeprom.c: 34:     unsigned char aux0 = readEEPROM(0);
  5015                           
  5016                           ; BSR set to: 0
  5017                           ;incstack = 0
  5018  00218A  0E00               	movlw	0
  5019  00218C  EC26  F015         	call	_readEEPROM
  5020  002190  0100               	movlb	0	; () banked
  5021  002192  6F83               	movwf	getData@aux0& (0+255),b
  5022                           
  5023                           ;eeprom.c: 35:     unsigned char aux1 = readEEPROM(1);
  5024  002194  0E01               	movlw	1
  5025  002196  EC26  F015         	call	_readEEPROM
  5026  00219A  0100               	movlb	0	; () banked
  5027  00219C  6F84               	movwf	getData@aux1& (0+255),b
  5028                           
  5029                           ; BSR set to: 0
  5030                           ;eeprom.c: 36:     frequency = 0;
  5031  00219E  0E00               	movlw	0
  5032  0021A0  6FF5               	movwf	(_frequency+1)& (0+255),b
  5033  0021A2  0E00               	movlw	0
  5034  0021A4  6FF4               	movwf	_frequency& (0+255),b
  5035                           
  5036                           ; BSR set to: 0
  5037                           ;eeprom.c: 37:     frequency = (aux1 << 8) | aux0;
  5038  0021A6  5183               	movf	getData@aux0& (0+255),w,b
  5039  0021A8  C084  F081         	movff	getData@aux1,??_getData
  5040  0021AC  6B82               	clrf	(??_getData+1)& (0+255),b
  5041  0021AE  C081  F082         	movff	??_getData,??_getData+1
  5042  0021B2  6B81               	clrf	??_getData& (0+255),b
  5043  0021B4  1181               	iorwf	??_getData& (0+255),w,b
  5044  0021B6  6FF4               	movwf	_frequency& (0+255),b
  5045  0021B8  5182               	movf	(??_getData+1)& (0+255),w,b
  5046  0021BA  6FF5               	movwf	(_frequency+1)& (0+255),b
  5047                           
  5048                           ; BSR set to: 0
  5049                           ;eeprom.c: 38:     months = readEEPROM(2);
  5050  0021BC  0E02               	movlw	2
  5051  0021BE  EC26  F015         	call	_readEEPROM
  5052  0021C2  0100               	movlb	0	; () banked
  5053  0021C4  6FFE               	movwf	_months& (0+255),b
  5054                           
  5055                           ; BSR set to: 0
  5056                           ;eeprom.c: 39:     days = readEEPROM(3);
  5057  0021C6  0E03               	movlw	3
  5058  0021C8  EC26  F015         	call	_readEEPROM
  5059  0021CC  0100               	movlb	0	; () banked
  5060  0021CE  6FFD               	movwf	_days& (0+255),b
  5061                           
  5062                           ; BSR set to: 0
  5063                           ;eeprom.c: 40:     hours = readEEPROM(4);
  5064  0021D0  0E04               	movlw	4
  5065  0021D2  EC26  F015         	call	_readEEPROM
  5066  0021D6  0100               	movlb	0	; () banked
  5067  0021D8  6FFC               	movwf	_hours& (0+255),b
  5068                           
  5069                           ; BSR set to: 0
  5070                           ;eeprom.c: 41:     minutes = readEEPROM(5);
  5071  0021DA  0E05               	movlw	5
  5072  0021DC  EC26  F015         	call	_readEEPROM
  5073  0021E0  0100               	movlb	0	; () banked
  5074  0021E2  6FFB               	movwf	_minutes& (0+255),b
  5075                           
  5076                           ; BSR set to: 0
  5077                           ;eeprom.c: 42:     functionalStat = readEEPROM(6);
  5078  0021E4  0E06               	movlw	6
  5079  0021E6  EC26  F015         	call	_readEEPROM
  5080  0021EA  0100               	movlb	0	; () banked
  5081  0021EC  6FF6               	movwf	_functionalStat& (0+255),b
  5082                           
  5083                           ; BSR set to: 0
  5084  0021EE  0012               	return		;funcret
  5085  0021F0  FFFF               	dw	65535	; errata NOP
  5086  0021F2                     __end_of_getData:
  5087                           	opt callstack 0
  5088                           
  5089 ;; *************** function _readEEPROM *****************
  5090 ;; Defined at:
  5091 ;;		line 7 in file "eeprom.c"
  5092 ;; Parameters:    Size  Location     Type
  5093 ;;  address         1    wreg     unsigned char 
  5094 ;; Auto vars:     Size  Location     Type
  5095 ;;  address         1    0[BANK0 ] unsigned char 
  5096 ;; Return value:  Size  Location     Type
  5097 ;;                  1    wreg      unsigned char 
  5098 ;; Registers used:
  5099 ;;		wreg, status,2
  5100 ;; Tracked objects:
  5101 ;;		On entry : 0/0
  5102 ;;		On exit  : 0/0
  5103 ;;		Unchanged: 0/0
  5104 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5105 ;;      Params:         0       0       0       0       0       0       0
  5106 ;;      Locals:         0       1       0       0       0       0       0
  5107 ;;      Temps:          0       0       0       0       0       0       0
  5108 ;;      Totals:         0       1       0       0       0       0       0
  5109 ;;Total ram usage:        1 bytes
  5110 ;; Hardware stack levels used:    1
  5111 ;; Hardware stack levels required when called:   10
  5112 ;; This function calls:
  5113 ;;		Nothing
  5114 ;; This function is called by:
  5115 ;;		_getData
  5116 ;; This function uses a non-reentrant model
  5117 ;;
  5118                           
  5119                           	psect	text25
  5120  002A4C                     __ptext25:
  5121                           	opt callstack 0
  5122  002A4C                     _readEEPROM:
  5123                           	opt callstack 0
  5124  002A4C  FFFF               	dw	65535	; assembler added errata NOP
  5125                           
  5126                           ; BSR set to: 0
  5127                           ;incstack = 0
  5128                           ;readEEPROM@address stored from wreg
  5129  002A4E  0100               	movlb	0	; () banked
  5130  002A50  6F80               	movwf	readEEPROM@address& (0+255),b
  5131                           
  5132                           ;eeprom.c: 8:     EEADR = address;
  5133  002A52  C080  FFA9         	movff	readEEPROM@address,4009	;volatile
  5134                           
  5135                           ;eeprom.c: 9:     EECON1bits.EEPGD = 0;
  5136  002A56  9EA6               	bcf	4006,7,c	;volsfr
  5137                           
  5138                           ;eeprom.c: 10:     EECON1bits.CFGS = 0;
  5139  002A58  9CA6               	bcf	4006,6,c	;volsfr
  5140                           
  5141                           ;eeprom.c: 11:     EECON1bits.RD = 1;
  5142  002A5A  80A6               	bsf	4006,0,c	;volsfr
  5143                           
  5144                           ;eeprom.c: 12:     return EEDATA;
  5145  002A5C  50A8               	movf	4008,w,c	;volatile
  5146  002A5E  0012               	return		;funcret
  5147  002A60  FFFF               	dw	65535	; errata NOP
  5148  002A62                     __end_of_readEEPROM:
  5149                           	opt callstack 0
  5150                           
  5151 ;; *************** function _config *****************
  5152 ;; Defined at:
  5153 ;;		line 34 in file "main.c"
  5154 ;; Parameters:    Size  Location     Type
  5155 ;;		None
  5156 ;; Auto vars:     Size  Location     Type
  5157 ;;		None
  5158 ;; Return value:  Size  Location     Type
  5159 ;;                  1    wreg      void 
  5160 ;; Registers used:
  5161 ;;		wreg, status,2, status,0, cstack
  5162 ;; Tracked objects:
  5163 ;;		On entry : 0/0
  5164 ;;		On exit  : 0/0
  5165 ;;		Unchanged: 0/0
  5166 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5167 ;;      Params:         0       0       0       0       0       0       0
  5168 ;;      Locals:         0       0       0       0       0       0       0
  5169 ;;      Temps:          0       0       0       0       0       0       0
  5170 ;;      Totals:         0       0       0       0       0       0       0
  5171 ;;Total ram usage:        0 bytes
  5172 ;; Hardware stack levels used:    1
  5173 ;; Hardware stack levels required when called:   14
  5174 ;; This function calls:
  5175 ;;		_initLCD
  5176 ;; This function is called by:
  5177 ;;		_main
  5178 ;; This function uses a non-reentrant model
  5179 ;;
  5180                           
  5181                           	psect	text26
  5182  002784                     __ptext26:
  5183                           	opt callstack 0
  5184  002784                     _config:
  5185                           	opt callstack 0
  5186  002784  FFFF               	dw	65535	; assembler added errata NOP
  5187                           
  5188                           ;main.c: 36:     OSCCON = 0b00000000;
  5189                           
  5190                           ;incstack = 0
  5191  002786  0E00               	movlw	0
  5192  002788  6ED3               	movwf	4051,c	;volatile
  5193                           
  5194                           ;main.c: 38:     INTCON = 0b01100000;
  5195  00278A  0E60               	movlw	96
  5196  00278C  6EF2               	movwf	4082,c	;volatile
  5197                           
  5198                           ;main.c: 39:     PIE1 = 0b00000011;
  5199  00278E  0E03               	movlw	3
  5200  002790  6E9D               	movwf	3997,c	;volatile
  5201                           
  5202                           ;main.c: 41:     TRISA = 0b00011111;
  5203  002792  0E1F               	movlw	31
  5204  002794  6E92               	movwf	3986,c	;volatile
  5205                           
  5206                           ;main.c: 42:     TRISB = 0b00000000;
  5207  002796  0E00               	movlw	0
  5208  002798  6E93               	movwf	3987,c	;volatile
  5209                           
  5210                           ;main.c: 43:     TRISC = 0b11111111;
  5211  00279A  6894               	setf	3988,c	;volatile
  5212                           
  5213                           ;main.c: 44:     TRISD = 0b00000000;
  5214  00279C  0E00               	movlw	0
  5215  00279E  6E95               	movwf	3989,c	;volatile
  5216                           
  5217                           ;main.c: 45:     TRISE = 0b00001000;
  5218  0027A0  0E08               	movlw	8
  5219  0027A2  6E96               	movwf	3990,c	;volatile
  5220                           
  5221                           ;main.c: 47:     T1CON = 0b10110001;
  5222  0027A4  0EB1               	movlw	177
  5223  0027A6  6ECD               	movwf	4045,c	;volatile
  5224                           
  5225                           ;main.c: 49:     T0CON = 0b10000000;
  5226  0027A8  0E80               	movlw	128
  5227  0027AA  6ED5               	movwf	4053,c	;volatile
  5228                           
  5229                           ;main.c: 51:     ADCON0 = 0b11000001;
  5230  0027AC  0EC1               	movlw	193
  5231  0027AE  6EC2               	movwf	4034,c	;volatile
  5232                           
  5233                           ;main.c: 52:     ADCON1 = 0b01001101;
  5234  0027B0  0E4D               	movlw	77
  5235  0027B2  6EC1               	movwf	4033,c	;volatile
  5236                           
  5237                           ;main.c: 54:     initLCD();
  5238  0027B4  EC69  F012         	call	_initLCD	;wreg free
  5239                           
  5240                           ;main.c: 56:     ADCON0bits.GO = 1;
  5241  0027B8  84C2               	bsf	4034,2,c	;volatile
  5242                           
  5243                           ;main.c: 57:     T1CONbits.TMR1ON = 1;
  5244  0027BA  80CD               	bsf	4045,0,c	;volatile
  5245                           
  5246                           ;main.c: 58:     INTCONbits.GIE = 1;
  5247  0027BC  8EF2               	bsf	4082,7,c	;volatile
  5248  0027BE  0012               	return		;funcret
  5249  0027C0  FFFF               	dw	65535	; errata NOP
  5250  0027C2                     __end_of_config:
  5251                           	opt callstack 0
  5252                           
  5253 ;; *************** function _initLCD *****************
  5254 ;; Defined at:
  5255 ;;		line 5 in file "lcd.c"
  5256 ;; Parameters:    Size  Location     Type
  5257 ;;		None
  5258 ;; Auto vars:     Size  Location     Type
  5259 ;;		None
  5260 ;; Return value:  Size  Location     Type
  5261 ;;                  1    wreg      void 
  5262 ;; Registers used:
  5263 ;;		wreg, status,2, status,0, cstack
  5264 ;; Tracked objects:
  5265 ;;		On entry : 0/0
  5266 ;;		On exit  : 0/0
  5267 ;;		Unchanged: 0/0
  5268 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5269 ;;      Params:         0       0       0       0       0       0       0
  5270 ;;      Locals:         0       0       0       0       0       0       0
  5271 ;;      Temps:          0       2       0       0       0       0       0
  5272 ;;      Totals:         0       2       0       0       0       0       0
  5273 ;;Total ram usage:        2 bytes
  5274 ;; Hardware stack levels used:    1
  5275 ;; Hardware stack levels required when called:   13
  5276 ;; This function calls:
  5277 ;;		_OpenXLCD
  5278 ;;		_SendCMDLCD
  5279 ;; This function is called by:
  5280 ;;		_config
  5281 ;; This function uses a non-reentrant model
  5282 ;;
  5283                           
  5284                           	psect	text27
  5285  0024D2                     __ptext27:
  5286                           	opt callstack 0
  5287  0024D2                     _initLCD:
  5288                           	opt callstack 0
  5289  0024D2  FFFF               	dw	65535	; assembler added errata NOP
  5290                           
  5291                           ;lcd.c: 6:     OpenXLCD(0b00101100 & 0b00111000);
  5292                           
  5293                           ;incstack = 0
  5294  0024D4  0E28               	movlw	40
  5295  0024D6  ECEB  F00C         	call	_OpenXLCD
  5296                           
  5297                           ;lcd.c: 7:     _delay((unsigned long)((100)*(12000000/4000.0)));
  5298  0024DA  0E02               	movlw	2
  5299  0024DC  0100               	movlb	0	; () banked
  5300  0024DE  6F84               	movwf	(??_initLCD+1)& (0+255),b
  5301  0024E0  0E25               	movlw	37
  5302  0024E2  6F83               	movwf	??_initLCD& (0+255),b
  5303  0024E4  0E63               	movlw	99
  5304  0024E6                     u3917:
  5305  0024E6  FFFF               	dw	65535	; errata NOP
  5306  0024E8  2EE8               	decfsz	wreg,f,c
  5307  0024EA  D7FD               	bra	u3917
  5308  0024EC  2F83               	decfsz	??_initLCD& (0+255),f,b
  5309  0024EE  D7FB               	bra	u3917
  5310  0024F0  2F84               	decfsz	(??_initLCD+1)& (0+255),f,b
  5311  0024F2  D7F9               	bra	u3917
  5312  0024F4  F000               	nop	
  5313                           
  5314                           ;lcd.c: 8:     SendCMDLCD(0b00001101);
  5315  0024F6  0E0D               	movlw	13
  5316  0024F8  ECE0  F014         	call	_SendCMDLCD
  5317                           
  5318                           ;lcd.c: 9:     SendCMDLCD(0b00000110);
  5319  0024FC  0E06               	movlw	6
  5320  0024FE  ECE0  F014         	call	_SendCMDLCD
  5321                           
  5322                           ;lcd.c: 10:     _delay((unsigned long)((50)*(12000000/4000.0)));
  5323  002502  0E93               	movlw	147
  5324  002504  0100               	movlb	0	; () banked
  5325  002506  6F83               	movwf	??_initLCD& (0+255),b
  5326  002508  0E31               	movlw	49
  5327  00250A                     u3927:
  5328  00250A  FFFF               	dw	65535	; errata NOP
  5329  00250C  2EE8               	decfsz	wreg,f,c
  5330  00250E  D7FD               	bra	u3927
  5331  002510  2F83               	decfsz	??_initLCD& (0+255),f,b
  5332  002512  D7FB               	bra	u3927
  5333  002514  D000               	nop2	
  5334  002516  F000               	nop	
  5335  002518  0012               	return		;funcret
  5336  00251A  FFFF               	dw	65535	; errata NOP
  5337  00251C                     __end_of_initLCD:
  5338                           	opt callstack 0
  5339                           
  5340 ;; *************** function _SendCMDLCD *****************
  5341 ;; Defined at:
  5342 ;;		line 25 in file "lcd.c"
  5343 ;; Parameters:    Size  Location     Type
  5344 ;;  CMD             1    wreg     unsigned char 
  5345 ;; Auto vars:     Size  Location     Type
  5346 ;;  CMD             1    1[BANK0 ] unsigned char 
  5347 ;; Return value:  Size  Location     Type
  5348 ;;                  1    wreg      void 
  5349 ;; Registers used:
  5350 ;;		wreg, status,2, status,0, cstack
  5351 ;; Tracked objects:
  5352 ;;		On entry : 0/0
  5353 ;;		On exit  : 0/0
  5354 ;;		Unchanged: 0/0
  5355 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5356 ;;      Params:         0       0       0       0       0       0       0
  5357 ;;      Locals:         0       1       0       0       0       0       0
  5358 ;;      Temps:          0       0       0       0       0       0       0
  5359 ;;      Totals:         0       1       0       0       0       0       0
  5360 ;;Total ram usage:        1 bytes
  5361 ;; Hardware stack levels used:    1
  5362 ;; Hardware stack levels required when called:   12
  5363 ;; This function calls:
  5364 ;;		_BusyXLCD
  5365 ;;		_WriteCmdXLCD
  5366 ;; This function is called by:
  5367 ;;		_initLCD
  5368 ;; This function uses a non-reentrant model
  5369 ;;
  5370                           
  5371                           	psect	text28
  5372  0029C0                     __ptext28:
  5373                           	opt callstack 0
  5374  0029C0                     _SendCMDLCD:
  5375                           	opt callstack 0
  5376  0029C0  FFFF               	dw	65535	; assembler added errata NOP
  5377                           
  5378                           ;incstack = 0
  5379                           ;SendCMDLCD@CMD stored from wreg
  5380  0029C2  0100               	movlb	0	; () banked
  5381  0029C4  6F81               	movwf	SendCMDLCD@CMD& (0+255),b
  5382  0029C6  FFFF               	dw	65535	; assembler added errata NOP
  5383                           
  5384                           ;lcd.c: 26:     while(BusyXLCD())continue;
  5385  0029C8  ECEF  F014         	call	_BusyXLCD	;wreg free
  5386  0029CC  0900               	iorlw	0
  5387  0029CE  A4D8               	btfss	status,2,c
  5388  0029D0  D7FA               	goto	l3622
  5389                           
  5390                           ;lcd.c: 27:     WriteCmdXLCD(CMD);
  5391  0029D2  0100               	movlb	0	; () banked
  5392  0029D4  5181               	movf	SendCMDLCD@CMD& (0+255),w,b
  5393  0029D6  ECB3  F012         	call	_WriteCmdXLCD
  5394  0029DA  0012               	return		;funcret
  5395  0029DC  FFFF               	dw	65535	; errata NOP
  5396  0029DE                     __end_of_SendCMDLCD:
  5397                           	opt callstack 0
  5398                           
  5399 ;; *************** function _OpenXLCD *****************
  5400 ;; Defined at:
  5401 ;;		line 40 in file "lcd_pic16.c"
  5402 ;; Parameters:    Size  Location     Type
  5403 ;;  lcdtype         1    wreg     unsigned char 
  5404 ;; Auto vars:     Size  Location     Type
  5405 ;;  lcdtype         1    2[BANK0 ] unsigned char 
  5406 ;; Return value:  Size  Location     Type
  5407 ;;                  1    wreg      void 
  5408 ;; Registers used:
  5409 ;;		wreg, status,2, status,0, cstack
  5410 ;; Tracked objects:
  5411 ;;		On entry : 0/0
  5412 ;;		On exit  : 0/0
  5413 ;;		Unchanged: 0/0
  5414 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5415 ;;      Params:         0       0       0       0       0       0       0
  5416 ;;      Locals:         0       1       0       0       0       0       0
  5417 ;;      Temps:          0       1       0       0       0       0       0
  5418 ;;      Totals:         0       2       0       0       0       0       0
  5419 ;;Total ram usage:        2 bytes
  5420 ;; Hardware stack levels used:    1
  5421 ;; Hardware stack levels required when called:   12
  5422 ;; This function calls:
  5423 ;;		_BusyXLCD
  5424 ;;		_DelayPORXLCD
  5425 ;;		_SetDDRamAddr
  5426 ;;		_WriteCmdXLCD
  5427 ;; This function is called by:
  5428 ;;		_initLCD
  5429 ;; This function uses a non-reentrant model
  5430 ;;
  5431                           
  5432                           	psect	text29
  5433  0019D6                     __ptext29:
  5434                           	opt callstack 0
  5435  0019D6                     _OpenXLCD:
  5436                           	opt callstack 0
  5437  0019D6  FFFF               	dw	65535	; assembler added errata NOP
  5438                           
  5439                           ;incstack = 0
  5440                           ;OpenXLCD@lcdtype stored from wreg
  5441  0019D8  0100               	movlb	0	; () banked
  5442  0019DA  6F82               	movwf	OpenXLCD@lcdtype& (0+255),b
  5443                           
  5444                           ;lcd_pic16.c: 40: void OpenXLCD(unsigned char lcdtype);lcd_pic16.c: 41: {;lcd_pic16.c: 4
      +                          7:         PORTD &= 0x0f;
  5445  0019DC  0E0F               	movlw	15
  5446  0019DE  1683               	andwf	3971,f,c	;volatile
  5447                           
  5448                           ;lcd_pic16.c: 48:         TRISD &= 0x0F;
  5449  0019E0  0E0F               	movlw	15
  5450  0019E2  1695               	andwf	3989,f,c	;volatile
  5451                           
  5452                           ;lcd_pic16.c: 54:         TRISDbits.TRISD2 = 0;
  5453  0019E4  9495               	bcf	3989,2,c	;volatile
  5454                           
  5455                           ;lcd_pic16.c: 55:         TRISDbits.TRISD3 = 0;
  5456  0019E6  9695               	bcf	3989,3,c	;volatile
  5457                           
  5458                           ;lcd_pic16.c: 56:         TRISDbits.TRISD1 = 0;
  5459  0019E8  9295               	bcf	3989,1,c	;volatile
  5460                           
  5461                           ;lcd_pic16.c: 57:         PORTDbits.RD2 = 0;
  5462  0019EA  9483               	bcf	3971,2,c	;volatile
  5463                           
  5464                           ;lcd_pic16.c: 58:         PORTDbits.RD3 = 0;
  5465  0019EC  9683               	bcf	3971,3,c	;volatile
  5466                           
  5467                           ;lcd_pic16.c: 59:         PORTDbits.RD1 = 0;
  5468  0019EE  9283               	bcf	3971,1,c	;volatile
  5469                           
  5470                           ;lcd_pic16.c: 62:         DelayPORXLCD();
  5471  0019F0  EC0C  F015         	call	_DelayPORXLCD	;wreg free
  5472                           
  5473                           ;lcd_pic16.c: 64:        WriteCmdXLCD(0x30);
  5474  0019F4  0E30               	movlw	48
  5475  0019F6  ECB3  F012         	call	_WriteCmdXLCD
  5476                           
  5477                           ;lcd_pic16.c: 65:          _delay((unsigned long)((5)*(12000000/4000.0)));
  5478  0019FA  0E0F               	movlw	15
  5479  0019FC  0100               	movlb	0	; () banked
  5480  0019FE  6F81               	movwf	??_OpenXLCD& (0+255),b
  5481  001A00  0E9D               	movlw	157
  5482  001A02                     u3937:
  5483  001A02  FFFF               	dw	65535	; errata NOP
  5484  001A04  2EE8               	decfsz	wreg,f,c
  5485  001A06  D7FD               	bra	u3937
  5486  001A08  2F81               	decfsz	??_OpenXLCD& (0+255),f,b
  5487  001A0A  D7FB               	bra	u3937
  5488  001A0C  D000               	nop2	
  5489  001A0E  F000               	nop	
  5490                           
  5491                           ;lcd_pic16.c: 67:        WriteCmdXLCD(0x30);
  5492  001A10  0E30               	movlw	48
  5493  001A12  ECB3  F012         	call	_WriteCmdXLCD
  5494                           
  5495                           ;lcd_pic16.c: 68:          _delay((unsigned long)((1)*(12000000/4000.0)));
  5496  001A16  0E03               	movlw	3
  5497  001A18  0100               	movlb	0	; () banked
  5498  001A1A  6F81               	movwf	??_OpenXLCD& (0+255),b
  5499  001A1C  0EEB               	movlw	235
  5500  001A1E                     u3947:
  5501  001A1E  FFFF               	dw	65535	; errata NOP
  5502  001A20  2EE8               	decfsz	wreg,f,c
  5503  001A22  D7FD               	bra	u3947
  5504  001A24  2F81               	decfsz	??_OpenXLCD& (0+255),f,b
  5505  001A26  D7FB               	bra	u3947
  5506  001A28  D000               	nop2	
  5507  001A2A  F000               	nop	
  5508                           
  5509                           ;lcd_pic16.c: 71:        WriteCmdXLCD(0x32);
  5510  001A2C  0E32               	movlw	50
  5511  001A2E  ECB3  F012         	call	_WriteCmdXLCD
  5512  001A32                     l3562:
  5513  001A32  FFFF               	dw	65535	; assembler added errata NOP
  5514  001A34  ECEF  F014         	call	_BusyXLCD	;wreg free
  5515  001A38  0900               	iorlw	0
  5516  001A3A  A4D8               	btfss	status,2,c
  5517  001A3C  D7FA               	goto	l3562
  5518  001A3E                     u3090:
  5519  001A3E  FFFF               	dw	65535	; assembler added errata NOP
  5520  001A40  ECEF  F014         	call	_BusyXLCD	;wreg free
  5521  001A44  0900               	iorlw	0
  5522  001A46  A4D8               	btfss	status,2,c
  5523  001A48  D7FA               	goto	u3090
  5524                           
  5525                           ;lcd_pic16.c: 78:         WriteCmdXLCD(lcdtype);
  5526  001A4A  0100               	movlb	0	; () banked
  5527  001A4C  5182               	movf	OpenXLCD@lcdtype& (0+255),w,b
  5528  001A4E  ECB3  F012         	call	_WriteCmdXLCD
  5529  001A52                     l3568:
  5530  001A52  FFFF               	dw	65535	; assembler added errata NOP
  5531  001A54  ECEF  F014         	call	_BusyXLCD	;wreg free
  5532  001A58  0900               	iorlw	0
  5533  001A5A  A4D8               	btfss	status,2,c
  5534  001A5C  D7FA               	goto	l3568
  5535                           
  5536                           ;lcd_pic16.c: 82:         WriteCmdXLCD(0b00001011&0b00001101&0b00001110);
  5537  001A5E  0E08               	movlw	8
  5538  001A60  ECB3  F012         	call	_WriteCmdXLCD
  5539  001A64                     l3572:
  5540  001A64  FFFF               	dw	65535	; assembler added errata NOP
  5541  001A66  ECEF  F014         	call	_BusyXLCD	;wreg free
  5542  001A6A  0900               	iorlw	0
  5543  001A6C  A4D8               	btfss	status,2,c
  5544  001A6E  D7FA               	goto	l3572
  5545                           
  5546                           ;lcd_pic16.c: 84:         WriteCmdXLCD(0b00001111&0b00001111&0b00001111);
  5547  001A70  0E0F               	movlw	15
  5548  001A72  ECB3  F012         	call	_WriteCmdXLCD
  5549  001A76                     l3576:
  5550  001A76  FFFF               	dw	65535	; assembler added errata NOP
  5551  001A78  ECEF  F014         	call	_BusyXLCD	;wreg free
  5552  001A7C  0900               	iorlw	0
  5553  001A7E  A4D8               	btfss	status,2,c
  5554  001A80  D7FA               	goto	l3576
  5555                           
  5556                           ;lcd_pic16.c: 88:         WriteCmdXLCD(0x01);
  5557  001A82  0E01               	movlw	1
  5558  001A84  ECB3  F012         	call	_WriteCmdXLCD
  5559  001A88                     l3580:
  5560  001A88  FFFF               	dw	65535	; assembler added errata NOP
  5561  001A8A  ECEF  F014         	call	_BusyXLCD	;wreg free
  5562  001A8E  0900               	iorlw	0
  5563  001A90  A4D8               	btfss	status,2,c
  5564  001A92  D7FA               	goto	l3580
  5565                           
  5566                           ;lcd_pic16.c: 92:         WriteCmdXLCD(0b00000101);
  5567  001A94  0E05               	movlw	5
  5568  001A96  ECB3  F012         	call	_WriteCmdXLCD
  5569  001A9A                     l3584:
  5570  001A9A  FFFF               	dw	65535	; assembler added errata NOP
  5571  001A9C  ECEF  F014         	call	_BusyXLCD	;wreg free
  5572  001AA0  0900               	iorlw	0
  5573  001AA2  A4D8               	btfss	status,2,c
  5574  001AA4  D7FA               	goto	l3584
  5575                           
  5576                           ;lcd_pic16.c: 95:         WriteCmdXLCD(0x06);
  5577  001AA6  0E06               	movlw	6
  5578  001AA8  ECB3  F012         	call	_WriteCmdXLCD
  5579  001AAC                     l3588:
  5580  001AAC  FFFF               	dw	65535	; assembler added errata NOP
  5581  001AAE  ECEF  F014         	call	_BusyXLCD	;wreg free
  5582  001AB2  0900               	iorlw	0
  5583  001AB4  A4D8               	btfss	status,2,c
  5584  001AB6  D7FA               	goto	l3588
  5585                           
  5586                           ;lcd_pic16.c: 98:         SetDDRamAddr(0x80);
  5587  001AB8  0E80               	movlw	128
  5588  001ABA  EC8E  F012         	call	_SetDDRamAddr
  5589  001ABE                     l3592:
  5590  001ABE  FFFF               	dw	65535	; assembler added errata NOP
  5591  001AC0  ECEF  F014         	call	_BusyXLCD	;wreg free
  5592  001AC4  0900               	iorlw	0
  5593  001AC6  A4D8               	btfss	status,2,c
  5594  001AC8  D7FA               	goto	l3592
  5595                           
  5596                           ;lcd_pic16.c: 101:         WriteCmdXLCD(0b00001101);
  5597  001ACA  0E0D               	movlw	13
  5598  001ACC  ECB3  F012         	call	_WriteCmdXLCD
  5599  001AD0  0012               	return		;funcret
  5600  001AD2  FFFF               	dw	65535	; errata NOP
  5601  001AD4                     __end_of_OpenXLCD:
  5602                           	opt callstack 0
  5603                           
  5604 ;; *************** function _WriteCmdXLCD *****************
  5605 ;; Defined at:
  5606 ;;		line 164 in file "lcd_pic16.c"
  5607 ;; Parameters:    Size  Location     Type
  5608 ;;  cmd             1    wreg     unsigned char 
  5609 ;; Auto vars:     Size  Location     Type
  5610 ;;  cmd             1    0[BANK0 ] unsigned char 
  5611 ;; Return value:  Size  Location     Type
  5612 ;;                  1    wreg      void 
  5613 ;; Registers used:
  5614 ;;		wreg, status,2, status,0, cstack
  5615 ;; Tracked objects:
  5616 ;;		On entry : 0/0
  5617 ;;		On exit  : 0/0
  5618 ;;		Unchanged: 0/0
  5619 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5620 ;;      Params:         0       0       0       0       0       0       0
  5621 ;;      Locals:         0       1       0       0       0       0       0
  5622 ;;      Temps:          0       0       0       0       0       0       0
  5623 ;;      Totals:         0       1       0       0       0       0       0
  5624 ;;Total ram usage:        1 bytes
  5625 ;; Hardware stack levels used:    1
  5626 ;; Hardware stack levels required when called:   11
  5627 ;; This function calls:
  5628 ;;		_DelayFor18TCY
  5629 ;; This function is called by:
  5630 ;;		_OpenXLCD
  5631 ;;		_SendCMDLCD
  5632 ;; This function uses a non-reentrant model
  5633 ;;
  5634                           
  5635                           	psect	text30
  5636  002566                     __ptext30:
  5637                           	opt callstack 0
  5638  002566                     _WriteCmdXLCD:
  5639                           	opt callstack 0
  5640  002566  FFFF               	dw	65535	; assembler added errata NOP
  5641                           
  5642                           ;incstack = 0
  5643                           ;WriteCmdXLCD@cmd stored from wreg
  5644  002568  0100               	movlb	0	; () banked
  5645  00256A  6F80               	movwf	WriteCmdXLCD@cmd& (0+255),b
  5646                           
  5647                           ;lcd_pic16.c: 178:         TRISD &= 0x0f;
  5648  00256C  0E0F               	movlw	15
  5649  00256E  1695               	andwf	3989,f,c	;volatile
  5650                           
  5651                           ;lcd_pic16.c: 179:         PORTD &= 0x0f;
  5652  002570  0E0F               	movlw	15
  5653  002572  1683               	andwf	3971,f,c	;volatile
  5654                           
  5655                           ;lcd_pic16.c: 180:         PORTD |= cmd&0xf0;
  5656  002574  0100               	movlb	0	; () banked
  5657  002576  5180               	movf	WriteCmdXLCD@cmd& (0+255),w,b
  5658  002578  0BF0               	andlw	240
  5659  00257A  1283               	iorwf	3971,f,c	;volatile
  5660                           
  5661                           ; BSR set to: 0
  5662                           ;lcd_pic16.c: 186:         PORTDbits.RD2 = 0;
  5663  00257C  9483               	bcf	3971,2,c	;volatile
  5664                           
  5665                           ; BSR set to: 0
  5666                           ;lcd_pic16.c: 187:         PORTDbits.RD3 = 0;
  5667  00257E  9683               	bcf	3971,3,c	;volatile
  5668                           
  5669                           ; BSR set to: 0
  5670                           ;lcd_pic16.c: 188:         DelayFor18TCY();
  5671  002580  EC31  F015         	call	_DelayFor18TCY	;wreg free
  5672                           
  5673                           ;lcd_pic16.c: 189:         PORTDbits.RD1 = 1;
  5674  002584  8283               	bsf	3971,1,c	;volatile
  5675                           
  5676                           ;lcd_pic16.c: 190:         DelayFor18TCY();
  5677  002586  EC31  F015         	call	_DelayFor18TCY	;wreg free
  5678                           
  5679                           ;lcd_pic16.c: 191:         PORTDbits.RD1 = 0;
  5680  00258A  9283               	bcf	3971,1,c	;volatile
  5681                           
  5682                           ;lcd_pic16.c: 193:         PORTD &= 0x0f;
  5683  00258C  0E0F               	movlw	15
  5684  00258E  1683               	andwf	3971,f,c	;volatile
  5685                           
  5686                           ;lcd_pic16.c: 194:         PORTD |= (cmd<<4)&0xf0;
  5687  002590  0100               	movlb	0	; () banked
  5688  002592  3980               	swapf	WriteCmdXLCD@cmd& (0+255),w,b
  5689  002594  0BF0               	andlw	240
  5690  002596  0BF0               	andlw	240
  5691  002598  1283               	iorwf	3971,f,c	;volatile
  5692                           
  5693                           ; BSR set to: 0
  5694                           ;lcd_pic16.c: 199:         DelayFor18TCY();
  5695  00259A  EC31  F015         	call	_DelayFor18TCY	;wreg free
  5696                           
  5697                           ;lcd_pic16.c: 200:         PORTDbits.RD1 = 1;
  5698  00259E  8283               	bsf	3971,1,c	;volatile
  5699                           
  5700                           ;lcd_pic16.c: 201:         DelayFor18TCY();
  5701  0025A0  EC31  F015         	call	_DelayFor18TCY	;wreg free
  5702                           
  5703                           ;lcd_pic16.c: 202:         PORTDbits.RD1 = 0;
  5704  0025A4  9283               	bcf	3971,1,c	;volatile
  5705                           
  5706                           ;lcd_pic16.c: 204:         TRISD |= 0xf0;
  5707  0025A6  0EF0               	movlw	240
  5708  0025A8  1295               	iorwf	3989,f,c	;volatile
  5709  0025AA  0012               	return		;funcret
  5710  0025AC  FFFF               	dw	65535	; errata NOP
  5711  0025AE                     __end_of_WriteCmdXLCD:
  5712                           	opt callstack 0
  5713                           
  5714 ;; *************** function _SetDDRamAddr *****************
  5715 ;; Defined at:
  5716 ;;		line 217 in file "lcd_pic16.c"
  5717 ;; Parameters:    Size  Location     Type
  5718 ;;  DDaddr          1    wreg     unsigned char 
  5719 ;; Auto vars:     Size  Location     Type
  5720 ;;  DDaddr          1    0[BANK0 ] unsigned char 
  5721 ;; Return value:  Size  Location     Type
  5722 ;;                  1    wreg      void 
  5723 ;; Registers used:
  5724 ;;		wreg, status,2, status,0, cstack
  5725 ;; Tracked objects:
  5726 ;;		On entry : 0/0
  5727 ;;		On exit  : 0/0
  5728 ;;		Unchanged: 0/0
  5729 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5730 ;;      Params:         0       0       0       0       0       0       0
  5731 ;;      Locals:         0       1       0       0       0       0       0
  5732 ;;      Temps:          0       0       0       0       0       0       0
  5733 ;;      Totals:         0       1       0       0       0       0       0
  5734 ;;Total ram usage:        1 bytes
  5735 ;; Hardware stack levels used:    1
  5736 ;; Hardware stack levels required when called:   11
  5737 ;; This function calls:
  5738 ;;		_DelayFor18TCY
  5739 ;; This function is called by:
  5740 ;;		_OpenXLCD
  5741 ;; This function uses a non-reentrant model
  5742 ;;
  5743                           
  5744                           	psect	text31
  5745  00251C                     __ptext31:
  5746                           	opt callstack 0
  5747  00251C                     _SetDDRamAddr:
  5748                           	opt callstack 0
  5749  00251C  FFFF               	dw	65535	; assembler added errata NOP
  5750                           
  5751                           ;incstack = 0
  5752                           ;SetDDRamAddr@DDaddr stored from wreg
  5753  00251E  0100               	movlb	0	; () banked
  5754  002520  6F80               	movwf	SetDDRamAddr@DDaddr& (0+255),b
  5755                           
  5756                           ;lcd_pic16.c: 217: void SetDDRamAddr(unsigned char DDaddr);lcd_pic16.c: 218: {;lcd_pic16
      +                          .c: 232:         TRISD &= 0x0f;
  5757  002522  0E0F               	movlw	15
  5758  002524  1695               	andwf	3989,f,c	;volatile
  5759                           
  5760                           ;lcd_pic16.c: 233:         PORTD &= 0x0f;
  5761  002526  0E0F               	movlw	15
  5762  002528  1683               	andwf	3971,f,c	;volatile
  5763                           
  5764                           ;lcd_pic16.c: 234:         PORTD |= ((DDaddr | 0b10000000) & 0xf0);
  5765  00252A  0100               	movlb	0	; () banked
  5766  00252C  5180               	movf	SetDDRamAddr@DDaddr& (0+255),w,b
  5767  00252E  0980               	iorlw	128
  5768  002530  0BF0               	andlw	240
  5769  002532  1283               	iorwf	3971,f,c	;volatile
  5770                           
  5771                           ; BSR set to: 0
  5772                           ;lcd_pic16.c: 240:         PORTDbits.RD2 = 0;
  5773  002534  9483               	bcf	3971,2,c	;volatile
  5774                           
  5775                           ; BSR set to: 0
  5776                           ;lcd_pic16.c: 241:         PORTDbits.RD3 = 0;
  5777  002536  9683               	bcf	3971,3,c	;volatile
  5778                           
  5779                           ; BSR set to: 0
  5780                           ;lcd_pic16.c: 242:         DelayFor18TCY();
  5781  002538  EC31  F015         	call	_DelayFor18TCY	;wreg free
  5782                           
  5783                           ;lcd_pic16.c: 243:         PORTDbits.RD1 = 1;
  5784  00253C  8283               	bsf	3971,1,c	;volatile
  5785                           
  5786                           ;lcd_pic16.c: 244:         DelayFor18TCY();
  5787  00253E  EC31  F015         	call	_DelayFor18TCY	;wreg free
  5788                           
  5789                           ;lcd_pic16.c: 245:         PORTDbits.RD1 = 0;
  5790  002542  9283               	bcf	3971,1,c	;volatile
  5791                           
  5792                           ;lcd_pic16.c: 247:         PORTD &= 0x0f;
  5793  002544  0E0F               	movlw	15
  5794  002546  1683               	andwf	3971,f,c	;volatile
  5795                           
  5796                           ;lcd_pic16.c: 248:         PORTD |= ((DDaddr<<4)&0xf0);
  5797  002548  0100               	movlb	0	; () banked
  5798  00254A  3980               	swapf	SetDDRamAddr@DDaddr& (0+255),w,b
  5799  00254C  0BF0               	andlw	240
  5800  00254E  0BF0               	andlw	240
  5801  002550  1283               	iorwf	3971,f,c	;volatile
  5802                           
  5803                           ; BSR set to: 0
  5804                           ;lcd_pic16.c: 253:         DelayFor18TCY();
  5805  002552  EC31  F015         	call	_DelayFor18TCY	;wreg free
  5806                           
  5807                           ;lcd_pic16.c: 254:         PORTDbits.RD1 = 1;
  5808  002556  8283               	bsf	3971,1,c	;volatile
  5809                           
  5810                           ;lcd_pic16.c: 255:         DelayFor18TCY();
  5811  002558  EC31  F015         	call	_DelayFor18TCY	;wreg free
  5812                           
  5813                           ;lcd_pic16.c: 256:         PORTDbits.RD1 = 0;
  5814  00255C  9283               	bcf	3971,1,c	;volatile
  5815                           
  5816                           ;lcd_pic16.c: 258:         TRISD |= 0xf0;
  5817  00255E  0EF0               	movlw	240
  5818  002560  1295               	iorwf	3989,f,c	;volatile
  5819  002562  0012               	return		;funcret
  5820  002564  FFFF               	dw	65535	; errata NOP
  5821  002566                     __end_of_SetDDRamAddr:
  5822                           	opt callstack 0
  5823                           
  5824 ;; *************** function _DelayFor18TCY *****************
  5825 ;; Defined at:
  5826 ;;		line 22 in file "lcd_pic16.c"
  5827 ;; Parameters:    Size  Location     Type
  5828 ;;		None
  5829 ;; Auto vars:     Size  Location     Type
  5830 ;;		None
  5831 ;; Return value:  Size  Location     Type
  5832 ;;                  1    wreg      void 
  5833 ;; Registers used:
  5834 ;;		wreg
  5835 ;; Tracked objects:
  5836 ;;		On entry : 0/0
  5837 ;;		On exit  : 0/0
  5838 ;;		Unchanged: 0/0
  5839 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5840 ;;      Params:         0       0       0       0       0       0       0
  5841 ;;      Locals:         0       0       0       0       0       0       0
  5842 ;;      Temps:          0       0       0       0       0       0       0
  5843 ;;      Totals:         0       0       0       0       0       0       0
  5844 ;;Total ram usage:        0 bytes
  5845 ;; Hardware stack levels used:    1
  5846 ;; Hardware stack levels required when called:   10
  5847 ;; This function calls:
  5848 ;;		Nothing
  5849 ;; This function is called by:
  5850 ;;		_WriteCmdXLCD
  5851 ;;		_SetDDRamAddr
  5852 ;;		_SetCGRamAddr
  5853 ;;		_ReadDataXLCD
  5854 ;;		_ReadAddrXLCD
  5855 ;; This function uses a non-reentrant model
  5856 ;;
  5857                           
  5858                           	psect	text32
  5859  002A62                     __ptext32:
  5860                           	opt callstack 0
  5861  002A62                     _DelayFor18TCY:
  5862                           	opt callstack 0
  5863  002A62  FFFF               	dw	65535	; assembler added errata NOP
  5864                           
  5865                           ;lcd_pic16.c: 24:    _delay((unsigned long)((18)*(12000000/4000000.0)));
  5866                           
  5867                           ;incstack = 0
  5868  002A64  0E0D               	movlw	13
  5869  002A66                     u3957:
  5870  002A66  FFFF               	dw	65535	; errata NOP
  5871  002A68  2EE8               	decfsz	wreg,f,c
  5872  002A6A  D7FD               	bra	u3957
  5873  002A6C  D000               	nop2	
  5874  002A6E  0012               	return		;funcret
  5875  002A70  FFFF               	dw	65535	; errata NOP
  5876  002A72                     __end_of_DelayFor18TCY:
  5877                           	opt callstack 0
  5878                           
  5879 ;; *************** function _DelayPORXLCD *****************
  5880 ;; Defined at:
  5881 ;;		line 27 in file "lcd_pic16.c"
  5882 ;; Parameters:    Size  Location     Type
  5883 ;;		None
  5884 ;; Auto vars:     Size  Location     Type
  5885 ;;		None
  5886 ;; Return value:  Size  Location     Type
  5887 ;;                  1    wreg      void 
  5888 ;; Registers used:
  5889 ;;		wreg
  5890 ;; Tracked objects:
  5891 ;;		On entry : 0/0
  5892 ;;		On exit  : 0/0
  5893 ;;		Unchanged: 0/0
  5894 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5895 ;;      Params:         0       0       0       0       0       0       0
  5896 ;;      Locals:         0       0       0       0       0       0       0
  5897 ;;      Temps:          0       1       0       0       0       0       0
  5898 ;;      Totals:         0       1       0       0       0       0       0
  5899 ;;Total ram usage:        1 bytes
  5900 ;; Hardware stack levels used:    1
  5901 ;; Hardware stack levels required when called:   10
  5902 ;; This function calls:
  5903 ;;		Nothing
  5904 ;; This function is called by:
  5905 ;;		_OpenXLCD
  5906 ;; This function uses a non-reentrant model
  5907 ;;
  5908                           
  5909                           	psect	text33
  5910  002A18                     __ptext33:
  5911                           	opt callstack 0
  5912  002A18                     _DelayPORXLCD:
  5913                           	opt callstack 0
  5914  002A18  FFFF               	dw	65535	; assembler added errata NOP
  5915                           
  5916                           ;lcd_pic16.c: 29:    _delay((unsigned long)((20)*(12000000/4000.0)));
  5917                           
  5918                           ;incstack = 0
  5919  002A1A  0E3B               	movlw	59
  5920  002A1C  0100               	movlb	0	; () banked
  5921  002A1E  6F80               	movwf	??_DelayPORXLCD& (0+255),b
  5922  002A20  0E79               	movlw	121
  5923  002A22                     u3967:
  5924  002A22  FFFF               	dw	65535	; errata NOP
  5925  002A24  2EE8               	decfsz	wreg,f,c
  5926  002A26  D7FD               	bra	u3967
  5927  002A28  2F80               	decfsz	??_DelayPORXLCD& (0+255),f,b
  5928  002A2A  D7FB               	bra	u3967
  5929  002A2C  D000               	nop2	
  5930  002A2E  F000               	nop	
  5931  002A30  0012               	return		;funcret
  5932  002A32  FFFF               	dw	65535	; errata NOP
  5933  002A34                     __end_of_DelayPORXLCD:
  5934                           	opt callstack 0
  5935                           
  5936 ;; *************** function _BusyXLCD *****************
  5937 ;; Defined at:
  5938 ;;		line 451 in file "lcd_pic16.c"
  5939 ;; Parameters:    Size  Location     Type
  5940 ;;		None
  5941 ;; Auto vars:     Size  Location     Type
  5942 ;;		None
  5943 ;; Return value:  Size  Location     Type
  5944 ;;                  1    wreg      unsigned char 
  5945 ;; Registers used:
  5946 ;;		wreg
  5947 ;; Tracked objects:
  5948 ;;		On entry : 0/0
  5949 ;;		On exit  : 0/0
  5950 ;;		Unchanged: 0/0
  5951 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5952 ;;      Params:         0       0       0       0       0       0       0
  5953 ;;      Locals:         0       0       0       0       0       0       0
  5954 ;;      Temps:          0       1       0       0       0       0       0
  5955 ;;      Totals:         0       1       0       0       0       0       0
  5956 ;;Total ram usage:        1 bytes
  5957 ;; Hardware stack levels used:    1
  5958 ;; Hardware stack levels required when called:   10
  5959 ;; This function calls:
  5960 ;;		Nothing
  5961 ;; This function is called by:
  5962 ;;		_OpenXLCD
  5963 ;;		_SendCMDLCD
  5964 ;;		_putrsXLCD
  5965 ;; This function uses a non-reentrant model
  5966 ;;
  5967                           
  5968                           	psect	text34
  5969  0029DE                     __ptext34:
  5970                           	opt callstack 0
  5971  0029DE                     _BusyXLCD:
  5972                           	opt callstack 0
  5973  0029DE  FFFF               	dw	65535	; assembler added errata NOP
  5974                           
  5975                           ;lcd_pic16.c: 504:         _delay((unsigned long)((5)*(12000000/4000.0)));
  5976                           
  5977                           ;incstack = 0
  5978  0029E0  0E0F               	movlw	15
  5979  0029E2  0100               	movlb	0	; () banked
  5980  0029E4  6F80               	movwf	??_BusyXLCD& (0+255),b
  5981  0029E6  0E9D               	movlw	157
  5982  0029E8                     u3977:
  5983  0029E8  FFFF               	dw	65535	; errata NOP
  5984  0029EA  2EE8               	decfsz	wreg,f,c
  5985  0029EC  D7FD               	bra	u3977
  5986  0029EE  2F80               	decfsz	??_BusyXLCD& (0+255),f,b
  5987  0029F0  D7FB               	bra	u3977
  5988  0029F2  D000               	nop2	
  5989  0029F4  F000               	nop	
  5990                           
  5991                           ;lcd_pic16.c: 505:         return 0;
  5992  0029F6  0E00               	movlw	0
  5993  0029F8  0012               	return		;funcret
  5994  0029FA  FFFF               	dw	65535	; errata NOP
  5995  0029FC                     __end_of_BusyXLCD:
  5996                           	opt callstack 0
  5997                           
  5998 ;; *************** function _inter *****************
  5999 ;; Defined at:
  6000 ;;		line 62 in file "main.c"
  6001 ;; Parameters:    Size  Location     Type
  6002 ;;		None
  6003 ;; Auto vars:     Size  Location     Type
  6004 ;;		None
  6005 ;; Return value:  Size  Location     Type
  6006 ;;                  1    wreg      void 
  6007 ;; Registers used:
  6008 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6009 ;; Tracked objects:
  6010 ;;		On entry : 0/0
  6011 ;;		On exit  : 0/0
  6012 ;;		Unchanged: 0/0
  6013 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6014 ;;      Params:         0       0       0       0       0       0       0
  6015 ;;      Locals:         0       0       0       0       0       0       0
  6016 ;;      Temps:         10       0       0       0       0       0       0
  6017 ;;      Totals:        10       0       0       0       0       0       0
  6018 ;;Total ram usage:       10 bytes
  6019 ;; Hardware stack levels used:    1
  6020 ;; Hardware stack levels required when called:    9
  6021 ;; This function calls:
  6022 ;;		_time
  6023 ;;		_updateLCD
  6024 ;; This function is called by:
  6025 ;;		Interrupt level 2
  6026 ;; This function uses a non-reentrant model
  6027 ;;
  6028                           
  6029                           	psect	intcode
  6030  000008                     __pintcode:
  6031                           	opt callstack 0
  6032  000008                     _inter:
  6033                           	opt callstack 0
  6034  000008  FFFF               	dw	65535	; assembler added errata NOP
  6035                           
  6036                           ;incstack = 0
  6037  00000A  827F               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  6038  00000C  CFE1 F070          	movff	fsr1l,??_inter
  6039  000010  CFE2 F071          	movff	fsr1h,??_inter+1
  6040  000014  CFD9 F072          	movff	fsr2l,??_inter+2
  6041  000018  CFDA F073          	movff	fsr2h,??_inter+3
  6042  00001C  CFF3 F074          	movff	prodl,??_inter+4
  6043  000020  CFF4 F075          	movff	prodh,??_inter+5
  6044  000024  CFF6 F076          	movff	tblptrl,??_inter+6
  6045  000028  CFF7 F077          	movff	tblptrh,??_inter+7
  6046  00002C  CFF8 F078          	movff	tblptru,??_inter+8
  6047  000030  CFF5 F079          	movff	tablat,??_inter+9
  6048                           
  6049                           ;main.c: 64:     INTCONbits.GIE = 0;
  6050  000034  9EF2               	bcf	4082,7,c	;volatile
  6051                           
  6052                           ;main.c: 66:     if(PIR1bits.TMR1IF == 1){
  6053  000036  A09E               	btfss	3998,0,c	;volatile
  6054  000038  D011               	goto	i2l4112
  6055                           
  6056                           ;main.c: 67:         TMR1H = prTmr1H;
  6057  00003A  C07C  FFCF         	movff	_prTmr1H,4047	;volatile
  6058                           
  6059                           ;main.c: 68:         TMR1L = prTmr1L;
  6060  00003E  C07D  FFCE         	movff	_prTmr1L,4046	;volatile
  6061                           
  6062                           ;main.c: 69:         cntTmr1++;
  6063  000042  2A7E               	incf	_cntTmr1,f,c
  6064                           
  6065                           ;main.c: 70:         time();
  6066  000044  EC8D  F010         	call	_time	;wreg free
  6067                           
  6068                           ;main.c: 71:         if(cntTmr1 == 10){
  6069  000048  0E0A               	movlw	10
  6070  00004A  187E               	xorwf	_cntTmr1,w,c
  6071  00004C  A4D8               	btfss	status,2,c
  6072  00004E  D004               	goto	i2l4110
  6073                           
  6074                           ;main.c: 72:             cntTmr1 = 0;
  6075  000050  0E00               	movlw	0
  6076  000052  6E7E               	movwf	_cntTmr1,c
  6077                           
  6078                           ;main.c: 73:             updateLCD();
  6079  000054  ECDC  F00F         	call	_updateLCD	;wreg free
  6080  000058                     i2l4110:
  6081  000058  FFFF               	dw	65535	; assembler added errata NOP
  6082                           
  6083                           ;main.c: 75:         PIR1bits.TMR1IF = 0;
  6084  00005A  909E               	bcf	3998,0,c	;volatile
  6085  00005C                     i2l4112:
  6086  00005C  FFFF               	dw	65535	; assembler added errata NOP
  6087                           
  6088                           ;main.c: 78:     if(INTCONbits.TMR0IF == 1){
  6089  00005E  A4F2               	btfss	4082,2,c	;volatile
  6090  000060  D006               	goto	i2l211
  6091                           
  6092                           ;main.c: 79:         TMR0H = prTmr0H;
  6093  000062  C07A  FFD7         	movff	_prTmr0H,4055	;volatile
  6094                           
  6095                           ;main.c: 80:         TMR0L = prTmr0L;
  6096  000066  C07B  FFD6         	movff	_prTmr0L,4054	;volatile
  6097                           
  6098                           ;main.c: 82:         ADCON0bits.GO = 1;
  6099  00006A  84C2               	bsf	4034,2,c	;volatile
  6100                           
  6101                           ;main.c: 83:         INTCONbits.TMR0IF = 0;
  6102  00006C  94F2               	bcf	4082,2,c	;volatile
  6103  00006E                     i2l211:
  6104  00006E  FFFF               	dw	65535	; assembler added errata NOP
  6105                           
  6106                           ;main.c: 86:     INTCONbits.GIE = 1;
  6107  000070  8EF2               	bsf	4082,7,c	;volatile
  6108                           
  6109                           ;main.c: 87:     return;
  6110  000072  C079  FFF5         	movff	??_inter+9,tablat
  6111  000076  C078  FFF8         	movff	??_inter+8,tblptru
  6112  00007A  C077  FFF7         	movff	??_inter+7,tblptrh
  6113  00007E  C076  FFF6         	movff	??_inter+6,tblptrl
  6114  000082  C075  FFF4         	movff	??_inter+5,prodh
  6115  000086  C074  FFF3         	movff	??_inter+4,prodl
  6116  00008A  C073  FFDA         	movff	??_inter+3,fsr2h
  6117  00008E  C072  FFD9         	movff	??_inter+2,fsr2l
  6118  000092  C071  FFE2         	movff	??_inter+1,fsr1h
  6119  000096  C070  FFE1         	movff	??_inter,fsr1l
  6120  00009A  927F               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  6121  00009C  0011               	retfie		f
  6122  00009E  FFFF               	dw	65535	; errata NOP
  6123  0000A0                     __end_of_inter:
  6124                           	opt callstack 0
  6125                           
  6126 ;; *************** function _updateLCD *****************
  6127 ;; Defined at:
  6128 ;;		line 14 in file "lcd.c"
  6129 ;; Parameters:    Size  Location     Type
  6130 ;;		None
  6131 ;; Auto vars:     Size  Location     Type
  6132 ;;  decim           1  110[COMRAM] unsigned char 
  6133 ;;  integ           1  109[COMRAM] unsigned char 
  6134 ;; Return value:  Size  Location     Type
  6135 ;;                  1    wreg      void 
  6136 ;; Registers used:
  6137 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6138 ;; Tracked objects:
  6139 ;;		On entry : 0/0
  6140 ;;		On exit  : 0/0
  6141 ;;		Unchanged: 0/0
  6142 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6143 ;;      Params:         0       0       0       0       0       0       0
  6144 ;;      Locals:         2       0       0       0       0       0       0
  6145 ;;      Temps:          0       0       0       0       0       0       0
  6146 ;;      Totals:         2       0       0       0       0       0       0
  6147 ;;Total ram usage:        2 bytes
  6148 ;; Hardware stack levels used:    1
  6149 ;; Hardware stack levels required when called:    8
  6150 ;; This function calls:
  6151 ;;		___lwdiv
  6152 ;;		___lwmod
  6153 ;;		_putsXLCD
  6154 ;;		i2_SetDDRamAddr
  6155 ;;		i2_sprintf
  6156 ;; This function is called by:
  6157 ;;		_inter
  6158 ;; This function uses a non-reentrant model
  6159 ;;
  6160                           
  6161                           	psect	text36
  6162  001FB8                     __ptext36:
  6163                           	opt callstack 0
  6164  001FB8                     _updateLCD:
  6165                           	opt callstack 0
  6166  001FB8  FFFF               	dw	65535	; assembler added errata NOP
  6167                           
  6168                           ;lcd.c: 15:     unsigned char integ = frequency / 10;
  6169                           
  6170                           ;incstack = 0
  6171  001FBA  C0F4  F001         	movff	_frequency,___lwdiv@dividend
  6172  001FBE  C0F5  F002         	movff	_frequency+1,___lwdiv@dividend+1
  6173  001FC2  0E00               	movlw	0
  6174  001FC4  6E04               	movwf	___lwdiv@divisor+1,c
  6175  001FC6  0E0A               	movlw	10
  6176  001FC8  6E03               	movwf	___lwdiv@divisor,c
  6177  001FCA  EC91  F011         	call	___lwdiv	;wreg free
  6178  001FCE  5001               	movf	?___lwdiv,w,c
  6179  001FD0  6E6E               	movwf	updateLCD@integ,c
  6180                           
  6181                           ;lcd.c: 16:     unsigned char decim = frequency % 10;
  6182  001FD2  C0F4  F001         	movff	_frequency,___lwmod@dividend
  6183  001FD6  C0F5  F002         	movff	_frequency+1,___lwmod@dividend+1
  6184  001FDA  0E00               	movlw	0
  6185  001FDC  6E04               	movwf	___lwmod@divisor+1,c
  6186  001FDE  0E0A               	movlw	10
  6187  001FE0  6E03               	movwf	___lwmod@divisor,c
  6188  001FE2  EC41  F012         	call	___lwmod	;wreg free
  6189  001FE6  5001               	movf	?___lwmod,w,c
  6190  001FE8  6E6F               	movwf	updateLCD@decim,c
  6191                           
  6192                           ;lcd.c: 17:     sprintf(lineTwo,"Fcia.  %3d.%d MHz",integ, decim);
  6193  001FEA  0E22               	movlw	low _lineTwo
  6194  001FEC  6E5C               	movwf	i2sprintf@s,c
  6195  001FEE  0E01               	movlw	high _lineTwo
  6196  001FF0  6E5D               	movwf	i2sprintf@s+1,c
  6197  001FF2  0E05               	movlw	low STR_4
  6198  001FF4  6E5E               	movwf	i2sprintf@fmt,c
  6199  001FF6  0E06               	movlw	high STR_4
  6200  001FF8  6E5F               	movwf	i2sprintf@fmt+1,c
  6201  001FFA  C06E  F060         	movff	updateLCD@integ,?i2_sprintf+4
  6202  001FFE  6A61               	clrf	?i2_sprintf+5,c
  6203  002000  C06F  F062         	movff	updateLCD@decim,?i2_sprintf+6
  6204  002004  6A63               	clrf	?i2_sprintf+7,c
  6205  002006  EC18  F012         	call	i2_sprintf	;wreg free
  6206                           
  6207                           ;lcd.c: 19:     SetDDRamAddr(0x00);
  6208  00200A  0E00               	movlw	0
  6209  00200C  EC3F  F013         	call	i2_SetDDRamAddr
  6210                           
  6211                           ;lcd.c: 20:     putsXLCD(lineOne);
  6212  002010  0E33               	movlw	low _lineOne
  6213  002012  6E02               	movwf	putsXLCD@buffer,c
  6214  002014  0E01               	movlw	high _lineOne
  6215  002016  6E03               	movwf	putsXLCD@buffer+1,c
  6216  002018  EC38  F014         	call	_putsXLCD	;wreg free
  6217                           
  6218                           ;lcd.c: 21:     SetDDRamAddr(0x40);
  6219  00201C  0E40               	movlw	64
  6220  00201E  EC3F  F013         	call	i2_SetDDRamAddr
  6221                           
  6222                           ;lcd.c: 22:     putsXLCD(lineTwo);
  6223  002022  0E22               	movlw	low _lineTwo
  6224  002024  6E02               	movwf	putsXLCD@buffer,c
  6225  002026  0E01               	movlw	high _lineTwo
  6226  002028  6E03               	movwf	putsXLCD@buffer+1,c
  6227  00202A  EC38  F014         	call	_putsXLCD	;wreg free
  6228  00202E  0012               	return		;funcret
  6229  002030  FFFF               	dw	65535	; errata NOP
  6230  002032                     __end_of_updateLCD:
  6231                           	opt callstack 0
  6232                           
  6233 ;; *************** function i2_sprintf *****************
  6234 ;; Defined at:
  6235 ;;		line 9 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/nf_sprintf.c"
  6236 ;; Parameters:    Size  Location     Type
  6237 ;;  s               2   91[COMRAM] PTR unsigned char 
  6238 ;;		 -> lineTwo(17), lineOne(17), 
  6239 ;;  fmt             2   93[COMRAM] PTR const unsigned char 
  6240 ;;		 -> STR_4(18), STR_3(17), STR_2(17), STR_1(17), 
  6241 ;; Auto vars:     Size  Location     Type
  6242 ;;  sprintf         6  103[COMRAM] struct _IO_FILE
  6243 ;;  sprintf         2  101[COMRAM] PTR void [1]
  6244 ;;		 -> ?i2_sprintf(2), ?_sprintf(2), 
  6245 ;;  sprintf         2    0        int 
  6246 ;; Return value:  Size  Location     Type
  6247 ;;                  2   91[COMRAM] int 
  6248 ;; Registers used:
  6249 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6250 ;; Tracked objects:
  6251 ;;		On entry : 0/0
  6252 ;;		On exit  : 0/0
  6253 ;;		Unchanged: 0/0
  6254 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6255 ;;      Params:         8       0       0       0       0       0       0
  6256 ;;      Locals:        10       0       0       0       0       0       0
  6257 ;;      Temps:          0       0       0       0       0       0       0
  6258 ;;      Totals:        18       0       0       0       0       0       0
  6259 ;;Total ram usage:       18 bytes
  6260 ;; Hardware stack levels used:    1
  6261 ;; Hardware stack levels required when called:    7
  6262 ;; This function calls:
  6263 ;;		i2_vfprintf
  6264 ;; This function is called by:
  6265 ;;		_updateLCD
  6266 ;; This function uses a non-reentrant model
  6267 ;;
  6268                           
  6269                           	psect	text37
  6270  002430                     __ptext37:
  6271                           	opt callstack 0
  6272  002430                     i2_sprintf:
  6273                           	opt callstack 0
  6274  002430  FFFF               	dw	65535	; assembler added errata NOP
  6275                           
  6276                           ;incstack = 0
  6277  002432  0E60               	movlw	low (?i2_sprintf+4)
  6278  002434  6E66               	movwf	i2sprintf@ap,c
  6279  002436  0E00               	movlw	high (?i2_sprintf+4)
  6280  002438  6E67               	movwf	i2sprintf@ap+1,c
  6281  00243A  C05C  F068         	movff	i2sprintf@s,i2sprintf@f
  6282  00243E  C05D  F069         	movff	i2sprintf@s+1,i2sprintf@f+1
  6283  002442  0E00               	movlw	0
  6284  002444  6E6B               	movwf	i2sprintf@f+3,c
  6285  002446  0E00               	movlw	0
  6286  002448  6E6A               	movwf	i2sprintf@f+2,c
  6287  00244A  0E00               	movlw	0
  6288  00244C  6E6D               	movwf	i2sprintf@f+5,c
  6289  00244E  0E00               	movlw	0
  6290  002450  6E6C               	movwf	i2sprintf@f+4,c
  6291  002452  0E68               	movlw	low i2sprintf@f
  6292  002454  6E54               	movwf	i2vfprintf@fp,c
  6293  002456  0E00               	movlw	high i2sprintf@f
  6294  002458  6E55               	movwf	i2vfprintf@fp+1,c
  6295  00245A  C05E  F056         	movff	i2sprintf@fmt,i2vfprintf@fmt
  6296  00245E  C05F  F057         	movff	i2sprintf@fmt+1,i2vfprintf@fmt+1
  6297  002462  0E66               	movlw	low i2sprintf@ap
  6298  002464  6E58               	movwf	i2vfprintf@ap,c
  6299  002466  0E00               	movlw	high i2sprintf@ap
  6300  002468  6E59               	movwf	i2vfprintf@ap+1,c
  6301  00246A  EC61  F011         	call	i2_vfprintf	;wreg free
  6302  00246E  506A               	movf	i2sprintf@f+2,w,c
  6303  002470  245C               	addwf	i2sprintf@s,w,c
  6304  002472  6ED9               	movwf	fsr2l,c
  6305  002474  506B               	movf	i2sprintf@f+3,w,c
  6306  002476  205D               	addwfc	i2sprintf@s+1,w,c
  6307  002478  6EDA               	movwf	fsr2h,c
  6308  00247A  0E00               	movlw	0
  6309  00247C  6EDF               	movwf	indf2,c
  6310  00247E  0012               	return		;funcret
  6311  002480  FFFF               	dw	65535	; errata NOP
  6312  002482                     __end_ofi2_sprintf:
  6313                           	opt callstack 0
  6314                           
  6315 ;; *************** function i2_vfprintf *****************
  6316 ;; Defined at:
  6317 ;;		line 1368 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  6318 ;; Parameters:    Size  Location     Type
  6319 ;;  fp              2   83[COMRAM] PTR struct _IO_FILE
  6320 ;;		 -> i2sprintf@f(6), sprintf@f(6), 
  6321 ;;  fmt             2   85[COMRAM] PTR const unsigned char 
  6322 ;;		 -> STR_4(18), STR_3(17), STR_2(17), STR_1(17), 
  6323 ;;  ap              2   87[COMRAM] PTR PTR void 
  6324 ;;		 -> i2sprintf@ap(2), sprintf@ap(2), 
  6325 ;; Auto vars:     Size  Location     Type
  6326 ;;  vfprintf        2   89[COMRAM] PTR unsigned char 
  6327 ;;		 -> STR_4(18), STR_3(17), STR_2(17), STR_1(17), 
  6328 ;; Return value:  Size  Location     Type
  6329 ;;                  2   83[COMRAM] int 
  6330 ;; Registers used:
  6331 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6332 ;; Tracked objects:
  6333 ;;		On entry : 0/0
  6334 ;;		On exit  : 0/0
  6335 ;;		Unchanged: 0/0
  6336 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6337 ;;      Params:         6       0       0       0       0       0       0
  6338 ;;      Locals:         2       0       0       0       0       0       0
  6339 ;;      Temps:          0       0       0       0       0       0       0
  6340 ;;      Totals:         8       0       0       0       0       0       0
  6341 ;;Total ram usage:        8 bytes
  6342 ;; Hardware stack levels used:    1
  6343 ;; Hardware stack levels required when called:    6
  6344 ;; This function calls:
  6345 ;;		i2_vfpfcnvrt
  6346 ;; This function is called by:
  6347 ;;		i2_sprintf
  6348 ;; This function uses a non-reentrant model
  6349 ;;
  6350                           
  6351                           	psect	text38
  6352  0022C2                     __ptext38:
  6353                           	opt callstack 0
  6354  0022C2                     i2_vfprintf:
  6355                           	opt callstack 0
  6356  0022C2  FFFF               	dw	65535	; assembler added errata NOP
  6357                           
  6358                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1368: int vfprintf(FILE *fp, 
      +                          const char *fmt, va_list ap);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1
      +                          369: {;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1371:     char *cfmt;;/
      +                          opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1373:     cfmt = (char *)fmt;
  6359                           
  6360                           ;incstack = 0
  6361  0022C4  C056  F05A         	movff	i2vfprintf@fmt,i2vfprintf@cfmt
  6362  0022C8  C057  F05B         	movff	i2vfprintf@fmt+1,i2vfprintf@cfmt+1
  6363                           
  6364                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1374:     nout = 0;
  6365  0022CC  0E00               	movlw	0
  6366  0022CE  0101               	movlb	1	; () banked
  6367  0022D0  6F01               	movwf	(_nout+1)& (0+255),b
  6368  0022D2  0E00               	movlw	0
  6369  0022D4  6F00               	movwf	_nout& (0+255),b
  6370                           
  6371                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
  6372  0022D6  D014               	goto	i2l3674
  6373  0022D8                     i2l3672:
  6374  0022D8  FFFF               	dw	65535	; assembler added errata NOP
  6375                           
  6376                           ; BSR set to: 1
  6377                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1376:         nout += vfpfcnv
      +                          rt(fp, &cfmt, ap);
  6378  0022DA  C054  F040         	movff	i2vfprintf@fp,i2vfpfcnvrt@fp
  6379  0022DE  C055  F041         	movff	i2vfprintf@fp+1,i2vfpfcnvrt@fp+1
  6380  0022E2  0E5A               	movlw	low i2vfprintf@cfmt
  6381  0022E4  6E42               	movwf	i2vfpfcnvrt@fmt,c
  6382  0022E6  0E00               	movlw	high i2vfprintf@cfmt
  6383  0022E8  6E43               	movwf	i2vfpfcnvrt@fmt+1,c
  6384  0022EA  C058  F044         	movff	i2vfprintf@ap,i2vfpfcnvrt@ap
  6385  0022EE  C059  F045         	movff	i2vfprintf@ap+1,i2vfpfcnvrt@ap+1
  6386  0022F2  EC69  F004         	call	i2_vfpfcnvrt	;wreg free
  6387  0022F6  5040               	movf	?i2_vfpfcnvrt,w,c
  6388  0022F8  0101               	movlb	1	; () banked
  6389  0022FA  2700               	addwf	_nout& (0+255),f,b
  6390  0022FC  5041               	movf	?i2_vfpfcnvrt+1,w,c
  6391  0022FE  2301               	addwfc	(_nout+1)& (0+255),f,b
  6392  002300                     i2l3674:
  6393  002300  FFFF               	dw	65535	; assembler added errata NOP
  6394                           
  6395                           ; BSR set to: 1
  6396                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
  6397  002302  C05A  FFF6         	movff	i2vfprintf@cfmt,tblptrl
  6398  002306  C05B  FFF7         	movff	i2vfprintf@cfmt+1,tblptrh
  6399  00230A                     	if	0	;tblptru may be non-zero
  6400  00230A                     	endif
  6401  00230A                     	if	0	;tblptru may be non-zero
  6402  00230A                     	endif
  6403  00230A  0008               	tblrd		*
  6404  00230C  FFFF               	dw	65535	; errata NOP
  6405  00230E  50F5               	movf	tablat,w,c
  6406  002310  0900               	iorlw	0
  6407  002312  A4D8               	btfss	status,2,c
  6408  002314  D7E1               	goto	i2l3672
  6409                           
  6410                           ; BSR set to: 1
  6411                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1378:     return nout;
  6412  002316  C100  F054         	movff	_nout,?i2_vfprintf
  6413  00231A  C101  F055         	movff	_nout+1,?i2_vfprintf+1
  6414                           
  6415                           ; BSR set to: 1
  6416  00231E  0012               	return		;funcret
  6417  002320  FFFF               	dw	65535	; errata NOP
  6418  002322                     __end_ofi2_vfprintf:
  6419                           	opt callstack 0
  6420                           
  6421 ;; *************** function i2_vfpfcnvrt *****************
  6422 ;; Defined at:
  6423 ;;		line 670 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  6424 ;; Parameters:    Size  Location     Type
  6425 ;;  fp              2   63[COMRAM] PTR struct _IO_FILE
  6426 ;;		 -> i2sprintf@f(6), sprintf@f(6), 
  6427 ;;  fmt             2   65[COMRAM] PTR PTR unsigned char 
  6428 ;;		 -> i2vfprintf@cfmt(2), vfprintf@cfmt(2), 
  6429 ;;  ap              2   67[COMRAM] PTR PTR void 
  6430 ;;		 -> i2sprintf@ap(2), sprintf@ap(2), 
  6431 ;; Auto vars:     Size  Location     Type
  6432 ;;  vfpfcnvrt       8   73[COMRAM] long long 
  6433 ;;  vfpfcnvrt       8    0        unsigned long long 
  6434 ;;  vfpfcnvrt       4    0        unsigned long long 
  6435 ;;  vfpfcnvrt       3    0        PTR void 
  6436 ;;  vfpfcnvrt       3    0        unsigned char [3]
  6437 ;;  vfpfcnvrt       3    0        PTR unsigned char 
  6438 ;;  vfpfcnvrt       2    0        int 
  6439 ;;  vfpfcnvrt       2    0        int 
  6440 ;;  vfpfcnvrt       1    0        unsigned char 
  6441 ;; Return value:  Size  Location     Type
  6442 ;;                  2   63[COMRAM] int 
  6443 ;; Registers used:
  6444 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6445 ;; Tracked objects:
  6446 ;;		On entry : 0/0
  6447 ;;		On exit  : 0/0
  6448 ;;		Unchanged: 0/0
  6449 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6450 ;;      Params:         6       0       0       0       0       0       0
  6451 ;;      Locals:        10       0       0       0       0       0       0
  6452 ;;      Temps:          4       0       0       0       0       0       0
  6453 ;;      Totals:        20       0       0       0       0       0       0
  6454 ;;Total ram usage:       20 bytes
  6455 ;; Hardware stack levels used:    1
  6456 ;; Hardware stack levels required when called:    5
  6457 ;; This function calls:
  6458 ;;		i2_atoi
  6459 ;;		i2_dtoa
  6460 ;;		i2_fputc
  6461 ;;		i2_isdigit
  6462 ;; This function is called by:
  6463 ;;		i2_vfprintf
  6464 ;; This function uses a non-reentrant model
  6465 ;;
  6466                           
  6467                           	psect	text39
  6468  0008D2                     __ptext39:
  6469                           	opt callstack 0
  6470  0008D2                     i2_vfpfcnvrt:
  6471                           	opt callstack 0
  6472  0008D2  FFFF               	dw	65535	; assembler added errata NOP
  6473                           
  6474                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 670: static int vfpfcnvrt(FIL
      +                          E *fp, char *fmt[], va_list ap);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c
      +                          : 671: {;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 672:     char c, *cp,
      +                           ct[3];;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 673:     int done, i;;
      +                          /opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 674:     long long ll;;/opt/mi
      +                          crochip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 675:     unsigned long long llu;
  6475                           
  6476                           ; BSR set to: 1
  6477                           ;incstack = 0
  6478  0008D4  C042  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
  6479  0008D8  C043  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
  6480  0008DC  CFDE FFF6          	movff	postinc2,tblptrl
  6481  0008E0  CFDD FFF7          	movff	postdec2,tblptrh
  6482  0008E4                     	if	0	;tblptru may be non-zero
  6483  0008E4                     	endif
  6484  0008E4                     	if	0	;tblptru may be non-zero
  6485  0008E4                     	endif
  6486  0008E4  0008               	tblrd		*
  6487  0008E6  FFFF               	dw	65535	; errata NOP
  6488  0008E8  50F5               	movf	tablat,w,c
  6489  0008EA  0A25               	xorlw	37
  6490  0008EC  A4D8               	btfss	status,2,c
  6491  0008EE  D112               	goto	i2l3512
  6492                           
  6493                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 681:         ++*fmt;
  6494  0008F0  C042  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
  6495  0008F4  C043  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
  6496  0008F8  2ADE               	incf	postinc2,f,c
  6497  0008FA  0E00               	movlw	0
  6498  0008FC  22DD               	addwfc	postdec2,f,c
  6499                           
  6500                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 683:         flags = width = 
      +                          0;
  6501  0008FE  0E00               	movlw	0
  6502  000900  0100               	movlb	0	; () banked
  6503  000902  6FEF               	movwf	(_width+1)& (0+255),b
  6504  000904  0E00               	movlw	0
  6505  000906  6FEE               	movwf	_width& (0+255),b
  6506  000908  C0EE  F0F2         	movff	_width,_flags
  6507  00090C  C0EF  F0F3         	movff	_width+1,_flags+1
  6508                           
  6509                           ; BSR set to: 0
  6510                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 684:         prec = -1;
  6511  000910  69F0               	setf	_prec& (0+255),b
  6512  000912  69F1               	setf	(_prec+1)& (0+255),b
  6513                           
  6514                           ; BSR set to: 0
  6515                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 723:         if ((*fmt)[0] ==
      +                           '*') {
  6516  000914  C042  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
  6517  000918  C043  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
  6518  00091C  CFDE FFF6          	movff	postinc2,tblptrl
  6519  000920  CFDD FFF7          	movff	postdec2,tblptrh
  6520  000924                     	if	0	;tblptru may be non-zero
  6521  000924                     	endif
  6522  000924                     	if	0	;tblptru may be non-zero
  6523  000924                     	endif
  6524  000924  0008               	tblrd		*
  6525  000926  FFFF               	dw	65535	; errata NOP
  6526  000928  50F5               	movf	tablat,w,c
  6527  00092A  0A2A               	xorlw	42
  6528  00092C  A4D8               	btfss	status,2,c
  6529  00092E  D023               	goto	i2l3476
  6530                           
  6531                           ; BSR set to: 0
  6532                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 724:             ++*fmt;
  6533  000930  C042  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
  6534  000934  C043  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
  6535  000938  2ADE               	incf	postinc2,f,c
  6536  00093A  0E00               	movlw	0
  6537  00093C  22DD               	addwfc	postdec2,f,c
  6538                           
  6539                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 725:             width = (*(i
      +                          nt *)__va_arg(*(int **)ap, (int)0));
  6540  00093E  C044  FFD9         	movff	i2vfpfcnvrt@ap,fsr2l
  6541  000942  C045  FFDA         	movff	i2vfpfcnvrt@ap+1,fsr2h
  6542  000946  CFDF F046          	movff	indf2,??i2_vfpfcnvrt
  6543  00094A  0E02               	movlw	2
  6544  00094C  26DE               	addwf	postinc2,f,c
  6545  00094E  CFDF F047          	movff	indf2,??i2_vfpfcnvrt+1
  6546  000952  0E00               	movlw	0
  6547  000954  22DD               	addwfc	postdec2,f,c
  6548  000956  C046  FFD9         	movff	??i2_vfpfcnvrt,fsr2l
  6549  00095A  C047  FFDA         	movff	??i2_vfpfcnvrt+1,fsr2h
  6550  00095E  CFDE F0EE          	movff	postinc2,_width
  6551  000962  CFDD F0EF          	movff	postdec2,_width+1
  6552                           
  6553                           ; BSR set to: 0
  6554                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 726:             if (width < 
      +                          0) {
  6555  000966  AFEF               	btfss	(_width+1)& (0+255),7,b
  6556  000968  D045               	goto	i2u304_40
  6557                           
  6558                           ; BSR set to: 0
  6559                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 727:                 flags |=
      +                           (1 << 0);
  6560  00096A  81F2               	bsf	_flags& (0+255),0,b
  6561                           
  6562                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 728:                 width = 
      +                          -width;
  6563  00096C  6DEE               	negf	_width& (0+255),b
  6564  00096E  1FEF               	comf	(_width+1)& (0+255),f,b
  6565  000970  B0D8               	btfsc	status,0,c
  6566  000972  2BEF               	incf	(_width+1)& (0+255),f,b
  6567  000974  D03F               	goto	i2u304_40
  6568  000976                     i2l3476:
  6569  000976  FFFF               	dw	65535	; assembler added errata NOP
  6570                           
  6571                           ; BSR set to: 0
  6572                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 731:             width = atoi
      +                          (*fmt);
  6573  000978  C042  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
  6574  00097C  C043  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
  6575  000980  CFDE F008          	movff	postinc2,i2atoi@s
  6576  000984  CFDD F009          	movff	postdec2,i2atoi@s+1
  6577  000988  ECA2  F009         	call	i2_atoi	;wreg free
  6578  00098C  C008  F0EE         	movff	?i2_atoi,_width
  6579  000990  C009  F0EF         	movff	?i2_atoi+1,_width+1
  6580                           
  6581                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 732:             while ((0 ? 
      +                          isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  6582  000994  D008               	goto	i2l3480
  6583  000996                     i2l3478:
  6584  000996  FFFF               	dw	65535	; assembler added errata NOP
  6585                           
  6586                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 733:                 ++*fmt;
  6587  000998  C042  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
  6588  00099C  C043  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
  6589  0009A0  2ADE               	incf	postinc2,f,c
  6590  0009A2  0E00               	movlw	0
  6591  0009A4  22DD               	addwfc	postdec2,f,c
  6592  0009A6                     i2l3480:
  6593  0009A6  FFFF               	dw	65535	; assembler added errata NOP
  6594  0009A8  0ED0               	movlw	208
  6595  0009AA  6E46               	movwf	??i2_vfpfcnvrt& (0+255),c
  6596  0009AC  0EFF               	movlw	255
  6597  0009AE  6E47               	movwf	(??i2_vfpfcnvrt+1)& (0+255),c
  6598  0009B0  C042  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
  6599  0009B4  C043  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
  6600  0009B8  CFDE FFF6          	movff	postinc2,tblptrl
  6601  0009BC  CFDD FFF7          	movff	postdec2,tblptrh
  6602  0009C0                     	if	0	;tblptru may be non-zero
  6603  0009C0                     	endif
  6604  0009C0                     	if	0	;tblptru may be non-zero
  6605  0009C0                     	endif
  6606  0009C0  0008               	tblrd		*
  6607  0009C2  FFFF               	dw	65535	; errata NOP
  6608  0009C4  50F5               	movf	tablat,w,c
  6609  0009C6  6E48               	movwf	(??i2_vfpfcnvrt+2)& (0+255),c
  6610  0009C8  6A49               	clrf	(??i2_vfpfcnvrt+3)& (0+255),c
  6611  0009CA  5046               	movf	??i2_vfpfcnvrt,w,c
  6612  0009CC  2648               	addwf	??i2_vfpfcnvrt+2,f,c
  6613  0009CE  5047               	movf	??i2_vfpfcnvrt+1,w,c
  6614  0009D0  2249               	addwfc	??i2_vfpfcnvrt+3,f,c
  6615  0009D2  5049               	movf	??i2_vfpfcnvrt+3,w,c
  6616  0009D4  E106               	bnz	i2u302_40
  6617  0009D6  0E0A               	movlw	10
  6618  0009D8  5C48               	subwf	??i2_vfpfcnvrt+2,w,c
  6619  0009DA  B0D8               	btfsc	status,0,c
  6620  0009DC  D002               	goto	i2u302_40
  6621  0009DE  0E01               	movlw	1
  6622  0009E0  D002               	goto	i2u303_40
  6623  0009E2                     i2u302_40:
  6624  0009E2  FFFF               	dw	65535	; assembler added errata NOP
  6625  0009E4  0E00               	movlw	0
  6626  0009E6                     i2u303_40:
  6627  0009E6  FFFF               	dw	65535	; assembler added errata NOP
  6628  0009E8  6E52               	movwf	i2_vfpfcnvrt$1046,c
  6629  0009EA  6A53               	clrf	i2_vfpfcnvrt$1046+1,c
  6630  0009EC  5052               	movf	i2_vfpfcnvrt$1046,w,c
  6631  0009EE  1053               	iorwf	i2_vfpfcnvrt$1046+1,w,c
  6632  0009F0  A4D8               	btfss	status,2,c
  6633  0009F2  D7D1               	goto	i2l3478
  6634  0009F4                     i2u304_40:
  6635  0009F4  FFFF               	dw	65535	; assembler added errata NOP
  6636                           
  6637                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 825:         if ((*fmt[0] == 
      +                          'd') || (*fmt[0] == 'i')) {
  6638  0009F6  C042  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
  6639  0009FA  C043  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
  6640  0009FE  CFDE FFF6          	movff	postinc2,tblptrl
  6641  000A02  CFDD FFF7          	movff	postdec2,tblptrh
  6642  000A06                     	if	0	;tblptru may be non-zero
  6643  000A06                     	endif
  6644  000A06                     	if	0	;tblptru may be non-zero
  6645  000A06                     	endif
  6646  000A06  0008               	tblrd		*
  6647  000A08  FFFF               	dw	65535	; errata NOP
  6648  000A0A  50F5               	movf	tablat,w,c
  6649  000A0C  0A64               	xorlw	100
  6650  000A0E  B4D8               	btfsc	status,2,c
  6651  000A10  D00E               	goto	i2u306_40
  6652  000A12  C042  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
  6653  000A16  C043  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
  6654  000A1A  CFDE FFF6          	movff	postinc2,tblptrl
  6655  000A1E  CFDD FFF7          	movff	postdec2,tblptrh
  6656  000A22                     	if	0	;tblptru may be non-zero
  6657  000A22                     	endif
  6658  000A22                     	if	0	;tblptru may be non-zero
  6659  000A22                     	endif
  6660  000A22  0008               	tblrd		*
  6661  000A24  FFFF               	dw	65535	; errata NOP
  6662  000A26  50F5               	movf	tablat,w,c
  6663  000A28  0A69               	xorlw	105
  6664  000A2A  A4D8               	btfss	status,2,c
  6665  000A2C  D040               	goto	i2l3496
  6666  000A2E                     i2u306_40:
  6667  000A2E  FFFF               	dw	65535	; assembler added errata NOP
  6668                           
  6669                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 827:             ++*fmt;
  6670  000A30  C042  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
  6671  000A34  C043  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
  6672  000A38  2ADE               	incf	postinc2,f,c
  6673  000A3A  0E00               	movlw	0
  6674  000A3C  22DD               	addwfc	postdec2,f,c
  6675                           
  6676                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 828:             ll = (long l
      +                          ong)(*(int *)__va_arg(*(int **)ap, (int)0));
  6677  000A3E  C044  FFD9         	movff	i2vfpfcnvrt@ap,fsr2l
  6678  000A42  C045  FFDA         	movff	i2vfpfcnvrt@ap+1,fsr2h
  6679  000A46  CFDF F046          	movff	indf2,??i2_vfpfcnvrt
  6680  000A4A  0E02               	movlw	2
  6681  000A4C  26DE               	addwf	postinc2,f,c
  6682  000A4E  CFDF F047          	movff	indf2,??i2_vfpfcnvrt+1
  6683  000A52  0E00               	movlw	0
  6684  000A54  22DD               	addwfc	postdec2,f,c
  6685  000A56  C046  FFD9         	movff	??i2_vfpfcnvrt,fsr2l
  6686  000A5A  C047  FFDA         	movff	??i2_vfpfcnvrt+1,fsr2h
  6687  000A5E  CFDE F04A          	movff	postinc2,i2vfpfcnvrt@ll
  6688  000A62  CFDD F04B          	movff	postdec2,i2vfpfcnvrt@ll+1
  6689  000A66  0E00               	movlw	0
  6690  000A68  BE4B               	btfsc	i2vfpfcnvrt@ll+1,7,c
  6691  000A6A  0EFF               	movlw	-1
  6692  000A6C  6E4C               	movwf	i2vfpfcnvrt@ll+2,c
  6693  000A6E  6E4D               	movwf	i2vfpfcnvrt@ll+3,c
  6694  000A70  6E4E               	movwf	i2vfpfcnvrt@ll+4,c
  6695  000A72  6E4F               	movwf	i2vfpfcnvrt@ll+5,c
  6696  000A74  6E50               	movwf	i2vfpfcnvrt@ll+6,c
  6697  000A76  6E51               	movwf	i2vfpfcnvrt@ll+7,c
  6698                           
  6699                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 830:             return dtoa(
      +                          fp, ll);
  6700  000A78  C040  F01C         	movff	i2vfpfcnvrt@fp,i2dtoa@fp
  6701  000A7C  C041  F01D         	movff	i2vfpfcnvrt@fp+1,i2dtoa@fp+1
  6702  000A80  C04A  F01E         	movff	i2vfpfcnvrt@ll,i2dtoa@d
  6703  000A84  C04B  F01F         	movff	i2vfpfcnvrt@ll+1,i2dtoa@d+1
  6704  000A88  C04C  F020         	movff	i2vfpfcnvrt@ll+2,i2dtoa@d+2
  6705  000A8C  C04D  F021         	movff	i2vfpfcnvrt@ll+3,i2dtoa@d+3
  6706  000A90  C04E  F022         	movff	i2vfpfcnvrt@ll+4,i2dtoa@d+4
  6707  000A94  C04F  F023         	movff	i2vfpfcnvrt@ll+5,i2dtoa@d+5
  6708  000A98  C050  F024         	movff	i2vfpfcnvrt@ll+6,i2dtoa@d+6
  6709  000A9C  C051  F025         	movff	i2vfpfcnvrt@ll+7,i2dtoa@d+7
  6710  000AA0  ECDF  F006         	call	i2_dtoa	;wreg free
  6711  000AA4  C01C  F040         	movff	?i2_dtoa,?i2_vfpfcnvrt
  6712  000AA8  C01D  F041         	movff	?i2_dtoa+1,?i2_vfpfcnvrt+1
  6713  000AAC  D04F               	goto	i2l615
  6714  000AAE                     i2l3496:
  6715  000AAE  FFFF               	dw	65535	; assembler added errata NOP
  6716                           
  6717                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1350:         if ((*fmt)[0] =
      +                          = '%') {
  6718  000AB0  C042  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
  6719  000AB4  C043  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
  6720  000AB8  CFDE FFF6          	movff	postinc2,tblptrl
  6721  000ABC  CFDD FFF7          	movff	postdec2,tblptrh
  6722  000AC0                     	if	0	;tblptru may be non-zero
  6723  000AC0                     	endif
  6724  000AC0                     	if	0	;tblptru may be non-zero
  6725  000AC0                     	endif
  6726  000AC0  0008               	tblrd		*
  6727  000AC2  FFFF               	dw	65535	; errata NOP
  6728  000AC4  50F5               	movf	tablat,w,c
  6729  000AC6  0A25               	xorlw	37
  6730  000AC8  A4D8               	btfss	status,2,c
  6731  000ACA  D016               	goto	i2l3506
  6732                           
  6733                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1351:             ++*fmt;
  6734  000ACC  C042  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
  6735  000AD0  C043  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
  6736  000AD4  2ADE               	incf	postinc2,f,c
  6737  000AD6  0E00               	movlw	0
  6738  000AD8  22DD               	addwfc	postdec2,f,c
  6739                           
  6740                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1352:             fputc((int)
      +                          '%', fp);
  6741  000ADA  0E00               	movlw	0
  6742  000ADC  6E02               	movwf	i2fputc@c+1,c
  6743  000ADE  0E25               	movlw	37
  6744  000AE0  6E01               	movwf	i2fputc@c,c
  6745  000AE2  C040  F003         	movff	i2vfpfcnvrt@fp,i2fputc@fp
  6746  000AE6  C041  F004         	movff	i2vfpfcnvrt@fp+1,i2fputc@fp+1
  6747  000AEA  ECE8  F00E         	call	i2_fputc	;wreg free
  6748  000AEE                     i2l3502:
  6749  000AEE  FFFF               	dw	65535	; assembler added errata NOP
  6750                           
  6751                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1353:             return 1;
  6752  000AF0  0E00               	movlw	0
  6753  000AF2  6E41               	movwf	?i2_vfpfcnvrt+1,c
  6754  000AF4  0E01               	movlw	1
  6755  000AF6  D00B               	goto	L11
  6756  000AF8                     i2l3506:
  6757  000AF8  FFFF               	dw	65535	; assembler added errata NOP
  6758                           
  6759                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1357:         ++*fmt;
  6760  000AFA  C042  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
  6761  000AFE  C043  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
  6762  000B02  2ADE               	incf	postinc2,f,c
  6763  000B04  0E00               	movlw	0
  6764  000B06  22DD               	addwfc	postdec2,f,c
  6765                           
  6766                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1358:         return 0;
  6767  000B08  0E00               	movlw	0
  6768  000B0A  6E41               	movwf	?i2_vfpfcnvrt+1,c
  6769  000B0C  0E00               	movlw	0
  6770  000B0E                     L11:
  6771  000B0E  FFFF               	dw	65535	; assembler added errata NOP
  6772  000B10  6E40               	movwf	?i2_vfpfcnvrt,c
  6773  000B12  D01C               	goto	i2l615
  6774  000B14                     i2l3512:
  6775  000B14  FFFF               	dw	65535	; assembler added errata NOP
  6776                           
  6777                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1362:     fputc((int)(*fmt)[0
      +                          ], fp);
  6778  000B16  C042  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
  6779  000B1A  C043  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
  6780  000B1E  CFDE FFF6          	movff	postinc2,tblptrl
  6781  000B22  CFDD FFF7          	movff	postdec2,tblptrh
  6782  000B26                     	if	0	;tblptru may be non-zero
  6783  000B26                     	endif
  6784  000B26                     	if	0	;tblptru may be non-zero
  6785  000B26                     	endif
  6786  000B26  0008               	tblrd		*
  6787  000B28  FFFF               	dw	65535	; errata NOP
  6788  000B2A  50F5               	movf	tablat,w,c
  6789  000B2C  6E01               	movwf	i2fputc@c,c
  6790  000B2E  6A02               	clrf	i2fputc@c+1,c
  6791  000B30  C040  F003         	movff	i2vfpfcnvrt@fp,i2fputc@fp
  6792  000B34  C041  F004         	movff	i2vfpfcnvrt@fp+1,i2fputc@fp+1
  6793  000B38  ECE8  F00E         	call	i2_fputc	;wreg free
  6794                           
  6795                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1363:     ++*fmt;
  6796  000B3C  C042  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
  6797  000B40  C043  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
  6798  000B44  2ADE               	incf	postinc2,f,c
  6799  000B46  0E00               	movlw	0
  6800  000B48  22DD               	addwfc	postdec2,f,c
  6801  000B4A  D7D1               	goto	i2l3502
  6802  000B4C                     i2l615:
  6803  000B4C  FFFF               	dw	65535	; assembler added errata NOP
  6804  000B4E  0012               	return		;funcret
  6805  000B50  FFFF               	dw	65535	; errata NOP
  6806  000B52                     __end_ofi2_vfpfcnvrt:
  6807                           	opt callstack 0
  6808                           
  6809 ;; *************** function i2_dtoa *****************
  6810 ;; Defined at:
  6811 ;;		line 274 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  6812 ;; Parameters:    Size  Location     Type
  6813 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  6814 ;;		 -> i2sprintf@f(6), sprintf@f(6), 
  6815 ;;  d               8   29[COMRAM] long long 
  6816 ;; Auto vars:     Size  Location     Type
  6817 ;;  dtoa            8   53[COMRAM] long long 
  6818 ;;  dtoa            2   61[COMRAM] int 
  6819 ;;  dtoa            2   51[COMRAM] int 
  6820 ;;  dtoa            2   49[COMRAM] int 
  6821 ;;  dtoa            2   47[COMRAM] int 
  6822 ;; Return value:  Size  Location     Type
  6823 ;;                  2   27[COMRAM] int 
  6824 ;; Registers used:
  6825 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6826 ;; Tracked objects:
  6827 ;;		On entry : 0/0
  6828 ;;		On exit  : 0/0
  6829 ;;		Unchanged: 0/0
  6830 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6831 ;;      Params:        10       0       0       0       0       0       0
  6832 ;;      Locals:        18       0       0       0       0       0       0
  6833 ;;      Temps:          8       0       0       0       0       0       0
  6834 ;;      Totals:        36       0       0       0       0       0       0
  6835 ;;Total ram usage:       36 bytes
  6836 ;; Hardware stack levels used:    1
  6837 ;; Hardware stack levels required when called:    4
  6838 ;; This function calls:
  6839 ;;		i2___aodiv
  6840 ;;		i2___aomod
  6841 ;;		i2_abs
  6842 ;;		i2_pad
  6843 ;; This function is called by:
  6844 ;;		i2_vfpfcnvrt
  6845 ;; This function uses a non-reentrant model
  6846 ;;
  6847                           
  6848                           	psect	text40
  6849  000DBE                     __ptext40:
  6850                           	opt callstack 0
  6851  000DBE                     i2_dtoa:
  6852                           	opt callstack 0
  6853  000DBE  FFFF               	dw	65535	; assembler added errata NOP
  6854                           
  6855                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 274: static int dtoa(FILE *fp
      +                          , long long d);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 275: {;/opt/mic
      +                          rochip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 276:     int i, p, s, w;;/opt/microchi
      +                          p/xc8/v2.05/pic/sources/c99/common/doprnt.c: 277:     long long n;;/opt/microchip/xc8/v2
      +                          .05/pic/sources/c99/common/doprnt.c: 280:     n = d;
  6856                           
  6857                           ;incstack = 0
  6858  000DC0  C01E  F036         	movff	i2dtoa@d,i2dtoa@n
  6859  000DC4  C01F  F037         	movff	i2dtoa@d+1,i2dtoa@n+1
  6860  000DC8  C020  F038         	movff	i2dtoa@d+2,i2dtoa@n+2
  6861  000DCC  C021  F039         	movff	i2dtoa@d+3,i2dtoa@n+3
  6862  000DD0  C022  F03A         	movff	i2dtoa@d+4,i2dtoa@n+4
  6863  000DD4  C023  F03B         	movff	i2dtoa@d+5,i2dtoa@n+5
  6864  000DD8  C024  F03C         	movff	i2dtoa@d+6,i2dtoa@n+6
  6865  000DDC  C025  F03D         	movff	i2dtoa@d+7,i2dtoa@n+7
  6866                           
  6867                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 281:     s = n < 0 ? 1 : 0;
  6868  000DE0  AE3D               	btfss	i2dtoa@n+7,7,c
  6869  000DE2  D002               	goto	i2u268_40
  6870  000DE4  0E01               	movlw	1
  6871  000DE6  D002               	goto	i2u269_40
  6872  000DE8                     i2u268_40:
  6873  000DE8  FFFF               	dw	65535	; assembler added errata NOP
  6874  000DEA  0E00               	movlw	0
  6875  000DEC                     i2u269_40:
  6876  000DEC  FFFF               	dw	65535	; assembler added errata NOP
  6877  000DEE  6E34               	movwf	i2dtoa@s,c
  6878  000DF0  6A35               	clrf	i2dtoa@s+1,c
  6879                           
  6880                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 282:     if (s) {
  6881  000DF2  5034               	movf	i2dtoa@s,w,c
  6882  000DF4  1035               	iorwf	i2dtoa@s+1,w,c
  6883  000DF6  B4D8               	btfsc	status,2,c
  6884  000DF8  D010               	goto	i2l3246
  6885                           
  6886                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 283:         n = -n;
  6887  000DFA  1E3D               	comf	i2dtoa@n+7,f,c
  6888  000DFC  1E3C               	comf	i2dtoa@n+6,f,c
  6889  000DFE  1E3B               	comf	i2dtoa@n+5,f,c
  6890  000E00  1E3A               	comf	i2dtoa@n+4,f,c
  6891  000E02  1E39               	comf	i2dtoa@n+3,f,c
  6892  000E04  1E38               	comf	i2dtoa@n+2,f,c
  6893  000E06  1E37               	comf	i2dtoa@n+1,f,c
  6894  000E08  6C36               	negf	i2dtoa@n,c
  6895  000E0A  0E00               	movlw	0
  6896  000E0C  2237               	addwfc	i2dtoa@n+1,f,c
  6897  000E0E  2238               	addwfc	i2dtoa@n+2,f,c
  6898  000E10  2239               	addwfc	i2dtoa@n+3,f,c
  6899  000E12  223A               	addwfc	i2dtoa@n+4,f,c
  6900  000E14  223B               	addwfc	i2dtoa@n+5,f,c
  6901  000E16  223C               	addwfc	i2dtoa@n+6,f,c
  6902  000E18  223D               	addwfc	i2dtoa@n+7,f,c
  6903  000E1A                     i2l3246:
  6904  000E1A  FFFF               	dw	65535	; assembler added errata NOP
  6905                           
  6906                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 287:     if (!(prec < 0)) {
  6907  000E1C  0100               	movlb	0	; () banked
  6908  000E1E  AFF1               	btfss	(_prec+1)& (0+255),7,b
  6909                           
  6910                           ; BSR set to: 0
  6911                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 288:         flags &= ~(1 << 
      +                          1);
  6912  000E20  93F2               	bcf	_flags& (0+255),1,b
  6913                           
  6914                           ; BSR set to: 0
  6915                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 290:     p = (0 < prec) ? pre
      +                          c : 1;
  6916  000E22  BFF1               	btfsc	(_prec+1)& (0+255),7,b
  6917  000E24  D005               	goto	i2u272_40
  6918  000E26  51F1               	movf	(_prec+1)& (0+255),w,b
  6919  000E28  E109               	bnz	i2l578
  6920  000E2A  05F0               	decf	_prec& (0+255),w,b
  6921  000E2C  B0D8               	btfsc	status,0,c
  6922  000E2E  D006               	goto	i2l578
  6923  000E30                     i2u272_40:
  6924  000E30  FFFF               	dw	65535	; assembler added errata NOP
  6925                           
  6926                           ; BSR set to: 0
  6927  000E32  0E00               	movlw	0
  6928  000E34  6E31               	movwf	i2dtoa@p+1,c
  6929  000E36  0E01               	movlw	1
  6930  000E38  6E30               	movwf	i2dtoa@p,c
  6931  000E3A  D005               	goto	i2l580
  6932  000E3C                     i2l578:
  6933  000E3C  FFFF               	dw	65535	; assembler added errata NOP
  6934                           
  6935                           ; BSR set to: 0
  6936  000E3E  C0F0  F030         	movff	_prec,i2dtoa@p
  6937  000E42  C0F1  F031         	movff	_prec+1,i2dtoa@p+1
  6938  000E46                     i2l580:
  6939  000E46  FFFF               	dw	65535	; assembler added errata NOP
  6940                           
  6941                           ; BSR set to: 0
  6942                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 291:     w = width;
  6943  000E48  C0EE  F032         	movff	_width,i2dtoa@w
  6944  000E4C  C0EF  F033         	movff	_width+1,i2dtoa@w+1
  6945                           
  6946                           ; BSR set to: 0
  6947                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 292:     if (s || (flags & (1
      +                           << 2))) {
  6948  000E50  5034               	movf	i2dtoa@s,w,c
  6949  000E52  1035               	iorwf	i2dtoa@s+1,w,c
  6950  000E54  A4D8               	btfss	status,2,c
  6951  000E56  D002               	goto	i2u274_40
  6952                           
  6953                           ; BSR set to: 0
  6954  000E58  A5F2               	btfss	_flags& (0+255),2,b
  6955  000E5A  D004               	goto	i2l3260
  6956  000E5C                     i2u274_40:
  6957  000E5C  FFFF               	dw	65535	; assembler added errata NOP
  6958                           
  6959                           ; BSR set to: 0
  6960                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 293:         --w;
  6961  000E5E  0632               	decf	i2dtoa@w,f,c
  6962  000E60  A0D8               	btfss	status,0,c
  6963  000E62  0633               	decf	i2dtoa@w+1,f,c
  6964  000E64                     i2l3260:
  6965  000E64  FFFF               	dw	65535	; assembler added errata NOP
  6966                           
  6967                           ; BSR set to: 0
  6968                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 297:     i = sizeof(dbuf) - 1
      +                          ;
  6969  000E66  0E00               	movlw	0
  6970  000E68  6E3F               	movwf	i2dtoa@i+1,c
  6971  000E6A  0E1F               	movlw	31
  6972  000E6C  6E3E               	movwf	i2dtoa@i,c
  6973                           
  6974                           ; BSR set to: 0
  6975                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 298:     dbuf[i] = '\0';
  6976  000E6E  0E00               	movlw	0
  6977  000E70  0101               	movlb	1	; () banked
  6978  000E72  6F21               	movwf	(_dbuf+31)& (0+255),b
  6979                           
  6980                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  6981  000E74  D07D               	goto	i2l3274
  6982  000E76                     i2l3264:
  6983  000E76  FFFF               	dw	65535	; assembler added errata NOP
  6984                           
  6985                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 300:         --i;
  6986  000E78  063E               	decf	i2dtoa@i,f,c
  6987  000E7A  A0D8               	btfss	status,0,c
  6988  000E7C  063F               	decf	i2dtoa@i+1,f,c
  6989                           
  6990                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 301:         dbuf[i] = '0' + 
      +                          abs(n % 10);
  6991  000E7E  0E02               	movlw	low _dbuf
  6992  000E80  243E               	addwf	i2dtoa@i,w,c
  6993  000E82  6ED9               	movwf	fsr2l,c
  6994  000E84  0E01               	movlw	high _dbuf
  6995  000E86  203F               	addwfc	i2dtoa@i+1,w,c
  6996  000E88  6EDA               	movwf	fsr2h,c
  6997  000E8A  C036  F001         	movff	i2dtoa@n,i2___aomod@dividend
  6998  000E8E  C037  F002         	movff	i2dtoa@n+1,i2___aomod@dividend+1
  6999  000E92  C038  F003         	movff	i2dtoa@n+2,i2___aomod@dividend+2
  7000  000E96  C039  F004         	movff	i2dtoa@n+3,i2___aomod@dividend+3
  7001  000E9A  C03A  F005         	movff	i2dtoa@n+4,i2___aomod@dividend+4
  7002  000E9E  C03B  F006         	movff	i2dtoa@n+5,i2___aomod@dividend+5
  7003  000EA2  C03C  F007         	movff	i2dtoa@n+6,i2___aomod@dividend+6
  7004  000EA6  C03D  F008         	movff	i2dtoa@n+7,i2___aomod@dividend+7
  7005  000EAA  0E0A               	movlw	10
  7006  000EAC  6E09               	movwf	i2___aomod@divisor,c
  7007  000EAE  0E00               	movlw	0
  7008  000EB0  6E0A               	movwf	i2___aomod@divisor+1,c
  7009  000EB2  0E00               	movlw	0
  7010  000EB4  6E0B               	movwf	i2___aomod@divisor+2,c
  7011  000EB6  0E00               	movlw	0
  7012  000EB8  6E0C               	movwf	i2___aomod@divisor+3,c
  7013  000EBA  0E00               	movlw	0
  7014  000EBC  6E0D               	movwf	i2___aomod@divisor+4,c
  7015  000EBE  0E00               	movlw	0
  7016  000EC0  6E0E               	movwf	i2___aomod@divisor+5,c
  7017  000EC2  0E00               	movlw	0
  7018  000EC4  6E0F               	movwf	i2___aomod@divisor+6,c
  7019  000EC6  0E00               	movlw	0
  7020  000EC8  6E10               	movwf	i2___aomod@divisor+7,c
  7021  000ECA  EC4F  F00C         	call	i2___aomod	;wreg free
  7022  000ECE  C001  F026         	movff	?i2___aomod,??i2_dtoa
  7023  000ED2  C002  F027         	movff	?i2___aomod+1,??i2_dtoa+1
  7024  000ED6  C003  F028         	movff	?i2___aomod+2,??i2_dtoa+2
  7025  000EDA  C004  F029         	movff	?i2___aomod+3,??i2_dtoa+3
  7026  000EDE  C005  F02A         	movff	?i2___aomod+4,??i2_dtoa+4
  7027  000EE2  C006  F02B         	movff	?i2___aomod+5,??i2_dtoa+5
  7028  000EE6  C007  F02C         	movff	?i2___aomod+6,??i2_dtoa+6
  7029  000EEA  C008  F02D         	movff	?i2___aomod+7,??i2_dtoa+7
  7030  000EEE  C026  F013         	movff	??i2_dtoa,i2abs@a
  7031  000EF2  C028  F014         	movff	??i2_dtoa+2,i2abs@a+1
  7032  000EF6  ECE1  F013         	call	i2_abs	;wreg free
  7033  000EFA  5013               	movf	?i2_abs,w,c
  7034  000EFC  0F30               	addlw	48
  7035  000EFE  6EDF               	movwf	indf2,c
  7036                           
  7037                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 302:         --p;
  7038  000F00  0630               	decf	i2dtoa@p,f,c
  7039  000F02  A0D8               	btfss	status,0,c
  7040  000F04  0631               	decf	i2dtoa@p+1,f,c
  7041                           
  7042                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 303:         --w;
  7043  000F06  0632               	decf	i2dtoa@w,f,c
  7044  000F08  A0D8               	btfss	status,0,c
  7045  000F0A  0633               	decf	i2dtoa@w+1,f,c
  7046                           
  7047                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 304:         n = n / 10;
  7048  000F0C  C036  F001         	movff	i2dtoa@n,i2___aodiv@dividend
  7049  000F10  C037  F002         	movff	i2dtoa@n+1,i2___aodiv@dividend+1
  7050  000F14  C038  F003         	movff	i2dtoa@n+2,i2___aodiv@dividend+2
  7051  000F18  C039  F004         	movff	i2dtoa@n+3,i2___aodiv@dividend+3
  7052  000F1C  C03A  F005         	movff	i2dtoa@n+4,i2___aodiv@dividend+4
  7053  000F20  C03B  F006         	movff	i2dtoa@n+5,i2___aodiv@dividend+5
  7054  000F24  C03C  F007         	movff	i2dtoa@n+6,i2___aodiv@dividend+6
  7055  000F28  C03D  F008         	movff	i2dtoa@n+7,i2___aodiv@dividend+7
  7056  000F2C  0E0A               	movlw	10
  7057  000F2E  6E09               	movwf	i2___aodiv@divisor,c
  7058  000F30  0E00               	movlw	0
  7059  000F32  6E0A               	movwf	i2___aodiv@divisor+1,c
  7060  000F34  0E00               	movlw	0
  7061  000F36  6E0B               	movwf	i2___aodiv@divisor+2,c
  7062  000F38  0E00               	movlw	0
  7063  000F3A  6E0C               	movwf	i2___aodiv@divisor+3,c
  7064  000F3C  0E00               	movlw	0
  7065  000F3E  6E0D               	movwf	i2___aodiv@divisor+4,c
  7066  000F40  0E00               	movlw	0
  7067  000F42  6E0E               	movwf	i2___aodiv@divisor+5,c
  7068  000F44  0E00               	movlw	0
  7069  000F46  6E0F               	movwf	i2___aodiv@divisor+6,c
  7070  000F48  0E00               	movlw	0
  7071  000F4A  6E10               	movwf	i2___aodiv@divisor+7,c
  7072  000F4C  EC04  F00B         	call	i2___aodiv	;wreg free
  7073  000F50  C001  F036         	movff	?i2___aodiv,i2dtoa@n
  7074  000F54  C002  F037         	movff	?i2___aodiv+1,i2dtoa@n+1
  7075  000F58  C003  F038         	movff	?i2___aodiv+2,i2dtoa@n+2
  7076  000F5C  C004  F039         	movff	?i2___aodiv+3,i2dtoa@n+3
  7077  000F60  C005  F03A         	movff	?i2___aodiv+4,i2dtoa@n+4
  7078  000F64  C006  F03B         	movff	?i2___aodiv+5,i2dtoa@n+5
  7079  000F68  C007  F03C         	movff	?i2___aodiv+6,i2dtoa@n+6
  7080  000F6C  C008  F03D         	movff	?i2___aodiv+7,i2dtoa@n+7
  7081  000F70                     i2l3274:
  7082  000F70  FFFF               	dw	65535	; assembler added errata NOP
  7083                           
  7084                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  7085  000F72  BE3F               	btfsc	i2dtoa@i+1,7,c
  7086  000F74  D021               	goto	i2u279_40
  7087  000F76  503F               	movf	i2dtoa@i+1,w,c
  7088  000F78  E103               	bnz	i2u275_40
  7089  000F7A  043E               	decf	i2dtoa@i,w,c
  7090  000F7C  A0D8               	btfss	status,0,c
  7091  000F7E  D01C               	goto	i2u279_40
  7092  000F80                     i2u275_40:
  7093  000F80  5036               	movf	i2dtoa@n,w,c
  7094  000F82  1037               	iorwf	i2dtoa@n+1,w,c
  7095  000F84  1038               	iorwf	i2dtoa@n+2,w,c
  7096  000F86  1039               	iorwf	i2dtoa@n+3,w,c
  7097  000F88  103A               	iorwf	i2dtoa@n+4,w,c
  7098  000F8A  103B               	iorwf	i2dtoa@n+5,w,c
  7099  000F8C  103C               	iorwf	i2dtoa@n+6,w,c
  7100  000F8E  103D               	iorwf	i2dtoa@n+7,w,c
  7101  000F90  A4D8               	btfss	status,2,c
  7102  000F92  D771               	goto	i2l3264
  7103  000F94  BE31               	btfsc	i2dtoa@p+1,7,c
  7104  000F96  D005               	goto	i2u277_40
  7105  000F98  5031               	movf	i2dtoa@p+1,w,c
  7106  000F9A  E102               	bnz	i2u277_41
  7107  000F9C  0430               	decf	i2dtoa@p,w,c
  7108  000F9E  B0D8               	btfsc	status,0,c
  7109  000FA0                     i2u277_41:
  7110  000FA0  D76A               	goto	i2l3264
  7111  000FA2                     i2u277_40:
  7112  000FA2  FFFF               	dw	65535	; assembler added errata NOP
  7113  000FA4  BE33               	btfsc	i2dtoa@w+1,7,c
  7114  000FA6  D008               	goto	i2u279_40
  7115  000FA8  5033               	movf	i2dtoa@w+1,w,c
  7116  000FAA  E103               	bnz	i2u278_40
  7117  000FAC  0432               	decf	i2dtoa@w,w,c
  7118  000FAE  A0D8               	btfss	status,0,c
  7119  000FB0  D003               	goto	i2u279_40
  7120  000FB2                     i2u278_40:
  7121  000FB2  0100               	movlb	0	; () banked
  7122  000FB4  B3F2               	btfsc	_flags& (0+255),1,b
  7123  000FB6  D75F               	goto	i2l3264
  7124  000FB8                     i2u279_40:
  7125  000FB8  FFFF               	dw	65535	; assembler added errata NOP
  7126                           
  7127                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 308:     if (s || (flags & (1
      +                           << 2))) {
  7128  000FBA  5034               	movf	i2dtoa@s,w,c
  7129  000FBC  1035               	iorwf	i2dtoa@s+1,w,c
  7130  000FBE  A4D8               	btfss	status,2,c
  7131  000FC0  D003               	goto	i2u281_40
  7132  000FC2  0100               	movlb	0	; () banked
  7133  000FC4  A5F2               	btfss	_flags& (0+255),2,b
  7134  000FC6  D01A               	goto	i2l3298
  7135  000FC8                     i2u281_40:
  7136  000FC8  FFFF               	dw	65535	; assembler added errata NOP
  7137                           
  7138                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 309:         --i;
  7139  000FCA  063E               	decf	i2dtoa@i,f,c
  7140  000FCC  A0D8               	btfss	status,0,c
  7141  000FCE  063F               	decf	i2dtoa@i+1,f,c
  7142                           
  7143                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 310:         dbuf[i] = s ? '-
      +                          ' : '+';
  7144  000FD0  5034               	movf	i2dtoa@s,w,c
  7145  000FD2  1035               	iorwf	i2dtoa@s+1,w,c
  7146  000FD4  A4D8               	btfss	status,2,c
  7147  000FD6  D004               	goto	i2l3294
  7148  000FD8  0E00               	movlw	0
  7149  000FDA  6E2F               	movwf	i2_dtoa$1031+1,c
  7150  000FDC  0E2B               	movlw	43
  7151  000FDE  D004               	goto	L12
  7152  000FE0                     i2l3294:
  7153  000FE0  FFFF               	dw	65535	; assembler added errata NOP
  7154  000FE2  0E00               	movlw	0
  7155  000FE4  6E2F               	movwf	i2_dtoa$1031+1,c
  7156  000FE6  0E2D               	movlw	45
  7157  000FE8                     L12:
  7158  000FE8  FFFF               	dw	65535	; assembler added errata NOP
  7159  000FEA  6E2E               	movwf	i2_dtoa$1031,c
  7160  000FEC  0E02               	movlw	low _dbuf
  7161  000FEE  243E               	addwf	i2dtoa@i,w,c
  7162  000FF0  6ED9               	movwf	fsr2l,c
  7163  000FF2  0E01               	movlw	high _dbuf
  7164  000FF4  203F               	addwfc	i2dtoa@i+1,w,c
  7165  000FF6  6EDA               	movwf	fsr2h,c
  7166  000FF8  C02E  FFDF         	movff	i2_dtoa$1031,indf2
  7167  000FFC                     i2l3298:
  7168  000FFC  FFFF               	dw	65535	; assembler added errata NOP
  7169                           
  7170                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 314:     return pad(fp, &dbuf
      +                          [i], w);
  7171  000FFE  C01C  F011         	movff	i2dtoa@fp,i2pad@fp
  7172  001002  C01D  F012         	movff	i2dtoa@fp+1,i2pad@fp+1
  7173  001006  0E02               	movlw	low _dbuf
  7174  001008  243E               	addwf	i2dtoa@i,w,c
  7175  00100A  6E13               	movwf	i2pad@buf,c
  7176  00100C  0E01               	movlw	high _dbuf
  7177  00100E  203F               	addwfc	i2dtoa@i+1,w,c
  7178  001010  6E14               	movwf	i2pad@buf+1,c
  7179  001012  C032  F015         	movff	i2dtoa@w,i2pad@p
  7180  001016  C033  F016         	movff	i2dtoa@w+1,i2pad@p+1
  7181  00101A  EC3E  F00F         	call	i2_pad	;wreg free
  7182  00101E  C011  F01C         	movff	?i2_pad,?i2_dtoa
  7183  001022  C012  F01D         	movff	?i2_pad+1,?i2_dtoa+1
  7184  001026  0012               	return		;funcret
  7185  001028  FFFF               	dw	65535	; errata NOP
  7186  00102A                     __end_ofi2_dtoa:
  7187                           	opt callstack 0
  7188                           
  7189 ;; *************** function i2_pad *****************
  7190 ;; Defined at:
  7191 ;;		line 72 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  7192 ;; Parameters:    Size  Location     Type
  7193 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  7194 ;;		 -> i2sprintf@f(6), sprintf@f(6), 
  7195 ;;  buf             2   18[COMRAM] PTR unsigned char 
  7196 ;;		 -> dbuf(32), 
  7197 ;;  p               2   20[COMRAM] int 
  7198 ;; Auto vars:     Size  Location     Type
  7199 ;;  pad             2   25[COMRAM] int 
  7200 ;;  pad             2   23[COMRAM] int 
  7201 ;; Return value:  Size  Location     Type
  7202 ;;                  2   16[COMRAM] int 
  7203 ;; Registers used:
  7204 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7205 ;; Tracked objects:
  7206 ;;		On entry : 0/0
  7207 ;;		On exit  : 0/0
  7208 ;;		Unchanged: 0/0
  7209 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7210 ;;      Params:         6       0       0       0       0       0       0
  7211 ;;      Locals:         4       0       0       0       0       0       0
  7212 ;;      Temps:          1       0       0       0       0       0       0
  7213 ;;      Totals:        11       0       0       0       0       0       0
  7214 ;;Total ram usage:       11 bytes
  7215 ;; Hardware stack levels used:    1
  7216 ;; Hardware stack levels required when called:    3
  7217 ;; This function calls:
  7218 ;;		i2_fputc
  7219 ;;		i2_fputs
  7220 ;;		i2_strlen
  7221 ;; This function is called by:
  7222 ;;		i2_dtoa
  7223 ;; This function uses a non-reentrant model
  7224 ;;
  7225                           
  7226                           	psect	text41
  7227  001E7C                     __ptext41:
  7228                           	opt callstack 0
  7229  001E7C                     i2_pad:
  7230                           	opt callstack 0
  7231  001E7C  FFFF               	dw	65535	; assembler added errata NOP
  7232                           
  7233                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 72: static int pad(FILE *fp, 
      +                          char *buf, int p);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 73: {;/opt/m
      +                          icrochip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 74:     int i, w;;/opt/microchip/xc8
      +                          /v2.05/pic/sources/c99/common/doprnt.c: 77:     if (flags & (1 << 0)) {
  7234                           
  7235                           ;incstack = 0
  7236  001E7E  0100               	movlb	0	; () banked
  7237  001E80  A1F2               	btfss	_flags& (0+255),0,b
  7238  001E82  D00A               	goto	i2l3010
  7239                           
  7240                           ; BSR set to: 0
  7241                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 78:         fputs((const char
      +                           *)buf, fp);
  7242  001E84  C013  F00A         	movff	i2pad@buf,i2fputs@s
  7243  001E88  C014  F00B         	movff	i2pad@buf+1,i2fputs@s+1
  7244  001E8C  C011  F00C         	movff	i2pad@fp,i2fputs@fp
  7245  001E90  C012  F00D         	movff	i2pad@fp+1,i2fputs@fp+1
  7246  001E94  EC61  F013         	call	i2_fputs	;wreg free
  7247  001E98                     i2l3010:
  7248  001E98  FFFF               	dw	65535	; assembler added errata NOP
  7249                           
  7250                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 82:     w = (p < 0) ? 0 : p;
  7251  001E9A  BE16               	btfsc	i2pad@p+1,7,c
  7252  001E9C  D005               	goto	i2l3014
  7253  001E9E  C015  F01A         	movff	i2pad@p,i2pad@w
  7254  001EA2  C016  F01B         	movff	i2pad@p+1,i2pad@w+1
  7255  001EA6  D005               	goto	i2l567
  7256  001EA8                     i2l3014:
  7257  001EA8  FFFF               	dw	65535	; assembler added errata NOP
  7258  001EAA  0E00               	movlw	0
  7259  001EAC  6E1B               	movwf	i2pad@w+1,c
  7260  001EAE  0E00               	movlw	0
  7261  001EB0  6E1A               	movwf	i2pad@w,c
  7262  001EB2                     i2l567:
  7263  001EB2  FFFF               	dw	65535	; assembler added errata NOP
  7264                           
  7265                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 83:     i = 0;
  7266  001EB4  0E00               	movlw	0
  7267  001EB6  6E19               	movwf	i2pad@i+1,c
  7268  001EB8  0E00               	movlw	0
  7269  001EBA  6E18               	movwf	i2pad@i,c
  7270                           
  7271                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
  7272  001EBC  D00D               	goto	i2l3020
  7273  001EBE                     i2l3016:
  7274  001EBE  FFFF               	dw	65535	; assembler added errata NOP
  7275                           
  7276                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 85:         fputc(' ', fp);
  7277  001EC0  0E00               	movlw	0
  7278  001EC2  6E02               	movwf	i2fputc@c+1,c
  7279  001EC4  0E20               	movlw	32
  7280  001EC6  6E01               	movwf	i2fputc@c,c
  7281  001EC8  C011  F003         	movff	i2pad@fp,i2fputc@fp
  7282  001ECC  C012  F004         	movff	i2pad@fp+1,i2fputc@fp+1
  7283  001ED0  ECE8  F00E         	call	i2_fputc	;wreg free
  7284                           
  7285                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 86:         ++i;
  7286  001ED4  4A18               	infsnz	i2pad@i,f,c
  7287  001ED6  2A19               	incf	i2pad@i+1,f,c
  7288  001ED8                     i2l3020:
  7289  001ED8  FFFF               	dw	65535	; assembler added errata NOP
  7290                           
  7291                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
  7292  001EDA  501A               	movf	i2pad@w,w,c
  7293  001EDC  5C18               	subwf	i2pad@i,w,c
  7294  001EDE  5019               	movf	i2pad@i+1,w,c
  7295  001EE0  0A80               	xorlw	128
  7296  001EE2  6E17               	movwf	??i2_pad& (0+255),c
  7297  001EE4  501B               	movf	i2pad@w+1,w,c
  7298  001EE6  0A80               	xorlw	128
  7299  001EE8  5817               	subwfb	??i2_pad& (0+255),w,c
  7300  001EEA  A0D8               	btfss	status,0,c
  7301  001EEC  D7E8               	goto	i2l3016
  7302                           
  7303                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 90:     if (!(flags & (1 << 0
      +                          ))) {
  7304  001EEE  0100               	movlb	0	; () banked
  7305  001EF0  B1F2               	btfsc	_flags& (0+255),0,b
  7306  001EF2  D00A               	goto	i2l3024
  7307                           
  7308                           ; BSR set to: 0
  7309                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 91:         fputs((const char
      +                           *)buf, fp);
  7310  001EF4  C013  F00A         	movff	i2pad@buf,i2fputs@s
  7311  001EF8  C014  F00B         	movff	i2pad@buf+1,i2fputs@s+1
  7312  001EFC  C011  F00C         	movff	i2pad@fp,i2fputs@fp
  7313  001F00  C012  F00D         	movff	i2pad@fp+1,i2fputs@fp+1
  7314  001F04  EC61  F013         	call	i2_fputs	;wreg free
  7315  001F08                     i2l3024:
  7316  001F08  FFFF               	dw	65535	; assembler added errata NOP
  7317                           
  7318                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 94:     return strlen(buf) + 
      +                          w;
  7319  001F0A  C013  F001         	movff	i2pad@buf,i2strlen@s
  7320  001F0E  C014  F002         	movff	i2pad@buf+1,i2strlen@s+1
  7321  001F12  EC6F  F014         	call	i2_strlen	;wreg free
  7322  001F16  501A               	movf	i2pad@w,w,c
  7323  001F18  2401               	addwf	?i2_strlen,w,c
  7324  001F1A  6E11               	movwf	?i2_pad,c
  7325  001F1C  501B               	movf	i2pad@w+1,w,c
  7326  001F1E  2002               	addwfc	?i2_strlen+1,w,c
  7327  001F20  6E12               	movwf	?i2_pad+1,c
  7328  001F22  0012               	return		;funcret
  7329  001F24  FFFF               	dw	65535	; errata NOP
  7330  001F26                     __end_ofi2_pad:
  7331                           	opt callstack 0
  7332                           
  7333 ;; *************** function i2_strlen *****************
  7334 ;; Defined at:
  7335 ;;		line 12 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/strlen.c"
  7336 ;; Parameters:    Size  Location     Type
  7337 ;;  s               2    0[COMRAM] PTR const unsigned char 
  7338 ;;		 -> dbuf(32), 
  7339 ;; Auto vars:     Size  Location     Type
  7340 ;;  strlen          2    2[COMRAM] PTR const unsigned char 
  7341 ;;		 -> dbuf(32), 
  7342 ;; Return value:  Size  Location     Type
  7343 ;;                  2    0[COMRAM] unsigned int 
  7344 ;; Registers used:
  7345 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7346 ;; Tracked objects:
  7347 ;;		On entry : 0/0
  7348 ;;		On exit  : 0/0
  7349 ;;		Unchanged: 0/0
  7350 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7351 ;;      Params:         2       0       0       0       0       0       0
  7352 ;;      Locals:         2       0       0       0       0       0       0
  7353 ;;      Temps:          0       0       0       0       0       0       0
  7354 ;;      Totals:         4       0       0       0       0       0       0
  7355 ;;Total ram usage:        4 bytes
  7356 ;; Hardware stack levels used:    1
  7357 ;; This function calls:
  7358 ;;		Nothing
  7359 ;; This function is called by:
  7360 ;;		i2_pad
  7361 ;; This function uses a non-reentrant model
  7362 ;;
  7363                           
  7364                           	psect	text42
  7365  0028DE                     __ptext42:
  7366                           	opt callstack 0
  7367  0028DE                     i2_strlen:
  7368                           	opt callstack 0
  7369  0028DE  FFFF               	dw	65535	; assembler added errata NOP
  7370                           
  7371                           ;incstack = 0
  7372  0028E0  C001  F003         	movff	i2strlen@s,i2strlen@a
  7373  0028E4  C002  F004         	movff	i2strlen@s+1,i2strlen@a+1
  7374  0028E8  D003               	goto	i2l2872
  7375  0028EA                     i2l2870:
  7376  0028EA  FFFF               	dw	65535	; assembler added errata NOP
  7377  0028EC  4A01               	infsnz	i2strlen@s,f,c
  7378  0028EE  2A02               	incf	i2strlen@s+1,f,c
  7379  0028F0                     i2l2872:
  7380  0028F0  FFFF               	dw	65535	; assembler added errata NOP
  7381  0028F2  C001  FFD9         	movff	i2strlen@s,fsr2l
  7382  0028F6  C002  FFDA         	movff	i2strlen@s+1,fsr2h
  7383  0028FA  50DF               	movf	indf2,w,c
  7384  0028FC  A4D8               	btfss	status,2,c
  7385  0028FE  D7F5               	goto	i2l2870
  7386  002900  5003               	movf	i2strlen@a,w,c
  7387  002902  5C01               	subwf	i2strlen@s,w,c
  7388  002904  6E01               	movwf	?i2_strlen,c
  7389  002906  5004               	movf	i2strlen@a+1,w,c
  7390  002908  5802               	subwfb	i2strlen@s+1,w,c
  7391  00290A  6E02               	movwf	?i2_strlen+1,c
  7392  00290C  0012               	return		;funcret
  7393  00290E  FFFF               	dw	65535	; errata NOP
  7394  002910                     __end_ofi2_strlen:
  7395                           	opt callstack 0
  7396                           
  7397 ;; *************** function i2_fputs *****************
  7398 ;; Defined at:
  7399 ;;		line 8 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/nf_fputs.c"
  7400 ;; Parameters:    Size  Location     Type
  7401 ;;  s               2    9[COMRAM] PTR const unsigned char 
  7402 ;;		 -> dbuf(32), 
  7403 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  7404 ;;		 -> i2sprintf@f(6), sprintf@f(6), 
  7405 ;; Auto vars:     Size  Location     Type
  7406 ;;  fputs           2   14[COMRAM] int 
  7407 ;;  fputs           1   13[COMRAM] unsigned char 
  7408 ;; Return value:  Size  Location     Type
  7409 ;;                  2    9[COMRAM] int 
  7410 ;; Registers used:
  7411 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7412 ;; Tracked objects:
  7413 ;;		On entry : 0/0
  7414 ;;		On exit  : 0/0
  7415 ;;		Unchanged: 0/0
  7416 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7417 ;;      Params:         4       0       0       0       0       0       0
  7418 ;;      Locals:         3       0       0       0       0       0       0
  7419 ;;      Temps:          0       0       0       0       0       0       0
  7420 ;;      Totals:         7       0       0       0       0       0       0
  7421 ;;Total ram usage:        7 bytes
  7422 ;; Hardware stack levels used:    1
  7423 ;; Hardware stack levels required when called:    2
  7424 ;; This function calls:
  7425 ;;		i2_fputc
  7426 ;; This function is called by:
  7427 ;;		i2_pad
  7428 ;; This function uses a non-reentrant model
  7429 ;;
  7430                           
  7431                           	psect	text43
  7432  0026C2                     __ptext43:
  7433                           	opt callstack 0
  7434  0026C2                     i2_fputs:
  7435                           	opt callstack 0
  7436  0026C2  FFFF               	dw	65535	; assembler added errata NOP
  7437                           
  7438                           ;incstack = 0
  7439  0026C4  0E00               	movlw	0
  7440  0026C6  6E10               	movwf	i2fputs@i+1,c
  7441  0026C8  0E00               	movlw	0
  7442  0026CA  6E0F               	movwf	i2fputs@i,c
  7443  0026CC  D00C               	goto	i2l2866
  7444  0026CE                     i2l2862:
  7445  0026CE  FFFF               	dw	65535	; assembler added errata NOP
  7446  0026D0  C00E  F001         	movff	i2fputs@c,i2fputc@c
  7447  0026D4  6A02               	clrf	i2fputc@c+1,c
  7448  0026D6  C00C  F003         	movff	i2fputs@fp,i2fputc@fp
  7449  0026DA  C00D  F004         	movff	i2fputs@fp+1,i2fputc@fp+1
  7450  0026DE  ECE8  F00E         	call	i2_fputc	;wreg free
  7451  0026E2  4A0F               	infsnz	i2fputs@i,f,c
  7452  0026E4  2A10               	incf	i2fputs@i+1,f,c
  7453  0026E6                     i2l2866:
  7454  0026E6  FFFF               	dw	65535	; assembler added errata NOP
  7455  0026E8  500F               	movf	i2fputs@i,w,c
  7456  0026EA  240A               	addwf	i2fputs@s,w,c
  7457  0026EC  6ED9               	movwf	fsr2l,c
  7458  0026EE  5010               	movf	i2fputs@i+1,w,c
  7459  0026F0  200B               	addwfc	i2fputs@s+1,w,c
  7460  0026F2  6EDA               	movwf	fsr2h,c
  7461  0026F4  50DF               	movf	indf2,w,c
  7462  0026F6  6E0E               	movwf	i2fputs@c,c
  7463  0026F8  500E               	movf	i2fputs@c,w,c
  7464  0026FA  B4D8               	btfsc	status,2,c
  7465  0026FC  0012               	return		;funcret
  7466  0026FE  FFFF               	dw	65535	; assembler added errata NOP
  7467  002700  D7E6               	goto	i2l2862
  7468  002702  FFFF               	dw	65535	; errata NOP
  7469  002704                     __end_ofi2_fputs:
  7470                           	opt callstack 0
  7471                           
  7472 ;; *************** function i2_fputc *****************
  7473 ;; Defined at:
  7474 ;;		line 8 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/nf_fputc.c"
  7475 ;; Parameters:    Size  Location     Type
  7476 ;;  c               2    0[COMRAM] int 
  7477 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  7478 ;;		 -> i2sprintf@f(6), sprintf@f(6), 
  7479 ;; Auto vars:     Size  Location     Type
  7480 ;;		None
  7481 ;; Return value:  Size  Location     Type
  7482 ;;                  2    0[COMRAM] int 
  7483 ;; Registers used:
  7484 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7485 ;; Tracked objects:
  7486 ;;		On entry : 0/0
  7487 ;;		On exit  : 0/0
  7488 ;;		Unchanged: 0/0
  7489 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7490 ;;      Params:         4       0       0       0       0       0       0
  7491 ;;      Locals:         0       0       0       0       0       0       0
  7492 ;;      Temps:          5       0       0       0       0       0       0
  7493 ;;      Totals:         9       0       0       0       0       0       0
  7494 ;;Total ram usage:        9 bytes
  7495 ;; Hardware stack levels used:    1
  7496 ;; Hardware stack levels required when called:    1
  7497 ;; This function calls:
  7498 ;;		i2_putch
  7499 ;; This function is called by:
  7500 ;;		i2_pad
  7501 ;;		i2_vfpfcnvrt
  7502 ;;		i2_fputs
  7503 ;; This function uses a non-reentrant model
  7504 ;;
  7505                           
  7506                           	psect	text44
  7507  001DD0                     __ptext44:
  7508                           	opt callstack 0
  7509  001DD0                     i2_fputc:
  7510                           	opt callstack 0
  7511  001DD0  FFFF               	dw	65535	; assembler added errata NOP
  7512                           
  7513                           ;incstack = 0
  7514  001DD2  5003               	movf	i2fputc@fp,w,c
  7515  001DD4  1004               	iorwf	i2fputc@fp+1,w,c
  7516  001DD6  B4D8               	btfsc	status,2,c
  7517  001DD8  D004               	goto	i2u195_40
  7518  001DDA  5003               	movf	i2fputc@fp,w,c
  7519  001DDC  1004               	iorwf	i2fputc@fp+1,w,c
  7520  001DDE  A4D8               	btfss	status,2,c
  7521  001DE0  D005               	goto	i2l2834
  7522  001DE2                     i2u195_40:
  7523  001DE2  FFFF               	dw	65535	; assembler added errata NOP
  7524  001DE4  5001               	movf	i2fputc@c,w,c
  7525  001DE6  EC44  F015         	call	i2_putch
  7526  001DEA  D045               	goto	i2l1360
  7527  001DEC                     i2l2834:
  7528  001DEC  FFFF               	dw	65535	; assembler added errata NOP
  7529  001DEE  EE20 F004          	lfsr	2,4
  7530  001DF2  5003               	movf	i2fputc@fp,w,c
  7531  001DF4  26D9               	addwf	fsr2l,f,c
  7532  001DF6  5004               	movf	i2fputc@fp+1,w,c
  7533  001DF8  22DA               	addwfc	fsr2h,f,c
  7534  001DFA  50DE               	movf	postinc2,w,c
  7535  001DFC  10DE               	iorwf	postinc2,w,c
  7536  001DFE  B4D8               	btfsc	status,2,c
  7537  001E00  D016               	goto	i2u197_40
  7538  001E02  EE20 F004          	lfsr	2,4
  7539  001E06  5003               	movf	i2fputc@fp,w,c
  7540  001E08  26D9               	addwf	fsr2l,f,c
  7541  001E0A  5004               	movf	i2fputc@fp+1,w,c
  7542  001E0C  22DA               	addwfc	fsr2h,f,c
  7543  001E0E  EE10 F002          	lfsr	1,2
  7544  001E12  5003               	movf	i2fputc@fp,w,c
  7545  001E14  26E1               	addwf	fsr1l,f,c
  7546  001E16  5004               	movf	i2fputc@fp+1,w,c
  7547  001E18  22E2               	addwfc	fsr1h,f,c
  7548  001E1A  50DE               	movf	postinc2,w,c
  7549  001E1C  5CE6               	subwf	postinc1,w,c
  7550  001E1E  50E6               	movf	postinc1,w,c
  7551  001E20  0A80               	xorlw	128
  7552  001E22  6E09               	movwf	(??i2_fputc+4)& (0+255),c
  7553  001E24  50DE               	movf	postinc2,w,c
  7554  001E26  0A80               	xorlw	128
  7555  001E28  5809               	subwfb	(??i2_fputc+4)& (0+255),w,c
  7556  001E2A  B0D8               	btfsc	status,0,c
  7557  001E2C  D024               	goto	i2l1360
  7558  001E2E                     i2u197_40:
  7559  001E2E  FFFF               	dw	65535	; assembler added errata NOP
  7560  001E30  EE20 F002          	lfsr	2,2
  7561  001E34  5003               	movf	i2fputc@fp,w,c
  7562  001E36  26D9               	addwf	fsr2l,f,c
  7563  001E38  5004               	movf	i2fputc@fp+1,w,c
  7564  001E3A  22DA               	addwfc	fsr2h,f,c
  7565  001E3C  CFDE F005          	movff	postinc2,??i2_fputc
  7566  001E40  CFDD F006          	movff	postdec2,??i2_fputc+1
  7567  001E44  C003  FFD9         	movff	i2fputc@fp,fsr2l
  7568  001E48  C004  FFDA         	movff	i2fputc@fp+1,fsr2h
  7569  001E4C  CFDE F007          	movff	postinc2,??i2_fputc+2
  7570  001E50  CFDD F008          	movff	postdec2,??i2_fputc+3
  7571  001E54  5005               	movf	??i2_fputc,w,c
  7572  001E56  2407               	addwf	??i2_fputc+2,w,c
  7573  001E58  6ED9               	movwf	fsr2l,c
  7574  001E5A  5006               	movf	??i2_fputc+1,w,c
  7575  001E5C  2008               	addwfc	??i2_fputc+3,w,c
  7576  001E5E  6EDA               	movwf	fsr2h,c
  7577  001E60  C001  FFDF         	movff	i2fputc@c,indf2
  7578  001E64  EE20 F002          	lfsr	2,2
  7579  001E68  5003               	movf	i2fputc@fp,w,c
  7580  001E6A  26D9               	addwf	fsr2l,f,c
  7581  001E6C  5004               	movf	i2fputc@fp+1,w,c
  7582  001E6E  22DA               	addwfc	fsr2h,f,c
  7583  001E70  2ADE               	incf	postinc2,f,c
  7584  001E72  0E00               	movlw	0
  7585  001E74  22DD               	addwfc	postdec2,f,c
  7586  001E76                     i2l1360:
  7587  001E76  FFFF               	dw	65535	; assembler added errata NOP
  7588  001E78  0012               	return		;funcret
  7589  001E7A  FFFF               	dw	65535	; errata NOP
  7590  001E7C                     __end_ofi2_fputc:
  7591                           	opt callstack 0
  7592                           
  7593 ;; *************** function i2_putch *****************
  7594 ;; Defined at:
  7595 ;;		line 7 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/putch.c"
  7596 ;; Parameters:    Size  Location     Type
  7597 ;;  c               1    wreg     unsigned char 
  7598 ;; Auto vars:     Size  Location     Type
  7599 ;;  c               1  (no storage) unsigned char 
  7600 ;; Return value:  Size  Location     Type
  7601 ;;                  1    wreg      void 
  7602 ;; Registers used:
  7603 ;;		wreg
  7604 ;; Tracked objects:
  7605 ;;		On entry : 0/0
  7606 ;;		On exit  : 0/0
  7607 ;;		Unchanged: 0/0
  7608 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7609 ;;      Params:         0       0       0       0       0       0       0
  7610 ;;      Locals:         0       0       0       0       0       0       0
  7611 ;;      Temps:          0       0       0       0       0       0       0
  7612 ;;      Totals:         0       0       0       0       0       0       0
  7613 ;;Total ram usage:        0 bytes
  7614 ;; Hardware stack levels used:    1
  7615 ;; This function calls:
  7616 ;;		Nothing
  7617 ;; This function is called by:
  7618 ;;		i2_fputc
  7619 ;; This function uses a non-reentrant model
  7620 ;;
  7621                           
  7622                           	psect	text45
  7623  002A88                     __ptext45:
  7624                           	opt callstack 0
  7625  002A88                     i2_putch:
  7626                           	opt callstack 0
  7627  002A88  FFFF               	dw	65535	; assembler added errata NOP
  7628                           
  7629                           ;incstack = 0
  7630  002A8A  0012               	return		;funcret
  7631  002A8C  FFFF               	dw	65535	; errata NOP
  7632  002A8E                     __end_ofi2_putch:
  7633                           	opt callstack 0
  7634                           
  7635 ;; *************** function i2_abs *****************
  7636 ;; Defined at:
  7637 ;;		line 1 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/abs.c"
  7638 ;; Parameters:    Size  Location     Type
  7639 ;;  a               2   18[COMRAM] int 
  7640 ;; Auto vars:     Size  Location     Type
  7641 ;;		None
  7642 ;; Return value:  Size  Location     Type
  7643 ;;                  2   18[COMRAM] int 
  7644 ;; Registers used:
  7645 ;;		wreg, status,2, status,0
  7646 ;; Tracked objects:
  7647 ;;		On entry : 0/0
  7648 ;;		On exit  : 0/0
  7649 ;;		Unchanged: 0/0
  7650 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7651 ;;      Params:         2       0       0       0       0       0       0
  7652 ;;      Locals:         0       0       0       0       0       0       0
  7653 ;;      Temps:          2       0       0       0       0       0       0
  7654 ;;      Totals:         4       0       0       0       0       0       0
  7655 ;;Total ram usage:        4 bytes
  7656 ;; Hardware stack levels used:    1
  7657 ;; This function calls:
  7658 ;;		Nothing
  7659 ;; This function is called by:
  7660 ;;		i2_dtoa
  7661 ;; This function uses a non-reentrant model
  7662 ;;
  7663                           
  7664                           	psect	text46
  7665  0027C2                     __ptext46:
  7666                           	opt callstack 0
  7667  0027C2                     i2_abs:
  7668                           	opt callstack 0
  7669  0027C2  FFFF               	dw	65535	; assembler added errata NOP
  7670                           
  7671                           ;incstack = 0
  7672  0027C4  BE14               	btfsc	i2abs@a+1,7,c
  7673  0027C6  D005               	goto	i2u241_40
  7674  0027C8  5014               	movf	i2abs@a+1,w,c
  7675  0027CA  E111               	bnz	i2l1300
  7676  0027CC  0413               	decf	i2abs@a,w,c
  7677  0027CE  B0D8               	btfsc	status,0,c
  7678  0027D0  D00E               	goto	i2l1300
  7679  0027D2                     i2u241_40:
  7680  0027D2  FFFF               	dw	65535	; assembler added errata NOP
  7681  0027D4  C013  F015         	movff	i2abs@a,??i2_abs
  7682  0027D8  C014  F016         	movff	i2abs@a+1,??i2_abs+1
  7683  0027DC  1E15               	comf	??i2_abs,f,c
  7684  0027DE  1E16               	comf	??i2_abs+1,f,c
  7685  0027E0  4A15               	infsnz	??i2_abs,f,c
  7686  0027E2  2A16               	incf	??i2_abs+1,f,c
  7687  0027E4  C015  F013         	movff	??i2_abs,?i2_abs
  7688  0027E8  C016  F014         	movff	??i2_abs+1,?i2_abs+1
  7689  0027EC  D005               	goto	i2l1303
  7690  0027EE                     i2l1300:
  7691  0027EE  FFFF               	dw	65535	; assembler added errata NOP
  7692  0027F0  C013  F013         	movff	i2abs@a,?i2_abs
  7693  0027F4  C014  F014         	movff	i2abs@a+1,?i2_abs+1
  7694  0027F8                     i2l1303:
  7695  0027F8  FFFF               	dw	65535	; assembler added errata NOP
  7696  0027FA  0012               	return		;funcret
  7697  0027FC  FFFF               	dw	65535	; errata NOP
  7698  0027FE                     __end_ofi2_abs:
  7699                           	opt callstack 0
  7700                           
  7701 ;; *************** function i2___aomod *****************
  7702 ;; Defined at:
  7703 ;;		line 9 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/aomod.c"
  7704 ;; Parameters:    Size  Location     Type
  7705 ;;  dividend        8    0[COMRAM] long long 
  7706 ;;  divisor         8    8[COMRAM] long long 
  7707 ;; Auto vars:     Size  Location     Type
  7708 ;;  __aomod         1   17[COMRAM] unsigned char 
  7709 ;;  __aomod         1   16[COMRAM] unsigned char 
  7710 ;; Return value:  Size  Location     Type
  7711 ;;                  8    0[COMRAM] long long 
  7712 ;; Registers used:
  7713 ;;		wreg, status,2, status,0
  7714 ;; Tracked objects:
  7715 ;;		On entry : 0/0
  7716 ;;		On exit  : 0/0
  7717 ;;		Unchanged: 0/0
  7718 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7719 ;;      Params:        16       0       0       0       0       0       0
  7720 ;;      Locals:         2       0       0       0       0       0       0
  7721 ;;      Temps:          0       0       0       0       0       0       0
  7722 ;;      Totals:        18       0       0       0       0       0       0
  7723 ;;Total ram usage:       18 bytes
  7724 ;; Hardware stack levels used:    1
  7725 ;; This function calls:
  7726 ;;		Nothing
  7727 ;; This function is called by:
  7728 ;;		i2_dtoa
  7729 ;; This function uses a non-reentrant model
  7730 ;;
  7731                           
  7732                           	psect	text47
  7733  00189E                     __ptext47:
  7734                           	opt callstack 0
  7735  00189E                     i2___aomod:
  7736                           	opt callstack 0
  7737  00189E  FFFF               	dw	65535	; assembler added errata NOP
  7738                           
  7739                           ;incstack = 0
  7740  0018A0  0E00               	movlw	0
  7741  0018A2  6E12               	movwf	i2___aomod@sign,c
  7742  0018A4  AE08               	btfss	i2___aomod@dividend+7,7,c
  7743  0018A6  D012               	goto	i2l3086
  7744  0018A8  1E08               	comf	i2___aomod@dividend+7,f,c
  7745  0018AA  1E07               	comf	i2___aomod@dividend+6,f,c
  7746  0018AC  1E06               	comf	i2___aomod@dividend+5,f,c
  7747  0018AE  1E05               	comf	i2___aomod@dividend+4,f,c
  7748  0018B0  1E04               	comf	i2___aomod@dividend+3,f,c
  7749  0018B2  1E03               	comf	i2___aomod@dividend+2,f,c
  7750  0018B4  1E02               	comf	i2___aomod@dividend+1,f,c
  7751  0018B6  6C01               	negf	i2___aomod@dividend,c
  7752  0018B8  0E00               	movlw	0
  7753  0018BA  2202               	addwfc	i2___aomod@dividend+1,f,c
  7754  0018BC  2203               	addwfc	i2___aomod@dividend+2,f,c
  7755  0018BE  2204               	addwfc	i2___aomod@dividend+3,f,c
  7756  0018C0  2205               	addwfc	i2___aomod@dividend+4,f,c
  7757  0018C2  2206               	addwfc	i2___aomod@dividend+5,f,c
  7758  0018C4  2207               	addwfc	i2___aomod@dividend+6,f,c
  7759  0018C6  2208               	addwfc	i2___aomod@dividend+7,f,c
  7760  0018C8  0E01               	movlw	1
  7761  0018CA  6E12               	movwf	i2___aomod@sign,c
  7762  0018CC                     i2l3086:
  7763  0018CC  FFFF               	dw	65535	; assembler added errata NOP
  7764  0018CE  AE10               	btfss	i2___aomod@divisor+7,7,c
  7765  0018D0  D010               	goto	i2l3090
  7766  0018D2  1E10               	comf	i2___aomod@divisor+7,f,c
  7767  0018D4  1E0F               	comf	i2___aomod@divisor+6,f,c
  7768  0018D6  1E0E               	comf	i2___aomod@divisor+5,f,c
  7769  0018D8  1E0D               	comf	i2___aomod@divisor+4,f,c
  7770  0018DA  1E0C               	comf	i2___aomod@divisor+3,f,c
  7771  0018DC  1E0B               	comf	i2___aomod@divisor+2,f,c
  7772  0018DE  1E0A               	comf	i2___aomod@divisor+1,f,c
  7773  0018E0  6C09               	negf	i2___aomod@divisor,c
  7774  0018E2  0E00               	movlw	0
  7775  0018E4  220A               	addwfc	i2___aomod@divisor+1,f,c
  7776  0018E6  220B               	addwfc	i2___aomod@divisor+2,f,c
  7777  0018E8  220C               	addwfc	i2___aomod@divisor+3,f,c
  7778  0018EA  220D               	addwfc	i2___aomod@divisor+4,f,c
  7779  0018EC  220E               	addwfc	i2___aomod@divisor+5,f,c
  7780  0018EE  220F               	addwfc	i2___aomod@divisor+6,f,c
  7781  0018F0  2210               	addwfc	i2___aomod@divisor+7,f,c
  7782  0018F2                     i2l3090:
  7783  0018F2  FFFF               	dw	65535	; assembler added errata NOP
  7784  0018F4  5009               	movf	i2___aomod@divisor,w,c
  7785  0018F6  100A               	iorwf	i2___aomod@divisor+1,w,c
  7786  0018F8  100B               	iorwf	i2___aomod@divisor+2,w,c
  7787  0018FA  100C               	iorwf	i2___aomod@divisor+3,w,c
  7788  0018FC  100D               	iorwf	i2___aomod@divisor+4,w,c
  7789  0018FE  100E               	iorwf	i2___aomod@divisor+5,w,c
  7790  001900  100F               	iorwf	i2___aomod@divisor+6,w,c
  7791  001902  1010               	iorwf	i2___aomod@divisor+7,w,c
  7792  001904  B4D8               	btfsc	status,2,c
  7793  001906  D040               	goto	i2l3106
  7794  001908  0E01               	movlw	1
  7795  00190A  6E11               	movwf	i2___aomod@counter,c
  7796  00190C  D00B               	goto	i2l3096
  7797  00190E                     i2l3094:
  7798  00190E  FFFF               	dw	65535	; assembler added errata NOP
  7799  001910  90D8               	bcf	status,0,c
  7800  001912  3609               	rlcf	i2___aomod@divisor,f,c
  7801  001914  360A               	rlcf	i2___aomod@divisor+1,f,c
  7802  001916  360B               	rlcf	i2___aomod@divisor+2,f,c
  7803  001918  360C               	rlcf	i2___aomod@divisor+3,f,c
  7804  00191A  360D               	rlcf	i2___aomod@divisor+4,f,c
  7805  00191C  360E               	rlcf	i2___aomod@divisor+5,f,c
  7806  00191E  360F               	rlcf	i2___aomod@divisor+6,f,c
  7807  001920  3610               	rlcf	i2___aomod@divisor+7,f,c
  7808  001922  2A11               	incf	i2___aomod@counter,f,c
  7809  001924                     i2l3096:
  7810  001924  FFFF               	dw	65535	; assembler added errata NOP
  7811  001926  AE10               	btfss	i2___aomod@divisor+7,7,c
  7812  001928  D7F2               	goto	i2l3094
  7813  00192A                     i2u238_40:
  7814  00192A  FFFF               	dw	65535	; assembler added errata NOP
  7815  00192C  5009               	movf	i2___aomod@divisor,w,c
  7816  00192E  5C01               	subwf	i2___aomod@dividend,w,c
  7817  001930  500A               	movf	i2___aomod@divisor+1,w,c
  7818  001932  5802               	subwfb	i2___aomod@dividend+1,w,c
  7819  001934  500B               	movf	i2___aomod@divisor+2,w,c
  7820  001936  5803               	subwfb	i2___aomod@dividend+2,w,c
  7821  001938  500C               	movf	i2___aomod@divisor+3,w,c
  7822  00193A  5804               	subwfb	i2___aomod@dividend+3,w,c
  7823  00193C  500D               	movf	i2___aomod@divisor+4,w,c
  7824  00193E  5805               	subwfb	i2___aomod@dividend+4,w,c
  7825  001940  500E               	movf	i2___aomod@divisor+5,w,c
  7826  001942  5806               	subwfb	i2___aomod@dividend+5,w,c
  7827  001944  500F               	movf	i2___aomod@divisor+6,w,c
  7828  001946  5807               	subwfb	i2___aomod@dividend+6,w,c
  7829  001948  5010               	movf	i2___aomod@divisor+7,w,c
  7830  00194A  5808               	subwfb	i2___aomod@dividend+7,w,c
  7831  00194C  A0D8               	btfss	status,0,c
  7832  00194E  D010               	goto	i2l3102
  7833  001950  5009               	movf	i2___aomod@divisor,w,c
  7834  001952  5E01               	subwf	i2___aomod@dividend,f,c
  7835  001954  500A               	movf	i2___aomod@divisor+1,w,c
  7836  001956  5A02               	subwfb	i2___aomod@dividend+1,f,c
  7837  001958  500B               	movf	i2___aomod@divisor+2,w,c
  7838  00195A  5A03               	subwfb	i2___aomod@dividend+2,f,c
  7839  00195C  500C               	movf	i2___aomod@divisor+3,w,c
  7840  00195E  5A04               	subwfb	i2___aomod@dividend+3,f,c
  7841  001960  500D               	movf	i2___aomod@divisor+4,w,c
  7842  001962  5A05               	subwfb	i2___aomod@dividend+4,f,c
  7843  001964  500E               	movf	i2___aomod@divisor+5,w,c
  7844  001966  5A06               	subwfb	i2___aomod@dividend+5,f,c
  7845  001968  500F               	movf	i2___aomod@divisor+6,w,c
  7846  00196A  5A07               	subwfb	i2___aomod@dividend+6,f,c
  7847  00196C  5010               	movf	i2___aomod@divisor+7,w,c
  7848  00196E  5A08               	subwfb	i2___aomod@dividend+7,f,c
  7849  001970                     i2l3102:
  7850  001970  FFFF               	dw	65535	; assembler added errata NOP
  7851  001972  90D8               	bcf	status,0,c
  7852  001974  3210               	rrcf	i2___aomod@divisor+7,f,c
  7853  001976  320F               	rrcf	i2___aomod@divisor+6,f,c
  7854  001978  320E               	rrcf	i2___aomod@divisor+5,f,c
  7855  00197A  320D               	rrcf	i2___aomod@divisor+4,f,c
  7856  00197C  320C               	rrcf	i2___aomod@divisor+3,f,c
  7857  00197E  320B               	rrcf	i2___aomod@divisor+2,f,c
  7858  001980  320A               	rrcf	i2___aomod@divisor+1,f,c
  7859  001982  3209               	rrcf	i2___aomod@divisor,f,c
  7860  001984  2E11               	decfsz	i2___aomod@counter,f,c
  7861  001986  D7D1               	goto	i2u238_40
  7862  001988                     i2l3106:
  7863  001988  FFFF               	dw	65535	; assembler added errata NOP
  7864  00198A  5012               	movf	i2___aomod@sign,w,c
  7865  00198C  B4D8               	btfsc	status,2,c
  7866  00198E  D010               	goto	i2l3110
  7867  001990  1E08               	comf	i2___aomod@dividend+7,f,c
  7868  001992  1E07               	comf	i2___aomod@dividend+6,f,c
  7869  001994  1E06               	comf	i2___aomod@dividend+5,f,c
  7870  001996  1E05               	comf	i2___aomod@dividend+4,f,c
  7871  001998  1E04               	comf	i2___aomod@dividend+3,f,c
  7872  00199A  1E03               	comf	i2___aomod@dividend+2,f,c
  7873  00199C  1E02               	comf	i2___aomod@dividend+1,f,c
  7874  00199E  6C01               	negf	i2___aomod@dividend,c
  7875  0019A0  0E00               	movlw	0
  7876  0019A2  2202               	addwfc	i2___aomod@dividend+1,f,c
  7877  0019A4  2203               	addwfc	i2___aomod@dividend+2,f,c
  7878  0019A6  2204               	addwfc	i2___aomod@dividend+3,f,c
  7879  0019A8  2205               	addwfc	i2___aomod@dividend+4,f,c
  7880  0019AA  2206               	addwfc	i2___aomod@dividend+5,f,c
  7881  0019AC  2207               	addwfc	i2___aomod@dividend+6,f,c
  7882  0019AE  2208               	addwfc	i2___aomod@dividend+7,f,c
  7883  0019B0                     i2l3110:
  7884  0019B0  FFFF               	dw	65535	; assembler added errata NOP
  7885  0019B2  C001  F001         	movff	i2___aomod@dividend,?i2___aomod
  7886  0019B6  C002  F002         	movff	i2___aomod@dividend+1,?i2___aomod+1
  7887  0019BA  C003  F003         	movff	i2___aomod@dividend+2,?i2___aomod+2
  7888  0019BE  C004  F004         	movff	i2___aomod@dividend+3,?i2___aomod+3
  7889  0019C2  C005  F005         	movff	i2___aomod@dividend+4,?i2___aomod+4
  7890  0019C6  C006  F006         	movff	i2___aomod@dividend+5,?i2___aomod+5
  7891  0019CA  C007  F007         	movff	i2___aomod@dividend+6,?i2___aomod+6
  7892  0019CE  C008  F008         	movff	i2___aomod@dividend+7,?i2___aomod+7
  7893  0019D2  0012               	return		;funcret
  7894  0019D4  FFFF               	dw	65535	; errata NOP
  7895  0019D6                     __end_ofi2___aomod:
  7896                           	opt callstack 0
  7897                           
  7898 ;; *************** function i2___aodiv *****************
  7899 ;; Defined at:
  7900 ;;		line 9 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/aodiv.c"
  7901 ;; Parameters:    Size  Location     Type
  7902 ;;  dividend        8    0[COMRAM] long long 
  7903 ;;  divisor         8    8[COMRAM] long long 
  7904 ;; Auto vars:     Size  Location     Type
  7905 ;;  __aodiv         8   18[COMRAM] long long 
  7906 ;;  __aodiv         1   17[COMRAM] unsigned char 
  7907 ;;  __aodiv         1   16[COMRAM] unsigned char 
  7908 ;; Return value:  Size  Location     Type
  7909 ;;                  8    0[COMRAM] long long 
  7910 ;; Registers used:
  7911 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7912 ;; Tracked objects:
  7913 ;;		On entry : 0/0
  7914 ;;		On exit  : 0/0
  7915 ;;		Unchanged: 0/0
  7916 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7917 ;;      Params:        16       0       0       0       0       0       0
  7918 ;;      Locals:        10       0       0       0       0       0       0
  7919 ;;      Temps:          0       0       0       0       0       0       0
  7920 ;;      Totals:        26       0       0       0       0       0       0
  7921 ;;Total ram usage:       26 bytes
  7922 ;; Hardware stack levels used:    1
  7923 ;; This function calls:
  7924 ;;		Nothing
  7925 ;; This function is called by:
  7926 ;;		i2_dtoa
  7927 ;; This function uses a non-reentrant model
  7928 ;;
  7929                           
  7930                           	psect	text48
  7931  001608                     __ptext48:
  7932                           	opt callstack 0
  7933  001608                     i2___aodiv:
  7934                           	opt callstack 0
  7935  001608  FFFF               	dw	65535	; assembler added errata NOP
  7936                           
  7937                           ;incstack = 0
  7938  00160A  0E00               	movlw	0
  7939  00160C  6E12               	movwf	i2___aodiv@sign,c
  7940  00160E  AE10               	btfss	i2___aodiv@divisor+7,7,c
  7941  001610  D012               	goto	i2l3042
  7942  001612  1E10               	comf	i2___aodiv@divisor+7,f,c
  7943  001614  1E0F               	comf	i2___aodiv@divisor+6,f,c
  7944  001616  1E0E               	comf	i2___aodiv@divisor+5,f,c
  7945  001618  1E0D               	comf	i2___aodiv@divisor+4,f,c
  7946  00161A  1E0C               	comf	i2___aodiv@divisor+3,f,c
  7947  00161C  1E0B               	comf	i2___aodiv@divisor+2,f,c
  7948  00161E  1E0A               	comf	i2___aodiv@divisor+1,f,c
  7949  001620  6C09               	negf	i2___aodiv@divisor,c
  7950  001622  0E00               	movlw	0
  7951  001624  220A               	addwfc	i2___aodiv@divisor+1,f,c
  7952  001626  220B               	addwfc	i2___aodiv@divisor+2,f,c
  7953  001628  220C               	addwfc	i2___aodiv@divisor+3,f,c
  7954  00162A  220D               	addwfc	i2___aodiv@divisor+4,f,c
  7955  00162C  220E               	addwfc	i2___aodiv@divisor+5,f,c
  7956  00162E  220F               	addwfc	i2___aodiv@divisor+6,f,c
  7957  001630  2210               	addwfc	i2___aodiv@divisor+7,f,c
  7958  001632  0E01               	movlw	1
  7959  001634  6E12               	movwf	i2___aodiv@sign,c
  7960  001636                     i2l3042:
  7961  001636  FFFF               	dw	65535	; assembler added errata NOP
  7962  001638  AE08               	btfss	i2___aodiv@dividend+7,7,c
  7963  00163A  D012               	goto	i2l3048
  7964  00163C  1E08               	comf	i2___aodiv@dividend+7,f,c
  7965  00163E  1E07               	comf	i2___aodiv@dividend+6,f,c
  7966  001640  1E06               	comf	i2___aodiv@dividend+5,f,c
  7967  001642  1E05               	comf	i2___aodiv@dividend+4,f,c
  7968  001644  1E04               	comf	i2___aodiv@dividend+3,f,c
  7969  001646  1E03               	comf	i2___aodiv@dividend+2,f,c
  7970  001648  1E02               	comf	i2___aodiv@dividend+1,f,c
  7971  00164A  6C01               	negf	i2___aodiv@dividend,c
  7972  00164C  0E00               	movlw	0
  7973  00164E  2202               	addwfc	i2___aodiv@dividend+1,f,c
  7974  001650  2203               	addwfc	i2___aodiv@dividend+2,f,c
  7975  001652  2204               	addwfc	i2___aodiv@dividend+3,f,c
  7976  001654  2205               	addwfc	i2___aodiv@dividend+4,f,c
  7977  001656  2206               	addwfc	i2___aodiv@dividend+5,f,c
  7978  001658  2207               	addwfc	i2___aodiv@dividend+6,f,c
  7979  00165A  2208               	addwfc	i2___aodiv@dividend+7,f,c
  7980  00165C  0E01               	movlw	1
  7981  00165E  1A12               	xorwf	i2___aodiv@sign,f,c
  7982  001660                     i2l3048:
  7983  001660  FFFF               	dw	65535	; assembler added errata NOP
  7984  001662  EE20  F013         	lfsr	2,i2___aodiv@quotient
  7985  001666  0E07               	movlw	7
  7986  001668                     i2u230_41:
  7987  001668  6ADE               	clrf	postinc2,c
  7988  00166A  06E8               	decf	wreg,f,c
  7989  00166C  E2FD               	bc	i2u230_41
  7990  00166E  5009               	movf	i2___aodiv@divisor,w,c
  7991  001670  100A               	iorwf	i2___aodiv@divisor+1,w,c
  7992  001672  100B               	iorwf	i2___aodiv@divisor+2,w,c
  7993  001674  100C               	iorwf	i2___aodiv@divisor+3,w,c
  7994  001676  100D               	iorwf	i2___aodiv@divisor+4,w,c
  7995  001678  100E               	iorwf	i2___aodiv@divisor+5,w,c
  7996  00167A  100F               	iorwf	i2___aodiv@divisor+6,w,c
  7997  00167C  1010               	iorwf	i2___aodiv@divisor+7,w,c
  7998  00167E  B4D8               	btfsc	status,2,c
  7999  001680  D04A               	goto	i2l3070
  8000  001682  0E01               	movlw	1
  8001  001684  6E11               	movwf	i2___aodiv@counter,c
  8002  001686  D00B               	goto	i2l3056
  8003  001688                     i2l3054:
  8004  001688  FFFF               	dw	65535	; assembler added errata NOP
  8005  00168A  90D8               	bcf	status,0,c
  8006  00168C  3609               	rlcf	i2___aodiv@divisor,f,c
  8007  00168E  360A               	rlcf	i2___aodiv@divisor+1,f,c
  8008  001690  360B               	rlcf	i2___aodiv@divisor+2,f,c
  8009  001692  360C               	rlcf	i2___aodiv@divisor+3,f,c
  8010  001694  360D               	rlcf	i2___aodiv@divisor+4,f,c
  8011  001696  360E               	rlcf	i2___aodiv@divisor+5,f,c
  8012  001698  360F               	rlcf	i2___aodiv@divisor+6,f,c
  8013  00169A  3610               	rlcf	i2___aodiv@divisor+7,f,c
  8014  00169C  2A11               	incf	i2___aodiv@counter,f,c
  8015  00169E                     i2l3056:
  8016  00169E  FFFF               	dw	65535	; assembler added errata NOP
  8017  0016A0  AE10               	btfss	i2___aodiv@divisor+7,7,c
  8018  0016A2  D7F2               	goto	i2l3054
  8019  0016A4                     i2u232_40:
  8020  0016A4  FFFF               	dw	65535	; assembler added errata NOP
  8021  0016A6  90D8               	bcf	status,0,c
  8022  0016A8  3613               	rlcf	i2___aodiv@quotient,f,c
  8023  0016AA  3614               	rlcf	i2___aodiv@quotient+1,f,c
  8024  0016AC  3615               	rlcf	i2___aodiv@quotient+2,f,c
  8025  0016AE  3616               	rlcf	i2___aodiv@quotient+3,f,c
  8026  0016B0  3617               	rlcf	i2___aodiv@quotient+4,f,c
  8027  0016B2  3618               	rlcf	i2___aodiv@quotient+5,f,c
  8028  0016B4  3619               	rlcf	i2___aodiv@quotient+6,f,c
  8029  0016B6  361A               	rlcf	i2___aodiv@quotient+7,f,c
  8030  0016B8  5009               	movf	i2___aodiv@divisor,w,c
  8031  0016BA  5C01               	subwf	i2___aodiv@dividend,w,c
  8032  0016BC  500A               	movf	i2___aodiv@divisor+1,w,c
  8033  0016BE  5802               	subwfb	i2___aodiv@dividend+1,w,c
  8034  0016C0  500B               	movf	i2___aodiv@divisor+2,w,c
  8035  0016C2  5803               	subwfb	i2___aodiv@dividend+2,w,c
  8036  0016C4  500C               	movf	i2___aodiv@divisor+3,w,c
  8037  0016C6  5804               	subwfb	i2___aodiv@dividend+3,w,c
  8038  0016C8  500D               	movf	i2___aodiv@divisor+4,w,c
  8039  0016CA  5805               	subwfb	i2___aodiv@dividend+4,w,c
  8040  0016CC  500E               	movf	i2___aodiv@divisor+5,w,c
  8041  0016CE  5806               	subwfb	i2___aodiv@dividend+5,w,c
  8042  0016D0  500F               	movf	i2___aodiv@divisor+6,w,c
  8043  0016D2  5807               	subwfb	i2___aodiv@dividend+6,w,c
  8044  0016D4  5010               	movf	i2___aodiv@divisor+7,w,c
  8045  0016D6  5808               	subwfb	i2___aodiv@dividend+7,w,c
  8046  0016D8  A0D8               	btfss	status,0,c
  8047  0016DA  D011               	goto	i2l3066
  8048  0016DC  5009               	movf	i2___aodiv@divisor,w,c
  8049  0016DE  5E01               	subwf	i2___aodiv@dividend,f,c
  8050  0016E0  500A               	movf	i2___aodiv@divisor+1,w,c
  8051  0016E2  5A02               	subwfb	i2___aodiv@dividend+1,f,c
  8052  0016E4  500B               	movf	i2___aodiv@divisor+2,w,c
  8053  0016E6  5A03               	subwfb	i2___aodiv@dividend+2,f,c
  8054  0016E8  500C               	movf	i2___aodiv@divisor+3,w,c
  8055  0016EA  5A04               	subwfb	i2___aodiv@dividend+3,f,c
  8056  0016EC  500D               	movf	i2___aodiv@divisor+4,w,c
  8057  0016EE  5A05               	subwfb	i2___aodiv@dividend+4,f,c
  8058  0016F0  500E               	movf	i2___aodiv@divisor+5,w,c
  8059  0016F2  5A06               	subwfb	i2___aodiv@dividend+5,f,c
  8060  0016F4  500F               	movf	i2___aodiv@divisor+6,w,c
  8061  0016F6  5A07               	subwfb	i2___aodiv@dividend+6,f,c
  8062  0016F8  5010               	movf	i2___aodiv@divisor+7,w,c
  8063  0016FA  5A08               	subwfb	i2___aodiv@dividend+7,f,c
  8064  0016FC  8013               	bsf	i2___aodiv@quotient,0,c
  8065  0016FE                     i2l3066:
  8066  0016FE  FFFF               	dw	65535	; assembler added errata NOP
  8067  001700  90D8               	bcf	status,0,c
  8068  001702  3210               	rrcf	i2___aodiv@divisor+7,f,c
  8069  001704  320F               	rrcf	i2___aodiv@divisor+6,f,c
  8070  001706  320E               	rrcf	i2___aodiv@divisor+5,f,c
  8071  001708  320D               	rrcf	i2___aodiv@divisor+4,f,c
  8072  00170A  320C               	rrcf	i2___aodiv@divisor+3,f,c
  8073  00170C  320B               	rrcf	i2___aodiv@divisor+2,f,c
  8074  00170E  320A               	rrcf	i2___aodiv@divisor+1,f,c
  8075  001710  3209               	rrcf	i2___aodiv@divisor,f,c
  8076  001712  2E11               	decfsz	i2___aodiv@counter,f,c
  8077  001714  D7C7               	goto	i2u232_40
  8078  001716                     i2l3070:
  8079  001716  FFFF               	dw	65535	; assembler added errata NOP
  8080  001718  5012               	movf	i2___aodiv@sign,w,c
  8081  00171A  B4D8               	btfsc	status,2,c
  8082  00171C  D010               	goto	i2l3074
  8083  00171E  1E1A               	comf	i2___aodiv@quotient+7,f,c
  8084  001720  1E19               	comf	i2___aodiv@quotient+6,f,c
  8085  001722  1E18               	comf	i2___aodiv@quotient+5,f,c
  8086  001724  1E17               	comf	i2___aodiv@quotient+4,f,c
  8087  001726  1E16               	comf	i2___aodiv@quotient+3,f,c
  8088  001728  1E15               	comf	i2___aodiv@quotient+2,f,c
  8089  00172A  1E14               	comf	i2___aodiv@quotient+1,f,c
  8090  00172C  6C13               	negf	i2___aodiv@quotient,c
  8091  00172E  0E00               	movlw	0
  8092  001730  2214               	addwfc	i2___aodiv@quotient+1,f,c
  8093  001732  2215               	addwfc	i2___aodiv@quotient+2,f,c
  8094  001734  2216               	addwfc	i2___aodiv@quotient+3,f,c
  8095  001736  2217               	addwfc	i2___aodiv@quotient+4,f,c
  8096  001738  2218               	addwfc	i2___aodiv@quotient+5,f,c
  8097  00173A  2219               	addwfc	i2___aodiv@quotient+6,f,c
  8098  00173C  221A               	addwfc	i2___aodiv@quotient+7,f,c
  8099  00173E                     i2l3074:
  8100  00173E  FFFF               	dw	65535	; assembler added errata NOP
  8101  001740  C013  F001         	movff	i2___aodiv@quotient,?i2___aodiv
  8102  001744  C014  F002         	movff	i2___aodiv@quotient+1,?i2___aodiv+1
  8103  001748  C015  F003         	movff	i2___aodiv@quotient+2,?i2___aodiv+2
  8104  00174C  C016  F004         	movff	i2___aodiv@quotient+3,?i2___aodiv+3
  8105  001750  C017  F005         	movff	i2___aodiv@quotient+4,?i2___aodiv+4
  8106  001754  C018  F006         	movff	i2___aodiv@quotient+5,?i2___aodiv+5
  8107  001758  C019  F007         	movff	i2___aodiv@quotient+6,?i2___aodiv+6
  8108  00175C  C01A  F008         	movff	i2___aodiv@quotient+7,?i2___aodiv+7
  8109  001760  0012               	return		;funcret
  8110  001762  FFFF               	dw	65535	; errata NOP
  8111  001764                     __end_ofi2___aodiv:
  8112                           	opt callstack 0
  8113                           
  8114 ;; *************** function i2_atoi *****************
  8115 ;; Defined at:
  8116 ;;		line 4 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/atoi.c"
  8117 ;; Parameters:    Size  Location     Type
  8118 ;;  s               2    7[COMRAM] PTR const unsigned char 
  8119 ;;		 -> STR_4(18), STR_3(17), STR_2(17), STR_1(17), 
  8120 ;; Auto vars:     Size  Location     Type
  8121 ;;  atoi            2   20[COMRAM] int 
  8122 ;;  atoi            2   13[COMRAM] int 
  8123 ;; Return value:  Size  Location     Type
  8124 ;;                  2    7[COMRAM] int 
  8125 ;; Registers used:
  8126 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8127 ;; Tracked objects:
  8128 ;;		On entry : 0/0
  8129 ;;		On exit  : 0/0
  8130 ;;		Unchanged: 0/0
  8131 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8132 ;;      Params:         2       0       0       0       0       0       0
  8133 ;;      Locals:         9       0       0       0       0       0       0
  8134 ;;      Temps:          4       0       0       0       0       0       0
  8135 ;;      Totals:        15       0       0       0       0       0       0
  8136 ;;Total ram usage:       15 bytes
  8137 ;; Hardware stack levels used:    1
  8138 ;; Hardware stack levels required when called:    1
  8139 ;; This function calls:
  8140 ;;		i2___wmul
  8141 ;;		i2_isdigit
  8142 ;;		i2_isspace
  8143 ;; This function is called by:
  8144 ;;		i2_vfpfcnvrt
  8145 ;; This function uses a non-reentrant model
  8146 ;;
  8147                           
  8148                           	psect	text49
  8149  001344                     __ptext49:
  8150                           	opt callstack 0
  8151  001344                     i2_atoi:
  8152                           	opt callstack 0
  8153  001344  FFFF               	dw	65535	; assembler added errata NOP
  8154                           
  8155                           ;incstack = 0
  8156  001346  0E00               	movlw	0
  8157  001348  6E16               	movwf	i2atoi@n+1,c
  8158  00134A  0E00               	movlw	0
  8159  00134C  6E15               	movwf	i2atoi@n,c
  8160  00134E  0E00               	movlw	0
  8161  001350  6E0F               	movwf	i2atoi@neg+1,c
  8162  001352  0E00               	movlw	0
  8163  001354  6E0E               	movwf	i2atoi@neg,c
  8164  001356  D003               	goto	i2l3306
  8165  001358                     i2l3304:
  8166  001358  FFFF               	dw	65535	; assembler added errata NOP
  8167  00135A  4A08               	infsnz	i2atoi@s,f,c
  8168  00135C  2A09               	incf	i2atoi@s+1,f,c
  8169  00135E                     i2l3306:
  8170  00135E  FFFF               	dw	65535	; assembler added errata NOP
  8171  001360  0E01               	movlw	1
  8172  001362  6E14               	movwf	i2_atoi$1504,c
  8173  001364  C008  FFF6         	movff	i2atoi@s,tblptrl
  8174  001368  C009  FFF7         	movff	i2atoi@s+1,tblptrh
  8175  00136C                     	if	0	;tblptru may be non-zero
  8176  00136C                     	endif
  8177  00136C                     	if	0	;tblptru may be non-zero
  8178  00136C                     	endif
  8179  00136C  0008               	tblrd		*
  8180  00136E  FFFF               	dw	65535	; errata NOP
  8181  001370  50F5               	movf	tablat,w,c
  8182  001372  0A20               	xorlw	32
  8183  001374  B4D8               	btfsc	status,2,c
  8184  001376  D019               	goto	i2l3314
  8185  001378  0EF7               	movlw	247
  8186  00137A  6E0A               	movwf	??i2_atoi& (0+255),c
  8187  00137C  0EFF               	movlw	255
  8188  00137E  6E0B               	movwf	(??i2_atoi+1)& (0+255),c
  8189  001380  C008  FFF6         	movff	i2atoi@s,tblptrl
  8190  001384  C009  FFF7         	movff	i2atoi@s+1,tblptrh
  8191  001388                     	if	0	;tblptru may be non-zero
  8192  001388                     	endif
  8193  001388                     	if	0	;tblptru may be non-zero
  8194  001388                     	endif
  8195  001388  0008               	tblrd		*
  8196  00138A  FFFF               	dw	65535	; errata NOP
  8197  00138C  50F5               	movf	tablat,w,c
  8198  00138E  6E0C               	movwf	(??i2_atoi+2)& (0+255),c
  8199  001390  6A0D               	clrf	(??i2_atoi+3)& (0+255),c
  8200  001392  500A               	movf	??i2_atoi,w,c
  8201  001394  260C               	addwf	??i2_atoi+2,f,c
  8202  001396  500B               	movf	??i2_atoi+1,w,c
  8203  001398  220D               	addwfc	??i2_atoi+3,f,c
  8204  00139A  500D               	movf	??i2_atoi+3,w,c
  8205  00139C  E104               	bnz	i2u284_40
  8206  00139E  0E05               	movlw	5
  8207  0013A0  5C0C               	subwf	??i2_atoi+2,w,c
  8208  0013A2  A0D8               	btfss	status,0,c
  8209  0013A4  D002               	goto	i2l3314
  8210  0013A6                     i2u284_40:
  8211  0013A6  0E00               	movlw	0
  8212  0013A8  6E14               	movwf	i2_atoi$1504,c
  8213  0013AA                     i2l3314:
  8214  0013AA  FFFF               	dw	65535	; assembler added errata NOP
  8215  0013AC  C014  F010         	movff	i2_atoi$1504,i2_atoi$1503
  8216  0013B0  6A11               	clrf	i2_atoi$1503+1,c
  8217  0013B2  5010               	movf	i2_atoi$1503,w,c
  8218  0013B4  1011               	iorwf	i2_atoi$1503+1,w,c
  8219  0013B6  B4D8               	btfsc	status,2,c
  8220  0013B8  D00A               	goto	i2l3324
  8221  0013BA  D7CE               	goto	i2l3304
  8222  0013BC                     i2l3320:
  8223  0013BC  FFFF               	dw	65535	; assembler added errata NOP
  8224  0013BE  0E00               	movlw	0
  8225  0013C0  6E0F               	movwf	i2atoi@neg+1,c
  8226  0013C2  0E01               	movlw	1
  8227  0013C4  6E0E               	movwf	i2atoi@neg,c
  8228  0013C6                     i2l3322:
  8229  0013C6  FFFF               	dw	65535	; assembler added errata NOP
  8230  0013C8  4A08               	infsnz	i2atoi@s,f,c
  8231  0013CA  2A09               	incf	i2atoi@s+1,f,c
  8232  0013CC  D032               	goto	i2l3330
  8233  0013CE                     i2l3324:
  8234  0013CE  FFFF               	dw	65535	; assembler added errata NOP
  8235  0013D0  C008  FFF6         	movff	i2atoi@s,tblptrl
  8236  0013D4  C009  FFF7         	movff	i2atoi@s+1,tblptrh
  8237  0013D8                     	if	0	;tblptru may be non-zero
  8238  0013D8                     	endif
  8239  0013D8                     	if	0	;tblptru may be non-zero
  8240  0013D8                     	endif
  8241  0013D8  0008               	tblrd		*
  8242  0013DA  FFFF               	dw	65535	; errata NOP
  8243  0013DC  50F5               	movf	tablat,w,c
  8244  0013DE  6E0A               	movwf	??i2_atoi& (0+255),c
  8245  0013E0  6A0B               	clrf	(??i2_atoi+1)& (0+255),c
  8246                           
  8247                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8248                           ; Switch size 1, requested type "simple"
  8249                           ; Number of cases is 1, Range of values is 0 to 0
  8250                           ; switch strategies available:
  8251                           ; Name         Instructions Cycles
  8252                           ; simple_byte            4     3 (average)
  8253                           ;	Chosen strategy is simple_byte
  8254  0013E2  500B               	movf	??i2_atoi+1,w,c
  8255  0013E4  0A00               	xorlw	0	; case 0
  8256  0013E6  A4D8               	btfss	status,2,c
  8257  0013E8  D024               	goto	i2l3330
  8258                           
  8259                           ; Switch size 1, requested type "simple"
  8260                           ; Number of cases is 2, Range of values is 43 to 45
  8261                           ; switch strategies available:
  8262                           ; Name         Instructions Cycles
  8263                           ; simple_byte            7     4 (average)
  8264                           ;	Chosen strategy is simple_byte
  8265  0013EA  500A               	movf	??i2_atoi,w,c
  8266  0013EC  0A2B               	xorlw	43	; case 43
  8267  0013EE  B4D8               	btfsc	status,2,c
  8268  0013F0  D7EA               	goto	i2l3322
  8269  0013F2  0A06               	xorlw	6	; case 45
  8270  0013F4  B4D8               	btfsc	status,2,c
  8271  0013F6  D7E2               	goto	i2l3320
  8272  0013F8  D01C               	goto	i2l3330
  8273  0013FA                     i2l3326:
  8274  0013FA  FFFF               	dw	65535	; assembler added errata NOP
  8275  0013FC  C015  F001         	movff	i2atoi@n,i2___wmul@multiplier
  8276  001400  C016  F002         	movff	i2atoi@n+1,i2___wmul@multiplier+1
  8277  001404  0E00               	movlw	0
  8278  001406  6E04               	movwf	i2___wmul@multiplicand+1,c
  8279  001408  0E0A               	movlw	10
  8280  00140A  6E03               	movwf	i2___wmul@multiplicand,c
  8281  00140C  ECCB  F014         	call	i2___wmul	;wreg free
  8282  001410  C008  FFF6         	movff	i2atoi@s,tblptrl
  8283  001414  C009  FFF7         	movff	i2atoi@s+1,tblptrh
  8284  001418                     	if	0	;tblptru may be non-zero
  8285  001418                     	endif
  8286  001418                     	if	0	;tblptru may be non-zero
  8287  001418                     	endif
  8288  001418  0008               	tblrd		*
  8289  00141A  FFFF               	dw	65535	; errata NOP
  8290  00141C  50F5               	movf	tablat,w,c
  8291  00141E  5E01               	subwf	?i2___wmul,f,c
  8292  001420  0E00               	movlw	0
  8293  001422  5A02               	subwfb	?i2___wmul+1,f,c
  8294  001424  0E30               	movlw	48
  8295  001426  2401               	addwf	?i2___wmul,w,c
  8296  001428  6E15               	movwf	i2atoi@n,c
  8297  00142A  0E00               	movlw	0
  8298  00142C  2002               	addwfc	?i2___wmul+1,w,c
  8299  00142E  6E16               	movwf	i2atoi@n+1,c
  8300  001430  D7CA               	goto	i2l3322
  8301  001432                     i2l3330:
  8302  001432  FFFF               	dw	65535	; assembler added errata NOP
  8303  001434  0ED0               	movlw	208
  8304  001436  6E0A               	movwf	??i2_atoi& (0+255),c
  8305  001438  0EFF               	movlw	255
  8306  00143A  6E0B               	movwf	(??i2_atoi+1)& (0+255),c
  8307  00143C  C008  FFF6         	movff	i2atoi@s,tblptrl
  8308  001440  C009  FFF7         	movff	i2atoi@s+1,tblptrh
  8309  001444                     	if	0	;tblptru may be non-zero
  8310  001444                     	endif
  8311  001444                     	if	0	;tblptru may be non-zero
  8312  001444                     	endif
  8313  001444  0008               	tblrd		*
  8314  001446  FFFF               	dw	65535	; errata NOP
  8315  001448  50F5               	movf	tablat,w,c
  8316  00144A  6E0C               	movwf	(??i2_atoi+2)& (0+255),c
  8317  00144C  6A0D               	clrf	(??i2_atoi+3)& (0+255),c
  8318  00144E  500A               	movf	??i2_atoi,w,c
  8319  001450  260C               	addwf	??i2_atoi+2,f,c
  8320  001452  500B               	movf	??i2_atoi+1,w,c
  8321  001454  220D               	addwfc	??i2_atoi+3,f,c
  8322  001456  500D               	movf	??i2_atoi+3,w,c
  8323  001458  E106               	bnz	i2u286_40
  8324  00145A  0E0A               	movlw	10
  8325  00145C  5C0C               	subwf	??i2_atoi+2,w,c
  8326  00145E  B0D8               	btfsc	status,0,c
  8327  001460  D002               	goto	i2u286_40
  8328  001462  0E01               	movlw	1
  8329  001464  D002               	goto	i2u287_40
  8330  001466                     i2u286_40:
  8331  001466  FFFF               	dw	65535	; assembler added errata NOP
  8332  001468  0E00               	movlw	0
  8333  00146A                     i2u287_40:
  8334  00146A  FFFF               	dw	65535	; assembler added errata NOP
  8335  00146C  6E12               	movwf	i2_atoi$1505,c
  8336  00146E  6A13               	clrf	i2_atoi$1505+1,c
  8337  001470  5012               	movf	i2_atoi$1505,w,c
  8338  001472  1013               	iorwf	i2_atoi$1505+1,w,c
  8339  001474  A4D8               	btfss	status,2,c
  8340  001476  D7C1               	goto	i2l3326
  8341  001478  500E               	movf	i2atoi@neg,w,c
  8342  00147A  100F               	iorwf	i2atoi@neg+1,w,c
  8343  00147C  A4D8               	btfss	status,2,c
  8344  00147E  D00D               	goto	i2l1331
  8345  001480  C015  F00A         	movff	i2atoi@n,??i2_atoi
  8346  001484  C016  F00B         	movff	i2atoi@n+1,??i2_atoi+1
  8347  001488  1E0A               	comf	??i2_atoi,f,c
  8348  00148A  1E0B               	comf	??i2_atoi+1,f,c
  8349  00148C  4A0A               	infsnz	??i2_atoi,f,c
  8350  00148E  2A0B               	incf	??i2_atoi+1,f,c
  8351  001490  C00A  F008         	movff	??i2_atoi,?i2_atoi
  8352  001494  C00B  F009         	movff	??i2_atoi+1,?i2_atoi+1
  8353  001498  D005               	goto	i2l1334
  8354  00149A                     i2l1331:
  8355  00149A  FFFF               	dw	65535	; assembler added errata NOP
  8356  00149C  C015  F008         	movff	i2atoi@n,?i2_atoi
  8357  0014A0  C016  F009         	movff	i2atoi@n+1,?i2_atoi+1
  8358  0014A4                     i2l1334:
  8359  0014A4  FFFF               	dw	65535	; assembler added errata NOP
  8360  0014A6  0012               	return		;funcret
  8361  0014A8  FFFF               	dw	65535	; errata NOP
  8362  0014AA                     __end_ofi2_atoi:
  8363                           	opt callstack 0
  8364                           
  8365 ;; *************** function i2_isspace *****************
  8366 ;; Defined at:
  8367 ;;		line 5 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/isspace.c"
  8368 ;; Parameters:    Size  Location     Type
  8369 ;;  c               2    0[COMRAM] int 
  8370 ;; Auto vars:     Size  Location     Type
  8371 ;;		None
  8372 ;; Return value:  Size  Location     Type
  8373 ;;                  2    0[COMRAM] int 
  8374 ;; Registers used:
  8375 ;;		wreg, status,2, status,0
  8376 ;; Tracked objects:
  8377 ;;		On entry : 0/0
  8378 ;;		On exit  : 0/0
  8379 ;;		Unchanged: 0/0
  8380 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8381 ;;      Params:         2       0       0       0       0       0       0
  8382 ;;      Locals:         1       0       0       0       0       0       0
  8383 ;;      Temps:          4       0       0       0       0       0       0
  8384 ;;      Totals:         7       0       0       0       0       0       0
  8385 ;;Total ram usage:        7 bytes
  8386 ;; Hardware stack levels used:    1
  8387 ;; This function calls:
  8388 ;;		Nothing
  8389 ;; This function is called by:
  8390 ;;		i2_atoi
  8391 ;; This function uses a non-reentrant model
  8392 ;;
  8393                           
  8394                           	psect	text50
  8395  00263A                     __ptext50:
  8396                           	opt callstack 0
  8397  00263A                     i2_isspace:
  8398                           	opt callstack 0
  8399  00263A  FFFF               	dw	65535	; assembler added errata NOP
  8400                           
  8401                           ;incstack = 0
  8402  00263C  0E01               	movlw	1
  8403  00263E  6E07               	movwf	i2_isspace$1521,c
  8404  002640  0E20               	movlw	32
  8405  002642  1801               	xorwf	i2isspace@c,w,c
  8406  002644  1002               	iorwf	i2isspace@c+1,w,c
  8407  002646  B4D8               	btfsc	status,2,c
  8408  002648  D014               	goto	i2l3130
  8409  00264A  0EF7               	movlw	247
  8410  00264C  6E03               	movwf	??i2_isspace& (0+255),c
  8411  00264E  0EFF               	movlw	255
  8412  002650  6E04               	movwf	(??i2_isspace+1)& (0+255),c
  8413  002652  C001  F005         	movff	i2isspace@c,??i2_isspace+2
  8414  002656  C002  F006         	movff	i2isspace@c+1,??i2_isspace+3
  8415  00265A  5003               	movf	??i2_isspace,w,c
  8416  00265C  2605               	addwf	??i2_isspace+2,f,c
  8417  00265E  5004               	movf	??i2_isspace+1,w,c
  8418  002660  2206               	addwfc	??i2_isspace+3,f,c
  8419  002662  5006               	movf	??i2_isspace+3,w,c
  8420  002664  E104               	bnz	i2u245_40
  8421  002666  0E05               	movlw	5
  8422  002668  5C05               	subwf	??i2_isspace+2,w,c
  8423  00266A  A0D8               	btfss	status,0,c
  8424  00266C  D002               	goto	i2l3130
  8425  00266E                     i2u245_40:
  8426  00266E  0E00               	movlw	0
  8427  002670  6E07               	movwf	i2_isspace$1521,c
  8428  002672                     i2l3130:
  8429  002672  FFFF               	dw	65535	; assembler added errata NOP
  8430  002674  C007  F001         	movff	i2_isspace$1521,?i2_isspace
  8431  002678  6A02               	clrf	?i2_isspace+1,c
  8432  00267A  0012               	return		;funcret
  8433  00267C  FFFF               	dw	65535	; errata NOP
  8434  00267E                     __end_ofi2_isspace:
  8435                           	opt callstack 0
  8436                           
  8437 ;; *************** function i2_isdigit *****************
  8438 ;; Defined at:
  8439 ;;		line 5 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/isdigit.c"
  8440 ;; Parameters:    Size  Location     Type
  8441 ;;  c               2    0[COMRAM] int 
  8442 ;; Auto vars:     Size  Location     Type
  8443 ;;		None
  8444 ;; Return value:  Size  Location     Type
  8445 ;;                  2    0[COMRAM] int 
  8446 ;; Registers used:
  8447 ;;		wreg, status,2, status,0
  8448 ;; Tracked objects:
  8449 ;;		On entry : 0/0
  8450 ;;		On exit  : 0/0
  8451 ;;		Unchanged: 0/0
  8452 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8453 ;;      Params:         2       0       0       0       0       0       0
  8454 ;;      Locals:         0       0       0       0       0       0       0
  8455 ;;      Temps:          4       0       0       0       0       0       0
  8456 ;;      Totals:         6       0       0       0       0       0       0
  8457 ;;Total ram usage:        6 bytes
  8458 ;; Hardware stack levels used:    1
  8459 ;; This function calls:
  8460 ;;		Nothing
  8461 ;; This function is called by:
  8462 ;;		i2_vfpfcnvrt
  8463 ;;		i2_atoi
  8464 ;; This function uses a non-reentrant model
  8465 ;;
  8466                           
  8467                           	psect	text51
  8468  002838                     __ptext51:
  8469                           	opt callstack 0
  8470  002838                     i2_isdigit:
  8471                           	opt callstack 0
  8472  002838  FFFF               	dw	65535	; assembler added errata NOP
  8473                           
  8474                           ;incstack = 0
  8475  00283A  0ED0               	movlw	208
  8476  00283C  6E03               	movwf	??i2_isdigit& (0+255),c
  8477  00283E  0EFF               	movlw	255
  8478  002840  6E04               	movwf	(??i2_isdigit+1)& (0+255),c
  8479  002842  C001  F005         	movff	i2isdigit@c,??i2_isdigit+2
  8480  002846  C002  F006         	movff	i2isdigit@c+1,??i2_isdigit+3
  8481  00284A  5003               	movf	??i2_isdigit,w,c
  8482  00284C  2605               	addwf	??i2_isdigit+2,f,c
  8483  00284E  5004               	movf	??i2_isdigit+1,w,c
  8484  002850  2206               	addwfc	??i2_isdigit+3,f,c
  8485  002852  5006               	movf	??i2_isdigit+3,w,c
  8486  002854  E106               	bnz	i2u242_40
  8487  002856  0E0A               	movlw	10
  8488  002858  5C05               	subwf	??i2_isdigit+2,w,c
  8489  00285A  B0D8               	btfsc	status,0,c
  8490  00285C  D002               	goto	i2u242_40
  8491  00285E  0E01               	movlw	1
  8492  002860  D002               	goto	i2u243_40
  8493  002862                     i2u242_40:
  8494  002862  FFFF               	dw	65535	; assembler added errata NOP
  8495  002864  0E00               	movlw	0
  8496  002866                     i2u243_40:
  8497  002866  FFFF               	dw	65535	; assembler added errata NOP
  8498  002868  6E01               	movwf	?i2_isdigit,c
  8499  00286A  6A02               	clrf	?i2_isdigit+1,c
  8500  00286C  0012               	return		;funcret
  8501  00286E  FFFF               	dw	65535	; errata NOP
  8502  002870                     __end_ofi2_isdigit:
  8503                           	opt callstack 0
  8504                           
  8505 ;; *************** function i2___wmul *****************
  8506 ;; Defined at:
  8507 ;;		line 15 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/Umul16.c"
  8508 ;; Parameters:    Size  Location     Type
  8509 ;;  multiplier      2    0[COMRAM] unsigned int 
  8510 ;;  multiplicand    2    2[COMRAM] unsigned int 
  8511 ;; Auto vars:     Size  Location     Type
  8512 ;;  __wmul          2    4[COMRAM] unsigned int 
  8513 ;; Return value:  Size  Location     Type
  8514 ;;                  2    0[COMRAM] unsigned int 
  8515 ;; Registers used:
  8516 ;;		wreg, status,2, status,0, prodl, prodh
  8517 ;; Tracked objects:
  8518 ;;		On entry : 0/0
  8519 ;;		On exit  : 0/0
  8520 ;;		Unchanged: 0/0
  8521 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8522 ;;      Params:         4       0       0       0       0       0       0
  8523 ;;      Locals:         2       0       0       0       0       0       0
  8524 ;;      Temps:          0       0       0       0       0       0       0
  8525 ;;      Totals:         6       0       0       0       0       0       0
  8526 ;;Total ram usage:        6 bytes
  8527 ;; Hardware stack levels used:    1
  8528 ;; This function calls:
  8529 ;;		Nothing
  8530 ;; This function is called by:
  8531 ;;		i2_atoi
  8532 ;; This function uses a non-reentrant model
  8533 ;;
  8534                           
  8535                           	psect	text52
  8536  002996                     __ptext52:
  8537                           	opt callstack 0
  8538  002996                     i2___wmul:
  8539                           	opt callstack 0
  8540  002996  FFFF               	dw	65535	; assembler added errata NOP
  8541                           
  8542                           ;incstack = 0
  8543  002998  5001               	movf	i2___wmul@multiplier,w,c
  8544  00299A  0203               	mulwf	i2___wmul@multiplicand,c
  8545  00299C  CFF3 F005          	movff	prodl,i2___wmul@product
  8546  0029A0  CFF4 F006          	movff	prodh,i2___wmul@product+1
  8547  0029A4  5001               	movf	i2___wmul@multiplier,w,c
  8548  0029A6  0204               	mulwf	i2___wmul@multiplicand+1,c
  8549  0029A8  50F3               	movf	prodl,w,c
  8550  0029AA  2606               	addwf	i2___wmul@product+1,f,c
  8551  0029AC  5002               	movf	i2___wmul@multiplier+1,w,c
  8552  0029AE  0203               	mulwf	i2___wmul@multiplicand,c
  8553  0029B0  50F3               	movf	prodl,w,c
  8554  0029B2  2606               	addwf	i2___wmul@product+1,f,c
  8555  0029B4  C005  F001         	movff	i2___wmul@product,?i2___wmul
  8556  0029B8  C006  F002         	movff	i2___wmul@product+1,?i2___wmul+1
  8557  0029BC  0012               	return		;funcret
  8558  0029BE  FFFF               	dw	65535	; errata NOP
  8559  0029C0                     __end_ofi2___wmul:
  8560                           	opt callstack 0
  8561                           
  8562 ;; *************** function i2_SetDDRamAddr *****************
  8563 ;; Defined at:
  8564 ;;		line 217 in file "lcd_pic16.c"
  8565 ;; Parameters:    Size  Location     Type
  8566 ;;  DDaddr          1    wreg     unsigned char 
  8567 ;; Auto vars:     Size  Location     Type
  8568 ;;  DDaddr          1    0[COMRAM] unsigned char 
  8569 ;; Return value:  Size  Location     Type
  8570 ;;                  1    wreg      void 
  8571 ;; Registers used:
  8572 ;;		wreg, status,2, status,0, cstack
  8573 ;; Tracked objects:
  8574 ;;		On entry : 0/0
  8575 ;;		On exit  : 0/0
  8576 ;;		Unchanged: 0/0
  8577 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8578 ;;      Params:         0       0       0       0       0       0       0
  8579 ;;      Locals:         1       0       0       0       0       0       0
  8580 ;;      Temps:          0       0       0       0       0       0       0
  8581 ;;      Totals:         1       0       0       0       0       0       0
  8582 ;;Total ram usage:        1 bytes
  8583 ;; Hardware stack levels used:    1
  8584 ;; Hardware stack levels required when called:    1
  8585 ;; This function calls:
  8586 ;;		i2_DelayFor18TCY
  8587 ;; This function is called by:
  8588 ;;		_updateLCD
  8589 ;; This function uses a non-reentrant model
  8590 ;;
  8591                           
  8592                           	psect	text53
  8593  00267E                     __ptext53:
  8594                           	opt callstack 0
  8595  00267E                     i2_SetDDRamAddr:
  8596                           	opt callstack 0
  8597  00267E  FFFF               	dw	65535	; assembler added errata NOP
  8598                           
  8599                           ;incstack = 0
  8600                           ;i2SetDDRamAddr@DDaddr stored from wreg
  8601  002680  6E01               	movwf	i2SetDDRamAddr@DDaddr,c
  8602                           
  8603                           ;lcd_pic16.c: 217: void SetDDRamAddr(unsigned char DDaddr);lcd_pic16.c: 218: {;lcd_pic16
      +                          .c: 232:         TRISD &= 0x0f;
  8604  002682  0E0F               	movlw	15
  8605  002684  1695               	andwf	3989,f,c	;volatile
  8606                           
  8607                           ;lcd_pic16.c: 233:         PORTD &= 0x0f;
  8608  002686  0E0F               	movlw	15
  8609  002688  1683               	andwf	3971,f,c	;volatile
  8610                           
  8611                           ;lcd_pic16.c: 234:         PORTD |= ((DDaddr | 0b10000000) & 0xf0);
  8612  00268A  5001               	movf	i2SetDDRamAddr@DDaddr,w,c
  8613  00268C  0980               	iorlw	128
  8614  00268E  0BF0               	andlw	240
  8615  002690  1283               	iorwf	3971,f,c	;volatile
  8616                           
  8617                           ;lcd_pic16.c: 240:         PORTDbits.RD2 = 0;
  8618  002692  9483               	bcf	3971,2,c	;volatile
  8619                           
  8620                           ;lcd_pic16.c: 241:         PORTDbits.RD3 = 0;
  8621  002694  9683               	bcf	3971,3,c	;volatile
  8622                           
  8623                           ;lcd_pic16.c: 242:         DelayFor18TCY();
  8624  002696  EC39  F015         	call	i2_DelayFor18TCY	;wreg free
  8625                           
  8626                           ;lcd_pic16.c: 243:         PORTDbits.RD1 = 1;
  8627  00269A  8283               	bsf	3971,1,c	;volatile
  8628                           
  8629                           ;lcd_pic16.c: 244:         DelayFor18TCY();
  8630  00269C  EC39  F015         	call	i2_DelayFor18TCY	;wreg free
  8631                           
  8632                           ;lcd_pic16.c: 245:         PORTDbits.RD1 = 0;
  8633  0026A0  9283               	bcf	3971,1,c	;volatile
  8634                           
  8635                           ;lcd_pic16.c: 247:         PORTD &= 0x0f;
  8636  0026A2  0E0F               	movlw	15
  8637  0026A4  1683               	andwf	3971,f,c	;volatile
  8638                           
  8639                           ;lcd_pic16.c: 248:         PORTD |= ((DDaddr<<4)&0xf0);
  8640  0026A6  3801               	swapf	i2SetDDRamAddr@DDaddr,w,c
  8641  0026A8  0BF0               	andlw	240
  8642  0026AA  0BF0               	andlw	240
  8643  0026AC  1283               	iorwf	3971,f,c	;volatile
  8644                           
  8645                           ;lcd_pic16.c: 253:         DelayFor18TCY();
  8646  0026AE  EC39  F015         	call	i2_DelayFor18TCY	;wreg free
  8647                           
  8648                           ;lcd_pic16.c: 254:         PORTDbits.RD1 = 1;
  8649  0026B2  8283               	bsf	3971,1,c	;volatile
  8650                           
  8651                           ;lcd_pic16.c: 255:         DelayFor18TCY();
  8652  0026B4  EC39  F015         	call	i2_DelayFor18TCY	;wreg free
  8653                           
  8654                           ;lcd_pic16.c: 256:         PORTDbits.RD1 = 0;
  8655  0026B8  9283               	bcf	3971,1,c	;volatile
  8656                           
  8657                           ;lcd_pic16.c: 258:         TRISD |= 0xf0;
  8658  0026BA  0EF0               	movlw	240
  8659  0026BC  1295               	iorwf	3989,f,c	;volatile
  8660  0026BE  0012               	return		;funcret
  8661  0026C0  FFFF               	dw	65535	; errata NOP
  8662  0026C2                     __end_ofi2_SetDDRamAddr:
  8663                           	opt callstack 0
  8664                           
  8665 ;; *************** function _putsXLCD *****************
  8666 ;; Defined at:
  8667 ;;		line 419 in file "lcd_pic16.c"
  8668 ;; Parameters:    Size  Location     Type
  8669 ;;  buffer          2    1[COMRAM] PTR unsigned char 
  8670 ;;		 -> lineTwo(17), lineOne(17), 
  8671 ;; Auto vars:     Size  Location     Type
  8672 ;;		None
  8673 ;; Return value:  Size  Location     Type
  8674 ;;                  1    wreg      void 
  8675 ;; Registers used:
  8676 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  8677 ;; Tracked objects:
  8678 ;;		On entry : 0/0
  8679 ;;		On exit  : 0/0
  8680 ;;		Unchanged: 0/0
  8681 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8682 ;;      Params:         2       0       0       0       0       0       0
  8683 ;;      Locals:         0       0       0       0       0       0       0
  8684 ;;      Temps:          0       0       0       0       0       0       0
  8685 ;;      Totals:         2       0       0       0       0       0       0
  8686 ;;Total ram usage:        2 bytes
  8687 ;; Hardware stack levels used:    1
  8688 ;; Hardware stack levels required when called:    2
  8689 ;; This function calls:
  8690 ;;		_WriteDataXLCD
  8691 ;;		i2_BusyXLCD
  8692 ;; This function is called by:
  8693 ;;		_updateLCD
  8694 ;; This function uses a non-reentrant model
  8695 ;;
  8696                           
  8697                           	psect	text54
  8698  002870                     __ptext54:
  8699                           	opt callstack 0
  8700  002870                     _putsXLCD:
  8701                           	opt callstack 0
  8702  002870  FFFF               	dw	65535	; assembler added errata NOP
  8703                           
  8704                           ;lcd_pic16.c: 419: void putsXLCD(char *buffer);lcd_pic16.c: 420: {;lcd_pic16.c: 421:    
      +                               while(*buffer)
  8705                           
  8706                           ;incstack = 0
  8707  002872  D00F               	goto	i2l3776
  8708  002874                     i2l3770:
  8709  002874  FFFF               	dw	65535	; assembler added errata NOP
  8710  002876  EC1A  F015         	call	i2_BusyXLCD	;wreg free
  8711  00287A  0900               	iorlw	0
  8712  00287C  A4D8               	btfss	status,2,c
  8713  00287E  D7FA               	goto	i2l3770
  8714                           
  8715                           ;lcd_pic16.c: 424:                 WriteDataXLCD(*buffer);
  8716  002880  C002  FFD9         	movff	putsXLCD@buffer,fsr2l
  8717  002884  C003  FFDA         	movff	putsXLCD@buffer+1,fsr2h
  8718  002888  50DF               	movf	indf2,w,c
  8719  00288A  EC82  F013         	call	_WriteDataXLCD
  8720                           
  8721                           ;lcd_pic16.c: 425:                 buffer++;
  8722  00288E  4A02               	infsnz	putsXLCD@buffer,f,c
  8723  002890  2A03               	incf	putsXLCD@buffer+1,f,c
  8724  002892                     i2l3776:
  8725  002892  FFFF               	dw	65535	; assembler added errata NOP
  8726                           
  8727                           ;lcd_pic16.c: 421:         while(*buffer)
  8728  002894  C002  FFD9         	movff	putsXLCD@buffer,fsr2l
  8729  002898  C003  FFDA         	movff	putsXLCD@buffer+1,fsr2h
  8730  00289C  50DF               	movf	indf2,w,c
  8731  00289E  B4D8               	btfsc	status,2,c
  8732  0028A0  0012               	return		;funcret
  8733  0028A2  FFFF               	dw	65535	; assembler added errata NOP
  8734  0028A4  D7E7               	goto	i2l3770
  8735  0028A6  FFFF               	dw	65535	; errata NOP
  8736  0028A8                     __end_of_putsXLCD:
  8737                           	opt callstack 0
  8738                           
  8739 ;; *************** function i2_BusyXLCD *****************
  8740 ;; Defined at:
  8741 ;;		line 451 in file "lcd_pic16.c"
  8742 ;; Parameters:    Size  Location     Type
  8743 ;;		None
  8744 ;; Auto vars:     Size  Location     Type
  8745 ;;		None
  8746 ;; Return value:  Size  Location     Type
  8747 ;;                  1    wreg      unsigned char 
  8748 ;; Registers used:
  8749 ;;		wreg
  8750 ;; Tracked objects:
  8751 ;;		On entry : 0/0
  8752 ;;		On exit  : 0/0
  8753 ;;		Unchanged: 0/0
  8754 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8755 ;;      Params:         0       0       0       0       0       0       0
  8756 ;;      Locals:         0       0       0       0       0       0       0
  8757 ;;      Temps:          1       0       0       0       0       0       0
  8758 ;;      Totals:         1       0       0       0       0       0       0
  8759 ;;Total ram usage:        1 bytes
  8760 ;; Hardware stack levels used:    1
  8761 ;; This function calls:
  8762 ;;		Nothing
  8763 ;; This function is called by:
  8764 ;;		_putsXLCD
  8765 ;; This function uses a non-reentrant model
  8766 ;;
  8767                           
  8768                           	psect	text55
  8769  002A34                     __ptext55:
  8770                           	opt callstack 0
  8771  002A34                     i2_BusyXLCD:
  8772                           	opt callstack 0
  8773  002A34  FFFF               	dw	65535	; assembler added errata NOP
  8774                           
  8775                           ;lcd_pic16.c: 504:         _delay((unsigned long)((5)*(12000000/4000.0)));
  8776                           
  8777                           ;incstack = 0
  8778  002A36  0E0F               	movlw	15
  8779  002A38  6E01               	movwf	??i2_BusyXLCD& (0+255),c
  8780  002A3A  0E9E               	movlw	158
  8781  002A3C                     i2u398_47:
  8782  002A3C  FFFF               	dw	65535	; errata NOP
  8783  002A3E  2EE8               	decfsz	wreg,f,c
  8784  002A40  D7FD               	bra	i2u398_47
  8785  002A42  2E01               	decfsz	??i2_BusyXLCD& (0+255),f,c
  8786  002A44  D7FB               	bra	i2u398_47
  8787                           
  8788                           ;lcd_pic16.c: 505:         return 0;
  8789  002A46  0E00               	movlw	0
  8790  002A48  0012               	return		;funcret
  8791  002A4A  FFFF               	dw	65535	; errata NOP
  8792  002A4C                     __end_ofi2_BusyXLCD:
  8793                           	opt callstack 0
  8794                           
  8795 ;; *************** function _WriteDataXLCD *****************
  8796 ;; Defined at:
  8797 ;;		line 110 in file "lcd_pic16.c"
  8798 ;; Parameters:    Size  Location     Type
  8799 ;;  data            1    wreg     unsigned char 
  8800 ;; Auto vars:     Size  Location     Type
  8801 ;;  data            1    0[COMRAM] unsigned char 
  8802 ;; Return value:  Size  Location     Type
  8803 ;;                  1    wreg      void 
  8804 ;; Registers used:
  8805 ;;		wreg, status,2, status,0, cstack
  8806 ;; Tracked objects:
  8807 ;;		On entry : 0/0
  8808 ;;		On exit  : 0/0
  8809 ;;		Unchanged: 0/0
  8810 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8811 ;;      Params:         0       0       0       0       0       0       0
  8812 ;;      Locals:         1       0       0       0       0       0       0
  8813 ;;      Temps:          0       0       0       0       0       0       0
  8814 ;;      Totals:         1       0       0       0       0       0       0
  8815 ;;Total ram usage:        1 bytes
  8816 ;; Hardware stack levels used:    1
  8817 ;; Hardware stack levels required when called:    1
  8818 ;; This function calls:
  8819 ;;		i2_DelayFor18TCY
  8820 ;; This function is called by:
  8821 ;;		_putsXLCD
  8822 ;;		_putrsXLCD
  8823 ;; This function uses a non-reentrant model
  8824 ;;
  8825                           
  8826                           	psect	text56
  8827  002704                     __ptext56:
  8828                           	opt callstack 0
  8829  002704                     _WriteDataXLCD:
  8830                           	opt callstack 0
  8831  002704  FFFF               	dw	65535	; assembler added errata NOP
  8832                           
  8833                           ;incstack = 0
  8834                           ;WriteDataXLCD@data stored from wreg
  8835  002706  6E01               	movwf	WriteDataXLCD@data,c
  8836                           
  8837                           ;lcd_pic16.c: 110: void WriteDataXLCD(char data);lcd_pic16.c: 111: {;lcd_pic16.c: 125:  
      +                                 TRISD &= 0x0f;
  8838  002708  0E0F               	movlw	15
  8839  00270A  1695               	andwf	3989,f,c	;volatile
  8840                           
  8841                           ;lcd_pic16.c: 126:         PORTD &= 0x0f;
  8842  00270C  0E0F               	movlw	15
  8843  00270E  1683               	andwf	3971,f,c	;volatile
  8844                           
  8845                           ;lcd_pic16.c: 127:         PORTD |= data&0xf0;
  8846  002710  5001               	movf	WriteDataXLCD@data,w,c
  8847  002712  0BF0               	andlw	240
  8848  002714  1283               	iorwf	3971,f,c	;volatile
  8849                           
  8850                           ;lcd_pic16.c: 133:         PORTDbits.RD3 = 1;
  8851  002716  8683               	bsf	3971,3,c	;volatile
  8852                           
  8853                           ;lcd_pic16.c: 134:         PORTDbits.RD2 = 0;
  8854  002718  9483               	bcf	3971,2,c	;volatile
  8855                           
  8856                           ;lcd_pic16.c: 135:         DelayFor18TCY();
  8857  00271A  EC39  F015         	call	i2_DelayFor18TCY	;wreg free
  8858                           
  8859                           ;lcd_pic16.c: 136:         PORTDbits.RD1 = 1;
  8860  00271E  8283               	bsf	3971,1,c	;volatile
  8861                           
  8862                           ;lcd_pic16.c: 137:         DelayFor18TCY();
  8863  002720  EC39  F015         	call	i2_DelayFor18TCY	;wreg free
  8864                           
  8865                           ;lcd_pic16.c: 138:         PORTDbits.RD1 = 0;
  8866  002724  9283               	bcf	3971,1,c	;volatile
  8867                           
  8868                           ;lcd_pic16.c: 140:         PORTD &= 0x0f;
  8869  002726  0E0F               	movlw	15
  8870  002728  1683               	andwf	3971,f,c	;volatile
  8871                           
  8872                           ;lcd_pic16.c: 141:         PORTD |= ((data<<4)&0xf0);
  8873  00272A  3801               	swapf	WriteDataXLCD@data,w,c
  8874  00272C  0BF0               	andlw	240
  8875  00272E  0BF0               	andlw	240
  8876  002730  1283               	iorwf	3971,f,c	;volatile
  8877                           
  8878                           ;lcd_pic16.c: 146:         DelayFor18TCY();
  8879  002732  EC39  F015         	call	i2_DelayFor18TCY	;wreg free
  8880                           
  8881                           ;lcd_pic16.c: 147:         PORTDbits.RD1 = 1;
  8882  002736  8283               	bsf	3971,1,c	;volatile
  8883                           
  8884                           ;lcd_pic16.c: 148:         DelayFor18TCY();
  8885  002738  EC39  F015         	call	i2_DelayFor18TCY	;wreg free
  8886                           
  8887                           ;lcd_pic16.c: 149:         PORTDbits.RD1 = 0;
  8888  00273C  9283               	bcf	3971,1,c	;volatile
  8889                           
  8890                           ;lcd_pic16.c: 151:         TRISD |= 0xf0;
  8891  00273E  0EF0               	movlw	240
  8892  002740  1295               	iorwf	3989,f,c	;volatile
  8893  002742  0012               	return		;funcret
  8894  002744  FFFF               	dw	65535	; errata NOP
  8895  002746                     __end_of_WriteDataXLCD:
  8896                           	opt callstack 0
  8897                           
  8898 ;; *************** function i2_DelayFor18TCY *****************
  8899 ;; Defined at:
  8900 ;;		line 22 in file "lcd_pic16.c"
  8901 ;; Parameters:    Size  Location     Type
  8902 ;;		None
  8903 ;; Auto vars:     Size  Location     Type
  8904 ;;		None
  8905 ;; Return value:  Size  Location     Type
  8906 ;;                  1    wreg      void 
  8907 ;; Registers used:
  8908 ;;		wreg
  8909 ;; Tracked objects:
  8910 ;;		On entry : 0/0
  8911 ;;		On exit  : 0/0
  8912 ;;		Unchanged: 0/0
  8913 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8914 ;;      Params:         0       0       0       0       0       0       0
  8915 ;;      Locals:         0       0       0       0       0       0       0
  8916 ;;      Temps:          0       0       0       0       0       0       0
  8917 ;;      Totals:         0       0       0       0       0       0       0
  8918 ;;Total ram usage:        0 bytes
  8919 ;; Hardware stack levels used:    1
  8920 ;; This function calls:
  8921 ;;		Nothing
  8922 ;; This function is called by:
  8923 ;;		_WriteDataXLCD
  8924 ;;		i2_SetDDRamAddr
  8925 ;; This function uses a non-reentrant model
  8926 ;;
  8927                           
  8928                           	psect	text57
  8929  002A72                     __ptext57:
  8930                           	opt callstack 0
  8931  002A72                     i2_DelayFor18TCY:
  8932                           	opt callstack 0
  8933  002A72  FFFF               	dw	65535	; assembler added errata NOP
  8934                           
  8935                           ;lcd_pic16.c: 24:    _delay((unsigned long)((18)*(12000000/4000000.0)));
  8936                           
  8937                           ;incstack = 0
  8938  002A74  0E0D               	movlw	13
  8939  002A76                     i2u399_47:
  8940  002A76  FFFF               	dw	65535	; errata NOP
  8941  002A78  2EE8               	decfsz	wreg,f,c
  8942  002A7A  D7FD               	bra	i2u399_47
  8943  002A7C  D000               	nop2	
  8944  002A7E  0012               	return		;funcret
  8945  002A80  FFFF               	dw	65535	; errata NOP
  8946  002A82                     __end_ofi2_DelayFor18TCY:
  8947                           	opt callstack 0
  8948                           
  8949 ;; *************** function ___lwmod *****************
  8950 ;; Defined at:
  8951 ;;		line 7 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/lwmod.c"
  8952 ;; Parameters:    Size  Location     Type
  8953 ;;  dividend        2    0[COMRAM] unsigned int 
  8954 ;;  divisor         2    2[COMRAM] unsigned int 
  8955 ;; Auto vars:     Size  Location     Type
  8956 ;;  counter         1    4[COMRAM] unsigned char 
  8957 ;; Return value:  Size  Location     Type
  8958 ;;                  2    0[COMRAM] unsigned int 
  8959 ;; Registers used:
  8960 ;;		wreg, status,2, status,0
  8961 ;; Tracked objects:
  8962 ;;		On entry : 0/0
  8963 ;;		On exit  : 0/0
  8964 ;;		Unchanged: 0/0
  8965 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8966 ;;      Params:         4       0       0       0       0       0       0
  8967 ;;      Locals:         1       0       0       0       0       0       0
  8968 ;;      Temps:          0       0       0       0       0       0       0
  8969 ;;      Totals:         5       0       0       0       0       0       0
  8970 ;;Total ram usage:        5 bytes
  8971 ;; Hardware stack levels used:    1
  8972 ;; This function calls:
  8973 ;;		Nothing
  8974 ;; This function is called by:
  8975 ;;		_updateLCD
  8976 ;; This function uses a non-reentrant model
  8977 ;;
  8978                           
  8979                           	psect	text58
  8980  002482                     __ptext58:
  8981                           	opt callstack 0
  8982  002482                     ___lwmod:
  8983                           	opt callstack 0
  8984  002482  FFFF               	dw	65535	; assembler added errata NOP
  8985                           
  8986                           ;incstack = 0
  8987  002484  5003               	movf	___lwmod@divisor,w,c
  8988  002486  1004               	iorwf	___lwmod@divisor+1,w,c
  8989  002488  B4D8               	btfsc	status,2,c
  8990  00248A  D01C               	goto	i2l1126
  8991  00248C  0E01               	movlw	1
  8992  00248E  6E05               	movwf	___lwmod@counter,c
  8993  002490  D005               	goto	i2l3806
  8994  002492                     i2l3804:
  8995  002492  FFFF               	dw	65535	; assembler added errata NOP
  8996  002494  90D8               	bcf	status,0,c
  8997  002496  3603               	rlcf	___lwmod@divisor,f,c
  8998  002498  3604               	rlcf	___lwmod@divisor+1,f,c
  8999  00249A  2A05               	incf	___lwmod@counter,f,c
  9000  00249C                     i2l3806:
  9001  00249C  FFFF               	dw	65535	; assembler added errata NOP
  9002  00249E  AE04               	btfss	___lwmod@divisor+1,7,c
  9003  0024A0  D7F8               	goto	i2l3804
  9004  0024A2                     i2u335_40:
  9005  0024A2  FFFF               	dw	65535	; assembler added errata NOP
  9006  0024A4  5003               	movf	___lwmod@divisor,w,c
  9007  0024A6  5C01               	subwf	___lwmod@dividend,w,c
  9008  0024A8  5004               	movf	___lwmod@divisor+1,w,c
  9009  0024AA  5802               	subwfb	___lwmod@dividend+1,w,c
  9010  0024AC  A0D8               	btfss	status,0,c
  9011  0024AE  D004               	goto	i2l3812
  9012  0024B0  5003               	movf	___lwmod@divisor,w,c
  9013  0024B2  5E01               	subwf	___lwmod@dividend,f,c
  9014  0024B4  5004               	movf	___lwmod@divisor+1,w,c
  9015  0024B6  5A02               	subwfb	___lwmod@dividend+1,f,c
  9016  0024B8                     i2l3812:
  9017  0024B8  FFFF               	dw	65535	; assembler added errata NOP
  9018  0024BA  90D8               	bcf	status,0,c
  9019  0024BC  3204               	rrcf	___lwmod@divisor+1,f,c
  9020  0024BE  3203               	rrcf	___lwmod@divisor,f,c
  9021  0024C0  2E05               	decfsz	___lwmod@counter,f,c
  9022  0024C2  D7EF               	goto	i2u335_40
  9023  0024C4                     i2l1126:
  9024  0024C4  FFFF               	dw	65535	; assembler added errata NOP
  9025  0024C6  C001  F001         	movff	___lwmod@dividend,?___lwmod
  9026  0024CA  C002  F002         	movff	___lwmod@dividend+1,?___lwmod+1
  9027  0024CE  0012               	return		;funcret
  9028  0024D0  FFFF               	dw	65535	; errata NOP
  9029  0024D2                     __end_of___lwmod:
  9030                           	opt callstack 0
  9031                           
  9032 ;; *************** function ___lwdiv *****************
  9033 ;; Defined at:
  9034 ;;		line 7 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/lwdiv.c"
  9035 ;; Parameters:    Size  Location     Type
  9036 ;;  dividend        2    0[COMRAM] unsigned int 
  9037 ;;  divisor         2    2[COMRAM] unsigned int 
  9038 ;; Auto vars:     Size  Location     Type
  9039 ;;  quotient        2    4[COMRAM] unsigned int 
  9040 ;;  counter         1    6[COMRAM] unsigned char 
  9041 ;; Return value:  Size  Location     Type
  9042 ;;                  2    0[COMRAM] unsigned int 
  9043 ;; Registers used:
  9044 ;;		wreg, status,2, status,0
  9045 ;; Tracked objects:
  9046 ;;		On entry : 0/0
  9047 ;;		On exit  : 0/0
  9048 ;;		Unchanged: 0/0
  9049 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9050 ;;      Params:         4       0       0       0       0       0       0
  9051 ;;      Locals:         3       0       0       0       0       0       0
  9052 ;;      Temps:          0       0       0       0       0       0       0
  9053 ;;      Totals:         7       0       0       0       0       0       0
  9054 ;;Total ram usage:        7 bytes
  9055 ;; Hardware stack levels used:    1
  9056 ;; This function calls:
  9057 ;;		Nothing
  9058 ;; This function is called by:
  9059 ;;		_updateLCD
  9060 ;; This function uses a non-reentrant model
  9061 ;;
  9062                           
  9063                           	psect	text59
  9064  002322                     __ptext59:
  9065                           	opt callstack 0
  9066  002322                     ___lwdiv:
  9067                           	opt callstack 0
  9068  002322  FFFF               	dw	65535	; assembler added errata NOP
  9069                           
  9070                           ;incstack = 0
  9071  002324  0E00               	movlw	0
  9072  002326  6E06               	movwf	___lwdiv@quotient+1,c
  9073  002328  0E00               	movlw	0
  9074  00232A  6E05               	movwf	___lwdiv@quotient,c
  9075  00232C  5003               	movf	___lwdiv@divisor,w,c
  9076  00232E  1004               	iorwf	___lwdiv@divisor+1,w,c
  9077  002330  B4D8               	btfsc	status,2,c
  9078  002332  D020               	goto	i2l1116
  9079  002334  0E01               	movlw	1
  9080  002336  6E07               	movwf	___lwdiv@counter,c
  9081  002338  D005               	goto	i2l3786
  9082  00233A                     i2l3784:
  9083  00233A  FFFF               	dw	65535	; assembler added errata NOP
  9084  00233C  90D8               	bcf	status,0,c
  9085  00233E  3603               	rlcf	___lwdiv@divisor,f,c
  9086  002340  3604               	rlcf	___lwdiv@divisor+1,f,c
  9087  002342  2A07               	incf	___lwdiv@counter,f,c
  9088  002344                     i2l3786:
  9089  002344  FFFF               	dw	65535	; assembler added errata NOP
  9090  002346  AE04               	btfss	___lwdiv@divisor+1,7,c
  9091  002348  D7F8               	goto	i2l3784
  9092  00234A                     i2u332_40:
  9093  00234A  FFFF               	dw	65535	; assembler added errata NOP
  9094  00234C  90D8               	bcf	status,0,c
  9095  00234E  3605               	rlcf	___lwdiv@quotient,f,c
  9096  002350  3606               	rlcf	___lwdiv@quotient+1,f,c
  9097  002352  5003               	movf	___lwdiv@divisor,w,c
  9098  002354  5C01               	subwf	___lwdiv@dividend,w,c
  9099  002356  5004               	movf	___lwdiv@divisor+1,w,c
  9100  002358  5802               	subwfb	___lwdiv@dividend+1,w,c
  9101  00235A  A0D8               	btfss	status,0,c
  9102  00235C  D005               	goto	i2l3796
  9103  00235E  5003               	movf	___lwdiv@divisor,w,c
  9104  002360  5E01               	subwf	___lwdiv@dividend,f,c
  9105  002362  5004               	movf	___lwdiv@divisor+1,w,c
  9106  002364  5A02               	subwfb	___lwdiv@dividend+1,f,c
  9107  002366  8005               	bsf	___lwdiv@quotient,0,c
  9108  002368                     i2l3796:
  9109  002368  FFFF               	dw	65535	; assembler added errata NOP
  9110  00236A  90D8               	bcf	status,0,c
  9111  00236C  3204               	rrcf	___lwdiv@divisor+1,f,c
  9112  00236E  3203               	rrcf	___lwdiv@divisor,f,c
  9113  002370  2E07               	decfsz	___lwdiv@counter,f,c
  9114  002372  D7EB               	goto	i2u332_40
  9115  002374                     i2l1116:
  9116  002374  FFFF               	dw	65535	; assembler added errata NOP
  9117  002376  C005  F001         	movff	___lwdiv@quotient,?___lwdiv
  9118  00237A  C006  F002         	movff	___lwdiv@quotient+1,?___lwdiv+1
  9119  00237E  0012               	return		;funcret
  9120  002380  FFFF               	dw	65535	; errata NOP
  9121  002382                     __end_of___lwdiv:
  9122                           	opt callstack 0
  9123                           
  9124 ;; *************** function _time *****************
  9125 ;; Defined at:
  9126 ;;		line 115 in file "main.c"
  9127 ;; Parameters:    Size  Location     Type
  9128 ;;		None
  9129 ;; Auto vars:     Size  Location     Type
  9130 ;;		None
  9131 ;; Return value:  Size  Location     Type
  9132 ;;                  1    wreg      void 
  9133 ;; Registers used:
  9134 ;;		wreg, status,2, status,0, cstack
  9135 ;; Tracked objects:
  9136 ;;		On entry : 0/0
  9137 ;;		On exit  : 0/0
  9138 ;;		Unchanged: 0/0
  9139 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9140 ;;      Params:         0       0       0       0       0       0       0
  9141 ;;      Locals:         0       0       0       0       0       0       0
  9142 ;;      Temps:          0       0       0       0       0       0       0
  9143 ;;      Totals:         0       0       0       0       0       0       0
  9144 ;;Total ram usage:        0 bytes
  9145 ;; Hardware stack levels used:    1
  9146 ;; Hardware stack levels required when called:    2
  9147 ;; This function calls:
  9148 ;;		i2_setData
  9149 ;; This function is called by:
  9150 ;;		_inter
  9151 ;; This function uses a non-reentrant model
  9152 ;;
  9153                           
  9154                           	psect	text60
  9155  00211A                     __ptext60:
  9156                           	opt callstack 0
  9157  00211A                     _time:
  9158                           	opt callstack 0
  9159  00211A  FFFF               	dw	65535	; assembler added errata NOP
  9160                           
  9161                           ;main.c: 116:     hundredMiliSeconds++;
  9162                           
  9163                           ;incstack = 0
  9164  00211C  0100               	movlb	0	; () banked
  9165  00211E  2BF7               	incf	_hundredMiliSeconds& (0+255),f,b
  9166                           
  9167                           ; BSR set to: 0
  9168                           ;main.c: 117:     if(hundredMiliSeconds >= 10){
  9169  002120  0E09               	movlw	9
  9170  002122  65F7               	cpfsgt	_hundredMiliSeconds& (0+255),b
  9171  002124  D02E               	goto	i2l240
  9172                           
  9173                           ; BSR set to: 0
  9174                           ;main.c: 118:         hundredMiliSeconds = 0;
  9175  002126  0E00               	movlw	0
  9176  002128  6FF7               	movwf	_hundredMiliSeconds& (0+255),b
  9177                           
  9178                           ; BSR set to: 0
  9179                           ;main.c: 119:         seconds++;
  9180  00212A  2BF8               	incf	_seconds& (0+255),f,b
  9181                           
  9182                           ; BSR set to: 0
  9183                           ;main.c: 120:         if(seconds >= 60){
  9184  00212C  0E3B               	movlw	59
  9185  00212E  65F8               	cpfsgt	_seconds& (0+255),b
  9186  002130  D028               	goto	i2l240
  9187                           
  9188                           ; BSR set to: 0
  9189                           ;main.c: 121:             seconds = 0;
  9190  002132  0E00               	movlw	0
  9191  002134  6FF8               	movwf	_seconds& (0+255),b
  9192                           
  9193                           ; BSR set to: 0
  9194                           ;main.c: 122:             minutes++;
  9195  002136  2BFB               	incf	_minutes& (0+255),f,b
  9196                           
  9197                           ; BSR set to: 0
  9198                           ;main.c: 123:             setData(0);
  9199  002138  0E00               	movlw	0
  9200  00213A  EC54  F010         	call	i2_setData
  9201                           
  9202                           ;main.c: 124:             if(minutes >= 60){
  9203  00213E  0E3B               	movlw	59
  9204  002140  0100               	movlb	0	; () banked
  9205  002142  65FB               	cpfsgt	_minutes& (0+255),b
  9206  002144  D01E               	goto	i2l240
  9207                           
  9208                           ; BSR set to: 0
  9209                           ;main.c: 125:                 minutes = 0;
  9210  002146  0E00               	movlw	0
  9211  002148  6FFB               	movwf	_minutes& (0+255),b
  9212                           
  9213                           ; BSR set to: 0
  9214                           ;main.c: 126:                 hours++;
  9215  00214A  2BFC               	incf	_hours& (0+255),f,b
  9216                           
  9217                           ; BSR set to: 0
  9218                           ;main.c: 127:                 if(hours >= 24){
  9219  00214C  0E17               	movlw	23
  9220  00214E  65FC               	cpfsgt	_hours& (0+255),b
  9221  002150  D018               	goto	i2l240
  9222                           
  9223                           ; BSR set to: 0
  9224                           ;main.c: 128:                     hours = 0;
  9225  002152  0E00               	movlw	0
  9226  002154  6FFC               	movwf	_hours& (0+255),b
  9227                           
  9228                           ; BSR set to: 0
  9229                           ;main.c: 129:                     days++;
  9230  002156  2BFD               	incf	_days& (0+255),f,b
  9231                           
  9232                           ; BSR set to: 0
  9233                           ;main.c: 130:                     if(days >= 30){
  9234  002158  0E1D               	movlw	29
  9235  00215A  65FD               	cpfsgt	_days& (0+255),b
  9236  00215C  D003               	goto	i2l4032
  9237                           
  9238                           ; BSR set to: 0
  9239                           ;main.c: 131:                         days = 0;
  9240  00215E  0E00               	movlw	0
  9241  002160  6FFD               	movwf	_days& (0+255),b
  9242                           
  9243                           ; BSR set to: 0
  9244                           ;main.c: 132:                         months++;
  9245  002162  2BFE               	incf	_months& (0+255),f,b
  9246  002164                     i2l4032:
  9247  002164  FFFF               	dw	65535	; assembler added errata NOP
  9248                           
  9249                           ; BSR set to: 0
  9250  002166  0E0D               	movlw	13
  9251  002168  19FD               	xorwf	_days& (0+255),w,b
  9252  00216A  A4D8               	btfss	status,2,c
  9253  00216C  D006               	goto	i2l4038
  9254                           
  9255                           ; BSR set to: 0
  9256  00216E  0E06               	movlw	6
  9257  002170  19FE               	xorwf	_months& (0+255),w,b
  9258  002172  A4D8               	btfss	status,2,c
  9259  002174  D002               	goto	i2l4038
  9260                           
  9261                           ; BSR set to: 0
  9262  002176  0E00               	movlw	0
  9263  002178  D002               	goto	L13
  9264  00217A                     i2l4038:
  9265  00217A  FFFF               	dw	65535	; assembler added errata NOP
  9266                           
  9267                           ; BSR set to: 0
  9268  00217C  0E01               	movlw	1
  9269  00217E                     L13:
  9270  00217E  FFFF               	dw	65535	; assembler added errata NOP
  9271  002180  6FF6               	movwf	_functionalStat& (0+255),b
  9272  002182                     i2l240:
  9273  002182  FFFF               	dw	65535	; assembler added errata NOP
  9274                           
  9275                           ; BSR set to: 0
  9276  002184  0012               	return		;funcret
  9277  002186  FFFF               	dw	65535	; errata NOP
  9278  002188                     __end_of_time:
  9279                           	opt callstack 0
  9280                           
  9281 ;; *************** function i2_setData *****************
  9282 ;; Defined at:
  9283 ;;		line 46 in file "eeprom.c"
  9284 ;; Parameters:    Size  Location     Type
  9285 ;;  full            1    wreg     unsigned char 
  9286 ;; Auto vars:     Size  Location     Type
  9287 ;;  full            1    4[COMRAM] unsigned char 
  9288 ;;  setData         1    3[COMRAM] unsigned char 
  9289 ;;  setData         1    2[COMRAM] unsigned char 
  9290 ;; Return value:  Size  Location     Type
  9291 ;;                  1    wreg      void 
  9292 ;; Registers used:
  9293 ;;		wreg, status,2, cstack
  9294 ;; Tracked objects:
  9295 ;;		On entry : 0/0
  9296 ;;		On exit  : 0/0
  9297 ;;		Unchanged: 0/0
  9298 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9299 ;;      Params:         0       0       0       0       0       0       0
  9300 ;;      Locals:         3       0       0       0       0       0       0
  9301 ;;      Temps:          0       0       0       0       0       0       0
  9302 ;;      Totals:         3       0       0       0       0       0       0
  9303 ;;Total ram usage:        3 bytes
  9304 ;; Hardware stack levels used:    1
  9305 ;; Hardware stack levels required when called:    1
  9306 ;; This function calls:
  9307 ;;		i2_writeEEPROM
  9308 ;; This function is called by:
  9309 ;;		_time
  9310 ;; This function uses a non-reentrant model
  9311 ;;
  9312                           
  9313                           	psect	text61
  9314  0020A8                     __ptext61:
  9315                           	opt callstack 0
  9316  0020A8                     i2_setData:
  9317                           	opt callstack 0
  9318  0020A8  FFFF               	dw	65535	; assembler added errata NOP
  9319                           
  9320                           ; BSR set to: 0
  9321                           ;incstack = 0
  9322                           ;i2setData@full stored from wreg
  9323  0020AA  6E05               	movwf	i2setData@full,c
  9324                           
  9325                           ;eeprom.c: 47:     unsigned char data0 = frequency & 0x00FF;
  9326  0020AC  C0F4  F003         	movff	_frequency,i2setData@data0
  9327                           
  9328                           ;eeprom.c: 48:     unsigned char data1 = frequency >> 8;
  9329  0020B0  0100               	movlb	0	; () banked
  9330  0020B2  51F5               	movf	(_frequency+1)& (0+255),w,b
  9331  0020B4  6E04               	movwf	i2setData@data1,c
  9332                           
  9333                           ; BSR set to: 0
  9334                           ;eeprom.c: 49:     if(full)writeEEPROM(data0 ,0);
  9335  0020B6  5005               	movf	i2setData@full,w,c
  9336  0020B8  B4D8               	btfsc	status,2,c
  9337  0020BA  D005               	goto	i2l3824
  9338                           
  9339                           ; BSR set to: 0
  9340  0020BC  0E00               	movlw	0
  9341  0020BE  6E01               	movwf	i2writeEEPROM@address,c
  9342  0020C0  5003               	movf	i2setData@data0,w,c
  9343  0020C2  ECB5  F014         	call	i2_writeEEPROM
  9344  0020C6                     i2l3824:
  9345  0020C6  FFFF               	dw	65535	; assembler added errata NOP
  9346                           
  9347                           ;eeprom.c: 50:     if(full)writeEEPROM(data1 ,1);
  9348  0020C8  5005               	movf	i2setData@full,w,c
  9349  0020CA  B4D8               	btfsc	status,2,c
  9350  0020CC  D005               	goto	i2l70
  9351  0020CE  0E01               	movlw	1
  9352  0020D0  6E01               	movwf	i2writeEEPROM@address,c
  9353  0020D2  5004               	movf	i2setData@data1,w,c
  9354  0020D4  ECB5  F014         	call	i2_writeEEPROM
  9355  0020D8                     i2l70:
  9356  0020D8  FFFF               	dw	65535	; assembler added errata NOP
  9357                           
  9358                           ;eeprom.c: 51:     writeEEPROM(months ,2);
  9359  0020DA  0E02               	movlw	2
  9360  0020DC  6E01               	movwf	i2writeEEPROM@address,c
  9361  0020DE  0100               	movlb	0	; () banked
  9362  0020E0  51FE               	movf	_months& (0+255),w,b
  9363  0020E2  ECB5  F014         	call	i2_writeEEPROM
  9364                           
  9365                           ;eeprom.c: 52:     writeEEPROM(days ,3);
  9366  0020E6  0E03               	movlw	3
  9367  0020E8  6E01               	movwf	i2writeEEPROM@address,c
  9368  0020EA  0100               	movlb	0	; () banked
  9369  0020EC  51FD               	movf	_days& (0+255),w,b
  9370  0020EE  ECB5  F014         	call	i2_writeEEPROM
  9371                           
  9372                           ;eeprom.c: 53:     writeEEPROM(hours ,4);
  9373  0020F2  0E04               	movlw	4
  9374  0020F4  6E01               	movwf	i2writeEEPROM@address,c
  9375  0020F6  0100               	movlb	0	; () banked
  9376  0020F8  51FC               	movf	_hours& (0+255),w,b
  9377  0020FA  ECB5  F014         	call	i2_writeEEPROM
  9378                           
  9379                           ;eeprom.c: 54:     writeEEPROM(minutes ,5);
  9380  0020FE  0E05               	movlw	5
  9381  002100  6E01               	movwf	i2writeEEPROM@address,c
  9382  002102  0100               	movlb	0	; () banked
  9383  002104  51FB               	movf	_minutes& (0+255),w,b
  9384  002106  ECB5  F014         	call	i2_writeEEPROM
  9385                           
  9386                           ;eeprom.c: 55:     writeEEPROM(functionalStat ,6);
  9387  00210A  0E06               	movlw	6
  9388  00210C  6E01               	movwf	i2writeEEPROM@address,c
  9389  00210E  0100               	movlb	0	; () banked
  9390  002110  51F6               	movf	_functionalStat& (0+255),w,b
  9391  002112  ECB5  F014         	call	i2_writeEEPROM
  9392  002116  0012               	return		;funcret
  9393  002118  FFFF               	dw	65535	; errata NOP
  9394  00211A                     __end_ofi2_setData:
  9395                           	opt callstack 0
  9396                           
  9397 ;; *************** function i2_writeEEPROM *****************
  9398 ;; Defined at:
  9399 ;;		line 15 in file "eeprom.c"
  9400 ;; Parameters:    Size  Location     Type
  9401 ;;  data            1    wreg     unsigned char 
  9402 ;;  address         1    0[COMRAM] unsigned char 
  9403 ;; Auto vars:     Size  Location     Type
  9404 ;;  data            1    1[COMRAM] unsigned char 
  9405 ;; Return value:  Size  Location     Type
  9406 ;;                  1    wreg      void 
  9407 ;; Registers used:
  9408 ;;		wreg, status,2
  9409 ;; Tracked objects:
  9410 ;;		On entry : 0/0
  9411 ;;		On exit  : 0/0
  9412 ;;		Unchanged: 0/0
  9413 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9414 ;;      Params:         1       0       0       0       0       0       0
  9415 ;;      Locals:         1       0       0       0       0       0       0
  9416 ;;      Temps:          0       0       0       0       0       0       0
  9417 ;;      Totals:         2       0       0       0       0       0       0
  9418 ;;Total ram usage:        2 bytes
  9419 ;; Hardware stack levels used:    1
  9420 ;; This function calls:
  9421 ;;		Nothing
  9422 ;; This function is called by:
  9423 ;;		i2_setData
  9424 ;; This function uses a non-reentrant model
  9425 ;;
  9426                           
  9427                           	psect	text62
  9428  00296A                     __ptext62:
  9429                           	opt callstack 0
  9430  00296A                     i2_writeEEPROM:
  9431                           	opt callstack 0
  9432  00296A  FFFF               	dw	65535	; assembler added errata NOP
  9433                           
  9434                           ;incstack = 0
  9435                           ;i2writeEEPROM@data stored from wreg
  9436  00296C  6E02               	movwf	i2writeEEPROM@data,c
  9437                           
  9438                           ;eeprom.c: 16:     EEADR = address;
  9439  00296E  C001  FFA9         	movff	i2writeEEPROM@address,4009	;volatile
  9440                           
  9441                           ;eeprom.c: 17:     EEDATA = data;
  9442  002972  C002  FFA8         	movff	i2writeEEPROM@data,4008	;volatile
  9443                           
  9444                           ;eeprom.c: 19:     EECON1bits.EEPGD = 0;
  9445  002976  9EA6               	bcf	4006,7,c	;volsfr
  9446                           
  9447                           ;eeprom.c: 20:     EECON1bits.CFGS = 0;
  9448  002978  9CA6               	bcf	4006,6,c	;volsfr
  9449                           
  9450                           ;eeprom.c: 21:     EECON1bits.WREN = 1;
  9451  00297A  84A6               	bsf	4006,2,c	;volsfr
  9452                           
  9453                           ;eeprom.c: 23:     INTCONbits.GIE = 0;
  9454  00297C  9EF2               	bcf	4082,7,c	;volatile
  9455                           
  9456                           ;eeprom.c: 24:     EECON2 = 0x55;
  9457  00297E  0E55               	movlw	85
  9458  002980  6EA7               	movwf	4007,c	;volsfr
  9459                           
  9460                           ;eeprom.c: 25:     EECON2 = 0xAA;
  9461  002982  0EAA               	movlw	170
  9462  002984  6EA7               	movwf	4007,c	;volsfr
  9463                           
  9464                           ;eeprom.c: 26:     EECON1bits.WR = 1;
  9465  002986  82A6               	bsf	4006,1,c	;volsfr
  9466                           
  9467                           ;eeprom.c: 27:     INTCONbits.GIE = 1;
  9468  002988  8EF2               	bsf	4082,7,c	;volatile
  9469  00298A                     i2l60:
  9470  00298A  FFFF               	dw	65535	; assembler added errata NOP
  9471  00298C  B8A1               	btfsc	4001,4,c	;volatile
  9472  00298E  0012               	return		;funcret
  9473  002990  FFFF               	dw	65535	; assembler added errata NOP
  9474  002992  D7FB               	goto	i2l60
  9475  002994  FFFF               	dw	65535	; errata NOP
  9476  002996                     __end_ofi2_writeEEPROM:
  9477                           	opt callstack 0
  9478                           
  9479                           	psect	rparam
  9480  0000                     
  9481                           	psect	temp
  9482  00007F                     btemp:
  9483                           	opt callstack 0
  9484  00007F                     	ds	1
  9485  0000                     int$flags	set	btemp
  9486  0000                     wtemp8	set	btemp+1
  9487  0000                     ttemp5	set	btemp+1
  9488  0000                     ttemp6	set	btemp+4
  9489  0000                     ttemp7	set	btemp+8
  9490                           tosu	equ	0xFFF
  9491                           tosh	equ	0xFFE
  9492                           tosl	equ	0xFFD
  9493                           stkptr	equ	0xFFC
  9494                           pclatu	equ	0xFFB
  9495                           pclath	equ	0xFFA
  9496                           pcl	equ	0xFF9
  9497                           tblptru	equ	0xFF8
  9498                           tblptrh	equ	0xFF7
  9499                           tblptrl	equ	0xFF6
  9500                           tablat	equ	0xFF5
  9501                           prodh	equ	0xFF4
  9502                           prodl	equ	0xFF3
  9503                           indf0	equ	0xFEF
  9504                           postinc0	equ	0xFEE
  9505                           postdec0	equ	0xFED
  9506                           preinc0	equ	0xFEC
  9507                           plusw0	equ	0xFEB
  9508                           fsr0h	equ	0xFEA
  9509                           fsr0l	equ	0xFE9
  9510                           wreg	equ	0xFE8
  9511                           indf1	equ	0xFE7
  9512                           postinc1	equ	0xFE6
  9513                           postdec1	equ	0xFE5
  9514                           preinc1	equ	0xFE4
  9515                           plusw1	equ	0xFE3
  9516                           fsr1h	equ	0xFE2
  9517                           fsr1l	equ	0xFE1
  9518                           bsr	equ	0xFE0
  9519                           indf2	equ	0xFDF
  9520                           postinc2	equ	0xFDE
  9521                           postdec2	equ	0xFDD
  9522                           preinc2	equ	0xFDC
  9523                           plusw2	equ	0xFDB
  9524                           fsr2h	equ	0xFDA
  9525                           fsr2l	equ	0xFD9
  9526                           status	equ	0xFD8


Data Sizes:
    Strings     69
    Constant    4
    Data        9
    BSS         81
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126    121     126
    BANK0           128    110     127
    BANK1           256      0      68
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    i2sprintf@f.buffer	PTR unsigned char  size(2) Largest target is 0
		 -> lineTwo(BANK1[17]), lineOne(BANK1[17]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 18
		 -> STR_4(CODE[18]), STR_3(CODE[17]), STR_2(CODE[17]), STR_1(CODE[17]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 17
		 -> lineTwo(BANK1[17]), lineOne(BANK1[17]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 17
		 -> lineTwo(BANK1[17]), lineOne(BANK1[17]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    S1525_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 17
		 -> lineTwo(BANK1[17]), lineOne(BANK1[17]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 17
		 -> lineTwo(BANK1[17]), lineOne(BANK1[17]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 18
		 -> STR_4(CODE[18]), STR_3(CODE[17]), STR_2(CODE[17]), STR_1(CODE[17]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 18
		 -> STR_4(CODE[18]), STR_3(CODE[17]), STR_2(CODE[17]), STR_1(CODE[17]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 18
		 -> STR_4(CODE[18]), STR_3(CODE[17]), STR_2(CODE[17]), STR_1(CODE[17]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    putsXLCD@buffer	PTR unsigned char  size(2) Largest target is 17
		 -> lineTwo(BANK1[17]), lineOne(BANK1[17]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _inter in COMRAM

    _inter->_updateLCD
    _updateLCD->i2_sprintf
    i2_sprintf->i2_vfprintf
    i2_vfprintf->i2_vfpfcnvrt
    i2_vfpfcnvrt->i2_dtoa
    i2_dtoa->i2_pad
    i2_pad->i2_fputs
    i2_fputs->i2_fputc
    i2_abs->i2___aomod
    i2_atoi->i2_isspace
    _putsXLCD->_WriteDataXLCD
    _putsXLCD->i2_BusyXLCD
    _time->i2_setData
    i2_setData->i2_writeEEPROM

Critical Paths under _main in BANK0

    _main->_setFrequency
    _setFrequency->_sprintf
    _writeFrequency->_codFreq
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _atoi->_isspace
    _setData->_writeEEPROM
    _beep->___wmul
    _getData->_readEEPROM
    _config->_initLCD
    _initLCD->_OpenXLCD
    _SendCMDLCD->_BusyXLCD
    _SendCMDLCD->_WriteCmdXLCD
    _OpenXLCD->_BusyXLCD
    _OpenXLCD->_DelayPORXLCD
    _OpenXLCD->_SetDDRamAddr
    _OpenXLCD->_WriteCmdXLCD

Critical Paths under _inter in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _inter in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _inter in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _inter in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _inter in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _inter in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0   21380
                                            107 BANK0      3     3      0
                               _beep
                             _config
                            _getData
                       _setFrequency
                            _sprintf
                            _vumeter
 ---------------------------------------------------------------------------------
 (1) _vumeter                                              4     4      0     176
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) _setFrequency                                         2     2      0   10968
                                            105 BANK0      2     2      0
                               _beep
                            _setData
                            _sprintf
                     _writeFrequency
 ---------------------------------------------------------------------------------
 (2) _writeFrequency                                      10     8      2     356
                                              2 BANK0     10     8      2
                            _codFreq
 ---------------------------------------------------------------------------------
 (3) _codFreq                                              2     0      2     144
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             14    10      4    8715
                                             91 BANK0     14    10      4
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6    7947
                                             83 BANK0      8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           46    40      6    7562
                                             63 BANK0     20    14      6
                               _atoi
                               _dtoa
                              _fputc
                            _isdigit
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                36    26     10    4358
                                             27 BANK0     36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    2709
                                             16 BANK0     11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               4     2      2     166
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    1235
                                              9 BANK0      7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4     834
                                              0 BANK0      9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     142
                                             18 BANK0      4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             18     2     16     448
                                              0 BANK0     18     2     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             26    10     16     452
                                              0 BANK0     26    10     16
 ---------------------------------------------------------------------------------
 (4) _atoi                                                15    13      2    1396
                                              7 BANK0     15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (5) _isspace                                              7     5      2     207
                                              0 BANK0      7     5      2
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              6     4      2     237
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (2) _setData                                              3     3      0     666
                                              2 BANK0      3     3      0
                        _writeEEPROM
 ---------------------------------------------------------------------------------
 (3) _writeEEPROM                                          2     1      1     576
                                              0 BANK0      2     1      1
 ---------------------------------------------------------------------------------
 (2) _beep                                                 2     0      2    1231
                                              6 BANK0      2     0      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     555
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) _getData                                              4     4      0      68
                                              1 BANK0      4     4      0
                         _readEEPROM
 ---------------------------------------------------------------------------------
 (2) _readEEPROM                                           1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _config                                               0     0      0     176
                            _initLCD
 ---------------------------------------------------------------------------------
 (2) _initLCD                                              2     2      0     176
                                              3 BANK0      2     2      0
                           _OpenXLCD
                         _SendCMDLCD
 ---------------------------------------------------------------------------------
 (3) _SendCMDLCD                                           1     1      0      66
                                              1 BANK0      1     1      0
                           _BusyXLCD
                       _WriteCmdXLCD
 ---------------------------------------------------------------------------------
 (3) _OpenXLCD                                             2     2      0     110
                                              1 BANK0      2     2      0
                           _BusyXLCD
                       _DelayPORXLCD
                       _SetDDRamAddr
                       _WriteCmdXLCD
 ---------------------------------------------------------------------------------
 (4) _WriteCmdXLCD                                         1     1      0      44
                                              0 BANK0      1     1      0
                      _DelayFor18TCY
 ---------------------------------------------------------------------------------
 (4) _SetDDRamAddr                                         1     1      0      44
                                              0 BANK0      1     1      0
                      _DelayFor18TCY
 ---------------------------------------------------------------------------------
 (5) _DelayFor18TCY                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _DelayPORXLCD                                         1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _BusyXLCD                                             1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _inter                                              10    10      0    6366
                                            111 COMRAM    10    10      0
                               _time
                          _updateLCD
 ---------------------------------------------------------------------------------
 (11) _updateLCD                                           2     2      0    6050
                                            109 COMRAM     2     2      0
                            ___lwdiv
                            ___lwmod
                           _putsXLCD
                     i2_SetDDRamAddr
                          i2_sprintf
 ---------------------------------------------------------------------------------
 (12) i2_sprintf                                          18    10      8    5094
                                             91 COMRAM    18    10      8
                         i2_vfprintf
 ---------------------------------------------------------------------------------
 (13) i2_vfprintf                                          8     2      6    4841
                                             83 COMRAM     8     2      6
                        i2_vfpfcnvrt
 ---------------------------------------------------------------------------------
 (14) i2_vfpfcnvrt                                        46    40      6    4629
                                             63 COMRAM    20    14      6
                             i2_atoi
                             i2_dtoa
                            i2_fputc
                          i2_isdigit
 ---------------------------------------------------------------------------------
 (15) i2_dtoa                                             36    26     10    2808
                                             27 COMRAM    36    26     10
                          i2___aodiv
                          i2___aomod
                              i2_abs
                              i2_pad
 ---------------------------------------------------------------------------------
 (16) i2_pad                                              11     5      6    1509
                                             16 COMRAM    11     5      6
                            i2_fputc
                            i2_fputs
                           i2_strlen
 ---------------------------------------------------------------------------------
 (17) i2_strlen                                            4     2      2     116
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (17) i2_fputs                                             7     3      4     635
                                              9 COMRAM     7     3      4
                            i2_fputc
 ---------------------------------------------------------------------------------
 (15) i2_fputc                                             9     5      4     434
                                              0 COMRAM     9     5      4
                            i2_putch
 ---------------------------------------------------------------------------------
 (16) i2_putch                                             1     1      0       0
 ---------------------------------------------------------------------------------
 (16) i2_abs                                               4     2      2      92
                                             18 COMRAM     4     2      2
                          i2___aomod (ARG)
 ---------------------------------------------------------------------------------
 (16) i2___aomod                                          18     2     16     348
                                              0 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (16) i2___aodiv                                          26    10     16     352
                                              0 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (15) i2_atoi                                             15    13      2     726
                                              7 COMRAM    15    13      2
                           i2___wmul
                          i2_isdigit
                          i2_isspace
 ---------------------------------------------------------------------------------
 (16) i2_isspace                                           7     5      2      94
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (15) i2_isdigit                                           6     4      2      74
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (16) i2___wmul                                            6     2      4     211
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (12) i2_SetDDRamAddr                                      1     1      0      44
                                              0 COMRAM     1     1      0
                    i2_DelayFor18TCY
 ---------------------------------------------------------------------------------
 (12) _putsXLCD                                            2     0      2     241
                                              1 COMRAM     2     0      2
                      _WriteDataXLCD
                         i2_BusyXLCD
 ---------------------------------------------------------------------------------
 (13) i2_BusyXLCD                                          1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (13) _WriteDataXLCD                                       1     1      0      44
                                              0 COMRAM     1     1      0
                    i2_DelayFor18TCY
 ---------------------------------------------------------------------------------
 (13) i2_DelayFor18TCY                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (12) ___lwmod                                             5     1      4     311
                                              0 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (12) ___lwdiv                                             7     3      4     314
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (11) _time                                                0     0      0     316
                          i2_setData
 ---------------------------------------------------------------------------------
 (12) i2_setData                                           3     3      0     316
                                              2 COMRAM     3     3      0
                      i2_writeEEPROM
 ---------------------------------------------------------------------------------
 (13) i2_writeEEPROM                                       2     1      1     226
                                              0 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 17
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _beep
     ___wmul
   _config
     _initLCD
       _OpenXLCD
         _BusyXLCD
         _DelayPORXLCD
         _SetDDRamAddr
           _DelayFor18TCY
         _WriteCmdXLCD
           _DelayFor18TCY
       _SendCMDLCD
         _BusyXLCD
         _WriteCmdXLCD
           _DelayFor18TCY
   _getData
     _readEEPROM
   _setFrequency
     _beep
       ___wmul
     _setData
       _writeEEPROM
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
           _fputc
             _putch
           _isdigit
     _writeFrequency
       _codFreq
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _atoi
           ___wmul
           _isdigit
           _isspace
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
             _fputs
               _fputc
                 _putch
             _strlen
         _fputc
           _putch
         _isdigit
   _vumeter

 _inter (ROOT)
   _time
     i2_setData
       i2_writeEEPROM
   _updateLCD
     ___lwdiv
     ___lwmod
     _putsXLCD
       _WriteDataXLCD
         i2_DelayFor18TCY
       i2_BusyXLCD
     i2_SetDDRamAddr
       i2_DelayFor18TCY
     i2_sprintf
       i2_vfprintf
         i2_vfpfcnvrt
           i2_atoi
             i2___wmul
             i2_isdigit
             i2_isspace
           i2_dtoa
             i2___aodiv
             i2___aomod
             i2_abs
               i2___aomod (ARG)
             i2_pad
               i2_fputc
                 i2_putch
               i2_fputs
                 i2_fputc
                   i2_putch
               i2_strlen
           i2_fputc
             i2_putch
           i2_isdigit

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      44       7       26.6%
BITBANK0            80      0       0       4        0.0%
BANK0               80     6E      7F       5       99.2%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     79      7E       1      100.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     141      15        0.0%
DATA                 0      0     141       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Wed Aug  7 15:50:27 2019

                                                 _UN_BLOCKED 0603  
                                                         l60 2932  
                                                         l70 2066  
                                        ___wmul@multiplicand 0082  
                                               __CFG_CP0$OFF 000000  
                                               __CFG_CP1$OFF 000000  
                                               __CFG_CP2$OFF 000000  
                                               __CFG_CP3$OFF 000000  
                                                __CFG_OSC$HS 000000  
                                                        l224 1F8E  
                                                        l243 23A6  
                                                        l248 1050  
                                                        l197 1BA0  
                                                        l534 1C18  
                                                        l615 08CC  
                                                        l580 0BDA  
                                                        l567 1CAC  
                                                        l578 0BD0  
                                               __CFG_CPB$OFF 000000  
                                               __CFG_CPD$OFF 000000  
                                         i2___aodiv@quotient 0013  
                                               __CFG_BOR$OFF 000000  
                                                        _abs 2746  
                                                        _pad 1C74  
                                               __CFG_BORV$20 000000  
                                      __size_of_WriteCmdXLCD 0048  
                                                        wreg 000FE8  
                                            __end_of_BLOCKED 0605  
                                        __end_ofi2_vfpfcnvrt 0B52  
                                               __CFG_LVP$OFF 000000  
                                               __CFG_WDT$OFF 000000  
                                                       ?_abs 0092  
                                                       l1300 2774  
                                                       l1303 277E  
                                                       l3002 262E  
                                                       l1331 1334  
                                                       l1334 133E  
                                                       l3200 11F0  
                                                       l1360 1DCA  
                                                       l3210 1242  
                                                       l3202 11F6  
                                                       l3220 1266  
                                                       l3222 1292  
                                                       l3142 0BB0  
                                                       l3216 1254  
                                                       l3160 0C0A  
                                                       l3226 12CC  
                                                       l3218 125E  
                                                       l3170 0D06  
                                                       l3156 0BF8  
                                                       l3190 0D74  
                                                       l3414 06F0  
                                                       l3440 086A  
                                                       l3416 0710  
                                                       l4080 1B3E  
                                                       l3194 0D90  
                                                       l3434 082A  
                                                       l3418 0720  
                                                       l3450 0892  
                                                       l4090 1B92  
                                                       l4074 1B2E  
                                                       l2820 1D40  
                                                       l3444 0876  
                                                       l3622 29C6  
                                                       l4094 1BA4  
                                                       l3640 2270  
                                                       l3562 1A32  
                                                       l2922 14DA  
                                                       l3642 22A0  
                                                       l3580 1A88  
                                                       l3572 1A64  
                                                       l2844 25BC  
                                                       l2852 28B4  
                                                       l2934 152C  
                                                       l2950 15BA  
                                                       l2854 28BC  
                                                       l3750 1BE2  
                                                       l3910 1084  
                                                       ?_pad 0090  
                                                       l3592 1ABE  
                                                       l3584 1A9A  
                                                       l3576 1A76  
                                                       l3568 1A52  
                                                       l2936 1542  
                                                       l2928 1504  
                                                       l2848 25D6  
                                                       l2954 15E2  
                                                       l2946 15A2  
                                                       l2970 17BA  
                                                       l2882 1C90  
                                                       l3754 1C1C  
                                                       l3930 110A  
                                                       l3922 10DC  
                                                       l3914 10B2  
                                                       l3906 106E  
                                                       l3588 1AAC  
                                                       l2892 1CD4  
                                                       l3924 10EA  
                                                       l2990 1878  
                                                       l2982 1838  
                                                       l2974 17D6  
                                                       l2966 1794  
                                                       l2886 1CA2  
                                                       l3942 1164  
                                                       l3934 1120  
                                                       l3918 10C6  
                                                       l3696 2052  
                                                       l2976 17EC  
                                                       l2896 1D02  
                                                       l2888 1CB8  
                                                       l2986 1850  
                                                       l3946 117A  
                                                       l3938 114E  
                                                       l3970 1F44  
                                                       l3948 1188  
                                                       l3990 1F80  
                                                       l3982 1F68  
                                                       l3974 1F50  
                                                       l3966 1F38  
                                                       l3986 1F74  
                                                       l3978 1F5C  
                                                       STR_1 0617  
                                                       STR_2 0639  
                                                       STR_3 0628  
                                                       STR_4 0605  
                                                       u2111 150C  
                                                       u2130 1548  
                                                       u2060 2758  
                                                       u2070 282A  
                                                       u2230 262A  
                                                       u2080 282E  
                                                       u2500 0BC4  
                                                       u2190 17F2  
                                                       u2520 0BF0  
                                                       u3090 1A3E  
                                                       u3250 23D4  
                                                       u2530 0D18  
                                                       u2620 123E  
                                                       u2460 0B7E  
                                                       u1910 1D36  
                                                       u2550 0D3A  
                                                       u2470 0B82  
                                                       u3510 118E  
                                                       u2551 0D38  
                                                       _PIE1 000F9D  
                                                       u2640 1300  
                                                       u2560 0D4A  
                                                       u3264 1BFC  
                                                       u3265 1BF4  
                                                       u2650 1304  
                                                       u1930 1D82  
                                                       u2570 0D4E  
                                                       u3450 10F0  
                                                       u2590 0D5C  
                                                       u3390 1056  
                                                       u3624 1FA8  
                                                       u3625 1FA0  
                                                       u2930 075E  
                                                       u2940 0762  
                                                       u2950 0770  
                                                       u3807 1B1C  
                                                       u3817 1B62  
                                                       u2970 07AA  
                                                       u3907 23B6  
                                                       u3827 109E  
                                                       u3917 24E6  
                                                       u3837 113A  
                                                       u3927 250A  
                                                       u3847 11A0  
                                                       u3937 1A02  
                                                       u3857 1BCE  
                                                       u3947 1A1E  
                                                       u3867 1C26  
                                                       i2l60 298A  
                                                       u3957 2A66  
                                                       u3877 1C3E  
                                                       u3797 1AEA  
                                                       i2l70 20D8  
                                                       u3967 2A22  
                                                       u3887 1C60  
                                                       u3977 29E8  
                                                       u3897 23AC  
                                               __CFG_PWRT$ON 000000  
                                               _stereoEnable 00FA  
                                               __CFG_STVR$ON 000000  
                                                       abs@a 0092  
                                                       _beep 2382  
                                                       _dbuf 0102  
                                                       _days 00FD  
                                                       _atoi 11DA  
                                                       _main 1AD4  
                                                       _dtoa 0B52  
                                                       _prec 00F0  
                                                       _time 211A  
                                                       _nout 0100  
                                                       pad@i 0097  
                                                       pad@p 0094  
                                                       fsr1h 000FE2  
                                                       fsr2h 000FDA  
                                                       indf2 000FDF  
                                                       fsr1l 000FE1  
                                                       pad@w 0099  
                                                       fsr2l 000FD9  
                                                       btemp 007F  
                                                i2_atoi$1503 0010  
                                                i2_atoi$1504 0014  
                                                i2_atoi$1505 0012  
                                     __size_of_WriteDataXLCD 0042  
                                                       prodh 000FF4  
                                                       prodl 000FF3  
                                                       start 00A0  
                                            __end_ofi2_fputc 1E7C  
                                            __end_ofi2_fputs 2704  
                                            __end_ofi2_putch 2A8E  
                                                i2_dtoa$1031 002E  
                                               ___param_bank 000000  
                                                _writeEEPROM 2910  
                                                      ??_abs 0094  
                                                      ??_pad 0096  
                                               _WriteCmdXLCD 2566  
                                           ?i2_DelayFor18TCY 0001  
                                           ??_writeFrequency 0084  
                                                 i2_vfprintf 22C2  
                                              __CFG_OSCS$OFF 000000  
                                                      ?_beep 0086  
                                            __end_of___aodiv 1608  
                                         writeEEPROM@address 0080  
                                                      ?_atoi 0087  
                                              ?_SetDDRamAddr 0001  
                                                      ?_main 0001  
                                                      ?_dtoa 009B  
                                            __end_of___aomod 189E  
                                                      _EEADR 000FA9  
                                                      ?_time 0001  
                                                      _T0CON 000FD5  
                                                      _T1CON 000FCD  
                                            __end_of___lwdiv 2382  
                                            __end_of___lwmod 24D2  
                                                      i2l211 006E  
                                                      i2l240 2182  
                                                      i2l615 0B4C  
                                                      i2l580 0E46  
                                                      i2l567 1EB2  
                                                      i2l578 0E3C  
                                               vfpfcnvrt@fmt 00C1  
                                                      _TMR0H 000FD7  
                                                      _TMR1H 000FCF  
                                                      _TMR0L 000FD6  
                                                      _TMR1L 000FCE  
                                                      _PORTB 000F81  
                                                      _PORTD 000F83  
                                                      _TRISA 000F92  
                                                      _TRISB 000F93  
                                                      _TRISC 000F94  
                                                      _TRISD 000F95  
                                                      _TRISE 000F96  
                                                      i2_abs 27C2  
                                            __end_of_codFreq 2A18  
                                                      i2_pad 1E7C  
                                              __CFG_WRT0$OFF 000000  
                                            __end_of_getData 21F2  
                                              __CFG_WRT1$OFF 000000  
                                              __CFG_WRT2$OFF 000000  
                                              __CFG_WRT3$OFF 000000  
                                             __CFG_EBTR0$OFF 000000  
                                             __CFG_EBTR1$OFF 000000  
                                             __CFG_EBTR2$OFF 000000  
                                             __CFG_EBTR3$OFF 000000  
                                              __CFG_WRTB$OFF 000000  
                                              __CFG_WRTC$OFF 000000  
                                              __CFG_WRTD$OFF 000000  
                                            __end_of_initLCD 251C  
                                             __CFG_EBTRB$OFF 000000  
                                                 i2isdigit@c 0001  
                                                      _flags 00F2  
                                       writeFrequency@buffer 0087  
                                                      _level 00F9  
                                                      _fputc 1D22  
                                                      _inter 0008  
                                                      _fputs 25AE  
                                            __end_of_isdigit 2838  
                                                      _hours 00FC  
                                                      atoi@n 0094  
                                                      pad@fp 0090  
                                                      atoi@s 0087  
                                            __end_of_setData 20A8  
                                                      _width 00EE  
                                                      _putch 2A82  
                                                      main@i 00ED  
                                                      dtoa@d 009D  
                                                      dtoa@i 00BD  
                                                      dtoa@n 00B5  
                                                      dtoa@p 00AF  
                                                      dtoa@s 00B3  
                                                      dtoa@w 00B1  
                                            __end_of_isspace 263A  
                                                ?i2_BusyXLCD 0001  
                                                      tablat 000FF5  
                                           __end_ofi2___wmul 29C0  
                                                      ttemp5 0080  
                                                      ttemp6 0083  
                                                      ttemp7 0087  
                                                      status 000FD8  
                                                 i2isspace@c 0001  
                                                      wtemp8 0080  
                                            __end_of_sprintf 2430  
                                            __end_of_vumeter 1FB8  
                                         __size_ofi2___aodiv 015C  
                                         __size_ofi2___aomod 0138  
                                           __end_ofi2_strlen 2910  
                                            __initialization 21F2  
                                          __end_of_FINAL_DAY 0602  
                                               __end_of_beep 23DA  
                                               __end_of_atoi 1344  
                                               __end_of_main 1BAE  
                                               __end_of_dtoa 0DBE  
                                               __end_of_time 2188  
                                           __end_of_BusyXLCD 29FC  
                                           ??i2_SetDDRamAddr 0001  
                                      __size_of_DelayPORXLCD 001C  
                                         __size_ofi2_isdigit 0038  
                                         __size_ofi2_setData 0072  
                                                i2_vfpfcnvrt 08D2  
                                             ??_SetDDRamAddr 0080  
                                         __size_ofi2_isspace 0044  
                                              i2vfpfcnvrt@ap 0044  
                                              i2vfpfcnvrt@fp 0040  
                                              i2vfpfcnvrt@ll 004A  
                                                 _SendCMDLCD 29C0  
                                                     ??_beep 0088  
                                           __end_of_OpenXLCD 1AD4  
                                                     ??_atoi 0089  
                                                     ??_main 00EB  
                                                     ??_dtoa 00A5  
                                                     ??_time 0006  
                                              __activetblptr 000002  
                                                 i2sprintf@f 0068  
                                              _WriteDataXLCD 2704  
                                                 i2sprintf@s 005C  
                                         __size_ofi2_sprintf 0052  
                                                     ?i2_abs 0013  
                                                     ?i2_pad 0011  
                                         _hundredMiliSeconds 00F7  
                                                     _ADCON0 000FC2  
                                                     _ADCON1 000FC1  
                                                     ?_fputc 0080  
                                                     ?_inter 0001  
                                                     ?_fputs 0089  
                                                     _ADRESH 000FC4  
                                                     _EEDATA 000FA8  
                                                     _EECON2 000FA7  
                                                     ?_putch 0001  
                                                     i2l1116 2374  
                                                     i2l1300 27EE  
                                                     i2l1126 24C4  
                                                     i2l1303 27F8  
                                                     i2l3010 1E98  
                                                     i2l1331 149A  
                                                     i2l3020 1ED8  
                                                     i2l1334 14A4  
                                                     i2l3110 19B0  
                                                     i2l3102 1970  
                                                     i2l3014 1EA8  
                                                     i2l1360 1E76  
                                                     i2l3024 1F08  
                                                     i2l3016 1EBE  
                                                     i2l3130 2672  
                                                     i2l3042 1636  
                                                     i2l3106 1988  
                                                     i2l3054 1688  
                                                     i2l3070 1716  
                                                     i2l4110 0058  
                                                     i2l4032 2164  
                                                     i2l3320 13BC  
                                                     i2l3304 1358  
                                                     i2l3056 169E  
                                                     i2l3048 1660  
                                                     i2l4112 005C  
                                                     i2l3330 1432  
                                                     i2l3322 13C6  
                                                     i2l3314 13AA  
                                                     i2l3306 135E  
                                                     i2l3074 173E  
                                                     i2l3066 16FE  
                                                     i2l3090 18F2  
                                                     i2l3324 13CE  
                                                     i2l3260 0E64  
                                                     i2l4038 217A  
                                                     i2l3326 13FA  
                                                     i2l3094 190E  
                                                     i2l3086 18CC  
                                                     i2l3246 0E1A  
                                                     i2l3502 0AEE  
                                                     i2l3096 1924  
                                                     i2l3264 0E76  
                                                     i2l3512 0B14  
                                                     i2l3274 0F70  
                                                     i2l3506 0AF8  
                                                     i2l3294 0FE0  
                                                     i2l3480 09A6  
                                                     i2l2834 1DEC  
                                                     i2l3298 0FFC  
                                                     i2l3812 24B8  
                                                     i2l3804 2492  
                                                     i2l3476 0976  
                                                     i2l3806 249C  
                                                     i2l2862 26CE  
                                                     i2l2870 28EA  
                                                     i2l3478 0996  
                                                     i2l3824 20C6  
                                                     i2l2872 28F0  
                                                     i2l3496 0AAE  
                                                     i2l3672 22D8  
                                                     i2l3770 2874  
                                                     i2l2866 26E6  
                                                     i2l3674 2300  
                                                     i2l3784 233A  
                                                     i2l3776 2892  
                                                     _INTCON 000FF2  
                                                     i2l3786 2344  
                                                     i2l3796 2368  
                                                  ??i2_fputc 0005  
                                                  ??i2_fputs 000E  
                                                     _OSCCON 000FD3  
                                                  ??i2_putch 0001  
                                             __CFG_WDTPS$128 000000  
                                             i2___aodiv@sign 0012  
                                                     i2abs@a 0013  
                                                     i2_atoi 1344  
                                                     i2_dtoa 0DBE  
                                                     i2pad@i 0018  
                                                     i2pad@p 0015  
                                                     i2pad@w 001A  
                                               _DelayPORXLCD 2A18  
                                               vfprintf@cfmt 00D9  
                                      __end_ofi2_writeEEPROM 2996  
                                             i2___aomod@sign 0012  
                                                  ??___aodiv 0090  
                                              i2vfprintf@fmt 0056  
                                                  ??___aomod 0090  
                                                     ___wmul 293E  
                                                  ??___lwdiv 0005  
                                                     beep@ms 0086  
                                                  ??___lwmod 0005  
                                                     _config 2784  
                                                ?i2_vfprintf 0054  
                                                  ??_codFreq 0082  
                                                     clear_0 2238  
                                                     clear_1 2244  
                                                  ??_getData 0081  
                                                     _months 00FE  
                                        __size_ofi2_BusyXLCD 0018  
                                                     pad@buf 0092  
                                             ?_WriteDataXLCD 0001  
                                                     dtoa@fp 009B  
                                                     _strlen 28A8  
                                                  ??_initLCD 0083  
                                                     fputc@c 0080  
                                                     fputs@c 008D  
                                                     fputs@i 008E  
                                               __pdataCOMRAM 007A  
                                          __end_ofi2___aodiv 1764  
                                                     fputs@s 0089  
                                                  ??_isdigit 0082  
                                          __end_ofi2___aomod 19D6  
                                                  ??_setData 0082  
                                               __mediumconst 0000  
                                                  ??_isspace 0082  
                                                     tblptrh 000FF7  
                                                     tblptrl 000FF6  
                                                     tblptru 000FF8  
                                                     putch@c 0001  
                                           __end_of_putsXLCD 28A8  
                                         i2___aomod@dividend 0001  
                                           __end_of_vfprintf 22C2  
                                                  ??_sprintf 00DF  
                                                  ??_vumeter 0080  
                                          __end_ofi2_isdigit 2870  
                                          __end_ofi2_setData 211A  
                                                 __accesstop 0080  
                                    __end_of__initialization 224C  
                                          __end_ofi2_isspace 267E  
                                              ___rparam_used 000001  
                                            writeEEPROM@data 0081  
                                          __end_ofi2_sprintf 2482  
                                              __end_ofi2_abs 27FE  
                                              __end_ofi2_pad 1F26  
                                             __pcstackCOMRAM 0001  
                                               __pidataBANK0 2A8E  
                                              __end_of_fputc 1DD0  
                                              __end_of_inter 00A0  
                                              __end_of_fputs 25F4  
                                              __end_of_putch 2A88  
                                                ?_SendCMDLCD 0001  
                                                  ?i2___wmul 0001  
                                                    ??i2_abs 0015  
                                                    ??i2_pad 0017  
                                                setData@full 0084  
                                             i2vfpfcnvrt@fmt 0042  
                                                  ?i2_strlen 0001  
                                                    ??_fputc 0084  
                                                    ??_inter 0070  
                                                    ??_fputs 008D  
                                     __size_of_DelayFor18TCY 0010  
                                                    ??_putch 0080  
                                              ?_setFrequency 0001  
                                                 __pbssBANK0 00EE  
                                                 __pbssBANK1 0100  
                                                  ?_BusyXLCD 0001  
                                                i2sprintf@ap 0066  
                                        __size_ofi2_vfprintf 0060  
                                            WriteCmdXLCD@cmd 0080  
                                       __end_of_SetDDRamAddr 2566  
                                                    ?i2_atoi 0008  
                                                    ?i2_dtoa 001C  
                                                  ?_OpenXLCD 0001  
                                               ?_writeEEPROM 0080  
                                          WriteDataXLCD@data 0001  
                                           __CFG_CCP2MUX$OFF 000000  
                                                    ?___wmul 0080  
                                                    ?_config 0001  
                                            ??_WriteDataXLCD 0001  
                                                    _BLOCKED 0604  
                                             updateLCD@decim 006F  
                                                    ?_strlen 0080  
                                             updateLCD@integ 006E  
                                                 ??i2___wmul 0005  
                                         __size_of_updateLCD 007A  
                                         __size_of_vfpfcnvrt 0286  
                                                 ??i2_strlen 0003  
                                             ??_setFrequency 00E9  
                                               ??i2_BusyXLCD 0001  
                                                 ??_BusyXLCD 0080  
                                                    i2_fputc 1DD0  
                                                    i2_fputs 26C2  
                                                    i2atoi@n 0015  
                                                    i2pad@fp 0011  
                                                    i2atoi@s 0008  
                                                    i2_putch 2A88  
                                                    i2dtoa@d 001E  
                                                    i2dtoa@i 003E  
                                                    i2dtoa@n 0036  
                                                    i2dtoa@p 0030  
                                                    i2dtoa@s 0034  
                                                    i2dtoa@w 0032  
                                                 _readEEPROM 2A4C  
                                        __size_of_SendCMDLCD 001E  
                                                 ??_OpenXLCD 0081  
                                            __size_ofi2_atoi 0166  
                                            __size_ofi2_dtoa 026C  
                                                    __Hparam 0000  
                                                    __Lparam 0000  
                                                    ___aodiv 14AA  
                                                    ___aomod 1764  
                                              _DelayFor18TCY 2A62  
                                            __size_of___wmul 002C  
                                                  ?_putsXLCD 0002  
                                                    ___lwdiv 2322  
                                                    ___lwmod 2482  
                                                  ?_vfprintf 00D3  
                                             i2vfprintf@cfmt 005A  
                                               __psmallconst 0600  
                                            __size_of_config 003E  
                                                  _FINAL_DAY 0601  
                                               ?i2_vfpfcnvrt 0040  
                                                    _codFreq 29FC  
                                                    __pcinit 21F2  
                                                    _getData 2188  
                                                    __ramtop 0600  
                                                    __ptext0 1AD4  
                                                    __ptext1 1F26  
                                                    __ptext2 102A  
                                                    __ptext3 1BAE  
                                                    __ptext4 29FC  
                                                    __ptext5 23DA  
                                                    __ptext6 225A  
                                                    __ptext7 064C  
                                                    __ptext8 0B52  
                                                    __ptext9 1C74  
                                                    _cntTmr1 007E  
                                         __end_ofi2_BusyXLCD 2A4C  
                                            __size_of_strlen 0036  
                                                    _initLCD 24D2  
                                                  _T1CONbits 000FCD  
                                                    _lineOne 0133  
                                               __size_of_abs 003E  
                                                    _lineTwo 0122  
                                               __size_of_pad 00AE  
                                                    _isdigit 27FE  
                                                    _prTmr0H 007A  
                                                    _prTmr1H 007C  
                                                    _prTmr0L 007B  
                                                    _prTmr1L 007D  
                                                    _setData 2032  
                                   __size_ofi2_DelayFor18TCY 0010  
                                                    _minutes 00FB  
                                                    _seconds 00F8  
                                                    _isspace 25F4  
                                                    atoi@neg 008D  
                                                    _sprintf 23DA  
                                       end_of_initialization 224C  
                                                    _vumeter 1F26  
                                         __end_of_UN_BLOCKED 0604  
                                                    fputc@fp 0082  
                                              __Lmediumconst 0000  
                                                    fputs@fp 008B  
                                        i2___wmul@multiplier 0001  
                                          __end_of_updateLCD 2032  
                                          __end_of_vfpfcnvrt 08D2  
                                             ?_DelayFor18TCY 0001  
                                                    postdec1 000FE5  
                                                    postdec2 000FDD  
                                                    postinc0 000FEE  
                                                    postinc1 000FE6  
                                                    postinc2 000FDE  
                                                 ??_putsXLCD 0004  
                                               ??i2_vfprintf 005A  
                                                 ??_vfprintf 00D9  
                                                    strlen@a 0082  
                                                    strlen@s 0080  
                                       i2writeEEPROM@address 0001  
                                                  _PORTAbits 000F80  
                                                  _PORTCbits 000F82  
                                                  _PORTDbits 000F83  
                                                  _PORTEbits 000F84  
                                          i2___aodiv@divisor 0009  
                                          i2___aodiv@counter 0011  
                                                  _TRISDbits 000F95  
                                    __size_of_writeFrequency 00C6  
                                      __size_of_SetDDRamAddr 004A  
                                                  i2___aodiv 1608  
                                                  i2___aomod 189E  
                                          readEEPROM@address 0080  
                                         __end_ofi2_vfprintf 2322  
                                                ?_readEEPROM 0001  
                                                  i2_isdigit 2838  
                                                  i2_setData 20A8  
                                             __end_ofi2_atoi 14AA  
                                             __end_ofi2_dtoa 102A  
                                                  i2_isspace 263A  
                                                  i2atoi@neg 000E  
                                                  i2_sprintf 2430  
                                        __end_of_FINAL_MONTH 0603  
                                       __size_of_writeEEPROM 002E  
                                       __end_of_setFrequency 11DA  
                                                vfpfcnvrt@ap 00C3  
                                                vfpfcnvrt@fp 00BF  
                                                vfpfcnvrt@ll 00C9  
                                             __end_of___wmul 296A  
                                              __pidataCOMRAM 2A93  
                                               ??_SendCMDLCD 0081  
                                             __end_of_config 27C2  
                                                  i2fputc@fp 0003  
                                                  i2fputs@fp 000C  
                                               _SetDDRamAddr 251C  
                                           i2___wmul@product 0005  
                                            vumeter@vumLevel 0083  
                                         SetDDRamAddr@DDaddr 0080  
                                             __end_of_strlen 28DE  
                                        start_initialization 21F2  
                                          __size_ofi2___wmul 002A  
                                    __size_ofi2_SetDDRamAddr 0044  
                                                __end_of_abs 2784  
                                                __end_of_pad 1D22  
                                                 ?i2___aodiv 0001  
                                                 ?i2___aomod 0001  
                                     __size_ofi2_writeEEPROM 002C  
                                          __size_ofi2_strlen 0032  
                                                  i2strlen@a 0003  
                                                  i2strlen@s 0001  
                                          ??i2_DelayFor18TCY 0001  
                                          __size_of_BusyXLCD 001E  
                                                   ??i2_atoi 000A  
                                               setData@data0 0082  
                                               setData@data1 0083  
                                                   ??i2_dtoa 0026  
                                         __end_of_SendCMDLCD 29DE  
                                                 ?i2_isdigit 0001  
                                            ??_DelayFor18TCY 0080  
                                                 ?i2_setData 0001  
                                                 ?i2_isspace 0001  
                                                vfprintf@fmt 00D5  
                                          __size_of_OpenXLCD 00FE  
                                               i2vfprintf@ap 0058  
                                               i2vfprintf@fp 0054  
                                                   ??___wmul 0084  
                                                 ?i2_sprintf 005C  
                                              ?_WriteCmdXLCD 0001  
                                                   ??_config 0085  
                                                __pdataBANK0 00FA  
                                          i2___aomod@divisor 0009  
                                                   ??_strlen 0082  
                                          i2___aomod@counter 0011  
                                       __size_ofi2_vfpfcnvrt 0280  
                                        __size_of_readEEPROM 0016  
                                               i2sprintf@fmt 005E  
                                                __pbssCOMRAM 007E  
                                              __pcstackBANK0 0080  
                                           ___aodiv@dividend 0080  
                                                   ?i2_fputc 0001  
                                                   ?i2_fputs 000A  
                                                   ?i2_putch 0001  
                                                  _atoi$1503 008F  
                                                  _atoi$1504 0093  
                                                  _atoi$1505 0091  
                                                _FINAL_MONTH 0602  
                                             putsXLCD@buffer 0002  
                                           ___lwdiv@dividend 0001  
                                                  _dtoa$1031 00AD  
                                                  __pintcode 0008  
                                             ??_WriteCmdXLCD 0080  
                                                   ?___aodiv 0080  
                                                   ?___aomod 0080  
                                              i2_writeEEPROM 296A  
                                           ___aodiv@quotient 0092  
                                                   ?___lwdiv 0001  
                                                   ?___lwmod 0001  
                                                   ?_codFreq 0080  
                                                   ?_getData 0001  
                                              SendCMDLCD@CMD 0081  
                                          __size_of_putsXLCD 0038  
                                      __end_of_WriteDataXLCD 2746  
                                          __size_of_vfprintf 0068  
                                                   ?_initLCD 0001  
                                                __smallconst 0600  
                                                   ?_isdigit 0080  
                                             __size_ofi2_abs 003C  
                                                   ?_setData 0001  
                                             __size_ofi2_pad 00AA  
                                                   ?_isspace 0080  
                                             _writeFrequency 1BAE  
                                                  _frequency 00F4  
                                           ___lwdiv@quotient 0005  
                                                ??i2___aodiv 0011  
                                                ??i2___aomod 0011  
                                                   ?_sprintf 00DB  
                                             __size_of_fputc 00AE  
                                             __size_of_inter 0098  
                                             __size_of_fputs 0046  
                                             __size_of_putch 0006  
                                                   ?_vumeter 0001  
                                             ___wmul@product 0084  
                                              ?_DelayPORXLCD 0001  
                                                ??i2_isdigit 0003  
                                                ??i2_setData 0003  
                                           i2_vfpfcnvrt$1046 0052  
                                      __size_of_setFrequency 01B0  
                                                   i2u302_40 09E2  
                                                   i2u230_41 1668  
                                                ??i2_isspace 0003  
                                                   i2u303_40 09E6  
                                                   i2u232_40 16A4  
                                                   i2u304_40 09F4  
                                                   i2u241_40 27D2  
                                                   i2u242_40 2862  
                                                   i2u306_40 0A2E  
                                                   i2u243_40 2866  
                                                   i2u332_40 234A  
                                                   i2u245_40 266E  
                                                   i2u238_40 192A  
                                                   i2u335_40 24A2  
                                                   i2u272_40 0E30  
                                                   i2u281_40 0FC8  
                                                   _PIR1bits 000F9E  
                                            OpenXLCD@lcdtype 0082  
                                                   i2u274_40 0E5C  
                                                   i2u195_40 1DE2  
                                                   i2u275_40 0F80  
                                                   _PIR2bits 000FA1  
                                                   i2u284_40 13A6  
                                                   i2u268_40 0DE8  
                                                   i2u197_40 1E2E  
                                                   i2u277_40 0FA2  
                                                   i2u269_40 0DEC  
                                                   i2u277_41 0FA0  
                                                   i2u286_40 1466  
                                                   i2u278_40 0FB2  
                                                   i2u287_40 146A  
                                                   i2u279_40 0FB8  
                                                   i2u398_47 2A3C  
                                                   i2u399_47 2A76  
                                             ?i2_writeEEPROM 0001  
                                                ??i2_sprintf 0064  
                                                  _updateLCD 1FB8  
                                             _functionalStat 00F6  
                                                  _vfpfcnvrt 064C  
                                                 _ADCON0bits 000FC2  
                                          ___wmul@multiplier 0080  
                                                   i2___wmul 2996  
                                     __end_of_writeFrequency 1C74  
                                             i2_SetDDRamAddr 267E  
                                               _isspace$1521 0086  
                                                   i2pad@buf 0013  
                                                   i2dtoa@fp 001C  
                                                   i2_strlen 28DE  
                                                  copy_data0 2206  
                                                  copy_data1 2226  
                                                   i2fputc@c 0001  
                                                   i2fputs@c 000E  
                                                   i2fputs@i 000F  
                                                   i2fputs@s 000A  
                                               _setFrequency 102A  
                                                   _BusyXLCD 29DE  
                                               ??_readEEPROM 0080  
                                           __size_ofi2_fputc 00AC  
                                           __size_ofi2_fputs 0042  
                                             ??_DelayPORXLCD 0080  
                                           __size_ofi2_putch 0006  
                                                 _EECON1bits 000FA6  
                                                   _OpenXLCD 19D6  
                                                   __Hrparam 0000  
                                             i2setData@data0 0003  
                                             i2setData@data1 0004  
                                                 vfprintf@ap 00D7  
                                                   __Lrparam 0000  
                                                 vfprintf@fp 00D3  
                                           __size_of___aodiv 015E  
                                           __size_of___aomod 013A  
                                      i2___wmul@multiplicand 0003  
                                                 ?_updateLCD 0001  
                                                 ?_vfpfcnvrt 00BF  
                                           __size_of___lwdiv 0060  
                                           __size_of___lwmod 0050  
                                            ___aodiv@divisor 0088  
                                           __size_of_codFreq 001C  
                                            ___aodiv@counter 0090  
                                           __size_of_getData 006A  
                                     __end_ofi2_SetDDRamAddr 26C2  
                                            i2_DelayFor18TCY 2A72  
                                            ?_writeFrequency 0082  
                                                 sprintf@fmt 00DD  
                                           __size_of_initLCD 004A  
                                         __end_of_readEEPROM 2A62  
                                           __size_of_isdigit 003A  
                                            ___lwdiv@divisor 0003  
                                           __size_of_setData 0076  
                                           __size_of_isspace 0046  
                                            ___lwdiv@counter 0007  
                                                   __ptext10 28A8  
                                                   __ptext11 25AE  
                                                   __ptext20 2032  
                                                   __ptext12 1D22  
                                                   __ptext21 2910  
                                                   __ptext13 2A82  
                                                   __ptext30 2566  
                                                   __ptext22 2382  
                                                   __ptext14 2746  
                                                   __ptext31 251C  
                                                   __ptext23 293E  
                                                   __ptext15 1764  
                                                   __ptext40 0DBE  
                                                   __ptext32 2A62  
                                                   __ptext24 2188  
                                                   __ptext16 14AA  
                                                   __ptext41 1E7C  
                                                   __ptext33 2A18  
                                                   __ptext25 2A4C  
                                                   __ptext17 11DA  
                                                   __ptext50 263A  
                                                   __ptext42 28DE  
                                                   __ptext34 29DE  
                                                   __ptext26 2784  
                                                   __ptext18 25F4  
                                                   __ptext51 2838  
                                                   __ptext43 26C2  
                                                   __ptext27 24D2  
                                                   __ptext19 27FE  
                                                   __ptext60 211A  
                                                   __ptext52 2996  
                                                   __ptext44 1DD0  
                                                   __ptext36 1FB8  
                                                   __ptext28 29C0  
                                                   __ptext61 20A8  
                                                   __ptext53 267E  
                                                   __ptext45 2A88  
                                                   __ptext37 2430  
                                                   __ptext29 19D6  
                                                   __ptext62 296A  
                                                   __ptext54 2870  
                                                   __ptext46 27C2  
                                                   __ptext38 22C2  
                                                   __ptext55 2A34  
                                                   __ptext47 189E  
                                                   __ptext39 08D2  
                                                   __ptext56 2704  
                                                   __ptext48 1608  
                                                   __ptext57 2A72  
                                                   __ptext49 1344  
                                                   __ptext58 2482  
                                                   __ptext59 2322  
                                       __end_of_WriteCmdXLCD 25AE  
                                           __size_of_sprintf 0056  
                                           __size_of_vumeter 0092  
                                              __size_of_beep 0058  
                                                   codFreq@f 0080  
                                              __size_of_atoi 016A  
                                              __size_of_main 00DA  
                                              __size_of_dtoa 026C  
                                              __size_of_time 006E  
                                            ??i2_writeEEPROM 0002  
                                              ??_writeEEPROM 0081  
                                                   int$flags 007F  
                                                   _putsXLCD 2870  
                                                   _vfprintf 225A  
                                            writeFrequency@f 0082  
                                            writeFrequency@i 008B  
                                            writeFrequency@r 0089  
                                           ___aomod@dividend 0080  
                                                getData@aux0 0083  
                                                getData@aux1 0084  
                                            ?i2_SetDDRamAddr 0001  
                                             _vfpfcnvrt$1046 00D1  
                                                 _INTCONbits 000FF2  
                                              i2setData@full 0005  
                                                   isdigit@c 0080  
                                                   intlevel2 2A98  
                                                  sprintf@ap 00E1  
                                           ___lwmod@dividend 0001  
                                                   isspace@c 0080  
                                          i2writeEEPROM@data 0002  
                                      __end_of_DelayFor18TCY 2A72  
                                    __end_ofi2_DelayFor18TCY 2A82  
                                            ___aomod@divisor 0088  
                                              ??i2_vfpfcnvrt 0046  
                                                ??_updateLCD 006E  
                                                ??_vfpfcnvrt 00C5  
                                            ___aomod@counter 0090  
                                        __end_of_writeEEPROM 293E  
                                                   sprintf@f 00E3  
                                                   sprintf@s 00DB  
                                       __end_of_DelayPORXLCD 2A34  
                                       i2SetDDRamAddr@DDaddr 0001  
                                            ___lwmod@divisor 0003  
                                            ___lwmod@counter 0005  
                                             i2_isspace$1521 0007  
                                               ___aodiv@sign 0091  
                                                 i2_BusyXLCD 2A34  
                                         i2___aodiv@dividend 0001  
                                               ___aomod@sign 0091  
