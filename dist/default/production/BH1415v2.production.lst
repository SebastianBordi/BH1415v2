

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Mon Aug 12 21:02:11 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	18F452
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	eeprom_data,global,class=EEDATA,delta=1,noexec
     6                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     8                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     9                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
    10                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    11                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    12                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    13                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    15                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    16                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    17                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    18                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    19                           	psect	text0,global,reloc=2,class=CODE,delta=1
    20                           	psect	text1,global,reloc=2,class=CODE,delta=1
    21                           	psect	text2,global,reloc=2,class=CODE,delta=1
    22                           	psect	text3,global,reloc=2,class=CODE,delta=1
    23                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    24                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    25                           	psect	text6,global,reloc=2,class=CODE,delta=1
    26                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=2
    27                           	psect	text8,global,reloc=2,class=CODE,delta=1
    28                           	psect	text9,global,reloc=2,class=CODE,delta=1
    29                           	psect	text10,global,reloc=2,class=CODE,delta=1
    30                           	psect	text11,global,reloc=2,class=CODE,delta=1
    31                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    32                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=2
    33                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=2
    34                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=2
    35                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=2
    36                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=1
    37                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=1
    38                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    39                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=2
    40                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=2
    41                           	psect	text22,global,reloc=2,class=CODE,delta=1
    42                           	psect	text23,global,reloc=2,class=CODE,delta=1
    43                           	psect	text24,global,reloc=2,class=CODE,delta=1
    44                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=1
    45                           	psect	text26,global,reloc=2,class=CODE,delta=1
    46                           	psect	text27,global,reloc=2,class=CODE,delta=1
    47                           	psect	text28,global,reloc=2,class=CODE,delta=1
    48                           	psect	text29,global,reloc=2,class=CODE,delta=1
    49                           	psect	text30,global,reloc=2,class=CODE,delta=1
    50                           	psect	text31,global,reloc=2,class=CODE,delta=1
    51                           	psect	text32,global,reloc=2,class=CODE,delta=1
    52                           	psect	text33,global,reloc=2,class=CODE,delta=1
    53                           	psect	text34,global,reloc=2,class=CODE,delta=1
    54                           	psect	text35,global,reloc=2,class=CODE,delta=1
    55                           	psect	text36,global,reloc=2,class=CODE,delta=1
    56                           	psect	text37,global,reloc=2,class=CODE,delta=1
    57                           	psect	text38,global,reloc=2,class=CODE,delta=1
    58                           	psect	text39,global,reloc=2,class=CODE,delta=1
    59                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    60                           	psect	text41,global,reloc=2,class=CODE,delta=1
    61                           	psect	text42,global,reloc=2,class=CODE,delta=1
    62                           	psect	text43,global,reloc=2,class=CODE,delta=1
    63                           	psect	text44,global,reloc=2,class=CODE,delta=1
    64                           	psect	text45,global,reloc=2,class=CODE,delta=1
    65                           	psect	text46,global,reloc=2,class=CODE,delta=1
    66                           	psect	text47,global,reloc=2,class=CODE,delta=1
    67                           	psect	text48,global,reloc=2,class=CODE,delta=1
    68                           	psect	text49,global,reloc=2,class=CODE,delta=1
    69                           	psect	text50,global,reloc=2,class=CODE,delta=1
    70                           	psect	text51,global,reloc=2,class=CODE,delta=1
    71                           	psect	text52,global,reloc=2,class=CODE,delta=1
    72                           	psect	text53,global,reloc=2,class=CODE,delta=1
    73                           	psect	text54,global,reloc=2,class=CODE,delta=1
    74                           	psect	text55,global,reloc=2,class=CODE,delta=1
    75                           	psect	text56,global,reloc=2,class=CODE,delta=1
    76                           	psect	text57,global,reloc=2,class=CODE,delta=1
    77                           	psect	text58,global,reloc=2,class=CODE,delta=1
    78                           	psect	text59,global,reloc=2,class=CODE,delta=1
    79                           	psect	text60,global,reloc=2,class=CODE,delta=1
    80                           	psect	text61,global,reloc=2,class=CODE,delta=1
    81                           	psect	text62,global,reloc=2,class=CODE,delta=1
    82                           	psect	text63,global,reloc=2,class=CODE,delta=1
    83                           	psect	text64,global,reloc=2,class=CODE,delta=1
    84                           	psect	text65,global,reloc=2,class=CODE,delta=1
    85                           	psect	text66,global,reloc=2,class=CODE,delta=1
    86                           	psect	text67,global,reloc=2,class=CODE,delta=1
    87                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    88                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    89                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    90  0000                     
    91                           ; Version 2.05
    92                           ; Generated 20/12/2018 GMT
    93                           ; 
    94                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    95                           ; All rights reserved.
    96                           ; 
    97                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    98                           ; 
    99                           ; Redistribution and use in source and binary forms, with or without modification, are
   100                           ; permitted provided that the following conditions are met:
   101                           ; 
   102                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   103                           ;        conditions and the following disclaimer.
   104                           ; 
   105                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   106                           ;        of conditions and the following disclaimer in the documentation and/or other
   107                           ;        materials provided with the distribution.
   108                           ; 
   109                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   110                           ;        software without specific prior written permission.
   111                           ; 
   112                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   113                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   114                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   115                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   116                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   117                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   118                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   119                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   120                           ; 
   121                           ; 
   122                           ; Code-generator required, PIC18F452 Definitions
   123                           ; 
   124                           ; SFR Addresses
   125  0000                     
   126                           	psect	eeprom_data
   127  F00000  7E 03 00 00 00 00 01 00 	db	126,3,0,0,0,0,1,0	;# 
   128  F00008  7E 03 00 00 00 00 01 00 	db	126,3,0,0,0,0,1,0	;# 
   129  F00010  7E 03 00 00 00 00 01 00 	db	126,3,0,0,0,0,1,0	;# 
   130  F00018  7E 03 00 00 00 00 01 00 	db	126,3,0,0,0,0,1,0	;# 
   131  F00020  7E 03 00 00 00 00 01 00 	db	126,3,0,0,0,0,1,0	;# 
   132                           
   133                           	psect	idataCOMRAM
   134  002D23                     __pidataCOMRAM:
   135                           	opt callstack 0
   136                           
   137                           ;initializer for _prTmr1H
   138  002D23  6D                 	db	109
   139                           
   140                           ;initializer for _prTmr1L
   141  002D24  84                 	db	132
   142                           
   143                           	psect	idataBANK0
   144  002D1E                     __pidataBANK0:
   145                           	opt callstack 0
   146                           
   147                           ;initializer for _minutes
   148  002D1E  0F                 	db	15
   149                           
   150                           ;initializer for _hours
   151  002D1F  16                 	db	22
   152                           
   153                           ;initializer for _days
   154  002D20  13                 	db	19
   155                           
   156                           ;initializer for _months
   157  002D21  03                 	db	3
   158                           
   159                           ;initializer for _prTmr0L
   160  002D22  68                 	db	104
   161                           
   162                           	psect	idataBANK1
   163  002D25                     __pidataBANK1:
   164                           	opt callstack 0
   165                           
   166                           ;initializer for _stereoEnable
   167  002D25  01                 	db	1
   168                           
   169                           ;initializer for _prTmr0H
   170  002D26  C5                 	db	197
   171                           
   172                           	psect	smallconst
   173  000600                     __psmallconst:
   174                           	opt callstack 0
   175  000600  00                 	db	0
   176  000601  0D                 	db	13
   177  000602                     __end_of_FINAL_DAY:
   178                           	opt callstack 0
   179  000602  06                 	db	6
   180  000603                     __end_of_FINAL_MONTH:
   181                           	opt callstack 0
   182  000603  01                 	db	1
   183  000604                     __end_of_UN_BLOCKED:
   184                           	opt callstack 0
   185  000604  00                 	db	0
   186  000605                     __end_of_BLOCKED:
   187                           	opt callstack 0
   188  0000                     _PORTEbits	set	3972
   189  0000                     _TRISDbits	set	3989
   190  0000                     _PORTDbits	set	3971
   191  0000                     _TMR1L	set	4046
   192  0000                     _TMR1H	set	4047
   193  0000                     _PIR1bits	set	3998
   194  0000                     _T1CONbits	set	4045
   195  0000                     _ADCON1	set	4033
   196  0000                     _ADCON0	set	4034
   197  0000                     _T0CON	set	4053
   198  0000                     _T1CON	set	4045
   199  0000                     _PORTE	set	3972
   200  0000                     _PORTD	set	3971
   201  0000                     _PORTC	set	3970
   202  0000                     _PORTB	set	3969
   203  0000                     _PORTA	set	3968
   204  0000                     _TRISE	set	3990
   205  0000                     _TRISD	set	3989
   206  0000                     _TRISC	set	3988
   207  0000                     _TRISB	set	3987
   208  0000                     _TRISA	set	3986
   209  0000                     _PIE1	set	3997
   210  0000                     _INTCON	set	4082
   211  0000                     _OSCCON	set	4051
   212  0000                     _PORTCbits	set	3970
   213  0000                     _PORTBbits	set	3969
   214  0000                     _PIR2bits	set	4001
   215  0000                     _EECON2	set	4007
   216  0000                     _INTCONbits	set	4082
   217  0000                     _EEDATA	set	4008
   218  0000                     _EECON1bits	set	4006
   219  0000                     _EEADR	set	4009
   220  000605                     STR_5:
   221  000605  46                 	db	70	;'F'
   222  000606  52                 	db	82	;'R'
   223  000607  45                 	db	69	;'E'
   224  000608  51                 	db	81	;'Q'
   225  000609  2E                 	db	46
   226  00060A  20                 	db	32
   227  00060B  20                 	db	32
   228  00060C  25                 	db	37
   229  00060D  33                 	db	51	;'3'
   230  00060E  64                 	db	100	;'d'
   231  00060F  2E                 	db	46
   232  000610  25                 	db	37
   233  000611  64                 	db	100	;'d'
   234  000612  20                 	db	32
   235  000613  4D                 	db	77	;'M'
   236  000614  48                 	db	72	;'H'
   237  000615  7A                 	db	122	;'z'
   238  000616  00                 	db	0
   239  000617                     STR_1:
   240  000617  4C                 	db	76	;'L'
   241  000618  4F                 	db	79	;'O'
   242  000619  43                 	db	67	;'C'
   243  00061A  4B                 	db	75	;'K'
   244  00061B  49                 	db	73	;'I'
   245  00061C  4E                 	db	78	;'N'
   246  00061D  47                 	db	71	;'G'
   247  00061E  20                 	db	32
   248  00061F  20                 	db	32
   249  000620  20                 	db	32
   250  000621  20                 	db	32
   251  000622  20                 	db	32
   252  000623  20                 	db	32
   253  000624  20                 	db	32
   254  000625  20                 	db	32
   255  000626  20                 	db	32
   256  000627  00                 	db	0
   257  000628                     STR_4:
   258  000628  53                 	db	83	;'S'
   259  000629  45                 	db	69	;'E'
   260  00062A  54                 	db	84	;'T'
   261  00062B  20                 	db	32
   262  00062C  20                 	db	32
   263  00062D  20                 	db	32
   264  00062E  46                 	db	70	;'F'
   265  00062F  52                 	db	82	;'R'
   266  000630  45                 	db	69	;'E'
   267  000631  51                 	db	81	;'Q'
   268  000632  55                 	db	85	;'U'
   269  000633  45                 	db	69	;'E'
   270  000634  4E                 	db	78	;'N'
   271  000635  43                 	db	67	;'C'
   272  000636  59                 	db	89	;'Y'
   273  000637  20                 	db	32
   274  000638  00                 	db	0
   275  000639                     STR_3:
   276  000639  41                 	db	65	;'A'
   277  00063A  4D                 	db	77	;'M'
   278  00063B  50                 	db	80	;'P'
   279  00063C  52                 	db	82	;'R'
   280  00063D  4F                 	db	79	;'O'
   281  00063E  20                 	db	32
   282  00063F  20                 	db	32
   283  000640  20                 	db	32
   284  000641  20                 	db	32
   285  000642  20                 	db	32
   286  000643  20                 	db	32
   287  000644  45                 	db	69	;'E'
   288  000645  58                 	db	88	;'X'
   289  000646  2D                 	db	45
   290  000647  46                 	db	70	;'F'
   291  000648  4D                 	db	77	;'M'
   292  000649  00                 	db	0
   293  00064A                     STR_2:
   294  00064A  20                 	db	32
   295  00064B  20                 	db	32
   296  00064C  20                 	db	32
   297  00064D  20                 	db	32
   298  00064E  20                 	db	32
   299  00064F  20                 	db	32
   300  000650  20                 	db	32
   301  000651  46                 	db	70	;'F'
   302  000652  52                 	db	82	;'R'
   303  000653  45                 	db	69	;'E'
   304  000654  51                 	db	81	;'Q'
   305  000655  55                 	db	85	;'U'
   306  000656  45                 	db	69	;'E'
   307  000657  4E                 	db	78	;'N'
   308  000658  43                 	db	67	;'C'
   309  000659  59                 	db	89	;'Y'
   310  00065A  00                 	db	0
   311                           
   312                           ; #config settings
   313  00065B  00                 	db	0	; dummy byte at the end
   314  0000                     
   315                           	psect	cinit
   316  002076                     __pcinit:
   317                           	opt callstack 0
   318  002076                     start_initialization:
   319                           	opt callstack 0
   320  002076                     __initialization:
   321                           	opt callstack 0
   322                           
   323                           ; Initialize objects allocated to BANK1 (2 bytes)
   324                           ; load TBLPTR registers with __pidataBANK1
   325  002076  0E25               	movlw	low __pidataBANK1
   326  002078  6EF6               	movwf	tblptrl,c
   327  00207A  0E2D               	movlw	high __pidataBANK1
   328  00207C  6EF7               	movwf	tblptrh,c
   329  00207E  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   330  002080  6EF8               	movwf	tblptru,c
   331  002082  0009               	tblrd		*+	;fetch initializer
   332  002084  CFF5 F146          	movff	tablat,__pdataBANK1
   333  002088  0009               	tblrd		*+	;fetch initializer
   334  00208A  CFF5 F147          	movff	tablat,__pdataBANK1+1
   335                           
   336                           ; Initialize objects allocated to BANK0 (5 bytes)
   337                           ; load TBLPTR registers with __pidataBANK0
   338  00208E  0E1E               	movlw	low __pidataBANK0
   339  002090  6EF6               	movwf	tblptrl,c
   340  002092  0E2D               	movlw	high __pidataBANK0
   341  002094  6EF7               	movwf	tblptrh,c
   342  002096  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   343  002098  6EF8               	movwf	tblptru,c
   344  00209A  EE00  F0FB         	lfsr	0,__pdataBANK0
   345  00209E  EE10 F005          	lfsr	1,5
   346  0020A2                     copy_data0:
   347  0020A2  0009               	tblrd		*+
   348  0020A4  CFF5 FFEE          	movff	tablat,postinc0
   349  0020A8  50E5               	movf	postdec1,w,c
   350  0020AA  50E1               	movf	fsr1l,w,c
   351  0020AC  E1FA               	bnz	copy_data0
   352                           
   353                           ; Initialize objects allocated to COMRAM (2 bytes)
   354                           ; load TBLPTR registers with __pidataCOMRAM
   355  0020AE  0E23               	movlw	low __pidataCOMRAM
   356  0020B0  6EF6               	movwf	tblptrl,c
   357  0020B2  0E2D               	movlw	high __pidataCOMRAM
   358  0020B4  6EF7               	movwf	tblptrh,c
   359  0020B6  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   360  0020B8  6EF8               	movwf	tblptru,c
   361  0020BA  0009               	tblrd		*+	;fetch initializer
   362  0020BC  CFF5 F07D          	movff	tablat,__pdataCOMRAM
   363  0020C0  0009               	tblrd		*+	;fetch initializer
   364  0020C2  CFF5 F07E          	movff	tablat,__pdataCOMRAM+1
   365                           
   366                           ; Clear objects allocated to BANK1 (70 bytes)
   367  0020C6  EE01  F000         	lfsr	0,__pbssBANK1
   368  0020CA  0E46               	movlw	70
   369  0020CC                     clear_0:
   370  0020CC  6AEE               	clrf	postinc0,c
   371  0020CE  06E8               	decf	wreg,f,c
   372  0020D0  E1FD               	bnz	clear_0
   373                           
   374                           ; Clear objects allocated to BANK0 (9 bytes)
   375  0020D2  EE00  F0F2         	lfsr	0,__pbssBANK0
   376  0020D6  0E09               	movlw	9
   377  0020D8                     clear_1:
   378  0020D8  6AEE               	clrf	postinc0,c
   379  0020DA  06E8               	decf	wreg,f,c
   380  0020DC  E1FD               	bnz	clear_1
   381                           
   382                           ; Clear objects allocated to COMRAM (3 bytes)
   383  0020DE  6A7C               	clrf	(__pbssCOMRAM+2)& (0+255),c
   384  0020E0  6A7B               	clrf	(__pbssCOMRAM+1)& (0+255),c
   385  0020E2  6A7A               	clrf	__pbssCOMRAM& (0+255),c
   386  0020E4                     end_of_initialization:
   387                           	opt callstack 0
   388  0020E4                     __end_of__initialization:
   389                           	opt callstack 0
   390  0020E4  907F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   391  0020E6  927F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   392  0020E8  0E00               	movlw	low (__Lmediumconst shr (0+16))
   393  0020EA  6EF8               	movwf	tblptru,c
   394  0020EC  0100               	movlb	0
   395  0020EE  EF09  F009         	goto	_main	;jump to C main() function
   396                           
   397                           	psect	bssCOMRAM
   398  00007A                     __pbssCOMRAM:
   399                           	opt callstack 0
   400  00007A                     _hundredMiliSeconds:
   401                           	opt callstack 0
   402  00007A                     	ds	1
   403  00007B                     _seconds:
   404                           	opt callstack 0
   405  00007B                     	ds	1
   406  00007C                     _cntTmr1:
   407                           	opt callstack 0
   408  00007C                     	ds	1
   409                           
   410                           	psect	dataCOMRAM
   411  00007D                     __pdataCOMRAM:
   412                           	opt callstack 0
   413  00007D                     _prTmr1H:
   414                           	opt callstack 0
   415  00007D                     	ds	1
   416  00007E                     _prTmr1L:
   417                           	opt callstack 0
   418  00007E                     	ds	1
   419                           
   420                           	psect	bssBANK0
   421  0000F2                     __pbssBANK0:
   422                           	opt callstack 0
   423  0000F2                     _width:
   424                           	opt callstack 0
   425  0000F2                     	ds	2
   426  0000F4                     _prec:
   427                           	opt callstack 0
   428  0000F4                     	ds	2
   429  0000F6                     _flags:
   430                           	opt callstack 0
   431  0000F6                     	ds	2
   432  0000F8                     _frequency:
   433                           	opt callstack 0
   434  0000F8                     	ds	2
   435  0000FA                     _functionalStat:
   436                           	opt callstack 0
   437  0000FA                     	ds	1
   438                           
   439                           	psect	dataBANK0
   440  0000FB                     __pdataBANK0:
   441                           	opt callstack 0
   442  0000FB                     _minutes:
   443                           	opt callstack 0
   444  0000FB                     	ds	1
   445  0000FC                     _hours:
   446                           	opt callstack 0
   447  0000FC                     	ds	1
   448  0000FD                     _days:
   449                           	opt callstack 0
   450  0000FD                     	ds	1
   451  0000FE                     _months:
   452                           	opt callstack 0
   453  0000FE                     	ds	1
   454  0000FF                     _prTmr0L:
   455                           	opt callstack 0
   456  0000FF                     	ds	1
   457                           
   458                           	psect	bssBANK1
   459  000100                     __pbssBANK1:
   460                           	opt callstack 0
   461  000100                     _nout:
   462                           	opt callstack 0
   463  000100                     	ds	2
   464  000102                     _level:
   465                           	opt callstack 0
   466  000102                     	ds	1
   467  000103                     _isOnConfig:
   468                           	opt callstack 0
   469  000103                     	ds	1
   470  000104                     _dbuf:
   471                           	opt callstack 0
   472  000104                     	ds	32
   473  000124                     _lineTwo:
   474                           	opt callstack 0
   475  000124                     	ds	17
   476  000135                     _lineOne:
   477                           	opt callstack 0
   478  000135                     	ds	17
   479                           
   480                           	psect	dataBANK1
   481  000146                     __pdataBANK1:
   482                           	opt callstack 0
   483  000146                     _stereoEnable:
   484                           	opt callstack 0
   485  000146                     	ds	1
   486  000147                     _prTmr0H:
   487                           	opt callstack 0
   488  000147                     	ds	1
   489                           
   490                           	psect	cstackBANK0
   491  000080                     __pcstackBANK0:
   492                           	opt callstack 0
   493  000080                     ??_BusyXLCD:
   494  000080                     ??_DelayPORXLCD:
   495  000080                     ?_strlen:
   496                           	opt callstack 0
   497  000080                     ?_isdigit:
   498                           	opt callstack 0
   499  000080                     ?_isspace:
   500                           	opt callstack 0
   501  000080                     ?_codFreq:
   502                           	opt callstack 0
   503  000080                     ?___wmul:
   504                           	opt callstack 0
   505  000080                     ?___lwdiv:
   506                           	opt callstack 0
   507  000080                     ?___lwmod:
   508                           	opt callstack 0
   509  000080                     ?___aodiv:
   510                           	opt callstack 0
   511  000080                     ?___aomod:
   512                           	opt callstack 0
   513  000080                     readEEPROM@address:
   514                           	opt callstack 0
   515  000080                     writeEEPROM@address:
   516                           	opt callstack 0
   517  000080                     WriteDataXLCD@data:
   518                           	opt callstack 0
   519  000080                     WriteCmdXLCD@cmd:
   520                           	opt callstack 0
   521  000080                     SetDDRamAddr@DDaddr:
   522                           	opt callstack 0
   523  000080                     codFreq@f:
   524                           	opt callstack 0
   525  000080                     ___wmul@multiplier:
   526                           	opt callstack 0
   527  000080                     ___lwdiv@dividend:
   528                           	opt callstack 0
   529  000080                     ___lwmod@dividend:
   530                           	opt callstack 0
   531  000080                     isdigit@c:
   532                           	opt callstack 0
   533  000080                     isspace@c:
   534                           	opt callstack 0
   535  000080                     fputc@c:
   536                           	opt callstack 0
   537  000080                     strlen@s:
   538                           	opt callstack 0
   539  000080                     ___aodiv@dividend:
   540                           	opt callstack 0
   541  000080                     ___aomod@dividend:
   542                           	opt callstack 0
   543                           
   544                           ; 8 bytes @ 0x0
   545  000080                     	ds	1
   546  000081                     ??_getData:
   547  000081                     ??_OpenXLCD:
   548  000081                     writeEEPROM@data:
   549                           	opt callstack 0
   550  000081                     SendCMDLCD@CMD:
   551                           	opt callstack 0
   552  000081                     putsXLCD@buffer:
   553                           	opt callstack 0
   554                           
   555                           ; 2 bytes @ 0x1
   556  000081                     	ds	1
   557  000082                     ??_isdigit:
   558  000082                     ??_isspace:
   559  000082                     setData@data0:
   560                           	opt callstack 0
   561  000082                     OpenXLCD@lcdtype:
   562                           	opt callstack 0
   563  000082                     writeFrequency@f:
   564                           	opt callstack 0
   565  000082                     ___wmul@multiplicand:
   566                           	opt callstack 0
   567  000082                     ___lwdiv@divisor:
   568                           	opt callstack 0
   569  000082                     ___lwmod@divisor:
   570                           	opt callstack 0
   571  000082                     fputc@fp:
   572                           	opt callstack 0
   573  000082                     strlen@a:
   574                           	opt callstack 0
   575                           
   576                           ; 2 bytes @ 0x2
   577  000082                     	ds	1
   578  000083                     ??_initLCD:
   579  000083                     getData@aux0:
   580                           	opt callstack 0
   581  000083                     setData@data1:
   582                           	opt callstack 0
   583                           
   584                           ; 1 bytes @ 0x3
   585  000083                     	ds	1
   586  000084                     ??_writeFrequency:
   587  000084                     ??_fputc:
   588  000084                     getData@aux1:
   589                           	opt callstack 0
   590  000084                     setData@full:
   591                           	opt callstack 0
   592  000084                     ___lwmod@counter:
   593                           	opt callstack 0
   594  000084                     ___wmul@product:
   595                           	opt callstack 0
   596  000084                     ___lwdiv@quotient:
   597                           	opt callstack 0
   598                           
   599                           ; 2 bytes @ 0x4
   600  000084                     	ds	2
   601  000086                     ___lwdiv@counter:
   602                           	opt callstack 0
   603  000086                     _isspace$1429:
   604                           	opt callstack 0
   605  000086                     beep@ms:
   606                           	opt callstack 0
   607                           
   608                           ; 2 bytes @ 0x6
   609  000086                     	ds	1
   610  000087                     ?_atoi:
   611                           	opt callstack 0
   612  000087                     writeFrequency@buffer:
   613                           	opt callstack 0
   614  000087                     atoi@s:
   615                           	opt callstack 0
   616                           
   617                           ; 2 bytes @ 0x7
   618  000087                     	ds	1
   619  000088                     ___aodiv@divisor:
   620                           	opt callstack 0
   621  000088                     ___aomod@divisor:
   622                           	opt callstack 0
   623                           
   624                           ; 8 bytes @ 0x8
   625  000088                     	ds	1
   626  000089                     ??_atoi:
   627  000089                     writeFrequency@r:
   628                           	opt callstack 0
   629  000089                     fputs@s:
   630                           	opt callstack 0
   631                           
   632                           ; 2 bytes @ 0x9
   633  000089                     	ds	2
   634  00008B                     writeFrequency@i:
   635                           	opt callstack 0
   636  00008B                     fputs@fp:
   637                           	opt callstack 0
   638                           
   639                           ; 2 bytes @ 0xB
   640  00008B                     	ds	1
   641  00008C                     setTransStat@stat:
   642                           	opt callstack 0
   643                           
   644                           ; 2 bytes @ 0xC
   645  00008C                     	ds	1
   646  00008D                     fputs@c:
   647                           	opt callstack 0
   648  00008D                     atoi@neg:
   649                           	opt callstack 0
   650                           
   651                           ; 2 bytes @ 0xD
   652  00008D                     	ds	1
   653  00008E                     ??_setTransStat:
   654  00008E                     fputs@i:
   655                           	opt callstack 0
   656                           
   657                           ; 2 bytes @ 0xE
   658  00008E                     	ds	1
   659  00008F                     _atoi$1411:
   660                           	opt callstack 0
   661                           
   662                           ; 2 bytes @ 0xF
   663  00008F                     	ds	1
   664  000090                     ?_pad:
   665                           	opt callstack 0
   666  000090                     ___aodiv@counter:
   667                           	opt callstack 0
   668  000090                     ___aomod@counter:
   669                           	opt callstack 0
   670  000090                     pad@fp:
   671                           	opt callstack 0
   672                           
   673                           ; 2 bytes @ 0x10
   674  000090                     	ds	1
   675  000091                     ___aodiv@sign:
   676                           	opt callstack 0
   677  000091                     ___aomod@sign:
   678                           	opt callstack 0
   679  000091                     _atoi$1413:
   680                           	opt callstack 0
   681                           
   682                           ; 2 bytes @ 0x11
   683  000091                     	ds	1
   684  000092                     ?_abs:
   685                           	opt callstack 0
   686  000092                     pad@buf:
   687                           	opt callstack 0
   688  000092                     abs@a:
   689                           	opt callstack 0
   690  000092                     ___aodiv@quotient:
   691                           	opt callstack 0
   692                           
   693                           ; 8 bytes @ 0x12
   694  000092                     	ds	1
   695  000093                     _atoi$1412:
   696                           	opt callstack 0
   697                           
   698                           ; 1 bytes @ 0x13
   699  000093                     	ds	1
   700  000094                     ??_abs:
   701  000094                     pad@p:
   702                           	opt callstack 0
   703  000094                     atoi@n:
   704                           	opt callstack 0
   705                           
   706                           ; 2 bytes @ 0x14
   707  000094                     	ds	2
   708  000096                     ??_pad:
   709                           
   710                           ; 1 bytes @ 0x16
   711  000096                     	ds	1
   712  000097                     pad@i:
   713                           	opt callstack 0
   714                           
   715                           ; 2 bytes @ 0x17
   716  000097                     	ds	2
   717  000099                     pad@w:
   718                           	opt callstack 0
   719                           
   720                           ; 2 bytes @ 0x19
   721  000099                     	ds	2
   722  00009B                     ?_dtoa:
   723                           	opt callstack 0
   724  00009B                     dtoa@fp:
   725                           	opt callstack 0
   726                           
   727                           ; 2 bytes @ 0x1B
   728  00009B                     	ds	2
   729  00009D                     dtoa@d:
   730                           	opt callstack 0
   731                           
   732                           ; 8 bytes @ 0x1D
   733  00009D                     	ds	8
   734  0000A5                     ??_dtoa:
   735                           
   736                           ; 1 bytes @ 0x25
   737  0000A5                     	ds	8
   738  0000AD                     _dtoa$939:
   739                           	opt callstack 0
   740                           
   741                           ; 2 bytes @ 0x2D
   742  0000AD                     	ds	2
   743  0000AF                     dtoa@p:
   744                           	opt callstack 0
   745                           
   746                           ; 2 bytes @ 0x2F
   747  0000AF                     	ds	2
   748  0000B1                     dtoa@w:
   749                           	opt callstack 0
   750                           
   751                           ; 2 bytes @ 0x31
   752  0000B1                     	ds	2
   753  0000B3                     dtoa@s:
   754                           	opt callstack 0
   755                           
   756                           ; 2 bytes @ 0x33
   757  0000B3                     	ds	2
   758  0000B5                     dtoa@n:
   759                           	opt callstack 0
   760                           
   761                           ; 8 bytes @ 0x35
   762  0000B5                     	ds	8
   763  0000BD                     dtoa@i:
   764                           	opt callstack 0
   765                           
   766                           ; 2 bytes @ 0x3D
   767  0000BD                     	ds	2
   768  0000BF                     ?_vfpfcnvrt:
   769                           	opt callstack 0
   770  0000BF                     vfpfcnvrt@fp:
   771                           	opt callstack 0
   772                           
   773                           ; 2 bytes @ 0x3F
   774  0000BF                     	ds	2
   775  0000C1                     vfpfcnvrt@fmt:
   776                           	opt callstack 0
   777                           
   778                           ; 2 bytes @ 0x41
   779  0000C1                     	ds	2
   780  0000C3                     vfpfcnvrt@ap:
   781                           	opt callstack 0
   782                           
   783                           ; 2 bytes @ 0x43
   784  0000C3                     	ds	2
   785  0000C5                     ??_vfpfcnvrt:
   786                           
   787                           ; 1 bytes @ 0x45
   788  0000C5                     	ds	4
   789  0000C9                     vfpfcnvrt@ll:
   790                           	opt callstack 0
   791                           
   792                           ; 8 bytes @ 0x49
   793  0000C9                     	ds	8
   794  0000D1                     _vfpfcnvrt$954:
   795                           	opt callstack 0
   796                           
   797                           ; 2 bytes @ 0x51
   798  0000D1                     	ds	2
   799  0000D3                     ?_vfprintf:
   800                           	opt callstack 0
   801  0000D3                     vfprintf@fp:
   802                           	opt callstack 0
   803                           
   804                           ; 2 bytes @ 0x53
   805  0000D3                     	ds	2
   806  0000D5                     vfprintf@fmt:
   807                           	opt callstack 0
   808                           
   809                           ; 2 bytes @ 0x55
   810  0000D5                     	ds	2
   811  0000D7                     vfprintf@ap:
   812                           	opt callstack 0
   813                           
   814                           ; 2 bytes @ 0x57
   815  0000D7                     	ds	2
   816  0000D9                     vfprintf@cfmt:
   817                           	opt callstack 0
   818                           
   819                           ; 2 bytes @ 0x59
   820  0000D9                     	ds	2
   821  0000DB                     ?_sprintf:
   822                           	opt callstack 0
   823  0000DB                     sprintf@s:
   824                           	opt callstack 0
   825                           
   826                           ; 2 bytes @ 0x5B
   827  0000DB                     	ds	2
   828  0000DD                     sprintf@fmt:
   829                           	opt callstack 0
   830                           
   831                           ; 2 bytes @ 0x5D
   832  0000DD                     	ds	6
   833  0000E3                     
   834                           ; 1 bytes @ 0x63
   835  0000E3                     	ds	2
   836  0000E5                     sprintf@ap:
   837                           	opt callstack 0
   838                           
   839                           ; 2 bytes @ 0x65
   840  0000E5                     	ds	2
   841  0000E7                     sprintf@f:
   842                           	opt callstack 0
   843                           
   844                           ; 6 bytes @ 0x67
   845  0000E7                     	ds	6
   846  0000ED                     ??_setFrequency:
   847  0000ED                     updateLCD@decim:
   848                           	opt callstack 0
   849                           
   850                           ; 1 bytes @ 0x6D
   851  0000ED                     	ds	1
   852  0000EE                     updateLCD@integ:
   853                           	opt callstack 0
   854                           
   855                           ; 1 bytes @ 0x6E
   856  0000EE                     	ds	1
   857  0000EF                     ??_main:
   858                           
   859                           ; 1 bytes @ 0x6F
   860  0000EF                     	ds	2
   861  0000F1                     main@i:
   862                           	opt callstack 0
   863                           
   864                           ; 1 bytes @ 0x71
   865  0000F1                     	ds	1
   866                           
   867                           	psect	cstackCOMRAM
   868  000001                     __pcstackCOMRAM:
   869                           	opt callstack 0
   870  000001                     ??i2_BusyXLCD:
   871  000001                     ?i2___wmul:
   872                           	opt callstack 0
   873  000001                     ?i2___lwdiv:
   874                           	opt callstack 0
   875  000001                     ?i2___lwmod:
   876                           	opt callstack 0
   877  000001                     ?i2_isdigit:
   878                           	opt callstack 0
   879  000001                     ?i2_isspace:
   880                           	opt callstack 0
   881  000001                     ?i2_strlen:
   882                           	opt callstack 0
   883  000001                     ?i2___aodiv:
   884                           	opt callstack 0
   885  000001                     ?i2___aomod:
   886                           	opt callstack 0
   887  000001                     i2writeEEPROM@address:
   888                           	opt callstack 0
   889  000001                     i2WriteDataXLCD@data:
   890                           	opt callstack 0
   891  000001                     i2SetDDRamAddr@DDaddr:
   892                           	opt callstack 0
   893  000001                     i2___wmul@multiplier:
   894                           	opt callstack 0
   895  000001                     i2___lwdiv@dividend:
   896                           	opt callstack 0
   897  000001                     i2___lwmod@dividend:
   898                           	opt callstack 0
   899  000001                     i2isdigit@c:
   900                           	opt callstack 0
   901  000001                     i2isspace@c:
   902                           	opt callstack 0
   903  000001                     i2fputc@c:
   904                           	opt callstack 0
   905  000001                     i2strlen@s:
   906                           	opt callstack 0
   907  000001                     i2___aodiv@dividend:
   908                           	opt callstack 0
   909  000001                     i2___aomod@dividend:
   910                           	opt callstack 0
   911                           
   912                           ; 8 bytes @ 0x0
   913  000001                     	ds	1
   914  000002                     i2writeEEPROM@data:
   915                           	opt callstack 0
   916  000002                     i2putsXLCD@buffer:
   917                           	opt callstack 0
   918                           
   919                           ; 2 bytes @ 0x1
   920  000002                     	ds	1
   921  000003                     ??i2_isdigit:
   922  000003                     ??i2_isspace:
   923  000003                     i2setData@data0:
   924                           	opt callstack 0
   925  000003                     i2___wmul@multiplicand:
   926                           	opt callstack 0
   927  000003                     i2___lwdiv@divisor:
   928                           	opt callstack 0
   929  000003                     i2___lwmod@divisor:
   930                           	opt callstack 0
   931  000003                     i2fputc@fp:
   932                           	opt callstack 0
   933  000003                     i2strlen@a:
   934                           	opt callstack 0
   935                           
   936                           ; 2 bytes @ 0x2
   937  000003                     	ds	1
   938  000004                     i2setData@data1:
   939                           	opt callstack 0
   940                           
   941                           ; 1 bytes @ 0x3
   942  000004                     	ds	1
   943  000005                     ??i2_fputc:
   944  000005                     i2setData@full:
   945                           	opt callstack 0
   946  000005                     i2___lwmod@counter:
   947                           	opt callstack 0
   948  000005                     i2___wmul@product:
   949                           	opt callstack 0
   950  000005                     i2___lwdiv@quotient:
   951                           	opt callstack 0
   952                           
   953                           ; 2 bytes @ 0x4
   954  000005                     	ds	1
   955  000006                     
   956                           ; 1 bytes @ 0x5
   957  000006                     	ds	1
   958  000007                     i2___lwdiv@counter:
   959                           	opt callstack 0
   960  000007                     i2_isspace$1429:
   961                           	opt callstack 0
   962                           
   963                           ; 1 bytes @ 0x6
   964  000007                     	ds	1
   965  000008                     ?i2_atoi:
   966                           	opt callstack 0
   967  000008                     i2atoi@s:
   968                           	opt callstack 0
   969                           
   970                           ; 2 bytes @ 0x7
   971  000008                     	ds	1
   972  000009                     i2___aodiv@divisor:
   973                           	opt callstack 0
   974  000009                     i2___aomod@divisor:
   975                           	opt callstack 0
   976                           
   977                           ; 8 bytes @ 0x8
   978  000009                     	ds	1
   979  00000A                     ??i2_atoi:
   980  00000A                     i2fputs@s:
   981                           	opt callstack 0
   982                           
   983                           ; 2 bytes @ 0x9
   984  00000A                     	ds	2
   985  00000C                     i2fputs@fp:
   986                           	opt callstack 0
   987                           
   988                           ; 2 bytes @ 0xB
   989  00000C                     	ds	2
   990  00000E                     i2fputs@c:
   991                           	opt callstack 0
   992  00000E                     i2atoi@neg:
   993                           	opt callstack 0
   994                           
   995                           ; 2 bytes @ 0xD
   996  00000E                     	ds	1
   997  00000F                     i2fputs@i:
   998                           	opt callstack 0
   999                           
  1000                           ; 2 bytes @ 0xE
  1001  00000F                     	ds	1
  1002  000010                     i2_atoi$1411:
  1003                           	opt callstack 0
  1004                           
  1005                           ; 2 bytes @ 0xF
  1006  000010                     	ds	1
  1007  000011                     ?i2_pad:
  1008                           	opt callstack 0
  1009  000011                     i2___aodiv@counter:
  1010                           	opt callstack 0
  1011  000011                     i2___aomod@counter:
  1012                           	opt callstack 0
  1013  000011                     i2pad@fp:
  1014                           	opt callstack 0
  1015                           
  1016                           ; 2 bytes @ 0x10
  1017  000011                     	ds	1
  1018  000012                     i2___aodiv@sign:
  1019                           	opt callstack 0
  1020  000012                     i2___aomod@sign:
  1021                           	opt callstack 0
  1022  000012                     i2_atoi$1413:
  1023                           	opt callstack 0
  1024                           
  1025                           ; 2 bytes @ 0x11
  1026  000012                     	ds	1
  1027  000013                     ?i2_abs:
  1028                           	opt callstack 0
  1029  000013                     i2pad@buf:
  1030                           	opt callstack 0
  1031  000013                     i2abs@a:
  1032                           	opt callstack 0
  1033  000013                     i2___aodiv@quotient:
  1034                           	opt callstack 0
  1035                           
  1036                           ; 8 bytes @ 0x12
  1037  000013                     	ds	1
  1038  000014                     i2_atoi$1412:
  1039                           	opt callstack 0
  1040                           
  1041                           ; 1 bytes @ 0x13
  1042  000014                     	ds	1
  1043  000015                     ??i2_abs:
  1044  000015                     i2pad@p:
  1045                           	opt callstack 0
  1046  000015                     i2atoi@n:
  1047                           	opt callstack 0
  1048                           
  1049                           ; 2 bytes @ 0x14
  1050  000015                     	ds	2
  1051  000017                     ??i2_pad:
  1052                           
  1053                           ; 1 bytes @ 0x16
  1054  000017                     	ds	1
  1055  000018                     i2pad@i:
  1056                           	opt callstack 0
  1057                           
  1058                           ; 2 bytes @ 0x17
  1059  000018                     	ds	2
  1060  00001A                     i2pad@w:
  1061                           	opt callstack 0
  1062                           
  1063                           ; 2 bytes @ 0x19
  1064  00001A                     	ds	2
  1065  00001C                     ?i2_dtoa:
  1066                           	opt callstack 0
  1067  00001C                     i2dtoa@fp:
  1068                           	opt callstack 0
  1069                           
  1070                           ; 2 bytes @ 0x1B
  1071  00001C                     	ds	2
  1072  00001E                     i2dtoa@d:
  1073                           	opt callstack 0
  1074                           
  1075                           ; 8 bytes @ 0x1D
  1076  00001E                     	ds	8
  1077  000026                     ??i2_dtoa:
  1078                           
  1079                           ; 1 bytes @ 0x25
  1080  000026                     	ds	8
  1081  00002E                     i2_dtoa$939:
  1082                           	opt callstack 0
  1083                           
  1084                           ; 2 bytes @ 0x2D
  1085  00002E                     	ds	2
  1086  000030                     i2dtoa@p:
  1087                           	opt callstack 0
  1088                           
  1089                           ; 2 bytes @ 0x2F
  1090  000030                     	ds	2
  1091  000032                     i2dtoa@w:
  1092                           	opt callstack 0
  1093                           
  1094                           ; 2 bytes @ 0x31
  1095  000032                     	ds	2
  1096  000034                     i2dtoa@s:
  1097                           	opt callstack 0
  1098                           
  1099                           ; 2 bytes @ 0x33
  1100  000034                     	ds	2
  1101  000036                     i2dtoa@n:
  1102                           	opt callstack 0
  1103                           
  1104                           ; 8 bytes @ 0x35
  1105  000036                     	ds	8
  1106  00003E                     i2dtoa@i:
  1107                           	opt callstack 0
  1108                           
  1109                           ; 2 bytes @ 0x3D
  1110  00003E                     	ds	2
  1111  000040                     ?i2_vfpfcnvrt:
  1112                           	opt callstack 0
  1113  000040                     i2vfpfcnvrt@fp:
  1114                           	opt callstack 0
  1115                           
  1116                           ; 2 bytes @ 0x3F
  1117  000040                     	ds	2
  1118  000042                     i2vfpfcnvrt@fmt:
  1119                           	opt callstack 0
  1120                           
  1121                           ; 2 bytes @ 0x41
  1122  000042                     	ds	2
  1123  000044                     i2vfpfcnvrt@ap:
  1124                           	opt callstack 0
  1125                           
  1126                           ; 2 bytes @ 0x43
  1127  000044                     	ds	2
  1128  000046                     ??i2_vfpfcnvrt:
  1129                           
  1130                           ; 1 bytes @ 0x45
  1131  000046                     	ds	4
  1132  00004A                     i2vfpfcnvrt@ll:
  1133                           	opt callstack 0
  1134                           
  1135                           ; 8 bytes @ 0x49
  1136  00004A                     	ds	8
  1137  000052                     i2_vfpfcnvrt$954:
  1138                           	opt callstack 0
  1139                           
  1140                           ; 2 bytes @ 0x51
  1141  000052                     	ds	2
  1142  000054                     ?i2_vfprintf:
  1143                           	opt callstack 0
  1144  000054                     i2vfprintf@fp:
  1145                           	opt callstack 0
  1146                           
  1147                           ; 2 bytes @ 0x53
  1148  000054                     	ds	2
  1149  000056                     i2vfprintf@fmt:
  1150                           	opt callstack 0
  1151                           
  1152                           ; 2 bytes @ 0x55
  1153  000056                     	ds	2
  1154  000058                     i2vfprintf@ap:
  1155                           	opt callstack 0
  1156                           
  1157                           ; 2 bytes @ 0x57
  1158  000058                     	ds	2
  1159  00005A                     i2vfprintf@cfmt:
  1160                           	opt callstack 0
  1161                           
  1162                           ; 2 bytes @ 0x59
  1163  00005A                     	ds	2
  1164  00005C                     ?i2_sprintf:
  1165                           	opt callstack 0
  1166  00005C                     i2sprintf@s:
  1167                           	opt callstack 0
  1168                           
  1169                           ; 2 bytes @ 0x5B
  1170  00005C                     	ds	2
  1171  00005E                     i2sprintf@fmt:
  1172                           	opt callstack 0
  1173                           
  1174                           ; 2 bytes @ 0x5D
  1175  00005E                     	ds	6
  1176  000064                     
  1177                           ; 1 bytes @ 0x63
  1178  000064                     	ds	2
  1179  000066                     i2sprintf@ap:
  1180                           	opt callstack 0
  1181                           
  1182                           ; 2 bytes @ 0x65
  1183  000066                     	ds	2
  1184  000068                     i2sprintf@f:
  1185                           	opt callstack 0
  1186                           
  1187                           ; 6 bytes @ 0x67
  1188  000068                     	ds	6
  1189  00006E                     i2updateLCD@decim:
  1190                           	opt callstack 0
  1191                           
  1192                           ; 1 bytes @ 0x6D
  1193  00006E                     	ds	1
  1194  00006F                     i2updateLCD@integ:
  1195                           	opt callstack 0
  1196                           
  1197                           ; 1 bytes @ 0x6E
  1198  00006F                     	ds	1
  1199  000070                     ??_inter:
  1200                           
  1201                           ; 1 bytes @ 0x6F
  1202  000070                     	ds	10
  1203                           
  1204 ;;
  1205 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1206 ;;
  1207 ;; *************** function _main *****************
  1208 ;; Defined at:
  1209 ;;		line 5 in file "main.c"
  1210 ;; Parameters:    Size  Location     Type
  1211 ;;		None
  1212 ;; Auto vars:     Size  Location     Type
  1213 ;;  i               1  113[BANK0 ] unsigned char 
  1214 ;; Return value:  Size  Location     Type
  1215 ;;                  1    wreg      void 
  1216 ;; Registers used:
  1217 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1218 ;; Tracked objects:
  1219 ;;		On entry : 0/0
  1220 ;;		On exit  : 0/0
  1221 ;;		Unchanged: 0/0
  1222 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1223 ;;      Params:         0       0       0       0       0       0       0
  1224 ;;      Locals:         0       1       0       0       0       0       0
  1225 ;;      Temps:          0       2       0       0       0       0       0
  1226 ;;      Totals:         0       3       0       0       0       0       0
  1227 ;;Total ram usage:        3 bytes
  1228 ;; Hardware stack levels required when called:   19
  1229 ;; This function calls:
  1230 ;;		_SetDDRamAddr
  1231 ;;		_beep
  1232 ;;		_config
  1233 ;;		_getData
  1234 ;;		_putsXLCD
  1235 ;;		_setFrequency
  1236 ;;		_setTransStat
  1237 ;;		_sprintf
  1238 ;;		_updateLCD
  1239 ;;		_writeFrequency
  1240 ;; This function is called by:
  1241 ;;		Startup code after reset
  1242 ;; This function uses a non-reentrant model
  1243 ;;
  1244                           
  1245                           	psect	text0
  1246  001212                     __ptext0:
  1247                           	opt callstack 0
  1248  001212                     _main:
  1249                           	opt callstack 0
  1250  001212  FFFF               	dw	65535	; assembler added errata NOP
  1251                           
  1252                           ;main.c: 6:     char i = 0;
  1253                           
  1254                           ;incstack = 0
  1255  001214  0E00               	movlw	0
  1256  001216  0100               	movlb	0	; () banked
  1257  001218  6FF1               	movwf	main@i& (0+255),b
  1258                           
  1259                           ; BSR set to: 0
  1260                           ;main.c: 7:     _delay((unsigned long)((100)*(12000000/4000.0)));
  1261  00121A  0E02               	movlw	2
  1262  00121C  0100               	movlb	0	; () banked
  1263  00121E  6FF0               	movwf	(??_main+1)& (0+255),b
  1264  001220  0E25               	movlw	37
  1265  001222  6FEF               	movwf	??_main& (0+255),b
  1266  001224  0E63               	movlw	99
  1267  001226                     u3777:
  1268  001226  FFFF               	dw	65535	; errata NOP
  1269  001228  2EE8               	decfsz	wreg,f,c
  1270  00122A  D7FD               	bra	u3777
  1271  00122C  2FEF               	decfsz	??_main& (0+255),f,b
  1272  00122E  D7FB               	bra	u3777
  1273  001230  2FF0               	decfsz	(??_main+1)& (0+255),f,b
  1274  001232  D7F9               	bra	u3777
  1275  001234  F000               	nop	
  1276                           
  1277                           ;main.c: 8:     config();
  1278  001236  EC8F  F012         	call	_config	;wreg free
  1279                           
  1280                           ;main.c: 9:     PORTBbits.RB1 = 1;
  1281  00123A  8281               	bsf	3969,1,c	;volatile
  1282                           
  1283                           ;main.c: 10:     getData();
  1284  00123C  EC61  F011         	call	_getData	;wreg free
  1285                           
  1286                           ;main.c: 11:     beep(10);
  1287  001240  0E00               	movlw	0
  1288  001242  0100               	movlb	0	; () banked
  1289  001244  6F87               	movwf	(beep@ms+1)& (0+255),b
  1290  001246  0E0A               	movlw	10
  1291  001248  6F86               	movwf	beep@ms& (0+255),b
  1292  00124A  ECBE  F012         	call	_beep	;wreg free
  1293                           
  1294                           ;main.c: 12:     if(!PORTCbits.RC0){
  1295  00124E  B082               	btfsc	3970,0,c	;volatile
  1296  001250  D00D               	goto	l4224
  1297                           
  1298                           ;main.c: 13:         _delay((unsigned long)((25)*(12000000/4000.0)));
  1299  001252  0E4A               	movlw	74
  1300  001254  0100               	movlb	0	; () banked
  1301  001256  6FEF               	movwf	??_main& (0+255),b
  1302  001258  0E18               	movlw	24
  1303  00125A                     u3787:
  1304  00125A  FFFF               	dw	65535	; errata NOP
  1305  00125C  2EE8               	decfsz	wreg,f,c
  1306  00125E  D7FD               	bra	u3787
  1307  001260  2FEF               	decfsz	??_main& (0+255),f,b
  1308  001262  D7FB               	bra	u3787
  1309  001264  F000               	nop	
  1310                           
  1311                           ;main.c: 14:         if(!PORTCbits.RC0) setFrequency();
  1312  001266  A082               	btfss	3970,0,c	;volatile
  1313  001268  EC1D  F008         	call	_setFrequency	;wreg free
  1314  00126C                     l4224:
  1315  00126C  FFFF               	dw	65535	; assembler added errata NOP
  1316                           
  1317                           ;main.c: 16:     PORTBbits.RB1 = 0;
  1318  00126E  9281               	bcf	3969,1,c	;volatile
  1319                           
  1320                           ;main.c: 17:     _delay((unsigned long)((100)*(12000000/4000.0)));
  1321  001270  0E02               	movlw	2
  1322  001272  0100               	movlb	0	; () banked
  1323  001274  6FF0               	movwf	(??_main+1)& (0+255),b
  1324  001276  0E25               	movlw	37
  1325  001278  6FEF               	movwf	??_main& (0+255),b
  1326  00127A  0E63               	movlw	99
  1327  00127C                     u3797:
  1328  00127C  FFFF               	dw	65535	; errata NOP
  1329  00127E  2EE8               	decfsz	wreg,f,c
  1330  001280  D7FD               	bra	u3797
  1331  001282  2FEF               	decfsz	??_main& (0+255),f,b
  1332  001284  D7FB               	bra	u3797
  1333  001286  2FF0               	decfsz	(??_main+1)& (0+255),f,b
  1334  001288  D7F9               	bra	u3797
  1335  00128A  F000               	nop	
  1336                           
  1337                           ;main.c: 18:     writeFrequency(frequency);
  1338  00128C  C0F8  F082         	movff	_frequency,writeFrequency@f
  1339  001290  C0F9  F083         	movff	_frequency+1,writeFrequency@f+1
  1340  001294  EC3D  F00E         	call	_writeFrequency	;wreg free
  1341                           
  1342                           ;main.c: 19:     beep(100);
  1343  001298  0E00               	movlw	0
  1344  00129A  0100               	movlb	0	; () banked
  1345  00129C  6F87               	movwf	(beep@ms+1)& (0+255),b
  1346  00129E  0E64               	movlw	100
  1347  0012A0  6F86               	movwf	beep@ms& (0+255),b
  1348  0012A2  ECBE  F012         	call	_beep	;wreg free
  1349                           
  1350                           ;main.c: 20:     INTCONbits.GIE = 0;
  1351  0012A6  9EF2               	bcf	4082,7,c	;volatile
  1352  0012A8                     l4238:
  1353  0012A8  FFFF               	dw	65535	; assembler added errata NOP
  1354                           
  1355                           ;main.c: 22:         sprintf(lineOne,"LOCKING         ");
  1356  0012AA  0E35               	movlw	low _lineOne
  1357  0012AC  0100               	movlb	0	; () banked
  1358  0012AE  6FDB               	movwf	sprintf@s& (0+255),b
  1359  0012B0  0E01               	movlw	high _lineOne
  1360  0012B2  6FDC               	movwf	(sprintf@s+1)& (0+255),b
  1361  0012B4  0E17               	movlw	low STR_1
  1362  0012B6  6FDD               	movwf	sprintf@fmt& (0+255),b
  1363  0012B8  0E06               	movlw	high STR_1
  1364  0012BA  6FDE               	movwf	(sprintf@fmt+1)& (0+255),b
  1365  0012BC  ECEA  F012         	call	_sprintf	;wreg free
  1366                           
  1367                           ;main.c: 23:         sprintf(lineTwo,"       FREQUENCY");
  1368  0012C0  0E24               	movlw	low _lineTwo
  1369  0012C2  0100               	movlb	0	; () banked
  1370  0012C4  6FDB               	movwf	sprintf@s& (0+255),b
  1371  0012C6  0E01               	movlw	high _lineTwo
  1372  0012C8  6FDC               	movwf	(sprintf@s+1)& (0+255),b
  1373  0012CA  0E4A               	movlw	low STR_2
  1374  0012CC  6FDD               	movwf	sprintf@fmt& (0+255),b
  1375  0012CE  0E06               	movlw	high STR_2
  1376  0012D0  6FDE               	movwf	(sprintf@fmt+1)& (0+255),b
  1377  0012D2  ECEA  F012         	call	_sprintf	;wreg free
  1378                           
  1379                           ;main.c: 24:         SetDDRamAddr(0x00);
  1380  0012D6  0E00               	movlw	0
  1381  0012D8  ECB4  F013         	call	_SetDDRamAddr
  1382                           
  1383                           ;main.c: 25:         putsXLCD(lineOne);
  1384  0012DC  0E35               	movlw	low _lineOne
  1385  0012DE  0100               	movlb	0	; () banked
  1386  0012E0  6F81               	movwf	putsXLCD@buffer& (0+255),b
  1387  0012E2  0E01               	movlw	high _lineOne
  1388  0012E4  6F82               	movwf	(putsXLCD@buffer+1)& (0+255),b
  1389  0012E6  EC2A  F015         	call	_putsXLCD	;wreg free
  1390                           
  1391                           ;main.c: 26:         SetDDRamAddr(0x40);
  1392  0012EA  0E40               	movlw	64
  1393  0012EC  ECB4  F013         	call	_SetDDRamAddr
  1394                           
  1395                           ;main.c: 27:         putsXLCD(lineTwo);
  1396  0012F0  0E24               	movlw	low _lineTwo
  1397  0012F2  0100               	movlb	0	; () banked
  1398  0012F4  6F81               	movwf	putsXLCD@buffer& (0+255),b
  1399  0012F6  0E01               	movlw	high _lineTwo
  1400  0012F8  6F82               	movwf	(putsXLCD@buffer+1)& (0+255),b
  1401  0012FA  EC2A  F015         	call	_putsXLCD	;wreg free
  1402                           
  1403                           ;main.c: 28:         _delay((unsigned long)((90)*(12000000/4000.0)));
  1404  0012FE  0E02               	movlw	2
  1405  001300  0100               	movlb	0	; () banked
  1406  001302  6FF0               	movwf	(??_main+1)& (0+255),b
  1407  001304  0E08               	movlw	8
  1408  001306  6FEF               	movwf	??_main& (0+255),b
  1409  001308  0E25               	movlw	37
  1410  00130A                     u3807:
  1411  00130A  FFFF               	dw	65535	; errata NOP
  1412  00130C  2EE8               	decfsz	wreg,f,c
  1413  00130E  D7FD               	bra	u3807
  1414  001310  2FEF               	decfsz	??_main& (0+255),f,b
  1415  001312  D7FB               	bra	u3807
  1416  001314  2FF0               	decfsz	(??_main+1)& (0+255),f,b
  1417  001316  D7F9               	bra	u3807
  1418  001318  D000               	nop2	
  1419  00131A  F000               	nop	
  1420                           
  1421                           ;main.c: 29:     }
  1422  00131C  0100               	movlb	0	; () banked
  1423  00131E  2BF1               	incf	main@i& (0+255),f,b
  1424                           
  1425                           ; BSR set to: 0
  1426  001320  0E31               	movlw	49
  1427  001322  65F1               	cpfsgt	main@i& (0+255),b
  1428  001324  D7C1               	goto	l4238
  1429                           
  1430                           ; BSR set to: 0
  1431                           ;main.c: 31:     INTCONbits.GIE = 1;
  1432  001326  8EF2               	bsf	4082,7,c	;volatile
  1433                           
  1434                           ; BSR set to: 0
  1435                           ;main.c: 33:     sprintf(lineOne,"AMPRO      EX-FM");
  1436  001328  0E35               	movlw	low _lineOne
  1437  00132A  6FDB               	movwf	sprintf@s& (0+255),b
  1438  00132C  0E01               	movlw	high _lineOne
  1439  00132E  6FDC               	movwf	(sprintf@s+1)& (0+255),b
  1440  001330  0E39               	movlw	low STR_3
  1441  001332  6FDD               	movwf	sprintf@fmt& (0+255),b
  1442  001334  0E06               	movlw	high STR_3
  1443  001336  6FDE               	movwf	(sprintf@fmt+1)& (0+255),b
  1444  001338  ECEA  F012         	call	_sprintf	;wreg free
  1445                           
  1446                           ;main.c: 34:     updateLCD();
  1447  00133C  ECF9  F00F         	call	_updateLCD	;wreg free
  1448  001340                     l4256:
  1449  001340  FFFF               	dw	65535	; assembler added errata NOP
  1450  001342  0100               	movlb	0	; () banked
  1451  001344  05FA               	decf	_functionalStat& (0+255),w,b
  1452  001346  A4D8               	btfss	status,2,c
  1453  001348  D007               	goto	l4260
  1454                           
  1455                           ; BSR set to: 0
  1456                           ;main.c: 37:             setTransStat(1);
  1457  00134A  0E00               	movlw	0
  1458  00134C  6F8D               	movwf	(setTransStat@stat+1)& (0+255),b
  1459  00134E  0E01               	movlw	1
  1460  001350  6F8C               	movwf	setTransStat@stat& (0+255),b
  1461  001352  ECCA  F011         	call	_setTransStat	;wreg free
  1462                           
  1463                           ;main.c: 38:         }else{
  1464  001356  D007               	goto	l4262
  1465  001358                     l4260:
  1466  001358  FFFF               	dw	65535	; assembler added errata NOP
  1467                           
  1468                           ; BSR set to: 0
  1469                           ;main.c: 39:             setTransStat(0);
  1470  00135A  0E00               	movlw	0
  1471  00135C  6F8D               	movwf	(setTransStat@stat+1)& (0+255),b
  1472  00135E  0E00               	movlw	0
  1473  001360  6F8C               	movwf	setTransStat@stat& (0+255),b
  1474  001362  ECCA  F011         	call	_setTransStat	;wreg free
  1475  001366                     l4262:
  1476  001366  FFFF               	dw	65535	; assembler added errata NOP
  1477                           
  1478                           ;main.c: 42:         _delay((unsigned long)((50)*(12000000/4000.0)));
  1479  001368  0E93               	movlw	147
  1480  00136A  0100               	movlb	0	; () banked
  1481  00136C  6FEF               	movwf	??_main& (0+255),b
  1482  00136E  0E31               	movlw	49
  1483  001370                     u3817:
  1484  001370  FFFF               	dw	65535	; errata NOP
  1485  001372  2EE8               	decfsz	wreg,f,c
  1486  001374  D7FD               	bra	u3817
  1487  001376  2FEF               	decfsz	??_main& (0+255),f,b
  1488  001378  D7FB               	bra	u3817
  1489  00137A  D000               	nop2	
  1490  00137C  F000               	nop	
  1491  00137E  D7E0               	goto	l4256
  1492  001380                     __end_of_main:
  1493                           	opt callstack 0
  1494                           
  1495 ;; *************** function _updateLCD *****************
  1496 ;; Defined at:
  1497 ;;		line 14 in file "lcd.c"
  1498 ;; Parameters:    Size  Location     Type
  1499 ;;		None
  1500 ;; Auto vars:     Size  Location     Type
  1501 ;;  integ           1  110[BANK0 ] unsigned char 
  1502 ;;  decim           1  109[BANK0 ] unsigned char 
  1503 ;; Return value:  Size  Location     Type
  1504 ;;                  1    wreg      void 
  1505 ;; Registers used:
  1506 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1507 ;; Tracked objects:
  1508 ;;		On entry : 0/0
  1509 ;;		On exit  : 0/0
  1510 ;;		Unchanged: 0/0
  1511 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1512 ;;      Params:         0       0       0       0       0       0       0
  1513 ;;      Locals:         0       2       0       0       0       0       0
  1514 ;;      Temps:          0       0       0       0       0       0       0
  1515 ;;      Totals:         0       2       0       0       0       0       0
  1516 ;;Total ram usage:        2 bytes
  1517 ;; Hardware stack levels used:    1
  1518 ;; Hardware stack levels required when called:   18
  1519 ;; This function calls:
  1520 ;;		_SetDDRamAddr
  1521 ;;		___lwdiv
  1522 ;;		___lwmod
  1523 ;;		_putsXLCD
  1524 ;;		_sprintf
  1525 ;; This function is called by:
  1526 ;;		_main
  1527 ;; This function uses a non-reentrant model
  1528 ;;
  1529                           
  1530                           	psect	text1
  1531  001FF2                     __ptext1:
  1532                           	opt callstack 0
  1533  001FF2                     _updateLCD:
  1534                           	opt callstack 0
  1535  001FF2  FFFF               	dw	65535	; assembler added errata NOP
  1536                           
  1537                           ;lcd.c: 16:         unsigned char decim = frequency % 10;
  1538                           
  1539                           ;incstack = 0
  1540  001FF4  C0F8  F080         	movff	_frequency,___lwmod@dividend
  1541  001FF8  C0F9  F081         	movff	_frequency+1,___lwmod@dividend+1
  1542  001FFC  0E00               	movlw	0
  1543  001FFE  0100               	movlb	0	; () banked
  1544  002000  6F83               	movwf	(___lwmod@divisor+1)& (0+255),b
  1545  002002  0E0A               	movlw	10
  1546  002004  6F82               	movwf	___lwmod@divisor& (0+255),b
  1547  002006  EC15  F013         	call	___lwmod	;wreg free
  1548  00200A  0100               	movlb	0	; () banked
  1549  00200C  5180               	movf	?___lwmod& (0+255),w,b
  1550  00200E  6FED               	movwf	updateLCD@decim& (0+255),b
  1551                           
  1552                           ;lcd.c: 17:         unsigned char integ = frequency / 10;
  1553  002010  C0F8  F080         	movff	_frequency,___lwdiv@dividend
  1554  002014  C0F9  F081         	movff	_frequency+1,___lwdiv@dividend+1
  1555  002018  0E00               	movlw	0
  1556  00201A  6F83               	movwf	(___lwdiv@divisor+1)& (0+255),b
  1557  00201C  0E0A               	movlw	10
  1558  00201E  6F82               	movwf	___lwdiv@divisor& (0+255),b
  1559  002020  ECFE  F011         	call	___lwdiv	;wreg free
  1560  002024  0100               	movlb	0	; () banked
  1561  002026  5180               	movf	?___lwdiv& (0+255),w,b
  1562  002028  6FEE               	movwf	updateLCD@integ& (0+255),b
  1563                           
  1564                           ; BSR set to: 0
  1565                           ;lcd.c: 18:         sprintf(lineTwo,"FREQ.  %3d.%d MHz",integ, decim);
  1566  00202A  0E24               	movlw	low _lineTwo
  1567  00202C  6FDB               	movwf	sprintf@s& (0+255),b
  1568  00202E  0E01               	movlw	high _lineTwo
  1569  002030  6FDC               	movwf	(sprintf@s+1)& (0+255),b
  1570  002032  0E05               	movlw	low STR_5
  1571  002034  6FDD               	movwf	sprintf@fmt& (0+255),b
  1572  002036  0E06               	movlw	high STR_5
  1573  002038  6FDE               	movwf	(sprintf@fmt+1)& (0+255),b
  1574  00203A  C0EE  F0DF         	movff	updateLCD@integ,?_sprintf+4
  1575  00203E  6BE0               	clrf	(?_sprintf+5)& (0+255),b
  1576  002040  C0ED  F0E1         	movff	updateLCD@decim,?_sprintf+6
  1577  002044  6BE2               	clrf	(?_sprintf+7)& (0+255),b
  1578  002046  ECEA  F012         	call	_sprintf	;wreg free
  1579                           
  1580                           ;lcd.c: 19:         SetDDRamAddr(0x40);
  1581  00204A  0E40               	movlw	64
  1582  00204C  ECB4  F013         	call	_SetDDRamAddr
  1583                           
  1584                           ;lcd.c: 20:         putsXLCD(lineTwo);
  1585  002050  0E24               	movlw	low _lineTwo
  1586  002052  0100               	movlb	0	; () banked
  1587  002054  6F81               	movwf	putsXLCD@buffer& (0+255),b
  1588  002056  0E01               	movlw	high _lineTwo
  1589  002058  6F82               	movwf	(putsXLCD@buffer+1)& (0+255),b
  1590  00205A  EC2A  F015         	call	_putsXLCD	;wreg free
  1591                           
  1592                           ;lcd.c: 22:     SetDDRamAddr(0x00);
  1593  00205E  0E00               	movlw	0
  1594  002060  ECB4  F013         	call	_SetDDRamAddr
  1595                           
  1596                           ;lcd.c: 23:     putsXLCD(lineOne);
  1597  002064  0E35               	movlw	low _lineOne
  1598  002066  0100               	movlb	0	; () banked
  1599  002068  6F81               	movwf	putsXLCD@buffer& (0+255),b
  1600  00206A  0E01               	movlw	high _lineOne
  1601  00206C  6F82               	movwf	(putsXLCD@buffer+1)& (0+255),b
  1602  00206E  EC2A  F015         	call	_putsXLCD	;wreg free
  1603  002072  0012               	return		;funcret
  1604  002074  FFFF               	dw	65535	; errata NOP
  1605  002076                     __end_of_updateLCD:
  1606                           	opt callstack 0
  1607                           
  1608 ;; *************** function _putsXLCD *****************
  1609 ;; Defined at:
  1610 ;;		line 419 in file "lcd_pic16.c"
  1611 ;; Parameters:    Size  Location     Type
  1612 ;;  buffer          2    1[BANK0 ] PTR unsigned char 
  1613 ;;		 -> lineTwo(17), lineOne(17), 
  1614 ;; Auto vars:     Size  Location     Type
  1615 ;;		None
  1616 ;; Return value:  Size  Location     Type
  1617 ;;                  1    wreg      void 
  1618 ;; Registers used:
  1619 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1620 ;; Tracked objects:
  1621 ;;		On entry : 0/0
  1622 ;;		On exit  : 0/0
  1623 ;;		Unchanged: 0/0
  1624 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1625 ;;      Params:         0       2       0       0       0       0       0
  1626 ;;      Locals:         0       0       0       0       0       0       0
  1627 ;;      Temps:          0       0       0       0       0       0       0
  1628 ;;      Totals:         0       2       0       0       0       0       0
  1629 ;;Total ram usage:        2 bytes
  1630 ;; Hardware stack levels used:    1
  1631 ;; Hardware stack levels required when called:   12
  1632 ;; This function calls:
  1633 ;;		_BusyXLCD
  1634 ;;		_WriteDataXLCD
  1635 ;; This function is called by:
  1636 ;;		_main
  1637 ;;		_updateLCD
  1638 ;; This function uses a non-reentrant model
  1639 ;;
  1640                           
  1641                           	psect	text2
  1642  002A54                     __ptext2:
  1643                           	opt callstack 0
  1644  002A54                     _putsXLCD:
  1645                           	opt callstack 0
  1646  002A54  FFFF               	dw	65535	; assembler added errata NOP
  1647                           
  1648                           ;lcd_pic16.c: 419: void putsXLCD(char *buffer);lcd_pic16.c: 420: {;lcd_pic16.c: 421:    
      +                               while(*buffer)
  1649                           
  1650                           ;incstack = 0
  1651  002A56  D010               	goto	l3872
  1652  002A58                     l3866:
  1653  002A58  FFFF               	dw	65535	; assembler added errata NOP
  1654  002A5A  EC37  F016         	call	_BusyXLCD	;wreg free
  1655  002A5E  0900               	iorlw	0
  1656  002A60  A4D8               	btfss	status,2,c
  1657  002A62  D7FA               	goto	l3866
  1658                           
  1659                           ;lcd_pic16.c: 424:                 WriteDataXLCD(*buffer);
  1660  002A64  C081  FFD9         	movff	putsXLCD@buffer,fsr2l
  1661  002A68  C082  FFDA         	movff	putsXLCD@buffer+1,fsr2h
  1662  002A6C  50DF               	movf	indf2,w,c
  1663  002A6E  ECD9  F013         	call	_WriteDataXLCD
  1664                           
  1665                           ;lcd_pic16.c: 425:                 buffer++;
  1666  002A72  0100               	movlb	0	; () banked
  1667  002A74  4B81               	infsnz	putsXLCD@buffer& (0+255),f,b
  1668  002A76  2B82               	incf	(putsXLCD@buffer+1)& (0+255),f,b
  1669  002A78                     l3872:
  1670  002A78  FFFF               	dw	65535	; assembler added errata NOP
  1671                           
  1672                           ;lcd_pic16.c: 421:         while(*buffer)
  1673  002A7A  C081  FFD9         	movff	putsXLCD@buffer,fsr2l
  1674  002A7E  C082  FFDA         	movff	putsXLCD@buffer+1,fsr2h
  1675  002A82  50DF               	movf	indf2,w,c
  1676  002A84  B4D8               	btfsc	status,2,c
  1677  002A86  0012               	return		;funcret
  1678  002A88  FFFF               	dw	65535	; assembler added errata NOP
  1679  002A8A  D7E6               	goto	l3866
  1680  002A8C  FFFF               	dw	65535	; errata NOP
  1681  002A8E                     __end_of_putsXLCD:
  1682                           	opt callstack 0
  1683                           
  1684 ;; *************** function _WriteDataXLCD *****************
  1685 ;; Defined at:
  1686 ;;		line 110 in file "lcd_pic16.c"
  1687 ;; Parameters:    Size  Location     Type
  1688 ;;  data            1    wreg     unsigned char 
  1689 ;; Auto vars:     Size  Location     Type
  1690 ;;  data            1    0[BANK0 ] unsigned char 
  1691 ;; Return value:  Size  Location     Type
  1692 ;;                  1    wreg      void 
  1693 ;; Registers used:
  1694 ;;		wreg, status,2, status,0, cstack
  1695 ;; Tracked objects:
  1696 ;;		On entry : 0/0
  1697 ;;		On exit  : 0/0
  1698 ;;		Unchanged: 0/0
  1699 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1700 ;;      Params:         0       0       0       0       0       0       0
  1701 ;;      Locals:         0       1       0       0       0       0       0
  1702 ;;      Temps:          0       0       0       0       0       0       0
  1703 ;;      Totals:         0       1       0       0       0       0       0
  1704 ;;Total ram usage:        1 bytes
  1705 ;; Hardware stack levels used:    1
  1706 ;; Hardware stack levels required when called:   11
  1707 ;; This function calls:
  1708 ;;		_DelayFor18TCY
  1709 ;; This function is called by:
  1710 ;;		_putsXLCD
  1711 ;;		_putrsXLCD
  1712 ;; This function uses a non-reentrant model
  1713 ;;
  1714                           
  1715                           	psect	text3
  1716  0027B2                     __ptext3:
  1717                           	opt callstack 0
  1718  0027B2                     _WriteDataXLCD:
  1719                           	opt callstack 0
  1720  0027B2  FFFF               	dw	65535	; assembler added errata NOP
  1721                           
  1722                           ;incstack = 0
  1723                           ;WriteDataXLCD@data stored from wreg
  1724  0027B4  0100               	movlb	0	; () banked
  1725  0027B6  6F80               	movwf	WriteDataXLCD@data& (0+255),b
  1726                           
  1727                           ;lcd_pic16.c: 110: void WriteDataXLCD(char data);lcd_pic16.c: 111: {;lcd_pic16.c: 125:  
      +                                 TRISD &= 0x0f;
  1728  0027B8  0E0F               	movlw	15
  1729  0027BA  1695               	andwf	3989,f,c	;volatile
  1730                           
  1731                           ;lcd_pic16.c: 126:         PORTD &= 0x0f;
  1732  0027BC  0E0F               	movlw	15
  1733  0027BE  1683               	andwf	3971,f,c	;volatile
  1734                           
  1735                           ;lcd_pic16.c: 127:         PORTD |= data&0xf0;
  1736  0027C0  0100               	movlb	0	; () banked
  1737  0027C2  5180               	movf	WriteDataXLCD@data& (0+255),w,b
  1738  0027C4  0BF0               	andlw	240
  1739  0027C6  1283               	iorwf	3971,f,c	;volatile
  1740                           
  1741                           ; BSR set to: 0
  1742                           ;lcd_pic16.c: 133:         PORTDbits.RD3 = 1;
  1743  0027C8  8683               	bsf	3971,3,c	;volatile
  1744                           
  1745                           ; BSR set to: 0
  1746                           ;lcd_pic16.c: 134:         PORTDbits.RD2 = 0;
  1747  0027CA  9483               	bcf	3971,2,c	;volatile
  1748                           
  1749                           ; BSR set to: 0
  1750                           ;lcd_pic16.c: 135:         DelayFor18TCY();
  1751  0027CC  EC79  F016         	call	_DelayFor18TCY	;wreg free
  1752                           
  1753                           ;lcd_pic16.c: 136:         PORTDbits.RD1 = 1;
  1754  0027D0  8283               	bsf	3971,1,c	;volatile
  1755                           
  1756                           ;lcd_pic16.c: 137:         DelayFor18TCY();
  1757  0027D2  EC79  F016         	call	_DelayFor18TCY	;wreg free
  1758                           
  1759                           ;lcd_pic16.c: 138:         PORTDbits.RD1 = 0;
  1760  0027D6  9283               	bcf	3971,1,c	;volatile
  1761                           
  1762                           ;lcd_pic16.c: 140:         PORTD &= 0x0f;
  1763  0027D8  0E0F               	movlw	15
  1764  0027DA  1683               	andwf	3971,f,c	;volatile
  1765                           
  1766                           ;lcd_pic16.c: 141:         PORTD |= ((data<<4)&0xf0);
  1767  0027DC  0100               	movlb	0	; () banked
  1768  0027DE  3980               	swapf	WriteDataXLCD@data& (0+255),w,b
  1769  0027E0  0BF0               	andlw	240
  1770  0027E2  0BF0               	andlw	240
  1771  0027E4  1283               	iorwf	3971,f,c	;volatile
  1772                           
  1773                           ; BSR set to: 0
  1774                           ;lcd_pic16.c: 146:         DelayFor18TCY();
  1775  0027E6  EC79  F016         	call	_DelayFor18TCY	;wreg free
  1776                           
  1777                           ;lcd_pic16.c: 147:         PORTDbits.RD1 = 1;
  1778  0027EA  8283               	bsf	3971,1,c	;volatile
  1779                           
  1780                           ;lcd_pic16.c: 148:         DelayFor18TCY();
  1781  0027EC  EC79  F016         	call	_DelayFor18TCY	;wreg free
  1782                           
  1783                           ;lcd_pic16.c: 149:         PORTDbits.RD1 = 0;
  1784  0027F0  9283               	bcf	3971,1,c	;volatile
  1785                           
  1786                           ;lcd_pic16.c: 151:         TRISD |= 0xf0;
  1787  0027F2  0EF0               	movlw	240
  1788  0027F4  1295               	iorwf	3989,f,c	;volatile
  1789  0027F6  0012               	return		;funcret
  1790  0027F8  FFFF               	dw	65535	; errata NOP
  1791  0027FA                     __end_of_WriteDataXLCD:
  1792                           	opt callstack 0
  1793                           
  1794 ;; *************** function ___lwmod *****************
  1795 ;; Defined at:
  1796 ;;		line 7 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/lwmod.c"
  1797 ;; Parameters:    Size  Location     Type
  1798 ;;  dividend        2    0[BANK0 ] unsigned int 
  1799 ;;  divisor         2    2[BANK0 ] unsigned int 
  1800 ;; Auto vars:     Size  Location     Type
  1801 ;;  counter         1    4[BANK0 ] unsigned char 
  1802 ;; Return value:  Size  Location     Type
  1803 ;;                  2    0[BANK0 ] unsigned int 
  1804 ;; Registers used:
  1805 ;;		wreg, status,2, status,0
  1806 ;; Tracked objects:
  1807 ;;		On entry : 0/0
  1808 ;;		On exit  : 0/0
  1809 ;;		Unchanged: 0/0
  1810 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1811 ;;      Params:         0       4       0       0       0       0       0
  1812 ;;      Locals:         0       1       0       0       0       0       0
  1813 ;;      Temps:          0       0       0       0       0       0       0
  1814 ;;      Totals:         0       5       0       0       0       0       0
  1815 ;;Total ram usage:        5 bytes
  1816 ;; Hardware stack levels used:    1
  1817 ;; Hardware stack levels required when called:   10
  1818 ;; This function calls:
  1819 ;;		Nothing
  1820 ;; This function is called by:
  1821 ;;		_updateLCD
  1822 ;; This function uses a non-reentrant model
  1823 ;;
  1824                           
  1825                           	psect	text4
  1826  00262A                     __ptext4:
  1827                           	opt callstack 0
  1828  00262A                     ___lwmod:
  1829                           	opt callstack 0
  1830  00262A  FFFF               	dw	65535	; assembler added errata NOP
  1831                           
  1832                           ;incstack = 0
  1833  00262C  0100               	movlb	0	; () banked
  1834  00262E  5182               	movf	___lwmod@divisor& (0+255),w,b
  1835  002630  1183               	iorwf	(___lwmod@divisor+1)& (0+255),w,b
  1836  002632  B4D8               	btfsc	status,2,c
  1837  002634  D01C               	goto	l1126
  1838                           
  1839                           ; BSR set to: 0
  1840  002636  0E01               	movlw	1
  1841  002638  6F84               	movwf	___lwmod@counter& (0+255),b
  1842  00263A  D005               	goto	l3926
  1843  00263C                     l3924:
  1844  00263C  FFFF               	dw	65535	; assembler added errata NOP
  1845                           
  1846                           ; BSR set to: 0
  1847  00263E  90D8               	bcf	status,0,c
  1848  002640  3782               	rlcf	___lwmod@divisor& (0+255),f,b
  1849  002642  3783               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
  1850  002644  2B84               	incf	___lwmod@counter& (0+255),f,b
  1851  002646                     l3926:
  1852  002646  FFFF               	dw	65535	; assembler added errata NOP
  1853                           
  1854                           ; BSR set to: 0
  1855  002648  AF83               	btfss	(___lwmod@divisor+1)& (0+255),7,b
  1856  00264A  D7F8               	goto	l3924
  1857  00264C                     u3350:
  1858  00264C  FFFF               	dw	65535	; assembler added errata NOP
  1859                           
  1860                           ; BSR set to: 0
  1861  00264E  5182               	movf	___lwmod@divisor& (0+255),w,b
  1862  002650  5D80               	subwf	___lwmod@dividend& (0+255),w,b
  1863  002652  5183               	movf	(___lwmod@divisor+1)& (0+255),w,b
  1864  002654  5981               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
  1865  002656  A0D8               	btfss	status,0,c
  1866  002658  D004               	goto	l3932
  1867                           
  1868                           ; BSR set to: 0
  1869  00265A  5182               	movf	___lwmod@divisor& (0+255),w,b
  1870  00265C  5F80               	subwf	___lwmod@dividend& (0+255),f,b
  1871  00265E  5183               	movf	(___lwmod@divisor+1)& (0+255),w,b
  1872  002660  5B81               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
  1873  002662                     l3932:
  1874  002662  FFFF               	dw	65535	; assembler added errata NOP
  1875                           
  1876                           ; BSR set to: 0
  1877  002664  90D8               	bcf	status,0,c
  1878  002666  3383               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
  1879  002668  3382               	rrcf	___lwmod@divisor& (0+255),f,b
  1880                           
  1881                           ; BSR set to: 0
  1882  00266A  2F84               	decfsz	___lwmod@counter& (0+255),f,b
  1883  00266C  D7EF               	goto	u3350
  1884  00266E                     l1126:
  1885  00266E  FFFF               	dw	65535	; assembler added errata NOP
  1886                           
  1887                           ; BSR set to: 0
  1888  002670  C080  F080         	movff	___lwmod@dividend,?___lwmod
  1889  002674  C081  F081         	movff	___lwmod@dividend+1,?___lwmod+1
  1890                           
  1891                           ; BSR set to: 0
  1892  002678  0012               	return		;funcret
  1893  00267A  FFFF               	dw	65535	; errata NOP
  1894  00267C                     __end_of___lwmod:
  1895                           	opt callstack 0
  1896                           
  1897 ;; *************** function ___lwdiv *****************
  1898 ;; Defined at:
  1899 ;;		line 7 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/lwdiv.c"
  1900 ;; Parameters:    Size  Location     Type
  1901 ;;  dividend        2    0[BANK0 ] unsigned int 
  1902 ;;  divisor         2    2[BANK0 ] unsigned int 
  1903 ;; Auto vars:     Size  Location     Type
  1904 ;;  quotient        2    4[BANK0 ] unsigned int 
  1905 ;;  counter         1    6[BANK0 ] unsigned char 
  1906 ;; Return value:  Size  Location     Type
  1907 ;;                  2    0[BANK0 ] unsigned int 
  1908 ;; Registers used:
  1909 ;;		wreg, status,2, status,0
  1910 ;; Tracked objects:
  1911 ;;		On entry : 0/0
  1912 ;;		On exit  : 0/0
  1913 ;;		Unchanged: 0/0
  1914 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1915 ;;      Params:         0       4       0       0       0       0       0
  1916 ;;      Locals:         0       3       0       0       0       0       0
  1917 ;;      Temps:          0       0       0       0       0       0       0
  1918 ;;      Totals:         0       7       0       0       0       0       0
  1919 ;;Total ram usage:        7 bytes
  1920 ;; Hardware stack levels used:    1
  1921 ;; Hardware stack levels required when called:   10
  1922 ;; This function calls:
  1923 ;;		Nothing
  1924 ;; This function is called by:
  1925 ;;		_updateLCD
  1926 ;; This function uses a non-reentrant model
  1927 ;;
  1928                           
  1929                           	psect	text5
  1930  0023FC                     __ptext5:
  1931                           	opt callstack 0
  1932  0023FC                     ___lwdiv:
  1933                           	opt callstack 0
  1934  0023FC  FFFF               	dw	65535	; assembler added errata NOP
  1935                           
  1936                           ; BSR set to: 0
  1937                           ;incstack = 0
  1938  0023FE  0E00               	movlw	0
  1939  002400  0100               	movlb	0	; () banked
  1940  002402  6F85               	movwf	(___lwdiv@quotient+1)& (0+255),b
  1941  002404  0E00               	movlw	0
  1942  002406  6F84               	movwf	___lwdiv@quotient& (0+255),b
  1943                           
  1944                           ; BSR set to: 0
  1945  002408  5182               	movf	___lwdiv@divisor& (0+255),w,b
  1946  00240A  1183               	iorwf	(___lwdiv@divisor+1)& (0+255),w,b
  1947  00240C  B4D8               	btfsc	status,2,c
  1948  00240E  D020               	goto	l1116
  1949                           
  1950                           ; BSR set to: 0
  1951  002410  0E01               	movlw	1
  1952  002412  6F86               	movwf	___lwdiv@counter& (0+255),b
  1953  002414  D005               	goto	l3906
  1954  002416                     l3904:
  1955  002416  FFFF               	dw	65535	; assembler added errata NOP
  1956                           
  1957                           ; BSR set to: 0
  1958  002418  90D8               	bcf	status,0,c
  1959  00241A  3782               	rlcf	___lwdiv@divisor& (0+255),f,b
  1960  00241C  3783               	rlcf	(___lwdiv@divisor+1)& (0+255),f,b
  1961  00241E  2B86               	incf	___lwdiv@counter& (0+255),f,b
  1962  002420                     l3906:
  1963  002420  FFFF               	dw	65535	; assembler added errata NOP
  1964                           
  1965                           ; BSR set to: 0
  1966  002422  AF83               	btfss	(___lwdiv@divisor+1)& (0+255),7,b
  1967  002424  D7F8               	goto	l3904
  1968  002426                     u3320:
  1969  002426  FFFF               	dw	65535	; assembler added errata NOP
  1970                           
  1971                           ; BSR set to: 0
  1972  002428  90D8               	bcf	status,0,c
  1973  00242A  3784               	rlcf	___lwdiv@quotient& (0+255),f,b
  1974  00242C  3785               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
  1975                           
  1976                           ; BSR set to: 0
  1977  00242E  5182               	movf	___lwdiv@divisor& (0+255),w,b
  1978  002430  5D80               	subwf	___lwdiv@dividend& (0+255),w,b
  1979  002432  5183               	movf	(___lwdiv@divisor+1)& (0+255),w,b
  1980  002434  5981               	subwfb	(___lwdiv@dividend+1)& (0+255),w,b
  1981  002436  A0D8               	btfss	status,0,c
  1982  002438  D005               	goto	l3916
  1983                           
  1984                           ; BSR set to: 0
  1985  00243A  5182               	movf	___lwdiv@divisor& (0+255),w,b
  1986  00243C  5F80               	subwf	___lwdiv@dividend& (0+255),f,b
  1987  00243E  5183               	movf	(___lwdiv@divisor+1)& (0+255),w,b
  1988  002440  5B81               	subwfb	(___lwdiv@dividend+1)& (0+255),f,b
  1989                           
  1990                           ; BSR set to: 0
  1991  002442  8184               	bsf	___lwdiv@quotient& (0+255),0,b
  1992  002444                     l3916:
  1993  002444  FFFF               	dw	65535	; assembler added errata NOP
  1994                           
  1995                           ; BSR set to: 0
  1996  002446  90D8               	bcf	status,0,c
  1997  002448  3383               	rrcf	(___lwdiv@divisor+1)& (0+255),f,b
  1998  00244A  3382               	rrcf	___lwdiv@divisor& (0+255),f,b
  1999                           
  2000                           ; BSR set to: 0
  2001  00244C  2F86               	decfsz	___lwdiv@counter& (0+255),f,b
  2002  00244E  D7EB               	goto	u3320
  2003  002450                     l1116:
  2004  002450  FFFF               	dw	65535	; assembler added errata NOP
  2005                           
  2006                           ; BSR set to: 0
  2007  002452  C084  F080         	movff	___lwdiv@quotient,?___lwdiv
  2008  002456  C085  F081         	movff	___lwdiv@quotient+1,?___lwdiv+1
  2009                           
  2010                           ; BSR set to: 0
  2011  00245A  0012               	return		;funcret
  2012  00245C  FFFF               	dw	65535	; errata NOP
  2013  00245E                     __end_of___lwdiv:
  2014                           	opt callstack 0
  2015                           
  2016 ;; *************** function _setFrequency *****************
  2017 ;; Defined at:
  2018 ;;		line 142 in file "main.c"
  2019 ;; Parameters:    Size  Location     Type
  2020 ;;		None
  2021 ;; Auto vars:     Size  Location     Type
  2022 ;;		None
  2023 ;; Return value:  Size  Location     Type
  2024 ;;                  1    wreg      void 
  2025 ;; Registers used:
  2026 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2027 ;; Tracked objects:
  2028 ;;		On entry : 0/0
  2029 ;;		On exit  : 0/0
  2030 ;;		Unchanged: 0/0
  2031 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2032 ;;      Params:         0       0       0       0       0       0       0
  2033 ;;      Locals:         0       0       0       0       0       0       0
  2034 ;;      Temps:          0       2       0       0       0       0       0
  2035 ;;      Totals:         0       2       0       0       0       0       0
  2036 ;;Total ram usage:        2 bytes
  2037 ;; Hardware stack levels used:    1
  2038 ;; Hardware stack levels required when called:   18
  2039 ;; This function calls:
  2040 ;;		_beep
  2041 ;;		_setData
  2042 ;;		_sprintf
  2043 ;;		_writeFrequency
  2044 ;; This function is called by:
  2045 ;;		_main
  2046 ;; This function uses a non-reentrant model
  2047 ;;
  2048                           
  2049                           	psect	text6
  2050  00103A                     __ptext6:
  2051                           	opt callstack 0
  2052  00103A                     _setFrequency:
  2053                           	opt callstack 0
  2054  00103A  FFFF               	dw	65535	; assembler added errata NOP
  2055                           
  2056                           ;main.c: 143:     isOnConfig = 1;
  2057                           
  2058                           ; BSR set to: 0
  2059                           ;incstack = 0
  2060  00103C  0E01               	movlw	1
  2061  00103E  0101               	movlb	1	; () banked
  2062  001040  6F03               	movwf	_isOnConfig& (0+255),b
  2063                           
  2064                           ; BSR set to: 1
  2065                           ;main.c: 144:     sprintf(lineOne,"SET   FREQUENCY ");
  2066  001042  0E35               	movlw	low _lineOne
  2067  001044  0100               	movlb	0	; () banked
  2068  001046  6FDB               	movwf	sprintf@s& (0+255),b
  2069  001048  0E01               	movlw	high _lineOne
  2070  00104A  6FDC               	movwf	(sprintf@s+1)& (0+255),b
  2071  00104C  0E28               	movlw	low STR_4
  2072  00104E  6FDD               	movwf	sprintf@fmt& (0+255),b
  2073  001050  0E06               	movlw	high STR_4
  2074  001052  6FDE               	movwf	(sprintf@fmt+1)& (0+255),b
  2075  001054  ECEA  F012         	call	_sprintf	;wreg free
  2076                           
  2077                           ;main.c: 145:     beep(200);
  2078  001058  0E00               	movlw	0
  2079  00105A  0100               	movlb	0	; () banked
  2080  00105C  6F87               	movwf	(beep@ms+1)& (0+255),b
  2081  00105E  0EC8               	movlw	200
  2082  001060  6F86               	movwf	beep@ms& (0+255),b
  2083  001062  ECBE  F012         	call	_beep	;wreg free
  2084  001066                     l237:
  2085  001066  FFFF               	dw	65535	; assembler added errata NOP
  2086  001068  A082               	btfss	3970,0,c	;volatile
  2087  00106A  D7FD               	goto	l237
  2088  00106C                     u3470:
  2089  00106C  FFFF               	dw	65535	; assembler added errata NOP
  2090                           
  2091                           ;main.c: 149:         if(!PORTCbits.RC1){
  2092                           
  2093                           ;main.c: 148:     while(1){
  2094  00106E  B282               	btfsc	3970,1,c	;volatile
  2095  001070  D051               	goto	u3530
  2096                           
  2097                           ;main.c: 150:             if(frequency < 1080)frequency++;
  2098  001072  0E38               	movlw	56
  2099  001074  0100               	movlb	0	; () banked
  2100  001076  5DF8               	subwf	_frequency& (0+255),w,b
  2101  001078  0E04               	movlw	4
  2102  00107A  59F9               	subwfb	(_frequency+1)& (0+255),w,b
  2103  00107C  B0D8               	btfsc	status,0,c
  2104  00107E  D002               	goto	l4076
  2105                           
  2106                           ; BSR set to: 0
  2107  001080  4BF8               	infsnz	_frequency& (0+255),f,b
  2108  001082  2BF9               	incf	(_frequency+1)& (0+255),f,b
  2109  001084                     l4076:
  2110  001084  FFFF               	dw	65535	; assembler added errata NOP
  2111                           
  2112                           ; BSR set to: 0
  2113                           ;main.c: 151:             if(frequency > 1080)frequency = 1080;
  2114  001086  0E39               	movlw	57
  2115  001088  5DF8               	subwf	_frequency& (0+255),w,b
  2116  00108A  0E04               	movlw	4
  2117  00108C  59F9               	subwfb	(_frequency+1)& (0+255),w,b
  2118  00108E  A0D8               	btfss	status,0,c
  2119  001090  D004               	goto	l4080
  2120                           
  2121                           ; BSR set to: 0
  2122  001092  0E04               	movlw	4
  2123  001094  6FF9               	movwf	(_frequency+1)& (0+255),b
  2124  001096  0E38               	movlw	56
  2125  001098  6FF8               	movwf	_frequency& (0+255),b
  2126  00109A                     l4080:
  2127  00109A  FFFF               	dw	65535	; assembler added errata NOP
  2128                           
  2129                           ; BSR set to: 0
  2130                           ;main.c: 152:             beep(100);
  2131  00109C  0E00               	movlw	0
  2132  00109E  6F87               	movwf	(beep@ms+1)& (0+255),b
  2133  0010A0  0E64               	movlw	100
  2134  0010A2  6F86               	movwf	beep@ms& (0+255),b
  2135  0010A4  ECBE  F012         	call	_beep	;wreg free
  2136                           
  2137                           ;main.c: 153:             _delay((unsigned long)((500)*(12000000/4000.0)));
  2138  0010A8  0E06               	movlw	6
  2139  0010AA  0100               	movlb	0	; () banked
  2140  0010AC  6FEE               	movwf	(??_setFrequency+1)& (0+255),b
  2141  0010AE  0EB6               	movlw	182
  2142  0010B0  6FED               	movwf	??_setFrequency& (0+255),b
  2143  0010B2  0EF8               	movlw	248
  2144  0010B4                     u3827:
  2145  0010B4  FFFF               	dw	65535	; errata NOP
  2146  0010B6  2EE8               	decfsz	wreg,f,c
  2147  0010B8  D7FD               	bra	u3827
  2148  0010BA  2FED               	decfsz	??_setFrequency& (0+255),f,b
  2149  0010BC  D7FB               	bra	u3827
  2150  0010BE  2FEE               	decfsz	(??_setFrequency+1)& (0+255),f,b
  2151  0010C0  D7F9               	bra	u3827
  2152  0010C2  D000               	nop2	
  2153  0010C4  D023               	goto	L1
  2154  0010C6                     l4084:
  2155  0010C6  FFFF               	dw	65535	; assembler added errata NOP
  2156                           
  2157                           ;main.c: 155:                 if(frequency < 1080)frequency++;
  2158  0010C8  0E38               	movlw	56
  2159  0010CA  0100               	movlb	0	; () banked
  2160  0010CC  5DF8               	subwf	_frequency& (0+255),w,b
  2161  0010CE  0E04               	movlw	4
  2162  0010D0  59F9               	subwfb	(_frequency+1)& (0+255),w,b
  2163  0010D2  B0D8               	btfsc	status,0,c
  2164  0010D4  D002               	goto	l4088
  2165                           
  2166                           ; BSR set to: 0
  2167  0010D6  4BF8               	infsnz	_frequency& (0+255),f,b
  2168  0010D8  2BF9               	incf	(_frequency+1)& (0+255),f,b
  2169  0010DA                     l4088:
  2170  0010DA  FFFF               	dw	65535	; assembler added errata NOP
  2171                           
  2172                           ; BSR set to: 0
  2173                           ;main.c: 156:                 if(frequency > 1080)frequency = 1080;
  2174  0010DC  0E39               	movlw	57
  2175  0010DE  5DF8               	subwf	_frequency& (0+255),w,b
  2176  0010E0  0E04               	movlw	4
  2177  0010E2  59F9               	subwfb	(_frequency+1)& (0+255),w,b
  2178  0010E4  A0D8               	btfss	status,0,c
  2179  0010E6  D004               	goto	l4092
  2180                           
  2181                           ; BSR set to: 0
  2182  0010E8  0E04               	movlw	4
  2183  0010EA  6FF9               	movwf	(_frequency+1)& (0+255),b
  2184  0010EC  0E38               	movlw	56
  2185  0010EE  6FF8               	movwf	_frequency& (0+255),b
  2186  0010F0                     l4092:
  2187  0010F0  FFFF               	dw	65535	; assembler added errata NOP
  2188                           
  2189                           ; BSR set to: 0
  2190                           ;main.c: 157:                 _delay((unsigned long)((100)*(12000000/4000.0)));
  2191  0010F2  0E02               	movlw	2
  2192  0010F4  0100               	movlb	0	; () banked
  2193  0010F6  6FEE               	movwf	(??_setFrequency+1)& (0+255),b
  2194  0010F8  0E25               	movlw	37
  2195  0010FA  6FED               	movwf	??_setFrequency& (0+255),b
  2196  0010FC  0E63               	movlw	99
  2197  0010FE                     u3837:
  2198  0010FE  FFFF               	dw	65535	; errata NOP
  2199  001100  2EE8               	decfsz	wreg,f,c
  2200  001102  D7FD               	bra	u3837
  2201  001104  2FED               	decfsz	??_setFrequency& (0+255),f,b
  2202  001106  D7FB               	bra	u3837
  2203  001108  2FEE               	decfsz	(??_setFrequency+1)& (0+255),f,b
  2204  00110A  D7F9               	bra	u3837
  2205  00110C                     L1:
  2206  00110C  FFFF               	dw	65535	; assembler added errata NOP
  2207  00110E  F000               	nop	
  2208                           
  2209                           ;main.c: 154:             while(!PORTCbits.RC1){
  2210  001110  A282               	btfss	3970,1,c	;volatile
  2211  001112  D7D9               	goto	l4084
  2212  001114                     u3530:
  2213  001114  FFFF               	dw	65535	; assembler added errata NOP
  2214                           
  2215                           ;main.c: 161:         if(!PORTCbits.RC2){
  2216                           
  2217                           ;main.c: 159:         }
  2218  001116  B482               	btfsc	3970,2,c	;volatile
  2219  001118  D053               	goto	u3590
  2220                           
  2221                           ;main.c: 162:             if(frequency > 880)frequency--;
  2222  00111A  0E71               	movlw	113
  2223  00111C  0100               	movlb	0	; () banked
  2224  00111E  5DF8               	subwf	_frequency& (0+255),w,b
  2225  001120  0E03               	movlw	3
  2226  001122  59F9               	subwfb	(_frequency+1)& (0+255),w,b
  2227  001124  A0D8               	btfss	status,0,c
  2228  001126  D003               	goto	l4100
  2229                           
  2230                           ; BSR set to: 0
  2231  001128  07F8               	decf	_frequency& (0+255),f,b
  2232  00112A  A0D8               	btfss	status,0,c
  2233  00112C  07F9               	decf	(_frequency+1)& (0+255),f,b
  2234  00112E                     l4100:
  2235  00112E  FFFF               	dw	65535	; assembler added errata NOP
  2236                           
  2237                           ; BSR set to: 0
  2238                           ;main.c: 163:             if(frequency < 880)frequency = 880;
  2239  001130  0E70               	movlw	112
  2240  001132  5DF8               	subwf	_frequency& (0+255),w,b
  2241  001134  0E03               	movlw	3
  2242  001136  59F9               	subwfb	(_frequency+1)& (0+255),w,b
  2243  001138  B0D8               	btfsc	status,0,c
  2244  00113A  D004               	goto	l4104
  2245                           
  2246                           ; BSR set to: 0
  2247  00113C  0E03               	movlw	3
  2248  00113E  6FF9               	movwf	(_frequency+1)& (0+255),b
  2249  001140  0E70               	movlw	112
  2250  001142  6FF8               	movwf	_frequency& (0+255),b
  2251  001144                     l4104:
  2252  001144  FFFF               	dw	65535	; assembler added errata NOP
  2253                           
  2254                           ; BSR set to: 0
  2255                           ;main.c: 164:             beep(100);
  2256  001146  0E00               	movlw	0
  2257  001148  6F87               	movwf	(beep@ms+1)& (0+255),b
  2258  00114A  0E64               	movlw	100
  2259  00114C  6F86               	movwf	beep@ms& (0+255),b
  2260  00114E  ECBE  F012         	call	_beep	;wreg free
  2261                           
  2262                           ;main.c: 165:             _delay((unsigned long)((500)*(12000000/4000.0)));
  2263  001152  0E06               	movlw	6
  2264  001154  0100               	movlb	0	; () banked
  2265  001156  6FEE               	movwf	(??_setFrequency+1)& (0+255),b
  2266  001158  0EB6               	movlw	182
  2267  00115A  6FED               	movwf	??_setFrequency& (0+255),b
  2268  00115C  0EF8               	movlw	248
  2269  00115E                     u3847:
  2270  00115E  FFFF               	dw	65535	; errata NOP
  2271  001160  2EE8               	decfsz	wreg,f,c
  2272  001162  D7FD               	bra	u3847
  2273  001164  2FED               	decfsz	??_setFrequency& (0+255),f,b
  2274  001166  D7FB               	bra	u3847
  2275  001168  2FEE               	decfsz	(??_setFrequency+1)& (0+255),f,b
  2276  00116A  D7F9               	bra	u3847
  2277  00116C  D000               	nop2	
  2278  00116E  D024               	goto	L2
  2279  001170                     l4108:
  2280  001170  FFFF               	dw	65535	; assembler added errata NOP
  2281                           
  2282                           ;main.c: 167:                 if(frequency > 880)frequency--;
  2283  001172  0E71               	movlw	113
  2284  001174  0100               	movlb	0	; () banked
  2285  001176  5DF8               	subwf	_frequency& (0+255),w,b
  2286  001178  0E03               	movlw	3
  2287  00117A  59F9               	subwfb	(_frequency+1)& (0+255),w,b
  2288  00117C  A0D8               	btfss	status,0,c
  2289  00117E  D003               	goto	l4112
  2290                           
  2291                           ; BSR set to: 0
  2292  001180  07F8               	decf	_frequency& (0+255),f,b
  2293  001182  A0D8               	btfss	status,0,c
  2294  001184  07F9               	decf	(_frequency+1)& (0+255),f,b
  2295  001186                     l4112:
  2296  001186  FFFF               	dw	65535	; assembler added errata NOP
  2297                           
  2298                           ; BSR set to: 0
  2299                           ;main.c: 168:                 if(frequency < 880)frequency = 880;
  2300  001188  0E70               	movlw	112
  2301  00118A  5DF8               	subwf	_frequency& (0+255),w,b
  2302  00118C  0E03               	movlw	3
  2303  00118E  59F9               	subwfb	(_frequency+1)& (0+255),w,b
  2304  001190  B0D8               	btfsc	status,0,c
  2305  001192  D004               	goto	l4116
  2306                           
  2307                           ; BSR set to: 0
  2308  001194  0E03               	movlw	3
  2309  001196  6FF9               	movwf	(_frequency+1)& (0+255),b
  2310  001198  0E70               	movlw	112
  2311  00119A  6FF8               	movwf	_frequency& (0+255),b
  2312  00119C                     l4116:
  2313  00119C  FFFF               	dw	65535	; assembler added errata NOP
  2314                           
  2315                           ; BSR set to: 0
  2316                           ;main.c: 169:                 _delay((unsigned long)((100)*(12000000/4000.0)));
  2317  00119E  0E02               	movlw	2
  2318  0011A0  0100               	movlb	0	; () banked
  2319  0011A2  6FEE               	movwf	(??_setFrequency+1)& (0+255),b
  2320  0011A4  0E25               	movlw	37
  2321  0011A6  6FED               	movwf	??_setFrequency& (0+255),b
  2322  0011A8  0E63               	movlw	99
  2323  0011AA                     u3857:
  2324  0011AA  FFFF               	dw	65535	; errata NOP
  2325  0011AC  2EE8               	decfsz	wreg,f,c
  2326  0011AE  D7FD               	bra	u3857
  2327  0011B0  2FED               	decfsz	??_setFrequency& (0+255),f,b
  2328  0011B2  D7FB               	bra	u3857
  2329  0011B4  2FEE               	decfsz	(??_setFrequency+1)& (0+255),f,b
  2330  0011B6  D7F9               	bra	u3857
  2331  0011B8                     L2:
  2332  0011B8  FFFF               	dw	65535	; assembler added errata NOP
  2333  0011BA  F000               	nop	
  2334                           
  2335                           ;main.c: 166:             while(!PORTCbits.RC2){
  2336  0011BC  A482               	btfss	3970,2,c	;volatile
  2337  0011BE  D7D8               	goto	l4108
  2338  0011C0                     u3590:
  2339  0011C0  FFFF               	dw	65535	; assembler added errata NOP
  2340                           
  2341                           ;main.c: 173:         if(!PORTCbits.RC0){
  2342                           
  2343                           ;main.c: 171:         }
  2344  0011C2  B082               	btfsc	3970,0,c	;volatile
  2345  0011C4  D753               	goto	u3470
  2346                           
  2347                           ;main.c: 174:             _delay((unsigned long)((500)*(12000000/4000.0)));
  2348  0011C6  0E06               	movlw	6
  2349  0011C8  0100               	movlb	0	; () banked
  2350  0011CA  6FEE               	movwf	(??_setFrequency+1)& (0+255),b
  2351  0011CC  0EB6               	movlw	182
  2352  0011CE  6FED               	movwf	??_setFrequency& (0+255),b
  2353  0011D0  0EF8               	movlw	248
  2354  0011D2                     u3867:
  2355  0011D2  FFFF               	dw	65535	; errata NOP
  2356  0011D4  2EE8               	decfsz	wreg,f,c
  2357  0011D6  D7FD               	bra	u3867
  2358  0011D8  2FED               	decfsz	??_setFrequency& (0+255),f,b
  2359  0011DA  D7FB               	bra	u3867
  2360  0011DC  2FEE               	decfsz	(??_setFrequency+1)& (0+255),f,b
  2361  0011DE  D7F9               	bra	u3867
  2362  0011E0  D000               	nop2	
  2363  0011E2  F000               	nop	
  2364                           
  2365                           ;main.c: 175:             if(!PORTCbits.RC0){
  2366  0011E4  B082               	btfsc	3970,0,c	;volatile
  2367  0011E6  D742               	goto	u3470
  2368                           
  2369                           ;main.c: 176:                 setData(1);
  2370  0011E8  0E01               	movlw	1
  2371  0011EA  ECB6  F010         	call	_setData
  2372                           
  2373                           ;main.c: 177:                 beep(1000);
  2374  0011EE  0E03               	movlw	3
  2375  0011F0  0100               	movlb	0	; () banked
  2376  0011F2  6F87               	movwf	(beep@ms+1)& (0+255),b
  2377  0011F4  0EE8               	movlw	232
  2378  0011F6  6F86               	movwf	beep@ms& (0+255),b
  2379  0011F8  ECBE  F012         	call	_beep	;wreg free
  2380                           
  2381                           ;main.c: 182:     writeFrequency(frequency);
  2382                           
  2383                           ;main.c: 178:                 break;
  2384  0011FC  C0F8  F082         	movff	_frequency,writeFrequency@f
  2385  001200  C0F9  F083         	movff	_frequency+1,writeFrequency@f+1
  2386  001204  EC3D  F00E         	call	_writeFrequency	;wreg free
  2387                           
  2388                           ;main.c: 183:     isOnConfig = 0;
  2389  001208  0E00               	movlw	0
  2390  00120A  0101               	movlb	1	; () banked
  2391  00120C  6F03               	movwf	_isOnConfig& (0+255),b
  2392                           
  2393                           ; BSR set to: 1
  2394  00120E  0012               	return		;funcret
  2395  001210  FFFF               	dw	65535	; errata NOP
  2396  001212                     __end_of_setFrequency:
  2397                           	opt callstack 0
  2398                           
  2399 ;; *************** function _sprintf *****************
  2400 ;; Defined at:
  2401 ;;		line 9 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/nf_sprintf.c"
  2402 ;; Parameters:    Size  Location     Type
  2403 ;;  s               2   91[BANK0 ] PTR unsigned char 
  2404 ;;		 -> lineTwo(17), lineOne(17), 
  2405 ;;  fmt             2   93[BANK0 ] PTR const unsigned char 
  2406 ;;		 -> STR_5(18), STR_4(17), STR_3(17), STR_2(17), 
  2407 ;;		 -> STR_1(17), 
  2408 ;; Auto vars:     Size  Location     Type
  2409 ;;  f               6  103[BANK0 ] struct _IO_FILE
  2410 ;;  ap              2  101[BANK0 ] PTR void [1]
  2411 ;;		 -> ?_sprintf(2), 
  2412 ;;  ret             2    0        int 
  2413 ;; Return value:  Size  Location     Type
  2414 ;;                  2   91[BANK0 ] int 
  2415 ;; Registers used:
  2416 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2417 ;; Tracked objects:
  2418 ;;		On entry : 0/0
  2419 ;;		On exit  : 0/0
  2420 ;;		Unchanged: 0/0
  2421 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2422 ;;      Params:         0       8       0       0       0       0       0
  2423 ;;      Locals:         0      10       0       0       0       0       0
  2424 ;;      Temps:          0       0       0       0       0       0       0
  2425 ;;      Totals:         0      18       0       0       0       0       0
  2426 ;;Total ram usage:       18 bytes
  2427 ;; Hardware stack levels used:    1
  2428 ;; Hardware stack levels required when called:   17
  2429 ;; This function calls:
  2430 ;;		_vfprintf
  2431 ;; This function is called by:
  2432 ;;		_main
  2433 ;;		_setFrequency
  2434 ;;		_updateLCD
  2435 ;; This function uses a non-reentrant model
  2436 ;;
  2437                           
  2438                           	psect	text7
  2439  0025D4                     __ptext7:
  2440                           	opt callstack 0
  2441  0025D4                     _sprintf:
  2442                           	opt callstack 0
  2443  0025D4  FFFF               	dw	65535	; assembler added errata NOP
  2444                           
  2445                           ; BSR set to: 1
  2446                           ;incstack = 0
  2447  0025D6  0EDF               	movlw	low (?_sprintf+4)
  2448  0025D8  0100               	movlb	0	; () banked
  2449  0025DA  6FE5               	movwf	sprintf@ap& (0+255),b
  2450  0025DC  0E00               	movlw	high (?_sprintf+4)
  2451  0025DE  6FE6               	movwf	(sprintf@ap+1)& (0+255),b
  2452  0025E0  C0DB  F0E7         	movff	sprintf@s,sprintf@f
  2453  0025E4  C0DC  F0E8         	movff	sprintf@s+1,sprintf@f+1
  2454                           
  2455                           ; BSR set to: 0
  2456  0025E8  0E00               	movlw	0
  2457  0025EA  6FEA               	movwf	(sprintf@f+3)& (0+255),b
  2458  0025EC  0E00               	movlw	0
  2459  0025EE  6FE9               	movwf	(sprintf@f+2)& (0+255),b
  2460                           
  2461                           ; BSR set to: 0
  2462  0025F0  0E00               	movlw	0
  2463  0025F2  6FEC               	movwf	(sprintf@f+5)& (0+255),b
  2464  0025F4  0E00               	movlw	0
  2465  0025F6  6FEB               	movwf	(sprintf@f+4)& (0+255),b
  2466                           
  2467                           ; BSR set to: 0
  2468  0025F8  0EE7               	movlw	low sprintf@f
  2469  0025FA  6FD3               	movwf	vfprintf@fp& (0+255),b
  2470  0025FC  0E00               	movlw	high sprintf@f
  2471  0025FE  6FD4               	movwf	(vfprintf@fp+1)& (0+255),b
  2472  002600  C0DD  F0D5         	movff	sprintf@fmt,vfprintf@fmt
  2473  002604  C0DE  F0D6         	movff	sprintf@fmt+1,vfprintf@fmt+1
  2474  002608  0EE5               	movlw	low sprintf@ap
  2475  00260A  6FD7               	movwf	vfprintf@ap& (0+255),b
  2476  00260C  0E00               	movlw	high sprintf@ap
  2477  00260E  6FD8               	movwf	(vfprintf@ap+1)& (0+255),b
  2478  002610  EC96  F011         	call	_vfprintf	;wreg free
  2479  002614  0100               	movlb	0	; () banked
  2480  002616  51E9               	movf	(sprintf@f+2)& (0+255),w,b
  2481  002618  25DB               	addwf	sprintf@s& (0+255),w,b
  2482  00261A  6ED9               	movwf	fsr2l,c
  2483  00261C  51EA               	movf	(sprintf@f+3)& (0+255),w,b
  2484  00261E  21DC               	addwfc	(sprintf@s+1)& (0+255),w,b
  2485  002620  6EDA               	movwf	fsr2h,c
  2486  002622  0E00               	movlw	0
  2487  002624  6EDF               	movwf	indf2,c
  2488                           
  2489                           ; BSR set to: 0
  2490  002626  0012               	return		;funcret
  2491  002628  FFFF               	dw	65535	; errata NOP
  2492  00262A                     __end_of_sprintf:
  2493                           	opt callstack 0
  2494                           
  2495 ;; *************** function _vfprintf *****************
  2496 ;; Defined at:
  2497 ;;		line 1368 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  2498 ;; Parameters:    Size  Location     Type
  2499 ;;  fp              2   83[BANK0 ] PTR struct _IO_FILE
  2500 ;;		 -> sprintf@f(6), 
  2501 ;;  fmt             2   85[BANK0 ] PTR const unsigned char 
  2502 ;;		 -> STR_5(18), STR_4(17), STR_3(17), STR_2(17), 
  2503 ;;		 -> STR_1(17), 
  2504 ;;  ap              2   87[BANK0 ] PTR PTR void 
  2505 ;;		 -> sprintf@ap(2), 
  2506 ;; Auto vars:     Size  Location     Type
  2507 ;;  cfmt            2   89[BANK0 ] PTR unsigned char 
  2508 ;;		 -> STR_5(18), STR_4(17), STR_3(17), STR_2(17), 
  2509 ;;		 -> STR_1(17), 
  2510 ;; Return value:  Size  Location     Type
  2511 ;;                  2   83[BANK0 ] int 
  2512 ;; Registers used:
  2513 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2514 ;; Tracked objects:
  2515 ;;		On entry : 0/0
  2516 ;;		On exit  : 0/0
  2517 ;;		Unchanged: 0/0
  2518 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2519 ;;      Params:         0       6       0       0       0       0       0
  2520 ;;      Locals:         0       2       0       0       0       0       0
  2521 ;;      Temps:          0       0       0       0       0       0       0
  2522 ;;      Totals:         0       8       0       0       0       0       0
  2523 ;;Total ram usage:        8 bytes
  2524 ;; Hardware stack levels used:    1
  2525 ;; Hardware stack levels required when called:   16
  2526 ;; This function calls:
  2527 ;;		_vfpfcnvrt
  2528 ;; This function is called by:
  2529 ;;		_sprintf
  2530 ;; This function uses a non-reentrant model
  2531 ;;
  2532                           
  2533                           	psect	text8
  2534  00232C                     __ptext8:
  2535                           	opt callstack 0
  2536  00232C                     _vfprintf:
  2537                           	opt callstack 0
  2538  00232C  FFFF               	dw	65535	; assembler added errata NOP
  2539                           
  2540                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1368: int vfprintf(FILE *fp, 
      +                          const char *fmt, va_list ap);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1
      +                          369: {;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1371:     char *cfmt;;/
      +                          opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1373:     cfmt = (char *)fmt;
  2541                           
  2542                           ; BSR set to: 0
  2543                           ;incstack = 0
  2544  00232E  C0D5  F0D9         	movff	vfprintf@fmt,vfprintf@cfmt
  2545  002332  C0D6  F0DA         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  2546                           
  2547                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1374:     nout = 0;
  2548  002336  0E00               	movlw	0
  2549  002338  0101               	movlb	1	; () banked
  2550  00233A  6F01               	movwf	(_nout+1)& (0+255),b
  2551  00233C  0E00               	movlw	0
  2552  00233E  6F00               	movwf	_nout& (0+255),b
  2553                           
  2554                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
  2555  002340  D018               	goto	l3756
  2556  002342                     l3754:
  2557  002342  FFFF               	dw	65535	; assembler added errata NOP
  2558                           
  2559                           ; BSR set to: 1
  2560                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1376:         nout += vfpfcnv
      +                          rt(fp, &cfmt, ap);
  2561  002344  C0D3  F0BF         	movff	vfprintf@fp,vfpfcnvrt@fp
  2562  002348  C0D4  F0C0         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  2563  00234C  0ED9               	movlw	low vfprintf@cfmt
  2564  00234E  0100               	movlb	0	; () banked
  2565  002350  6FC1               	movwf	vfpfcnvrt@fmt& (0+255),b
  2566  002352  0E00               	movlw	high vfprintf@cfmt
  2567  002354  6FC2               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
  2568  002356  C0D7  F0C3         	movff	vfprintf@ap,vfpfcnvrt@ap
  2569  00235A  C0D8  F0C4         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  2570  00235E  EC2E  F003         	call	_vfpfcnvrt	;wreg free
  2571  002362  0100               	movlb	0	; () banked
  2572  002364  51BF               	movf	?_vfpfcnvrt& (0+255),w,b
  2573  002366  0101               	movlb	1	; () banked
  2574  002368  2700               	addwf	_nout& (0+255),f,b
  2575  00236A  0100               	movlb	0	; () banked
  2576  00236C  51C0               	movf	(?_vfpfcnvrt+1)& (0+255),w,b
  2577  00236E  0101               	movlb	1	; () banked
  2578  002370  2301               	addwfc	(_nout+1)& (0+255),f,b
  2579  002372                     l3756:
  2580  002372  FFFF               	dw	65535	; assembler added errata NOP
  2581                           
  2582                           ; BSR set to: 1
  2583                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
  2584  002374  C0D9  FFF6         	movff	vfprintf@cfmt,tblptrl
  2585  002378  C0DA  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  2586  00237C                     	if	0	;tblptru may be non-zero
  2587  00237C                     	endif
  2588  00237C                     	if	0	;tblptru may be non-zero
  2589  00237C                     	endif
  2590  00237C  0008               	tblrd		*
  2591  00237E  FFFF               	dw	65535	; errata NOP
  2592  002380  50F5               	movf	tablat,w,c
  2593  002382  0900               	iorlw	0
  2594  002384  A4D8               	btfss	status,2,c
  2595  002386  D7DD               	goto	l3754
  2596                           
  2597                           ; BSR set to: 1
  2598                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1378:     return nout;
  2599  002388  C100  F0D3         	movff	_nout,?_vfprintf
  2600  00238C  C101  F0D4         	movff	_nout+1,?_vfprintf+1
  2601                           
  2602                           ; BSR set to: 1
  2603  002390  0012               	return		;funcret
  2604  002392  FFFF               	dw	65535	; errata NOP
  2605  002394                     __end_of_vfprintf:
  2606                           	opt callstack 0
  2607                           
  2608 ;; *************** function _vfpfcnvrt *****************
  2609 ;; Defined at:
  2610 ;;		line 670 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  2611 ;; Parameters:    Size  Location     Type
  2612 ;;  fp              2   63[BANK0 ] PTR struct _IO_FILE
  2613 ;;		 -> sprintf@f(6), 
  2614 ;;  fmt             2   65[BANK0 ] PTR PTR unsigned char 
  2615 ;;		 -> vfprintf@cfmt(2), 
  2616 ;;  ap              2   67[BANK0 ] PTR PTR void 
  2617 ;;		 -> sprintf@ap(2), 
  2618 ;; Auto vars:     Size  Location     Type
  2619 ;;  ll              8   73[BANK0 ] long long 
  2620 ;;  llu             8    0        unsigned long long 
  2621 ;;  f               4    0        unsigned long long 
  2622 ;;  vp              3    0        PTR void 
  2623 ;;  ct              3    0        unsigned char [3]
  2624 ;;  cp              3    0        PTR unsigned char 
  2625 ;;  i               2    0        int 
  2626 ;;  done            2    0        int 
  2627 ;;  c               1    0        unsigned char 
  2628 ;; Return value:  Size  Location     Type
  2629 ;;                  2   63[BANK0 ] int 
  2630 ;; Registers used:
  2631 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2632 ;; Tracked objects:
  2633 ;;		On entry : 0/0
  2634 ;;		On exit  : 0/0
  2635 ;;		Unchanged: 0/0
  2636 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2637 ;;      Params:         0       6       0       0       0       0       0
  2638 ;;      Locals:         0      10       0       0       0       0       0
  2639 ;;      Temps:          0       4       0       0       0       0       0
  2640 ;;      Totals:         0      20       0       0       0       0       0
  2641 ;;Total ram usage:       20 bytes
  2642 ;; Hardware stack levels used:    1
  2643 ;; Hardware stack levels required when called:   15
  2644 ;; This function calls:
  2645 ;;		_atoi
  2646 ;;		_dtoa
  2647 ;;		_fputc
  2648 ;;		_isdigit
  2649 ;; This function is called by:
  2650 ;;		_vfprintf
  2651 ;; This function uses a non-reentrant model
  2652 ;;
  2653                           
  2654                           	psect	text9
  2655  00065C                     __ptext9:
  2656                           	opt callstack 0
  2657  00065C                     _vfpfcnvrt:
  2658                           	opt callstack 0
  2659  00065C  FFFF               	dw	65535	; assembler added errata NOP
  2660                           
  2661                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 670: static int vfpfcnvrt(FIL
      +                          E *fp, char *fmt[], va_list ap);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c
      +                          : 671: {;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 672:     char c, *cp,
      +                           ct[3];;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 673:     int done, i;;
      +                          /opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 674:     long long ll;;/opt/mi
      +                          crochip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 675:     unsigned long long llu;
  2662                           
  2663                           ; BSR set to: 1
  2664                           ;incstack = 0
  2665  00065E  C0C1  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2666  000662  C0C2  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2667  000666  CFDE FFF6          	movff	postinc2,tblptrl
  2668  00066A  CFDD FFF7          	movff	postdec2,tblptrh
  2669  00066E                     	if	0	;tblptru may be non-zero
  2670  00066E                     	endif
  2671  00066E                     	if	0	;tblptru may be non-zero
  2672  00066E                     	endif
  2673  00066E  0008               	tblrd		*
  2674  000670  FFFF               	dw	65535	; errata NOP
  2675  000672  50F5               	movf	tablat,w,c
  2676  000674  0A25               	xorlw	37
  2677  000676  A4D8               	btfss	status,2,c
  2678  000678  D114               	goto	l3542
  2679                           
  2680                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 681:         ++*fmt;
  2681  00067A  C0C1  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2682  00067E  C0C2  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2683  000682  2ADE               	incf	postinc2,f,c
  2684  000684  0E00               	movlw	0
  2685  000686  22DD               	addwfc	postdec2,f,c
  2686                           
  2687                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 683:         flags = width = 
      +                          0;
  2688  000688  0E00               	movlw	0
  2689  00068A  0100               	movlb	0	; () banked
  2690  00068C  6FF3               	movwf	(_width+1)& (0+255),b
  2691  00068E  0E00               	movlw	0
  2692  000690  6FF2               	movwf	_width& (0+255),b
  2693  000692  C0F2  F0F6         	movff	_width,_flags
  2694  000696  C0F3  F0F7         	movff	_width+1,_flags+1
  2695                           
  2696                           ; BSR set to: 0
  2697                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 684:         prec = -1;
  2698  00069A  69F4               	setf	_prec& (0+255),b
  2699  00069C  69F5               	setf	(_prec+1)& (0+255),b
  2700                           
  2701                           ; BSR set to: 0
  2702                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 723:         if ((*fmt)[0] ==
      +                           '*') {
  2703  00069E  C0C1  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2704  0006A2  C0C2  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2705  0006A6  CFDE FFF6          	movff	postinc2,tblptrl
  2706  0006AA  CFDD FFF7          	movff	postdec2,tblptrh
  2707  0006AE                     	if	0	;tblptru may be non-zero
  2708  0006AE                     	endif
  2709  0006AE                     	if	0	;tblptru may be non-zero
  2710  0006AE                     	endif
  2711  0006AE  0008               	tblrd		*
  2712  0006B0  FFFF               	dw	65535	; errata NOP
  2713  0006B2  50F5               	movf	tablat,w,c
  2714  0006B4  0A2A               	xorlw	42
  2715  0006B6  A4D8               	btfss	status,2,c
  2716  0006B8  D023               	goto	l3506
  2717                           
  2718                           ; BSR set to: 0
  2719                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 724:             ++*fmt;
  2720  0006BA  C0C1  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2721  0006BE  C0C2  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2722  0006C2  2ADE               	incf	postinc2,f,c
  2723  0006C4  0E00               	movlw	0
  2724  0006C6  22DD               	addwfc	postdec2,f,c
  2725                           
  2726                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 725:             width = (*(i
      +                          nt *)__va_arg(*(int **)ap, (int)0));
  2727  0006C8  C0C3  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2728  0006CC  C0C4  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2729  0006D0  CFDF F0C5          	movff	indf2,??_vfpfcnvrt
  2730  0006D4  0E02               	movlw	2
  2731  0006D6  26DE               	addwf	postinc2,f,c
  2732  0006D8  CFDF F0C6          	movff	indf2,??_vfpfcnvrt+1
  2733  0006DC  0E00               	movlw	0
  2734  0006DE  22DD               	addwfc	postdec2,f,c
  2735  0006E0  C0C5  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2736  0006E4  C0C6  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2737  0006E8  CFDE F0F2          	movff	postinc2,_width
  2738  0006EC  CFDD F0F3          	movff	postdec2,_width+1
  2739                           
  2740                           ; BSR set to: 0
  2741                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 726:             if (width < 
      +                          0) {
  2742  0006F0  AFF3               	btfss	(_width+1)& (0+255),7,b
  2743  0006F2  D046               	goto	u2940
  2744                           
  2745                           ; BSR set to: 0
  2746                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 727:                 flags |=
      +                           (1 << 0);
  2747  0006F4  81F6               	bsf	_flags& (0+255),0,b
  2748                           
  2749                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 728:                 width = 
      +                          -width;
  2750  0006F6  6DF2               	negf	_width& (0+255),b
  2751  0006F8  1FF3               	comf	(_width+1)& (0+255),f,b
  2752  0006FA  B0D8               	btfsc	status,0,c
  2753  0006FC  2BF3               	incf	(_width+1)& (0+255),f,b
  2754  0006FE  D040               	goto	u2940
  2755  000700                     l3506:
  2756  000700  FFFF               	dw	65535	; assembler added errata NOP
  2757                           
  2758                           ; BSR set to: 0
  2759                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 731:             width = atoi
      +                          (*fmt);
  2760  000702  C0C1  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2761  000706  C0C2  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2762  00070A  CFDE F087          	movff	postinc2,atoi@s
  2763  00070E  CFDD F088          	movff	postdec2,atoi@s+1
  2764  000712  ECC0  F009         	call	_atoi	;wreg free
  2765  000716  C087  F0F2         	movff	?_atoi,_width
  2766  00071A  C088  F0F3         	movff	?_atoi+1,_width+1
  2767                           
  2768                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 732:             while ((0 ? 
      +                          isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  2769  00071E  D008               	goto	l3510
  2770  000720                     l3508:
  2771  000720  FFFF               	dw	65535	; assembler added errata NOP
  2772                           
  2773                           ; BSR set to: 0
  2774                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 733:                 ++*fmt;
  2775  000722  C0C1  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2776  000726  C0C2  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2777  00072A  2ADE               	incf	postinc2,f,c
  2778  00072C  0E00               	movlw	0
  2779  00072E  22DD               	addwfc	postdec2,f,c
  2780  000730                     l3510:
  2781  000730  FFFF               	dw	65535	; assembler added errata NOP
  2782  000732  0ED0               	movlw	208
  2783  000734  0100               	movlb	0	; () banked
  2784  000736  6FC5               	movwf	??_vfpfcnvrt& (0+255),b
  2785  000738  0EFF               	movlw	255
  2786  00073A  6FC6               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  2787  00073C  C0C1  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2788  000740  C0C2  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2789  000744  CFDE FFF6          	movff	postinc2,tblptrl
  2790  000748  CFDD FFF7          	movff	postdec2,tblptrh
  2791  00074C                     	if	0	;tblptru may be non-zero
  2792  00074C                     	endif
  2793  00074C                     	if	0	;tblptru may be non-zero
  2794  00074C                     	endif
  2795  00074C  0008               	tblrd		*
  2796  00074E  FFFF               	dw	65535	; errata NOP
  2797  000750  50F5               	movf	tablat,w,c
  2798  000752  6FC7               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  2799  000754  6BC8               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  2800  000756  51C5               	movf	??_vfpfcnvrt& (0+255),w,b
  2801  000758  27C7               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  2802  00075A  51C6               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  2803  00075C  23C8               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  2804  00075E  51C8               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  2805  000760  E106               	bnz	u2920
  2806  000762  0E0A               	movlw	10
  2807  000764  5DC7               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  2808  000766  B0D8               	btfsc	status,0,c
  2809  000768  D002               	goto	u2920
  2810  00076A  0E01               	movlw	1
  2811  00076C  D002               	goto	u2930
  2812  00076E                     u2920:
  2813  00076E  FFFF               	dw	65535	; assembler added errata NOP
  2814  000770  0E00               	movlw	0
  2815  000772                     u2930:
  2816  000772  FFFF               	dw	65535	; assembler added errata NOP
  2817  000774  6FD1               	movwf	_vfpfcnvrt$954& (0+255),b
  2818  000776  6BD2               	clrf	(_vfpfcnvrt$954+1)& (0+255),b
  2819                           
  2820                           ; BSR set to: 0
  2821  000778  51D1               	movf	_vfpfcnvrt$954& (0+255),w,b
  2822  00077A  11D2               	iorwf	(_vfpfcnvrt$954+1)& (0+255),w,b
  2823  00077C  A4D8               	btfss	status,2,c
  2824  00077E  D7D0               	goto	l3508
  2825  000780                     u2940:
  2826  000780  FFFF               	dw	65535	; assembler added errata NOP
  2827                           
  2828                           ; BSR set to: 0
  2829                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 825:         if ((*fmt[0] == 
      +                          'd') || (*fmt[0] == 'i')) {
  2830  000782  C0C1  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2831  000786  C0C2  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2832  00078A  CFDE FFF6          	movff	postinc2,tblptrl
  2833  00078E  CFDD FFF7          	movff	postdec2,tblptrh
  2834  000792                     	if	0	;tblptru may be non-zero
  2835  000792                     	endif
  2836  000792                     	if	0	;tblptru may be non-zero
  2837  000792                     	endif
  2838  000792  0008               	tblrd		*
  2839  000794  FFFF               	dw	65535	; errata NOP
  2840  000796  50F5               	movf	tablat,w,c
  2841  000798  0A64               	xorlw	100
  2842  00079A  B4D8               	btfsc	status,2,c
  2843  00079C  D00E               	goto	u2960
  2844                           
  2845                           ; BSR set to: 0
  2846  00079E  C0C1  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2847  0007A2  C0C2  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2848  0007A6  CFDE FFF6          	movff	postinc2,tblptrl
  2849  0007AA  CFDD FFF7          	movff	postdec2,tblptrh
  2850  0007AE                     	if	0	;tblptru may be non-zero
  2851  0007AE                     	endif
  2852  0007AE                     	if	0	;tblptru may be non-zero
  2853  0007AE                     	endif
  2854  0007AE  0008               	tblrd		*
  2855  0007B0  FFFF               	dw	65535	; errata NOP
  2856  0007B2  50F5               	movf	tablat,w,c
  2857  0007B4  0A69               	xorlw	105
  2858  0007B6  A4D8               	btfss	status,2,c
  2859  0007B8  D040               	goto	l3526
  2860  0007BA                     u2960:
  2861  0007BA  FFFF               	dw	65535	; assembler added errata NOP
  2862                           
  2863                           ; BSR set to: 0
  2864                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 827:             ++*fmt;
  2865  0007BC  C0C1  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2866  0007C0  C0C2  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2867  0007C4  2ADE               	incf	postinc2,f,c
  2868  0007C6  0E00               	movlw	0
  2869  0007C8  22DD               	addwfc	postdec2,f,c
  2870                           
  2871                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 828:             ll = (long l
      +                          ong)(*(int *)__va_arg(*(int **)ap, (int)0));
  2872  0007CA  C0C3  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2873  0007CE  C0C4  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2874  0007D2  CFDF F0C5          	movff	indf2,??_vfpfcnvrt
  2875  0007D6  0E02               	movlw	2
  2876  0007D8  26DE               	addwf	postinc2,f,c
  2877  0007DA  CFDF F0C6          	movff	indf2,??_vfpfcnvrt+1
  2878  0007DE  0E00               	movlw	0
  2879  0007E0  22DD               	addwfc	postdec2,f,c
  2880  0007E2  C0C5  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2881  0007E6  C0C6  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2882  0007EA  CFDE F0C9          	movff	postinc2,vfpfcnvrt@ll
  2883  0007EE  CFDD F0CA          	movff	postdec2,vfpfcnvrt@ll+1
  2884  0007F2  0E00               	movlw	0
  2885  0007F4  BFCA               	btfsc	(vfpfcnvrt@ll+1)& (0+255),7,b
  2886  0007F6  0EFF               	movlw	-1
  2887  0007F8  6FCB               	movwf	(vfpfcnvrt@ll+2)& (0+255),b
  2888  0007FA  6FCC               	movwf	(vfpfcnvrt@ll+3)& (0+255),b
  2889  0007FC  6FCD               	movwf	(vfpfcnvrt@ll+4)& (0+255),b
  2890  0007FE  6FCE               	movwf	(vfpfcnvrt@ll+5)& (0+255),b
  2891  000800  6FCF               	movwf	(vfpfcnvrt@ll+6)& (0+255),b
  2892  000802  6FD0               	movwf	(vfpfcnvrt@ll+7)& (0+255),b
  2893                           
  2894                           ; BSR set to: 0
  2895                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 830:             return dtoa(
      +                          fp, ll);
  2896  000804  C0BF  F09B         	movff	vfpfcnvrt@fp,dtoa@fp
  2897  000808  C0C0  F09C         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  2898  00080C  C0C9  F09D         	movff	vfpfcnvrt@ll,dtoa@d
  2899  000810  C0CA  F09E         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  2900  000814  C0CB  F09F         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  2901  000818  C0CC  F0A0         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  2902  00081C  C0CD  F0A1         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  2903  000820  C0CE  F0A2         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  2904  000824  C0CF  F0A3         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  2905  000828  C0D0  F0A4         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  2906  00082C  ECB1  F005         	call	_dtoa	;wreg free
  2907  000830  C09B  F0BF         	movff	?_dtoa,?_vfpfcnvrt
  2908  000834  C09C  F0C0         	movff	?_dtoa+1,?_vfpfcnvrt+1
  2909  000838  D051               	goto	l615
  2910  00083A                     l3526:
  2911  00083A  FFFF               	dw	65535	; assembler added errata NOP
  2912                           
  2913                           ; BSR set to: 0
  2914                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1350:         if ((*fmt)[0] =
      +                          = '%') {
  2915  00083C  C0C1  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2916  000840  C0C2  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2917  000844  CFDE FFF6          	movff	postinc2,tblptrl
  2918  000848  CFDD FFF7          	movff	postdec2,tblptrh
  2919  00084C                     	if	0	;tblptru may be non-zero
  2920  00084C                     	endif
  2921  00084C                     	if	0	;tblptru may be non-zero
  2922  00084C                     	endif
  2923  00084C  0008               	tblrd		*
  2924  00084E  FFFF               	dw	65535	; errata NOP
  2925  000850  50F5               	movf	tablat,w,c
  2926  000852  0A25               	xorlw	37
  2927  000854  A4D8               	btfss	status,2,c
  2928  000856  D017               	goto	l3536
  2929                           
  2930                           ; BSR set to: 0
  2931                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1351:             ++*fmt;
  2932  000858  C0C1  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2933  00085C  C0C2  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2934  000860  2ADE               	incf	postinc2,f,c
  2935  000862  0E00               	movlw	0
  2936  000864  22DD               	addwfc	postdec2,f,c
  2937                           
  2938                           ; BSR set to: 0
  2939                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1352:             fputc((int)
      +                          '%', fp);
  2940  000866  0E00               	movlw	0
  2941  000868  6F81               	movwf	(fputc@c+1)& (0+255),b
  2942  00086A  0E25               	movlw	37
  2943  00086C  6F80               	movwf	fputc@c& (0+255),b
  2944  00086E  C0BF  F082         	movff	vfpfcnvrt@fp,fputc@fp
  2945  000872  C0C0  F083         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2946  000876  ECF7  F00E         	call	_fputc	;wreg free
  2947  00087A                     l3532:
  2948  00087A  FFFF               	dw	65535	; assembler added errata NOP
  2949                           
  2950                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1353:             return 1;
  2951  00087C  0E00               	movlw	0
  2952  00087E  0100               	movlb	0	; () banked
  2953  000880  6FC0               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  2954  000882  0E01               	movlw	1
  2955  000884  D00B               	goto	L3
  2956  000886                     l3536:
  2957  000886  FFFF               	dw	65535	; assembler added errata NOP
  2958                           
  2959                           ; BSR set to: 0
  2960                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1357:         ++*fmt;
  2961  000888  C0C1  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2962  00088C  C0C2  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2963  000890  2ADE               	incf	postinc2,f,c
  2964  000892  0E00               	movlw	0
  2965  000894  22DD               	addwfc	postdec2,f,c
  2966                           
  2967                           ; BSR set to: 0
  2968                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1358:         return 0;
  2969  000896  0E00               	movlw	0
  2970  000898  6FC0               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  2971  00089A  0E00               	movlw	0
  2972  00089C                     L3:
  2973  00089C  FFFF               	dw	65535	; assembler added errata NOP
  2974  00089E  6FBF               	movwf	?_vfpfcnvrt& (0+255),b
  2975  0008A0  D01D               	goto	l615
  2976  0008A2                     l3542:
  2977  0008A2  FFFF               	dw	65535	; assembler added errata NOP
  2978                           
  2979                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1362:     fputc((int)(*fmt)[0
      +                          ], fp);
  2980  0008A4  C0C1  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2981  0008A8  C0C2  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2982  0008AC  CFDE FFF6          	movff	postinc2,tblptrl
  2983  0008B0  CFDD FFF7          	movff	postdec2,tblptrh
  2984  0008B4                     	if	0	;tblptru may be non-zero
  2985  0008B4                     	endif
  2986  0008B4                     	if	0	;tblptru may be non-zero
  2987  0008B4                     	endif
  2988  0008B4  0008               	tblrd		*
  2989  0008B6  FFFF               	dw	65535	; errata NOP
  2990  0008B8  50F5               	movf	tablat,w,c
  2991  0008BA  0100               	movlb	0	; () banked
  2992  0008BC  6F80               	movwf	fputc@c& (0+255),b
  2993  0008BE  6B81               	clrf	(fputc@c+1)& (0+255),b
  2994  0008C0  C0BF  F082         	movff	vfpfcnvrt@fp,fputc@fp
  2995  0008C4  C0C0  F083         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2996  0008C8  ECF7  F00E         	call	_fputc	;wreg free
  2997                           
  2998                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1363:     ++*fmt;
  2999  0008CC  C0C1  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3000  0008D0  C0C2  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3001  0008D4  2ADE               	incf	postinc2,f,c
  3002  0008D6  0E00               	movlw	0
  3003  0008D8  22DD               	addwfc	postdec2,f,c
  3004  0008DA  D7CF               	goto	l3532
  3005  0008DC                     l615:
  3006  0008DC  FFFF               	dw	65535	; assembler added errata NOP
  3007  0008DE  0012               	return		;funcret
  3008  0008E0  FFFF               	dw	65535	; errata NOP
  3009  0008E2                     __end_of_vfpfcnvrt:
  3010                           	opt callstack 0
  3011                           
  3012 ;; *************** function _dtoa *****************
  3013 ;; Defined at:
  3014 ;;		line 274 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  3015 ;; Parameters:    Size  Location     Type
  3016 ;;  fp              2   27[BANK0 ] PTR struct _IO_FILE
  3017 ;;		 -> sprintf@f(6), 
  3018 ;;  d               8   29[BANK0 ] long long 
  3019 ;; Auto vars:     Size  Location     Type
  3020 ;;  n               8   53[BANK0 ] long long 
  3021 ;;  i               2   61[BANK0 ] int 
  3022 ;;  s               2   51[BANK0 ] int 
  3023 ;;  w               2   49[BANK0 ] int 
  3024 ;;  p               2   47[BANK0 ] int 
  3025 ;; Return value:  Size  Location     Type
  3026 ;;                  2   27[BANK0 ] int 
  3027 ;; Registers used:
  3028 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3029 ;; Tracked objects:
  3030 ;;		On entry : 0/0
  3031 ;;		On exit  : 0/0
  3032 ;;		Unchanged: 0/0
  3033 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3034 ;;      Params:         0      10       0       0       0       0       0
  3035 ;;      Locals:         0      18       0       0       0       0       0
  3036 ;;      Temps:          0       8       0       0       0       0       0
  3037 ;;      Totals:         0      36       0       0       0       0       0
  3038 ;;Total ram usage:       36 bytes
  3039 ;; Hardware stack levels used:    1
  3040 ;; Hardware stack levels required when called:   14
  3041 ;; This function calls:
  3042 ;;		___aodiv
  3043 ;;		___aomod
  3044 ;;		_abs
  3045 ;;		_pad
  3046 ;; This function is called by:
  3047 ;;		_vfpfcnvrt
  3048 ;; This function uses a non-reentrant model
  3049 ;;
  3050                           
  3051                           	psect	text10
  3052  000B62                     __ptext10:
  3053                           	opt callstack 0
  3054  000B62                     _dtoa:
  3055                           	opt callstack 0
  3056  000B62  FFFF               	dw	65535	; assembler added errata NOP
  3057                           
  3058                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 274: static int dtoa(FILE *fp
      +                          , long long d);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 275: {;/opt/mic
      +                          rochip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 276:     int i, p, s, w;;/opt/microchi
      +                          p/xc8/v2.05/pic/sources/c99/common/doprnt.c: 277:     long long n;;/opt/microchip/xc8/v2
      +                          .05/pic/sources/c99/common/doprnt.c: 280:     n = d;
  3059                           
  3060                           ;incstack = 0
  3061  000B64  C09D  F0B5         	movff	dtoa@d,dtoa@n
  3062  000B68  C09E  F0B6         	movff	dtoa@d+1,dtoa@n+1
  3063  000B6C  C09F  F0B7         	movff	dtoa@d+2,dtoa@n+2
  3064  000B70  C0A0  F0B8         	movff	dtoa@d+3,dtoa@n+3
  3065  000B74  C0A1  F0B9         	movff	dtoa@d+4,dtoa@n+4
  3066  000B78  C0A2  F0BA         	movff	dtoa@d+5,dtoa@n+5
  3067  000B7C  C0A3  F0BB         	movff	dtoa@d+6,dtoa@n+6
  3068  000B80  C0A4  F0BC         	movff	dtoa@d+7,dtoa@n+7
  3069                           
  3070                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 281:     s = n < 0 ? 1 : 0;
  3071  000B84  0100               	movlb	0	; () banked
  3072  000B86  AFBC               	btfss	(dtoa@n+7)& (0+255),7,b
  3073  000B88  D002               	goto	u2450
  3074  000B8A  0E01               	movlw	1
  3075  000B8C  D002               	goto	u2460
  3076  000B8E                     u2450:
  3077  000B8E  FFFF               	dw	65535	; assembler added errata NOP
  3078  000B90  0E00               	movlw	0
  3079  000B92                     u2460:
  3080  000B92  FFFF               	dw	65535	; assembler added errata NOP
  3081  000B94  6FB3               	movwf	dtoa@s& (0+255),b
  3082  000B96  6BB4               	clrf	(dtoa@s+1)& (0+255),b
  3083                           
  3084                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 282:     if (s) {
  3085  000B98  51B3               	movf	dtoa@s& (0+255),w,b
  3086  000B9A  11B4               	iorwf	(dtoa@s+1)& (0+255),w,b
  3087  000B9C  B4D8               	btfsc	status,2,c
  3088  000B9E  D010               	goto	l3226
  3089                           
  3090                           ; BSR set to: 0
  3091                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 283:         n = -n;
  3092  000BA0  1FBC               	comf	(dtoa@n+7)& (0+255),f,b
  3093  000BA2  1FBB               	comf	(dtoa@n+6)& (0+255),f,b
  3094  000BA4  1FBA               	comf	(dtoa@n+5)& (0+255),f,b
  3095  000BA6  1FB9               	comf	(dtoa@n+4)& (0+255),f,b
  3096  000BA8  1FB8               	comf	(dtoa@n+3)& (0+255),f,b
  3097  000BAA  1FB7               	comf	(dtoa@n+2)& (0+255),f,b
  3098  000BAC  1FB6               	comf	(dtoa@n+1)& (0+255),f,b
  3099  000BAE  6DB5               	negf	dtoa@n& (0+255),b
  3100  000BB0  0E00               	movlw	0
  3101  000BB2  23B6               	addwfc	(dtoa@n+1)& (0+255),f,b
  3102  000BB4  23B7               	addwfc	(dtoa@n+2)& (0+255),f,b
  3103  000BB6  23B8               	addwfc	(dtoa@n+3)& (0+255),f,b
  3104  000BB8  23B9               	addwfc	(dtoa@n+4)& (0+255),f,b
  3105  000BBA  23BA               	addwfc	(dtoa@n+5)& (0+255),f,b
  3106  000BBC  23BB               	addwfc	(dtoa@n+6)& (0+255),f,b
  3107  000BBE  23BC               	addwfc	(dtoa@n+7)& (0+255),f,b
  3108  000BC0                     l3226:
  3109  000BC0  FFFF               	dw	65535	; assembler added errata NOP
  3110                           
  3111                           ; BSR set to: 0
  3112                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 287:     if (!(prec < 0)) {
  3113  000BC2  AFF5               	btfss	(_prec+1)& (0+255),7,b
  3114                           
  3115                           ; BSR set to: 0
  3116                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 288:         flags &= ~(1 << 
      +                          1);
  3117  000BC4  93F6               	bcf	_flags& (0+255),1,b
  3118                           
  3119                           ; BSR set to: 0
  3120                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 290:     p = (0 < prec) ? pre
      +                          c : 1;
  3121  000BC6  BFF5               	btfsc	(_prec+1)& (0+255),7,b
  3122  000BC8  D005               	goto	u2490
  3123  000BCA  51F5               	movf	(_prec+1)& (0+255),w,b
  3124  000BCC  E109               	bnz	l578
  3125  000BCE  05F4               	decf	_prec& (0+255),w,b
  3126  000BD0  B0D8               	btfsc	status,0,c
  3127  000BD2  D006               	goto	l578
  3128  000BD4                     u2490:
  3129  000BD4  FFFF               	dw	65535	; assembler added errata NOP
  3130                           
  3131                           ; BSR set to: 0
  3132  000BD6  0E00               	movlw	0
  3133  000BD8  6FB0               	movwf	(dtoa@p+1)& (0+255),b
  3134  000BDA  0E01               	movlw	1
  3135  000BDC  6FAF               	movwf	dtoa@p& (0+255),b
  3136  000BDE  D005               	goto	l580
  3137  000BE0                     l578:
  3138  000BE0  FFFF               	dw	65535	; assembler added errata NOP
  3139                           
  3140                           ; BSR set to: 0
  3141  000BE2  C0F4  F0AF         	movff	_prec,dtoa@p
  3142  000BE6  C0F5  F0B0         	movff	_prec+1,dtoa@p+1
  3143  000BEA                     l580:
  3144  000BEA  FFFF               	dw	65535	; assembler added errata NOP
  3145                           
  3146                           ; BSR set to: 0
  3147                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 291:     w = width;
  3148  000BEC  C0F2  F0B1         	movff	_width,dtoa@w
  3149  000BF0  C0F3  F0B2         	movff	_width+1,dtoa@w+1
  3150                           
  3151                           ; BSR set to: 0
  3152                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 292:     if (s || (flags & (1
      +                           << 2))) {
  3153  000BF4  51B3               	movf	dtoa@s& (0+255),w,b
  3154  000BF6  11B4               	iorwf	(dtoa@s+1)& (0+255),w,b
  3155  000BF8  A4D8               	btfss	status,2,c
  3156  000BFA  D002               	goto	u2510
  3157                           
  3158                           ; BSR set to: 0
  3159  000BFC  A5F6               	btfss	_flags& (0+255),2,b
  3160  000BFE  D004               	goto	l3240
  3161  000C00                     u2510:
  3162  000C00  FFFF               	dw	65535	; assembler added errata NOP
  3163                           
  3164                           ; BSR set to: 0
  3165                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 293:         --w;
  3166  000C02  07B1               	decf	dtoa@w& (0+255),f,b
  3167  000C04  A0D8               	btfss	status,0,c
  3168  000C06  07B2               	decf	(dtoa@w+1)& (0+255),f,b
  3169  000C08                     l3240:
  3170  000C08  FFFF               	dw	65535	; assembler added errata NOP
  3171                           
  3172                           ; BSR set to: 0
  3173                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 297:     i = sizeof(dbuf) - 1
      +                          ;
  3174  000C0A  0E00               	movlw	0
  3175  000C0C  6FBE               	movwf	(dtoa@i+1)& (0+255),b
  3176  000C0E  0E1F               	movlw	31
  3177  000C10  6FBD               	movwf	dtoa@i& (0+255),b
  3178                           
  3179                           ; BSR set to: 0
  3180                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 298:     dbuf[i] = '\0';
  3181  000C12  0E00               	movlw	0
  3182  000C14  0101               	movlb	1	; () banked
  3183  000C16  6F23               	movwf	(_dbuf+31)& (0+255),b
  3184                           
  3185                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  3186  000C18  D07E               	goto	l3254
  3187  000C1A                     l3244:
  3188  000C1A  FFFF               	dw	65535	; assembler added errata NOP
  3189                           
  3190                           ; BSR set to: 0
  3191                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 300:         --i;
  3192  000C1C  07BD               	decf	dtoa@i& (0+255),f,b
  3193  000C1E  A0D8               	btfss	status,0,c
  3194  000C20  07BE               	decf	(dtoa@i+1)& (0+255),f,b
  3195                           
  3196                           ; BSR set to: 0
  3197                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 301:         dbuf[i] = '0' + 
      +                          abs(n % 10);
  3198  000C22  0E04               	movlw	low _dbuf
  3199  000C24  25BD               	addwf	dtoa@i& (0+255),w,b
  3200  000C26  6ED9               	movwf	fsr2l,c
  3201  000C28  0E01               	movlw	high _dbuf
  3202  000C2A  21BE               	addwfc	(dtoa@i+1)& (0+255),w,b
  3203  000C2C  6EDA               	movwf	fsr2h,c
  3204  000C2E  C0B5  F080         	movff	dtoa@n,___aomod@dividend
  3205  000C32  C0B6  F081         	movff	dtoa@n+1,___aomod@dividend+1
  3206  000C36  C0B7  F082         	movff	dtoa@n+2,___aomod@dividend+2
  3207  000C3A  C0B8  F083         	movff	dtoa@n+3,___aomod@dividend+3
  3208  000C3E  C0B9  F084         	movff	dtoa@n+4,___aomod@dividend+4
  3209  000C42  C0BA  F085         	movff	dtoa@n+5,___aomod@dividend+5
  3210  000C46  C0BB  F086         	movff	dtoa@n+6,___aomod@dividend+6
  3211  000C4A  C0BC  F087         	movff	dtoa@n+7,___aomod@dividend+7
  3212  000C4E  0E0A               	movlw	10
  3213  000C50  6F88               	movwf	___aomod@divisor& (0+255),b
  3214  000C52  0E00               	movlw	0
  3215  000C54  6F89               	movwf	(___aomod@divisor+1)& (0+255),b
  3216  000C56  0E00               	movlw	0
  3217  000C58  6F8A               	movwf	(___aomod@divisor+2)& (0+255),b
  3218  000C5A  0E00               	movlw	0
  3219  000C5C  6F8B               	movwf	(___aomod@divisor+3)& (0+255),b
  3220  000C5E  0E00               	movlw	0
  3221  000C60  6F8C               	movwf	(___aomod@divisor+4)& (0+255),b
  3222  000C62  0E00               	movlw	0
  3223  000C64  6F8D               	movwf	(___aomod@divisor+5)& (0+255),b
  3224  000C66  0E00               	movlw	0
  3225  000C68  6F8E               	movwf	(___aomod@divisor+6)& (0+255),b
  3226  000C6A  0E00               	movlw	0
  3227  000C6C  6F8F               	movwf	(___aomod@divisor+7)& (0+255),b
  3228  000C6E  EC85  F00C         	call	___aomod	;wreg free
  3229  000C72  C080  F0A5         	movff	?___aomod,??_dtoa
  3230  000C76  C081  F0A6         	movff	?___aomod+1,??_dtoa+1
  3231  000C7A  C082  F0A7         	movff	?___aomod+2,??_dtoa+2
  3232  000C7E  C083  F0A8         	movff	?___aomod+3,??_dtoa+3
  3233  000C82  C084  F0A9         	movff	?___aomod+4,??_dtoa+4
  3234  000C86  C085  F0AA         	movff	?___aomod+5,??_dtoa+5
  3235  000C8A  C086  F0AB         	movff	?___aomod+6,??_dtoa+6
  3236  000C8E  C087  F0AC         	movff	?___aomod+7,??_dtoa+7
  3237  000C92  C0A5  F092         	movff	??_dtoa,abs@a
  3238  000C96  C0A7  F093         	movff	??_dtoa+2,abs@a+1
  3239  000C9A  ECED  F014         	call	_abs	;wreg free
  3240  000C9E  0100               	movlb	0	; () banked
  3241  000CA0  5192               	movf	?_abs& (0+255),w,b
  3242  000CA2  0F30               	addlw	48
  3243  000CA4  6EDF               	movwf	indf2,c
  3244                           
  3245                           ; BSR set to: 0
  3246                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 302:         --p;
  3247  000CA6  07AF               	decf	dtoa@p& (0+255),f,b
  3248  000CA8  A0D8               	btfss	status,0,c
  3249  000CAA  07B0               	decf	(dtoa@p+1)& (0+255),f,b
  3250                           
  3251                           ; BSR set to: 0
  3252                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 303:         --w;
  3253  000CAC  07B1               	decf	dtoa@w& (0+255),f,b
  3254  000CAE  A0D8               	btfss	status,0,c
  3255  000CB0  07B2               	decf	(dtoa@w+1)& (0+255),f,b
  3256                           
  3257                           ; BSR set to: 0
  3258                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 304:         n = n / 10;
  3259  000CB2  C0B5  F080         	movff	dtoa@n,___aodiv@dividend
  3260  000CB6  C0B6  F081         	movff	dtoa@n+1,___aodiv@dividend+1
  3261  000CBA  C0B7  F082         	movff	dtoa@n+2,___aodiv@dividend+2
  3262  000CBE  C0B8  F083         	movff	dtoa@n+3,___aodiv@dividend+3
  3263  000CC2  C0B9  F084         	movff	dtoa@n+4,___aodiv@dividend+4
  3264  000CC6  C0BA  F085         	movff	dtoa@n+5,___aodiv@dividend+5
  3265  000CCA  C0BB  F086         	movff	dtoa@n+6,___aodiv@dividend+6
  3266  000CCE  C0BC  F087         	movff	dtoa@n+7,___aodiv@dividend+7
  3267  000CD2  0E0A               	movlw	10
  3268  000CD4  6F88               	movwf	___aodiv@divisor& (0+255),b
  3269  000CD6  0E00               	movlw	0
  3270  000CD8  6F89               	movwf	(___aodiv@divisor+1)& (0+255),b
  3271  000CDA  0E00               	movlw	0
  3272  000CDC  6F8A               	movwf	(___aodiv@divisor+2)& (0+255),b
  3273  000CDE  0E00               	movlw	0
  3274  000CE0  6F8B               	movwf	(___aodiv@divisor+3)& (0+255),b
  3275  000CE2  0E00               	movlw	0
  3276  000CE4  6F8C               	movwf	(___aodiv@divisor+4)& (0+255),b
  3277  000CE6  0E00               	movlw	0
  3278  000CE8  6F8D               	movwf	(___aodiv@divisor+5)& (0+255),b
  3279  000CEA  0E00               	movlw	0
  3280  000CEC  6F8E               	movwf	(___aodiv@divisor+6)& (0+255),b
  3281  000CEE  0E00               	movlw	0
  3282  000CF0  6F8F               	movwf	(___aodiv@divisor+7)& (0+255),b
  3283  000CF2  EC28  F00B         	call	___aodiv	;wreg free
  3284  000CF6  C080  F0B5         	movff	?___aodiv,dtoa@n
  3285  000CFA  C081  F0B6         	movff	?___aodiv+1,dtoa@n+1
  3286  000CFE  C082  F0B7         	movff	?___aodiv+2,dtoa@n+2
  3287  000D02  C083  F0B8         	movff	?___aodiv+3,dtoa@n+3
  3288  000D06  C084  F0B9         	movff	?___aodiv+4,dtoa@n+4
  3289  000D0A  C085  F0BA         	movff	?___aodiv+5,dtoa@n+5
  3290  000D0E  C086  F0BB         	movff	?___aodiv+6,dtoa@n+6
  3291  000D12  C087  F0BC         	movff	?___aodiv+7,dtoa@n+7
  3292  000D16                     l3254:
  3293  000D16  FFFF               	dw	65535	; assembler added errata NOP
  3294                           
  3295                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  3296  000D18  0100               	movlb	0	; () banked
  3297  000D1A  BFBE               	btfsc	(dtoa@i+1)& (0+255),7,b
  3298  000D1C  D020               	goto	u2560
  3299  000D1E  51BE               	movf	(dtoa@i+1)& (0+255),w,b
  3300  000D20  E103               	bnz	u2520
  3301  000D22  05BD               	decf	dtoa@i& (0+255),w,b
  3302  000D24  A0D8               	btfss	status,0,c
  3303  000D26  D01B               	goto	u2560
  3304  000D28                     u2520:
  3305                           
  3306                           ; BSR set to: 0
  3307  000D28  51B5               	movf	dtoa@n& (0+255),w,b
  3308  000D2A  11B6               	iorwf	(dtoa@n+1)& (0+255),w,b
  3309  000D2C  11B7               	iorwf	(dtoa@n+2)& (0+255),w,b
  3310  000D2E  11B8               	iorwf	(dtoa@n+3)& (0+255),w,b
  3311  000D30  11B9               	iorwf	(dtoa@n+4)& (0+255),w,b
  3312  000D32  11BA               	iorwf	(dtoa@n+5)& (0+255),w,b
  3313  000D34  11BB               	iorwf	(dtoa@n+6)& (0+255),w,b
  3314  000D36  11BC               	iorwf	(dtoa@n+7)& (0+255),w,b
  3315  000D38  A4D8               	btfss	status,2,c
  3316  000D3A  D76F               	goto	l3244
  3317                           
  3318                           ; BSR set to: 0
  3319  000D3C  BFB0               	btfsc	(dtoa@p+1)& (0+255),7,b
  3320  000D3E  D005               	goto	u2540
  3321  000D40  51B0               	movf	(dtoa@p+1)& (0+255),w,b
  3322  000D42  E102               	bnz	u2541
  3323  000D44  05AF               	decf	dtoa@p& (0+255),w,b
  3324  000D46  B0D8               	btfsc	status,0,c
  3325  000D48                     u2541:
  3326  000D48  D768               	goto	l3244
  3327  000D4A                     u2540:
  3328  000D4A  FFFF               	dw	65535	; assembler added errata NOP
  3329                           
  3330                           ; BSR set to: 0
  3331  000D4C  BFB2               	btfsc	(dtoa@w+1)& (0+255),7,b
  3332  000D4E  D007               	goto	u2560
  3333  000D50  51B2               	movf	(dtoa@w+1)& (0+255),w,b
  3334  000D52  E103               	bnz	u2550
  3335  000D54  05B1               	decf	dtoa@w& (0+255),w,b
  3336  000D56  A0D8               	btfss	status,0,c
  3337  000D58  D002               	goto	u2560
  3338  000D5A                     u2550:
  3339                           
  3340                           ; BSR set to: 0
  3341  000D5A  B3F6               	btfsc	_flags& (0+255),1,b
  3342  000D5C  D75E               	goto	l3244
  3343  000D5E                     u2560:
  3344  000D5E  FFFF               	dw	65535	; assembler added errata NOP
  3345                           
  3346                           ; BSR set to: 0
  3347                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 308:     if (s || (flags & (1
      +                           << 2))) {
  3348  000D60  51B3               	movf	dtoa@s& (0+255),w,b
  3349  000D62  11B4               	iorwf	(dtoa@s+1)& (0+255),w,b
  3350  000D64  A4D8               	btfss	status,2,c
  3351  000D66  D002               	goto	u2580
  3352                           
  3353                           ; BSR set to: 0
  3354  000D68  A5F6               	btfss	_flags& (0+255),2,b
  3355  000D6A  D01A               	goto	l3278
  3356  000D6C                     u2580:
  3357  000D6C  FFFF               	dw	65535	; assembler added errata NOP
  3358                           
  3359                           ; BSR set to: 0
  3360                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 309:         --i;
  3361  000D6E  07BD               	decf	dtoa@i& (0+255),f,b
  3362  000D70  A0D8               	btfss	status,0,c
  3363  000D72  07BE               	decf	(dtoa@i+1)& (0+255),f,b
  3364                           
  3365                           ; BSR set to: 0
  3366                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 310:         dbuf[i] = s ? '-
      +                          ' : '+';
  3367  000D74  51B3               	movf	dtoa@s& (0+255),w,b
  3368  000D76  11B4               	iorwf	(dtoa@s+1)& (0+255),w,b
  3369  000D78  A4D8               	btfss	status,2,c
  3370  000D7A  D004               	goto	l3274
  3371                           
  3372                           ; BSR set to: 0
  3373  000D7C  0E00               	movlw	0
  3374  000D7E  6FAE               	movwf	(_dtoa$939+1)& (0+255),b
  3375  000D80  0E2B               	movlw	43
  3376  000D82  D004               	goto	L4
  3377  000D84                     l3274:
  3378  000D84  FFFF               	dw	65535	; assembler added errata NOP
  3379                           
  3380                           ; BSR set to: 0
  3381  000D86  0E00               	movlw	0
  3382  000D88  6FAE               	movwf	(_dtoa$939+1)& (0+255),b
  3383  000D8A  0E2D               	movlw	45
  3384  000D8C                     L4:
  3385  000D8C  FFFF               	dw	65535	; assembler added errata NOP
  3386  000D8E  6FAD               	movwf	_dtoa$939& (0+255),b
  3387                           
  3388                           ; BSR set to: 0
  3389  000D90  0E04               	movlw	low _dbuf
  3390  000D92  25BD               	addwf	dtoa@i& (0+255),w,b
  3391  000D94  6ED9               	movwf	fsr2l,c
  3392  000D96  0E01               	movlw	high _dbuf
  3393  000D98  21BE               	addwfc	(dtoa@i+1)& (0+255),w,b
  3394  000D9A  6EDA               	movwf	fsr2h,c
  3395  000D9C  C0AD  FFDF         	movff	_dtoa$939,indf2
  3396  000DA0                     l3278:
  3397  000DA0  FFFF               	dw	65535	; assembler added errata NOP
  3398                           
  3399                           ; BSR set to: 0
  3400                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 314:     return pad(fp, &dbuf
      +                          [i], w);
  3401  000DA2  C09B  F090         	movff	dtoa@fp,pad@fp
  3402  000DA6  C09C  F091         	movff	dtoa@fp+1,pad@fp+1
  3403  000DAA  0E04               	movlw	low _dbuf
  3404  000DAC  25BD               	addwf	dtoa@i& (0+255),w,b
  3405  000DAE  6F92               	movwf	pad@buf& (0+255),b
  3406  000DB0  0E01               	movlw	high _dbuf
  3407  000DB2  21BE               	addwfc	(dtoa@i+1)& (0+255),w,b
  3408  000DB4  6F93               	movwf	(pad@buf+1)& (0+255),b
  3409  000DB6  C0B1  F094         	movff	dtoa@w,pad@p
  3410  000DBA  C0B2  F095         	movff	dtoa@w+1,pad@p+1
  3411  000DBE  ECA0  F00E         	call	_pad	;wreg free
  3412  000DC2  C090  F09B         	movff	?_pad,?_dtoa
  3413  000DC6  C091  F09C         	movff	?_pad+1,?_dtoa+1
  3414  000DCA  0012               	return		;funcret
  3415  000DCC  FFFF               	dw	65535	; errata NOP
  3416  000DCE                     __end_of_dtoa:
  3417                           	opt callstack 0
  3418                           
  3419 ;; *************** function _pad *****************
  3420 ;; Defined at:
  3421 ;;		line 72 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  3422 ;; Parameters:    Size  Location     Type
  3423 ;;  fp              2   16[BANK0 ] PTR struct _IO_FILE
  3424 ;;		 -> sprintf@f(6), 
  3425 ;;  buf             2   18[BANK0 ] PTR unsigned char 
  3426 ;;		 -> dbuf(32), 
  3427 ;;  p               2   20[BANK0 ] int 
  3428 ;; Auto vars:     Size  Location     Type
  3429 ;;  w               2   25[BANK0 ] int 
  3430 ;;  i               2   23[BANK0 ] int 
  3431 ;; Return value:  Size  Location     Type
  3432 ;;                  2   16[BANK0 ] int 
  3433 ;; Registers used:
  3434 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3435 ;; Tracked objects:
  3436 ;;		On entry : 0/0
  3437 ;;		On exit  : 0/0
  3438 ;;		Unchanged: 0/0
  3439 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3440 ;;      Params:         0       6       0       0       0       0       0
  3441 ;;      Locals:         0       4       0       0       0       0       0
  3442 ;;      Temps:          0       1       0       0       0       0       0
  3443 ;;      Totals:         0      11       0       0       0       0       0
  3444 ;;Total ram usage:       11 bytes
  3445 ;; Hardware stack levels used:    1
  3446 ;; Hardware stack levels required when called:   13
  3447 ;; This function calls:
  3448 ;;		_fputc
  3449 ;;		_fputs
  3450 ;;		_strlen
  3451 ;; This function is called by:
  3452 ;;		_dtoa
  3453 ;; This function uses a non-reentrant model
  3454 ;;
  3455                           
  3456                           	psect	text11
  3457  001D40                     __ptext11:
  3458                           	opt callstack 0
  3459  001D40                     _pad:
  3460                           	opt callstack 0
  3461  001D40  FFFF               	dw	65535	; assembler added errata NOP
  3462                           
  3463                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 72: static int pad(FILE *fp, 
      +                          char *buf, int p);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 73: {;/opt/m
      +                          icrochip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 74:     int i, w;;/opt/microchip/xc8
      +                          /v2.05/pic/sources/c99/common/doprnt.c: 77:     if (flags & (1 << 0)) {
  3464                           
  3465                           ;incstack = 0
  3466  001D42  0100               	movlb	0	; () banked
  3467  001D44  A1F6               	btfss	_flags& (0+255),0,b
  3468  001D46  D00A               	goto	l2966
  3469                           
  3470                           ; BSR set to: 0
  3471                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 78:         fputs((const char
      +                           *)buf, fp);
  3472  001D48  C092  F089         	movff	pad@buf,fputs@s
  3473  001D4C  C093  F08A         	movff	pad@buf+1,fputs@s+1
  3474  001D50  C090  F08B         	movff	pad@fp,fputs@fp
  3475  001D54  C091  F08C         	movff	pad@fp+1,fputs@fp+1
  3476  001D58  EC21  F014         	call	_fputs	;wreg free
  3477  001D5C                     l2966:
  3478  001D5C  FFFF               	dw	65535	; assembler added errata NOP
  3479                           
  3480                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 82:     w = (p < 0) ? 0 : p;
  3481  001D5E  0100               	movlb	0	; () banked
  3482  001D60  BF95               	btfsc	(pad@p+1)& (0+255),7,b
  3483  001D62  D005               	goto	l2970
  3484                           
  3485                           ; BSR set to: 0
  3486  001D64  C094  F099         	movff	pad@p,pad@w
  3487  001D68  C095  F09A         	movff	pad@p+1,pad@w+1
  3488  001D6C  D005               	goto	l567
  3489  001D6E                     l2970:
  3490  001D6E  FFFF               	dw	65535	; assembler added errata NOP
  3491                           
  3492                           ; BSR set to: 0
  3493  001D70  0E00               	movlw	0
  3494  001D72  6F9A               	movwf	(pad@w+1)& (0+255),b
  3495  001D74  0E00               	movlw	0
  3496  001D76  6F99               	movwf	pad@w& (0+255),b
  3497  001D78                     l567:
  3498  001D78  FFFF               	dw	65535	; assembler added errata NOP
  3499                           
  3500                           ; BSR set to: 0
  3501                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 83:     i = 0;
  3502  001D7A  0E00               	movlw	0
  3503  001D7C  6F98               	movwf	(pad@i+1)& (0+255),b
  3504  001D7E  0E00               	movlw	0
  3505  001D80  6F97               	movwf	pad@i& (0+255),b
  3506                           
  3507                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
  3508  001D82  D00E               	goto	l2976
  3509  001D84                     l2972:
  3510  001D84  FFFF               	dw	65535	; assembler added errata NOP
  3511                           
  3512                           ; BSR set to: 0
  3513                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 85:         fputc(' ', fp);
  3514  001D86  0E00               	movlw	0
  3515  001D88  6F81               	movwf	(fputc@c+1)& (0+255),b
  3516  001D8A  0E20               	movlw	32
  3517  001D8C  6F80               	movwf	fputc@c& (0+255),b
  3518  001D8E  C090  F082         	movff	pad@fp,fputc@fp
  3519  001D92  C091  F083         	movff	pad@fp+1,fputc@fp+1
  3520  001D96  ECF7  F00E         	call	_fputc	;wreg free
  3521                           
  3522                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 86:         ++i;
  3523  001D9A  0100               	movlb	0	; () banked
  3524  001D9C  4B97               	infsnz	pad@i& (0+255),f,b
  3525  001D9E  2B98               	incf	(pad@i+1)& (0+255),f,b
  3526  001DA0                     l2976:
  3527  001DA0  FFFF               	dw	65535	; assembler added errata NOP
  3528                           
  3529                           ; BSR set to: 0
  3530                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
  3531  001DA2  5199               	movf	pad@w& (0+255),w,b
  3532  001DA4  5D97               	subwf	pad@i& (0+255),w,b
  3533  001DA6  5198               	movf	(pad@i+1)& (0+255),w,b
  3534  001DA8  0A80               	xorlw	128
  3535  001DAA  6F96               	movwf	??_pad& (0+255),b
  3536  001DAC  519A               	movf	(pad@w+1)& (0+255),w,b
  3537  001DAE  0A80               	xorlw	128
  3538  001DB0  5996               	subwfb	??_pad& (0+255),w,b
  3539  001DB2  A0D8               	btfss	status,0,c
  3540  001DB4  D7E7               	goto	l2972
  3541                           
  3542                           ; BSR set to: 0
  3543                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 90:     if (!(flags & (1 << 0
      +                          ))) {
  3544  001DB6  B1F6               	btfsc	_flags& (0+255),0,b
  3545  001DB8  D00A               	goto	l2980
  3546                           
  3547                           ; BSR set to: 0
  3548                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 91:         fputs((const char
      +                           *)buf, fp);
  3549  001DBA  C092  F089         	movff	pad@buf,fputs@s
  3550  001DBE  C093  F08A         	movff	pad@buf+1,fputs@s+1
  3551  001DC2  C090  F08B         	movff	pad@fp,fputs@fp
  3552  001DC6  C091  F08C         	movff	pad@fp+1,fputs@fp+1
  3553  001DCA  EC21  F014         	call	_fputs	;wreg free
  3554  001DCE                     l2980:
  3555  001DCE  FFFF               	dw	65535	; assembler added errata NOP
  3556                           
  3557                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 94:     return strlen(buf) + 
      +                          w;
  3558  001DD0  C092  F080         	movff	pad@buf,strlen@s
  3559  001DD4  C093  F081         	movff	pad@buf+1,strlen@s+1
  3560  001DD8  EC9C  F015         	call	_strlen	;wreg free
  3561  001DDC  0100               	movlb	0	; () banked
  3562  001DDE  5199               	movf	pad@w& (0+255),w,b
  3563  001DE0  2580               	addwf	?_strlen& (0+255),w,b
  3564  001DE2  6F90               	movwf	?_pad& (0+255),b
  3565  001DE4  519A               	movf	(pad@w+1)& (0+255),w,b
  3566  001DE6  2181               	addwfc	(?_strlen+1)& (0+255),w,b
  3567  001DE8  6F91               	movwf	(?_pad+1)& (0+255),b
  3568                           
  3569                           ; BSR set to: 0
  3570  001DEA  0012               	return		;funcret
  3571  001DEC  FFFF               	dw	65535	; errata NOP
  3572  001DEE                     __end_of_pad:
  3573                           	opt callstack 0
  3574                           
  3575 ;; *************** function _strlen *****************
  3576 ;; Defined at:
  3577 ;;		line 12 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/strlen.c"
  3578 ;; Parameters:    Size  Location     Type
  3579 ;;  s               2    0[BANK0 ] PTR const unsigned char 
  3580 ;;		 -> dbuf(32), 
  3581 ;; Auto vars:     Size  Location     Type
  3582 ;;  a               2    2[BANK0 ] PTR const unsigned char 
  3583 ;;		 -> dbuf(32), 
  3584 ;; Return value:  Size  Location     Type
  3585 ;;                  2    0[BANK0 ] unsigned int 
  3586 ;; Registers used:
  3587 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3588 ;; Tracked objects:
  3589 ;;		On entry : 0/0
  3590 ;;		On exit  : 0/0
  3591 ;;		Unchanged: 0/0
  3592 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3593 ;;      Params:         0       2       0       0       0       0       0
  3594 ;;      Locals:         0       2       0       0       0       0       0
  3595 ;;      Temps:          0       0       0       0       0       0       0
  3596 ;;      Totals:         0       4       0       0       0       0       0
  3597 ;;Total ram usage:        4 bytes
  3598 ;; Hardware stack levels used:    1
  3599 ;; Hardware stack levels required when called:   10
  3600 ;; This function calls:
  3601 ;;		Nothing
  3602 ;; This function is called by:
  3603 ;;		_pad
  3604 ;; This function uses a non-reentrant model
  3605 ;;
  3606                           
  3607                           	psect	text12
  3608  002B38                     __ptext12:
  3609                           	opt callstack 0
  3610  002B38                     _strlen:
  3611                           	opt callstack 0
  3612  002B38  FFFF               	dw	65535	; assembler added errata NOP
  3613                           
  3614                           ; BSR set to: 0
  3615                           ;incstack = 0
  3616  002B3A  C080  F082         	movff	strlen@s,strlen@a
  3617  002B3E  C081  F083         	movff	strlen@s+1,strlen@a+1
  3618  002B42  D004               	goto	l2938
  3619  002B44                     l2936:
  3620  002B44  FFFF               	dw	65535	; assembler added errata NOP
  3621  002B46  0100               	movlb	0	; () banked
  3622  002B48  4B80               	infsnz	strlen@s& (0+255),f,b
  3623  002B4A  2B81               	incf	(strlen@s+1)& (0+255),f,b
  3624  002B4C                     l2938:
  3625  002B4C  FFFF               	dw	65535	; assembler added errata NOP
  3626  002B4E  C080  FFD9         	movff	strlen@s,fsr2l
  3627  002B52  C081  FFDA         	movff	strlen@s+1,fsr2h
  3628  002B56  50DF               	movf	indf2,w,c
  3629  002B58  A4D8               	btfss	status,2,c
  3630  002B5A  D7F4               	goto	l2936
  3631  002B5C  0100               	movlb	0	; () banked
  3632  002B5E  5182               	movf	strlen@a& (0+255),w,b
  3633  002B60  5D80               	subwf	strlen@s& (0+255),w,b
  3634  002B62  6F80               	movwf	?_strlen& (0+255),b
  3635  002B64  5183               	movf	(strlen@a+1)& (0+255),w,b
  3636  002B66  5981               	subwfb	(strlen@s+1)& (0+255),w,b
  3637  002B68  6F81               	movwf	(?_strlen+1)& (0+255),b
  3638                           
  3639                           ; BSR set to: 0
  3640  002B6A  0012               	return		;funcret
  3641  002B6C  FFFF               	dw	65535	; errata NOP
  3642  002B6E                     __end_of_strlen:
  3643                           	opt callstack 0
  3644                           
  3645 ;; *************** function _fputs *****************
  3646 ;; Defined at:
  3647 ;;		line 8 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/nf_fputs.c"
  3648 ;; Parameters:    Size  Location     Type
  3649 ;;  s               2    9[BANK0 ] PTR const unsigned char 
  3650 ;;		 -> dbuf(32), 
  3651 ;;  fp              2   11[BANK0 ] PTR struct _IO_FILE
  3652 ;;		 -> sprintf@f(6), 
  3653 ;; Auto vars:     Size  Location     Type
  3654 ;;  i               2   14[BANK0 ] int 
  3655 ;;  c               1   13[BANK0 ] unsigned char 
  3656 ;; Return value:  Size  Location     Type
  3657 ;;                  2    9[BANK0 ] int 
  3658 ;; Registers used:
  3659 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3660 ;; Tracked objects:
  3661 ;;		On entry : 0/0
  3662 ;;		On exit  : 0/0
  3663 ;;		Unchanged: 0/0
  3664 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3665 ;;      Params:         0       4       0       0       0       0       0
  3666 ;;      Locals:         0       3       0       0       0       0       0
  3667 ;;      Temps:          0       0       0       0       0       0       0
  3668 ;;      Totals:         0       7       0       0       0       0       0
  3669 ;;Total ram usage:        7 bytes
  3670 ;; Hardware stack levels used:    1
  3671 ;; Hardware stack levels required when called:   12
  3672 ;; This function calls:
  3673 ;;		_fputc
  3674 ;; This function is called by:
  3675 ;;		_pad
  3676 ;; This function uses a non-reentrant model
  3677 ;;
  3678                           
  3679                           	psect	text13
  3680  002842                     __ptext13:
  3681                           	opt callstack 0
  3682  002842                     _fputs:
  3683                           	opt callstack 0
  3684  002842  FFFF               	dw	65535	; assembler added errata NOP
  3685                           
  3686                           ; BSR set to: 0
  3687                           ;incstack = 0
  3688  002844  0E00               	movlw	0
  3689  002846  0100               	movlb	0	; () banked
  3690  002848  6F8F               	movwf	(fputs@i+1)& (0+255),b
  3691  00284A  0E00               	movlw	0
  3692  00284C  6F8E               	movwf	fputs@i& (0+255),b
  3693  00284E  D00D               	goto	l2932
  3694  002850                     l2928:
  3695  002850  FFFF               	dw	65535	; assembler added errata NOP
  3696                           
  3697                           ; BSR set to: 0
  3698  002852  C08D  F080         	movff	fputs@c,fputc@c
  3699  002856  6B81               	clrf	(fputc@c+1)& (0+255),b
  3700  002858  C08B  F082         	movff	fputs@fp,fputc@fp
  3701  00285C  C08C  F083         	movff	fputs@fp+1,fputc@fp+1
  3702  002860  ECF7  F00E         	call	_fputc	;wreg free
  3703  002864  0100               	movlb	0	; () banked
  3704  002866  4B8E               	infsnz	fputs@i& (0+255),f,b
  3705  002868  2B8F               	incf	(fputs@i+1)& (0+255),f,b
  3706  00286A                     l2932:
  3707  00286A  FFFF               	dw	65535	; assembler added errata NOP
  3708                           
  3709                           ; BSR set to: 0
  3710  00286C  518E               	movf	fputs@i& (0+255),w,b
  3711  00286E  2589               	addwf	fputs@s& (0+255),w,b
  3712  002870  6ED9               	movwf	fsr2l,c
  3713  002872  518F               	movf	(fputs@i+1)& (0+255),w,b
  3714  002874  218A               	addwfc	(fputs@s+1)& (0+255),w,b
  3715  002876  6EDA               	movwf	fsr2h,c
  3716  002878  50DF               	movf	indf2,w,c
  3717  00287A  6F8D               	movwf	fputs@c& (0+255),b
  3718  00287C  518D               	movf	fputs@c& (0+255),w,b
  3719  00287E  B4D8               	btfsc	status,2,c
  3720                           
  3721                           ; BSR set to: 0
  3722  002880  0012               	return		;funcret
  3723  002882  FFFF               	dw	65535	; assembler added errata NOP
  3724  002884  D7E5               	goto	l2928
  3725  002886  FFFF               	dw	65535	; errata NOP
  3726  002888                     __end_of_fputs:
  3727                           	opt callstack 0
  3728                           
  3729 ;; *************** function _fputc *****************
  3730 ;; Defined at:
  3731 ;;		line 8 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/nf_fputc.c"
  3732 ;; Parameters:    Size  Location     Type
  3733 ;;  c               2    0[BANK0 ] int 
  3734 ;;  fp              2    2[BANK0 ] PTR struct _IO_FILE
  3735 ;;		 -> sprintf@f(6), 
  3736 ;; Auto vars:     Size  Location     Type
  3737 ;;		None
  3738 ;; Return value:  Size  Location     Type
  3739 ;;                  2    0[BANK0 ] int 
  3740 ;; Registers used:
  3741 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3742 ;; Tracked objects:
  3743 ;;		On entry : 0/0
  3744 ;;		On exit  : 0/0
  3745 ;;		Unchanged: 0/0
  3746 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3747 ;;      Params:         0       4       0       0       0       0       0
  3748 ;;      Locals:         0       0       0       0       0       0       0
  3749 ;;      Temps:          0       5       0       0       0       0       0
  3750 ;;      Totals:         0       9       0       0       0       0       0
  3751 ;;Total ram usage:        9 bytes
  3752 ;; Hardware stack levels used:    1
  3753 ;; Hardware stack levels required when called:   11
  3754 ;; This function calls:
  3755 ;;		_putch
  3756 ;; This function is called by:
  3757 ;;		_pad
  3758 ;;		_vfpfcnvrt
  3759 ;;		_fputs
  3760 ;; This function uses a non-reentrant model
  3761 ;;
  3762                           
  3763                           	psect	text14
  3764  001DEE                     __ptext14:
  3765                           	opt callstack 0
  3766  001DEE                     _fputc:
  3767                           	opt callstack 0
  3768  001DEE  FFFF               	dw	65535	; assembler added errata NOP
  3769                           
  3770                           ; BSR set to: 0
  3771                           ;incstack = 0
  3772  001DF0  0100               	movlb	0	; () banked
  3773  001DF2  5182               	movf	fputc@fp& (0+255),w,b
  3774  001DF4  1183               	iorwf	(fputc@fp+1)& (0+255),w,b
  3775  001DF6  B4D8               	btfsc	status,2,c
  3776  001DF8  D004               	goto	u1900
  3777                           
  3778                           ; BSR set to: 0
  3779  001DFA  5182               	movf	fputc@fp& (0+255),w,b
  3780  001DFC  1183               	iorwf	(fputc@fp+1)& (0+255),w,b
  3781  001DFE  A4D8               	btfss	status,2,c
  3782  001E00  D005               	goto	l2904
  3783  001E02                     u1900:
  3784  001E02  FFFF               	dw	65535	; assembler added errata NOP
  3785                           
  3786                           ; BSR set to: 0
  3787  001E04  5180               	movf	fputc@c& (0+255),w,b
  3788  001E06  EC89  F016         	call	_putch
  3789  001E0A  D045               	goto	l1360
  3790  001E0C                     l2904:
  3791  001E0C  FFFF               	dw	65535	; assembler added errata NOP
  3792                           
  3793                           ; BSR set to: 0
  3794  001E0E  EE20 F004          	lfsr	2,4
  3795  001E12  5182               	movf	fputc@fp& (0+255),w,b
  3796  001E14  26D9               	addwf	fsr2l,f,c
  3797  001E16  5183               	movf	(fputc@fp+1)& (0+255),w,b
  3798  001E18  22DA               	addwfc	fsr2h,f,c
  3799  001E1A  50DE               	movf	postinc2,w,c
  3800  001E1C  10DE               	iorwf	postinc2,w,c
  3801  001E1E  B4D8               	btfsc	status,2,c
  3802  001E20  D016               	goto	u1920
  3803                           
  3804                           ; BSR set to: 0
  3805  001E22  EE20 F004          	lfsr	2,4
  3806  001E26  5182               	movf	fputc@fp& (0+255),w,b
  3807  001E28  26D9               	addwf	fsr2l,f,c
  3808  001E2A  5183               	movf	(fputc@fp+1)& (0+255),w,b
  3809  001E2C  22DA               	addwfc	fsr2h,f,c
  3810  001E2E  EE10 F002          	lfsr	1,2
  3811  001E32  5182               	movf	fputc@fp& (0+255),w,b
  3812  001E34  26E1               	addwf	fsr1l,f,c
  3813  001E36  5183               	movf	(fputc@fp+1)& (0+255),w,b
  3814  001E38  22E2               	addwfc	fsr1h,f,c
  3815  001E3A  50DE               	movf	postinc2,w,c
  3816  001E3C  5CE6               	subwf	postinc1,w,c
  3817  001E3E  50E6               	movf	postinc1,w,c
  3818  001E40  0A80               	xorlw	128
  3819  001E42  6F88               	movwf	(??_fputc+4)& (0+255),b
  3820  001E44  50DE               	movf	postinc2,w,c
  3821  001E46  0A80               	xorlw	128
  3822  001E48  5988               	subwfb	(??_fputc+4)& (0+255),w,b
  3823  001E4A  B0D8               	btfsc	status,0,c
  3824  001E4C  D024               	goto	l1360
  3825  001E4E                     u1920:
  3826  001E4E  FFFF               	dw	65535	; assembler added errata NOP
  3827                           
  3828                           ; BSR set to: 0
  3829  001E50  EE20 F002          	lfsr	2,2
  3830  001E54  5182               	movf	fputc@fp& (0+255),w,b
  3831  001E56  26D9               	addwf	fsr2l,f,c
  3832  001E58  5183               	movf	(fputc@fp+1)& (0+255),w,b
  3833  001E5A  22DA               	addwfc	fsr2h,f,c
  3834  001E5C  CFDE F084          	movff	postinc2,??_fputc
  3835  001E60  CFDD F085          	movff	postdec2,??_fputc+1
  3836  001E64  C082  FFD9         	movff	fputc@fp,fsr2l
  3837  001E68  C083  FFDA         	movff	fputc@fp+1,fsr2h
  3838  001E6C  CFDE F086          	movff	postinc2,??_fputc+2
  3839  001E70  CFDD F087          	movff	postdec2,??_fputc+3
  3840  001E74  5184               	movf	??_fputc& (0+255),w,b
  3841  001E76  2586               	addwf	(??_fputc+2)& (0+255),w,b
  3842  001E78  6ED9               	movwf	fsr2l,c
  3843  001E7A  5185               	movf	(??_fputc+1)& (0+255),w,b
  3844  001E7C  2187               	addwfc	(??_fputc+3)& (0+255),w,b
  3845  001E7E  6EDA               	movwf	fsr2h,c
  3846  001E80  C080  FFDF         	movff	fputc@c,indf2
  3847  001E84  EE20 F002          	lfsr	2,2
  3848  001E88  5182               	movf	fputc@fp& (0+255),w,b
  3849  001E8A  26D9               	addwf	fsr2l,f,c
  3850  001E8C  5183               	movf	(fputc@fp+1)& (0+255),w,b
  3851  001E8E  22DA               	addwfc	fsr2h,f,c
  3852  001E90  2ADE               	incf	postinc2,f,c
  3853  001E92  0E00               	movlw	0
  3854  001E94  22DD               	addwfc	postdec2,f,c
  3855  001E96                     l1360:
  3856  001E96  FFFF               	dw	65535	; assembler added errata NOP
  3857  001E98  0012               	return		;funcret
  3858  001E9A  FFFF               	dw	65535	; errata NOP
  3859  001E9C                     __end_of_fputc:
  3860                           	opt callstack 0
  3861                           
  3862 ;; *************** function _putch *****************
  3863 ;; Defined at:
  3864 ;;		line 7 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/putch.c"
  3865 ;; Parameters:    Size  Location     Type
  3866 ;;  c               1    wreg     unsigned char 
  3867 ;; Auto vars:     Size  Location     Type
  3868 ;;  c               1    0[COMRAM] unsigned char 
  3869 ;; Return value:  Size  Location     Type
  3870 ;;                  1    wreg      void 
  3871 ;; Registers used:
  3872 ;;		wreg
  3873 ;; Tracked objects:
  3874 ;;		On entry : 0/0
  3875 ;;		On exit  : 0/0
  3876 ;;		Unchanged: 0/0
  3877 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3878 ;;      Params:         0       0       0       0       0       0       0
  3879 ;;      Locals:         0       0       0       0       0       0       0
  3880 ;;      Temps:          0       0       0       0       0       0       0
  3881 ;;      Totals:         0       0       0       0       0       0       0
  3882 ;;Total ram usage:        0 bytes
  3883 ;; Hardware stack levels used:    1
  3884 ;; Hardware stack levels required when called:   10
  3885 ;; This function calls:
  3886 ;;		Nothing
  3887 ;; This function is called by:
  3888 ;;		_fputc
  3889 ;; This function uses a non-reentrant model
  3890 ;;
  3891                           
  3892                           	psect	text15
  3893  002D12                     __ptext15:
  3894                           	opt callstack 0
  3895  002D12                     _putch:
  3896                           	opt callstack 0
  3897  002D12  FFFF               	dw	65535	; assembler added errata NOP
  3898                           
  3899                           ;incstack = 0
  3900  002D14  0012               	return		;funcret
  3901  002D16  FFFF               	dw	65535	; errata NOP
  3902  002D18                     __end_of_putch:
  3903                           	opt callstack 0
  3904                           
  3905 ;; *************** function _abs *****************
  3906 ;; Defined at:
  3907 ;;		line 1 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/abs.c"
  3908 ;; Parameters:    Size  Location     Type
  3909 ;;  a               2   18[BANK0 ] int 
  3910 ;; Auto vars:     Size  Location     Type
  3911 ;;		None
  3912 ;; Return value:  Size  Location     Type
  3913 ;;                  2   18[BANK0 ] int 
  3914 ;; Registers used:
  3915 ;;		wreg, status,2, status,0
  3916 ;; Tracked objects:
  3917 ;;		On entry : 0/0
  3918 ;;		On exit  : 0/0
  3919 ;;		Unchanged: 0/0
  3920 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3921 ;;      Params:         0       2       0       0       0       0       0
  3922 ;;      Locals:         0       0       0       0       0       0       0
  3923 ;;      Temps:          0       2       0       0       0       0       0
  3924 ;;      Totals:         0       4       0       0       0       0       0
  3925 ;;Total ram usage:        4 bytes
  3926 ;; Hardware stack levels used:    1
  3927 ;; Hardware stack levels required when called:   10
  3928 ;; This function calls:
  3929 ;;		Nothing
  3930 ;; This function is called by:
  3931 ;;		_dtoa
  3932 ;; This function uses a non-reentrant model
  3933 ;;
  3934                           
  3935                           	psect	text16
  3936  0029DA                     __ptext16:
  3937                           	opt callstack 0
  3938  0029DA                     _abs:
  3939                           	opt callstack 0
  3940  0029DA  FFFF               	dw	65535	; assembler added errata NOP
  3941                           
  3942                           ;incstack = 0
  3943  0029DC  0100               	movlb	0	; () banked
  3944  0029DE  BF93               	btfsc	(abs@a+1)& (0+255),7,b
  3945  0029E0  D005               	goto	u2050
  3946  0029E2  5193               	movf	(abs@a+1)& (0+255),w,b
  3947  0029E4  E111               	bnz	l1300
  3948  0029E6  0592               	decf	abs@a& (0+255),w,b
  3949  0029E8  B0D8               	btfsc	status,0,c
  3950  0029EA  D00E               	goto	l1300
  3951  0029EC                     u2050:
  3952  0029EC  FFFF               	dw	65535	; assembler added errata NOP
  3953                           
  3954                           ; BSR set to: 0
  3955  0029EE  C092  F094         	movff	abs@a,??_abs
  3956  0029F2  C093  F095         	movff	abs@a+1,??_abs+1
  3957  0029F6  1F94               	comf	??_abs& (0+255),f,b
  3958  0029F8  1F95               	comf	(??_abs+1)& (0+255),f,b
  3959  0029FA  4B94               	infsnz	??_abs& (0+255),f,b
  3960  0029FC  2B95               	incf	(??_abs+1)& (0+255),f,b
  3961  0029FE  C094  F092         	movff	??_abs,?_abs
  3962  002A02  C095  F093         	movff	??_abs+1,?_abs+1
  3963  002A06  D005               	goto	l1303
  3964  002A08                     l1300:
  3965  002A08  FFFF               	dw	65535	; assembler added errata NOP
  3966                           
  3967                           ; BSR set to: 0
  3968  002A0A  C092  F092         	movff	abs@a,?_abs
  3969  002A0E  C093  F093         	movff	abs@a+1,?_abs+1
  3970  002A12                     l1303:
  3971  002A12  FFFF               	dw	65535	; assembler added errata NOP
  3972                           
  3973                           ; BSR set to: 0
  3974  002A14  0012               	return		;funcret
  3975  002A16  FFFF               	dw	65535	; errata NOP
  3976  002A18                     __end_of_abs:
  3977                           	opt callstack 0
  3978                           
  3979 ;; *************** function ___aomod *****************
  3980 ;; Defined at:
  3981 ;;		line 9 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/aomod.c"
  3982 ;; Parameters:    Size  Location     Type
  3983 ;;  dividend        8    0[BANK0 ] long long 
  3984 ;;  divisor         8    8[BANK0 ] long long 
  3985 ;; Auto vars:     Size  Location     Type
  3986 ;;  sign            1   17[BANK0 ] unsigned char 
  3987 ;;  counter         1   16[BANK0 ] unsigned char 
  3988 ;; Return value:  Size  Location     Type
  3989 ;;                  8    0[BANK0 ] long long 
  3990 ;; Registers used:
  3991 ;;		wreg, status,2, status,0
  3992 ;; Tracked objects:
  3993 ;;		On entry : 0/0
  3994 ;;		On exit  : 0/0
  3995 ;;		Unchanged: 0/0
  3996 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3997 ;;      Params:         0      16       0       0       0       0       0
  3998 ;;      Locals:         0       2       0       0       0       0       0
  3999 ;;      Temps:          0       0       0       0       0       0       0
  4000 ;;      Totals:         0      18       0       0       0       0       0
  4001 ;;Total ram usage:       18 bytes
  4002 ;; Hardware stack levels used:    1
  4003 ;; Hardware stack levels required when called:   10
  4004 ;; This function calls:
  4005 ;;		Nothing
  4006 ;; This function is called by:
  4007 ;;		_dtoa
  4008 ;; This function uses a non-reentrant model
  4009 ;;
  4010                           
  4011                           	psect	text17
  4012  00190A                     __ptext17:
  4013                           	opt callstack 0
  4014  00190A                     ___aomod:
  4015                           	opt callstack 0
  4016  00190A  FFFF               	dw	65535	; assembler added errata NOP
  4017                           
  4018                           ; BSR set to: 0
  4019                           ;incstack = 0
  4020  00190C  0E00               	movlw	0
  4021  00190E  0100               	movlb	0	; () banked
  4022  001910  6F91               	movwf	___aomod@sign& (0+255),b
  4023                           
  4024                           ; BSR set to: 0
  4025  001912  AF87               	btfss	(___aomod@dividend+7)& (0+255),7,b
  4026  001914  D012               	goto	l3050
  4027                           
  4028                           ; BSR set to: 0
  4029  001916  1F87               	comf	(___aomod@dividend+7)& (0+255),f,b
  4030  001918  1F86               	comf	(___aomod@dividend+6)& (0+255),f,b
  4031  00191A  1F85               	comf	(___aomod@dividend+5)& (0+255),f,b
  4032  00191C  1F84               	comf	(___aomod@dividend+4)& (0+255),f,b
  4033  00191E  1F83               	comf	(___aomod@dividend+3)& (0+255),f,b
  4034  001920  1F82               	comf	(___aomod@dividend+2)& (0+255),f,b
  4035  001922  1F81               	comf	(___aomod@dividend+1)& (0+255),f,b
  4036  001924  6D80               	negf	___aomod@dividend& (0+255),b
  4037  001926  0E00               	movlw	0
  4038  001928  2381               	addwfc	(___aomod@dividend+1)& (0+255),f,b
  4039  00192A  2382               	addwfc	(___aomod@dividend+2)& (0+255),f,b
  4040  00192C  2383               	addwfc	(___aomod@dividend+3)& (0+255),f,b
  4041  00192E  2384               	addwfc	(___aomod@dividend+4)& (0+255),f,b
  4042  001930  2385               	addwfc	(___aomod@dividend+5)& (0+255),f,b
  4043  001932  2386               	addwfc	(___aomod@dividend+6)& (0+255),f,b
  4044  001934  2387               	addwfc	(___aomod@dividend+7)& (0+255),f,b
  4045                           
  4046                           ; BSR set to: 0
  4047  001936  0E01               	movlw	1
  4048  001938  6F91               	movwf	___aomod@sign& (0+255),b
  4049  00193A                     l3050:
  4050  00193A  FFFF               	dw	65535	; assembler added errata NOP
  4051                           
  4052                           ; BSR set to: 0
  4053  00193C  AF8F               	btfss	(___aomod@divisor+7)& (0+255),7,b
  4054  00193E  D010               	goto	l3054
  4055                           
  4056                           ; BSR set to: 0
  4057  001940  1F8F               	comf	(___aomod@divisor+7)& (0+255),f,b
  4058  001942  1F8E               	comf	(___aomod@divisor+6)& (0+255),f,b
  4059  001944  1F8D               	comf	(___aomod@divisor+5)& (0+255),f,b
  4060  001946  1F8C               	comf	(___aomod@divisor+4)& (0+255),f,b
  4061  001948  1F8B               	comf	(___aomod@divisor+3)& (0+255),f,b
  4062  00194A  1F8A               	comf	(___aomod@divisor+2)& (0+255),f,b
  4063  00194C  1F89               	comf	(___aomod@divisor+1)& (0+255),f,b
  4064  00194E  6D88               	negf	___aomod@divisor& (0+255),b
  4065  001950  0E00               	movlw	0
  4066  001952  2389               	addwfc	(___aomod@divisor+1)& (0+255),f,b
  4067  001954  238A               	addwfc	(___aomod@divisor+2)& (0+255),f,b
  4068  001956  238B               	addwfc	(___aomod@divisor+3)& (0+255),f,b
  4069  001958  238C               	addwfc	(___aomod@divisor+4)& (0+255),f,b
  4070  00195A  238D               	addwfc	(___aomod@divisor+5)& (0+255),f,b
  4071  00195C  238E               	addwfc	(___aomod@divisor+6)& (0+255),f,b
  4072  00195E  238F               	addwfc	(___aomod@divisor+7)& (0+255),f,b
  4073  001960                     l3054:
  4074  001960  FFFF               	dw	65535	; assembler added errata NOP
  4075                           
  4076                           ; BSR set to: 0
  4077  001962  5188               	movf	___aomod@divisor& (0+255),w,b
  4078  001964  1189               	iorwf	(___aomod@divisor+1)& (0+255),w,b
  4079  001966  118A               	iorwf	(___aomod@divisor+2)& (0+255),w,b
  4080  001968  118B               	iorwf	(___aomod@divisor+3)& (0+255),w,b
  4081  00196A  118C               	iorwf	(___aomod@divisor+4)& (0+255),w,b
  4082  00196C  118D               	iorwf	(___aomod@divisor+5)& (0+255),w,b
  4083  00196E  118E               	iorwf	(___aomod@divisor+6)& (0+255),w,b
  4084  001970  118F               	iorwf	(___aomod@divisor+7)& (0+255),w,b
  4085  001972  B4D8               	btfsc	status,2,c
  4086  001974  D040               	goto	l3070
  4087                           
  4088                           ; BSR set to: 0
  4089  001976  0E01               	movlw	1
  4090  001978  6F90               	movwf	___aomod@counter& (0+255),b
  4091  00197A  D00B               	goto	l3060
  4092  00197C                     l3058:
  4093  00197C  FFFF               	dw	65535	; assembler added errata NOP
  4094                           
  4095                           ; BSR set to: 0
  4096  00197E  90D8               	bcf	status,0,c
  4097  001980  3788               	rlcf	___aomod@divisor& (0+255),f,b
  4098  001982  3789               	rlcf	(___aomod@divisor+1)& (0+255),f,b
  4099  001984  378A               	rlcf	(___aomod@divisor+2)& (0+255),f,b
  4100  001986  378B               	rlcf	(___aomod@divisor+3)& (0+255),f,b
  4101  001988  378C               	rlcf	(___aomod@divisor+4)& (0+255),f,b
  4102  00198A  378D               	rlcf	(___aomod@divisor+5)& (0+255),f,b
  4103  00198C  378E               	rlcf	(___aomod@divisor+6)& (0+255),f,b
  4104  00198E  378F               	rlcf	(___aomod@divisor+7)& (0+255),f,b
  4105  001990  2B90               	incf	___aomod@counter& (0+255),f,b
  4106  001992                     l3060:
  4107  001992  FFFF               	dw	65535	; assembler added errata NOP
  4108                           
  4109                           ; BSR set to: 0
  4110  001994  AF8F               	btfss	(___aomod@divisor+7)& (0+255),7,b
  4111  001996  D7F2               	goto	l3058
  4112  001998                     u2180:
  4113  001998  FFFF               	dw	65535	; assembler added errata NOP
  4114                           
  4115                           ; BSR set to: 0
  4116  00199A  5188               	movf	___aomod@divisor& (0+255),w,b
  4117  00199C  5D80               	subwf	___aomod@dividend& (0+255),w,b
  4118  00199E  5189               	movf	(___aomod@divisor+1)& (0+255),w,b
  4119  0019A0  5981               	subwfb	(___aomod@dividend+1)& (0+255),w,b
  4120  0019A2  518A               	movf	(___aomod@divisor+2)& (0+255),w,b
  4121  0019A4  5982               	subwfb	(___aomod@dividend+2)& (0+255),w,b
  4122  0019A6  518B               	movf	(___aomod@divisor+3)& (0+255),w,b
  4123  0019A8  5983               	subwfb	(___aomod@dividend+3)& (0+255),w,b
  4124  0019AA  518C               	movf	(___aomod@divisor+4)& (0+255),w,b
  4125  0019AC  5984               	subwfb	(___aomod@dividend+4)& (0+255),w,b
  4126  0019AE  518D               	movf	(___aomod@divisor+5)& (0+255),w,b
  4127  0019B0  5985               	subwfb	(___aomod@dividend+5)& (0+255),w,b
  4128  0019B2  518E               	movf	(___aomod@divisor+6)& (0+255),w,b
  4129  0019B4  5986               	subwfb	(___aomod@dividend+6)& (0+255),w,b
  4130  0019B6  518F               	movf	(___aomod@divisor+7)& (0+255),w,b
  4131  0019B8  5987               	subwfb	(___aomod@dividend+7)& (0+255),w,b
  4132  0019BA  A0D8               	btfss	status,0,c
  4133  0019BC  D010               	goto	l3066
  4134                           
  4135                           ; BSR set to: 0
  4136  0019BE  5188               	movf	___aomod@divisor& (0+255),w,b
  4137  0019C0  5F80               	subwf	___aomod@dividend& (0+255),f,b
  4138  0019C2  5189               	movf	(___aomod@divisor+1)& (0+255),w,b
  4139  0019C4  5B81               	subwfb	(___aomod@dividend+1)& (0+255),f,b
  4140  0019C6  518A               	movf	(___aomod@divisor+2)& (0+255),w,b
  4141  0019C8  5B82               	subwfb	(___aomod@dividend+2)& (0+255),f,b
  4142  0019CA  518B               	movf	(___aomod@divisor+3)& (0+255),w,b
  4143  0019CC  5B83               	subwfb	(___aomod@dividend+3)& (0+255),f,b
  4144  0019CE  518C               	movf	(___aomod@divisor+4)& (0+255),w,b
  4145  0019D0  5B84               	subwfb	(___aomod@dividend+4)& (0+255),f,b
  4146  0019D2  518D               	movf	(___aomod@divisor+5)& (0+255),w,b
  4147  0019D4  5B85               	subwfb	(___aomod@dividend+5)& (0+255),f,b
  4148  0019D6  518E               	movf	(___aomod@divisor+6)& (0+255),w,b
  4149  0019D8  5B86               	subwfb	(___aomod@dividend+6)& (0+255),f,b
  4150  0019DA  518F               	movf	(___aomod@divisor+7)& (0+255),w,b
  4151  0019DC  5B87               	subwfb	(___aomod@dividend+7)& (0+255),f,b
  4152  0019DE                     l3066:
  4153  0019DE  FFFF               	dw	65535	; assembler added errata NOP
  4154                           
  4155                           ; BSR set to: 0
  4156  0019E0  90D8               	bcf	status,0,c
  4157  0019E2  338F               	rrcf	(___aomod@divisor+7)& (0+255),f,b
  4158  0019E4  338E               	rrcf	(___aomod@divisor+6)& (0+255),f,b
  4159  0019E6  338D               	rrcf	(___aomod@divisor+5)& (0+255),f,b
  4160  0019E8  338C               	rrcf	(___aomod@divisor+4)& (0+255),f,b
  4161  0019EA  338B               	rrcf	(___aomod@divisor+3)& (0+255),f,b
  4162  0019EC  338A               	rrcf	(___aomod@divisor+2)& (0+255),f,b
  4163  0019EE  3389               	rrcf	(___aomod@divisor+1)& (0+255),f,b
  4164  0019F0  3388               	rrcf	___aomod@divisor& (0+255),f,b
  4165                           
  4166                           ; BSR set to: 0
  4167  0019F2  2F90               	decfsz	___aomod@counter& (0+255),f,b
  4168  0019F4  D7D1               	goto	u2180
  4169  0019F6                     l3070:
  4170  0019F6  FFFF               	dw	65535	; assembler added errata NOP
  4171                           
  4172                           ; BSR set to: 0
  4173  0019F8  5191               	movf	___aomod@sign& (0+255),w,b
  4174  0019FA  B4D8               	btfsc	status,2,c
  4175  0019FC  D010               	goto	l3074
  4176                           
  4177                           ; BSR set to: 0
  4178  0019FE  1F87               	comf	(___aomod@dividend+7)& (0+255),f,b
  4179  001A00  1F86               	comf	(___aomod@dividend+6)& (0+255),f,b
  4180  001A02  1F85               	comf	(___aomod@dividend+5)& (0+255),f,b
  4181  001A04  1F84               	comf	(___aomod@dividend+4)& (0+255),f,b
  4182  001A06  1F83               	comf	(___aomod@dividend+3)& (0+255),f,b
  4183  001A08  1F82               	comf	(___aomod@dividend+2)& (0+255),f,b
  4184  001A0A  1F81               	comf	(___aomod@dividend+1)& (0+255),f,b
  4185  001A0C  6D80               	negf	___aomod@dividend& (0+255),b
  4186  001A0E  0E00               	movlw	0
  4187  001A10  2381               	addwfc	(___aomod@dividend+1)& (0+255),f,b
  4188  001A12  2382               	addwfc	(___aomod@dividend+2)& (0+255),f,b
  4189  001A14  2383               	addwfc	(___aomod@dividend+3)& (0+255),f,b
  4190  001A16  2384               	addwfc	(___aomod@dividend+4)& (0+255),f,b
  4191  001A18  2385               	addwfc	(___aomod@dividend+5)& (0+255),f,b
  4192  001A1A  2386               	addwfc	(___aomod@dividend+6)& (0+255),f,b
  4193  001A1C  2387               	addwfc	(___aomod@dividend+7)& (0+255),f,b
  4194  001A1E                     l3074:
  4195  001A1E  FFFF               	dw	65535	; assembler added errata NOP
  4196                           
  4197                           ; BSR set to: 0
  4198  001A20  C080  F080         	movff	___aomod@dividend,?___aomod
  4199  001A24  C081  F081         	movff	___aomod@dividend+1,?___aomod+1
  4200  001A28  C082  F082         	movff	___aomod@dividend+2,?___aomod+2
  4201  001A2C  C083  F083         	movff	___aomod@dividend+3,?___aomod+3
  4202  001A30  C084  F084         	movff	___aomod@dividend+4,?___aomod+4
  4203  001A34  C085  F085         	movff	___aomod@dividend+5,?___aomod+5
  4204  001A38  C086  F086         	movff	___aomod@dividend+6,?___aomod+6
  4205  001A3C  C087  F087         	movff	___aomod@dividend+7,?___aomod+7
  4206                           
  4207                           ; BSR set to: 0
  4208  001A40  0012               	return		;funcret
  4209  001A42  FFFF               	dw	65535	; errata NOP
  4210  001A44                     __end_of___aomod:
  4211                           	opt callstack 0
  4212                           
  4213 ;; *************** function ___aodiv *****************
  4214 ;; Defined at:
  4215 ;;		line 9 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/aodiv.c"
  4216 ;; Parameters:    Size  Location     Type
  4217 ;;  dividend        8    0[BANK0 ] long long 
  4218 ;;  divisor         8    8[BANK0 ] long long 
  4219 ;; Auto vars:     Size  Location     Type
  4220 ;;  quotient        8   18[BANK0 ] long long 
  4221 ;;  sign            1   17[BANK0 ] unsigned char 
  4222 ;;  counter         1   16[BANK0 ] unsigned char 
  4223 ;; Return value:  Size  Location     Type
  4224 ;;                  8    0[BANK0 ] long long 
  4225 ;; Registers used:
  4226 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4227 ;; Tracked objects:
  4228 ;;		On entry : 0/0
  4229 ;;		On exit  : 0/0
  4230 ;;		Unchanged: 0/0
  4231 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4232 ;;      Params:         0      16       0       0       0       0       0
  4233 ;;      Locals:         0      10       0       0       0       0       0
  4234 ;;      Temps:          0       0       0       0       0       0       0
  4235 ;;      Totals:         0      26       0       0       0       0       0
  4236 ;;Total ram usage:       26 bytes
  4237 ;; Hardware stack levels used:    1
  4238 ;; Hardware stack levels required when called:   10
  4239 ;; This function calls:
  4240 ;;		Nothing
  4241 ;; This function is called by:
  4242 ;;		_dtoa
  4243 ;; This function uses a non-reentrant model
  4244 ;;
  4245                           
  4246                           	psect	text18
  4247  001650                     __ptext18:
  4248                           	opt callstack 0
  4249  001650                     ___aodiv:
  4250                           	opt callstack 0
  4251  001650  FFFF               	dw	65535	; assembler added errata NOP
  4252                           
  4253                           ; BSR set to: 0
  4254                           ;incstack = 0
  4255  001652  0E00               	movlw	0
  4256  001654  0100               	movlb	0	; () banked
  4257  001656  6F91               	movwf	___aodiv@sign& (0+255),b
  4258                           
  4259                           ; BSR set to: 0
  4260  001658  AF8F               	btfss	(___aodiv@divisor+7)& (0+255),7,b
  4261  00165A  D012               	goto	l3006
  4262                           
  4263                           ; BSR set to: 0
  4264  00165C  1F8F               	comf	(___aodiv@divisor+7)& (0+255),f,b
  4265  00165E  1F8E               	comf	(___aodiv@divisor+6)& (0+255),f,b
  4266  001660  1F8D               	comf	(___aodiv@divisor+5)& (0+255),f,b
  4267  001662  1F8C               	comf	(___aodiv@divisor+4)& (0+255),f,b
  4268  001664  1F8B               	comf	(___aodiv@divisor+3)& (0+255),f,b
  4269  001666  1F8A               	comf	(___aodiv@divisor+2)& (0+255),f,b
  4270  001668  1F89               	comf	(___aodiv@divisor+1)& (0+255),f,b
  4271  00166A  6D88               	negf	___aodiv@divisor& (0+255),b
  4272  00166C  0E00               	movlw	0
  4273  00166E  2389               	addwfc	(___aodiv@divisor+1)& (0+255),f,b
  4274  001670  238A               	addwfc	(___aodiv@divisor+2)& (0+255),f,b
  4275  001672  238B               	addwfc	(___aodiv@divisor+3)& (0+255),f,b
  4276  001674  238C               	addwfc	(___aodiv@divisor+4)& (0+255),f,b
  4277  001676  238D               	addwfc	(___aodiv@divisor+5)& (0+255),f,b
  4278  001678  238E               	addwfc	(___aodiv@divisor+6)& (0+255),f,b
  4279  00167A  238F               	addwfc	(___aodiv@divisor+7)& (0+255),f,b
  4280                           
  4281                           ; BSR set to: 0
  4282  00167C  0E01               	movlw	1
  4283  00167E  6F91               	movwf	___aodiv@sign& (0+255),b
  4284  001680                     l3006:
  4285  001680  FFFF               	dw	65535	; assembler added errata NOP
  4286                           
  4287                           ; BSR set to: 0
  4288  001682  AF87               	btfss	(___aodiv@dividend+7)& (0+255),7,b
  4289  001684  D012               	goto	l3012
  4290                           
  4291                           ; BSR set to: 0
  4292  001686  1F87               	comf	(___aodiv@dividend+7)& (0+255),f,b
  4293  001688  1F86               	comf	(___aodiv@dividend+6)& (0+255),f,b
  4294  00168A  1F85               	comf	(___aodiv@dividend+5)& (0+255),f,b
  4295  00168C  1F84               	comf	(___aodiv@dividend+4)& (0+255),f,b
  4296  00168E  1F83               	comf	(___aodiv@dividend+3)& (0+255),f,b
  4297  001690  1F82               	comf	(___aodiv@dividend+2)& (0+255),f,b
  4298  001692  1F81               	comf	(___aodiv@dividend+1)& (0+255),f,b
  4299  001694  6D80               	negf	___aodiv@dividend& (0+255),b
  4300  001696  0E00               	movlw	0
  4301  001698  2381               	addwfc	(___aodiv@dividend+1)& (0+255),f,b
  4302  00169A  2382               	addwfc	(___aodiv@dividend+2)& (0+255),f,b
  4303  00169C  2383               	addwfc	(___aodiv@dividend+3)& (0+255),f,b
  4304  00169E  2384               	addwfc	(___aodiv@dividend+4)& (0+255),f,b
  4305  0016A0  2385               	addwfc	(___aodiv@dividend+5)& (0+255),f,b
  4306  0016A2  2386               	addwfc	(___aodiv@dividend+6)& (0+255),f,b
  4307  0016A4  2387               	addwfc	(___aodiv@dividend+7)& (0+255),f,b
  4308                           
  4309                           ; BSR set to: 0
  4310  0016A6  0E01               	movlw	1
  4311  0016A8  1B91               	xorwf	___aodiv@sign& (0+255),f,b
  4312  0016AA                     l3012:
  4313  0016AA  FFFF               	dw	65535	; assembler added errata NOP
  4314                           
  4315                           ; BSR set to: 0
  4316  0016AC  EE20  F092         	lfsr	2,___aodiv@quotient
  4317  0016B0  0E07               	movlw	7
  4318  0016B2                     u2101:
  4319  0016B2  6ADE               	clrf	postinc2,c
  4320  0016B4  06E8               	decf	wreg,f,c
  4321  0016B6  E2FD               	bc	u2101
  4322                           
  4323                           ; BSR set to: 0
  4324  0016B8  5188               	movf	___aodiv@divisor& (0+255),w,b
  4325  0016BA  1189               	iorwf	(___aodiv@divisor+1)& (0+255),w,b
  4326  0016BC  118A               	iorwf	(___aodiv@divisor+2)& (0+255),w,b
  4327  0016BE  118B               	iorwf	(___aodiv@divisor+3)& (0+255),w,b
  4328  0016C0  118C               	iorwf	(___aodiv@divisor+4)& (0+255),w,b
  4329  0016C2  118D               	iorwf	(___aodiv@divisor+5)& (0+255),w,b
  4330  0016C4  118E               	iorwf	(___aodiv@divisor+6)& (0+255),w,b
  4331  0016C6  118F               	iorwf	(___aodiv@divisor+7)& (0+255),w,b
  4332  0016C8  B4D8               	btfsc	status,2,c
  4333  0016CA  D04A               	goto	l3034
  4334                           
  4335                           ; BSR set to: 0
  4336  0016CC  0E01               	movlw	1
  4337  0016CE  6F90               	movwf	___aodiv@counter& (0+255),b
  4338  0016D0  D00B               	goto	l3020
  4339  0016D2                     l3018:
  4340  0016D2  FFFF               	dw	65535	; assembler added errata NOP
  4341                           
  4342                           ; BSR set to: 0
  4343  0016D4  90D8               	bcf	status,0,c
  4344  0016D6  3788               	rlcf	___aodiv@divisor& (0+255),f,b
  4345  0016D8  3789               	rlcf	(___aodiv@divisor+1)& (0+255),f,b
  4346  0016DA  378A               	rlcf	(___aodiv@divisor+2)& (0+255),f,b
  4347  0016DC  378B               	rlcf	(___aodiv@divisor+3)& (0+255),f,b
  4348  0016DE  378C               	rlcf	(___aodiv@divisor+4)& (0+255),f,b
  4349  0016E0  378D               	rlcf	(___aodiv@divisor+5)& (0+255),f,b
  4350  0016E2  378E               	rlcf	(___aodiv@divisor+6)& (0+255),f,b
  4351  0016E4  378F               	rlcf	(___aodiv@divisor+7)& (0+255),f,b
  4352  0016E6  2B90               	incf	___aodiv@counter& (0+255),f,b
  4353  0016E8                     l3020:
  4354  0016E8  FFFF               	dw	65535	; assembler added errata NOP
  4355                           
  4356                           ; BSR set to: 0
  4357  0016EA  AF8F               	btfss	(___aodiv@divisor+7)& (0+255),7,b
  4358  0016EC  D7F2               	goto	l3018
  4359  0016EE                     u2120:
  4360  0016EE  FFFF               	dw	65535	; assembler added errata NOP
  4361                           
  4362                           ; BSR set to: 0
  4363  0016F0  90D8               	bcf	status,0,c
  4364  0016F2  3792               	rlcf	___aodiv@quotient& (0+255),f,b
  4365  0016F4  3793               	rlcf	(___aodiv@quotient+1)& (0+255),f,b
  4366  0016F6  3794               	rlcf	(___aodiv@quotient+2)& (0+255),f,b
  4367  0016F8  3795               	rlcf	(___aodiv@quotient+3)& (0+255),f,b
  4368  0016FA  3796               	rlcf	(___aodiv@quotient+4)& (0+255),f,b
  4369  0016FC  3797               	rlcf	(___aodiv@quotient+5)& (0+255),f,b
  4370  0016FE  3798               	rlcf	(___aodiv@quotient+6)& (0+255),f,b
  4371  001700  3799               	rlcf	(___aodiv@quotient+7)& (0+255),f,b
  4372                           
  4373                           ; BSR set to: 0
  4374  001702  5188               	movf	___aodiv@divisor& (0+255),w,b
  4375  001704  5D80               	subwf	___aodiv@dividend& (0+255),w,b
  4376  001706  5189               	movf	(___aodiv@divisor+1)& (0+255),w,b
  4377  001708  5981               	subwfb	(___aodiv@dividend+1)& (0+255),w,b
  4378  00170A  518A               	movf	(___aodiv@divisor+2)& (0+255),w,b
  4379  00170C  5982               	subwfb	(___aodiv@dividend+2)& (0+255),w,b
  4380  00170E  518B               	movf	(___aodiv@divisor+3)& (0+255),w,b
  4381  001710  5983               	subwfb	(___aodiv@dividend+3)& (0+255),w,b
  4382  001712  518C               	movf	(___aodiv@divisor+4)& (0+255),w,b
  4383  001714  5984               	subwfb	(___aodiv@dividend+4)& (0+255),w,b
  4384  001716  518D               	movf	(___aodiv@divisor+5)& (0+255),w,b
  4385  001718  5985               	subwfb	(___aodiv@dividend+5)& (0+255),w,b
  4386  00171A  518E               	movf	(___aodiv@divisor+6)& (0+255),w,b
  4387  00171C  5986               	subwfb	(___aodiv@dividend+6)& (0+255),w,b
  4388  00171E  518F               	movf	(___aodiv@divisor+7)& (0+255),w,b
  4389  001720  5987               	subwfb	(___aodiv@dividend+7)& (0+255),w,b
  4390  001722  A0D8               	btfss	status,0,c
  4391  001724  D011               	goto	l3030
  4392                           
  4393                           ; BSR set to: 0
  4394  001726  5188               	movf	___aodiv@divisor& (0+255),w,b
  4395  001728  5F80               	subwf	___aodiv@dividend& (0+255),f,b
  4396  00172A  5189               	movf	(___aodiv@divisor+1)& (0+255),w,b
  4397  00172C  5B81               	subwfb	(___aodiv@dividend+1)& (0+255),f,b
  4398  00172E  518A               	movf	(___aodiv@divisor+2)& (0+255),w,b
  4399  001730  5B82               	subwfb	(___aodiv@dividend+2)& (0+255),f,b
  4400  001732  518B               	movf	(___aodiv@divisor+3)& (0+255),w,b
  4401  001734  5B83               	subwfb	(___aodiv@dividend+3)& (0+255),f,b
  4402  001736  518C               	movf	(___aodiv@divisor+4)& (0+255),w,b
  4403  001738  5B84               	subwfb	(___aodiv@dividend+4)& (0+255),f,b
  4404  00173A  518D               	movf	(___aodiv@divisor+5)& (0+255),w,b
  4405  00173C  5B85               	subwfb	(___aodiv@dividend+5)& (0+255),f,b
  4406  00173E  518E               	movf	(___aodiv@divisor+6)& (0+255),w,b
  4407  001740  5B86               	subwfb	(___aodiv@dividend+6)& (0+255),f,b
  4408  001742  518F               	movf	(___aodiv@divisor+7)& (0+255),w,b
  4409  001744  5B87               	subwfb	(___aodiv@dividend+7)& (0+255),f,b
  4410                           
  4411                           ; BSR set to: 0
  4412  001746  8192               	bsf	___aodiv@quotient& (0+255),0,b
  4413  001748                     l3030:
  4414  001748  FFFF               	dw	65535	; assembler added errata NOP
  4415                           
  4416                           ; BSR set to: 0
  4417  00174A  90D8               	bcf	status,0,c
  4418  00174C  338F               	rrcf	(___aodiv@divisor+7)& (0+255),f,b
  4419  00174E  338E               	rrcf	(___aodiv@divisor+6)& (0+255),f,b
  4420  001750  338D               	rrcf	(___aodiv@divisor+5)& (0+255),f,b
  4421  001752  338C               	rrcf	(___aodiv@divisor+4)& (0+255),f,b
  4422  001754  338B               	rrcf	(___aodiv@divisor+3)& (0+255),f,b
  4423  001756  338A               	rrcf	(___aodiv@divisor+2)& (0+255),f,b
  4424  001758  3389               	rrcf	(___aodiv@divisor+1)& (0+255),f,b
  4425  00175A  3388               	rrcf	___aodiv@divisor& (0+255),f,b
  4426                           
  4427                           ; BSR set to: 0
  4428  00175C  2F90               	decfsz	___aodiv@counter& (0+255),f,b
  4429  00175E  D7C7               	goto	u2120
  4430  001760                     l3034:
  4431  001760  FFFF               	dw	65535	; assembler added errata NOP
  4432                           
  4433                           ; BSR set to: 0
  4434  001762  5191               	movf	___aodiv@sign& (0+255),w,b
  4435  001764  B4D8               	btfsc	status,2,c
  4436  001766  D010               	goto	l3038
  4437                           
  4438                           ; BSR set to: 0
  4439  001768  1F99               	comf	(___aodiv@quotient+7)& (0+255),f,b
  4440  00176A  1F98               	comf	(___aodiv@quotient+6)& (0+255),f,b
  4441  00176C  1F97               	comf	(___aodiv@quotient+5)& (0+255),f,b
  4442  00176E  1F96               	comf	(___aodiv@quotient+4)& (0+255),f,b
  4443  001770  1F95               	comf	(___aodiv@quotient+3)& (0+255),f,b
  4444  001772  1F94               	comf	(___aodiv@quotient+2)& (0+255),f,b
  4445  001774  1F93               	comf	(___aodiv@quotient+1)& (0+255),f,b
  4446  001776  6D92               	negf	___aodiv@quotient& (0+255),b
  4447  001778  0E00               	movlw	0
  4448  00177A  2393               	addwfc	(___aodiv@quotient+1)& (0+255),f,b
  4449  00177C  2394               	addwfc	(___aodiv@quotient+2)& (0+255),f,b
  4450  00177E  2395               	addwfc	(___aodiv@quotient+3)& (0+255),f,b
  4451  001780  2396               	addwfc	(___aodiv@quotient+4)& (0+255),f,b
  4452  001782  2397               	addwfc	(___aodiv@quotient+5)& (0+255),f,b
  4453  001784  2398               	addwfc	(___aodiv@quotient+6)& (0+255),f,b
  4454  001786  2399               	addwfc	(___aodiv@quotient+7)& (0+255),f,b
  4455  001788                     l3038:
  4456  001788  FFFF               	dw	65535	; assembler added errata NOP
  4457                           
  4458                           ; BSR set to: 0
  4459  00178A  C092  F080         	movff	___aodiv@quotient,?___aodiv
  4460  00178E  C093  F081         	movff	___aodiv@quotient+1,?___aodiv+1
  4461  001792  C094  F082         	movff	___aodiv@quotient+2,?___aodiv+2
  4462  001796  C095  F083         	movff	___aodiv@quotient+3,?___aodiv+3
  4463  00179A  C096  F084         	movff	___aodiv@quotient+4,?___aodiv+4
  4464  00179E  C097  F085         	movff	___aodiv@quotient+5,?___aodiv+5
  4465  0017A2  C098  F086         	movff	___aodiv@quotient+6,?___aodiv+6
  4466  0017A6  C099  F087         	movff	___aodiv@quotient+7,?___aodiv+7
  4467                           
  4468                           ; BSR set to: 0
  4469  0017AA  0012               	return		;funcret
  4470  0017AC  FFFF               	dw	65535	; errata NOP
  4471  0017AE                     __end_of___aodiv:
  4472                           	opt callstack 0
  4473                           
  4474 ;; *************** function _atoi *****************
  4475 ;; Defined at:
  4476 ;;		line 4 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/atoi.c"
  4477 ;; Parameters:    Size  Location     Type
  4478 ;;  s               2    7[BANK0 ] PTR const unsigned char 
  4479 ;;		 -> STR_5(18), STR_4(17), STR_3(17), STR_2(17), 
  4480 ;;		 -> STR_1(17), 
  4481 ;; Auto vars:     Size  Location     Type
  4482 ;;  n               2   20[BANK0 ] int 
  4483 ;;  neg             2   13[BANK0 ] int 
  4484 ;; Return value:  Size  Location     Type
  4485 ;;                  2    7[BANK0 ] int 
  4486 ;; Registers used:
  4487 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4488 ;; Tracked objects:
  4489 ;;		On entry : 0/0
  4490 ;;		On exit  : 0/0
  4491 ;;		Unchanged: 0/0
  4492 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4493 ;;      Params:         0       2       0       0       0       0       0
  4494 ;;      Locals:         0       9       0       0       0       0       0
  4495 ;;      Temps:          0       4       0       0       0       0       0
  4496 ;;      Totals:         0      15       0       0       0       0       0
  4497 ;;Total ram usage:       15 bytes
  4498 ;; Hardware stack levels used:    1
  4499 ;; Hardware stack levels required when called:   11
  4500 ;; This function calls:
  4501 ;;		___wmul
  4502 ;;		_isdigit
  4503 ;;		_isspace
  4504 ;; This function is called by:
  4505 ;;		_vfpfcnvrt
  4506 ;; This function uses a non-reentrant model
  4507 ;;
  4508                           
  4509                           	psect	text19
  4510  001380                     __ptext19:
  4511                           	opt callstack 0
  4512  001380                     _atoi:
  4513                           	opt callstack 0
  4514  001380  FFFF               	dw	65535	; assembler added errata NOP
  4515                           
  4516                           ; BSR set to: 0
  4517                           ;incstack = 0
  4518  001382  0E00               	movlw	0
  4519  001384  0100               	movlb	0	; () banked
  4520  001386  6F95               	movwf	(atoi@n+1)& (0+255),b
  4521  001388  0E00               	movlw	0
  4522  00138A  6F94               	movwf	atoi@n& (0+255),b
  4523  00138C  0E00               	movlw	0
  4524  00138E  6F8E               	movwf	(atoi@neg+1)& (0+255),b
  4525  001390  0E00               	movlw	0
  4526  001392  6F8D               	movwf	atoi@neg& (0+255),b
  4527  001394  D003               	goto	l3286
  4528  001396                     l3284:
  4529  001396  FFFF               	dw	65535	; assembler added errata NOP
  4530                           
  4531                           ; BSR set to: 0
  4532  001398  4B87               	infsnz	atoi@s& (0+255),f,b
  4533  00139A  2B88               	incf	(atoi@s+1)& (0+255),f,b
  4534  00139C                     l3286:
  4535  00139C  FFFF               	dw	65535	; assembler added errata NOP
  4536                           
  4537                           ; BSR set to: 0
  4538  00139E  0E01               	movlw	1
  4539  0013A0  6F93               	movwf	_atoi$1412& (0+255),b
  4540                           
  4541                           ; BSR set to: 0
  4542  0013A2  C087  FFF6         	movff	atoi@s,tblptrl
  4543  0013A6  C088  FFF7         	movff	atoi@s+1,tblptrh
  4544  0013AA                     	if	0	;tblptru may be non-zero
  4545  0013AA                     	endif
  4546  0013AA                     	if	0	;tblptru may be non-zero
  4547  0013AA                     	endif
  4548  0013AA  0008               	tblrd		*
  4549  0013AC  FFFF               	dw	65535	; errata NOP
  4550  0013AE  50F5               	movf	tablat,w,c
  4551  0013B0  0A20               	xorlw	32
  4552  0013B2  B4D8               	btfsc	status,2,c
  4553  0013B4  D019               	goto	l3294
  4554                           
  4555                           ; BSR set to: 0
  4556  0013B6  0EF7               	movlw	247
  4557  0013B8  6F89               	movwf	??_atoi& (0+255),b
  4558  0013BA  0EFF               	movlw	255
  4559  0013BC  6F8A               	movwf	(??_atoi+1)& (0+255),b
  4560  0013BE  C087  FFF6         	movff	atoi@s,tblptrl
  4561  0013C2  C088  FFF7         	movff	atoi@s+1,tblptrh
  4562  0013C6                     	if	0	;tblptru may be non-zero
  4563  0013C6                     	endif
  4564  0013C6                     	if	0	;tblptru may be non-zero
  4565  0013C6                     	endif
  4566  0013C6  0008               	tblrd		*
  4567  0013C8  FFFF               	dw	65535	; errata NOP
  4568  0013CA  50F5               	movf	tablat,w,c
  4569  0013CC  6F8B               	movwf	(??_atoi+2)& (0+255),b
  4570  0013CE  6B8C               	clrf	(??_atoi+3)& (0+255),b
  4571  0013D0  5189               	movf	??_atoi& (0+255),w,b
  4572  0013D2  278B               	addwf	(??_atoi+2)& (0+255),f,b
  4573  0013D4  518A               	movf	(??_atoi+1)& (0+255),w,b
  4574  0013D6  238C               	addwfc	(??_atoi+3)& (0+255),f,b
  4575  0013D8  518C               	movf	(??_atoi+3)& (0+255),w,b
  4576  0013DA  E104               	bnz	u2610
  4577  0013DC  0E05               	movlw	5
  4578  0013DE  5D8B               	subwf	(??_atoi+2)& (0+255),w,b
  4579  0013E0  A0D8               	btfss	status,0,c
  4580  0013E2  D002               	goto	l3294
  4581  0013E4                     u2610:
  4582                           
  4583                           ; BSR set to: 0
  4584  0013E4  0E00               	movlw	0
  4585  0013E6  6F93               	movwf	_atoi$1412& (0+255),b
  4586  0013E8                     l3294:
  4587  0013E8  FFFF               	dw	65535	; assembler added errata NOP
  4588                           
  4589                           ; BSR set to: 0
  4590  0013EA  C093  F08F         	movff	_atoi$1412,_atoi$1411
  4591  0013EE  6B90               	clrf	(_atoi$1411+1)& (0+255),b
  4592                           
  4593                           ; BSR set to: 0
  4594  0013F0  518F               	movf	_atoi$1411& (0+255),w,b
  4595  0013F2  1190               	iorwf	(_atoi$1411+1)& (0+255),w,b
  4596  0013F4  B4D8               	btfsc	status,2,c
  4597  0013F6  D00A               	goto	l3304
  4598  0013F8  D7CE               	goto	l3284
  4599  0013FA                     l3300:
  4600  0013FA  FFFF               	dw	65535	; assembler added errata NOP
  4601                           
  4602                           ; BSR set to: 0
  4603  0013FC  0E00               	movlw	0
  4604  0013FE  6F8E               	movwf	(atoi@neg+1)& (0+255),b
  4605  001400  0E01               	movlw	1
  4606  001402  6F8D               	movwf	atoi@neg& (0+255),b
  4607  001404                     l3302:
  4608  001404  FFFF               	dw	65535	; assembler added errata NOP
  4609                           
  4610                           ; BSR set to: 0
  4611  001406  4B87               	infsnz	atoi@s& (0+255),f,b
  4612  001408  2B88               	incf	(atoi@s+1)& (0+255),f,b
  4613  00140A  D033               	goto	l3310
  4614  00140C                     l3304:
  4615  00140C  FFFF               	dw	65535	; assembler added errata NOP
  4616                           
  4617                           ; BSR set to: 0
  4618  00140E  C087  FFF6         	movff	atoi@s,tblptrl
  4619  001412  C088  FFF7         	movff	atoi@s+1,tblptrh
  4620  001416                     	if	0	;tblptru may be non-zero
  4621  001416                     	endif
  4622  001416                     	if	0	;tblptru may be non-zero
  4623  001416                     	endif
  4624  001416  0008               	tblrd		*
  4625  001418  FFFF               	dw	65535	; errata NOP
  4626  00141A  50F5               	movf	tablat,w,c
  4627  00141C  6F89               	movwf	??_atoi& (0+255),b
  4628  00141E  6B8A               	clrf	(??_atoi+1)& (0+255),b
  4629                           
  4630                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4631                           ; Switch size 1, requested type "simple"
  4632                           ; Number of cases is 1, Range of values is 0 to 0
  4633                           ; switch strategies available:
  4634                           ; Name         Instructions Cycles
  4635                           ; simple_byte            4     3 (average)
  4636                           ;	Chosen strategy is simple_byte
  4637  001420  518A               	movf	(??_atoi+1)& (0+255),w,b
  4638  001422  0A00               	xorlw	0	; case 0
  4639  001424  A4D8               	btfss	status,2,c
  4640  001426  D025               	goto	l3310
  4641                           
  4642                           ; BSR set to: 0
  4643                           ; Switch size 1, requested type "simple"
  4644                           ; Number of cases is 2, Range of values is 43 to 45
  4645                           ; switch strategies available:
  4646                           ; Name         Instructions Cycles
  4647                           ; simple_byte            7     4 (average)
  4648                           ;	Chosen strategy is simple_byte
  4649  001428  5189               	movf	??_atoi& (0+255),w,b
  4650  00142A  0A2B               	xorlw	43	; case 43
  4651  00142C  B4D8               	btfsc	status,2,c
  4652  00142E  D7EA               	goto	l3302
  4653  001430  0A06               	xorlw	6	; case 45
  4654  001432  B4D8               	btfsc	status,2,c
  4655  001434  D7E2               	goto	l3300
  4656  001436  D01D               	goto	l3310
  4657  001438                     l3306:
  4658  001438  FFFF               	dw	65535	; assembler added errata NOP
  4659                           
  4660                           ; BSR set to: 0
  4661  00143A  C094  F080         	movff	atoi@n,___wmul@multiplier
  4662  00143E  C095  F081         	movff	atoi@n+1,___wmul@multiplier+1
  4663  001442  0E00               	movlw	0
  4664  001444  6F83               	movwf	(___wmul@multiplicand+1)& (0+255),b
  4665  001446  0E0A               	movlw	10
  4666  001448  6F82               	movwf	___wmul@multiplicand& (0+255),b
  4667  00144A  ECE7  F015         	call	___wmul	;wreg free
  4668  00144E  C087  FFF6         	movff	atoi@s,tblptrl
  4669  001452  C088  FFF7         	movff	atoi@s+1,tblptrh
  4670  001456                     	if	0	;tblptru may be non-zero
  4671  001456                     	endif
  4672  001456                     	if	0	;tblptru may be non-zero
  4673  001456                     	endif
  4674  001456  0008               	tblrd		*
  4675  001458  FFFF               	dw	65535	; errata NOP
  4676  00145A  50F5               	movf	tablat,w,c
  4677  00145C  0100               	movlb	0	; () banked
  4678  00145E  5F80               	subwf	?___wmul& (0+255),f,b
  4679  001460  0E00               	movlw	0
  4680  001462  5B81               	subwfb	(?___wmul+1)& (0+255),f,b
  4681  001464  0E30               	movlw	48
  4682  001466  2580               	addwf	?___wmul& (0+255),w,b
  4683  001468  6F94               	movwf	atoi@n& (0+255),b
  4684  00146A  0E00               	movlw	0
  4685  00146C  2181               	addwfc	(?___wmul+1)& (0+255),w,b
  4686  00146E  6F95               	movwf	(atoi@n+1)& (0+255),b
  4687  001470  D7C9               	goto	l3302
  4688  001472                     l3310:
  4689  001472  FFFF               	dw	65535	; assembler added errata NOP
  4690                           
  4691                           ; BSR set to: 0
  4692  001474  0ED0               	movlw	208
  4693  001476  6F89               	movwf	??_atoi& (0+255),b
  4694  001478  0EFF               	movlw	255
  4695  00147A  6F8A               	movwf	(??_atoi+1)& (0+255),b
  4696  00147C  C087  FFF6         	movff	atoi@s,tblptrl
  4697  001480  C088  FFF7         	movff	atoi@s+1,tblptrh
  4698  001484                     	if	0	;tblptru may be non-zero
  4699  001484                     	endif
  4700  001484                     	if	0	;tblptru may be non-zero
  4701  001484                     	endif
  4702  001484  0008               	tblrd		*
  4703  001486  FFFF               	dw	65535	; errata NOP
  4704  001488  50F5               	movf	tablat,w,c
  4705  00148A  6F8B               	movwf	(??_atoi+2)& (0+255),b
  4706  00148C  6B8C               	clrf	(??_atoi+3)& (0+255),b
  4707  00148E  5189               	movf	??_atoi& (0+255),w,b
  4708  001490  278B               	addwf	(??_atoi+2)& (0+255),f,b
  4709  001492  518A               	movf	(??_atoi+1)& (0+255),w,b
  4710  001494  238C               	addwfc	(??_atoi+3)& (0+255),f,b
  4711  001496  518C               	movf	(??_atoi+3)& (0+255),w,b
  4712  001498  E106               	bnz	u2630
  4713  00149A  0E0A               	movlw	10
  4714  00149C  5D8B               	subwf	(??_atoi+2)& (0+255),w,b
  4715  00149E  B0D8               	btfsc	status,0,c
  4716  0014A0  D002               	goto	u2630
  4717  0014A2  0E01               	movlw	1
  4718  0014A4  D002               	goto	u2640
  4719  0014A6                     u2630:
  4720  0014A6  FFFF               	dw	65535	; assembler added errata NOP
  4721  0014A8  0E00               	movlw	0
  4722  0014AA                     u2640:
  4723  0014AA  FFFF               	dw	65535	; assembler added errata NOP
  4724  0014AC  6F91               	movwf	_atoi$1413& (0+255),b
  4725  0014AE  6B92               	clrf	(_atoi$1413+1)& (0+255),b
  4726                           
  4727                           ; BSR set to: 0
  4728  0014B0  5191               	movf	_atoi$1413& (0+255),w,b
  4729  0014B2  1192               	iorwf	(_atoi$1413+1)& (0+255),w,b
  4730  0014B4  A4D8               	btfss	status,2,c
  4731  0014B6  D7C0               	goto	l3306
  4732                           
  4733                           ; BSR set to: 0
  4734  0014B8  518D               	movf	atoi@neg& (0+255),w,b
  4735  0014BA  118E               	iorwf	(atoi@neg+1)& (0+255),w,b
  4736  0014BC  A4D8               	btfss	status,2,c
  4737  0014BE  D00D               	goto	l1331
  4738                           
  4739                           ; BSR set to: 0
  4740  0014C0  C094  F089         	movff	atoi@n,??_atoi
  4741  0014C4  C095  F08A         	movff	atoi@n+1,??_atoi+1
  4742  0014C8  1F89               	comf	??_atoi& (0+255),f,b
  4743  0014CA  1F8A               	comf	(??_atoi+1)& (0+255),f,b
  4744  0014CC  4B89               	infsnz	??_atoi& (0+255),f,b
  4745  0014CE  2B8A               	incf	(??_atoi+1)& (0+255),f,b
  4746  0014D0  C089  F087         	movff	??_atoi,?_atoi
  4747  0014D4  C08A  F088         	movff	??_atoi+1,?_atoi+1
  4748  0014D8  D005               	goto	l1334
  4749  0014DA                     l1331:
  4750  0014DA  FFFF               	dw	65535	; assembler added errata NOP
  4751                           
  4752                           ; BSR set to: 0
  4753  0014DC  C094  F087         	movff	atoi@n,?_atoi
  4754  0014E0  C095  F088         	movff	atoi@n+1,?_atoi+1
  4755  0014E4                     l1334:
  4756  0014E4  FFFF               	dw	65535	; assembler added errata NOP
  4757                           
  4758                           ; BSR set to: 0
  4759  0014E6  0012               	return		;funcret
  4760  0014E8  FFFF               	dw	65535	; errata NOP
  4761  0014EA                     __end_of_atoi:
  4762                           	opt callstack 0
  4763                           
  4764 ;; *************** function _isspace *****************
  4765 ;; Defined at:
  4766 ;;		line 5 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/isspace.c"
  4767 ;; Parameters:    Size  Location     Type
  4768 ;;  c               2    0[BANK0 ] int 
  4769 ;; Auto vars:     Size  Location     Type
  4770 ;;		None
  4771 ;; Return value:  Size  Location     Type
  4772 ;;                  2    0[BANK0 ] int 
  4773 ;; Registers used:
  4774 ;;		wreg, status,2, status,0
  4775 ;; Tracked objects:
  4776 ;;		On entry : 0/0
  4777 ;;		On exit  : 0/0
  4778 ;;		Unchanged: 0/0
  4779 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4780 ;;      Params:         0       2       0       0       0       0       0
  4781 ;;      Locals:         0       1       0       0       0       0       0
  4782 ;;      Temps:          0       4       0       0       0       0       0
  4783 ;;      Totals:         0       7       0       0       0       0       0
  4784 ;;Total ram usage:        7 bytes
  4785 ;; Hardware stack levels used:    1
  4786 ;; Hardware stack levels required when called:   10
  4787 ;; This function calls:
  4788 ;;		Nothing
  4789 ;; This function is called by:
  4790 ;;		_atoi
  4791 ;; This function uses a non-reentrant model
  4792 ;;
  4793                           
  4794                           	psect	text20
  4795  002888                     __ptext20:
  4796                           	opt callstack 0
  4797  002888                     _isspace:
  4798                           	opt callstack 0
  4799  002888  FFFF               	dw	65535	; assembler added errata NOP
  4800                           
  4801                           ; BSR set to: 0
  4802                           ;incstack = 0
  4803  00288A  0E01               	movlw	1
  4804  00288C  0100               	movlb	0	; () banked
  4805  00288E  6F86               	movwf	_isspace$1429& (0+255),b
  4806                           
  4807                           ; BSR set to: 0
  4808  002890  0E20               	movlw	32
  4809  002892  1980               	xorwf	isspace@c& (0+255),w,b
  4810  002894  1181               	iorwf	(isspace@c+1)& (0+255),w,b
  4811  002896  B4D8               	btfsc	status,2,c
  4812  002898  D014               	goto	l3086
  4813                           
  4814                           ; BSR set to: 0
  4815  00289A  0EF7               	movlw	247
  4816  00289C  6F82               	movwf	??_isspace& (0+255),b
  4817  00289E  0EFF               	movlw	255
  4818  0028A0  6F83               	movwf	(??_isspace+1)& (0+255),b
  4819  0028A2  C080  F084         	movff	isspace@c,??_isspace+2
  4820  0028A6  C081  F085         	movff	isspace@c+1,??_isspace+3
  4821  0028AA  5182               	movf	??_isspace& (0+255),w,b
  4822  0028AC  2784               	addwf	(??_isspace+2)& (0+255),f,b
  4823  0028AE  5183               	movf	(??_isspace+1)& (0+255),w,b
  4824  0028B0  2385               	addwfc	(??_isspace+3)& (0+255),f,b
  4825  0028B2  5185               	movf	(??_isspace+3)& (0+255),w,b
  4826  0028B4  E104               	bnz	u2220
  4827  0028B6  0E05               	movlw	5
  4828  0028B8  5D84               	subwf	(??_isspace+2)& (0+255),w,b
  4829  0028BA  A0D8               	btfss	status,0,c
  4830  0028BC  D002               	goto	l3086
  4831  0028BE                     u2220:
  4832                           
  4833                           ; BSR set to: 0
  4834  0028BE  0E00               	movlw	0
  4835  0028C0  6F86               	movwf	_isspace$1429& (0+255),b
  4836  0028C2                     l3086:
  4837  0028C2  FFFF               	dw	65535	; assembler added errata NOP
  4838                           
  4839                           ; BSR set to: 0
  4840  0028C4  C086  F080         	movff	_isspace$1429,?_isspace
  4841  0028C8  6B81               	clrf	(?_isspace+1)& (0+255),b
  4842                           
  4843                           ; BSR set to: 0
  4844  0028CA  0012               	return		;funcret
  4845  0028CC  FFFF               	dw	65535	; errata NOP
  4846  0028CE                     __end_of_isspace:
  4847                           	opt callstack 0
  4848                           
  4849 ;; *************** function _isdigit *****************
  4850 ;; Defined at:
  4851 ;;		line 5 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/isdigit.c"
  4852 ;; Parameters:    Size  Location     Type
  4853 ;;  c               2    0[BANK0 ] int 
  4854 ;; Auto vars:     Size  Location     Type
  4855 ;;		None
  4856 ;; Return value:  Size  Location     Type
  4857 ;;                  2    0[BANK0 ] int 
  4858 ;; Registers used:
  4859 ;;		wreg, status,2, status,0
  4860 ;; Tracked objects:
  4861 ;;		On entry : 0/0
  4862 ;;		On exit  : 0/0
  4863 ;;		Unchanged: 0/0
  4864 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4865 ;;      Params:         0       2       0       0       0       0       0
  4866 ;;      Locals:         0       0       0       0       0       0       0
  4867 ;;      Temps:          0       4       0       0       0       0       0
  4868 ;;      Totals:         0       6       0       0       0       0       0
  4869 ;;Total ram usage:        6 bytes
  4870 ;; Hardware stack levels used:    1
  4871 ;; Hardware stack levels required when called:   10
  4872 ;; This function calls:
  4873 ;;		Nothing
  4874 ;; This function is called by:
  4875 ;;		_vfpfcnvrt
  4876 ;;		_atoi
  4877 ;; This function uses a non-reentrant model
  4878 ;;
  4879                           
  4880                           	psect	text21
  4881  002A8E                     __ptext21:
  4882                           	opt callstack 0
  4883  002A8E                     _isdigit:
  4884                           	opt callstack 0
  4885  002A8E  FFFF               	dw	65535	; assembler added errata NOP
  4886                           
  4887                           ; BSR set to: 0
  4888                           ;incstack = 0
  4889  002A90  0ED0               	movlw	208
  4890  002A92  0100               	movlb	0	; () banked
  4891  002A94  6F82               	movwf	??_isdigit& (0+255),b
  4892  002A96  0EFF               	movlw	255
  4893  002A98  6F83               	movwf	(??_isdigit+1)& (0+255),b
  4894  002A9A  C080  F084         	movff	isdigit@c,??_isdigit+2
  4895  002A9E  C081  F085         	movff	isdigit@c+1,??_isdigit+3
  4896  002AA2  5182               	movf	??_isdigit& (0+255),w,b
  4897  002AA4  2784               	addwf	(??_isdigit+2)& (0+255),f,b
  4898  002AA6  5183               	movf	(??_isdigit+1)& (0+255),w,b
  4899  002AA8  2385               	addwfc	(??_isdigit+3)& (0+255),f,b
  4900  002AAA  5185               	movf	(??_isdigit+3)& (0+255),w,b
  4901  002AAC  E106               	bnz	u2060
  4902  002AAE  0E0A               	movlw	10
  4903  002AB0  5D84               	subwf	(??_isdigit+2)& (0+255),w,b
  4904  002AB2  B0D8               	btfsc	status,0,c
  4905  002AB4  D002               	goto	u2060
  4906  002AB6  0E01               	movlw	1
  4907  002AB8  D002               	goto	u2070
  4908  002ABA                     u2060:
  4909  002ABA  FFFF               	dw	65535	; assembler added errata NOP
  4910  002ABC  0E00               	movlw	0
  4911  002ABE                     u2070:
  4912  002ABE  FFFF               	dw	65535	; assembler added errata NOP
  4913  002AC0  6F80               	movwf	?_isdigit& (0+255),b
  4914  002AC2  6B81               	clrf	(?_isdigit+1)& (0+255),b
  4915                           
  4916                           ; BSR set to: 0
  4917  002AC4  0012               	return		;funcret
  4918  002AC6  FFFF               	dw	65535	; errata NOP
  4919  002AC8                     __end_of_isdigit:
  4920                           	opt callstack 0
  4921                           
  4922 ;; *************** function _setData *****************
  4923 ;; Defined at:
  4924 ;;		line 46 in file "eeprom.c"
  4925 ;; Parameters:    Size  Location     Type
  4926 ;;  full            1    wreg     unsigned char 
  4927 ;; Auto vars:     Size  Location     Type
  4928 ;;  full            1    4[BANK0 ] unsigned char 
  4929 ;;  data1           1    3[BANK0 ] unsigned char 
  4930 ;;  data0           1    2[BANK0 ] unsigned char 
  4931 ;; Return value:  Size  Location     Type
  4932 ;;                  1    wreg      void 
  4933 ;; Registers used:
  4934 ;;		wreg, status,2, cstack
  4935 ;; Tracked objects:
  4936 ;;		On entry : 0/0
  4937 ;;		On exit  : 0/0
  4938 ;;		Unchanged: 0/0
  4939 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4940 ;;      Params:         0       0       0       0       0       0       0
  4941 ;;      Locals:         0       3       0       0       0       0       0
  4942 ;;      Temps:          0       0       0       0       0       0       0
  4943 ;;      Totals:         0       3       0       0       0       0       0
  4944 ;;Total ram usage:        3 bytes
  4945 ;; Hardware stack levels used:    1
  4946 ;; Hardware stack levels required when called:   11
  4947 ;; This function calls:
  4948 ;;		_writeEEPROM
  4949 ;; This function is called by:
  4950 ;;		_setFrequency
  4951 ;; This function uses a non-reentrant model
  4952 ;;
  4953                           
  4954                           	psect	text22
  4955  00216C                     __ptext22:
  4956                           	opt callstack 0
  4957  00216C                     _setData:
  4958                           	opt callstack 0
  4959  00216C  FFFF               	dw	65535	; assembler added errata NOP
  4960                           
  4961                           ; BSR set to: 0
  4962                           ;incstack = 0
  4963                           ;setData@full stored from wreg
  4964  00216E  0100               	movlb	0	; () banked
  4965  002170  6F84               	movwf	setData@full& (0+255),b
  4966                           
  4967                           ;eeprom.c: 47:     unsigned char data0 = frequency & 0x00FF;
  4968  002172  C0F8  F082         	movff	_frequency,setData@data0
  4969                           
  4970                           ;eeprom.c: 48:     unsigned char data1 = frequency >> 8;
  4971  002176  0100               	movlb	0	; () banked
  4972  002178  51F9               	movf	(_frequency+1)& (0+255),w,b
  4973  00217A  6F83               	movwf	setData@data1& (0+255),b
  4974                           
  4975                           ; BSR set to: 0
  4976                           ;eeprom.c: 49:     if(full)writeEEPROM(data0 ,0);
  4977  00217C  5184               	movf	setData@full& (0+255),w,b
  4978  00217E  B4D8               	btfsc	status,2,c
  4979  002180  D005               	goto	l3834
  4980                           
  4981                           ; BSR set to: 0
  4982  002182  0E00               	movlw	0
  4983  002184  6F80               	movwf	writeEEPROM@address& (0+255),b
  4984  002186  5182               	movf	setData@data0& (0+255),w,b
  4985  002188  ECD0  F015         	call	_writeEEPROM
  4986  00218C                     l3834:
  4987  00218C  FFFF               	dw	65535	; assembler added errata NOP
  4988                           
  4989                           ;eeprom.c: 50:     if(full)writeEEPROM(data1 ,1);
  4990  00218E  0100               	movlb	0	; () banked
  4991  002190  5184               	movf	setData@full& (0+255),w,b
  4992  002192  B4D8               	btfsc	status,2,c
  4993  002194  D005               	goto	l72
  4994                           
  4995                           ; BSR set to: 0
  4996  002196  0E01               	movlw	1
  4997  002198  6F80               	movwf	writeEEPROM@address& (0+255),b
  4998  00219A  5183               	movf	setData@data1& (0+255),w,b
  4999  00219C  ECD0  F015         	call	_writeEEPROM
  5000  0021A0                     l72:
  5001  0021A0  FFFF               	dw	65535	; assembler added errata NOP
  5002                           
  5003                           ;eeprom.c: 51:     writeEEPROM(months ,2);
  5004  0021A2  0E02               	movlw	2
  5005  0021A4  0100               	movlb	0	; () banked
  5006  0021A6  6F80               	movwf	writeEEPROM@address& (0+255),b
  5007  0021A8  51FE               	movf	_months& (0+255),w,b
  5008  0021AA  ECD0  F015         	call	_writeEEPROM
  5009                           
  5010                           ;eeprom.c: 52:     writeEEPROM(days ,3);
  5011  0021AE  0E03               	movlw	3
  5012  0021B0  0100               	movlb	0	; () banked
  5013  0021B2  6F80               	movwf	writeEEPROM@address& (0+255),b
  5014  0021B4  51FD               	movf	_days& (0+255),w,b
  5015  0021B6  ECD0  F015         	call	_writeEEPROM
  5016                           
  5017                           ;eeprom.c: 53:     writeEEPROM(hours ,4);
  5018  0021BA  0E04               	movlw	4
  5019  0021BC  0100               	movlb	0	; () banked
  5020  0021BE  6F80               	movwf	writeEEPROM@address& (0+255),b
  5021  0021C0  51FC               	movf	_hours& (0+255),w,b
  5022  0021C2  ECD0  F015         	call	_writeEEPROM
  5023                           
  5024                           ;eeprom.c: 54:     writeEEPROM(minutes ,5);
  5025  0021C6  0E05               	movlw	5
  5026  0021C8  0100               	movlb	0	; () banked
  5027  0021CA  6F80               	movwf	writeEEPROM@address& (0+255),b
  5028  0021CC  51FB               	movf	_minutes& (0+255),w,b
  5029  0021CE  ECD0  F015         	call	_writeEEPROM
  5030                           
  5031                           ;eeprom.c: 55:     writeEEPROM(functionalStat ,6);
  5032  0021D2  0E06               	movlw	6
  5033  0021D4  0100               	movlb	0	; () banked
  5034  0021D6  6F80               	movwf	writeEEPROM@address& (0+255),b
  5035  0021D8  51FA               	movf	_functionalStat& (0+255),w,b
  5036  0021DA  ECD0  F015         	call	_writeEEPROM
  5037  0021DE  0012               	return		;funcret
  5038  0021E0  FFFF               	dw	65535	; errata NOP
  5039  0021E2                     __end_of_setData:
  5040                           	opt callstack 0
  5041                           
  5042 ;; *************** function _writeEEPROM *****************
  5043 ;; Defined at:
  5044 ;;		line 15 in file "eeprom.c"
  5045 ;; Parameters:    Size  Location     Type
  5046 ;;  data            1    wreg     unsigned char 
  5047 ;;  address         1    0[BANK0 ] unsigned char 
  5048 ;; Auto vars:     Size  Location     Type
  5049 ;;  data            1    1[BANK0 ] unsigned char 
  5050 ;; Return value:  Size  Location     Type
  5051 ;;                  1    wreg      void 
  5052 ;; Registers used:
  5053 ;;		wreg, status,2
  5054 ;; Tracked objects:
  5055 ;;		On entry : 0/0
  5056 ;;		On exit  : 0/0
  5057 ;;		Unchanged: 0/0
  5058 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5059 ;;      Params:         0       1       0       0       0       0       0
  5060 ;;      Locals:         0       1       0       0       0       0       0
  5061 ;;      Temps:          0       0       0       0       0       0       0
  5062 ;;      Totals:         0       2       0       0       0       0       0
  5063 ;;Total ram usage:        2 bytes
  5064 ;; Hardware stack levels used:    1
  5065 ;; Hardware stack levels required when called:   10
  5066 ;; This function calls:
  5067 ;;		Nothing
  5068 ;; This function is called by:
  5069 ;;		_setData
  5070 ;; This function uses a non-reentrant model
  5071 ;;
  5072                           
  5073                           	psect	text23
  5074  002BA0                     __ptext23:
  5075                           	opt callstack 0
  5076  002BA0                     _writeEEPROM:
  5077                           	opt callstack 0
  5078  002BA0  FFFF               	dw	65535	; assembler added errata NOP
  5079                           
  5080                           ;incstack = 0
  5081                           ;writeEEPROM@data stored from wreg
  5082  002BA2  0100               	movlb	0	; () banked
  5083  002BA4  6F81               	movwf	writeEEPROM@data& (0+255),b
  5084                           
  5085                           ;eeprom.c: 16:     EEADR = address;
  5086  002BA6  C080  FFA9         	movff	writeEEPROM@address,4009	;volatile
  5087                           
  5088                           ;eeprom.c: 17:     EEDATA = data;
  5089  002BAA  C081  FFA8         	movff	writeEEPROM@data,4008	;volatile
  5090                           
  5091                           ;eeprom.c: 19:     EECON1bits.EEPGD = 0;
  5092  002BAE  9EA6               	bcf	4006,7,c	;volsfr
  5093                           
  5094                           ;eeprom.c: 20:     EECON1bits.CFGS = 0;
  5095  002BB0  9CA6               	bcf	4006,6,c	;volsfr
  5096                           
  5097                           ;eeprom.c: 21:     EECON1bits.WREN = 1;
  5098  002BB2  84A6               	bsf	4006,2,c	;volsfr
  5099                           
  5100                           ;eeprom.c: 23:     INTCONbits.GIE = 0;
  5101  002BB4  9EF2               	bcf	4082,7,c	;volatile
  5102                           
  5103                           ;eeprom.c: 24:     EECON2 = 0x55;
  5104  002BB6  0E55               	movlw	85
  5105  002BB8  6EA7               	movwf	4007,c	;volsfr
  5106                           
  5107                           ;eeprom.c: 25:     EECON2 = 0xAA;
  5108  002BBA  0EAA               	movlw	170
  5109  002BBC  6EA7               	movwf	4007,c	;volsfr
  5110                           
  5111                           ;eeprom.c: 26:     EECON1bits.WR = 1;
  5112  002BBE  82A6               	bsf	4006,1,c	;volsfr
  5113                           
  5114                           ;eeprom.c: 27:     INTCONbits.GIE = 1;
  5115  002BC0  8EF2               	bsf	4082,7,c	;volatile
  5116  002BC2                     l62:
  5117  002BC2  FFFF               	dw	65535	; assembler added errata NOP
  5118  002BC4  B8A1               	btfsc	4001,4,c	;volatile
  5119  002BC6  0012               	return		;funcret
  5120  002BC8  FFFF               	dw	65535	; assembler added errata NOP
  5121  002BCA  D7FB               	goto	l62
  5122  002BCC  FFFF               	dw	65535	; errata NOP
  5123  002BCE                     __end_of_writeEEPROM:
  5124                           	opt callstack 0
  5125                           
  5126 ;; *************** function _beep *****************
  5127 ;; Defined at:
  5128 ;;		line 131 in file "main.c"
  5129 ;; Parameters:    Size  Location     Type
  5130 ;;  ms              2    6[BANK0 ] int 
  5131 ;; Auto vars:     Size  Location     Type
  5132 ;;		None
  5133 ;; Return value:  Size  Location     Type
  5134 ;;                  1    wreg      void 
  5135 ;; Registers used:
  5136 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  5137 ;; Tracked objects:
  5138 ;;		On entry : 0/0
  5139 ;;		On exit  : 0/0
  5140 ;;		Unchanged: 0/0
  5141 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5142 ;;      Params:         0       2       0       0       0       0       0
  5143 ;;      Locals:         0       0       0       0       0       0       0
  5144 ;;      Temps:          0       0       0       0       0       0       0
  5145 ;;      Totals:         0       2       0       0       0       0       0
  5146 ;;Total ram usage:        2 bytes
  5147 ;; Hardware stack levels used:    1
  5148 ;; Hardware stack levels required when called:   11
  5149 ;; This function calls:
  5150 ;;		___wmul
  5151 ;; This function is called by:
  5152 ;;		_main
  5153 ;;		_setFrequency
  5154 ;; This function uses a non-reentrant model
  5155 ;;
  5156                           
  5157                           	psect	text24
  5158  00257C                     __ptext24:
  5159                           	opt callstack 0
  5160  00257C                     _beep:
  5161                           	opt callstack 0
  5162  00257C  FFFF               	dw	65535	; assembler added errata NOP
  5163                           
  5164                           ;main.c: 132:     ms *= 5;
  5165                           
  5166                           ;incstack = 0
  5167  00257E  C086  F080         	movff	beep@ms,___wmul@multiplier
  5168  002582  C087  F081         	movff	beep@ms+1,___wmul@multiplier+1
  5169  002586  0E00               	movlw	0
  5170  002588  0100               	movlb	0	; () banked
  5171  00258A  6F83               	movwf	(___wmul@multiplicand+1)& (0+255),b
  5172  00258C  0E05               	movlw	5
  5173  00258E  6F82               	movwf	___wmul@multiplicand& (0+255),b
  5174  002590  ECE7  F015         	call	___wmul	;wreg free
  5175  002594  C080  F086         	movff	?___wmul,beep@ms
  5176  002598  C081  F087         	movff	?___wmul+1,beep@ms+1
  5177  00259C  0100               	movlb	0	; () banked
  5178  00259E  D00F               	goto	L5
  5179  0025A0                     l232:
  5180  0025A0  FFFF               	dw	65535	; assembler added errata NOP
  5181                           
  5182                           ; BSR set to: 0
  5183                           ;main.c: 134:         PORTDbits.RD0 = 1;
  5184  0025A2  8083               	bsf	3971,0,c	;volatile
  5185                           
  5186                           ; BSR set to: 0
  5187                           ;main.c: 135:         _delay((unsigned long)((100)*(12000000/4000000.0)));
  5188  0025A4  0E4B               	movlw	75
  5189  0025A6                     u3877:
  5190  0025A6  FFFF               	dw	65535	; errata NOP
  5191  0025A8  2EE8               	decfsz	wreg,f,c
  5192  0025AA  D7FD               	bra	u3877
  5193                           
  5194                           ;main.c: 136:         PORTDbits.RD0 = 0;
  5195  0025AC  9083               	bcf	3971,0,c	;volatile
  5196                           
  5197                           ;main.c: 137:         _delay((unsigned long)((100)*(12000000/4000000.0)));
  5198  0025AE  0E4B               	movlw	75
  5199  0025B0                     u3887:
  5200  0025B0  FFFF               	dw	65535	; errata NOP
  5201  0025B2  2EE8               	decfsz	wreg,f,c
  5202  0025B4  D7FD               	bra	u3887
  5203                           
  5204                           ;main.c: 138:     }
  5205  0025B6  0100               	movlb	0	; () banked
  5206  0025B8  0786               	decf	beep@ms& (0+255),f,b
  5207  0025BA  A0D8               	btfss	status,0,c
  5208  0025BC  0787               	decf	(beep@ms+1)& (0+255),f,b
  5209  0025BE                     L5:
  5210  0025BE  FFFF               	dw	65535	; assembler added errata NOP
  5211  0025C0  BF87               	btfsc	(beep@ms+1)& (0+255),7,b
  5212  0025C2  D005               	goto	u3270
  5213  0025C4  5187               	movf	(beep@ms+1)& (0+255),w,b
  5214  0025C6  E1EC               	bnz	l232
  5215  0025C8  0586               	decf	beep@ms& (0+255),w,b
  5216  0025CA  B0D8               	btfsc	status,0,c
  5217  0025CC  D7E9               	goto	l232
  5218  0025CE                     u3270:
  5219  0025CE  FFFF               	dw	65535	; assembler added errata NOP
  5220                           
  5221                           ; BSR set to: 0
  5222  0025D0  0012               	return		;funcret
  5223  0025D2  FFFF               	dw	65535	; errata NOP
  5224  0025D4                     __end_of_beep:
  5225                           	opt callstack 0
  5226                           
  5227 ;; *************** function ___wmul *****************
  5228 ;; Defined at:
  5229 ;;		line 15 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/Umul16.c"
  5230 ;; Parameters:    Size  Location     Type
  5231 ;;  multiplier      2    0[BANK0 ] unsigned int 
  5232 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  5233 ;; Auto vars:     Size  Location     Type
  5234 ;;  product         2    4[BANK0 ] unsigned int 
  5235 ;; Return value:  Size  Location     Type
  5236 ;;                  2    0[BANK0 ] unsigned int 
  5237 ;; Registers used:
  5238 ;;		wreg, status,2, status,0, prodl, prodh
  5239 ;; Tracked objects:
  5240 ;;		On entry : 0/0
  5241 ;;		On exit  : 0/0
  5242 ;;		Unchanged: 0/0
  5243 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5244 ;;      Params:         0       4       0       0       0       0       0
  5245 ;;      Locals:         0       2       0       0       0       0       0
  5246 ;;      Temps:          0       0       0       0       0       0       0
  5247 ;;      Totals:         0       6       0       0       0       0       0
  5248 ;;Total ram usage:        6 bytes
  5249 ;; Hardware stack levels used:    1
  5250 ;; Hardware stack levels required when called:   10
  5251 ;; This function calls:
  5252 ;;		Nothing
  5253 ;; This function is called by:
  5254 ;;		_beep
  5255 ;;		_atoi
  5256 ;; This function uses a non-reentrant model
  5257 ;;
  5258                           
  5259                           	psect	text25
  5260  002BCE                     __ptext25:
  5261                           	opt callstack 0
  5262  002BCE                     ___wmul:
  5263                           	opt callstack 0
  5264  002BCE  FFFF               	dw	65535	; assembler added errata NOP
  5265                           
  5266                           ; BSR set to: 0
  5267                           ;incstack = 0
  5268  002BD0  0100               	movlb	0	; () banked
  5269  002BD2  5180               	movf	___wmul@multiplier& (0+255),w,b
  5270  002BD4  0382               	mulwf	___wmul@multiplicand& (0+255),b
  5271  002BD6  CFF3 F084          	movff	prodl,___wmul@product
  5272  002BDA  CFF4 F085          	movff	prodh,___wmul@product+1
  5273  002BDE  5180               	movf	___wmul@multiplier& (0+255),w,b
  5274  002BE0  0383               	mulwf	(___wmul@multiplicand+1)& (0+255),b
  5275  002BE2  50F3               	movf	prodl,w,c
  5276  002BE4  2785               	addwf	(___wmul@product+1)& (0+255),f,b
  5277  002BE6  5181               	movf	(___wmul@multiplier+1)& (0+255),w,b
  5278  002BE8  0382               	mulwf	___wmul@multiplicand& (0+255),b
  5279  002BEA  50F3               	movf	prodl,w,c
  5280  002BEC  2785               	addwf	(___wmul@product+1)& (0+255),f,b
  5281                           
  5282                           ; BSR set to: 0
  5283  002BEE  C084  F080         	movff	___wmul@product,?___wmul
  5284  002BF2  C085  F081         	movff	___wmul@product+1,?___wmul+1
  5285                           
  5286                           ; BSR set to: 0
  5287  002BF6  0012               	return		;funcret
  5288  002BF8  FFFF               	dw	65535	; errata NOP
  5289  002BFA                     __end_of___wmul:
  5290                           	opt callstack 0
  5291                           
  5292 ;; *************** function _getData *****************
  5293 ;; Defined at:
  5294 ;;		line 33 in file "eeprom.c"
  5295 ;; Parameters:    Size  Location     Type
  5296 ;;		None
  5297 ;; Auto vars:     Size  Location     Type
  5298 ;;  aux1            1    4[BANK0 ] unsigned char 
  5299 ;;  aux0            1    3[BANK0 ] unsigned char 
  5300 ;; Return value:  Size  Location     Type
  5301 ;;                  1    wreg      void 
  5302 ;; Registers used:
  5303 ;;		wreg, status,2, status,0, cstack
  5304 ;; Tracked objects:
  5305 ;;		On entry : 0/0
  5306 ;;		On exit  : 0/0
  5307 ;;		Unchanged: 0/0
  5308 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5309 ;;      Params:         0       0       0       0       0       0       0
  5310 ;;      Locals:         0       2       0       0       0       0       0
  5311 ;;      Temps:          0       2       0       0       0       0       0
  5312 ;;      Totals:         0       4       0       0       0       0       0
  5313 ;;Total ram usage:        4 bytes
  5314 ;; Hardware stack levels used:    1
  5315 ;; Hardware stack levels required when called:   11
  5316 ;; This function calls:
  5317 ;;		_readEEPROM
  5318 ;; This function is called by:
  5319 ;;		_main
  5320 ;; This function uses a non-reentrant model
  5321 ;;
  5322                           
  5323                           	psect	text26
  5324  0022C2                     __ptext26:
  5325                           	opt callstack 0
  5326  0022C2                     _getData:
  5327                           	opt callstack 0
  5328  0022C2  FFFF               	dw	65535	; assembler added errata NOP
  5329                           
  5330                           ;eeprom.c: 34:     unsigned char aux0 = readEEPROM(0);
  5331                           
  5332                           ; BSR set to: 0
  5333                           ;incstack = 0
  5334  0022C4  0E00               	movlw	0
  5335  0022C6  EC6E  F016         	call	_readEEPROM
  5336  0022CA  0100               	movlb	0	; () banked
  5337  0022CC  6F83               	movwf	getData@aux0& (0+255),b
  5338                           
  5339                           ;eeprom.c: 35:     unsigned char aux1 = readEEPROM(1);
  5340  0022CE  0E01               	movlw	1
  5341  0022D0  EC6E  F016         	call	_readEEPROM
  5342  0022D4  0100               	movlb	0	; () banked
  5343  0022D6  6F84               	movwf	getData@aux1& (0+255),b
  5344                           
  5345                           ; BSR set to: 0
  5346                           ;eeprom.c: 36:     frequency = 0;
  5347  0022D8  0E00               	movlw	0
  5348  0022DA  6FF9               	movwf	(_frequency+1)& (0+255),b
  5349  0022DC  0E00               	movlw	0
  5350  0022DE  6FF8               	movwf	_frequency& (0+255),b
  5351                           
  5352                           ; BSR set to: 0
  5353                           ;eeprom.c: 37:     frequency = (aux1 << 8) | aux0;
  5354  0022E0  5183               	movf	getData@aux0& (0+255),w,b
  5355  0022E2  C084  F081         	movff	getData@aux1,??_getData
  5356  0022E6  6B82               	clrf	(??_getData+1)& (0+255),b
  5357  0022E8  C081  F082         	movff	??_getData,??_getData+1
  5358  0022EC  6B81               	clrf	??_getData& (0+255),b
  5359  0022EE  1181               	iorwf	??_getData& (0+255),w,b
  5360  0022F0  6FF8               	movwf	_frequency& (0+255),b
  5361  0022F2  5182               	movf	(??_getData+1)& (0+255),w,b
  5362  0022F4  6FF9               	movwf	(_frequency+1)& (0+255),b
  5363                           
  5364                           ; BSR set to: 0
  5365                           ;eeprom.c: 38:     months = readEEPROM(2);
  5366  0022F6  0E02               	movlw	2
  5367  0022F8  EC6E  F016         	call	_readEEPROM
  5368  0022FC  0100               	movlb	0	; () banked
  5369  0022FE  6FFE               	movwf	_months& (0+255),b
  5370                           
  5371                           ; BSR set to: 0
  5372                           ;eeprom.c: 39:     days = readEEPROM(3);
  5373  002300  0E03               	movlw	3
  5374  002302  EC6E  F016         	call	_readEEPROM
  5375  002306  0100               	movlb	0	; () banked
  5376  002308  6FFD               	movwf	_days& (0+255),b
  5377                           
  5378                           ; BSR set to: 0
  5379                           ;eeprom.c: 40:     hours = readEEPROM(4);
  5380  00230A  0E04               	movlw	4
  5381  00230C  EC6E  F016         	call	_readEEPROM
  5382  002310  0100               	movlb	0	; () banked
  5383  002312  6FFC               	movwf	_hours& (0+255),b
  5384                           
  5385                           ; BSR set to: 0
  5386                           ;eeprom.c: 41:     minutes = readEEPROM(5);
  5387  002314  0E05               	movlw	5
  5388  002316  EC6E  F016         	call	_readEEPROM
  5389  00231A  0100               	movlb	0	; () banked
  5390  00231C  6FFB               	movwf	_minutes& (0+255),b
  5391                           
  5392                           ; BSR set to: 0
  5393                           ;eeprom.c: 42:     functionalStat = readEEPROM(6);
  5394  00231E  0E06               	movlw	6
  5395  002320  EC6E  F016         	call	_readEEPROM
  5396  002324  0100               	movlb	0	; () banked
  5397  002326  6FFA               	movwf	_functionalStat& (0+255),b
  5398                           
  5399                           ; BSR set to: 0
  5400  002328  0012               	return		;funcret
  5401  00232A  FFFF               	dw	65535	; errata NOP
  5402  00232C                     __end_of_getData:
  5403                           	opt callstack 0
  5404                           
  5405 ;; *************** function _readEEPROM *****************
  5406 ;; Defined at:
  5407 ;;		line 7 in file "eeprom.c"
  5408 ;; Parameters:    Size  Location     Type
  5409 ;;  address         1    wreg     unsigned char 
  5410 ;; Auto vars:     Size  Location     Type
  5411 ;;  address         1    0[BANK0 ] unsigned char 
  5412 ;; Return value:  Size  Location     Type
  5413 ;;                  1    wreg      unsigned char 
  5414 ;; Registers used:
  5415 ;;		wreg, status,2
  5416 ;; Tracked objects:
  5417 ;;		On entry : 0/0
  5418 ;;		On exit  : 0/0
  5419 ;;		Unchanged: 0/0
  5420 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5421 ;;      Params:         0       0       0       0       0       0       0
  5422 ;;      Locals:         0       1       0       0       0       0       0
  5423 ;;      Temps:          0       0       0       0       0       0       0
  5424 ;;      Totals:         0       1       0       0       0       0       0
  5425 ;;Total ram usage:        1 bytes
  5426 ;; Hardware stack levels used:    1
  5427 ;; Hardware stack levels required when called:   10
  5428 ;; This function calls:
  5429 ;;		Nothing
  5430 ;; This function is called by:
  5431 ;;		_getData
  5432 ;; This function uses a non-reentrant model
  5433 ;;
  5434                           
  5435                           	psect	text27
  5436  002CDC                     __ptext27:
  5437                           	opt callstack 0
  5438  002CDC                     _readEEPROM:
  5439                           	opt callstack 0
  5440  002CDC  FFFF               	dw	65535	; assembler added errata NOP
  5441                           
  5442                           ; BSR set to: 0
  5443                           ;incstack = 0
  5444                           ;readEEPROM@address stored from wreg
  5445  002CDE  0100               	movlb	0	; () banked
  5446  002CE0  6F80               	movwf	readEEPROM@address& (0+255),b
  5447                           
  5448                           ;eeprom.c: 8:     EEADR = address;
  5449  002CE2  C080  FFA9         	movff	readEEPROM@address,4009	;volatile
  5450                           
  5451                           ;eeprom.c: 9:     EECON1bits.EEPGD = 0;
  5452  002CE6  9EA6               	bcf	4006,7,c	;volsfr
  5453                           
  5454                           ;eeprom.c: 10:     EECON1bits.CFGS = 0;
  5455  002CE8  9CA6               	bcf	4006,6,c	;volsfr
  5456                           
  5457                           ;eeprom.c: 11:     EECON1bits.RD = 1;
  5458  002CEA  80A6               	bsf	4006,0,c	;volsfr
  5459                           
  5460                           ;eeprom.c: 12:     return EEDATA;
  5461  002CEC  50A8               	movf	4008,w,c	;volatile
  5462  002CEE  0012               	return		;funcret
  5463  002CF0  FFFF               	dw	65535	; errata NOP
  5464  002CF2                     __end_of_readEEPROM:
  5465                           	opt callstack 0
  5466                           
  5467 ;; *************** function _config *****************
  5468 ;; Defined at:
  5469 ;;		line 46 in file "main.c"
  5470 ;; Parameters:    Size  Location     Type
  5471 ;;		None
  5472 ;; Auto vars:     Size  Location     Type
  5473 ;;		None
  5474 ;; Return value:  Size  Location     Type
  5475 ;;                  1    wreg      void 
  5476 ;; Registers used:
  5477 ;;		wreg, status,2, status,0, cstack
  5478 ;; Tracked objects:
  5479 ;;		On entry : 0/0
  5480 ;;		On exit  : 0/0
  5481 ;;		Unchanged: 0/0
  5482 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5483 ;;      Params:         0       0       0       0       0       0       0
  5484 ;;      Locals:         0       0       0       0       0       0       0
  5485 ;;      Temps:          0       0       0       0       0       0       0
  5486 ;;      Totals:         0       0       0       0       0       0       0
  5487 ;;Total ram usage:        0 bytes
  5488 ;; Hardware stack levels used:    1
  5489 ;; Hardware stack levels required when called:   14
  5490 ;; This function calls:
  5491 ;;		_initLCD
  5492 ;;		_setTransStat
  5493 ;; This function is called by:
  5494 ;;		_main
  5495 ;; This function uses a non-reentrant model
  5496 ;;
  5497                           
  5498                           	psect	text28
  5499  00251E                     __ptext28:
  5500                           	opt callstack 0
  5501  00251E                     _config:
  5502                           	opt callstack 0
  5503  00251E  FFFF               	dw	65535	; assembler added errata NOP
  5504                           
  5505                           ;main.c: 48:     OSCCON = 0b00000000;
  5506                           
  5507                           ;incstack = 0
  5508  002520  0E00               	movlw	0
  5509  002522  6ED3               	movwf	4051,c	;volatile
  5510                           
  5511                           ;main.c: 50:     INTCON = 0b01000000;
  5512  002524  0E40               	movlw	64
  5513  002526  6EF2               	movwf	4082,c	;volatile
  5514                           
  5515                           ;main.c: 51:     PIE1 = 0b00000001;
  5516  002528  0E01               	movlw	1
  5517  00252A  6E9D               	movwf	3997,c	;volatile
  5518                           
  5519                           ;main.c: 53:     TRISA = 0b00011111;
  5520  00252C  0E1F               	movlw	31
  5521  00252E  6E92               	movwf	3986,c	;volatile
  5522                           
  5523                           ;main.c: 54:     TRISB = 0b00000000;
  5524  002530  0E00               	movlw	0
  5525  002532  6E93               	movwf	3987,c	;volatile
  5526                           
  5527                           ;main.c: 55:     TRISC = 0b11111111;
  5528  002534  6894               	setf	3988,c	;volatile
  5529                           
  5530                           ;main.c: 56:     TRISD = 0b00000000;
  5531  002536  0E00               	movlw	0
  5532  002538  6E95               	movwf	3989,c	;volatile
  5533                           
  5534                           ;main.c: 57:     TRISE = 0b00001000;
  5535  00253A  0E08               	movlw	8
  5536  00253C  6E96               	movwf	3990,c	;volatile
  5537                           
  5538                           ;main.c: 58:     PORTA = 0x00;
  5539  00253E  0E00               	movlw	0
  5540  002540  6E80               	movwf	3968,c	;volatile
  5541                           
  5542                           ;main.c: 59:     PORTB = 0x00;
  5543  002542  0E00               	movlw	0
  5544  002544  6E81               	movwf	3969,c	;volatile
  5545                           
  5546                           ;main.c: 60:     PORTC = 0x00;
  5547  002546  0E00               	movlw	0
  5548  002548  6E82               	movwf	3970,c	;volatile
  5549                           
  5550                           ;main.c: 61:     PORTD = 0x00;
  5551  00254A  0E00               	movlw	0
  5552  00254C  6E83               	movwf	3971,c	;volatile
  5553                           
  5554                           ;main.c: 62:     PORTE = 0x00;
  5555  00254E  0E00               	movlw	0
  5556  002550  6E84               	movwf	3972,c	;volatile
  5557                           
  5558                           ;main.c: 64:     T1CON = 0b10110001;
  5559  002552  0EB1               	movlw	177
  5560  002554  6ECD               	movwf	4045,c	;volatile
  5561                           
  5562                           ;main.c: 66:     T0CON = 0b10000000;
  5563  002556  0E80               	movlw	128
  5564  002558  6ED5               	movwf	4053,c	;volatile
  5565                           
  5566                           ;main.c: 68:     ADCON0 = 0b11000001;
  5567  00255A  0EC1               	movlw	193
  5568  00255C  6EC2               	movwf	4034,c	;volatile
  5569                           
  5570                           ;main.c: 69:     ADCON1 = 0b01001101;
  5571  00255E  0E4D               	movlw	77
  5572  002560  6EC1               	movwf	4033,c	;volatile
  5573                           
  5574                           ;main.c: 71:     initLCD();
  5575  002562  EC8F  F013         	call	_initLCD	;wreg free
  5576                           
  5577                           ;main.c: 73:     T1CONbits.TMR1ON = 1;
  5578  002566  80CD               	bsf	4045,0,c	;volatile
  5579                           
  5580                           ;main.c: 74:     INTCONbits.GIE = 1;
  5581  002568  8EF2               	bsf	4082,7,c	;volatile
  5582                           
  5583                           ;main.c: 76:     setTransStat(0);
  5584  00256A  0E00               	movlw	0
  5585  00256C  0100               	movlb	0	; () banked
  5586  00256E  6F8D               	movwf	(setTransStat@stat+1)& (0+255),b
  5587  002570  0E00               	movlw	0
  5588  002572  6F8C               	movwf	setTransStat@stat& (0+255),b
  5589  002574  ECCA  F011         	call	_setTransStat	;wreg free
  5590  002578  0012               	return		;funcret
  5591  00257A  FFFF               	dw	65535	; errata NOP
  5592  00257C                     __end_of_config:
  5593                           	opt callstack 0
  5594                           
  5595 ;; *************** function _setTransStat *****************
  5596 ;; Defined at:
  5597 ;;		line 187 in file "main.c"
  5598 ;; Parameters:    Size  Location     Type
  5599 ;;  stat            2   12[BANK0 ] int 
  5600 ;; Auto vars:     Size  Location     Type
  5601 ;;		None
  5602 ;; Return value:  Size  Location     Type
  5603 ;;                  1    wreg      void 
  5604 ;; Registers used:
  5605 ;;		wreg, status,2, status,0, cstack
  5606 ;; Tracked objects:
  5607 ;;		On entry : 0/0
  5608 ;;		On exit  : 0/0
  5609 ;;		Unchanged: 0/0
  5610 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5611 ;;      Params:         0       2       0       0       0       0       0
  5612 ;;      Locals:         0       0       0       0       0       0       0
  5613 ;;      Temps:          0       1       0       0       0       0       0
  5614 ;;      Totals:         0       3       0       0       0       0       0
  5615 ;;Total ram usage:        3 bytes
  5616 ;; Hardware stack levels used:    1
  5617 ;; Hardware stack levels required when called:   12
  5618 ;; This function calls:
  5619 ;;		_writeFrequency
  5620 ;; This function is called by:
  5621 ;;		_main
  5622 ;;		_config
  5623 ;; This function uses a non-reentrant model
  5624 ;;
  5625                           
  5626                           	psect	text29
  5627  002394                     __ptext29:
  5628                           	opt callstack 0
  5629  002394                     _setTransStat:
  5630                           	opt callstack 0
  5631  002394  FFFF               	dw	65535	; assembler added errata NOP
  5632                           
  5633                           ;main.c: 188:     if(stat == 1){
  5634                           
  5635                           ;incstack = 0
  5636  002396  0100               	movlb	0	; () banked
  5637  002398  058C               	decf	setTransStat@stat& (0+255),w,b
  5638  00239A  118D               	iorwf	(setTransStat@stat+1)& (0+255),w,b
  5639  00239C  A4D8               	btfss	status,2,c
  5640  00239E  D015               	goto	l264
  5641                           
  5642                           ; BSR set to: 0
  5643                           ;main.c: 189:         PORTBbits.RB3 = 1;
  5644  0023A0  8681               	bsf	3969,3,c	;volatile
  5645                           
  5646                           ;main.c: 190:         PORTBbits.RB4 = 1;
  5647  0023A2  8881               	bsf	3969,4,c	;volatile
  5648                           
  5649                           ;main.c: 191:         PORTBbits.RB5 = 0;
  5650  0023A4  9A81               	bcf	3969,5,c	;volatile
  5651                           
  5652                           ;main.c: 192:         PORTBbits.RB6 = 0;
  5653  0023A6  9C81               	bcf	3969,6,c	;volatile
  5654                           
  5655                           ; BSR set to: 0
  5656                           ;main.c: 193:         _delay((unsigned long)((2)*(12000000/4000.0)));
  5657  0023A8  0E06               	movlw	6
  5658  0023AA  0100               	movlb	0	; () banked
  5659  0023AC  6F8E               	movwf	??_setTransStat& (0+255),b
  5660  0023AE  0ED8               	movlw	216
  5661  0023B0                     u3897:
  5662  0023B0  FFFF               	dw	65535	; errata NOP
  5663  0023B2  2EE8               	decfsz	wreg,f,c
  5664  0023B4  D7FD               	bra	u3897
  5665  0023B6  2F8E               	decfsz	??_setTransStat& (0+255),f,b
  5666  0023B8  D7FB               	bra	u3897
  5667  0023BA  F000               	nop	
  5668                           
  5669                           ;main.c: 194:         writeFrequency(frequency);
  5670  0023BC  C0F8  F082         	movff	_frequency,writeFrequency@f
  5671  0023C0  C0F9  F083         	movff	_frequency+1,writeFrequency@f+1
  5672  0023C4  EC3D  F00E         	call	_writeFrequency	;wreg free
  5673                           
  5674                           ;main.c: 195:     }else{
  5675  0023C8  D016               	goto	l266
  5676  0023CA                     l264:
  5677  0023CA  FFFF               	dw	65535	; assembler added errata NOP
  5678                           
  5679                           ; BSR set to: 0
  5680                           ;main.c: 196:         PORTBbits.RB3 = 0;
  5681  0023CC  9681               	bcf	3969,3,c	;volatile
  5682                           
  5683                           ;main.c: 197:         PORTBbits.RB4 = 0;
  5684  0023CE  9881               	bcf	3969,4,c	;volatile
  5685                           
  5686                           ;main.c: 198:         PORTBbits.RB5 = 1;
  5687  0023D0  8A81               	bsf	3969,5,c	;volatile
  5688                           
  5689                           ;main.c: 199:         PORTBbits.RB6 = 1;
  5690  0023D2  8C81               	bsf	3969,6,c	;volatile
  5691                           
  5692                           ; BSR set to: 0
  5693                           ;main.c: 200:         _delay((unsigned long)((2)*(12000000/4000.0)));
  5694  0023D4  0E06               	movlw	6
  5695  0023D6  0100               	movlb	0	; () banked
  5696  0023D8  6F8E               	movwf	??_setTransStat& (0+255),b
  5697  0023DA  0ED8               	movlw	216
  5698  0023DC                     u3907:
  5699  0023DC  FFFF               	dw	65535	; errata NOP
  5700  0023DE  2EE8               	decfsz	wreg,f,c
  5701  0023E0  D7FD               	bra	u3907
  5702  0023E2  2F8E               	decfsz	??_setTransStat& (0+255),f,b
  5703  0023E4  D7FB               	bra	u3907
  5704  0023E6  F000               	nop	
  5705                           
  5706                           ;main.c: 201:         writeFrequency(730);
  5707  0023E8  0E02               	movlw	2
  5708  0023EA  0100               	movlb	0	; () banked
  5709  0023EC  6F83               	movwf	(writeFrequency@f+1)& (0+255),b
  5710  0023EE  0EDA               	movlw	218
  5711  0023F0  6F82               	movwf	writeFrequency@f& (0+255),b
  5712  0023F2  EC3D  F00E         	call	_writeFrequency	;wreg free
  5713  0023F6                     l266:
  5714  0023F6  FFFF               	dw	65535	; assembler added errata NOP
  5715  0023F8  0012               	return		;funcret
  5716  0023FA  FFFF               	dw	65535	; errata NOP
  5717  0023FC                     __end_of_setTransStat:
  5718                           	opt callstack 0
  5719                           
  5720 ;; *************** function _writeFrequency *****************
  5721 ;; Defined at:
  5722 ;;		line 15 in file "bh1514.c"
  5723 ;; Parameters:    Size  Location     Type
  5724 ;;  f               2    2[BANK0 ] unsigned int 
  5725 ;; Auto vars:     Size  Location     Type
  5726 ;;  r               2    9[BANK0 ] unsigned int 
  5727 ;;  buffer          2    7[BANK0 ] unsigned int 
  5728 ;;  i               1   11[BANK0 ] unsigned char 
  5729 ;; Return value:  Size  Location     Type
  5730 ;;                  1    wreg      void 
  5731 ;; Registers used:
  5732 ;;		wreg, status,2, status,0, cstack
  5733 ;; Tracked objects:
  5734 ;;		On entry : 0/0
  5735 ;;		On exit  : 0/0
  5736 ;;		Unchanged: 0/0
  5737 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5738 ;;      Params:         0       2       0       0       0       0       0
  5739 ;;      Locals:         0       5       0       0       0       0       0
  5740 ;;      Temps:          0       3       0       0       0       0       0
  5741 ;;      Totals:         0      10       0       0       0       0       0
  5742 ;;Total ram usage:       10 bytes
  5743 ;; Hardware stack levels used:    1
  5744 ;; Hardware stack levels required when called:   11
  5745 ;; This function calls:
  5746 ;;		_codFreq
  5747 ;; This function is called by:
  5748 ;;		_main
  5749 ;;		_setFrequency
  5750 ;;		_setTransStat
  5751 ;; This function uses a non-reentrant model
  5752 ;;
  5753                           
  5754                           	psect	text30
  5755  001C7A                     __ptext30:
  5756                           	opt callstack 0
  5757  001C7A                     _writeFrequency:
  5758                           	opt callstack 0
  5759  001C7A  FFFF               	dw	65535	; assembler added errata NOP
  5760                           
  5761                           ;bh1514.c: 16:     unsigned int buffer;;bh1514.c: 17:     unsigned int r;;bh1514.c: 18: 
      +                              unsigned char i;;bh1514.c: 20:     buffer = codFreq(f);
  5762                           
  5763                           ;incstack = 0
  5764  001C7C  C082  F080         	movff	writeFrequency@f,codFreq@f
  5765  001C80  C083  F081         	movff	writeFrequency@f+1,codFreq@f+1
  5766  001C84  EC46  F016         	call	_codFreq	;wreg free
  5767  001C88  C080  F087         	movff	?_codFreq,writeFrequency@buffer
  5768  001C8C  C081  F088         	movff	?_codFreq+1,writeFrequency@buffer+1
  5769                           
  5770                           ;bh1514.c: 22:     PORTEbits.RE0 = 1;
  5771  001C90  8084               	bsf	3972,0,c	;volatile
  5772                           
  5773                           ;bh1514.c: 23:     _delay((unsigned long)((1)*(12000000/4000.0)));
  5774  001C92  0E03               	movlw	3
  5775  001C94  0100               	movlb	0	; () banked
  5776  001C96  6F84               	movwf	??_writeFrequency& (0+255),b
  5777  001C98  0EEB               	movlw	235
  5778  001C9A                     u3917:
  5779  001C9A  FFFF               	dw	65535	; errata NOP
  5780  001C9C  2EE8               	decfsz	wreg,f,c
  5781  001C9E  D7FD               	bra	u3917
  5782  001CA0  2F84               	decfsz	??_writeFrequency& (0+255),f,b
  5783  001CA2  D7FB               	bra	u3917
  5784  001CA4  D000               	nop2	
  5785  001CA6  F000               	nop	
  5786                           
  5787                           ;bh1514.c: 24:     for(i = 0; i < 16; i++){
  5788  001CA8  0E00               	movlw	0
  5789  001CAA  0100               	movlb	0	; () banked
  5790  001CAC  6F8B               	movwf	writeFrequency@i& (0+255),b
  5791  001CAE                     l3644:
  5792  001CAE  FFFF               	dw	65535	; assembler added errata NOP
  5793                           
  5794                           ; BSR set to: 0
  5795                           ;bh1514.c: 25:         r = (buffer >> i) & 0x0001;
  5796  001CB0  C08B  F084         	movff	writeFrequency@i,??_writeFrequency
  5797  001CB4  C087  F085         	movff	writeFrequency@buffer,??_writeFrequency+1
  5798  001CB8  C088  F086         	movff	writeFrequency@buffer+1,??_writeFrequency+2
  5799  001CBC  2B84               	incf	??_writeFrequency& (0+255),f,b
  5800  001CBE  D004               	goto	u3084
  5801  001CC0                     u3085:
  5802  001CC0  FFFF               	dw	65535	; assembler added errata NOP
  5803  001CC2  90D8               	bcf	status,0,c
  5804  001CC4  3386               	rrcf	(??_writeFrequency+2)& (0+255),f,b
  5805  001CC6  3385               	rrcf	(??_writeFrequency+1)& (0+255),f,b
  5806  001CC8                     u3084:
  5807  001CC8  FFFF               	dw	65535	; assembler added errata NOP
  5808  001CCA  2F84               	decfsz	??_writeFrequency& (0+255),f,b
  5809  001CCC  D7F9               	goto	u3085
  5810  001CCE  0E01               	movlw	1
  5811  001CD0  0100               	movlb	0	; () banked
  5812  001CD2  1585               	andwf	(??_writeFrequency+1)& (0+255),w,b
  5813  001CD4  6F89               	movwf	writeFrequency@r& (0+255),b
  5814  001CD6  6B8A               	clrf	(writeFrequency@r+1)& (0+255),b
  5815                           
  5816                           ;bh1514.c: 26:         if(r == 1){
  5817  001CD8  0589               	decf	writeFrequency@r& (0+255),w,b
  5818  001CDA  118A               	iorwf	(writeFrequency@r+1)& (0+255),w,b
  5819  001CDC  A4D8               	btfss	status,2,c
  5820  001CDE  D002               	goto	l534
  5821                           
  5822                           ; BSR set to: 0
  5823                           ;bh1514.c: 27:             PORTEbits.RE2 = 1;
  5824  001CE0  8484               	bsf	3972,2,c	;volatile
  5825                           
  5826                           ;bh1514.c: 28:         }else{
  5827  001CE2  D002               	goto	l3648
  5828  001CE4                     l534:
  5829  001CE4  FFFF               	dw	65535	; assembler added errata NOP
  5830                           
  5831                           ; BSR set to: 0
  5832                           ;bh1514.c: 29:             PORTEbits.RE2 = 0;
  5833  001CE6  9484               	bcf	3972,2,c	;volatile
  5834  001CE8                     l3648:
  5835  001CE8  FFFF               	dw	65535	; assembler added errata NOP
  5836                           
  5837                           ; BSR set to: 0
  5838                           ;bh1514.c: 31:         _delay((unsigned long)((1)*(12000000/4000.0)));
  5839  001CEA  0E03               	movlw	3
  5840  001CEC  0100               	movlb	0	; () banked
  5841  001CEE  6F84               	movwf	??_writeFrequency& (0+255),b
  5842  001CF0  0EEB               	movlw	235
  5843  001CF2                     u3927:
  5844  001CF2  FFFF               	dw	65535	; errata NOP
  5845  001CF4  2EE8               	decfsz	wreg,f,c
  5846  001CF6  D7FD               	bra	u3927
  5847  001CF8  2F84               	decfsz	??_writeFrequency& (0+255),f,b
  5848  001CFA  D7FB               	bra	u3927
  5849  001CFC  D000               	nop2	
  5850  001CFE  F000               	nop	
  5851                           
  5852                           ;bh1514.c: 32:         PORTEbits.RE1 = 1;
  5853  001D00  8284               	bsf	3972,1,c	;volatile
  5854                           
  5855                           ;bh1514.c: 33:         _delay((unsigned long)((1)*(12000000/4000.0)));
  5856  001D02  0E03               	movlw	3
  5857  001D04  0100               	movlb	0	; () banked
  5858  001D06  6F84               	movwf	??_writeFrequency& (0+255),b
  5859  001D08  0EEB               	movlw	235
  5860  001D0A                     u3937:
  5861  001D0A  FFFF               	dw	65535	; errata NOP
  5862  001D0C  2EE8               	decfsz	wreg,f,c
  5863  001D0E  D7FD               	bra	u3937
  5864  001D10  2F84               	decfsz	??_writeFrequency& (0+255),f,b
  5865  001D12  D7FB               	bra	u3937
  5866  001D14  D000               	nop2	
  5867  001D16  F000               	nop	
  5868                           
  5869                           ;bh1514.c: 34:         PORTEbits.RE1 = 0;
  5870  001D18  9284               	bcf	3972,1,c	;volatile
  5871                           
  5872                           ;bh1514.c: 35:     }
  5873  001D1A  0100               	movlb	0	; () banked
  5874  001D1C  2B8B               	incf	writeFrequency@i& (0+255),f,b
  5875  001D1E  0E0F               	movlw	15
  5876  001D20  658B               	cpfsgt	writeFrequency@i& (0+255),b
  5877  001D22  D7C5               	goto	l3644
  5878                           
  5879                           ; BSR set to: 0
  5880                           ;bh1514.c: 36:     _delay((unsigned long)((1)*(12000000/4000.0)));
  5881  001D24  0E03               	movlw	3
  5882  001D26  0100               	movlb	0	; () banked
  5883  001D28  6F84               	movwf	??_writeFrequency& (0+255),b
  5884  001D2A  0EEB               	movlw	235
  5885  001D2C                     u3947:
  5886  001D2C  FFFF               	dw	65535	; errata NOP
  5887  001D2E  2EE8               	decfsz	wreg,f,c
  5888  001D30  D7FD               	bra	u3947
  5889  001D32  2F84               	decfsz	??_writeFrequency& (0+255),f,b
  5890  001D34  D7FB               	bra	u3947
  5891  001D36  D000               	nop2	
  5892  001D38  F000               	nop	
  5893                           
  5894                           ;bh1514.c: 37:     PORTEbits.RE0 = 0;
  5895  001D3A  9084               	bcf	3972,0,c	;volatile
  5896  001D3C  0012               	return		;funcret
  5897  001D3E  FFFF               	dw	65535	; errata NOP
  5898  001D40                     __end_of_writeFrequency:
  5899                           	opt callstack 0
  5900                           
  5901 ;; *************** function _codFreq *****************
  5902 ;; Defined at:
  5903 ;;		line 6 in file "bh1514.c"
  5904 ;; Parameters:    Size  Location     Type
  5905 ;;  f               2    0[BANK0 ] unsigned int 
  5906 ;; Auto vars:     Size  Location     Type
  5907 ;;		None
  5908 ;; Return value:  Size  Location     Type
  5909 ;;                  2    0[BANK0 ] unsigned int 
  5910 ;; Registers used:
  5911 ;;		wreg, status,2, status,0
  5912 ;; Tracked objects:
  5913 ;;		On entry : 0/0
  5914 ;;		On exit  : 0/0
  5915 ;;		Unchanged: 0/0
  5916 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5917 ;;      Params:         0       2       0       0       0       0       0
  5918 ;;      Locals:         0       0       0       0       0       0       0
  5919 ;;      Temps:          0       0       0       0       0       0       0
  5920 ;;      Totals:         0       2       0       0       0       0       0
  5921 ;;Total ram usage:        2 bytes
  5922 ;; Hardware stack levels used:    1
  5923 ;; Hardware stack levels required when called:   10
  5924 ;; This function calls:
  5925 ;;		Nothing
  5926 ;; This function is called by:
  5927 ;;		_writeFrequency
  5928 ;; This function uses a non-reentrant model
  5929 ;;
  5930                           
  5931                           	psect	text31
  5932  002C8C                     __ptext31:
  5933                           	opt callstack 0
  5934  002C8C                     _codFreq:
  5935                           	opt callstack 0
  5936  002C8C  FFFF               	dw	65535	; assembler added errata NOP
  5937                           
  5938                           ;bh1514.c: 8:         f = f | 0b0100100000000000;
  5939                           
  5940                           ;incstack = 0
  5941  002C8E  0E00               	movlw	0
  5942  002C90  0100               	movlb	0	; () banked
  5943  002C92  1180               	iorwf	codFreq@f& (0+255),w,b
  5944  002C94  6F80               	movwf	codFreq@f& (0+255),b
  5945  002C96  0E48               	movlw	72
  5946  002C98  1181               	iorwf	(codFreq@f+1)& (0+255),w,b
  5947  002C9A  6F81               	movwf	(codFreq@f+1)& (0+255),b
  5948                           
  5949                           ; BSR set to: 0
  5950                           ;bh1514.c: 12:     return f;
  5951                           
  5952                           ;bh1514.c: 9:     }else{
  5953  002C9C  C080  F080         	movff	codFreq@f,?_codFreq
  5954  002CA0  C081  F081         	movff	codFreq@f+1,?_codFreq+1
  5955                           
  5956                           ; BSR set to: 0
  5957  002CA4  0012               	return		;funcret
  5958  002CA6  FFFF               	dw	65535	; errata NOP
  5959  002CA8                     __end_of_codFreq:
  5960                           	opt callstack 0
  5961                           
  5962 ;; *************** function _initLCD *****************
  5963 ;; Defined at:
  5964 ;;		line 5 in file "lcd.c"
  5965 ;; Parameters:    Size  Location     Type
  5966 ;;		None
  5967 ;; Auto vars:     Size  Location     Type
  5968 ;;		None
  5969 ;; Return value:  Size  Location     Type
  5970 ;;                  1    wreg      void 
  5971 ;; Registers used:
  5972 ;;		wreg, status,2, status,0, cstack
  5973 ;; Tracked objects:
  5974 ;;		On entry : 0/0
  5975 ;;		On exit  : 0/0
  5976 ;;		Unchanged: 0/0
  5977 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5978 ;;      Params:         0       0       0       0       0       0       0
  5979 ;;      Locals:         0       0       0       0       0       0       0
  5980 ;;      Temps:          0       2       0       0       0       0       0
  5981 ;;      Totals:         0       2       0       0       0       0       0
  5982 ;;Total ram usage:        2 bytes
  5983 ;; Hardware stack levels used:    1
  5984 ;; Hardware stack levels required when called:   13
  5985 ;; This function calls:
  5986 ;;		_OpenXLCD
  5987 ;;		_SendCMDLCD
  5988 ;; This function is called by:
  5989 ;;		_config
  5990 ;; This function uses a non-reentrant model
  5991 ;;
  5992                           
  5993                           	psect	text32
  5994  00271E                     __ptext32:
  5995                           	opt callstack 0
  5996  00271E                     _initLCD:
  5997                           	opt callstack 0
  5998  00271E  FFFF               	dw	65535	; assembler added errata NOP
  5999                           
  6000                           ;lcd.c: 6:     OpenXLCD(0b00101100 & 0b00111000);
  6001                           
  6002                           ; BSR set to: 0
  6003                           ;incstack = 0
  6004  002720  0E28               	movlw	40
  6005  002722  ECBE  F00D         	call	_OpenXLCD
  6006                           
  6007                           ;lcd.c: 7:     _delay((unsigned long)((100)*(12000000/4000.0)));
  6008  002726  0E02               	movlw	2
  6009  002728  0100               	movlb	0	; () banked
  6010  00272A  6F84               	movwf	(??_initLCD+1)& (0+255),b
  6011  00272C  0E25               	movlw	37
  6012  00272E  6F83               	movwf	??_initLCD& (0+255),b
  6013  002730  0E63               	movlw	99
  6014  002732                     u3957:
  6015  002732  FFFF               	dw	65535	; errata NOP
  6016  002734  2EE8               	decfsz	wreg,f,c
  6017  002736  D7FD               	bra	u3957
  6018  002738  2F83               	decfsz	??_initLCD& (0+255),f,b
  6019  00273A  D7FB               	bra	u3957
  6020  00273C  2F84               	decfsz	(??_initLCD+1)& (0+255),f,b
  6021  00273E  D7F9               	bra	u3957
  6022  002740  F000               	nop	
  6023                           
  6024                           ;lcd.c: 8:     SendCMDLCD(0b00001101);
  6025  002742  0E0D               	movlw	13
  6026  002744  EC28  F016         	call	_SendCMDLCD
  6027                           
  6028                           ;lcd.c: 9:     SendCMDLCD(0b00000110);
  6029  002748  0E06               	movlw	6
  6030  00274A  EC28  F016         	call	_SendCMDLCD
  6031                           
  6032                           ;lcd.c: 10:     _delay((unsigned long)((50)*(12000000/4000.0)));
  6033  00274E  0E93               	movlw	147
  6034  002750  0100               	movlb	0	; () banked
  6035  002752  6F83               	movwf	??_initLCD& (0+255),b
  6036  002754  0E31               	movlw	49
  6037  002756                     u3967:
  6038  002756  FFFF               	dw	65535	; errata NOP
  6039  002758  2EE8               	decfsz	wreg,f,c
  6040  00275A  D7FD               	bra	u3967
  6041  00275C  2F83               	decfsz	??_initLCD& (0+255),f,b
  6042  00275E  D7FB               	bra	u3967
  6043  002760  D000               	nop2	
  6044  002762  F000               	nop	
  6045  002764  0012               	return		;funcret
  6046  002766  FFFF               	dw	65535	; errata NOP
  6047  002768                     __end_of_initLCD:
  6048                           	opt callstack 0
  6049                           
  6050 ;; *************** function _SendCMDLCD *****************
  6051 ;; Defined at:
  6052 ;;		line 27 in file "lcd.c"
  6053 ;; Parameters:    Size  Location     Type
  6054 ;;  CMD             1    wreg     unsigned char 
  6055 ;; Auto vars:     Size  Location     Type
  6056 ;;  CMD             1    1[BANK0 ] unsigned char 
  6057 ;; Return value:  Size  Location     Type
  6058 ;;                  1    wreg      void 
  6059 ;; Registers used:
  6060 ;;		wreg, status,2, status,0, cstack
  6061 ;; Tracked objects:
  6062 ;;		On entry : 0/0
  6063 ;;		On exit  : 0/0
  6064 ;;		Unchanged: 0/0
  6065 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6066 ;;      Params:         0       0       0       0       0       0       0
  6067 ;;      Locals:         0       1       0       0       0       0       0
  6068 ;;      Temps:          0       0       0       0       0       0       0
  6069 ;;      Totals:         0       1       0       0       0       0       0
  6070 ;;Total ram usage:        1 bytes
  6071 ;; Hardware stack levels used:    1
  6072 ;; Hardware stack levels required when called:   12
  6073 ;; This function calls:
  6074 ;;		_BusyXLCD
  6075 ;;		_WriteCmdXLCD
  6076 ;; This function is called by:
  6077 ;;		_initLCD
  6078 ;; This function uses a non-reentrant model
  6079 ;;
  6080                           
  6081                           	psect	text33
  6082  002C50                     __ptext33:
  6083                           	opt callstack 0
  6084  002C50                     _SendCMDLCD:
  6085                           	opt callstack 0
  6086  002C50  FFFF               	dw	65535	; assembler added errata NOP
  6087                           
  6088                           ;incstack = 0
  6089                           ;SendCMDLCD@CMD stored from wreg
  6090  002C52  0100               	movlb	0	; () banked
  6091  002C54  6F81               	movwf	SendCMDLCD@CMD& (0+255),b
  6092  002C56  FFFF               	dw	65535	; assembler added errata NOP
  6093                           
  6094                           ;lcd.c: 28:     while(BusyXLCD())continue;
  6095  002C58  EC37  F016         	call	_BusyXLCD	;wreg free
  6096  002C5C  0900               	iorlw	0
  6097  002C5E  A4D8               	btfss	status,2,c
  6098  002C60  D7FA               	goto	l3744
  6099                           
  6100                           ;lcd.c: 29:     WriteCmdXLCD(CMD);
  6101  002C62  0100               	movlb	0	; () banked
  6102  002C64  5181               	movf	SendCMDLCD@CMD& (0+255),w,b
  6103  002C66  ECFD  F013         	call	_WriteCmdXLCD
  6104  002C6A  0012               	return		;funcret
  6105  002C6C  FFFF               	dw	65535	; errata NOP
  6106  002C6E                     __end_of_SendCMDLCD:
  6107                           	opt callstack 0
  6108                           
  6109 ;; *************** function _OpenXLCD *****************
  6110 ;; Defined at:
  6111 ;;		line 40 in file "lcd_pic16.c"
  6112 ;; Parameters:    Size  Location     Type
  6113 ;;  lcdtype         1    wreg     unsigned char 
  6114 ;; Auto vars:     Size  Location     Type
  6115 ;;  lcdtype         1    2[BANK0 ] unsigned char 
  6116 ;; Return value:  Size  Location     Type
  6117 ;;                  1    wreg      void 
  6118 ;; Registers used:
  6119 ;;		wreg, status,2, status,0, cstack
  6120 ;; Tracked objects:
  6121 ;;		On entry : 0/0
  6122 ;;		On exit  : 0/0
  6123 ;;		Unchanged: 0/0
  6124 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6125 ;;      Params:         0       0       0       0       0       0       0
  6126 ;;      Locals:         0       1       0       0       0       0       0
  6127 ;;      Temps:          0       1       0       0       0       0       0
  6128 ;;      Totals:         0       2       0       0       0       0       0
  6129 ;;Total ram usage:        2 bytes
  6130 ;; Hardware stack levels used:    1
  6131 ;; Hardware stack levels required when called:   12
  6132 ;; This function calls:
  6133 ;;		_BusyXLCD
  6134 ;;		_DelayPORXLCD
  6135 ;;		_SetDDRamAddr
  6136 ;;		_WriteCmdXLCD
  6137 ;; This function is called by:
  6138 ;;		_initLCD
  6139 ;; This function uses a non-reentrant model
  6140 ;;
  6141                           
  6142                           	psect	text34
  6143  001B7C                     __ptext34:
  6144                           	opt callstack 0
  6145  001B7C                     _OpenXLCD:
  6146                           	opt callstack 0
  6147  001B7C  FFFF               	dw	65535	; assembler added errata NOP
  6148                           
  6149                           ;incstack = 0
  6150                           ;OpenXLCD@lcdtype stored from wreg
  6151  001B7E  0100               	movlb	0	; () banked
  6152  001B80  6F82               	movwf	OpenXLCD@lcdtype& (0+255),b
  6153                           
  6154                           ;lcd_pic16.c: 40: void OpenXLCD(unsigned char lcdtype);lcd_pic16.c: 41: {;lcd_pic16.c: 4
      +                          7:         PORTD &= 0x0f;
  6155  001B82  0E0F               	movlw	15
  6156  001B84  1683               	andwf	3971,f,c	;volatile
  6157                           
  6158                           ;lcd_pic16.c: 48:         TRISD &= 0x0F;
  6159  001B86  0E0F               	movlw	15
  6160  001B88  1695               	andwf	3989,f,c	;volatile
  6161                           
  6162                           ;lcd_pic16.c: 54:         TRISDbits.TRISD2 = 0;
  6163  001B8A  9495               	bcf	3989,2,c	;volatile
  6164                           
  6165                           ;lcd_pic16.c: 55:         TRISDbits.TRISD3 = 0;
  6166  001B8C  9695               	bcf	3989,3,c	;volatile
  6167                           
  6168                           ;lcd_pic16.c: 56:         TRISDbits.TRISD1 = 0;
  6169  001B8E  9295               	bcf	3989,1,c	;volatile
  6170                           
  6171                           ;lcd_pic16.c: 57:         PORTDbits.RD2 = 0;
  6172  001B90  9483               	bcf	3971,2,c	;volatile
  6173                           
  6174                           ;lcd_pic16.c: 58:         PORTDbits.RD3 = 0;
  6175  001B92  9683               	bcf	3971,3,c	;volatile
  6176                           
  6177                           ;lcd_pic16.c: 59:         PORTDbits.RD1 = 0;
  6178  001B94  9283               	bcf	3971,1,c	;volatile
  6179                           
  6180                           ;lcd_pic16.c: 62:         DelayPORXLCD();
  6181  001B96  EC54  F016         	call	_DelayPORXLCD	;wreg free
  6182                           
  6183                           ;lcd_pic16.c: 64:        WriteCmdXLCD(0x30);
  6184  001B9A  0E30               	movlw	48
  6185  001B9C  ECFD  F013         	call	_WriteCmdXLCD
  6186                           
  6187                           ;lcd_pic16.c: 65:          _delay((unsigned long)((5)*(12000000/4000.0)));
  6188  001BA0  0E0F               	movlw	15
  6189  001BA2  0100               	movlb	0	; () banked
  6190  001BA4  6F81               	movwf	??_OpenXLCD& (0+255),b
  6191  001BA6  0E9D               	movlw	157
  6192  001BA8                     u3977:
  6193  001BA8  FFFF               	dw	65535	; errata NOP
  6194  001BAA  2EE8               	decfsz	wreg,f,c
  6195  001BAC  D7FD               	bra	u3977
  6196  001BAE  2F81               	decfsz	??_OpenXLCD& (0+255),f,b
  6197  001BB0  D7FB               	bra	u3977
  6198  001BB2  D000               	nop2	
  6199  001BB4  F000               	nop	
  6200                           
  6201                           ;lcd_pic16.c: 67:        WriteCmdXLCD(0x30);
  6202  001BB6  0E30               	movlw	48
  6203  001BB8  ECFD  F013         	call	_WriteCmdXLCD
  6204                           
  6205                           ;lcd_pic16.c: 68:          _delay((unsigned long)((1)*(12000000/4000.0)));
  6206  001BBC  0E03               	movlw	3
  6207  001BBE  0100               	movlb	0	; () banked
  6208  001BC0  6F81               	movwf	??_OpenXLCD& (0+255),b
  6209  001BC2  0EEB               	movlw	235
  6210  001BC4                     u3987:
  6211  001BC4  FFFF               	dw	65535	; errata NOP
  6212  001BC6  2EE8               	decfsz	wreg,f,c
  6213  001BC8  D7FD               	bra	u3987
  6214  001BCA  2F81               	decfsz	??_OpenXLCD& (0+255),f,b
  6215  001BCC  D7FB               	bra	u3987
  6216  001BCE  D000               	nop2	
  6217  001BD0  F000               	nop	
  6218                           
  6219                           ;lcd_pic16.c: 71:        WriteCmdXLCD(0x32);
  6220  001BD2  0E32               	movlw	50
  6221  001BD4  ECFD  F013         	call	_WriteCmdXLCD
  6222  001BD8                     l3684:
  6223  001BD8  FFFF               	dw	65535	; assembler added errata NOP
  6224  001BDA  EC37  F016         	call	_BusyXLCD	;wreg free
  6225  001BDE  0900               	iorlw	0
  6226  001BE0  A4D8               	btfss	status,2,c
  6227  001BE2  D7FA               	goto	l3684
  6228  001BE4                     u3110:
  6229  001BE4  FFFF               	dw	65535	; assembler added errata NOP
  6230  001BE6  EC37  F016         	call	_BusyXLCD	;wreg free
  6231  001BEA  0900               	iorlw	0
  6232  001BEC  A4D8               	btfss	status,2,c
  6233  001BEE  D7FA               	goto	u3110
  6234                           
  6235                           ;lcd_pic16.c: 78:         WriteCmdXLCD(lcdtype);
  6236  001BF0  0100               	movlb	0	; () banked
  6237  001BF2  5182               	movf	OpenXLCD@lcdtype& (0+255),w,b
  6238  001BF4  ECFD  F013         	call	_WriteCmdXLCD
  6239  001BF8                     l3690:
  6240  001BF8  FFFF               	dw	65535	; assembler added errata NOP
  6241  001BFA  EC37  F016         	call	_BusyXLCD	;wreg free
  6242  001BFE  0900               	iorlw	0
  6243  001C00  A4D8               	btfss	status,2,c
  6244  001C02  D7FA               	goto	l3690
  6245                           
  6246                           ;lcd_pic16.c: 82:         WriteCmdXLCD(0b00001011&0b00001101&0b00001110);
  6247  001C04  0E08               	movlw	8
  6248  001C06  ECFD  F013         	call	_WriteCmdXLCD
  6249  001C0A                     l3694:
  6250  001C0A  FFFF               	dw	65535	; assembler added errata NOP
  6251  001C0C  EC37  F016         	call	_BusyXLCD	;wreg free
  6252  001C10  0900               	iorlw	0
  6253  001C12  A4D8               	btfss	status,2,c
  6254  001C14  D7FA               	goto	l3694
  6255                           
  6256                           ;lcd_pic16.c: 84:         WriteCmdXLCD(0b00001111&0b00001111&0b00001111);
  6257  001C16  0E0F               	movlw	15
  6258  001C18  ECFD  F013         	call	_WriteCmdXLCD
  6259  001C1C                     l3698:
  6260  001C1C  FFFF               	dw	65535	; assembler added errata NOP
  6261  001C1E  EC37  F016         	call	_BusyXLCD	;wreg free
  6262  001C22  0900               	iorlw	0
  6263  001C24  A4D8               	btfss	status,2,c
  6264  001C26  D7FA               	goto	l3698
  6265                           
  6266                           ;lcd_pic16.c: 88:         WriteCmdXLCD(0x01);
  6267  001C28  0E01               	movlw	1
  6268  001C2A  ECFD  F013         	call	_WriteCmdXLCD
  6269  001C2E                     l3702:
  6270  001C2E  FFFF               	dw	65535	; assembler added errata NOP
  6271  001C30  EC37  F016         	call	_BusyXLCD	;wreg free
  6272  001C34  0900               	iorlw	0
  6273  001C36  A4D8               	btfss	status,2,c
  6274  001C38  D7FA               	goto	l3702
  6275                           
  6276                           ;lcd_pic16.c: 92:         WriteCmdXLCD(0b00000101);
  6277  001C3A  0E05               	movlw	5
  6278  001C3C  ECFD  F013         	call	_WriteCmdXLCD
  6279  001C40                     l3706:
  6280  001C40  FFFF               	dw	65535	; assembler added errata NOP
  6281  001C42  EC37  F016         	call	_BusyXLCD	;wreg free
  6282  001C46  0900               	iorlw	0
  6283  001C48  A4D8               	btfss	status,2,c
  6284  001C4A  D7FA               	goto	l3706
  6285                           
  6286                           ;lcd_pic16.c: 95:         WriteCmdXLCD(0x06);
  6287  001C4C  0E06               	movlw	6
  6288  001C4E  ECFD  F013         	call	_WriteCmdXLCD
  6289  001C52                     l3710:
  6290  001C52  FFFF               	dw	65535	; assembler added errata NOP
  6291  001C54  EC37  F016         	call	_BusyXLCD	;wreg free
  6292  001C58  0900               	iorlw	0
  6293  001C5A  A4D8               	btfss	status,2,c
  6294  001C5C  D7FA               	goto	l3710
  6295                           
  6296                           ;lcd_pic16.c: 98:         SetDDRamAddr(0x80);
  6297  001C5E  0E80               	movlw	128
  6298  001C60  ECB4  F013         	call	_SetDDRamAddr
  6299  001C64                     l3714:
  6300  001C64  FFFF               	dw	65535	; assembler added errata NOP
  6301  001C66  EC37  F016         	call	_BusyXLCD	;wreg free
  6302  001C6A  0900               	iorlw	0
  6303  001C6C  A4D8               	btfss	status,2,c
  6304  001C6E  D7FA               	goto	l3714
  6305                           
  6306                           ;lcd_pic16.c: 101:         WriteCmdXLCD(0b00001101);
  6307  001C70  0E0D               	movlw	13
  6308  001C72  ECFD  F013         	call	_WriteCmdXLCD
  6309  001C76  0012               	return		;funcret
  6310  001C78  FFFF               	dw	65535	; errata NOP
  6311  001C7A                     __end_of_OpenXLCD:
  6312                           	opt callstack 0
  6313                           
  6314 ;; *************** function _WriteCmdXLCD *****************
  6315 ;; Defined at:
  6316 ;;		line 164 in file "lcd_pic16.c"
  6317 ;; Parameters:    Size  Location     Type
  6318 ;;  cmd             1    wreg     unsigned char 
  6319 ;; Auto vars:     Size  Location     Type
  6320 ;;  cmd             1    0[BANK0 ] unsigned char 
  6321 ;; Return value:  Size  Location     Type
  6322 ;;                  1    wreg      void 
  6323 ;; Registers used:
  6324 ;;		wreg, status,2, status,0, cstack
  6325 ;; Tracked objects:
  6326 ;;		On entry : 0/0
  6327 ;;		On exit  : 0/0
  6328 ;;		Unchanged: 0/0
  6329 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6330 ;;      Params:         0       0       0       0       0       0       0
  6331 ;;      Locals:         0       1       0       0       0       0       0
  6332 ;;      Temps:          0       0       0       0       0       0       0
  6333 ;;      Totals:         0       1       0       0       0       0       0
  6334 ;;Total ram usage:        1 bytes
  6335 ;; Hardware stack levels used:    1
  6336 ;; Hardware stack levels required when called:   11
  6337 ;; This function calls:
  6338 ;;		_DelayFor18TCY
  6339 ;; This function is called by:
  6340 ;;		_OpenXLCD
  6341 ;;		_SendCMDLCD
  6342 ;; This function uses a non-reentrant model
  6343 ;;
  6344                           
  6345                           	psect	text35
  6346  0027FA                     __ptext35:
  6347                           	opt callstack 0
  6348  0027FA                     _WriteCmdXLCD:
  6349                           	opt callstack 0
  6350  0027FA  FFFF               	dw	65535	; assembler added errata NOP
  6351                           
  6352                           ;incstack = 0
  6353                           ;WriteCmdXLCD@cmd stored from wreg
  6354  0027FC  0100               	movlb	0	; () banked
  6355  0027FE  6F80               	movwf	WriteCmdXLCD@cmd& (0+255),b
  6356                           
  6357                           ;lcd_pic16.c: 178:         TRISD &= 0x0f;
  6358  002800  0E0F               	movlw	15
  6359  002802  1695               	andwf	3989,f,c	;volatile
  6360                           
  6361                           ;lcd_pic16.c: 179:         PORTD &= 0x0f;
  6362  002804  0E0F               	movlw	15
  6363  002806  1683               	andwf	3971,f,c	;volatile
  6364                           
  6365                           ;lcd_pic16.c: 180:         PORTD |= cmd&0xf0;
  6366  002808  0100               	movlb	0	; () banked
  6367  00280A  5180               	movf	WriteCmdXLCD@cmd& (0+255),w,b
  6368  00280C  0BF0               	andlw	240
  6369  00280E  1283               	iorwf	3971,f,c	;volatile
  6370                           
  6371                           ; BSR set to: 0
  6372                           ;lcd_pic16.c: 186:         PORTDbits.RD2 = 0;
  6373  002810  9483               	bcf	3971,2,c	;volatile
  6374                           
  6375                           ; BSR set to: 0
  6376                           ;lcd_pic16.c: 187:         PORTDbits.RD3 = 0;
  6377  002812  9683               	bcf	3971,3,c	;volatile
  6378                           
  6379                           ; BSR set to: 0
  6380                           ;lcd_pic16.c: 188:         DelayFor18TCY();
  6381  002814  EC79  F016         	call	_DelayFor18TCY	;wreg free
  6382                           
  6383                           ;lcd_pic16.c: 189:         PORTDbits.RD1 = 1;
  6384  002818  8283               	bsf	3971,1,c	;volatile
  6385                           
  6386                           ;lcd_pic16.c: 190:         DelayFor18TCY();
  6387  00281A  EC79  F016         	call	_DelayFor18TCY	;wreg free
  6388                           
  6389                           ;lcd_pic16.c: 191:         PORTDbits.RD1 = 0;
  6390  00281E  9283               	bcf	3971,1,c	;volatile
  6391                           
  6392                           ;lcd_pic16.c: 193:         PORTD &= 0x0f;
  6393  002820  0E0F               	movlw	15
  6394  002822  1683               	andwf	3971,f,c	;volatile
  6395                           
  6396                           ;lcd_pic16.c: 194:         PORTD |= (cmd<<4)&0xf0;
  6397  002824  0100               	movlb	0	; () banked
  6398  002826  3980               	swapf	WriteCmdXLCD@cmd& (0+255),w,b
  6399  002828  0BF0               	andlw	240
  6400  00282A  0BF0               	andlw	240
  6401  00282C  1283               	iorwf	3971,f,c	;volatile
  6402                           
  6403                           ; BSR set to: 0
  6404                           ;lcd_pic16.c: 199:         DelayFor18TCY();
  6405  00282E  EC79  F016         	call	_DelayFor18TCY	;wreg free
  6406                           
  6407                           ;lcd_pic16.c: 200:         PORTDbits.RD1 = 1;
  6408  002832  8283               	bsf	3971,1,c	;volatile
  6409                           
  6410                           ;lcd_pic16.c: 201:         DelayFor18TCY();
  6411  002834  EC79  F016         	call	_DelayFor18TCY	;wreg free
  6412                           
  6413                           ;lcd_pic16.c: 202:         PORTDbits.RD1 = 0;
  6414  002838  9283               	bcf	3971,1,c	;volatile
  6415                           
  6416                           ;lcd_pic16.c: 204:         TRISD |= 0xf0;
  6417  00283A  0EF0               	movlw	240
  6418  00283C  1295               	iorwf	3989,f,c	;volatile
  6419  00283E  0012               	return		;funcret
  6420  002840  FFFF               	dw	65535	; errata NOP
  6421  002842                     __end_of_WriteCmdXLCD:
  6422                           	opt callstack 0
  6423                           
  6424 ;; *************** function _SetDDRamAddr *****************
  6425 ;; Defined at:
  6426 ;;		line 217 in file "lcd_pic16.c"
  6427 ;; Parameters:    Size  Location     Type
  6428 ;;  DDaddr          1    wreg     unsigned char 
  6429 ;; Auto vars:     Size  Location     Type
  6430 ;;  DDaddr          1    0[BANK0 ] unsigned char 
  6431 ;; Return value:  Size  Location     Type
  6432 ;;                  1    wreg      void 
  6433 ;; Registers used:
  6434 ;;		wreg, status,2, status,0, cstack
  6435 ;; Tracked objects:
  6436 ;;		On entry : 0/0
  6437 ;;		On exit  : 0/0
  6438 ;;		Unchanged: 0/0
  6439 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6440 ;;      Params:         0       0       0       0       0       0       0
  6441 ;;      Locals:         0       1       0       0       0       0       0
  6442 ;;      Temps:          0       0       0       0       0       0       0
  6443 ;;      Totals:         0       1       0       0       0       0       0
  6444 ;;Total ram usage:        1 bytes
  6445 ;; Hardware stack levels used:    1
  6446 ;; Hardware stack levels required when called:   11
  6447 ;; This function calls:
  6448 ;;		_DelayFor18TCY
  6449 ;; This function is called by:
  6450 ;;		_main
  6451 ;;		_OpenXLCD
  6452 ;;		_updateLCD
  6453 ;; This function uses a non-reentrant model
  6454 ;;
  6455                           
  6456                           	psect	text36
  6457  002768                     __ptext36:
  6458                           	opt callstack 0
  6459  002768                     _SetDDRamAddr:
  6460                           	opt callstack 0
  6461  002768  FFFF               	dw	65535	; assembler added errata NOP
  6462                           
  6463                           ;incstack = 0
  6464                           ;SetDDRamAddr@DDaddr stored from wreg
  6465  00276A  0100               	movlb	0	; () banked
  6466  00276C  6F80               	movwf	SetDDRamAddr@DDaddr& (0+255),b
  6467                           
  6468                           ;lcd_pic16.c: 217: void SetDDRamAddr(unsigned char DDaddr);lcd_pic16.c: 218: {;lcd_pic16
      +                          .c: 232:         TRISD &= 0x0f;
  6469  00276E  0E0F               	movlw	15
  6470  002770  1695               	andwf	3989,f,c	;volatile
  6471                           
  6472                           ;lcd_pic16.c: 233:         PORTD &= 0x0f;
  6473  002772  0E0F               	movlw	15
  6474  002774  1683               	andwf	3971,f,c	;volatile
  6475                           
  6476                           ;lcd_pic16.c: 234:         PORTD |= ((DDaddr | 0b10000000) & 0xf0);
  6477  002776  0100               	movlb	0	; () banked
  6478  002778  5180               	movf	SetDDRamAddr@DDaddr& (0+255),w,b
  6479  00277A  0980               	iorlw	128
  6480  00277C  0BF0               	andlw	240
  6481  00277E  1283               	iorwf	3971,f,c	;volatile
  6482                           
  6483                           ; BSR set to: 0
  6484                           ;lcd_pic16.c: 240:         PORTDbits.RD2 = 0;
  6485  002780  9483               	bcf	3971,2,c	;volatile
  6486                           
  6487                           ; BSR set to: 0
  6488                           ;lcd_pic16.c: 241:         PORTDbits.RD3 = 0;
  6489  002782  9683               	bcf	3971,3,c	;volatile
  6490                           
  6491                           ; BSR set to: 0
  6492                           ;lcd_pic16.c: 242:         DelayFor18TCY();
  6493  002784  EC79  F016         	call	_DelayFor18TCY	;wreg free
  6494                           
  6495                           ;lcd_pic16.c: 243:         PORTDbits.RD1 = 1;
  6496  002788  8283               	bsf	3971,1,c	;volatile
  6497                           
  6498                           ;lcd_pic16.c: 244:         DelayFor18TCY();
  6499  00278A  EC79  F016         	call	_DelayFor18TCY	;wreg free
  6500                           
  6501                           ;lcd_pic16.c: 245:         PORTDbits.RD1 = 0;
  6502  00278E  9283               	bcf	3971,1,c	;volatile
  6503                           
  6504                           ;lcd_pic16.c: 247:         PORTD &= 0x0f;
  6505  002790  0E0F               	movlw	15
  6506  002792  1683               	andwf	3971,f,c	;volatile
  6507                           
  6508                           ;lcd_pic16.c: 248:         PORTD |= ((DDaddr<<4)&0xf0);
  6509  002794  0100               	movlb	0	; () banked
  6510  002796  3980               	swapf	SetDDRamAddr@DDaddr& (0+255),w,b
  6511  002798  0BF0               	andlw	240
  6512  00279A  0BF0               	andlw	240
  6513  00279C  1283               	iorwf	3971,f,c	;volatile
  6514                           
  6515                           ; BSR set to: 0
  6516                           ;lcd_pic16.c: 253:         DelayFor18TCY();
  6517  00279E  EC79  F016         	call	_DelayFor18TCY	;wreg free
  6518                           
  6519                           ;lcd_pic16.c: 254:         PORTDbits.RD1 = 1;
  6520  0027A2  8283               	bsf	3971,1,c	;volatile
  6521                           
  6522                           ;lcd_pic16.c: 255:         DelayFor18TCY();
  6523  0027A4  EC79  F016         	call	_DelayFor18TCY	;wreg free
  6524                           
  6525                           ;lcd_pic16.c: 256:         PORTDbits.RD1 = 0;
  6526  0027A8  9283               	bcf	3971,1,c	;volatile
  6527                           
  6528                           ;lcd_pic16.c: 258:         TRISD |= 0xf0;
  6529  0027AA  0EF0               	movlw	240
  6530  0027AC  1295               	iorwf	3989,f,c	;volatile
  6531  0027AE  0012               	return		;funcret
  6532  0027B0  FFFF               	dw	65535	; errata NOP
  6533  0027B2                     __end_of_SetDDRamAddr:
  6534                           	opt callstack 0
  6535                           
  6536 ;; *************** function _DelayFor18TCY *****************
  6537 ;; Defined at:
  6538 ;;		line 22 in file "lcd_pic16.c"
  6539 ;; Parameters:    Size  Location     Type
  6540 ;;		None
  6541 ;; Auto vars:     Size  Location     Type
  6542 ;;		None
  6543 ;; Return value:  Size  Location     Type
  6544 ;;                  1    wreg      void 
  6545 ;; Registers used:
  6546 ;;		wreg
  6547 ;; Tracked objects:
  6548 ;;		On entry : 0/0
  6549 ;;		On exit  : 0/0
  6550 ;;		Unchanged: 0/0
  6551 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6552 ;;      Params:         0       0       0       0       0       0       0
  6553 ;;      Locals:         0       0       0       0       0       0       0
  6554 ;;      Temps:          0       0       0       0       0       0       0
  6555 ;;      Totals:         0       0       0       0       0       0       0
  6556 ;;Total ram usage:        0 bytes
  6557 ;; Hardware stack levels used:    1
  6558 ;; Hardware stack levels required when called:   10
  6559 ;; This function calls:
  6560 ;;		Nothing
  6561 ;; This function is called by:
  6562 ;;		_WriteDataXLCD
  6563 ;;		_WriteCmdXLCD
  6564 ;;		_SetDDRamAddr
  6565 ;;		_SetCGRamAddr
  6566 ;;		_ReadDataXLCD
  6567 ;;		_ReadAddrXLCD
  6568 ;; This function uses a non-reentrant model
  6569 ;;
  6570                           
  6571                           	psect	text37
  6572  002CF2                     __ptext37:
  6573                           	opt callstack 0
  6574  002CF2                     _DelayFor18TCY:
  6575                           	opt callstack 0
  6576  002CF2  FFFF               	dw	65535	; assembler added errata NOP
  6577                           
  6578                           ;lcd_pic16.c: 24:    _delay((unsigned long)((18)*(12000000/4000000.0)));
  6579                           
  6580                           ;incstack = 0
  6581  002CF4  0E0D               	movlw	13
  6582  002CF6                     u3997:
  6583  002CF6  FFFF               	dw	65535	; errata NOP
  6584  002CF8  2EE8               	decfsz	wreg,f,c
  6585  002CFA  D7FD               	bra	u3997
  6586  002CFC  D000               	nop2	
  6587  002CFE  0012               	return		;funcret
  6588  002D00  FFFF               	dw	65535	; errata NOP
  6589  002D02                     __end_of_DelayFor18TCY:
  6590                           	opt callstack 0
  6591                           
  6592 ;; *************** function _DelayPORXLCD *****************
  6593 ;; Defined at:
  6594 ;;		line 27 in file "lcd_pic16.c"
  6595 ;; Parameters:    Size  Location     Type
  6596 ;;		None
  6597 ;; Auto vars:     Size  Location     Type
  6598 ;;		None
  6599 ;; Return value:  Size  Location     Type
  6600 ;;                  1    wreg      void 
  6601 ;; Registers used:
  6602 ;;		wreg
  6603 ;; Tracked objects:
  6604 ;;		On entry : 0/0
  6605 ;;		On exit  : 0/0
  6606 ;;		Unchanged: 0/0
  6607 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6608 ;;      Params:         0       0       0       0       0       0       0
  6609 ;;      Locals:         0       0       0       0       0       0       0
  6610 ;;      Temps:          0       1       0       0       0       0       0
  6611 ;;      Totals:         0       1       0       0       0       0       0
  6612 ;;Total ram usage:        1 bytes
  6613 ;; Hardware stack levels used:    1
  6614 ;; Hardware stack levels required when called:   10
  6615 ;; This function calls:
  6616 ;;		Nothing
  6617 ;; This function is called by:
  6618 ;;		_OpenXLCD
  6619 ;; This function uses a non-reentrant model
  6620 ;;
  6621                           
  6622                           	psect	text38
  6623  002CA8                     __ptext38:
  6624                           	opt callstack 0
  6625  002CA8                     _DelayPORXLCD:
  6626                           	opt callstack 0
  6627  002CA8  FFFF               	dw	65535	; assembler added errata NOP
  6628                           
  6629                           ;lcd_pic16.c: 29:    _delay((unsigned long)((20)*(12000000/4000.0)));
  6630                           
  6631                           ;incstack = 0
  6632  002CAA  0E3B               	movlw	59
  6633  002CAC  0100               	movlb	0	; () banked
  6634  002CAE  6F80               	movwf	??_DelayPORXLCD& (0+255),b
  6635  002CB0  0E79               	movlw	121
  6636  002CB2                     u4007:
  6637  002CB2  FFFF               	dw	65535	; errata NOP
  6638  002CB4  2EE8               	decfsz	wreg,f,c
  6639  002CB6  D7FD               	bra	u4007
  6640  002CB8  2F80               	decfsz	??_DelayPORXLCD& (0+255),f,b
  6641  002CBA  D7FB               	bra	u4007
  6642  002CBC  D000               	nop2	
  6643  002CBE  F000               	nop	
  6644  002CC0  0012               	return		;funcret
  6645  002CC2  FFFF               	dw	65535	; errata NOP
  6646  002CC4                     __end_of_DelayPORXLCD:
  6647                           	opt callstack 0
  6648                           
  6649 ;; *************** function _BusyXLCD *****************
  6650 ;; Defined at:
  6651 ;;		line 451 in file "lcd_pic16.c"
  6652 ;; Parameters:    Size  Location     Type
  6653 ;;		None
  6654 ;; Auto vars:     Size  Location     Type
  6655 ;;		None
  6656 ;; Return value:  Size  Location     Type
  6657 ;;                  1    wreg      unsigned char 
  6658 ;; Registers used:
  6659 ;;		wreg
  6660 ;; Tracked objects:
  6661 ;;		On entry : 0/0
  6662 ;;		On exit  : 0/0
  6663 ;;		Unchanged: 0/0
  6664 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6665 ;;      Params:         0       0       0       0       0       0       0
  6666 ;;      Locals:         0       0       0       0       0       0       0
  6667 ;;      Temps:          0       1       0       0       0       0       0
  6668 ;;      Totals:         0       1       0       0       0       0       0
  6669 ;;Total ram usage:        1 bytes
  6670 ;; Hardware stack levels used:    1
  6671 ;; Hardware stack levels required when called:   10
  6672 ;; This function calls:
  6673 ;;		Nothing
  6674 ;; This function is called by:
  6675 ;;		_OpenXLCD
  6676 ;;		_putsXLCD
  6677 ;;		_SendCMDLCD
  6678 ;;		_putrsXLCD
  6679 ;; This function uses a non-reentrant model
  6680 ;;
  6681                           
  6682                           	psect	text39
  6683  002C6E                     __ptext39:
  6684                           	opt callstack 0
  6685  002C6E                     _BusyXLCD:
  6686                           	opt callstack 0
  6687  002C6E  FFFF               	dw	65535	; assembler added errata NOP
  6688                           
  6689                           ;lcd_pic16.c: 504:         _delay((unsigned long)((5)*(12000000/4000.0)));
  6690                           
  6691                           ;incstack = 0
  6692  002C70  0E0F               	movlw	15
  6693  002C72  0100               	movlb	0	; () banked
  6694  002C74  6F80               	movwf	??_BusyXLCD& (0+255),b
  6695  002C76  0E9D               	movlw	157
  6696  002C78                     u4017:
  6697  002C78  FFFF               	dw	65535	; errata NOP
  6698  002C7A  2EE8               	decfsz	wreg,f,c
  6699  002C7C  D7FD               	bra	u4017
  6700  002C7E  2F80               	decfsz	??_BusyXLCD& (0+255),f,b
  6701  002C80  D7FB               	bra	u4017
  6702  002C82  D000               	nop2	
  6703  002C84  F000               	nop	
  6704                           
  6705                           ;lcd_pic16.c: 505:         return 0;
  6706  002C86  0E00               	movlw	0
  6707  002C88  0012               	return		;funcret
  6708  002C8A  FFFF               	dw	65535	; errata NOP
  6709  002C8C                     __end_of_BusyXLCD:
  6710                           	opt callstack 0
  6711                           
  6712 ;; *************** function _inter *****************
  6713 ;; Defined at:
  6714 ;;		line 80 in file "main.c"
  6715 ;; Parameters:    Size  Location     Type
  6716 ;;		None
  6717 ;; Auto vars:     Size  Location     Type
  6718 ;;		None
  6719 ;; Return value:  Size  Location     Type
  6720 ;;                  1    wreg      void 
  6721 ;; Registers used:
  6722 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6723 ;; Tracked objects:
  6724 ;;		On entry : 0/0
  6725 ;;		On exit  : 0/0
  6726 ;;		Unchanged: 0/0
  6727 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6728 ;;      Params:         0       0       0       0       0       0       0
  6729 ;;      Locals:         0       0       0       0       0       0       0
  6730 ;;      Temps:         10       0       0       0       0       0       0
  6731 ;;      Totals:        10       0       0       0       0       0       0
  6732 ;;Total ram usage:       10 bytes
  6733 ;; Hardware stack levels used:    1
  6734 ;; Hardware stack levels required when called:    9
  6735 ;; This function calls:
  6736 ;;		_time
  6737 ;;		i2_updateLCD
  6738 ;; This function is called by:
  6739 ;;		Interrupt level 2
  6740 ;; This function uses a non-reentrant model
  6741 ;;
  6742                           
  6743                           	psect	intcode
  6744  000008                     __pintcode:
  6745                           	opt callstack 0
  6746  000008                     _inter:
  6747                           	opt callstack 0
  6748  000008  FFFF               	dw	65535	; assembler added errata NOP
  6749                           
  6750                           ;incstack = 0
  6751  00000A  827F               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  6752  00000C  CFE1 F070          	movff	fsr1l,??_inter
  6753  000010  CFE2 F071          	movff	fsr1h,??_inter+1
  6754  000014  CFD9 F072          	movff	fsr2l,??_inter+2
  6755  000018  CFDA F073          	movff	fsr2h,??_inter+3
  6756  00001C  CFF3 F074          	movff	prodl,??_inter+4
  6757  000020  CFF4 F075          	movff	prodh,??_inter+5
  6758  000024  CFF6 F076          	movff	tblptrl,??_inter+6
  6759  000028  CFF7 F077          	movff	tblptrh,??_inter+7
  6760  00002C  CFF8 F078          	movff	tblptru,??_inter+8
  6761  000030  CFF5 F079          	movff	tablat,??_inter+9
  6762                           
  6763                           ;main.c: 82:     INTCONbits.GIE = 0;
  6764  000034  9EF2               	bcf	4082,7,c	;volatile
  6765                           
  6766                           ;main.c: 84:     if(PIR1bits.TMR1IF == 1){
  6767  000036  A09E               	btfss	3998,0,c	;volatile
  6768  000038  D011               	goto	i2l4280
  6769                           
  6770                           ;main.c: 85:         TMR1H = prTmr1H;
  6771  00003A  C07D  FFCF         	movff	_prTmr1H,4047	;volatile
  6772                           
  6773                           ;main.c: 86:         TMR1L = prTmr1L;
  6774  00003E  C07E  FFCE         	movff	_prTmr1L,4046	;volatile
  6775                           
  6776                           ;main.c: 87:         cntTmr1++;
  6777  000042  2A7C               	incf	_cntTmr1,f,c
  6778                           
  6779                           ;main.c: 88:         time();
  6780  000044  EC2A  F011         	call	_time	;wreg free
  6781                           
  6782                           ;main.c: 90:         if(cntTmr1 == 10){
  6783  000048  0E0A               	movlw	10
  6784  00004A  187C               	xorwf	_cntTmr1,w,c
  6785  00004C  A4D8               	btfss	status,2,c
  6786  00004E  D004               	goto	i2l4278
  6787                           
  6788                           ;main.c: 91:             cntTmr1 = 0;
  6789  000050  0E00               	movlw	0
  6790  000052  6E7C               	movwf	_cntTmr1,c
  6791                           
  6792                           ;main.c: 92:             updateLCD();
  6793  000054  EC79  F010         	call	i2_updateLCD	;wreg free
  6794  000058                     i2l4278:
  6795  000058  FFFF               	dw	65535	; assembler added errata NOP
  6796                           
  6797                           ;main.c: 94:         PIR1bits.TMR1IF = 0;
  6798  00005A  909E               	bcf	3998,0,c	;volatile
  6799  00005C                     i2l4280:
  6800  00005C  FFFF               	dw	65535	; assembler added errata NOP
  6801                           
  6802                           ;main.c: 96:     INTCONbits.GIE = 1;
  6803  00005E  8EF2               	bsf	4082,7,c	;volatile
  6804  000060  C079  FFF5         	movff	??_inter+9,tablat
  6805  000064  C078  FFF8         	movff	??_inter+8,tblptru
  6806  000068  C077  FFF7         	movff	??_inter+7,tblptrh
  6807  00006C  C076  FFF6         	movff	??_inter+6,tblptrl
  6808  000070  C075  FFF4         	movff	??_inter+5,prodh
  6809  000074  C074  FFF3         	movff	??_inter+4,prodl
  6810  000078  C073  FFDA         	movff	??_inter+3,fsr2h
  6811  00007C  C072  FFD9         	movff	??_inter+2,fsr2l
  6812  000080  C071  FFE2         	movff	??_inter+1,fsr1h
  6813  000084  C070  FFE1         	movff	??_inter,fsr1l
  6814  000088  927F               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  6815  00008A  0011               	retfie		f
  6816  00008C  FFFF               	dw	65535	; errata NOP
  6817  00008E                     __end_of_inter:
  6818                           	opt callstack 0
  6819                           
  6820 ;; *************** function i2_updateLCD *****************
  6821 ;; Defined at:
  6822 ;;		line 14 in file "lcd.c"
  6823 ;; Parameters:    Size  Location     Type
  6824 ;;		None
  6825 ;; Auto vars:     Size  Location     Type
  6826 ;;  updateLCD       1  110[COMRAM] unsigned char 
  6827 ;;  updateLCD       1  109[COMRAM] unsigned char 
  6828 ;; Return value:  Size  Location     Type
  6829 ;;                  1    wreg      void 
  6830 ;; Registers used:
  6831 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6832 ;; Tracked objects:
  6833 ;;		On entry : 0/0
  6834 ;;		On exit  : 0/0
  6835 ;;		Unchanged: 0/0
  6836 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6837 ;;      Params:         0       0       0       0       0       0       0
  6838 ;;      Locals:         2       0       0       0       0       0       0
  6839 ;;      Temps:          0       0       0       0       0       0       0
  6840 ;;      Totals:         2       0       0       0       0       0       0
  6841 ;;Total ram usage:        2 bytes
  6842 ;; Hardware stack levels used:    1
  6843 ;; Hardware stack levels required when called:    8
  6844 ;; This function calls:
  6845 ;;		i2_SetDDRamAddr
  6846 ;;		i2___lwdiv
  6847 ;;		i2___lwmod
  6848 ;;		i2_putsXLCD
  6849 ;;		i2_sprintf
  6850 ;; This function is called by:
  6851 ;;		_inter
  6852 ;; This function uses a non-reentrant model
  6853 ;;
  6854                           
  6855                           	psect	text41
  6856  0020F2                     __ptext41:
  6857                           	opt callstack 0
  6858  0020F2                     i2_updateLCD:
  6859                           	opt callstack 0
  6860  0020F2  FFFF               	dw	65535	; assembler added errata NOP
  6861                           
  6862                           ;lcd.c: 16:         unsigned char decim = frequency % 10;
  6863                           
  6864                           ;incstack = 0
  6865  0020F4  C0F8  F001         	movff	_frequency,i2___lwmod@dividend
  6866  0020F8  C0F9  F002         	movff	_frequency+1,i2___lwmod@dividend+1
  6867  0020FC  0E00               	movlw	0
  6868  0020FE  6E04               	movwf	i2___lwmod@divisor+1,c
  6869  002100  0E0A               	movlw	10
  6870  002102  6E03               	movwf	i2___lwmod@divisor,c
  6871  002104  EC67  F013         	call	i2___lwmod	;wreg free
  6872  002108  5001               	movf	?i2___lwmod,w,c
  6873  00210A  6E6E               	movwf	i2updateLCD@decim,c
  6874                           
  6875                           ;lcd.c: 17:         unsigned char integ = frequency / 10;
  6876  00210C  C0F8  F001         	movff	_frequency,i2___lwdiv@dividend
  6877  002110  C0F9  F002         	movff	_frequency+1,i2___lwdiv@dividend+1
  6878  002114  0E00               	movlw	0
  6879  002116  6E04               	movwf	i2___lwdiv@divisor+1,c
  6880  002118  0E0A               	movlw	10
  6881  00211A  6E03               	movwf	i2___lwdiv@divisor,c
  6882  00211C  EC5F  F012         	call	i2___lwdiv	;wreg free
  6883  002120  5001               	movf	?i2___lwdiv,w,c
  6884  002122  6E6F               	movwf	i2updateLCD@integ,c
  6885                           
  6886                           ;lcd.c: 18:         sprintf(lineTwo,"FREQ.  %3d.%d MHz",integ, decim);
  6887  002124  0E24               	movlw	low _lineTwo
  6888  002126  6E5C               	movwf	i2sprintf@s,c
  6889  002128  0E01               	movlw	high _lineTwo
  6890  00212A  6E5D               	movwf	i2sprintf@s+1,c
  6891  00212C  0E05               	movlw	low STR_5
  6892  00212E  6E5E               	movwf	i2sprintf@fmt,c
  6893  002130  0E06               	movlw	high STR_5
  6894  002132  6E5F               	movwf	i2sprintf@fmt+1,c
  6895  002134  C06F  F060         	movff	i2updateLCD@integ,?i2_sprintf+4
  6896  002138  6A61               	clrf	?i2_sprintf+5,c
  6897  00213A  C06E  F062         	movff	i2updateLCD@decim,?i2_sprintf+6
  6898  00213E  6A63               	clrf	?i2_sprintf+7,c
  6899  002140  EC3E  F013         	call	i2_sprintf	;wreg free
  6900                           
  6901                           ;lcd.c: 19:         SetDDRamAddr(0x40);
  6902  002144  0E40               	movlw	64
  6903  002146  EC89  F014         	call	i2_SetDDRamAddr
  6904                           
  6905                           ;lcd.c: 20:         putsXLCD(lineTwo);
  6906  00214A  0E24               	movlw	low _lineTwo
  6907  00214C  6E02               	movwf	i2putsXLCD@buffer,c
  6908  00214E  0E01               	movlw	high _lineTwo
  6909  002150  6E03               	movwf	i2putsXLCD@buffer+1,c
  6910  002152  EC80  F015         	call	i2_putsXLCD	;wreg free
  6911                           
  6912                           ;lcd.c: 22:     SetDDRamAddr(0x00);
  6913  002156  0E00               	movlw	0
  6914  002158  EC89  F014         	call	i2_SetDDRamAddr
  6915                           
  6916                           ;lcd.c: 23:     putsXLCD(lineOne);
  6917  00215C  0E35               	movlw	low _lineOne
  6918  00215E  6E02               	movwf	i2putsXLCD@buffer,c
  6919  002160  0E01               	movlw	high _lineOne
  6920  002162  6E03               	movwf	i2putsXLCD@buffer+1,c
  6921  002164  EC80  F015         	call	i2_putsXLCD	;wreg free
  6922  002168  0012               	return		;funcret
  6923  00216A  FFFF               	dw	65535	; errata NOP
  6924  00216C                     __end_ofi2_updateLCD:
  6925                           	opt callstack 0
  6926                           
  6927 ;; *************** function i2_sprintf *****************
  6928 ;; Defined at:
  6929 ;;		line 9 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/nf_sprintf.c"
  6930 ;; Parameters:    Size  Location     Type
  6931 ;;  s               2   91[COMRAM] PTR unsigned char 
  6932 ;;		 -> lineTwo(17), lineOne(17), 
  6933 ;;  fmt             2   93[COMRAM] PTR const unsigned char 
  6934 ;;		 -> STR_5(18), STR_4(17), STR_3(17), STR_2(17), 
  6935 ;;		 -> STR_1(17), 
  6936 ;; Auto vars:     Size  Location     Type
  6937 ;;  sprintf         6  103[COMRAM] struct _IO_FILE
  6938 ;;  sprintf         2  101[COMRAM] PTR void [1]
  6939 ;;		 -> ?i2_sprintf(2), ?_sprintf(2), 
  6940 ;;  sprintf         2    0        int 
  6941 ;; Return value:  Size  Location     Type
  6942 ;;                  2   91[COMRAM] int 
  6943 ;; Registers used:
  6944 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6945 ;; Tracked objects:
  6946 ;;		On entry : 0/0
  6947 ;;		On exit  : 0/0
  6948 ;;		Unchanged: 0/0
  6949 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6950 ;;      Params:         8       0       0       0       0       0       0
  6951 ;;      Locals:        10       0       0       0       0       0       0
  6952 ;;      Temps:          0       0       0       0       0       0       0
  6953 ;;      Totals:        18       0       0       0       0       0       0
  6954 ;;Total ram usage:       18 bytes
  6955 ;; Hardware stack levels used:    1
  6956 ;; Hardware stack levels required when called:    7
  6957 ;; This function calls:
  6958 ;;		i2_vfprintf
  6959 ;; This function is called by:
  6960 ;;		i2_updateLCD
  6961 ;; This function uses a non-reentrant model
  6962 ;;
  6963                           
  6964                           	psect	text42
  6965  00267C                     __ptext42:
  6966                           	opt callstack 0
  6967  00267C                     i2_sprintf:
  6968                           	opt callstack 0
  6969  00267C  FFFF               	dw	65535	; assembler added errata NOP
  6970                           
  6971                           ;incstack = 0
  6972  00267E  0E60               	movlw	low (?i2_sprintf+4)
  6973  002680  6E66               	movwf	i2sprintf@ap,c
  6974  002682  0E00               	movlw	high (?i2_sprintf+4)
  6975  002684  6E67               	movwf	i2sprintf@ap+1,c
  6976  002686  C05C  F068         	movff	i2sprintf@s,i2sprintf@f
  6977  00268A  C05D  F069         	movff	i2sprintf@s+1,i2sprintf@f+1
  6978  00268E  0E00               	movlw	0
  6979  002690  6E6B               	movwf	i2sprintf@f+3,c
  6980  002692  0E00               	movlw	0
  6981  002694  6E6A               	movwf	i2sprintf@f+2,c
  6982  002696  0E00               	movlw	0
  6983  002698  6E6D               	movwf	i2sprintf@f+5,c
  6984  00269A  0E00               	movlw	0
  6985  00269C  6E6C               	movwf	i2sprintf@f+4,c
  6986  00269E  0E68               	movlw	low i2sprintf@f
  6987  0026A0  6E54               	movwf	i2vfprintf@fp,c
  6988  0026A2  0E00               	movlw	high i2sprintf@f
  6989  0026A4  6E55               	movwf	i2vfprintf@fp+1,c
  6990  0026A6  C05E  F056         	movff	i2sprintf@fmt,i2vfprintf@fmt
  6991  0026AA  C05F  F057         	movff	i2sprintf@fmt+1,i2vfprintf@fmt+1
  6992  0026AE  0E66               	movlw	low i2sprintf@ap
  6993  0026B0  6E58               	movwf	i2vfprintf@ap,c
  6994  0026B2  0E00               	movlw	high i2sprintf@ap
  6995  0026B4  6E59               	movwf	i2vfprintf@ap+1,c
  6996  0026B6  EC2F  F012         	call	i2_vfprintf	;wreg free
  6997  0026BA  506A               	movf	i2sprintf@f+2,w,c
  6998  0026BC  245C               	addwf	i2sprintf@s,w,c
  6999  0026BE  6ED9               	movwf	fsr2l,c
  7000  0026C0  506B               	movf	i2sprintf@f+3,w,c
  7001  0026C2  205D               	addwfc	i2sprintf@s+1,w,c
  7002  0026C4  6EDA               	movwf	fsr2h,c
  7003  0026C6  0E00               	movlw	0
  7004  0026C8  6EDF               	movwf	indf2,c
  7005  0026CA  0012               	return		;funcret
  7006  0026CC  FFFF               	dw	65535	; errata NOP
  7007  0026CE                     __end_ofi2_sprintf:
  7008                           	opt callstack 0
  7009                           
  7010 ;; *************** function i2_vfprintf *****************
  7011 ;; Defined at:
  7012 ;;		line 1368 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  7013 ;; Parameters:    Size  Location     Type
  7014 ;;  fp              2   83[COMRAM] PTR struct _IO_FILE
  7015 ;;		 -> i2sprintf@f(6), sprintf@f(6), 
  7016 ;;  fmt             2   85[COMRAM] PTR const unsigned char 
  7017 ;;		 -> STR_5(18), STR_4(17), STR_3(17), STR_2(17), 
  7018 ;;		 -> STR_1(17), 
  7019 ;;  ap              2   87[COMRAM] PTR PTR void 
  7020 ;;		 -> i2sprintf@ap(2), sprintf@ap(2), 
  7021 ;; Auto vars:     Size  Location     Type
  7022 ;;  vfprintf        2   89[COMRAM] PTR unsigned char 
  7023 ;;		 -> STR_5(18), STR_4(17), STR_3(17), STR_2(17), 
  7024 ;;		 -> STR_1(17), 
  7025 ;; Return value:  Size  Location     Type
  7026 ;;                  2   83[COMRAM] int 
  7027 ;; Registers used:
  7028 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7029 ;; Tracked objects:
  7030 ;;		On entry : 0/0
  7031 ;;		On exit  : 0/0
  7032 ;;		Unchanged: 0/0
  7033 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7034 ;;      Params:         6       0       0       0       0       0       0
  7035 ;;      Locals:         2       0       0       0       0       0       0
  7036 ;;      Temps:          0       0       0       0       0       0       0
  7037 ;;      Totals:         8       0       0       0       0       0       0
  7038 ;;Total ram usage:        8 bytes
  7039 ;; Hardware stack levels used:    1
  7040 ;; Hardware stack levels required when called:    6
  7041 ;; This function calls:
  7042 ;;		i2_vfpfcnvrt
  7043 ;; This function is called by:
  7044 ;;		i2_sprintf
  7045 ;; This function uses a non-reentrant model
  7046 ;;
  7047                           
  7048                           	psect	text43
  7049  00245E                     __ptext43:
  7050                           	opt callstack 0
  7051  00245E                     i2_vfprintf:
  7052                           	opt callstack 0
  7053  00245E  FFFF               	dw	65535	; assembler added errata NOP
  7054                           
  7055                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1368: int vfprintf(FILE *fp, 
      +                          const char *fmt, va_list ap);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1
      +                          369: {;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1371:     char *cfmt;;/
      +                          opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1373:     cfmt = (char *)fmt;
  7056                           
  7057                           ;incstack = 0
  7058  002460  C056  F05A         	movff	i2vfprintf@fmt,i2vfprintf@cfmt
  7059  002464  C057  F05B         	movff	i2vfprintf@fmt+1,i2vfprintf@cfmt+1
  7060                           
  7061                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1374:     nout = 0;
  7062  002468  0E00               	movlw	0
  7063  00246A  0101               	movlb	1	; () banked
  7064  00246C  6F01               	movwf	(_nout+1)& (0+255),b
  7065  00246E  0E00               	movlw	0
  7066  002470  6F00               	movwf	_nout& (0+255),b
  7067                           
  7068                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
  7069  002472  D014               	goto	i2l3812
  7070  002474                     i2l3810:
  7071  002474  FFFF               	dw	65535	; assembler added errata NOP
  7072                           
  7073                           ; BSR set to: 1
  7074                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1376:         nout += vfpfcnv
      +                          rt(fp, &cfmt, ap);
  7075  002476  C054  F040         	movff	i2vfprintf@fp,i2vfpfcnvrt@fp
  7076  00247A  C055  F041         	movff	i2vfprintf@fp+1,i2vfpfcnvrt@fp+1
  7077  00247E  0E5A               	movlw	low i2vfprintf@cfmt
  7078  002480  6E42               	movwf	i2vfpfcnvrt@fmt,c
  7079  002482  0E00               	movlw	high i2vfprintf@cfmt
  7080  002484  6E43               	movwf	i2vfpfcnvrt@fmt+1,c
  7081  002486  C058  F044         	movff	i2vfprintf@ap,i2vfpfcnvrt@ap
  7082  00248A  C059  F045         	movff	i2vfprintf@ap+1,i2vfpfcnvrt@ap+1
  7083  00248E  EC71  F004         	call	i2_vfpfcnvrt	;wreg free
  7084  002492  5040               	movf	?i2_vfpfcnvrt,w,c
  7085  002494  0101               	movlb	1	; () banked
  7086  002496  2700               	addwf	_nout& (0+255),f,b
  7087  002498  5041               	movf	?i2_vfpfcnvrt+1,w,c
  7088  00249A  2301               	addwfc	(_nout+1)& (0+255),f,b
  7089  00249C                     i2l3812:
  7090  00249C  FFFF               	dw	65535	; assembler added errata NOP
  7091                           
  7092                           ; BSR set to: 1
  7093                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
  7094  00249E  C05A  FFF6         	movff	i2vfprintf@cfmt,tblptrl
  7095  0024A2  C05B  FFF7         	movff	i2vfprintf@cfmt+1,tblptrh
  7096  0024A6                     	if	0	;tblptru may be non-zero
  7097  0024A6                     	endif
  7098  0024A6                     	if	0	;tblptru may be non-zero
  7099  0024A6                     	endif
  7100  0024A6  0008               	tblrd		*
  7101  0024A8  FFFF               	dw	65535	; errata NOP
  7102  0024AA  50F5               	movf	tablat,w,c
  7103  0024AC  0900               	iorlw	0
  7104  0024AE  A4D8               	btfss	status,2,c
  7105  0024B0  D7E1               	goto	i2l3810
  7106                           
  7107                           ; BSR set to: 1
  7108                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1378:     return nout;
  7109  0024B2  C100  F054         	movff	_nout,?i2_vfprintf
  7110  0024B6  C101  F055         	movff	_nout+1,?i2_vfprintf+1
  7111                           
  7112                           ; BSR set to: 1
  7113  0024BA  0012               	return		;funcret
  7114  0024BC  FFFF               	dw	65535	; errata NOP
  7115  0024BE                     __end_ofi2_vfprintf:
  7116                           	opt callstack 0
  7117                           
  7118 ;; *************** function i2_vfpfcnvrt *****************
  7119 ;; Defined at:
  7120 ;;		line 670 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  7121 ;; Parameters:    Size  Location     Type
  7122 ;;  fp              2   63[COMRAM] PTR struct _IO_FILE
  7123 ;;		 -> i2sprintf@f(6), sprintf@f(6), 
  7124 ;;  fmt             2   65[COMRAM] PTR PTR unsigned char 
  7125 ;;		 -> i2vfprintf@cfmt(2), vfprintf@cfmt(2), 
  7126 ;;  ap              2   67[COMRAM] PTR PTR void 
  7127 ;;		 -> i2sprintf@ap(2), sprintf@ap(2), 
  7128 ;; Auto vars:     Size  Location     Type
  7129 ;;  vfpfcnvrt       8   73[COMRAM] long long 
  7130 ;;  vfpfcnvrt       8    0        unsigned long long 
  7131 ;;  vfpfcnvrt       4    0        unsigned long long 
  7132 ;;  vfpfcnvrt       3    0        PTR void 
  7133 ;;  vfpfcnvrt       3    0        unsigned char [3]
  7134 ;;  vfpfcnvrt       3    0        PTR unsigned char 
  7135 ;;  vfpfcnvrt       2    0        int 
  7136 ;;  vfpfcnvrt       2    0        int 
  7137 ;;  vfpfcnvrt       1    0        unsigned char 
  7138 ;; Return value:  Size  Location     Type
  7139 ;;                  2   63[COMRAM] int 
  7140 ;; Registers used:
  7141 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7142 ;; Tracked objects:
  7143 ;;		On entry : 0/0
  7144 ;;		On exit  : 0/0
  7145 ;;		Unchanged: 0/0
  7146 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7147 ;;      Params:         6       0       0       0       0       0       0
  7148 ;;      Locals:        10       0       0       0       0       0       0
  7149 ;;      Temps:          4       0       0       0       0       0       0
  7150 ;;      Totals:        20       0       0       0       0       0       0
  7151 ;;Total ram usage:       20 bytes
  7152 ;; Hardware stack levels used:    1
  7153 ;; Hardware stack levels required when called:    5
  7154 ;; This function calls:
  7155 ;;		i2_atoi
  7156 ;;		i2_dtoa
  7157 ;;		i2_fputc
  7158 ;;		i2_isdigit
  7159 ;; This function is called by:
  7160 ;;		i2_vfprintf
  7161 ;; This function uses a non-reentrant model
  7162 ;;
  7163                           
  7164                           	psect	text44
  7165  0008E2                     __ptext44:
  7166                           	opt callstack 0
  7167  0008E2                     i2_vfpfcnvrt:
  7168                           	opt callstack 0
  7169  0008E2  FFFF               	dw	65535	; assembler added errata NOP
  7170                           
  7171                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 670: static int vfpfcnvrt(FIL
      +                          E *fp, char *fmt[], va_list ap);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c
      +                          : 671: {;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 672:     char c, *cp,
      +                           ct[3];;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 673:     int done, i;;
      +                          /opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 674:     long long ll;;/opt/mi
      +                          crochip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 675:     unsigned long long llu;
  7172                           
  7173                           ; BSR set to: 1
  7174                           ;incstack = 0
  7175  0008E4  C042  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
  7176  0008E8  C043  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
  7177  0008EC  CFDE FFF6          	movff	postinc2,tblptrl
  7178  0008F0  CFDD FFF7          	movff	postdec2,tblptrh
  7179  0008F4                     	if	0	;tblptru may be non-zero
  7180  0008F4                     	endif
  7181  0008F4                     	if	0	;tblptru may be non-zero
  7182  0008F4                     	endif
  7183  0008F4  0008               	tblrd		*
  7184  0008F6  FFFF               	dw	65535	; errata NOP
  7185  0008F8  50F5               	movf	tablat,w,c
  7186  0008FA  0A25               	xorlw	37
  7187  0008FC  A4D8               	btfss	status,2,c
  7188  0008FE  D112               	goto	i2l3604
  7189                           
  7190                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 681:         ++*fmt;
  7191  000900  C042  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
  7192  000904  C043  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
  7193  000908  2ADE               	incf	postinc2,f,c
  7194  00090A  0E00               	movlw	0
  7195  00090C  22DD               	addwfc	postdec2,f,c
  7196                           
  7197                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 683:         flags = width = 
      +                          0;
  7198  00090E  0E00               	movlw	0
  7199  000910  0100               	movlb	0	; () banked
  7200  000912  6FF3               	movwf	(_width+1)& (0+255),b
  7201  000914  0E00               	movlw	0
  7202  000916  6FF2               	movwf	_width& (0+255),b
  7203  000918  C0F2  F0F6         	movff	_width,_flags
  7204  00091C  C0F3  F0F7         	movff	_width+1,_flags+1
  7205                           
  7206                           ; BSR set to: 0
  7207                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 684:         prec = -1;
  7208  000920  69F4               	setf	_prec& (0+255),b
  7209  000922  69F5               	setf	(_prec+1)& (0+255),b
  7210                           
  7211                           ; BSR set to: 0
  7212                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 723:         if ((*fmt)[0] ==
      +                           '*') {
  7213  000924  C042  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
  7214  000928  C043  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
  7215  00092C  CFDE FFF6          	movff	postinc2,tblptrl
  7216  000930  CFDD FFF7          	movff	postdec2,tblptrh
  7217  000934                     	if	0	;tblptru may be non-zero
  7218  000934                     	endif
  7219  000934                     	if	0	;tblptru may be non-zero
  7220  000934                     	endif
  7221  000934  0008               	tblrd		*
  7222  000936  FFFF               	dw	65535	; errata NOP
  7223  000938  50F5               	movf	tablat,w,c
  7224  00093A  0A2A               	xorlw	42
  7225  00093C  A4D8               	btfss	status,2,c
  7226  00093E  D023               	goto	i2l3568
  7227                           
  7228                           ; BSR set to: 0
  7229                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 724:             ++*fmt;
  7230  000940  C042  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
  7231  000944  C043  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
  7232  000948  2ADE               	incf	postinc2,f,c
  7233  00094A  0E00               	movlw	0
  7234  00094C  22DD               	addwfc	postdec2,f,c
  7235                           
  7236                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 725:             width = (*(i
      +                          nt *)__va_arg(*(int **)ap, (int)0));
  7237  00094E  C044  FFD9         	movff	i2vfpfcnvrt@ap,fsr2l
  7238  000952  C045  FFDA         	movff	i2vfpfcnvrt@ap+1,fsr2h
  7239  000956  CFDF F046          	movff	indf2,??i2_vfpfcnvrt
  7240  00095A  0E02               	movlw	2
  7241  00095C  26DE               	addwf	postinc2,f,c
  7242  00095E  CFDF F047          	movff	indf2,??i2_vfpfcnvrt+1
  7243  000962  0E00               	movlw	0
  7244  000964  22DD               	addwfc	postdec2,f,c
  7245  000966  C046  FFD9         	movff	??i2_vfpfcnvrt,fsr2l
  7246  00096A  C047  FFDA         	movff	??i2_vfpfcnvrt+1,fsr2h
  7247  00096E  CFDE F0F2          	movff	postinc2,_width
  7248  000972  CFDD F0F3          	movff	postdec2,_width+1
  7249                           
  7250                           ; BSR set to: 0
  7251                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 726:             if (width < 
      +                          0) {
  7252  000976  AFF3               	btfss	(_width+1)& (0+255),7,b
  7253  000978  D045               	goto	i2u303_40
  7254                           
  7255                           ; BSR set to: 0
  7256                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 727:                 flags |=
      +                           (1 << 0);
  7257  00097A  81F6               	bsf	_flags& (0+255),0,b
  7258                           
  7259                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 728:                 width = 
      +                          -width;
  7260  00097C  6DF2               	negf	_width& (0+255),b
  7261  00097E  1FF3               	comf	(_width+1)& (0+255),f,b
  7262  000980  B0D8               	btfsc	status,0,c
  7263  000982  2BF3               	incf	(_width+1)& (0+255),f,b
  7264  000984  D03F               	goto	i2u303_40
  7265  000986                     i2l3568:
  7266  000986  FFFF               	dw	65535	; assembler added errata NOP
  7267                           
  7268                           ; BSR set to: 0
  7269                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 731:             width = atoi
      +                          (*fmt);
  7270  000988  C042  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
  7271  00098C  C043  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
  7272  000990  CFDE F008          	movff	postinc2,i2atoi@s
  7273  000994  CFDD F009          	movff	postdec2,i2atoi@s+1
  7274  000998  EC75  F00A         	call	i2_atoi	;wreg free
  7275  00099C  C008  F0F2         	movff	?i2_atoi,_width
  7276  0009A0  C009  F0F3         	movff	?i2_atoi+1,_width+1
  7277                           
  7278                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 732:             while ((0 ? 
      +                          isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  7279  0009A4  D008               	goto	i2l3572
  7280  0009A6                     i2l3570:
  7281  0009A6  FFFF               	dw	65535	; assembler added errata NOP
  7282                           
  7283                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 733:                 ++*fmt;
  7284  0009A8  C042  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
  7285  0009AC  C043  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
  7286  0009B0  2ADE               	incf	postinc2,f,c
  7287  0009B2  0E00               	movlw	0
  7288  0009B4  22DD               	addwfc	postdec2,f,c
  7289  0009B6                     i2l3572:
  7290  0009B6  FFFF               	dw	65535	; assembler added errata NOP
  7291  0009B8  0ED0               	movlw	208
  7292  0009BA  6E46               	movwf	??i2_vfpfcnvrt& (0+255),c
  7293  0009BC  0EFF               	movlw	255
  7294  0009BE  6E47               	movwf	(??i2_vfpfcnvrt+1)& (0+255),c
  7295  0009C0  C042  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
  7296  0009C4  C043  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
  7297  0009C8  CFDE FFF6          	movff	postinc2,tblptrl
  7298  0009CC  CFDD FFF7          	movff	postdec2,tblptrh
  7299  0009D0                     	if	0	;tblptru may be non-zero
  7300  0009D0                     	endif
  7301  0009D0                     	if	0	;tblptru may be non-zero
  7302  0009D0                     	endif
  7303  0009D0  0008               	tblrd		*
  7304  0009D2  FFFF               	dw	65535	; errata NOP
  7305  0009D4  50F5               	movf	tablat,w,c
  7306  0009D6  6E48               	movwf	(??i2_vfpfcnvrt+2)& (0+255),c
  7307  0009D8  6A49               	clrf	(??i2_vfpfcnvrt+3)& (0+255),c
  7308  0009DA  5046               	movf	??i2_vfpfcnvrt,w,c
  7309  0009DC  2648               	addwf	??i2_vfpfcnvrt+2,f,c
  7310  0009DE  5047               	movf	??i2_vfpfcnvrt+1,w,c
  7311  0009E0  2249               	addwfc	??i2_vfpfcnvrt+3,f,c
  7312  0009E2  5049               	movf	??i2_vfpfcnvrt+3,w,c
  7313  0009E4  E106               	bnz	i2u301_40
  7314  0009E6  0E0A               	movlw	10
  7315  0009E8  5C48               	subwf	??i2_vfpfcnvrt+2,w,c
  7316  0009EA  B0D8               	btfsc	status,0,c
  7317  0009EC  D002               	goto	i2u301_40
  7318  0009EE  0E01               	movlw	1
  7319  0009F0  D002               	goto	i2u302_40
  7320  0009F2                     i2u301_40:
  7321  0009F2  FFFF               	dw	65535	; assembler added errata NOP
  7322  0009F4  0E00               	movlw	0
  7323  0009F6                     i2u302_40:
  7324  0009F6  FFFF               	dw	65535	; assembler added errata NOP
  7325  0009F8  6E52               	movwf	i2_vfpfcnvrt$954,c
  7326  0009FA  6A53               	clrf	i2_vfpfcnvrt$954+1,c
  7327  0009FC  5052               	movf	i2_vfpfcnvrt$954,w,c
  7328  0009FE  1053               	iorwf	i2_vfpfcnvrt$954+1,w,c
  7329  000A00  A4D8               	btfss	status,2,c
  7330  000A02  D7D1               	goto	i2l3570
  7331  000A04                     i2u303_40:
  7332  000A04  FFFF               	dw	65535	; assembler added errata NOP
  7333                           
  7334                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 825:         if ((*fmt[0] == 
      +                          'd') || (*fmt[0] == 'i')) {
  7335  000A06  C042  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
  7336  000A0A  C043  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
  7337  000A0E  CFDE FFF6          	movff	postinc2,tblptrl
  7338  000A12  CFDD FFF7          	movff	postdec2,tblptrh
  7339  000A16                     	if	0	;tblptru may be non-zero
  7340  000A16                     	endif
  7341  000A16                     	if	0	;tblptru may be non-zero
  7342  000A16                     	endif
  7343  000A16  0008               	tblrd		*
  7344  000A18  FFFF               	dw	65535	; errata NOP
  7345  000A1A  50F5               	movf	tablat,w,c
  7346  000A1C  0A64               	xorlw	100
  7347  000A1E  B4D8               	btfsc	status,2,c
  7348  000A20  D00E               	goto	i2u305_40
  7349  000A22  C042  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
  7350  000A26  C043  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
  7351  000A2A  CFDE FFF6          	movff	postinc2,tblptrl
  7352  000A2E  CFDD FFF7          	movff	postdec2,tblptrh
  7353  000A32                     	if	0	;tblptru may be non-zero
  7354  000A32                     	endif
  7355  000A32                     	if	0	;tblptru may be non-zero
  7356  000A32                     	endif
  7357  000A32  0008               	tblrd		*
  7358  000A34  FFFF               	dw	65535	; errata NOP
  7359  000A36  50F5               	movf	tablat,w,c
  7360  000A38  0A69               	xorlw	105
  7361  000A3A  A4D8               	btfss	status,2,c
  7362  000A3C  D040               	goto	i2l3588
  7363  000A3E                     i2u305_40:
  7364  000A3E  FFFF               	dw	65535	; assembler added errata NOP
  7365                           
  7366                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 827:             ++*fmt;
  7367  000A40  C042  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
  7368  000A44  C043  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
  7369  000A48  2ADE               	incf	postinc2,f,c
  7370  000A4A  0E00               	movlw	0
  7371  000A4C  22DD               	addwfc	postdec2,f,c
  7372                           
  7373                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 828:             ll = (long l
      +                          ong)(*(int *)__va_arg(*(int **)ap, (int)0));
  7374  000A4E  C044  FFD9         	movff	i2vfpfcnvrt@ap,fsr2l
  7375  000A52  C045  FFDA         	movff	i2vfpfcnvrt@ap+1,fsr2h
  7376  000A56  CFDF F046          	movff	indf2,??i2_vfpfcnvrt
  7377  000A5A  0E02               	movlw	2
  7378  000A5C  26DE               	addwf	postinc2,f,c
  7379  000A5E  CFDF F047          	movff	indf2,??i2_vfpfcnvrt+1
  7380  000A62  0E00               	movlw	0
  7381  000A64  22DD               	addwfc	postdec2,f,c
  7382  000A66  C046  FFD9         	movff	??i2_vfpfcnvrt,fsr2l
  7383  000A6A  C047  FFDA         	movff	??i2_vfpfcnvrt+1,fsr2h
  7384  000A6E  CFDE F04A          	movff	postinc2,i2vfpfcnvrt@ll
  7385  000A72  CFDD F04B          	movff	postdec2,i2vfpfcnvrt@ll+1
  7386  000A76  0E00               	movlw	0
  7387  000A78  BE4B               	btfsc	i2vfpfcnvrt@ll+1,7,c
  7388  000A7A  0EFF               	movlw	-1
  7389  000A7C  6E4C               	movwf	i2vfpfcnvrt@ll+2,c
  7390  000A7E  6E4D               	movwf	i2vfpfcnvrt@ll+3,c
  7391  000A80  6E4E               	movwf	i2vfpfcnvrt@ll+4,c
  7392  000A82  6E4F               	movwf	i2vfpfcnvrt@ll+5,c
  7393  000A84  6E50               	movwf	i2vfpfcnvrt@ll+6,c
  7394  000A86  6E51               	movwf	i2vfpfcnvrt@ll+7,c
  7395                           
  7396                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 830:             return dtoa(
      +                          fp, ll);
  7397  000A88  C040  F01C         	movff	i2vfpfcnvrt@fp,i2dtoa@fp
  7398  000A8C  C041  F01D         	movff	i2vfpfcnvrt@fp+1,i2dtoa@fp+1
  7399  000A90  C04A  F01E         	movff	i2vfpfcnvrt@ll,i2dtoa@d
  7400  000A94  C04B  F01F         	movff	i2vfpfcnvrt@ll+1,i2dtoa@d+1
  7401  000A98  C04C  F020         	movff	i2vfpfcnvrt@ll+2,i2dtoa@d+2
  7402  000A9C  C04D  F021         	movff	i2vfpfcnvrt@ll+3,i2dtoa@d+3
  7403  000AA0  C04E  F022         	movff	i2vfpfcnvrt@ll+4,i2dtoa@d+4
  7404  000AA4  C04F  F023         	movff	i2vfpfcnvrt@ll+5,i2dtoa@d+5
  7405  000AA8  C050  F024         	movff	i2vfpfcnvrt@ll+6,i2dtoa@d+6
  7406  000AAC  C051  F025         	movff	i2vfpfcnvrt@ll+7,i2dtoa@d+7
  7407  000AB0  ECE7  F006         	call	i2_dtoa	;wreg free
  7408  000AB4  C01C  F040         	movff	?i2_dtoa,?i2_vfpfcnvrt
  7409  000AB8  C01D  F041         	movff	?i2_dtoa+1,?i2_vfpfcnvrt+1
  7410  000ABC  D04F               	goto	i2l615
  7411  000ABE                     i2l3588:
  7412  000ABE  FFFF               	dw	65535	; assembler added errata NOP
  7413                           
  7414                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1350:         if ((*fmt)[0] =
      +                          = '%') {
  7415  000AC0  C042  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
  7416  000AC4  C043  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
  7417  000AC8  CFDE FFF6          	movff	postinc2,tblptrl
  7418  000ACC  CFDD FFF7          	movff	postdec2,tblptrh
  7419  000AD0                     	if	0	;tblptru may be non-zero
  7420  000AD0                     	endif
  7421  000AD0                     	if	0	;tblptru may be non-zero
  7422  000AD0                     	endif
  7423  000AD0  0008               	tblrd		*
  7424  000AD2  FFFF               	dw	65535	; errata NOP
  7425  000AD4  50F5               	movf	tablat,w,c
  7426  000AD6  0A25               	xorlw	37
  7427  000AD8  A4D8               	btfss	status,2,c
  7428  000ADA  D016               	goto	i2l3598
  7429                           
  7430                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1351:             ++*fmt;
  7431  000ADC  C042  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
  7432  000AE0  C043  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
  7433  000AE4  2ADE               	incf	postinc2,f,c
  7434  000AE6  0E00               	movlw	0
  7435  000AE8  22DD               	addwfc	postdec2,f,c
  7436                           
  7437                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1352:             fputc((int)
      +                          '%', fp);
  7438  000AEA  0E00               	movlw	0
  7439  000AEC  6E02               	movwf	i2fputc@c+1,c
  7440  000AEE  0E25               	movlw	37
  7441  000AF0  6E01               	movwf	i2fputc@c,c
  7442  000AF2  C040  F003         	movff	i2vfpfcnvrt@fp,i2fputc@fp
  7443  000AF6  C041  F004         	movff	i2vfpfcnvrt@fp+1,i2fputc@fp+1
  7444  000AFA  EC4E  F00F         	call	i2_fputc	;wreg free
  7445  000AFE                     i2l3594:
  7446  000AFE  FFFF               	dw	65535	; assembler added errata NOP
  7447                           
  7448                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1353:             return 1;
  7449  000B00  0E00               	movlw	0
  7450  000B02  6E41               	movwf	?i2_vfpfcnvrt+1,c
  7451  000B04  0E01               	movlw	1
  7452  000B06  D00B               	goto	L6
  7453  000B08                     i2l3598:
  7454  000B08  FFFF               	dw	65535	; assembler added errata NOP
  7455                           
  7456                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1357:         ++*fmt;
  7457  000B0A  C042  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
  7458  000B0E  C043  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
  7459  000B12  2ADE               	incf	postinc2,f,c
  7460  000B14  0E00               	movlw	0
  7461  000B16  22DD               	addwfc	postdec2,f,c
  7462                           
  7463                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1358:         return 0;
  7464  000B18  0E00               	movlw	0
  7465  000B1A  6E41               	movwf	?i2_vfpfcnvrt+1,c
  7466  000B1C  0E00               	movlw	0
  7467  000B1E                     L6:
  7468  000B1E  FFFF               	dw	65535	; assembler added errata NOP
  7469  000B20  6E40               	movwf	?i2_vfpfcnvrt,c
  7470  000B22  D01C               	goto	i2l615
  7471  000B24                     i2l3604:
  7472  000B24  FFFF               	dw	65535	; assembler added errata NOP
  7473                           
  7474                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1362:     fputc((int)(*fmt)[0
      +                          ], fp);
  7475  000B26  C042  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
  7476  000B2A  C043  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
  7477  000B2E  CFDE FFF6          	movff	postinc2,tblptrl
  7478  000B32  CFDD FFF7          	movff	postdec2,tblptrh
  7479  000B36                     	if	0	;tblptru may be non-zero
  7480  000B36                     	endif
  7481  000B36                     	if	0	;tblptru may be non-zero
  7482  000B36                     	endif
  7483  000B36  0008               	tblrd		*
  7484  000B38  FFFF               	dw	65535	; errata NOP
  7485  000B3A  50F5               	movf	tablat,w,c
  7486  000B3C  6E01               	movwf	i2fputc@c,c
  7487  000B3E  6A02               	clrf	i2fputc@c+1,c
  7488  000B40  C040  F003         	movff	i2vfpfcnvrt@fp,i2fputc@fp
  7489  000B44  C041  F004         	movff	i2vfpfcnvrt@fp+1,i2fputc@fp+1
  7490  000B48  EC4E  F00F         	call	i2_fputc	;wreg free
  7491                           
  7492                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1363:     ++*fmt;
  7493  000B4C  C042  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
  7494  000B50  C043  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
  7495  000B54  2ADE               	incf	postinc2,f,c
  7496  000B56  0E00               	movlw	0
  7497  000B58  22DD               	addwfc	postdec2,f,c
  7498  000B5A  D7D1               	goto	i2l3594
  7499  000B5C                     i2l615:
  7500  000B5C  FFFF               	dw	65535	; assembler added errata NOP
  7501  000B5E  0012               	return		;funcret
  7502  000B60  FFFF               	dw	65535	; errata NOP
  7503  000B62                     __end_ofi2_vfpfcnvrt:
  7504                           	opt callstack 0
  7505                           
  7506 ;; *************** function i2_dtoa *****************
  7507 ;; Defined at:
  7508 ;;		line 274 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  7509 ;; Parameters:    Size  Location     Type
  7510 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  7511 ;;		 -> i2sprintf@f(6), sprintf@f(6), 
  7512 ;;  d               8   29[COMRAM] long long 
  7513 ;; Auto vars:     Size  Location     Type
  7514 ;;  dtoa            8   53[COMRAM] long long 
  7515 ;;  dtoa            2   61[COMRAM] int 
  7516 ;;  dtoa            2   51[COMRAM] int 
  7517 ;;  dtoa            2   49[COMRAM] int 
  7518 ;;  dtoa            2   47[COMRAM] int 
  7519 ;; Return value:  Size  Location     Type
  7520 ;;                  2   27[COMRAM] int 
  7521 ;; Registers used:
  7522 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7523 ;; Tracked objects:
  7524 ;;		On entry : 0/0
  7525 ;;		On exit  : 0/0
  7526 ;;		Unchanged: 0/0
  7527 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7528 ;;      Params:        10       0       0       0       0       0       0
  7529 ;;      Locals:        18       0       0       0       0       0       0
  7530 ;;      Temps:          8       0       0       0       0       0       0
  7531 ;;      Totals:        36       0       0       0       0       0       0
  7532 ;;Total ram usage:       36 bytes
  7533 ;; Hardware stack levels used:    1
  7534 ;; Hardware stack levels required when called:    4
  7535 ;; This function calls:
  7536 ;;		i2___aodiv
  7537 ;;		i2___aomod
  7538 ;;		i2_abs
  7539 ;;		i2_pad
  7540 ;; This function is called by:
  7541 ;;		i2_vfpfcnvrt
  7542 ;; This function uses a non-reentrant model
  7543 ;;
  7544                           
  7545                           	psect	text45
  7546  000DCE                     __ptext45:
  7547                           	opt callstack 0
  7548  000DCE                     i2_dtoa:
  7549                           	opt callstack 0
  7550  000DCE  FFFF               	dw	65535	; assembler added errata NOP
  7551                           
  7552                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 274: static int dtoa(FILE *fp
      +                          , long long d);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 275: {;/opt/mic
      +                          rochip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 276:     int i, p, s, w;;/opt/microchi
      +                          p/xc8/v2.05/pic/sources/c99/common/doprnt.c: 277:     long long n;;/opt/microchip/xc8/v2
      +                          .05/pic/sources/c99/common/doprnt.c: 280:     n = d;
  7553                           
  7554                           ;incstack = 0
  7555  000DD0  C01E  F036         	movff	i2dtoa@d,i2dtoa@n
  7556  000DD4  C01F  F037         	movff	i2dtoa@d+1,i2dtoa@n+1
  7557  000DD8  C020  F038         	movff	i2dtoa@d+2,i2dtoa@n+2
  7558  000DDC  C021  F039         	movff	i2dtoa@d+3,i2dtoa@n+3
  7559  000DE0  C022  F03A         	movff	i2dtoa@d+4,i2dtoa@n+4
  7560  000DE4  C023  F03B         	movff	i2dtoa@d+5,i2dtoa@n+5
  7561  000DE8  C024  F03C         	movff	i2dtoa@d+6,i2dtoa@n+6
  7562  000DEC  C025  F03D         	movff	i2dtoa@d+7,i2dtoa@n+7
  7563                           
  7564                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 281:     s = n < 0 ? 1 : 0;
  7565  000DF0  AE3D               	btfss	i2dtoa@n+7,7,c
  7566  000DF2  D002               	goto	i2u267_40
  7567  000DF4  0E01               	movlw	1
  7568  000DF6  D002               	goto	i2u268_40
  7569  000DF8                     i2u267_40:
  7570  000DF8  FFFF               	dw	65535	; assembler added errata NOP
  7571  000DFA  0E00               	movlw	0
  7572  000DFC                     i2u268_40:
  7573  000DFC  FFFF               	dw	65535	; assembler added errata NOP
  7574  000DFE  6E34               	movwf	i2dtoa@s,c
  7575  000E00  6A35               	clrf	i2dtoa@s+1,c
  7576                           
  7577                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 282:     if (s) {
  7578  000E02  5034               	movf	i2dtoa@s,w,c
  7579  000E04  1035               	iorwf	i2dtoa@s+1,w,c
  7580  000E06  B4D8               	btfsc	status,2,c
  7581  000E08  D010               	goto	i2l3330
  7582                           
  7583                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 283:         n = -n;
  7584  000E0A  1E3D               	comf	i2dtoa@n+7,f,c
  7585  000E0C  1E3C               	comf	i2dtoa@n+6,f,c
  7586  000E0E  1E3B               	comf	i2dtoa@n+5,f,c
  7587  000E10  1E3A               	comf	i2dtoa@n+4,f,c
  7588  000E12  1E39               	comf	i2dtoa@n+3,f,c
  7589  000E14  1E38               	comf	i2dtoa@n+2,f,c
  7590  000E16  1E37               	comf	i2dtoa@n+1,f,c
  7591  000E18  6C36               	negf	i2dtoa@n,c
  7592  000E1A  0E00               	movlw	0
  7593  000E1C  2237               	addwfc	i2dtoa@n+1,f,c
  7594  000E1E  2238               	addwfc	i2dtoa@n+2,f,c
  7595  000E20  2239               	addwfc	i2dtoa@n+3,f,c
  7596  000E22  223A               	addwfc	i2dtoa@n+4,f,c
  7597  000E24  223B               	addwfc	i2dtoa@n+5,f,c
  7598  000E26  223C               	addwfc	i2dtoa@n+6,f,c
  7599  000E28  223D               	addwfc	i2dtoa@n+7,f,c
  7600  000E2A                     i2l3330:
  7601  000E2A  FFFF               	dw	65535	; assembler added errata NOP
  7602                           
  7603                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 287:     if (!(prec < 0)) {
  7604  000E2C  0100               	movlb	0	; () banked
  7605  000E2E  AFF5               	btfss	(_prec+1)& (0+255),7,b
  7606                           
  7607                           ; BSR set to: 0
  7608                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 288:         flags &= ~(1 << 
      +                          1);
  7609  000E30  93F6               	bcf	_flags& (0+255),1,b
  7610                           
  7611                           ; BSR set to: 0
  7612                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 290:     p = (0 < prec) ? pre
      +                          c : 1;
  7613  000E32  BFF5               	btfsc	(_prec+1)& (0+255),7,b
  7614  000E34  D005               	goto	i2u271_40
  7615  000E36  51F5               	movf	(_prec+1)& (0+255),w,b
  7616  000E38  E109               	bnz	i2l578
  7617  000E3A  05F4               	decf	_prec& (0+255),w,b
  7618  000E3C  B0D8               	btfsc	status,0,c
  7619  000E3E  D006               	goto	i2l578
  7620  000E40                     i2u271_40:
  7621  000E40  FFFF               	dw	65535	; assembler added errata NOP
  7622                           
  7623                           ; BSR set to: 0
  7624  000E42  0E00               	movlw	0
  7625  000E44  6E31               	movwf	i2dtoa@p+1,c
  7626  000E46  0E01               	movlw	1
  7627  000E48  6E30               	movwf	i2dtoa@p,c
  7628  000E4A  D005               	goto	i2l580
  7629  000E4C                     i2l578:
  7630  000E4C  FFFF               	dw	65535	; assembler added errata NOP
  7631                           
  7632                           ; BSR set to: 0
  7633  000E4E  C0F4  F030         	movff	_prec,i2dtoa@p
  7634  000E52  C0F5  F031         	movff	_prec+1,i2dtoa@p+1
  7635  000E56                     i2l580:
  7636  000E56  FFFF               	dw	65535	; assembler added errata NOP
  7637                           
  7638                           ; BSR set to: 0
  7639                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 291:     w = width;
  7640  000E58  C0F2  F032         	movff	_width,i2dtoa@w
  7641  000E5C  C0F3  F033         	movff	_width+1,i2dtoa@w+1
  7642                           
  7643                           ; BSR set to: 0
  7644                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 292:     if (s || (flags & (1
      +                           << 2))) {
  7645  000E60  5034               	movf	i2dtoa@s,w,c
  7646  000E62  1035               	iorwf	i2dtoa@s+1,w,c
  7647  000E64  A4D8               	btfss	status,2,c
  7648  000E66  D002               	goto	i2u273_40
  7649                           
  7650                           ; BSR set to: 0
  7651  000E68  A5F6               	btfss	_flags& (0+255),2,b
  7652  000E6A  D004               	goto	i2l3344
  7653  000E6C                     i2u273_40:
  7654  000E6C  FFFF               	dw	65535	; assembler added errata NOP
  7655                           
  7656                           ; BSR set to: 0
  7657                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 293:         --w;
  7658  000E6E  0632               	decf	i2dtoa@w,f,c
  7659  000E70  A0D8               	btfss	status,0,c
  7660  000E72  0633               	decf	i2dtoa@w+1,f,c
  7661  000E74                     i2l3344:
  7662  000E74  FFFF               	dw	65535	; assembler added errata NOP
  7663                           
  7664                           ; BSR set to: 0
  7665                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 297:     i = sizeof(dbuf) - 1
      +                          ;
  7666  000E76  0E00               	movlw	0
  7667  000E78  6E3F               	movwf	i2dtoa@i+1,c
  7668  000E7A  0E1F               	movlw	31
  7669  000E7C  6E3E               	movwf	i2dtoa@i,c
  7670                           
  7671                           ; BSR set to: 0
  7672                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 298:     dbuf[i] = '\0';
  7673  000E7E  0E00               	movlw	0
  7674  000E80  0101               	movlb	1	; () banked
  7675  000E82  6F23               	movwf	(_dbuf+31)& (0+255),b
  7676                           
  7677                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  7678  000E84  D07D               	goto	i2l3358
  7679  000E86                     i2l3348:
  7680  000E86  FFFF               	dw	65535	; assembler added errata NOP
  7681                           
  7682                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 300:         --i;
  7683  000E88  063E               	decf	i2dtoa@i,f,c
  7684  000E8A  A0D8               	btfss	status,0,c
  7685  000E8C  063F               	decf	i2dtoa@i+1,f,c
  7686                           
  7687                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 301:         dbuf[i] = '0' + 
      +                          abs(n % 10);
  7688  000E8E  0E04               	movlw	low _dbuf
  7689  000E90  243E               	addwf	i2dtoa@i,w,c
  7690  000E92  6ED9               	movwf	fsr2l,c
  7691  000E94  0E01               	movlw	high _dbuf
  7692  000E96  203F               	addwfc	i2dtoa@i+1,w,c
  7693  000E98  6EDA               	movwf	fsr2h,c
  7694  000E9A  C036  F001         	movff	i2dtoa@n,i2___aomod@dividend
  7695  000E9E  C037  F002         	movff	i2dtoa@n+1,i2___aomod@dividend+1
  7696  000EA2  C038  F003         	movff	i2dtoa@n+2,i2___aomod@dividend+2
  7697  000EA6  C039  F004         	movff	i2dtoa@n+3,i2___aomod@dividend+3
  7698  000EAA  C03A  F005         	movff	i2dtoa@n+4,i2___aomod@dividend+4
  7699  000EAE  C03B  F006         	movff	i2dtoa@n+5,i2___aomod@dividend+5
  7700  000EB2  C03C  F007         	movff	i2dtoa@n+6,i2___aomod@dividend+6
  7701  000EB6  C03D  F008         	movff	i2dtoa@n+7,i2___aomod@dividend+7
  7702  000EBA  0E0A               	movlw	10
  7703  000EBC  6E09               	movwf	i2___aomod@divisor,c
  7704  000EBE  0E00               	movlw	0
  7705  000EC0  6E0A               	movwf	i2___aomod@divisor+1,c
  7706  000EC2  0E00               	movlw	0
  7707  000EC4  6E0B               	movwf	i2___aomod@divisor+2,c
  7708  000EC6  0E00               	movlw	0
  7709  000EC8  6E0C               	movwf	i2___aomod@divisor+3,c
  7710  000ECA  0E00               	movlw	0
  7711  000ECC  6E0D               	movwf	i2___aomod@divisor+4,c
  7712  000ECE  0E00               	movlw	0
  7713  000ED0  6E0E               	movwf	i2___aomod@divisor+5,c
  7714  000ED2  0E00               	movlw	0
  7715  000ED4  6E0F               	movwf	i2___aomod@divisor+6,c
  7716  000ED6  0E00               	movlw	0
  7717  000ED8  6E10               	movwf	i2___aomod@divisor+7,c
  7718  000EDA  EC22  F00D         	call	i2___aomod	;wreg free
  7719  000EDE  C001  F026         	movff	?i2___aomod,??i2_dtoa
  7720  000EE2  C002  F027         	movff	?i2___aomod+1,??i2_dtoa+1
  7721  000EE6  C003  F028         	movff	?i2___aomod+2,??i2_dtoa+2
  7722  000EEA  C004  F029         	movff	?i2___aomod+3,??i2_dtoa+3
  7723  000EEE  C005  F02A         	movff	?i2___aomod+4,??i2_dtoa+4
  7724  000EF2  C006  F02B         	movff	?i2___aomod+5,??i2_dtoa+5
  7725  000EF6  C007  F02C         	movff	?i2___aomod+6,??i2_dtoa+6
  7726  000EFA  C008  F02D         	movff	?i2___aomod+7,??i2_dtoa+7
  7727  000EFE  C026  F013         	movff	??i2_dtoa,i2abs@a
  7728  000F02  C028  F014         	movff	??i2_dtoa+2,i2abs@a+1
  7729  000F06  EC0C  F015         	call	i2_abs	;wreg free
  7730  000F0A  5013               	movf	?i2_abs,w,c
  7731  000F0C  0F30               	addlw	48
  7732  000F0E  6EDF               	movwf	indf2,c
  7733                           
  7734                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 302:         --p;
  7735  000F10  0630               	decf	i2dtoa@p,f,c
  7736  000F12  A0D8               	btfss	status,0,c
  7737  000F14  0631               	decf	i2dtoa@p+1,f,c
  7738                           
  7739                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 303:         --w;
  7740  000F16  0632               	decf	i2dtoa@w,f,c
  7741  000F18  A0D8               	btfss	status,0,c
  7742  000F1A  0633               	decf	i2dtoa@w+1,f,c
  7743                           
  7744                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 304:         n = n / 10;
  7745  000F1C  C036  F001         	movff	i2dtoa@n,i2___aodiv@dividend
  7746  000F20  C037  F002         	movff	i2dtoa@n+1,i2___aodiv@dividend+1
  7747  000F24  C038  F003         	movff	i2dtoa@n+2,i2___aodiv@dividend+2
  7748  000F28  C039  F004         	movff	i2dtoa@n+3,i2___aodiv@dividend+3
  7749  000F2C  C03A  F005         	movff	i2dtoa@n+4,i2___aodiv@dividend+4
  7750  000F30  C03B  F006         	movff	i2dtoa@n+5,i2___aodiv@dividend+5
  7751  000F34  C03C  F007         	movff	i2dtoa@n+6,i2___aodiv@dividend+6
  7752  000F38  C03D  F008         	movff	i2dtoa@n+7,i2___aodiv@dividend+7
  7753  000F3C  0E0A               	movlw	10
  7754  000F3E  6E09               	movwf	i2___aodiv@divisor,c
  7755  000F40  0E00               	movlw	0
  7756  000F42  6E0A               	movwf	i2___aodiv@divisor+1,c
  7757  000F44  0E00               	movlw	0
  7758  000F46  6E0B               	movwf	i2___aodiv@divisor+2,c
  7759  000F48  0E00               	movlw	0
  7760  000F4A  6E0C               	movwf	i2___aodiv@divisor+3,c
  7761  000F4C  0E00               	movlw	0
  7762  000F4E  6E0D               	movwf	i2___aodiv@divisor+4,c
  7763  000F50  0E00               	movlw	0
  7764  000F52  6E0E               	movwf	i2___aodiv@divisor+5,c
  7765  000F54  0E00               	movlw	0
  7766  000F56  6E0F               	movwf	i2___aodiv@divisor+6,c
  7767  000F58  0E00               	movlw	0
  7768  000F5A  6E10               	movwf	i2___aodiv@divisor+7,c
  7769  000F5C  ECD7  F00B         	call	i2___aodiv	;wreg free
  7770  000F60  C001  F036         	movff	?i2___aodiv,i2dtoa@n
  7771  000F64  C002  F037         	movff	?i2___aodiv+1,i2dtoa@n+1
  7772  000F68  C003  F038         	movff	?i2___aodiv+2,i2dtoa@n+2
  7773  000F6C  C004  F039         	movff	?i2___aodiv+3,i2dtoa@n+3
  7774  000F70  C005  F03A         	movff	?i2___aodiv+4,i2dtoa@n+4
  7775  000F74  C006  F03B         	movff	?i2___aodiv+5,i2dtoa@n+5
  7776  000F78  C007  F03C         	movff	?i2___aodiv+6,i2dtoa@n+6
  7777  000F7C  C008  F03D         	movff	?i2___aodiv+7,i2dtoa@n+7
  7778  000F80                     i2l3358:
  7779  000F80  FFFF               	dw	65535	; assembler added errata NOP
  7780                           
  7781                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  7782  000F82  BE3F               	btfsc	i2dtoa@i+1,7,c
  7783  000F84  D021               	goto	i2u278_40
  7784  000F86  503F               	movf	i2dtoa@i+1,w,c
  7785  000F88  E103               	bnz	i2u274_40
  7786  000F8A  043E               	decf	i2dtoa@i,w,c
  7787  000F8C  A0D8               	btfss	status,0,c
  7788  000F8E  D01C               	goto	i2u278_40
  7789  000F90                     i2u274_40:
  7790  000F90  5036               	movf	i2dtoa@n,w,c
  7791  000F92  1037               	iorwf	i2dtoa@n+1,w,c
  7792  000F94  1038               	iorwf	i2dtoa@n+2,w,c
  7793  000F96  1039               	iorwf	i2dtoa@n+3,w,c
  7794  000F98  103A               	iorwf	i2dtoa@n+4,w,c
  7795  000F9A  103B               	iorwf	i2dtoa@n+5,w,c
  7796  000F9C  103C               	iorwf	i2dtoa@n+6,w,c
  7797  000F9E  103D               	iorwf	i2dtoa@n+7,w,c
  7798  000FA0  A4D8               	btfss	status,2,c
  7799  000FA2  D771               	goto	i2l3348
  7800  000FA4  BE31               	btfsc	i2dtoa@p+1,7,c
  7801  000FA6  D005               	goto	i2u276_40
  7802  000FA8  5031               	movf	i2dtoa@p+1,w,c
  7803  000FAA  E102               	bnz	i2u276_41
  7804  000FAC  0430               	decf	i2dtoa@p,w,c
  7805  000FAE  B0D8               	btfsc	status,0,c
  7806  000FB0                     i2u276_41:
  7807  000FB0  D76A               	goto	i2l3348
  7808  000FB2                     i2u276_40:
  7809  000FB2  FFFF               	dw	65535	; assembler added errata NOP
  7810  000FB4  BE33               	btfsc	i2dtoa@w+1,7,c
  7811  000FB6  D008               	goto	i2u278_40
  7812  000FB8  5033               	movf	i2dtoa@w+1,w,c
  7813  000FBA  E103               	bnz	i2u277_40
  7814  000FBC  0432               	decf	i2dtoa@w,w,c
  7815  000FBE  A0D8               	btfss	status,0,c
  7816  000FC0  D003               	goto	i2u278_40
  7817  000FC2                     i2u277_40:
  7818  000FC2  0100               	movlb	0	; () banked
  7819  000FC4  B3F6               	btfsc	_flags& (0+255),1,b
  7820  000FC6  D75F               	goto	i2l3348
  7821  000FC8                     i2u278_40:
  7822  000FC8  FFFF               	dw	65535	; assembler added errata NOP
  7823                           
  7824                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 308:     if (s || (flags & (1
      +                           << 2))) {
  7825  000FCA  5034               	movf	i2dtoa@s,w,c
  7826  000FCC  1035               	iorwf	i2dtoa@s+1,w,c
  7827  000FCE  A4D8               	btfss	status,2,c
  7828  000FD0  D003               	goto	i2u280_40
  7829  000FD2  0100               	movlb	0	; () banked
  7830  000FD4  A5F6               	btfss	_flags& (0+255),2,b
  7831  000FD6  D01A               	goto	i2l3382
  7832  000FD8                     i2u280_40:
  7833  000FD8  FFFF               	dw	65535	; assembler added errata NOP
  7834                           
  7835                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 309:         --i;
  7836  000FDA  063E               	decf	i2dtoa@i,f,c
  7837  000FDC  A0D8               	btfss	status,0,c
  7838  000FDE  063F               	decf	i2dtoa@i+1,f,c
  7839                           
  7840                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 310:         dbuf[i] = s ? '-
      +                          ' : '+';
  7841  000FE0  5034               	movf	i2dtoa@s,w,c
  7842  000FE2  1035               	iorwf	i2dtoa@s+1,w,c
  7843  000FE4  A4D8               	btfss	status,2,c
  7844  000FE6  D004               	goto	i2l3378
  7845  000FE8  0E00               	movlw	0
  7846  000FEA  6E2F               	movwf	i2_dtoa$939+1,c
  7847  000FEC  0E2B               	movlw	43
  7848  000FEE  D004               	goto	L7
  7849  000FF0                     i2l3378:
  7850  000FF0  FFFF               	dw	65535	; assembler added errata NOP
  7851  000FF2  0E00               	movlw	0
  7852  000FF4  6E2F               	movwf	i2_dtoa$939+1,c
  7853  000FF6  0E2D               	movlw	45
  7854  000FF8                     L7:
  7855  000FF8  FFFF               	dw	65535	; assembler added errata NOP
  7856  000FFA  6E2E               	movwf	i2_dtoa$939,c
  7857  000FFC  0E04               	movlw	low _dbuf
  7858  000FFE  243E               	addwf	i2dtoa@i,w,c
  7859  001000  6ED9               	movwf	fsr2l,c
  7860  001002  0E01               	movlw	high _dbuf
  7861  001004  203F               	addwfc	i2dtoa@i+1,w,c
  7862  001006  6EDA               	movwf	fsr2h,c
  7863  001008  C02E  FFDF         	movff	i2_dtoa$939,indf2
  7864  00100C                     i2l3382:
  7865  00100C  FFFF               	dw	65535	; assembler added errata NOP
  7866                           
  7867                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 314:     return pad(fp, &dbuf
      +                          [i], w);
  7868  00100E  C01C  F011         	movff	i2dtoa@fp,i2pad@fp
  7869  001012  C01D  F012         	movff	i2dtoa@fp+1,i2pad@fp+1
  7870  001016  0E04               	movlw	low _dbuf
  7871  001018  243E               	addwf	i2dtoa@i,w,c
  7872  00101A  6E13               	movwf	i2pad@buf,c
  7873  00101C  0E01               	movlw	high _dbuf
  7874  00101E  203F               	addwfc	i2dtoa@i+1,w,c
  7875  001020  6E14               	movwf	i2pad@buf+1,c
  7876  001022  C032  F015         	movff	i2dtoa@w,i2pad@p
  7877  001026  C033  F016         	movff	i2dtoa@w+1,i2pad@p+1
  7878  00102A  ECA4  F00F         	call	i2_pad	;wreg free
  7879  00102E  C011  F01C         	movff	?i2_pad,?i2_dtoa
  7880  001032  C012  F01D         	movff	?i2_pad+1,?i2_dtoa+1
  7881  001036  0012               	return		;funcret
  7882  001038  FFFF               	dw	65535	; errata NOP
  7883  00103A                     __end_ofi2_dtoa:
  7884                           	opt callstack 0
  7885                           
  7886 ;; *************** function i2_pad *****************
  7887 ;; Defined at:
  7888 ;;		line 72 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  7889 ;; Parameters:    Size  Location     Type
  7890 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  7891 ;;		 -> i2sprintf@f(6), sprintf@f(6), 
  7892 ;;  buf             2   18[COMRAM] PTR unsigned char 
  7893 ;;		 -> dbuf(32), 
  7894 ;;  p               2   20[COMRAM] int 
  7895 ;; Auto vars:     Size  Location     Type
  7896 ;;  pad             2   25[COMRAM] int 
  7897 ;;  pad             2   23[COMRAM] int 
  7898 ;; Return value:  Size  Location     Type
  7899 ;;                  2   16[COMRAM] int 
  7900 ;; Registers used:
  7901 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7902 ;; Tracked objects:
  7903 ;;		On entry : 0/0
  7904 ;;		On exit  : 0/0
  7905 ;;		Unchanged: 0/0
  7906 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7907 ;;      Params:         6       0       0       0       0       0       0
  7908 ;;      Locals:         4       0       0       0       0       0       0
  7909 ;;      Temps:          1       0       0       0       0       0       0
  7910 ;;      Totals:        11       0       0       0       0       0       0
  7911 ;;Total ram usage:       11 bytes
  7912 ;; Hardware stack levels used:    1
  7913 ;; Hardware stack levels required when called:    3
  7914 ;; This function calls:
  7915 ;;		i2_fputc
  7916 ;;		i2_fputs
  7917 ;;		i2_strlen
  7918 ;; This function is called by:
  7919 ;;		i2_dtoa
  7920 ;; This function uses a non-reentrant model
  7921 ;;
  7922                           
  7923                           	psect	text46
  7924  001F48                     __ptext46:
  7925                           	opt callstack 0
  7926  001F48                     i2_pad:
  7927                           	opt callstack 0
  7928  001F48  FFFF               	dw	65535	; assembler added errata NOP
  7929                           
  7930                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 72: static int pad(FILE *fp, 
      +                          char *buf, int p);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 73: {;/opt/m
      +                          icrochip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 74:     int i, w;;/opt/microchip/xc8
      +                          /v2.05/pic/sources/c99/common/doprnt.c: 77:     if (flags & (1 << 0)) {
  7931                           
  7932                           ;incstack = 0
  7933  001F4A  0100               	movlb	0	; () banked
  7934  001F4C  A1F6               	btfss	_flags& (0+255),0,b
  7935  001F4E  D00A               	goto	i2l3094
  7936                           
  7937                           ; BSR set to: 0
  7938                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 78:         fputs((const char
      +                           *)buf, fp);
  7939  001F50  C013  F00A         	movff	i2pad@buf,i2fputs@s
  7940  001F54  C014  F00B         	movff	i2pad@buf+1,i2fputs@s+1
  7941  001F58  C011  F00C         	movff	i2pad@fp,i2fputs@fp
  7942  001F5C  C012  F00D         	movff	i2pad@fp+1,i2fputs@fp+1
  7943  001F60  ECAB  F014         	call	i2_fputs	;wreg free
  7944  001F64                     i2l3094:
  7945  001F64  FFFF               	dw	65535	; assembler added errata NOP
  7946                           
  7947                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 82:     w = (p < 0) ? 0 : p;
  7948  001F66  BE16               	btfsc	i2pad@p+1,7,c
  7949  001F68  D005               	goto	i2l3098
  7950  001F6A  C015  F01A         	movff	i2pad@p,i2pad@w
  7951  001F6E  C016  F01B         	movff	i2pad@p+1,i2pad@w+1
  7952  001F72  D005               	goto	i2l567
  7953  001F74                     i2l3098:
  7954  001F74  FFFF               	dw	65535	; assembler added errata NOP
  7955  001F76  0E00               	movlw	0
  7956  001F78  6E1B               	movwf	i2pad@w+1,c
  7957  001F7A  0E00               	movlw	0
  7958  001F7C  6E1A               	movwf	i2pad@w,c
  7959  001F7E                     i2l567:
  7960  001F7E  FFFF               	dw	65535	; assembler added errata NOP
  7961                           
  7962                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 83:     i = 0;
  7963  001F80  0E00               	movlw	0
  7964  001F82  6E19               	movwf	i2pad@i+1,c
  7965  001F84  0E00               	movlw	0
  7966  001F86  6E18               	movwf	i2pad@i,c
  7967                           
  7968                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
  7969  001F88  D00D               	goto	i2l3104
  7970  001F8A                     i2l3100:
  7971  001F8A  FFFF               	dw	65535	; assembler added errata NOP
  7972                           
  7973                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 85:         fputc(' ', fp);
  7974  001F8C  0E00               	movlw	0
  7975  001F8E  6E02               	movwf	i2fputc@c+1,c
  7976  001F90  0E20               	movlw	32
  7977  001F92  6E01               	movwf	i2fputc@c,c
  7978  001F94  C011  F003         	movff	i2pad@fp,i2fputc@fp
  7979  001F98  C012  F004         	movff	i2pad@fp+1,i2fputc@fp+1
  7980  001F9C  EC4E  F00F         	call	i2_fputc	;wreg free
  7981                           
  7982                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 86:         ++i;
  7983  001FA0  4A18               	infsnz	i2pad@i,f,c
  7984  001FA2  2A19               	incf	i2pad@i+1,f,c
  7985  001FA4                     i2l3104:
  7986  001FA4  FFFF               	dw	65535	; assembler added errata NOP
  7987                           
  7988                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
  7989  001FA6  501A               	movf	i2pad@w,w,c
  7990  001FA8  5C18               	subwf	i2pad@i,w,c
  7991  001FAA  5019               	movf	i2pad@i+1,w,c
  7992  001FAC  0A80               	xorlw	128
  7993  001FAE  6E17               	movwf	??i2_pad& (0+255),c
  7994  001FB0  501B               	movf	i2pad@w+1,w,c
  7995  001FB2  0A80               	xorlw	128
  7996  001FB4  5817               	subwfb	??i2_pad& (0+255),w,c
  7997  001FB6  A0D8               	btfss	status,0,c
  7998  001FB8  D7E8               	goto	i2l3100
  7999                           
  8000                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 90:     if (!(flags & (1 << 0
      +                          ))) {
  8001  001FBA  0100               	movlb	0	; () banked
  8002  001FBC  B1F6               	btfsc	_flags& (0+255),0,b
  8003  001FBE  D00A               	goto	i2l3108
  8004                           
  8005                           ; BSR set to: 0
  8006                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 91:         fputs((const char
      +                           *)buf, fp);
  8007  001FC0  C013  F00A         	movff	i2pad@buf,i2fputs@s
  8008  001FC4  C014  F00B         	movff	i2pad@buf+1,i2fputs@s+1
  8009  001FC8  C011  F00C         	movff	i2pad@fp,i2fputs@fp
  8010  001FCC  C012  F00D         	movff	i2pad@fp+1,i2fputs@fp+1
  8011  001FD0  ECAB  F014         	call	i2_fputs	;wreg free
  8012  001FD4                     i2l3108:
  8013  001FD4  FFFF               	dw	65535	; assembler added errata NOP
  8014                           
  8015                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 94:     return strlen(buf) + 
      +                          w;
  8016  001FD6  C013  F001         	movff	i2pad@buf,i2strlen@s
  8017  001FDA  C014  F002         	movff	i2pad@buf+1,i2strlen@s+1
  8018  001FDE  ECB7  F015         	call	i2_strlen	;wreg free
  8019  001FE2  501A               	movf	i2pad@w,w,c
  8020  001FE4  2401               	addwf	?i2_strlen,w,c
  8021  001FE6  6E11               	movwf	?i2_pad,c
  8022  001FE8  501B               	movf	i2pad@w+1,w,c
  8023  001FEA  2002               	addwfc	?i2_strlen+1,w,c
  8024  001FEC  6E12               	movwf	?i2_pad+1,c
  8025  001FEE  0012               	return		;funcret
  8026  001FF0  FFFF               	dw	65535	; errata NOP
  8027  001FF2                     __end_ofi2_pad:
  8028                           	opt callstack 0
  8029                           
  8030 ;; *************** function i2_strlen *****************
  8031 ;; Defined at:
  8032 ;;		line 12 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/strlen.c"
  8033 ;; Parameters:    Size  Location     Type
  8034 ;;  s               2    0[COMRAM] PTR const unsigned char 
  8035 ;;		 -> dbuf(32), 
  8036 ;; Auto vars:     Size  Location     Type
  8037 ;;  strlen          2    2[COMRAM] PTR const unsigned char 
  8038 ;;		 -> dbuf(32), 
  8039 ;; Return value:  Size  Location     Type
  8040 ;;                  2    0[COMRAM] unsigned int 
  8041 ;; Registers used:
  8042 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8043 ;; Tracked objects:
  8044 ;;		On entry : 0/0
  8045 ;;		On exit  : 0/0
  8046 ;;		Unchanged: 0/0
  8047 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8048 ;;      Params:         2       0       0       0       0       0       0
  8049 ;;      Locals:         2       0       0       0       0       0       0
  8050 ;;      Temps:          0       0       0       0       0       0       0
  8051 ;;      Totals:         4       0       0       0       0       0       0
  8052 ;;Total ram usage:        4 bytes
  8053 ;; Hardware stack levels used:    1
  8054 ;; This function calls:
  8055 ;;		Nothing
  8056 ;; This function is called by:
  8057 ;;		i2_pad
  8058 ;; This function uses a non-reentrant model
  8059 ;;
  8060                           
  8061                           	psect	text47
  8062  002B6E                     __ptext47:
  8063                           	opt callstack 0
  8064  002B6E                     i2_strlen:
  8065                           	opt callstack 0
  8066  002B6E  FFFF               	dw	65535	; assembler added errata NOP
  8067                           
  8068                           ;incstack = 0
  8069  002B70  C001  F003         	movff	i2strlen@s,i2strlen@a
  8070  002B74  C002  F004         	movff	i2strlen@s+1,i2strlen@a+1
  8071  002B78  D003               	goto	i2l2956
  8072  002B7A                     i2l2954:
  8073  002B7A  FFFF               	dw	65535	; assembler added errata NOP
  8074  002B7C  4A01               	infsnz	i2strlen@s,f,c
  8075  002B7E  2A02               	incf	i2strlen@s+1,f,c
  8076  002B80                     i2l2956:
  8077  002B80  FFFF               	dw	65535	; assembler added errata NOP
  8078  002B82  C001  FFD9         	movff	i2strlen@s,fsr2l
  8079  002B86  C002  FFDA         	movff	i2strlen@s+1,fsr2h
  8080  002B8A  50DF               	movf	indf2,w,c
  8081  002B8C  A4D8               	btfss	status,2,c
  8082  002B8E  D7F5               	goto	i2l2954
  8083  002B90  5003               	movf	i2strlen@a,w,c
  8084  002B92  5C01               	subwf	i2strlen@s,w,c
  8085  002B94  6E01               	movwf	?i2_strlen,c
  8086  002B96  5004               	movf	i2strlen@a+1,w,c
  8087  002B98  5802               	subwfb	i2strlen@s+1,w,c
  8088  002B9A  6E02               	movwf	?i2_strlen+1,c
  8089  002B9C  0012               	return		;funcret
  8090  002B9E  FFFF               	dw	65535	; errata NOP
  8091  002BA0                     __end_ofi2_strlen:
  8092                           	opt callstack 0
  8093                           
  8094 ;; *************** function i2_fputs *****************
  8095 ;; Defined at:
  8096 ;;		line 8 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/nf_fputs.c"
  8097 ;; Parameters:    Size  Location     Type
  8098 ;;  s               2    9[COMRAM] PTR const unsigned char 
  8099 ;;		 -> dbuf(32), 
  8100 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  8101 ;;		 -> i2sprintf@f(6), sprintf@f(6), 
  8102 ;; Auto vars:     Size  Location     Type
  8103 ;;  fputs           2   14[COMRAM] int 
  8104 ;;  fputs           1   13[COMRAM] unsigned char 
  8105 ;; Return value:  Size  Location     Type
  8106 ;;                  2    9[COMRAM] int 
  8107 ;; Registers used:
  8108 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  8109 ;; Tracked objects:
  8110 ;;		On entry : 0/0
  8111 ;;		On exit  : 0/0
  8112 ;;		Unchanged: 0/0
  8113 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8114 ;;      Params:         4       0       0       0       0       0       0
  8115 ;;      Locals:         3       0       0       0       0       0       0
  8116 ;;      Temps:          0       0       0       0       0       0       0
  8117 ;;      Totals:         7       0       0       0       0       0       0
  8118 ;;Total ram usage:        7 bytes
  8119 ;; Hardware stack levels used:    1
  8120 ;; Hardware stack levels required when called:    2
  8121 ;; This function calls:
  8122 ;;		i2_fputc
  8123 ;; This function is called by:
  8124 ;;		i2_pad
  8125 ;; This function uses a non-reentrant model
  8126 ;;
  8127                           
  8128                           	psect	text48
  8129  002956                     __ptext48:
  8130                           	opt callstack 0
  8131  002956                     i2_fputs:
  8132                           	opt callstack 0
  8133  002956  FFFF               	dw	65535	; assembler added errata NOP
  8134                           
  8135                           ;incstack = 0
  8136  002958  0E00               	movlw	0
  8137  00295A  6E10               	movwf	i2fputs@i+1,c
  8138  00295C  0E00               	movlw	0
  8139  00295E  6E0F               	movwf	i2fputs@i,c
  8140  002960  D00C               	goto	i2l2950
  8141  002962                     i2l2946:
  8142  002962  FFFF               	dw	65535	; assembler added errata NOP
  8143  002964  C00E  F001         	movff	i2fputs@c,i2fputc@c
  8144  002968  6A02               	clrf	i2fputc@c+1,c
  8145  00296A  C00C  F003         	movff	i2fputs@fp,i2fputc@fp
  8146  00296E  C00D  F004         	movff	i2fputs@fp+1,i2fputc@fp+1
  8147  002972  EC4E  F00F         	call	i2_fputc	;wreg free
  8148  002976  4A0F               	infsnz	i2fputs@i,f,c
  8149  002978  2A10               	incf	i2fputs@i+1,f,c
  8150  00297A                     i2l2950:
  8151  00297A  FFFF               	dw	65535	; assembler added errata NOP
  8152  00297C  500F               	movf	i2fputs@i,w,c
  8153  00297E  240A               	addwf	i2fputs@s,w,c
  8154  002980  6ED9               	movwf	fsr2l,c
  8155  002982  5010               	movf	i2fputs@i+1,w,c
  8156  002984  200B               	addwfc	i2fputs@s+1,w,c
  8157  002986  6EDA               	movwf	fsr2h,c
  8158  002988  50DF               	movf	indf2,w,c
  8159  00298A  6E0E               	movwf	i2fputs@c,c
  8160  00298C  500E               	movf	i2fputs@c,w,c
  8161  00298E  B4D8               	btfsc	status,2,c
  8162  002990  0012               	return		;funcret
  8163  002992  FFFF               	dw	65535	; assembler added errata NOP
  8164  002994  D7E6               	goto	i2l2946
  8165  002996  FFFF               	dw	65535	; errata NOP
  8166  002998                     __end_ofi2_fputs:
  8167                           	opt callstack 0
  8168                           
  8169 ;; *************** function i2_fputc *****************
  8170 ;; Defined at:
  8171 ;;		line 8 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/nf_fputc.c"
  8172 ;; Parameters:    Size  Location     Type
  8173 ;;  c               2    0[COMRAM] int 
  8174 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  8175 ;;		 -> i2sprintf@f(6), sprintf@f(6), 
  8176 ;; Auto vars:     Size  Location     Type
  8177 ;;		None
  8178 ;; Return value:  Size  Location     Type
  8179 ;;                  2    0[COMRAM] int 
  8180 ;; Registers used:
  8181 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  8182 ;; Tracked objects:
  8183 ;;		On entry : 0/0
  8184 ;;		On exit  : 0/0
  8185 ;;		Unchanged: 0/0
  8186 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8187 ;;      Params:         4       0       0       0       0       0       0
  8188 ;;      Locals:         0       0       0       0       0       0       0
  8189 ;;      Temps:          5       0       0       0       0       0       0
  8190 ;;      Totals:         9       0       0       0       0       0       0
  8191 ;;Total ram usage:        9 bytes
  8192 ;; Hardware stack levels used:    1
  8193 ;; Hardware stack levels required when called:    1
  8194 ;; This function calls:
  8195 ;;		i2_putch
  8196 ;; This function is called by:
  8197 ;;		i2_pad
  8198 ;;		i2_vfpfcnvrt
  8199 ;;		i2_fputs
  8200 ;; This function uses a non-reentrant model
  8201 ;;
  8202                           
  8203                           	psect	text49
  8204  001E9C                     __ptext49:
  8205                           	opt callstack 0
  8206  001E9C                     i2_fputc:
  8207                           	opt callstack 0
  8208  001E9C  FFFF               	dw	65535	; assembler added errata NOP
  8209                           
  8210                           ;incstack = 0
  8211  001E9E  5003               	movf	i2fputc@fp,w,c
  8212  001EA0  1004               	iorwf	i2fputc@fp+1,w,c
  8213  001EA2  B4D8               	btfsc	status,2,c
  8214  001EA4  D004               	goto	i2u194_40
  8215  001EA6  5003               	movf	i2fputc@fp,w,c
  8216  001EA8  1004               	iorwf	i2fputc@fp+1,w,c
  8217  001EAA  A4D8               	btfss	status,2,c
  8218  001EAC  D005               	goto	i2l2918
  8219  001EAE                     i2u194_40:
  8220  001EAE  FFFF               	dw	65535	; assembler added errata NOP
  8221  001EB0  5001               	movf	i2fputc@c,w,c
  8222  001EB2  EC8C  F016         	call	i2_putch
  8223  001EB6  D045               	goto	i2l1360
  8224  001EB8                     i2l2918:
  8225  001EB8  FFFF               	dw	65535	; assembler added errata NOP
  8226  001EBA  EE20 F004          	lfsr	2,4
  8227  001EBE  5003               	movf	i2fputc@fp,w,c
  8228  001EC0  26D9               	addwf	fsr2l,f,c
  8229  001EC2  5004               	movf	i2fputc@fp+1,w,c
  8230  001EC4  22DA               	addwfc	fsr2h,f,c
  8231  001EC6  50DE               	movf	postinc2,w,c
  8232  001EC8  10DE               	iorwf	postinc2,w,c
  8233  001ECA  B4D8               	btfsc	status,2,c
  8234  001ECC  D016               	goto	i2u196_40
  8235  001ECE  EE20 F004          	lfsr	2,4
  8236  001ED2  5003               	movf	i2fputc@fp,w,c
  8237  001ED4  26D9               	addwf	fsr2l,f,c
  8238  001ED6  5004               	movf	i2fputc@fp+1,w,c
  8239  001ED8  22DA               	addwfc	fsr2h,f,c
  8240  001EDA  EE10 F002          	lfsr	1,2
  8241  001EDE  5003               	movf	i2fputc@fp,w,c
  8242  001EE0  26E1               	addwf	fsr1l,f,c
  8243  001EE2  5004               	movf	i2fputc@fp+1,w,c
  8244  001EE4  22E2               	addwfc	fsr1h,f,c
  8245  001EE6  50DE               	movf	postinc2,w,c
  8246  001EE8  5CE6               	subwf	postinc1,w,c
  8247  001EEA  50E6               	movf	postinc1,w,c
  8248  001EEC  0A80               	xorlw	128
  8249  001EEE  6E09               	movwf	(??i2_fputc+4)& (0+255),c
  8250  001EF0  50DE               	movf	postinc2,w,c
  8251  001EF2  0A80               	xorlw	128
  8252  001EF4  5809               	subwfb	(??i2_fputc+4)& (0+255),w,c
  8253  001EF6  B0D8               	btfsc	status,0,c
  8254  001EF8  D024               	goto	i2l1360
  8255  001EFA                     i2u196_40:
  8256  001EFA  FFFF               	dw	65535	; assembler added errata NOP
  8257  001EFC  EE20 F002          	lfsr	2,2
  8258  001F00  5003               	movf	i2fputc@fp,w,c
  8259  001F02  26D9               	addwf	fsr2l,f,c
  8260  001F04  5004               	movf	i2fputc@fp+1,w,c
  8261  001F06  22DA               	addwfc	fsr2h,f,c
  8262  001F08  CFDE F005          	movff	postinc2,??i2_fputc
  8263  001F0C  CFDD F006          	movff	postdec2,??i2_fputc+1
  8264  001F10  C003  FFD9         	movff	i2fputc@fp,fsr2l
  8265  001F14  C004  FFDA         	movff	i2fputc@fp+1,fsr2h
  8266  001F18  CFDE F007          	movff	postinc2,??i2_fputc+2
  8267  001F1C  CFDD F008          	movff	postdec2,??i2_fputc+3
  8268  001F20  5005               	movf	??i2_fputc,w,c
  8269  001F22  2407               	addwf	??i2_fputc+2,w,c
  8270  001F24  6ED9               	movwf	fsr2l,c
  8271  001F26  5006               	movf	??i2_fputc+1,w,c
  8272  001F28  2008               	addwfc	??i2_fputc+3,w,c
  8273  001F2A  6EDA               	movwf	fsr2h,c
  8274  001F2C  C001  FFDF         	movff	i2fputc@c,indf2
  8275  001F30  EE20 F002          	lfsr	2,2
  8276  001F34  5003               	movf	i2fputc@fp,w,c
  8277  001F36  26D9               	addwf	fsr2l,f,c
  8278  001F38  5004               	movf	i2fputc@fp+1,w,c
  8279  001F3A  22DA               	addwfc	fsr2h,f,c
  8280  001F3C  2ADE               	incf	postinc2,f,c
  8281  001F3E  0E00               	movlw	0
  8282  001F40  22DD               	addwfc	postdec2,f,c
  8283  001F42                     i2l1360:
  8284  001F42  FFFF               	dw	65535	; assembler added errata NOP
  8285  001F44  0012               	return		;funcret
  8286  001F46  FFFF               	dw	65535	; errata NOP
  8287  001F48                     __end_ofi2_fputc:
  8288                           	opt callstack 0
  8289                           
  8290 ;; *************** function i2_putch *****************
  8291 ;; Defined at:
  8292 ;;		line 7 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/putch.c"
  8293 ;; Parameters:    Size  Location     Type
  8294 ;;  c               1    wreg     unsigned char 
  8295 ;; Auto vars:     Size  Location     Type
  8296 ;;  c               1  (no storage) unsigned char 
  8297 ;; Return value:  Size  Location     Type
  8298 ;;                  1    wreg      void 
  8299 ;; Registers used:
  8300 ;;		wreg
  8301 ;; Tracked objects:
  8302 ;;		On entry : 0/0
  8303 ;;		On exit  : 0/0
  8304 ;;		Unchanged: 0/0
  8305 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8306 ;;      Params:         0       0       0       0       0       0       0
  8307 ;;      Locals:         0       0       0       0       0       0       0
  8308 ;;      Temps:          0       0       0       0       0       0       0
  8309 ;;      Totals:         0       0       0       0       0       0       0
  8310 ;;Total ram usage:        0 bytes
  8311 ;; Hardware stack levels used:    1
  8312 ;; This function calls:
  8313 ;;		Nothing
  8314 ;; This function is called by:
  8315 ;;		i2_fputc
  8316 ;; This function uses a non-reentrant model
  8317 ;;
  8318                           
  8319                           	psect	text50
  8320  002D18                     __ptext50:
  8321                           	opt callstack 0
  8322  002D18                     i2_putch:
  8323                           	opt callstack 0
  8324  002D18  FFFF               	dw	65535	; assembler added errata NOP
  8325                           
  8326                           ;incstack = 0
  8327  002D1A  0012               	return		;funcret
  8328  002D1C  FFFF               	dw	65535	; errata NOP
  8329  002D1E                     __end_ofi2_putch:
  8330                           	opt callstack 0
  8331                           
  8332 ;; *************** function i2_abs *****************
  8333 ;; Defined at:
  8334 ;;		line 1 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/abs.c"
  8335 ;; Parameters:    Size  Location     Type
  8336 ;;  a               2   18[COMRAM] int 
  8337 ;; Auto vars:     Size  Location     Type
  8338 ;;		None
  8339 ;; Return value:  Size  Location     Type
  8340 ;;                  2   18[COMRAM] int 
  8341 ;; Registers used:
  8342 ;;		wreg, status,2, status,0
  8343 ;; Tracked objects:
  8344 ;;		On entry : 0/0
  8345 ;;		On exit  : 0/0
  8346 ;;		Unchanged: 0/0
  8347 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8348 ;;      Params:         2       0       0       0       0       0       0
  8349 ;;      Locals:         0       0       0       0       0       0       0
  8350 ;;      Temps:          2       0       0       0       0       0       0
  8351 ;;      Totals:         4       0       0       0       0       0       0
  8352 ;;Total ram usage:        4 bytes
  8353 ;; Hardware stack levels used:    1
  8354 ;; This function calls:
  8355 ;;		Nothing
  8356 ;; This function is called by:
  8357 ;;		i2_dtoa
  8358 ;; This function uses a non-reentrant model
  8359 ;;
  8360                           
  8361                           	psect	text51
  8362  002A18                     __ptext51:
  8363                           	opt callstack 0
  8364  002A18                     i2_abs:
  8365                           	opt callstack 0
  8366  002A18  FFFF               	dw	65535	; assembler added errata NOP
  8367                           
  8368                           ;incstack = 0
  8369  002A1A  BE14               	btfsc	i2abs@a+1,7,c
  8370  002A1C  D005               	goto	i2u240_40
  8371  002A1E  5014               	movf	i2abs@a+1,w,c
  8372  002A20  E111               	bnz	i2l1300
  8373  002A22  0413               	decf	i2abs@a,w,c
  8374  002A24  B0D8               	btfsc	status,0,c
  8375  002A26  D00E               	goto	i2l1300
  8376  002A28                     i2u240_40:
  8377  002A28  FFFF               	dw	65535	; assembler added errata NOP
  8378  002A2A  C013  F015         	movff	i2abs@a,??i2_abs
  8379  002A2E  C014  F016         	movff	i2abs@a+1,??i2_abs+1
  8380  002A32  1E15               	comf	??i2_abs,f,c
  8381  002A34  1E16               	comf	??i2_abs+1,f,c
  8382  002A36  4A15               	infsnz	??i2_abs,f,c
  8383  002A38  2A16               	incf	??i2_abs+1,f,c
  8384  002A3A  C015  F013         	movff	??i2_abs,?i2_abs
  8385  002A3E  C016  F014         	movff	??i2_abs+1,?i2_abs+1
  8386  002A42  D005               	goto	i2l1303
  8387  002A44                     i2l1300:
  8388  002A44  FFFF               	dw	65535	; assembler added errata NOP
  8389  002A46  C013  F013         	movff	i2abs@a,?i2_abs
  8390  002A4A  C014  F014         	movff	i2abs@a+1,?i2_abs+1
  8391  002A4E                     i2l1303:
  8392  002A4E  FFFF               	dw	65535	; assembler added errata NOP
  8393  002A50  0012               	return		;funcret
  8394  002A52  FFFF               	dw	65535	; errata NOP
  8395  002A54                     __end_ofi2_abs:
  8396                           	opt callstack 0
  8397                           
  8398 ;; *************** function i2___aomod *****************
  8399 ;; Defined at:
  8400 ;;		line 9 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/aomod.c"
  8401 ;; Parameters:    Size  Location     Type
  8402 ;;  dividend        8    0[COMRAM] long long 
  8403 ;;  divisor         8    8[COMRAM] long long 
  8404 ;; Auto vars:     Size  Location     Type
  8405 ;;  __aomod         1   17[COMRAM] unsigned char 
  8406 ;;  __aomod         1   16[COMRAM] unsigned char 
  8407 ;; Return value:  Size  Location     Type
  8408 ;;                  8    0[COMRAM] long long 
  8409 ;; Registers used:
  8410 ;;		wreg, status,2, status,0
  8411 ;; Tracked objects:
  8412 ;;		On entry : 0/0
  8413 ;;		On exit  : 0/0
  8414 ;;		Unchanged: 0/0
  8415 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8416 ;;      Params:        16       0       0       0       0       0       0
  8417 ;;      Locals:         2       0       0       0       0       0       0
  8418 ;;      Temps:          0       0       0       0       0       0       0
  8419 ;;      Totals:        18       0       0       0       0       0       0
  8420 ;;Total ram usage:       18 bytes
  8421 ;; Hardware stack levels used:    1
  8422 ;; This function calls:
  8423 ;;		Nothing
  8424 ;; This function is called by:
  8425 ;;		i2_dtoa
  8426 ;; This function uses a non-reentrant model
  8427 ;;
  8428                           
  8429                           	psect	text52
  8430  001A44                     __ptext52:
  8431                           	opt callstack 0
  8432  001A44                     i2___aomod:
  8433                           	opt callstack 0
  8434  001A44  FFFF               	dw	65535	; assembler added errata NOP
  8435                           
  8436                           ;incstack = 0
  8437  001A46  0E00               	movlw	0
  8438  001A48  6E12               	movwf	i2___aomod@sign,c
  8439  001A4A  AE08               	btfss	i2___aomod@dividend+7,7,c
  8440  001A4C  D012               	goto	i2l3170
  8441  001A4E  1E08               	comf	i2___aomod@dividend+7,f,c
  8442  001A50  1E07               	comf	i2___aomod@dividend+6,f,c
  8443  001A52  1E06               	comf	i2___aomod@dividend+5,f,c
  8444  001A54  1E05               	comf	i2___aomod@dividend+4,f,c
  8445  001A56  1E04               	comf	i2___aomod@dividend+3,f,c
  8446  001A58  1E03               	comf	i2___aomod@dividend+2,f,c
  8447  001A5A  1E02               	comf	i2___aomod@dividend+1,f,c
  8448  001A5C  6C01               	negf	i2___aomod@dividend,c
  8449  001A5E  0E00               	movlw	0
  8450  001A60  2202               	addwfc	i2___aomod@dividend+1,f,c
  8451  001A62  2203               	addwfc	i2___aomod@dividend+2,f,c
  8452  001A64  2204               	addwfc	i2___aomod@dividend+3,f,c
  8453  001A66  2205               	addwfc	i2___aomod@dividend+4,f,c
  8454  001A68  2206               	addwfc	i2___aomod@dividend+5,f,c
  8455  001A6A  2207               	addwfc	i2___aomod@dividend+6,f,c
  8456  001A6C  2208               	addwfc	i2___aomod@dividend+7,f,c
  8457  001A6E  0E01               	movlw	1
  8458  001A70  6E12               	movwf	i2___aomod@sign,c
  8459  001A72                     i2l3170:
  8460  001A72  FFFF               	dw	65535	; assembler added errata NOP
  8461  001A74  AE10               	btfss	i2___aomod@divisor+7,7,c
  8462  001A76  D010               	goto	i2l3174
  8463  001A78  1E10               	comf	i2___aomod@divisor+7,f,c
  8464  001A7A  1E0F               	comf	i2___aomod@divisor+6,f,c
  8465  001A7C  1E0E               	comf	i2___aomod@divisor+5,f,c
  8466  001A7E  1E0D               	comf	i2___aomod@divisor+4,f,c
  8467  001A80  1E0C               	comf	i2___aomod@divisor+3,f,c
  8468  001A82  1E0B               	comf	i2___aomod@divisor+2,f,c
  8469  001A84  1E0A               	comf	i2___aomod@divisor+1,f,c
  8470  001A86  6C09               	negf	i2___aomod@divisor,c
  8471  001A88  0E00               	movlw	0
  8472  001A8A  220A               	addwfc	i2___aomod@divisor+1,f,c
  8473  001A8C  220B               	addwfc	i2___aomod@divisor+2,f,c
  8474  001A8E  220C               	addwfc	i2___aomod@divisor+3,f,c
  8475  001A90  220D               	addwfc	i2___aomod@divisor+4,f,c
  8476  001A92  220E               	addwfc	i2___aomod@divisor+5,f,c
  8477  001A94  220F               	addwfc	i2___aomod@divisor+6,f,c
  8478  001A96  2210               	addwfc	i2___aomod@divisor+7,f,c
  8479  001A98                     i2l3174:
  8480  001A98  FFFF               	dw	65535	; assembler added errata NOP
  8481  001A9A  5009               	movf	i2___aomod@divisor,w,c
  8482  001A9C  100A               	iorwf	i2___aomod@divisor+1,w,c
  8483  001A9E  100B               	iorwf	i2___aomod@divisor+2,w,c
  8484  001AA0  100C               	iorwf	i2___aomod@divisor+3,w,c
  8485  001AA2  100D               	iorwf	i2___aomod@divisor+4,w,c
  8486  001AA4  100E               	iorwf	i2___aomod@divisor+5,w,c
  8487  001AA6  100F               	iorwf	i2___aomod@divisor+6,w,c
  8488  001AA8  1010               	iorwf	i2___aomod@divisor+7,w,c
  8489  001AAA  B4D8               	btfsc	status,2,c
  8490  001AAC  D040               	goto	i2l3190
  8491  001AAE  0E01               	movlw	1
  8492  001AB0  6E11               	movwf	i2___aomod@counter,c
  8493  001AB2  D00B               	goto	i2l3180
  8494  001AB4                     i2l3178:
  8495  001AB4  FFFF               	dw	65535	; assembler added errata NOP
  8496  001AB6  90D8               	bcf	status,0,c
  8497  001AB8  3609               	rlcf	i2___aomod@divisor,f,c
  8498  001ABA  360A               	rlcf	i2___aomod@divisor+1,f,c
  8499  001ABC  360B               	rlcf	i2___aomod@divisor+2,f,c
  8500  001ABE  360C               	rlcf	i2___aomod@divisor+3,f,c
  8501  001AC0  360D               	rlcf	i2___aomod@divisor+4,f,c
  8502  001AC2  360E               	rlcf	i2___aomod@divisor+5,f,c
  8503  001AC4  360F               	rlcf	i2___aomod@divisor+6,f,c
  8504  001AC6  3610               	rlcf	i2___aomod@divisor+7,f,c
  8505  001AC8  2A11               	incf	i2___aomod@counter,f,c
  8506  001ACA                     i2l3180:
  8507  001ACA  FFFF               	dw	65535	; assembler added errata NOP
  8508  001ACC  AE10               	btfss	i2___aomod@divisor+7,7,c
  8509  001ACE  D7F2               	goto	i2l3178
  8510  001AD0                     i2u237_40:
  8511  001AD0  FFFF               	dw	65535	; assembler added errata NOP
  8512  001AD2  5009               	movf	i2___aomod@divisor,w,c
  8513  001AD4  5C01               	subwf	i2___aomod@dividend,w,c
  8514  001AD6  500A               	movf	i2___aomod@divisor+1,w,c
  8515  001AD8  5802               	subwfb	i2___aomod@dividend+1,w,c
  8516  001ADA  500B               	movf	i2___aomod@divisor+2,w,c
  8517  001ADC  5803               	subwfb	i2___aomod@dividend+2,w,c
  8518  001ADE  500C               	movf	i2___aomod@divisor+3,w,c
  8519  001AE0  5804               	subwfb	i2___aomod@dividend+3,w,c
  8520  001AE2  500D               	movf	i2___aomod@divisor+4,w,c
  8521  001AE4  5805               	subwfb	i2___aomod@dividend+4,w,c
  8522  001AE6  500E               	movf	i2___aomod@divisor+5,w,c
  8523  001AE8  5806               	subwfb	i2___aomod@dividend+5,w,c
  8524  001AEA  500F               	movf	i2___aomod@divisor+6,w,c
  8525  001AEC  5807               	subwfb	i2___aomod@dividend+6,w,c
  8526  001AEE  5010               	movf	i2___aomod@divisor+7,w,c
  8527  001AF0  5808               	subwfb	i2___aomod@dividend+7,w,c
  8528  001AF2  A0D8               	btfss	status,0,c
  8529  001AF4  D010               	goto	i2l3186
  8530  001AF6  5009               	movf	i2___aomod@divisor,w,c
  8531  001AF8  5E01               	subwf	i2___aomod@dividend,f,c
  8532  001AFA  500A               	movf	i2___aomod@divisor+1,w,c
  8533  001AFC  5A02               	subwfb	i2___aomod@dividend+1,f,c
  8534  001AFE  500B               	movf	i2___aomod@divisor+2,w,c
  8535  001B00  5A03               	subwfb	i2___aomod@dividend+2,f,c
  8536  001B02  500C               	movf	i2___aomod@divisor+3,w,c
  8537  001B04  5A04               	subwfb	i2___aomod@dividend+3,f,c
  8538  001B06  500D               	movf	i2___aomod@divisor+4,w,c
  8539  001B08  5A05               	subwfb	i2___aomod@dividend+4,f,c
  8540  001B0A  500E               	movf	i2___aomod@divisor+5,w,c
  8541  001B0C  5A06               	subwfb	i2___aomod@dividend+5,f,c
  8542  001B0E  500F               	movf	i2___aomod@divisor+6,w,c
  8543  001B10  5A07               	subwfb	i2___aomod@dividend+6,f,c
  8544  001B12  5010               	movf	i2___aomod@divisor+7,w,c
  8545  001B14  5A08               	subwfb	i2___aomod@dividend+7,f,c
  8546  001B16                     i2l3186:
  8547  001B16  FFFF               	dw	65535	; assembler added errata NOP
  8548  001B18  90D8               	bcf	status,0,c
  8549  001B1A  3210               	rrcf	i2___aomod@divisor+7,f,c
  8550  001B1C  320F               	rrcf	i2___aomod@divisor+6,f,c
  8551  001B1E  320E               	rrcf	i2___aomod@divisor+5,f,c
  8552  001B20  320D               	rrcf	i2___aomod@divisor+4,f,c
  8553  001B22  320C               	rrcf	i2___aomod@divisor+3,f,c
  8554  001B24  320B               	rrcf	i2___aomod@divisor+2,f,c
  8555  001B26  320A               	rrcf	i2___aomod@divisor+1,f,c
  8556  001B28  3209               	rrcf	i2___aomod@divisor,f,c
  8557  001B2A  2E11               	decfsz	i2___aomod@counter,f,c
  8558  001B2C  D7D1               	goto	i2u237_40
  8559  001B2E                     i2l3190:
  8560  001B2E  FFFF               	dw	65535	; assembler added errata NOP
  8561  001B30  5012               	movf	i2___aomod@sign,w,c
  8562  001B32  B4D8               	btfsc	status,2,c
  8563  001B34  D010               	goto	i2l3194
  8564  001B36  1E08               	comf	i2___aomod@dividend+7,f,c
  8565  001B38  1E07               	comf	i2___aomod@dividend+6,f,c
  8566  001B3A  1E06               	comf	i2___aomod@dividend+5,f,c
  8567  001B3C  1E05               	comf	i2___aomod@dividend+4,f,c
  8568  001B3E  1E04               	comf	i2___aomod@dividend+3,f,c
  8569  001B40  1E03               	comf	i2___aomod@dividend+2,f,c
  8570  001B42  1E02               	comf	i2___aomod@dividend+1,f,c
  8571  001B44  6C01               	negf	i2___aomod@dividend,c
  8572  001B46  0E00               	movlw	0
  8573  001B48  2202               	addwfc	i2___aomod@dividend+1,f,c
  8574  001B4A  2203               	addwfc	i2___aomod@dividend+2,f,c
  8575  001B4C  2204               	addwfc	i2___aomod@dividend+3,f,c
  8576  001B4E  2205               	addwfc	i2___aomod@dividend+4,f,c
  8577  001B50  2206               	addwfc	i2___aomod@dividend+5,f,c
  8578  001B52  2207               	addwfc	i2___aomod@dividend+6,f,c
  8579  001B54  2208               	addwfc	i2___aomod@dividend+7,f,c
  8580  001B56                     i2l3194:
  8581  001B56  FFFF               	dw	65535	; assembler added errata NOP
  8582  001B58  C001  F001         	movff	i2___aomod@dividend,?i2___aomod
  8583  001B5C  C002  F002         	movff	i2___aomod@dividend+1,?i2___aomod+1
  8584  001B60  C003  F003         	movff	i2___aomod@dividend+2,?i2___aomod+2
  8585  001B64  C004  F004         	movff	i2___aomod@dividend+3,?i2___aomod+3
  8586  001B68  C005  F005         	movff	i2___aomod@dividend+4,?i2___aomod+4
  8587  001B6C  C006  F006         	movff	i2___aomod@dividend+5,?i2___aomod+5
  8588  001B70  C007  F007         	movff	i2___aomod@dividend+6,?i2___aomod+6
  8589  001B74  C008  F008         	movff	i2___aomod@dividend+7,?i2___aomod+7
  8590  001B78  0012               	return		;funcret
  8591  001B7A  FFFF               	dw	65535	; errata NOP
  8592  001B7C                     __end_ofi2___aomod:
  8593                           	opt callstack 0
  8594                           
  8595 ;; *************** function i2___aodiv *****************
  8596 ;; Defined at:
  8597 ;;		line 9 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/aodiv.c"
  8598 ;; Parameters:    Size  Location     Type
  8599 ;;  dividend        8    0[COMRAM] long long 
  8600 ;;  divisor         8    8[COMRAM] long long 
  8601 ;; Auto vars:     Size  Location     Type
  8602 ;;  __aodiv         8   18[COMRAM] long long 
  8603 ;;  __aodiv         1   17[COMRAM] unsigned char 
  8604 ;;  __aodiv         1   16[COMRAM] unsigned char 
  8605 ;; Return value:  Size  Location     Type
  8606 ;;                  8    0[COMRAM] long long 
  8607 ;; Registers used:
  8608 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8609 ;; Tracked objects:
  8610 ;;		On entry : 0/0
  8611 ;;		On exit  : 0/0
  8612 ;;		Unchanged: 0/0
  8613 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8614 ;;      Params:        16       0       0       0       0       0       0
  8615 ;;      Locals:        10       0       0       0       0       0       0
  8616 ;;      Temps:          0       0       0       0       0       0       0
  8617 ;;      Totals:        26       0       0       0       0       0       0
  8618 ;;Total ram usage:       26 bytes
  8619 ;; Hardware stack levels used:    1
  8620 ;; This function calls:
  8621 ;;		Nothing
  8622 ;; This function is called by:
  8623 ;;		i2_dtoa
  8624 ;; This function uses a non-reentrant model
  8625 ;;
  8626                           
  8627                           	psect	text53
  8628  0017AE                     __ptext53:
  8629                           	opt callstack 0
  8630  0017AE                     i2___aodiv:
  8631                           	opt callstack 0
  8632  0017AE  FFFF               	dw	65535	; assembler added errata NOP
  8633                           
  8634                           ;incstack = 0
  8635  0017B0  0E00               	movlw	0
  8636  0017B2  6E12               	movwf	i2___aodiv@sign,c
  8637  0017B4  AE10               	btfss	i2___aodiv@divisor+7,7,c
  8638  0017B6  D012               	goto	i2l3126
  8639  0017B8  1E10               	comf	i2___aodiv@divisor+7,f,c
  8640  0017BA  1E0F               	comf	i2___aodiv@divisor+6,f,c
  8641  0017BC  1E0E               	comf	i2___aodiv@divisor+5,f,c
  8642  0017BE  1E0D               	comf	i2___aodiv@divisor+4,f,c
  8643  0017C0  1E0C               	comf	i2___aodiv@divisor+3,f,c
  8644  0017C2  1E0B               	comf	i2___aodiv@divisor+2,f,c
  8645  0017C4  1E0A               	comf	i2___aodiv@divisor+1,f,c
  8646  0017C6  6C09               	negf	i2___aodiv@divisor,c
  8647  0017C8  0E00               	movlw	0
  8648  0017CA  220A               	addwfc	i2___aodiv@divisor+1,f,c
  8649  0017CC  220B               	addwfc	i2___aodiv@divisor+2,f,c
  8650  0017CE  220C               	addwfc	i2___aodiv@divisor+3,f,c
  8651  0017D0  220D               	addwfc	i2___aodiv@divisor+4,f,c
  8652  0017D2  220E               	addwfc	i2___aodiv@divisor+5,f,c
  8653  0017D4  220F               	addwfc	i2___aodiv@divisor+6,f,c
  8654  0017D6  2210               	addwfc	i2___aodiv@divisor+7,f,c
  8655  0017D8  0E01               	movlw	1
  8656  0017DA  6E12               	movwf	i2___aodiv@sign,c
  8657  0017DC                     i2l3126:
  8658  0017DC  FFFF               	dw	65535	; assembler added errata NOP
  8659  0017DE  AE08               	btfss	i2___aodiv@dividend+7,7,c
  8660  0017E0  D012               	goto	i2l3132
  8661  0017E2  1E08               	comf	i2___aodiv@dividend+7,f,c
  8662  0017E4  1E07               	comf	i2___aodiv@dividend+6,f,c
  8663  0017E6  1E06               	comf	i2___aodiv@dividend+5,f,c
  8664  0017E8  1E05               	comf	i2___aodiv@dividend+4,f,c
  8665  0017EA  1E04               	comf	i2___aodiv@dividend+3,f,c
  8666  0017EC  1E03               	comf	i2___aodiv@dividend+2,f,c
  8667  0017EE  1E02               	comf	i2___aodiv@dividend+1,f,c
  8668  0017F0  6C01               	negf	i2___aodiv@dividend,c
  8669  0017F2  0E00               	movlw	0
  8670  0017F4  2202               	addwfc	i2___aodiv@dividend+1,f,c
  8671  0017F6  2203               	addwfc	i2___aodiv@dividend+2,f,c
  8672  0017F8  2204               	addwfc	i2___aodiv@dividend+3,f,c
  8673  0017FA  2205               	addwfc	i2___aodiv@dividend+4,f,c
  8674  0017FC  2206               	addwfc	i2___aodiv@dividend+5,f,c
  8675  0017FE  2207               	addwfc	i2___aodiv@dividend+6,f,c
  8676  001800  2208               	addwfc	i2___aodiv@dividend+7,f,c
  8677  001802  0E01               	movlw	1
  8678  001804  1A12               	xorwf	i2___aodiv@sign,f,c
  8679  001806                     i2l3132:
  8680  001806  FFFF               	dw	65535	; assembler added errata NOP
  8681  001808  EE20  F013         	lfsr	2,i2___aodiv@quotient
  8682  00180C  0E07               	movlw	7
  8683  00180E                     i2u229_41:
  8684  00180E  6ADE               	clrf	postinc2,c
  8685  001810  06E8               	decf	wreg,f,c
  8686  001812  E2FD               	bc	i2u229_41
  8687  001814  5009               	movf	i2___aodiv@divisor,w,c
  8688  001816  100A               	iorwf	i2___aodiv@divisor+1,w,c
  8689  001818  100B               	iorwf	i2___aodiv@divisor+2,w,c
  8690  00181A  100C               	iorwf	i2___aodiv@divisor+3,w,c
  8691  00181C  100D               	iorwf	i2___aodiv@divisor+4,w,c
  8692  00181E  100E               	iorwf	i2___aodiv@divisor+5,w,c
  8693  001820  100F               	iorwf	i2___aodiv@divisor+6,w,c
  8694  001822  1010               	iorwf	i2___aodiv@divisor+7,w,c
  8695  001824  B4D8               	btfsc	status,2,c
  8696  001826  D04A               	goto	i2l3154
  8697  001828  0E01               	movlw	1
  8698  00182A  6E11               	movwf	i2___aodiv@counter,c
  8699  00182C  D00B               	goto	i2l3140
  8700  00182E                     i2l3138:
  8701  00182E  FFFF               	dw	65535	; assembler added errata NOP
  8702  001830  90D8               	bcf	status,0,c
  8703  001832  3609               	rlcf	i2___aodiv@divisor,f,c
  8704  001834  360A               	rlcf	i2___aodiv@divisor+1,f,c
  8705  001836  360B               	rlcf	i2___aodiv@divisor+2,f,c
  8706  001838  360C               	rlcf	i2___aodiv@divisor+3,f,c
  8707  00183A  360D               	rlcf	i2___aodiv@divisor+4,f,c
  8708  00183C  360E               	rlcf	i2___aodiv@divisor+5,f,c
  8709  00183E  360F               	rlcf	i2___aodiv@divisor+6,f,c
  8710  001840  3610               	rlcf	i2___aodiv@divisor+7,f,c
  8711  001842  2A11               	incf	i2___aodiv@counter,f,c
  8712  001844                     i2l3140:
  8713  001844  FFFF               	dw	65535	; assembler added errata NOP
  8714  001846  AE10               	btfss	i2___aodiv@divisor+7,7,c
  8715  001848  D7F2               	goto	i2l3138
  8716  00184A                     i2u231_40:
  8717  00184A  FFFF               	dw	65535	; assembler added errata NOP
  8718  00184C  90D8               	bcf	status,0,c
  8719  00184E  3613               	rlcf	i2___aodiv@quotient,f,c
  8720  001850  3614               	rlcf	i2___aodiv@quotient+1,f,c
  8721  001852  3615               	rlcf	i2___aodiv@quotient+2,f,c
  8722  001854  3616               	rlcf	i2___aodiv@quotient+3,f,c
  8723  001856  3617               	rlcf	i2___aodiv@quotient+4,f,c
  8724  001858  3618               	rlcf	i2___aodiv@quotient+5,f,c
  8725  00185A  3619               	rlcf	i2___aodiv@quotient+6,f,c
  8726  00185C  361A               	rlcf	i2___aodiv@quotient+7,f,c
  8727  00185E  5009               	movf	i2___aodiv@divisor,w,c
  8728  001860  5C01               	subwf	i2___aodiv@dividend,w,c
  8729  001862  500A               	movf	i2___aodiv@divisor+1,w,c
  8730  001864  5802               	subwfb	i2___aodiv@dividend+1,w,c
  8731  001866  500B               	movf	i2___aodiv@divisor+2,w,c
  8732  001868  5803               	subwfb	i2___aodiv@dividend+2,w,c
  8733  00186A  500C               	movf	i2___aodiv@divisor+3,w,c
  8734  00186C  5804               	subwfb	i2___aodiv@dividend+3,w,c
  8735  00186E  500D               	movf	i2___aodiv@divisor+4,w,c
  8736  001870  5805               	subwfb	i2___aodiv@dividend+4,w,c
  8737  001872  500E               	movf	i2___aodiv@divisor+5,w,c
  8738  001874  5806               	subwfb	i2___aodiv@dividend+5,w,c
  8739  001876  500F               	movf	i2___aodiv@divisor+6,w,c
  8740  001878  5807               	subwfb	i2___aodiv@dividend+6,w,c
  8741  00187A  5010               	movf	i2___aodiv@divisor+7,w,c
  8742  00187C  5808               	subwfb	i2___aodiv@dividend+7,w,c
  8743  00187E  A0D8               	btfss	status,0,c
  8744  001880  D011               	goto	i2l3150
  8745  001882  5009               	movf	i2___aodiv@divisor,w,c
  8746  001884  5E01               	subwf	i2___aodiv@dividend,f,c
  8747  001886  500A               	movf	i2___aodiv@divisor+1,w,c
  8748  001888  5A02               	subwfb	i2___aodiv@dividend+1,f,c
  8749  00188A  500B               	movf	i2___aodiv@divisor+2,w,c
  8750  00188C  5A03               	subwfb	i2___aodiv@dividend+2,f,c
  8751  00188E  500C               	movf	i2___aodiv@divisor+3,w,c
  8752  001890  5A04               	subwfb	i2___aodiv@dividend+3,f,c
  8753  001892  500D               	movf	i2___aodiv@divisor+4,w,c
  8754  001894  5A05               	subwfb	i2___aodiv@dividend+4,f,c
  8755  001896  500E               	movf	i2___aodiv@divisor+5,w,c
  8756  001898  5A06               	subwfb	i2___aodiv@dividend+5,f,c
  8757  00189A  500F               	movf	i2___aodiv@divisor+6,w,c
  8758  00189C  5A07               	subwfb	i2___aodiv@dividend+6,f,c
  8759  00189E  5010               	movf	i2___aodiv@divisor+7,w,c
  8760  0018A0  5A08               	subwfb	i2___aodiv@dividend+7,f,c
  8761  0018A2  8013               	bsf	i2___aodiv@quotient,0,c
  8762  0018A4                     i2l3150:
  8763  0018A4  FFFF               	dw	65535	; assembler added errata NOP
  8764  0018A6  90D8               	bcf	status,0,c
  8765  0018A8  3210               	rrcf	i2___aodiv@divisor+7,f,c
  8766  0018AA  320F               	rrcf	i2___aodiv@divisor+6,f,c
  8767  0018AC  320E               	rrcf	i2___aodiv@divisor+5,f,c
  8768  0018AE  320D               	rrcf	i2___aodiv@divisor+4,f,c
  8769  0018B0  320C               	rrcf	i2___aodiv@divisor+3,f,c
  8770  0018B2  320B               	rrcf	i2___aodiv@divisor+2,f,c
  8771  0018B4  320A               	rrcf	i2___aodiv@divisor+1,f,c
  8772  0018B6  3209               	rrcf	i2___aodiv@divisor,f,c
  8773  0018B8  2E11               	decfsz	i2___aodiv@counter,f,c
  8774  0018BA  D7C7               	goto	i2u231_40
  8775  0018BC                     i2l3154:
  8776  0018BC  FFFF               	dw	65535	; assembler added errata NOP
  8777  0018BE  5012               	movf	i2___aodiv@sign,w,c
  8778  0018C0  B4D8               	btfsc	status,2,c
  8779  0018C2  D010               	goto	i2l3158
  8780  0018C4  1E1A               	comf	i2___aodiv@quotient+7,f,c
  8781  0018C6  1E19               	comf	i2___aodiv@quotient+6,f,c
  8782  0018C8  1E18               	comf	i2___aodiv@quotient+5,f,c
  8783  0018CA  1E17               	comf	i2___aodiv@quotient+4,f,c
  8784  0018CC  1E16               	comf	i2___aodiv@quotient+3,f,c
  8785  0018CE  1E15               	comf	i2___aodiv@quotient+2,f,c
  8786  0018D0  1E14               	comf	i2___aodiv@quotient+1,f,c
  8787  0018D2  6C13               	negf	i2___aodiv@quotient,c
  8788  0018D4  0E00               	movlw	0
  8789  0018D6  2214               	addwfc	i2___aodiv@quotient+1,f,c
  8790  0018D8  2215               	addwfc	i2___aodiv@quotient+2,f,c
  8791  0018DA  2216               	addwfc	i2___aodiv@quotient+3,f,c
  8792  0018DC  2217               	addwfc	i2___aodiv@quotient+4,f,c
  8793  0018DE  2218               	addwfc	i2___aodiv@quotient+5,f,c
  8794  0018E0  2219               	addwfc	i2___aodiv@quotient+6,f,c
  8795  0018E2  221A               	addwfc	i2___aodiv@quotient+7,f,c
  8796  0018E4                     i2l3158:
  8797  0018E4  FFFF               	dw	65535	; assembler added errata NOP
  8798  0018E6  C013  F001         	movff	i2___aodiv@quotient,?i2___aodiv
  8799  0018EA  C014  F002         	movff	i2___aodiv@quotient+1,?i2___aodiv+1
  8800  0018EE  C015  F003         	movff	i2___aodiv@quotient+2,?i2___aodiv+2
  8801  0018F2  C016  F004         	movff	i2___aodiv@quotient+3,?i2___aodiv+3
  8802  0018F6  C017  F005         	movff	i2___aodiv@quotient+4,?i2___aodiv+4
  8803  0018FA  C018  F006         	movff	i2___aodiv@quotient+5,?i2___aodiv+5
  8804  0018FE  C019  F007         	movff	i2___aodiv@quotient+6,?i2___aodiv+6
  8805  001902  C01A  F008         	movff	i2___aodiv@quotient+7,?i2___aodiv+7
  8806  001906  0012               	return		;funcret
  8807  001908  FFFF               	dw	65535	; errata NOP
  8808  00190A                     __end_ofi2___aodiv:
  8809                           	opt callstack 0
  8810                           
  8811 ;; *************** function i2_atoi *****************
  8812 ;; Defined at:
  8813 ;;		line 4 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/atoi.c"
  8814 ;; Parameters:    Size  Location     Type
  8815 ;;  s               2    7[COMRAM] PTR const unsigned char 
  8816 ;;		 -> STR_5(18), STR_4(17), STR_3(17), STR_2(17), 
  8817 ;;		 -> STR_1(17), 
  8818 ;; Auto vars:     Size  Location     Type
  8819 ;;  atoi            2   20[COMRAM] int 
  8820 ;;  atoi            2   13[COMRAM] int 
  8821 ;; Return value:  Size  Location     Type
  8822 ;;                  2    7[COMRAM] int 
  8823 ;; Registers used:
  8824 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8825 ;; Tracked objects:
  8826 ;;		On entry : 0/0
  8827 ;;		On exit  : 0/0
  8828 ;;		Unchanged: 0/0
  8829 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8830 ;;      Params:         2       0       0       0       0       0       0
  8831 ;;      Locals:         9       0       0       0       0       0       0
  8832 ;;      Temps:          4       0       0       0       0       0       0
  8833 ;;      Totals:        15       0       0       0       0       0       0
  8834 ;;Total ram usage:       15 bytes
  8835 ;; Hardware stack levels used:    1
  8836 ;; Hardware stack levels required when called:    1
  8837 ;; This function calls:
  8838 ;;		i2___wmul
  8839 ;;		i2_isdigit
  8840 ;;		i2_isspace
  8841 ;; This function is called by:
  8842 ;;		i2_vfpfcnvrt
  8843 ;; This function uses a non-reentrant model
  8844 ;;
  8845                           
  8846                           	psect	text54
  8847  0014EA                     __ptext54:
  8848                           	opt callstack 0
  8849  0014EA                     i2_atoi:
  8850                           	opt callstack 0
  8851  0014EA  FFFF               	dw	65535	; assembler added errata NOP
  8852                           
  8853                           ;incstack = 0
  8854  0014EC  0E00               	movlw	0
  8855  0014EE  6E16               	movwf	i2atoi@n+1,c
  8856  0014F0  0E00               	movlw	0
  8857  0014F2  6E15               	movwf	i2atoi@n,c
  8858  0014F4  0E00               	movlw	0
  8859  0014F6  6E0F               	movwf	i2atoi@neg+1,c
  8860  0014F8  0E00               	movlw	0
  8861  0014FA  6E0E               	movwf	i2atoi@neg,c
  8862  0014FC  D003               	goto	i2l3390
  8863  0014FE                     i2l3388:
  8864  0014FE  FFFF               	dw	65535	; assembler added errata NOP
  8865  001500  4A08               	infsnz	i2atoi@s,f,c
  8866  001502  2A09               	incf	i2atoi@s+1,f,c
  8867  001504                     i2l3390:
  8868  001504  FFFF               	dw	65535	; assembler added errata NOP
  8869  001506  0E01               	movlw	1
  8870  001508  6E14               	movwf	i2_atoi$1412,c
  8871  00150A  C008  FFF6         	movff	i2atoi@s,tblptrl
  8872  00150E  C009  FFF7         	movff	i2atoi@s+1,tblptrh
  8873  001512                     	if	0	;tblptru may be non-zero
  8874  001512                     	endif
  8875  001512                     	if	0	;tblptru may be non-zero
  8876  001512                     	endif
  8877  001512  0008               	tblrd		*
  8878  001514  FFFF               	dw	65535	; errata NOP
  8879  001516  50F5               	movf	tablat,w,c
  8880  001518  0A20               	xorlw	32
  8881  00151A  B4D8               	btfsc	status,2,c
  8882  00151C  D019               	goto	i2l3398
  8883  00151E  0EF7               	movlw	247
  8884  001520  6E0A               	movwf	??i2_atoi& (0+255),c
  8885  001522  0EFF               	movlw	255
  8886  001524  6E0B               	movwf	(??i2_atoi+1)& (0+255),c
  8887  001526  C008  FFF6         	movff	i2atoi@s,tblptrl
  8888  00152A  C009  FFF7         	movff	i2atoi@s+1,tblptrh
  8889  00152E                     	if	0	;tblptru may be non-zero
  8890  00152E                     	endif
  8891  00152E                     	if	0	;tblptru may be non-zero
  8892  00152E                     	endif
  8893  00152E  0008               	tblrd		*
  8894  001530  FFFF               	dw	65535	; errata NOP
  8895  001532  50F5               	movf	tablat,w,c
  8896  001534  6E0C               	movwf	(??i2_atoi+2)& (0+255),c
  8897  001536  6A0D               	clrf	(??i2_atoi+3)& (0+255),c
  8898  001538  500A               	movf	??i2_atoi,w,c
  8899  00153A  260C               	addwf	??i2_atoi+2,f,c
  8900  00153C  500B               	movf	??i2_atoi+1,w,c
  8901  00153E  220D               	addwfc	??i2_atoi+3,f,c
  8902  001540  500D               	movf	??i2_atoi+3,w,c
  8903  001542  E104               	bnz	i2u283_40
  8904  001544  0E05               	movlw	5
  8905  001546  5C0C               	subwf	??i2_atoi+2,w,c
  8906  001548  A0D8               	btfss	status,0,c
  8907  00154A  D002               	goto	i2l3398
  8908  00154C                     i2u283_40:
  8909  00154C  0E00               	movlw	0
  8910  00154E  6E14               	movwf	i2_atoi$1412,c
  8911  001550                     i2l3398:
  8912  001550  FFFF               	dw	65535	; assembler added errata NOP
  8913  001552  C014  F010         	movff	i2_atoi$1412,i2_atoi$1411
  8914  001556  6A11               	clrf	i2_atoi$1411+1,c
  8915  001558  5010               	movf	i2_atoi$1411,w,c
  8916  00155A  1011               	iorwf	i2_atoi$1411+1,w,c
  8917  00155C  B4D8               	btfsc	status,2,c
  8918  00155E  D00A               	goto	i2l3408
  8919  001560  D7CE               	goto	i2l3388
  8920  001562                     i2l3404:
  8921  001562  FFFF               	dw	65535	; assembler added errata NOP
  8922  001564  0E00               	movlw	0
  8923  001566  6E0F               	movwf	i2atoi@neg+1,c
  8924  001568  0E01               	movlw	1
  8925  00156A  6E0E               	movwf	i2atoi@neg,c
  8926  00156C                     i2l3406:
  8927  00156C  FFFF               	dw	65535	; assembler added errata NOP
  8928  00156E  4A08               	infsnz	i2atoi@s,f,c
  8929  001570  2A09               	incf	i2atoi@s+1,f,c
  8930  001572  D032               	goto	i2l3414
  8931  001574                     i2l3408:
  8932  001574  FFFF               	dw	65535	; assembler added errata NOP
  8933  001576  C008  FFF6         	movff	i2atoi@s,tblptrl
  8934  00157A  C009  FFF7         	movff	i2atoi@s+1,tblptrh
  8935  00157E                     	if	0	;tblptru may be non-zero
  8936  00157E                     	endif
  8937  00157E                     	if	0	;tblptru may be non-zero
  8938  00157E                     	endif
  8939  00157E  0008               	tblrd		*
  8940  001580  FFFF               	dw	65535	; errata NOP
  8941  001582  50F5               	movf	tablat,w,c
  8942  001584  6E0A               	movwf	??i2_atoi& (0+255),c
  8943  001586  6A0B               	clrf	(??i2_atoi+1)& (0+255),c
  8944                           
  8945                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8946                           ; Switch size 1, requested type "simple"
  8947                           ; Number of cases is 1, Range of values is 0 to 0
  8948                           ; switch strategies available:
  8949                           ; Name         Instructions Cycles
  8950                           ; simple_byte            4     3 (average)
  8951                           ;	Chosen strategy is simple_byte
  8952  001588  500B               	movf	??i2_atoi+1,w,c
  8953  00158A  0A00               	xorlw	0	; case 0
  8954  00158C  A4D8               	btfss	status,2,c
  8955  00158E  D024               	goto	i2l3414
  8956                           
  8957                           ; Switch size 1, requested type "simple"
  8958                           ; Number of cases is 2, Range of values is 43 to 45
  8959                           ; switch strategies available:
  8960                           ; Name         Instructions Cycles
  8961                           ; simple_byte            7     4 (average)
  8962                           ;	Chosen strategy is simple_byte
  8963  001590  500A               	movf	??i2_atoi,w,c
  8964  001592  0A2B               	xorlw	43	; case 43
  8965  001594  B4D8               	btfsc	status,2,c
  8966  001596  D7EA               	goto	i2l3406
  8967  001598  0A06               	xorlw	6	; case 45
  8968  00159A  B4D8               	btfsc	status,2,c
  8969  00159C  D7E2               	goto	i2l3404
  8970  00159E  D01C               	goto	i2l3414
  8971  0015A0                     i2l3410:
  8972  0015A0  FFFF               	dw	65535	; assembler added errata NOP
  8973  0015A2  C015  F001         	movff	i2atoi@n,i2___wmul@multiplier
  8974  0015A6  C016  F002         	movff	i2atoi@n+1,i2___wmul@multiplier+1
  8975  0015AA  0E00               	movlw	0
  8976  0015AC  6E04               	movwf	i2___wmul@multiplicand+1,c
  8977  0015AE  0E0A               	movlw	10
  8978  0015B0  6E03               	movwf	i2___wmul@multiplicand,c
  8979  0015B2  EC13  F016         	call	i2___wmul	;wreg free
  8980  0015B6  C008  FFF6         	movff	i2atoi@s,tblptrl
  8981  0015BA  C009  FFF7         	movff	i2atoi@s+1,tblptrh
  8982  0015BE                     	if	0	;tblptru may be non-zero
  8983  0015BE                     	endif
  8984  0015BE                     	if	0	;tblptru may be non-zero
  8985  0015BE                     	endif
  8986  0015BE  0008               	tblrd		*
  8987  0015C0  FFFF               	dw	65535	; errata NOP
  8988  0015C2  50F5               	movf	tablat,w,c
  8989  0015C4  5E01               	subwf	?i2___wmul,f,c
  8990  0015C6  0E00               	movlw	0
  8991  0015C8  5A02               	subwfb	?i2___wmul+1,f,c
  8992  0015CA  0E30               	movlw	48
  8993  0015CC  2401               	addwf	?i2___wmul,w,c
  8994  0015CE  6E15               	movwf	i2atoi@n,c
  8995  0015D0  0E00               	movlw	0
  8996  0015D2  2002               	addwfc	?i2___wmul+1,w,c
  8997  0015D4  6E16               	movwf	i2atoi@n+1,c
  8998  0015D6  D7CA               	goto	i2l3406
  8999  0015D8                     i2l3414:
  9000  0015D8  FFFF               	dw	65535	; assembler added errata NOP
  9001  0015DA  0ED0               	movlw	208
  9002  0015DC  6E0A               	movwf	??i2_atoi& (0+255),c
  9003  0015DE  0EFF               	movlw	255
  9004  0015E0  6E0B               	movwf	(??i2_atoi+1)& (0+255),c
  9005  0015E2  C008  FFF6         	movff	i2atoi@s,tblptrl
  9006  0015E6  C009  FFF7         	movff	i2atoi@s+1,tblptrh
  9007  0015EA                     	if	0	;tblptru may be non-zero
  9008  0015EA                     	endif
  9009  0015EA                     	if	0	;tblptru may be non-zero
  9010  0015EA                     	endif
  9011  0015EA  0008               	tblrd		*
  9012  0015EC  FFFF               	dw	65535	; errata NOP
  9013  0015EE  50F5               	movf	tablat,w,c
  9014  0015F0  6E0C               	movwf	(??i2_atoi+2)& (0+255),c
  9015  0015F2  6A0D               	clrf	(??i2_atoi+3)& (0+255),c
  9016  0015F4  500A               	movf	??i2_atoi,w,c
  9017  0015F6  260C               	addwf	??i2_atoi+2,f,c
  9018  0015F8  500B               	movf	??i2_atoi+1,w,c
  9019  0015FA  220D               	addwfc	??i2_atoi+3,f,c
  9020  0015FC  500D               	movf	??i2_atoi+3,w,c
  9021  0015FE  E106               	bnz	i2u285_40
  9022  001600  0E0A               	movlw	10
  9023  001602  5C0C               	subwf	??i2_atoi+2,w,c
  9024  001604  B0D8               	btfsc	status,0,c
  9025  001606  D002               	goto	i2u285_40
  9026  001608  0E01               	movlw	1
  9027  00160A  D002               	goto	i2u286_40
  9028  00160C                     i2u285_40:
  9029  00160C  FFFF               	dw	65535	; assembler added errata NOP
  9030  00160E  0E00               	movlw	0
  9031  001610                     i2u286_40:
  9032  001610  FFFF               	dw	65535	; assembler added errata NOP
  9033  001612  6E12               	movwf	i2_atoi$1413,c
  9034  001614  6A13               	clrf	i2_atoi$1413+1,c
  9035  001616  5012               	movf	i2_atoi$1413,w,c
  9036  001618  1013               	iorwf	i2_atoi$1413+1,w,c
  9037  00161A  A4D8               	btfss	status,2,c
  9038  00161C  D7C1               	goto	i2l3410
  9039  00161E  500E               	movf	i2atoi@neg,w,c
  9040  001620  100F               	iorwf	i2atoi@neg+1,w,c
  9041  001622  A4D8               	btfss	status,2,c
  9042  001624  D00D               	goto	i2l1331
  9043  001626  C015  F00A         	movff	i2atoi@n,??i2_atoi
  9044  00162A  C016  F00B         	movff	i2atoi@n+1,??i2_atoi+1
  9045  00162E  1E0A               	comf	??i2_atoi,f,c
  9046  001630  1E0B               	comf	??i2_atoi+1,f,c
  9047  001632  4A0A               	infsnz	??i2_atoi,f,c
  9048  001634  2A0B               	incf	??i2_atoi+1,f,c
  9049  001636  C00A  F008         	movff	??i2_atoi,?i2_atoi
  9050  00163A  C00B  F009         	movff	??i2_atoi+1,?i2_atoi+1
  9051  00163E  D005               	goto	i2l1334
  9052  001640                     i2l1331:
  9053  001640  FFFF               	dw	65535	; assembler added errata NOP
  9054  001642  C015  F008         	movff	i2atoi@n,?i2_atoi
  9055  001646  C016  F009         	movff	i2atoi@n+1,?i2_atoi+1
  9056  00164A                     i2l1334:
  9057  00164A  FFFF               	dw	65535	; assembler added errata NOP
  9058  00164C  0012               	return		;funcret
  9059  00164E  FFFF               	dw	65535	; errata NOP
  9060  001650                     __end_ofi2_atoi:
  9061                           	opt callstack 0
  9062                           
  9063 ;; *************** function i2_isspace *****************
  9064 ;; Defined at:
  9065 ;;		line 5 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/isspace.c"
  9066 ;; Parameters:    Size  Location     Type
  9067 ;;  c               2    0[COMRAM] int 
  9068 ;; Auto vars:     Size  Location     Type
  9069 ;;		None
  9070 ;; Return value:  Size  Location     Type
  9071 ;;                  2    0[COMRAM] int 
  9072 ;; Registers used:
  9073 ;;		wreg, status,2, status,0
  9074 ;; Tracked objects:
  9075 ;;		On entry : 0/0
  9076 ;;		On exit  : 0/0
  9077 ;;		Unchanged: 0/0
  9078 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9079 ;;      Params:         2       0       0       0       0       0       0
  9080 ;;      Locals:         1       0       0       0       0       0       0
  9081 ;;      Temps:          4       0       0       0       0       0       0
  9082 ;;      Totals:         7       0       0       0       0       0       0
  9083 ;;Total ram usage:        7 bytes
  9084 ;; Hardware stack levels used:    1
  9085 ;; This function calls:
  9086 ;;		Nothing
  9087 ;; This function is called by:
  9088 ;;		i2_atoi
  9089 ;; This function uses a non-reentrant model
  9090 ;;
  9091                           
  9092                           	psect	text55
  9093  0028CE                     __ptext55:
  9094                           	opt callstack 0
  9095  0028CE                     i2_isspace:
  9096                           	opt callstack 0
  9097  0028CE  FFFF               	dw	65535	; assembler added errata NOP
  9098                           
  9099                           ;incstack = 0
  9100  0028D0  0E01               	movlw	1
  9101  0028D2  6E07               	movwf	i2_isspace$1429,c
  9102  0028D4  0E20               	movlw	32
  9103  0028D6  1801               	xorwf	i2isspace@c,w,c
  9104  0028D8  1002               	iorwf	i2isspace@c+1,w,c
  9105  0028DA  B4D8               	btfsc	status,2,c
  9106  0028DC  D014               	goto	i2l3214
  9107  0028DE  0EF7               	movlw	247
  9108  0028E0  6E03               	movwf	??i2_isspace& (0+255),c
  9109  0028E2  0EFF               	movlw	255
  9110  0028E4  6E04               	movwf	(??i2_isspace+1)& (0+255),c
  9111  0028E6  C001  F005         	movff	i2isspace@c,??i2_isspace+2
  9112  0028EA  C002  F006         	movff	i2isspace@c+1,??i2_isspace+3
  9113  0028EE  5003               	movf	??i2_isspace,w,c
  9114  0028F0  2605               	addwf	??i2_isspace+2,f,c
  9115  0028F2  5004               	movf	??i2_isspace+1,w,c
  9116  0028F4  2206               	addwfc	??i2_isspace+3,f,c
  9117  0028F6  5006               	movf	??i2_isspace+3,w,c
  9118  0028F8  E104               	bnz	i2u244_40
  9119  0028FA  0E05               	movlw	5
  9120  0028FC  5C05               	subwf	??i2_isspace+2,w,c
  9121  0028FE  A0D8               	btfss	status,0,c
  9122  002900  D002               	goto	i2l3214
  9123  002902                     i2u244_40:
  9124  002902  0E00               	movlw	0
  9125  002904  6E07               	movwf	i2_isspace$1429,c
  9126  002906                     i2l3214:
  9127  002906  FFFF               	dw	65535	; assembler added errata NOP
  9128  002908  C007  F001         	movff	i2_isspace$1429,?i2_isspace
  9129  00290C  6A02               	clrf	?i2_isspace+1,c
  9130  00290E  0012               	return		;funcret
  9131  002910  FFFF               	dw	65535	; errata NOP
  9132  002912                     __end_ofi2_isspace:
  9133                           	opt callstack 0
  9134                           
  9135 ;; *************** function i2_isdigit *****************
  9136 ;; Defined at:
  9137 ;;		line 5 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/isdigit.c"
  9138 ;; Parameters:    Size  Location     Type
  9139 ;;  c               2    0[COMRAM] int 
  9140 ;; Auto vars:     Size  Location     Type
  9141 ;;		None
  9142 ;; Return value:  Size  Location     Type
  9143 ;;                  2    0[COMRAM] int 
  9144 ;; Registers used:
  9145 ;;		wreg, status,2, status,0
  9146 ;; Tracked objects:
  9147 ;;		On entry : 0/0
  9148 ;;		On exit  : 0/0
  9149 ;;		Unchanged: 0/0
  9150 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9151 ;;      Params:         2       0       0       0       0       0       0
  9152 ;;      Locals:         0       0       0       0       0       0       0
  9153 ;;      Temps:          4       0       0       0       0       0       0
  9154 ;;      Totals:         6       0       0       0       0       0       0
  9155 ;;Total ram usage:        6 bytes
  9156 ;; Hardware stack levels used:    1
  9157 ;; This function calls:
  9158 ;;		Nothing
  9159 ;; This function is called by:
  9160 ;;		i2_vfpfcnvrt
  9161 ;;		i2_atoi
  9162 ;; This function uses a non-reentrant model
  9163 ;;
  9164                           
  9165                           	psect	text56
  9166  002AC8                     __ptext56:
  9167                           	opt callstack 0
  9168  002AC8                     i2_isdigit:
  9169                           	opt callstack 0
  9170  002AC8  FFFF               	dw	65535	; assembler added errata NOP
  9171                           
  9172                           ;incstack = 0
  9173  002ACA  0ED0               	movlw	208
  9174  002ACC  6E03               	movwf	??i2_isdigit& (0+255),c
  9175  002ACE  0EFF               	movlw	255
  9176  002AD0  6E04               	movwf	(??i2_isdigit+1)& (0+255),c
  9177  002AD2  C001  F005         	movff	i2isdigit@c,??i2_isdigit+2
  9178  002AD6  C002  F006         	movff	i2isdigit@c+1,??i2_isdigit+3
  9179  002ADA  5003               	movf	??i2_isdigit,w,c
  9180  002ADC  2605               	addwf	??i2_isdigit+2,f,c
  9181  002ADE  5004               	movf	??i2_isdigit+1,w,c
  9182  002AE0  2206               	addwfc	??i2_isdigit+3,f,c
  9183  002AE2  5006               	movf	??i2_isdigit+3,w,c
  9184  002AE4  E106               	bnz	i2u241_40
  9185  002AE6  0E0A               	movlw	10
  9186  002AE8  5C05               	subwf	??i2_isdigit+2,w,c
  9187  002AEA  B0D8               	btfsc	status,0,c
  9188  002AEC  D002               	goto	i2u241_40
  9189  002AEE  0E01               	movlw	1
  9190  002AF0  D002               	goto	i2u242_40
  9191  002AF2                     i2u241_40:
  9192  002AF2  FFFF               	dw	65535	; assembler added errata NOP
  9193  002AF4  0E00               	movlw	0
  9194  002AF6                     i2u242_40:
  9195  002AF6  FFFF               	dw	65535	; assembler added errata NOP
  9196  002AF8  6E01               	movwf	?i2_isdigit,c
  9197  002AFA  6A02               	clrf	?i2_isdigit+1,c
  9198  002AFC  0012               	return		;funcret
  9199  002AFE  FFFF               	dw	65535	; errata NOP
  9200  002B00                     __end_ofi2_isdigit:
  9201                           	opt callstack 0
  9202                           
  9203 ;; *************** function i2___wmul *****************
  9204 ;; Defined at:
  9205 ;;		line 15 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/Umul16.c"
  9206 ;; Parameters:    Size  Location     Type
  9207 ;;  multiplier      2    0[COMRAM] unsigned int 
  9208 ;;  multiplicand    2    2[COMRAM] unsigned int 
  9209 ;; Auto vars:     Size  Location     Type
  9210 ;;  __wmul          2    4[COMRAM] unsigned int 
  9211 ;; Return value:  Size  Location     Type
  9212 ;;                  2    0[COMRAM] unsigned int 
  9213 ;; Registers used:
  9214 ;;		wreg, status,2, status,0, prodl, prodh
  9215 ;; Tracked objects:
  9216 ;;		On entry : 0/0
  9217 ;;		On exit  : 0/0
  9218 ;;		Unchanged: 0/0
  9219 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9220 ;;      Params:         4       0       0       0       0       0       0
  9221 ;;      Locals:         2       0       0       0       0       0       0
  9222 ;;      Temps:          0       0       0       0       0       0       0
  9223 ;;      Totals:         6       0       0       0       0       0       0
  9224 ;;Total ram usage:        6 bytes
  9225 ;; Hardware stack levels used:    1
  9226 ;; This function calls:
  9227 ;;		Nothing
  9228 ;; This function is called by:
  9229 ;;		i2_atoi
  9230 ;; This function uses a non-reentrant model
  9231 ;;
  9232                           
  9233                           	psect	text57
  9234  002C26                     __ptext57:
  9235                           	opt callstack 0
  9236  002C26                     i2___wmul:
  9237                           	opt callstack 0
  9238  002C26  FFFF               	dw	65535	; assembler added errata NOP
  9239                           
  9240                           ;incstack = 0
  9241  002C28  5001               	movf	i2___wmul@multiplier,w,c
  9242  002C2A  0203               	mulwf	i2___wmul@multiplicand,c
  9243  002C2C  CFF3 F005          	movff	prodl,i2___wmul@product
  9244  002C30  CFF4 F006          	movff	prodh,i2___wmul@product+1
  9245  002C34  5001               	movf	i2___wmul@multiplier,w,c
  9246  002C36  0204               	mulwf	i2___wmul@multiplicand+1,c
  9247  002C38  50F3               	movf	prodl,w,c
  9248  002C3A  2606               	addwf	i2___wmul@product+1,f,c
  9249  002C3C  5002               	movf	i2___wmul@multiplier+1,w,c
  9250  002C3E  0203               	mulwf	i2___wmul@multiplicand,c
  9251  002C40  50F3               	movf	prodl,w,c
  9252  002C42  2606               	addwf	i2___wmul@product+1,f,c
  9253  002C44  C005  F001         	movff	i2___wmul@product,?i2___wmul
  9254  002C48  C006  F002         	movff	i2___wmul@product+1,?i2___wmul+1
  9255  002C4C  0012               	return		;funcret
  9256  002C4E  FFFF               	dw	65535	; errata NOP
  9257  002C50                     __end_ofi2___wmul:
  9258                           	opt callstack 0
  9259                           
  9260 ;; *************** function i2_putsXLCD *****************
  9261 ;; Defined at:
  9262 ;;		line 419 in file "lcd_pic16.c"
  9263 ;; Parameters:    Size  Location     Type
  9264 ;;  buffer          2    1[COMRAM] PTR unsigned char 
  9265 ;;		 -> lineTwo(17), lineOne(17), 
  9266 ;; Auto vars:     Size  Location     Type
  9267 ;;		None
  9268 ;; Return value:  Size  Location     Type
  9269 ;;                  1    wreg      void 
  9270 ;; Registers used:
  9271 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  9272 ;; Tracked objects:
  9273 ;;		On entry : 0/0
  9274 ;;		On exit  : 0/0
  9275 ;;		Unchanged: 0/0
  9276 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9277 ;;      Params:         2       0       0       0       0       0       0
  9278 ;;      Locals:         0       0       0       0       0       0       0
  9279 ;;      Temps:          0       0       0       0       0       0       0
  9280 ;;      Totals:         2       0       0       0       0       0       0
  9281 ;;Total ram usage:        2 bytes
  9282 ;; Hardware stack levels used:    1
  9283 ;; Hardware stack levels required when called:    2
  9284 ;; This function calls:
  9285 ;;		i2_BusyXLCD
  9286 ;;		i2_WriteDataXLCD
  9287 ;; This function is called by:
  9288 ;;		i2_updateLCD
  9289 ;; This function uses a non-reentrant model
  9290 ;;
  9291                           
  9292                           	psect	text58
  9293  002B00                     __ptext58:
  9294                           	opt callstack 0
  9295  002B00                     i2_putsXLCD:
  9296                           	opt callstack 0
  9297  002B00  FFFF               	dw	65535	; assembler added errata NOP
  9298                           
  9299                           ;lcd_pic16.c: 419: void putsXLCD(char *buffer);lcd_pic16.c: 420: {;lcd_pic16.c: 421:    
      +                               while(*buffer)
  9300                           
  9301                           ;incstack = 0
  9302  002B02  D00F               	goto	i2l3982
  9303  002B04                     i2l3976:
  9304  002B04  FFFF               	dw	65535	; assembler added errata NOP
  9305  002B06  EC62  F016         	call	i2_BusyXLCD	;wreg free
  9306  002B0A  0900               	iorlw	0
  9307  002B0C  A4D8               	btfss	status,2,c
  9308  002B0E  D7FA               	goto	i2l3976
  9309                           
  9310                           ;lcd_pic16.c: 424:                 WriteDataXLCD(*buffer);
  9311  002B10  C002  FFD9         	movff	i2putsXLCD@buffer,fsr2l
  9312  002B14  C003  FFDA         	movff	i2putsXLCD@buffer+1,fsr2h
  9313  002B18  50DF               	movf	indf2,w,c
  9314  002B1A  ECCC  F014         	call	i2_WriteDataXLCD
  9315                           
  9316                           ;lcd_pic16.c: 425:                 buffer++;
  9317  002B1E  4A02               	infsnz	i2putsXLCD@buffer,f,c
  9318  002B20  2A03               	incf	i2putsXLCD@buffer+1,f,c
  9319  002B22                     i2l3982:
  9320  002B22  FFFF               	dw	65535	; assembler added errata NOP
  9321                           
  9322                           ;lcd_pic16.c: 421:         while(*buffer)
  9323  002B24  C002  FFD9         	movff	i2putsXLCD@buffer,fsr2l
  9324  002B28  C003  FFDA         	movff	i2putsXLCD@buffer+1,fsr2h
  9325  002B2C  50DF               	movf	indf2,w,c
  9326  002B2E  B4D8               	btfsc	status,2,c
  9327  002B30  0012               	return		;funcret
  9328  002B32  FFFF               	dw	65535	; assembler added errata NOP
  9329  002B34  D7E7               	goto	i2l3976
  9330  002B36  FFFF               	dw	65535	; errata NOP
  9331  002B38                     __end_ofi2_putsXLCD:
  9332                           	opt callstack 0
  9333                           
  9334 ;; *************** function i2_WriteDataXLCD *****************
  9335 ;; Defined at:
  9336 ;;		line 110 in file "lcd_pic16.c"
  9337 ;; Parameters:    Size  Location     Type
  9338 ;;  data            1    wreg     unsigned char 
  9339 ;; Auto vars:     Size  Location     Type
  9340 ;;  data            1    0[COMRAM] unsigned char 
  9341 ;; Return value:  Size  Location     Type
  9342 ;;                  1    wreg      void 
  9343 ;; Registers used:
  9344 ;;		wreg, status,2, status,0, cstack
  9345 ;; Tracked objects:
  9346 ;;		On entry : 0/0
  9347 ;;		On exit  : 0/0
  9348 ;;		Unchanged: 0/0
  9349 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9350 ;;      Params:         0       0       0       0       0       0       0
  9351 ;;      Locals:         1       0       0       0       0       0       0
  9352 ;;      Temps:          0       0       0       0       0       0       0
  9353 ;;      Totals:         1       0       0       0       0       0       0
  9354 ;;Total ram usage:        1 bytes
  9355 ;; Hardware stack levels used:    1
  9356 ;; Hardware stack levels required when called:    1
  9357 ;; This function calls:
  9358 ;;		i2_DelayFor18TCY
  9359 ;; This function is called by:
  9360 ;;		i2_putsXLCD
  9361 ;; This function uses a non-reentrant model
  9362 ;;
  9363                           
  9364                           	psect	text59
  9365  002998                     __ptext59:
  9366                           	opt callstack 0
  9367  002998                     i2_WriteDataXLCD:
  9368                           	opt callstack 0
  9369  002998  FFFF               	dw	65535	; assembler added errata NOP
  9370                           
  9371                           ;incstack = 0
  9372                           ;i2WriteDataXLCD@data stored from wreg
  9373  00299A  6E01               	movwf	i2WriteDataXLCD@data,c
  9374                           
  9375                           ;lcd_pic16.c: 110: void WriteDataXLCD(char data);lcd_pic16.c: 111: {;lcd_pic16.c: 125:  
      +                                 TRISD &= 0x0f;
  9376  00299C  0E0F               	movlw	15
  9377  00299E  1695               	andwf	3989,f,c	;volatile
  9378                           
  9379                           ;lcd_pic16.c: 126:         PORTD &= 0x0f;
  9380  0029A0  0E0F               	movlw	15
  9381  0029A2  1683               	andwf	3971,f,c	;volatile
  9382                           
  9383                           ;lcd_pic16.c: 127:         PORTD |= data&0xf0;
  9384  0029A4  5001               	movf	i2WriteDataXLCD@data,w,c
  9385  0029A6  0BF0               	andlw	240
  9386  0029A8  1283               	iorwf	3971,f,c	;volatile
  9387                           
  9388                           ;lcd_pic16.c: 133:         PORTDbits.RD3 = 1;
  9389  0029AA  8683               	bsf	3971,3,c	;volatile
  9390                           
  9391                           ;lcd_pic16.c: 134:         PORTDbits.RD2 = 0;
  9392  0029AC  9483               	bcf	3971,2,c	;volatile
  9393                           
  9394                           ;lcd_pic16.c: 135:         DelayFor18TCY();
  9395  0029AE  EC81  F016         	call	i2_DelayFor18TCY	;wreg free
  9396                           
  9397                           ;lcd_pic16.c: 136:         PORTDbits.RD1 = 1;
  9398  0029B2  8283               	bsf	3971,1,c	;volatile
  9399                           
  9400                           ;lcd_pic16.c: 137:         DelayFor18TCY();
  9401  0029B4  EC81  F016         	call	i2_DelayFor18TCY	;wreg free
  9402                           
  9403                           ;lcd_pic16.c: 138:         PORTDbits.RD1 = 0;
  9404  0029B8  9283               	bcf	3971,1,c	;volatile
  9405                           
  9406                           ;lcd_pic16.c: 140:         PORTD &= 0x0f;
  9407  0029BA  0E0F               	movlw	15
  9408  0029BC  1683               	andwf	3971,f,c	;volatile
  9409                           
  9410                           ;lcd_pic16.c: 141:         PORTD |= ((data<<4)&0xf0);
  9411  0029BE  3801               	swapf	i2WriteDataXLCD@data,w,c
  9412  0029C0  0BF0               	andlw	240
  9413  0029C2  0BF0               	andlw	240
  9414  0029C4  1283               	iorwf	3971,f,c	;volatile
  9415                           
  9416                           ;lcd_pic16.c: 146:         DelayFor18TCY();
  9417  0029C6  EC81  F016         	call	i2_DelayFor18TCY	;wreg free
  9418                           
  9419                           ;lcd_pic16.c: 147:         PORTDbits.RD1 = 1;
  9420  0029CA  8283               	bsf	3971,1,c	;volatile
  9421                           
  9422                           ;lcd_pic16.c: 148:         DelayFor18TCY();
  9423  0029CC  EC81  F016         	call	i2_DelayFor18TCY	;wreg free
  9424                           
  9425                           ;lcd_pic16.c: 149:         PORTDbits.RD1 = 0;
  9426  0029D0  9283               	bcf	3971,1,c	;volatile
  9427                           
  9428                           ;lcd_pic16.c: 151:         TRISD |= 0xf0;
  9429  0029D2  0EF0               	movlw	240
  9430  0029D4  1295               	iorwf	3989,f,c	;volatile
  9431  0029D6  0012               	return		;funcret
  9432  0029D8  FFFF               	dw	65535	; errata NOP
  9433  0029DA                     __end_ofi2_WriteDataXLCD:
  9434                           	opt callstack 0
  9435                           
  9436 ;; *************** function i2_BusyXLCD *****************
  9437 ;; Defined at:
  9438 ;;		line 451 in file "lcd_pic16.c"
  9439 ;; Parameters:    Size  Location     Type
  9440 ;;		None
  9441 ;; Auto vars:     Size  Location     Type
  9442 ;;		None
  9443 ;; Return value:  Size  Location     Type
  9444 ;;                  1    wreg      unsigned char 
  9445 ;; Registers used:
  9446 ;;		wreg
  9447 ;; Tracked objects:
  9448 ;;		On entry : 0/0
  9449 ;;		On exit  : 0/0
  9450 ;;		Unchanged: 0/0
  9451 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9452 ;;      Params:         0       0       0       0       0       0       0
  9453 ;;      Locals:         0       0       0       0       0       0       0
  9454 ;;      Temps:          1       0       0       0       0       0       0
  9455 ;;      Totals:         1       0       0       0       0       0       0
  9456 ;;Total ram usage:        1 bytes
  9457 ;; Hardware stack levels used:    1
  9458 ;; This function calls:
  9459 ;;		Nothing
  9460 ;; This function is called by:
  9461 ;;		i2_putsXLCD
  9462 ;; This function uses a non-reentrant model
  9463 ;;
  9464                           
  9465                           	psect	text60
  9466  002CC4                     __ptext60:
  9467                           	opt callstack 0
  9468  002CC4                     i2_BusyXLCD:
  9469                           	opt callstack 0
  9470  002CC4  FFFF               	dw	65535	; assembler added errata NOP
  9471                           
  9472                           ;lcd_pic16.c: 504:         _delay((unsigned long)((5)*(12000000/4000.0)));
  9473                           
  9474                           ;incstack = 0
  9475  002CC6  0E0F               	movlw	15
  9476  002CC8  6E01               	movwf	??i2_BusyXLCD& (0+255),c
  9477  002CCA  0E9E               	movlw	158
  9478  002CCC                     i2u402_47:
  9479  002CCC  FFFF               	dw	65535	; errata NOP
  9480  002CCE  2EE8               	decfsz	wreg,f,c
  9481  002CD0  D7FD               	bra	i2u402_47
  9482  002CD2  2E01               	decfsz	??i2_BusyXLCD& (0+255),f,c
  9483  002CD4  D7FB               	bra	i2u402_47
  9484                           
  9485                           ;lcd_pic16.c: 505:         return 0;
  9486  002CD6  0E00               	movlw	0
  9487  002CD8  0012               	return		;funcret
  9488  002CDA  FFFF               	dw	65535	; errata NOP
  9489  002CDC                     __end_ofi2_BusyXLCD:
  9490                           	opt callstack 0
  9491                           
  9492 ;; *************** function i2___lwmod *****************
  9493 ;; Defined at:
  9494 ;;		line 7 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/lwmod.c"
  9495 ;; Parameters:    Size  Location     Type
  9496 ;;  dividend        2    0[COMRAM] unsigned int 
  9497 ;;  divisor         2    2[COMRAM] unsigned int 
  9498 ;; Auto vars:     Size  Location     Type
  9499 ;;  __lwmod         1    4[COMRAM] unsigned char 
  9500 ;; Return value:  Size  Location     Type
  9501 ;;                  2    0[COMRAM] unsigned int 
  9502 ;; Registers used:
  9503 ;;		wreg, status,2, status,0
  9504 ;; Tracked objects:
  9505 ;;		On entry : 0/0
  9506 ;;		On exit  : 0/0
  9507 ;;		Unchanged: 0/0
  9508 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9509 ;;      Params:         4       0       0       0       0       0       0
  9510 ;;      Locals:         1       0       0       0       0       0       0
  9511 ;;      Temps:          0       0       0       0       0       0       0
  9512 ;;      Totals:         5       0       0       0       0       0       0
  9513 ;;Total ram usage:        5 bytes
  9514 ;; Hardware stack levels used:    1
  9515 ;; This function calls:
  9516 ;;		Nothing
  9517 ;; This function is called by:
  9518 ;;		i2_updateLCD
  9519 ;; This function uses a non-reentrant model
  9520 ;;
  9521                           
  9522                           	psect	text61
  9523  0026CE                     __ptext61:
  9524                           	opt callstack 0
  9525  0026CE                     i2___lwmod:
  9526                           	opt callstack 0
  9527  0026CE  FFFF               	dw	65535	; assembler added errata NOP
  9528                           
  9529                           ;incstack = 0
  9530  0026D0  5003               	movf	i2___lwmod@divisor,w,c
  9531  0026D2  1004               	iorwf	i2___lwmod@divisor+1,w,c
  9532  0026D4  B4D8               	btfsc	status,2,c
  9533  0026D6  D01C               	goto	i2l1126
  9534  0026D8  0E01               	movlw	1
  9535  0026DA  6E05               	movwf	i2___lwmod@counter,c
  9536  0026DC  D005               	goto	i2l4012
  9537  0026DE                     i2l4010:
  9538  0026DE  FFFF               	dw	65535	; assembler added errata NOP
  9539  0026E0  90D8               	bcf	status,0,c
  9540  0026E2  3603               	rlcf	i2___lwmod@divisor,f,c
  9541  0026E4  3604               	rlcf	i2___lwmod@divisor+1,f,c
  9542  0026E6  2A05               	incf	i2___lwmod@counter,f,c
  9543  0026E8                     i2l4012:
  9544  0026E8  FFFF               	dw	65535	; assembler added errata NOP
  9545  0026EA  AE04               	btfss	i2___lwmod@divisor+1,7,c
  9546  0026EC  D7F8               	goto	i2l4010
  9547  0026EE                     i2u345_40:
  9548  0026EE  FFFF               	dw	65535	; assembler added errata NOP
  9549  0026F0  5003               	movf	i2___lwmod@divisor,w,c
  9550  0026F2  5C01               	subwf	i2___lwmod@dividend,w,c
  9551  0026F4  5004               	movf	i2___lwmod@divisor+1,w,c
  9552  0026F6  5802               	subwfb	i2___lwmod@dividend+1,w,c
  9553  0026F8  A0D8               	btfss	status,0,c
  9554  0026FA  D004               	goto	i2l4018
  9555  0026FC  5003               	movf	i2___lwmod@divisor,w,c
  9556  0026FE  5E01               	subwf	i2___lwmod@dividend,f,c
  9557  002700  5004               	movf	i2___lwmod@divisor+1,w,c
  9558  002702  5A02               	subwfb	i2___lwmod@dividend+1,f,c
  9559  002704                     i2l4018:
  9560  002704  FFFF               	dw	65535	; assembler added errata NOP
  9561  002706  90D8               	bcf	status,0,c
  9562  002708  3204               	rrcf	i2___lwmod@divisor+1,f,c
  9563  00270A  3203               	rrcf	i2___lwmod@divisor,f,c
  9564  00270C  2E05               	decfsz	i2___lwmod@counter,f,c
  9565  00270E  D7EF               	goto	i2u345_40
  9566  002710                     i2l1126:
  9567  002710  FFFF               	dw	65535	; assembler added errata NOP
  9568  002712  C001  F001         	movff	i2___lwmod@dividend,?i2___lwmod
  9569  002716  C002  F002         	movff	i2___lwmod@dividend+1,?i2___lwmod+1
  9570  00271A  0012               	return		;funcret
  9571  00271C  FFFF               	dw	65535	; errata NOP
  9572  00271E                     __end_ofi2___lwmod:
  9573                           	opt callstack 0
  9574                           
  9575 ;; *************** function i2___lwdiv *****************
  9576 ;; Defined at:
  9577 ;;		line 7 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/lwdiv.c"
  9578 ;; Parameters:    Size  Location     Type
  9579 ;;  dividend        2    0[COMRAM] unsigned int 
  9580 ;;  divisor         2    2[COMRAM] unsigned int 
  9581 ;; Auto vars:     Size  Location     Type
  9582 ;;  __lwdiv         2    4[COMRAM] unsigned int 
  9583 ;;  __lwdiv         1    6[COMRAM] unsigned char 
  9584 ;; Return value:  Size  Location     Type
  9585 ;;                  2    0[COMRAM] unsigned int 
  9586 ;; Registers used:
  9587 ;;		wreg, status,2, status,0
  9588 ;; Tracked objects:
  9589 ;;		On entry : 0/0
  9590 ;;		On exit  : 0/0
  9591 ;;		Unchanged: 0/0
  9592 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9593 ;;      Params:         4       0       0       0       0       0       0
  9594 ;;      Locals:         3       0       0       0       0       0       0
  9595 ;;      Temps:          0       0       0       0       0       0       0
  9596 ;;      Totals:         7       0       0       0       0       0       0
  9597 ;;Total ram usage:        7 bytes
  9598 ;; Hardware stack levels used:    1
  9599 ;; This function calls:
  9600 ;;		Nothing
  9601 ;; This function is called by:
  9602 ;;		i2_updateLCD
  9603 ;; This function uses a non-reentrant model
  9604 ;;
  9605                           
  9606                           	psect	text62
  9607  0024BE                     __ptext62:
  9608                           	opt callstack 0
  9609  0024BE                     i2___lwdiv:
  9610                           	opt callstack 0
  9611  0024BE  FFFF               	dw	65535	; assembler added errata NOP
  9612                           
  9613                           ;incstack = 0
  9614  0024C0  0E00               	movlw	0
  9615  0024C2  6E06               	movwf	i2___lwdiv@quotient+1,c
  9616  0024C4  0E00               	movlw	0
  9617  0024C6  6E05               	movwf	i2___lwdiv@quotient,c
  9618  0024C8  5003               	movf	i2___lwdiv@divisor,w,c
  9619  0024CA  1004               	iorwf	i2___lwdiv@divisor+1,w,c
  9620  0024CC  B4D8               	btfsc	status,2,c
  9621  0024CE  D020               	goto	i2l1116
  9622  0024D0  0E01               	movlw	1
  9623  0024D2  6E07               	movwf	i2___lwdiv@counter,c
  9624  0024D4  D005               	goto	i2l3992
  9625  0024D6                     i2l3990:
  9626  0024D6  FFFF               	dw	65535	; assembler added errata NOP
  9627  0024D8  90D8               	bcf	status,0,c
  9628  0024DA  3603               	rlcf	i2___lwdiv@divisor,f,c
  9629  0024DC  3604               	rlcf	i2___lwdiv@divisor+1,f,c
  9630  0024DE  2A07               	incf	i2___lwdiv@counter,f,c
  9631  0024E0                     i2l3992:
  9632  0024E0  FFFF               	dw	65535	; assembler added errata NOP
  9633  0024E2  AE04               	btfss	i2___lwdiv@divisor+1,7,c
  9634  0024E4  D7F8               	goto	i2l3990
  9635  0024E6                     i2u342_40:
  9636  0024E6  FFFF               	dw	65535	; assembler added errata NOP
  9637  0024E8  90D8               	bcf	status,0,c
  9638  0024EA  3605               	rlcf	i2___lwdiv@quotient,f,c
  9639  0024EC  3606               	rlcf	i2___lwdiv@quotient+1,f,c
  9640  0024EE  5003               	movf	i2___lwdiv@divisor,w,c
  9641  0024F0  5C01               	subwf	i2___lwdiv@dividend,w,c
  9642  0024F2  5004               	movf	i2___lwdiv@divisor+1,w,c
  9643  0024F4  5802               	subwfb	i2___lwdiv@dividend+1,w,c
  9644  0024F6  A0D8               	btfss	status,0,c
  9645  0024F8  D005               	goto	i2l4002
  9646  0024FA  5003               	movf	i2___lwdiv@divisor,w,c
  9647  0024FC  5E01               	subwf	i2___lwdiv@dividend,f,c
  9648  0024FE  5004               	movf	i2___lwdiv@divisor+1,w,c
  9649  002500  5A02               	subwfb	i2___lwdiv@dividend+1,f,c
  9650  002502  8005               	bsf	i2___lwdiv@quotient,0,c
  9651  002504                     i2l4002:
  9652  002504  FFFF               	dw	65535	; assembler added errata NOP
  9653  002506  90D8               	bcf	status,0,c
  9654  002508  3204               	rrcf	i2___lwdiv@divisor+1,f,c
  9655  00250A  3203               	rrcf	i2___lwdiv@divisor,f,c
  9656  00250C  2E07               	decfsz	i2___lwdiv@counter,f,c
  9657  00250E  D7EB               	goto	i2u342_40
  9658  002510                     i2l1116:
  9659  002510  FFFF               	dw	65535	; assembler added errata NOP
  9660  002512  C005  F001         	movff	i2___lwdiv@quotient,?i2___lwdiv
  9661  002516  C006  F002         	movff	i2___lwdiv@quotient+1,?i2___lwdiv+1
  9662  00251A  0012               	return		;funcret
  9663  00251C  FFFF               	dw	65535	; errata NOP
  9664  00251E                     __end_ofi2___lwdiv:
  9665                           	opt callstack 0
  9666                           
  9667 ;; *************** function i2_SetDDRamAddr *****************
  9668 ;; Defined at:
  9669 ;;		line 217 in file "lcd_pic16.c"
  9670 ;; Parameters:    Size  Location     Type
  9671 ;;  DDaddr          1    wreg     unsigned char 
  9672 ;; Auto vars:     Size  Location     Type
  9673 ;;  DDaddr          1    0[COMRAM] unsigned char 
  9674 ;; Return value:  Size  Location     Type
  9675 ;;                  1    wreg      void 
  9676 ;; Registers used:
  9677 ;;		wreg, status,2, status,0, cstack
  9678 ;; Tracked objects:
  9679 ;;		On entry : 0/0
  9680 ;;		On exit  : 0/0
  9681 ;;		Unchanged: 0/0
  9682 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9683 ;;      Params:         0       0       0       0       0       0       0
  9684 ;;      Locals:         1       0       0       0       0       0       0
  9685 ;;      Temps:          0       0       0       0       0       0       0
  9686 ;;      Totals:         1       0       0       0       0       0       0
  9687 ;;Total ram usage:        1 bytes
  9688 ;; Hardware stack levels used:    1
  9689 ;; Hardware stack levels required when called:    1
  9690 ;; This function calls:
  9691 ;;		i2_DelayFor18TCY
  9692 ;; This function is called by:
  9693 ;;		i2_updateLCD
  9694 ;; This function uses a non-reentrant model
  9695 ;;
  9696                           
  9697                           	psect	text63
  9698  002912                     __ptext63:
  9699                           	opt callstack 0
  9700  002912                     i2_SetDDRamAddr:
  9701                           	opt callstack 0
  9702  002912  FFFF               	dw	65535	; assembler added errata NOP
  9703                           
  9704                           ;incstack = 0
  9705                           ;i2SetDDRamAddr@DDaddr stored from wreg
  9706  002914  6E01               	movwf	i2SetDDRamAddr@DDaddr,c
  9707                           
  9708                           ;lcd_pic16.c: 217: void SetDDRamAddr(unsigned char DDaddr);lcd_pic16.c: 218: {;lcd_pic16
      +                          .c: 232:         TRISD &= 0x0f;
  9709  002916  0E0F               	movlw	15
  9710  002918  1695               	andwf	3989,f,c	;volatile
  9711                           
  9712                           ;lcd_pic16.c: 233:         PORTD &= 0x0f;
  9713  00291A  0E0F               	movlw	15
  9714  00291C  1683               	andwf	3971,f,c	;volatile
  9715                           
  9716                           ;lcd_pic16.c: 234:         PORTD |= ((DDaddr | 0b10000000) & 0xf0);
  9717  00291E  5001               	movf	i2SetDDRamAddr@DDaddr,w,c
  9718  002920  0980               	iorlw	128
  9719  002922  0BF0               	andlw	240
  9720  002924  1283               	iorwf	3971,f,c	;volatile
  9721                           
  9722                           ;lcd_pic16.c: 240:         PORTDbits.RD2 = 0;
  9723  002926  9483               	bcf	3971,2,c	;volatile
  9724                           
  9725                           ;lcd_pic16.c: 241:         PORTDbits.RD3 = 0;
  9726  002928  9683               	bcf	3971,3,c	;volatile
  9727                           
  9728                           ;lcd_pic16.c: 242:         DelayFor18TCY();
  9729  00292A  EC81  F016         	call	i2_DelayFor18TCY	;wreg free
  9730                           
  9731                           ;lcd_pic16.c: 243:         PORTDbits.RD1 = 1;
  9732  00292E  8283               	bsf	3971,1,c	;volatile
  9733                           
  9734                           ;lcd_pic16.c: 244:         DelayFor18TCY();
  9735  002930  EC81  F016         	call	i2_DelayFor18TCY	;wreg free
  9736                           
  9737                           ;lcd_pic16.c: 245:         PORTDbits.RD1 = 0;
  9738  002934  9283               	bcf	3971,1,c	;volatile
  9739                           
  9740                           ;lcd_pic16.c: 247:         PORTD &= 0x0f;
  9741  002936  0E0F               	movlw	15
  9742  002938  1683               	andwf	3971,f,c	;volatile
  9743                           
  9744                           ;lcd_pic16.c: 248:         PORTD |= ((DDaddr<<4)&0xf0);
  9745  00293A  3801               	swapf	i2SetDDRamAddr@DDaddr,w,c
  9746  00293C  0BF0               	andlw	240
  9747  00293E  0BF0               	andlw	240
  9748  002940  1283               	iorwf	3971,f,c	;volatile
  9749                           
  9750                           ;lcd_pic16.c: 253:         DelayFor18TCY();
  9751  002942  EC81  F016         	call	i2_DelayFor18TCY	;wreg free
  9752                           
  9753                           ;lcd_pic16.c: 254:         PORTDbits.RD1 = 1;
  9754  002946  8283               	bsf	3971,1,c	;volatile
  9755                           
  9756                           ;lcd_pic16.c: 255:         DelayFor18TCY();
  9757  002948  EC81  F016         	call	i2_DelayFor18TCY	;wreg free
  9758                           
  9759                           ;lcd_pic16.c: 256:         PORTDbits.RD1 = 0;
  9760  00294C  9283               	bcf	3971,1,c	;volatile
  9761                           
  9762                           ;lcd_pic16.c: 258:         TRISD |= 0xf0;
  9763  00294E  0EF0               	movlw	240
  9764  002950  1295               	iorwf	3989,f,c	;volatile
  9765  002952  0012               	return		;funcret
  9766  002954  FFFF               	dw	65535	; errata NOP
  9767  002956                     __end_ofi2_SetDDRamAddr:
  9768                           	opt callstack 0
  9769                           
  9770 ;; *************** function i2_DelayFor18TCY *****************
  9771 ;; Defined at:
  9772 ;;		line 22 in file "lcd_pic16.c"
  9773 ;; Parameters:    Size  Location     Type
  9774 ;;		None
  9775 ;; Auto vars:     Size  Location     Type
  9776 ;;		None
  9777 ;; Return value:  Size  Location     Type
  9778 ;;                  1    wreg      void 
  9779 ;; Registers used:
  9780 ;;		wreg
  9781 ;; Tracked objects:
  9782 ;;		On entry : 0/0
  9783 ;;		On exit  : 0/0
  9784 ;;		Unchanged: 0/0
  9785 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9786 ;;      Params:         0       0       0       0       0       0       0
  9787 ;;      Locals:         0       0       0       0       0       0       0
  9788 ;;      Temps:          0       0       0       0       0       0       0
  9789 ;;      Totals:         0       0       0       0       0       0       0
  9790 ;;Total ram usage:        0 bytes
  9791 ;; Hardware stack levels used:    1
  9792 ;; This function calls:
  9793 ;;		Nothing
  9794 ;; This function is called by:
  9795 ;;		i2_WriteDataXLCD
  9796 ;;		i2_SetDDRamAddr
  9797 ;; This function uses a non-reentrant model
  9798 ;;
  9799                           
  9800                           	psect	text64
  9801  002D02                     __ptext64:
  9802                           	opt callstack 0
  9803  002D02                     i2_DelayFor18TCY:
  9804                           	opt callstack 0
  9805  002D02  FFFF               	dw	65535	; assembler added errata NOP
  9806                           
  9807                           ;lcd_pic16.c: 24:    _delay((unsigned long)((18)*(12000000/4000000.0)));
  9808                           
  9809                           ;incstack = 0
  9810  002D04  0E0D               	movlw	13
  9811  002D06                     i2u403_47:
  9812  002D06  FFFF               	dw	65535	; errata NOP
  9813  002D08  2EE8               	decfsz	wreg,f,c
  9814  002D0A  D7FD               	bra	i2u403_47
  9815  002D0C  D000               	nop2	
  9816  002D0E  0012               	return		;funcret
  9817  002D10  FFFF               	dw	65535	; errata NOP
  9818  002D12                     __end_ofi2_DelayFor18TCY:
  9819                           	opt callstack 0
  9820                           
  9821 ;; *************** function _time *****************
  9822 ;; Defined at:
  9823 ;;		line 101 in file "main.c"
  9824 ;; Parameters:    Size  Location     Type
  9825 ;;		None
  9826 ;; Auto vars:     Size  Location     Type
  9827 ;;		None
  9828 ;; Return value:  Size  Location     Type
  9829 ;;                  1    wreg      void 
  9830 ;; Registers used:
  9831 ;;		wreg, status,2, status,0, cstack
  9832 ;; Tracked objects:
  9833 ;;		On entry : 0/0
  9834 ;;		On exit  : 0/0
  9835 ;;		Unchanged: 0/0
  9836 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9837 ;;      Params:         0       0       0       0       0       0       0
  9838 ;;      Locals:         0       0       0       0       0       0       0
  9839 ;;      Temps:          0       0       0       0       0       0       0
  9840 ;;      Totals:         0       0       0       0       0       0       0
  9841 ;;Total ram usage:        0 bytes
  9842 ;; Hardware stack levels used:    1
  9843 ;; Hardware stack levels required when called:    2
  9844 ;; This function calls:
  9845 ;;		i2_setData
  9846 ;; This function is called by:
  9847 ;;		_inter
  9848 ;; This function uses a non-reentrant model
  9849 ;;
  9850                           
  9851                           	psect	text65
  9852  002254                     __ptext65:
  9853                           	opt callstack 0
  9854  002254                     _time:
  9855                           	opt callstack 0
  9856  002254  FFFF               	dw	65535	; assembler added errata NOP
  9857                           
  9858                           ;main.c: 102:     hundredMiliSeconds++;
  9859                           
  9860                           ;incstack = 0
  9861  002256  2A7A               	incf	_hundredMiliSeconds,f,c
  9862                           
  9863                           ;main.c: 103:     if(hundredMiliSeconds >= 10){
  9864  002258  0E09               	movlw	9
  9865  00225A  647A               	cpfsgt	_hundredMiliSeconds,c
  9866  00225C  D02F               	goto	i2l229
  9867                           
  9868                           ;main.c: 104:         hundredMiliSeconds = 0;
  9869  00225E  0E00               	movlw	0
  9870  002260  6E7A               	movwf	_hundredMiliSeconds,c
  9871                           
  9872                           ;main.c: 105:         seconds++;
  9873  002262  2A7B               	incf	_seconds,f,c
  9874                           
  9875                           ;main.c: 106:         if(seconds >= 60){
  9876  002264  0E3B               	movlw	59
  9877  002266  647B               	cpfsgt	_seconds,c
  9878  002268  D029               	goto	i2l229
  9879                           
  9880                           ;main.c: 107:             seconds = 0;
  9881  00226A  0E00               	movlw	0
  9882  00226C  6E7B               	movwf	_seconds,c
  9883                           
  9884                           ;main.c: 108:             minutes++;
  9885  00226E  0100               	movlb	0	; () banked
  9886  002270  2BFB               	incf	_minutes& (0+255),f,b
  9887                           
  9888                           ; BSR set to: 0
  9889                           ;main.c: 109:             setData(0);
  9890  002272  0E00               	movlw	0
  9891  002274  ECF1  F010         	call	i2_setData
  9892                           
  9893                           ;main.c: 110:             if(minutes >= 60){
  9894  002278  0E3B               	movlw	59
  9895  00227A  0100               	movlb	0	; () banked
  9896  00227C  65FB               	cpfsgt	_minutes& (0+255),b
  9897  00227E  D01E               	goto	i2l229
  9898                           
  9899                           ; BSR set to: 0
  9900                           ;main.c: 111:                 minutes = 0;
  9901  002280  0E00               	movlw	0
  9902  002282  6FFB               	movwf	_minutes& (0+255),b
  9903                           
  9904                           ; BSR set to: 0
  9905                           ;main.c: 112:                 hours++;
  9906  002284  2BFC               	incf	_hours& (0+255),f,b
  9907                           
  9908                           ; BSR set to: 0
  9909                           ;main.c: 113:                 if(hours >= 24){
  9910  002286  0E17               	movlw	23
  9911  002288  65FC               	cpfsgt	_hours& (0+255),b
  9912  00228A  D018               	goto	i2l229
  9913                           
  9914                           ; BSR set to: 0
  9915                           ;main.c: 114:                     hours = 0;
  9916  00228C  0E00               	movlw	0
  9917  00228E  6FFC               	movwf	_hours& (0+255),b
  9918                           
  9919                           ; BSR set to: 0
  9920                           ;main.c: 115:                     days++;
  9921  002290  2BFD               	incf	_days& (0+255),f,b
  9922                           
  9923                           ; BSR set to: 0
  9924                           ;main.c: 116:                     if(days >= 30){
  9925  002292  0E1D               	movlw	29
  9926  002294  65FD               	cpfsgt	_days& (0+255),b
  9927  002296  D003               	goto	i2l4182
  9928                           
  9929                           ; BSR set to: 0
  9930                           ;main.c: 117:                         days = 0;
  9931  002298  0E00               	movlw	0
  9932  00229A  6FFD               	movwf	_days& (0+255),b
  9933                           
  9934                           ; BSR set to: 0
  9935                           ;main.c: 118:                         months++;
  9936  00229C  2BFE               	incf	_months& (0+255),f,b
  9937  00229E                     i2l4182:
  9938  00229E  FFFF               	dw	65535	; assembler added errata NOP
  9939                           
  9940                           ; BSR set to: 0
  9941  0022A0  0E0D               	movlw	13
  9942  0022A2  19FD               	xorwf	_days& (0+255),w,b
  9943  0022A4  A4D8               	btfss	status,2,c
  9944  0022A6  D006               	goto	i2l4188
  9945                           
  9946                           ; BSR set to: 0
  9947  0022A8  0E06               	movlw	6
  9948  0022AA  19FE               	xorwf	_months& (0+255),w,b
  9949  0022AC  A4D8               	btfss	status,2,c
  9950  0022AE  D002               	goto	i2l4188
  9951                           
  9952                           ; BSR set to: 0
  9953  0022B0  0E00               	movlw	0
  9954  0022B2  D002               	goto	L8
  9955  0022B4                     i2l4188:
  9956  0022B4  FFFF               	dw	65535	; assembler added errata NOP
  9957                           
  9958                           ; BSR set to: 0
  9959  0022B6  0E01               	movlw	1
  9960  0022B8                     L8:
  9961  0022B8  FFFF               	dw	65535	; assembler added errata NOP
  9962  0022BA  6FFA               	movwf	_functionalStat& (0+255),b
  9963  0022BC                     i2l229:
  9964  0022BC  FFFF               	dw	65535	; assembler added errata NOP
  9965  0022BE  0012               	return		;funcret
  9966  0022C0  FFFF               	dw	65535	; errata NOP
  9967  0022C2                     __end_of_time:
  9968                           	opt callstack 0
  9969                           
  9970 ;; *************** function i2_setData *****************
  9971 ;; Defined at:
  9972 ;;		line 46 in file "eeprom.c"
  9973 ;; Parameters:    Size  Location     Type
  9974 ;;  full            1    wreg     unsigned char 
  9975 ;; Auto vars:     Size  Location     Type
  9976 ;;  full            1    4[COMRAM] unsigned char 
  9977 ;;  setData         1    3[COMRAM] unsigned char 
  9978 ;;  setData         1    2[COMRAM] unsigned char 
  9979 ;; Return value:  Size  Location     Type
  9980 ;;                  1    wreg      void 
  9981 ;; Registers used:
  9982 ;;		wreg, status,2, cstack
  9983 ;; Tracked objects:
  9984 ;;		On entry : 0/0
  9985 ;;		On exit  : 0/0
  9986 ;;		Unchanged: 0/0
  9987 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9988 ;;      Params:         0       0       0       0       0       0       0
  9989 ;;      Locals:         3       0       0       0       0       0       0
  9990 ;;      Temps:          0       0       0       0       0       0       0
  9991 ;;      Totals:         3       0       0       0       0       0       0
  9992 ;;Total ram usage:        3 bytes
  9993 ;; Hardware stack levels used:    1
  9994 ;; Hardware stack levels required when called:    1
  9995 ;; This function calls:
  9996 ;;		i2_writeEEPROM
  9997 ;; This function is called by:
  9998 ;;		_time
  9999 ;; This function uses a non-reentrant model
 10000 ;;
 10001                           
 10002                           	psect	text66
 10003  0021E2                     __ptext66:
 10004                           	opt callstack 0
 10005  0021E2                     i2_setData:
 10006                           	opt callstack 0
 10007  0021E2  FFFF               	dw	65535	; assembler added errata NOP
 10008                           
 10009                           ;incstack = 0
 10010                           ;i2setData@full stored from wreg
 10011  0021E4  6E05               	movwf	i2setData@full,c
 10012                           
 10013                           ;eeprom.c: 47:     unsigned char data0 = frequency & 0x00FF;
 10014  0021E6  C0F8  F003         	movff	_frequency,i2setData@data0
 10015                           
 10016                           ;eeprom.c: 48:     unsigned char data1 = frequency >> 8;
 10017  0021EA  0100               	movlb	0	; () banked
 10018  0021EC  51F9               	movf	(_frequency+1)& (0+255),w,b
 10019  0021EE  6E04               	movwf	i2setData@data1,c
 10020                           
 10021                           ; BSR set to: 0
 10022                           ;eeprom.c: 49:     if(full)writeEEPROM(data0 ,0);
 10023  0021F0  5005               	movf	i2setData@full,w,c
 10024  0021F2  B4D8               	btfsc	status,2,c
 10025  0021F4  D005               	goto	i2l3944
 10026                           
 10027                           ; BSR set to: 0
 10028  0021F6  0E00               	movlw	0
 10029  0021F8  6E01               	movwf	i2writeEEPROM@address,c
 10030  0021FA  5003               	movf	i2setData@data0,w,c
 10031  0021FC  ECFD  F015         	call	i2_writeEEPROM
 10032  002200                     i2l3944:
 10033  002200  FFFF               	dw	65535	; assembler added errata NOP
 10034                           
 10035                           ;eeprom.c: 50:     if(full)writeEEPROM(data1 ,1);
 10036  002202  5005               	movf	i2setData@full,w,c
 10037  002204  B4D8               	btfsc	status,2,c
 10038  002206  D005               	goto	i2l72
 10039  002208  0E01               	movlw	1
 10040  00220A  6E01               	movwf	i2writeEEPROM@address,c
 10041  00220C  5004               	movf	i2setData@data1,w,c
 10042  00220E  ECFD  F015         	call	i2_writeEEPROM
 10043  002212                     i2l72:
 10044  002212  FFFF               	dw	65535	; assembler added errata NOP
 10045                           
 10046                           ;eeprom.c: 51:     writeEEPROM(months ,2);
 10047  002214  0E02               	movlw	2
 10048  002216  6E01               	movwf	i2writeEEPROM@address,c
 10049  002218  0100               	movlb	0	; () banked
 10050  00221A  51FE               	movf	_months& (0+255),w,b
 10051  00221C  ECFD  F015         	call	i2_writeEEPROM
 10052                           
 10053                           ;eeprom.c: 52:     writeEEPROM(days ,3);
 10054  002220  0E03               	movlw	3
 10055  002222  6E01               	movwf	i2writeEEPROM@address,c
 10056  002224  0100               	movlb	0	; () banked
 10057  002226  51FD               	movf	_days& (0+255),w,b
 10058  002228  ECFD  F015         	call	i2_writeEEPROM
 10059                           
 10060                           ;eeprom.c: 53:     writeEEPROM(hours ,4);
 10061  00222C  0E04               	movlw	4
 10062  00222E  6E01               	movwf	i2writeEEPROM@address,c
 10063  002230  0100               	movlb	0	; () banked
 10064  002232  51FC               	movf	_hours& (0+255),w,b
 10065  002234  ECFD  F015         	call	i2_writeEEPROM
 10066                           
 10067                           ;eeprom.c: 54:     writeEEPROM(minutes ,5);
 10068  002238  0E05               	movlw	5
 10069  00223A  6E01               	movwf	i2writeEEPROM@address,c
 10070  00223C  0100               	movlb	0	; () banked
 10071  00223E  51FB               	movf	_minutes& (0+255),w,b
 10072  002240  ECFD  F015         	call	i2_writeEEPROM
 10073                           
 10074                           ;eeprom.c: 55:     writeEEPROM(functionalStat ,6);
 10075  002244  0E06               	movlw	6
 10076  002246  6E01               	movwf	i2writeEEPROM@address,c
 10077  002248  0100               	movlb	0	; () banked
 10078  00224A  51FA               	movf	_functionalStat& (0+255),w,b
 10079  00224C  ECFD  F015         	call	i2_writeEEPROM
 10080  002250  0012               	return		;funcret
 10081  002252  FFFF               	dw	65535	; errata NOP
 10082  002254                     __end_ofi2_setData:
 10083                           	opt callstack 0
 10084                           
 10085 ;; *************** function i2_writeEEPROM *****************
 10086 ;; Defined at:
 10087 ;;		line 15 in file "eeprom.c"
 10088 ;; Parameters:    Size  Location     Type
 10089 ;;  data            1    wreg     unsigned char 
 10090 ;;  address         1    0[COMRAM] unsigned char 
 10091 ;; Auto vars:     Size  Location     Type
 10092 ;;  data            1    1[COMRAM] unsigned char 
 10093 ;; Return value:  Size  Location     Type
 10094 ;;                  1    wreg      void 
 10095 ;; Registers used:
 10096 ;;		wreg, status,2
 10097 ;; Tracked objects:
 10098 ;;		On entry : 0/0
 10099 ;;		On exit  : 0/0
 10100 ;;		Unchanged: 0/0
 10101 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10102 ;;      Params:         1       0       0       0       0       0       0
 10103 ;;      Locals:         1       0       0       0       0       0       0
 10104 ;;      Temps:          0       0       0       0       0       0       0
 10105 ;;      Totals:         2       0       0       0       0       0       0
 10106 ;;Total ram usage:        2 bytes
 10107 ;; Hardware stack levels used:    1
 10108 ;; This function calls:
 10109 ;;		Nothing
 10110 ;; This function is called by:
 10111 ;;		i2_setData
 10112 ;; This function uses a non-reentrant model
 10113 ;;
 10114                           
 10115                           	psect	text67
 10116  002BFA                     __ptext67:
 10117                           	opt callstack 0
 10118  002BFA                     i2_writeEEPROM:
 10119                           	opt callstack 0
 10120  002BFA  FFFF               	dw	65535	; assembler added errata NOP
 10121                           
 10122                           ;incstack = 0
 10123                           ;i2writeEEPROM@data stored from wreg
 10124  002BFC  6E02               	movwf	i2writeEEPROM@data,c
 10125                           
 10126                           ;eeprom.c: 16:     EEADR = address;
 10127  002BFE  C001  FFA9         	movff	i2writeEEPROM@address,4009	;volatile
 10128                           
 10129                           ;eeprom.c: 17:     EEDATA = data;
 10130  002C02  C002  FFA8         	movff	i2writeEEPROM@data,4008	;volatile
 10131                           
 10132                           ;eeprom.c: 19:     EECON1bits.EEPGD = 0;
 10133  002C06  9EA6               	bcf	4006,7,c	;volsfr
 10134                           
 10135                           ;eeprom.c: 20:     EECON1bits.CFGS = 0;
 10136  002C08  9CA6               	bcf	4006,6,c	;volsfr
 10137                           
 10138                           ;eeprom.c: 21:     EECON1bits.WREN = 1;
 10139  002C0A  84A6               	bsf	4006,2,c	;volsfr
 10140                           
 10141                           ;eeprom.c: 23:     INTCONbits.GIE = 0;
 10142  002C0C  9EF2               	bcf	4082,7,c	;volatile
 10143                           
 10144                           ;eeprom.c: 24:     EECON2 = 0x55;
 10145  002C0E  0E55               	movlw	85
 10146  002C10  6EA7               	movwf	4007,c	;volsfr
 10147                           
 10148                           ;eeprom.c: 25:     EECON2 = 0xAA;
 10149  002C12  0EAA               	movlw	170
 10150  002C14  6EA7               	movwf	4007,c	;volsfr
 10151                           
 10152                           ;eeprom.c: 26:     EECON1bits.WR = 1;
 10153  002C16  82A6               	bsf	4006,1,c	;volsfr
 10154                           
 10155                           ;eeprom.c: 27:     INTCONbits.GIE = 1;
 10156  002C18  8EF2               	bsf	4082,7,c	;volatile
 10157  002C1A                     i2l62:
 10158  002C1A  FFFF               	dw	65535	; assembler added errata NOP
 10159  002C1C  B8A1               	btfsc	4001,4,c	;volatile
 10160  002C1E  0012               	return		;funcret
 10161  002C20  FFFF               	dw	65535	; assembler added errata NOP
 10162  002C22  D7FB               	goto	i2l62
 10163  002C24  FFFF               	dw	65535	; errata NOP
 10164  002C26                     __end_ofi2_writeEEPROM:
 10165                           	opt callstack 0
 10166                           
 10167                           	psect	rparam
 10168  0000                     
 10169                           	psect	temp
 10170  00007F                     btemp:
 10171                           	opt callstack 0
 10172  00007F                     	ds	1
 10173  0000                     int$flags	set	btemp
 10174  0000                     wtemp8	set	btemp+1
 10175  0000                     ttemp5	set	btemp+1
 10176  0000                     ttemp6	set	btemp+4
 10177  0000                     ttemp7	set	btemp+8
 10178                           tosu	equ	0xFFF
 10179                           tosh	equ	0xFFE
 10180                           tosl	equ	0xFFD
 10181                           stkptr	equ	0xFFC
 10182                           pclatu	equ	0xFFB
 10183                           pclath	equ	0xFFA
 10184                           pcl	equ	0xFF9
 10185                           tblptru	equ	0xFF8
 10186                           tblptrh	equ	0xFF7
 10187                           tblptrl	equ	0xFF6
 10188                           tablat	equ	0xFF5
 10189                           prodh	equ	0xFF4
 10190                           prodl	equ	0xFF3
 10191                           indf0	equ	0xFEF
 10192                           postinc0	equ	0xFEE
 10193                           postdec0	equ	0xFED
 10194                           preinc0	equ	0xFEC
 10195                           plusw0	equ	0xFEB
 10196                           fsr0h	equ	0xFEA
 10197                           fsr0l	equ	0xFE9
 10198                           wreg	equ	0xFE8
 10199                           indf1	equ	0xFE7
 10200                           postinc1	equ	0xFE6
 10201                           postdec1	equ	0xFE5
 10202                           preinc1	equ	0xFE4
 10203                           plusw1	equ	0xFE3
 10204                           fsr1h	equ	0xFE2
 10205                           fsr1l	equ	0xFE1
 10206                           bsr	equ	0xFE0
 10207                           indf2	equ	0xFDF
 10208                           postinc2	equ	0xFDE
 10209                           postdec2	equ	0xFDD
 10210                           preinc2	equ	0xFDC
 10211                           plusw2	equ	0xFDB
 10212                           fsr2h	equ	0xFDA
 10213                           fsr2l	equ	0xFD9
 10214                           status	equ	0xFD8


Data Sizes:
    Strings     86
    Constant    4
    Data        9
    BSS         82
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126    121     126
    BANK0           128    114     128
    BANK1           256      0      72
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    i2sprintf@f.buffer	PTR unsigned char  size(2) Largest target is 0
		 -> lineTwo(BANK1[17]), lineOne(BANK1[17]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 18
		 -> STR_5(CODE[18]), STR_4(CODE[17]), STR_3(CODE[17]), STR_2(CODE[17]), 
		 -> STR_1(CODE[17]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 17
		 -> lineTwo(BANK1[17]), lineOne(BANK1[17]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 17
		 -> lineTwo(BANK1[17]), lineOne(BANK1[17]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    S1433_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 17
		 -> lineTwo(BANK1[17]), lineOne(BANK1[17]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 17
		 -> lineTwo(BANK1[17]), lineOne(BANK1[17]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 18
		 -> STR_5(CODE[18]), STR_4(CODE[17]), STR_3(CODE[17]), STR_2(CODE[17]), 
		 -> STR_1(CODE[17]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 18
		 -> STR_5(CODE[18]), STR_4(CODE[17]), STR_3(CODE[17]), STR_2(CODE[17]), 
		 -> STR_1(CODE[17]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 18
		 -> STR_5(CODE[18]), STR_4(CODE[17]), STR_3(CODE[17]), STR_2(CODE[17]), 
		 -> STR_1(CODE[17]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    putsXLCD@buffer	PTR unsigned char  size(2) Largest target is 17
		 -> lineTwo(BANK1[17]), lineOne(BANK1[17]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _inter in COMRAM

    _inter->i2_updateLCD
    i2_updateLCD->i2_sprintf
    i2_sprintf->i2_vfprintf
    i2_vfprintf->i2_vfpfcnvrt
    i2_vfpfcnvrt->i2_dtoa
    i2_dtoa->i2_pad
    i2_pad->i2_fputs
    i2_fputs->i2_fputc
    i2_abs->i2___aomod
    i2_atoi->i2_isspace
    i2_putsXLCD->i2_BusyXLCD
    i2_putsXLCD->i2_WriteDataXLCD
    _time->i2_setData
    i2_setData->i2_writeEEPROM

Critical Paths under _main in BANK0

    _main->_setFrequency
    _main->_updateLCD
    _updateLCD->_sprintf
    _putsXLCD->_BusyXLCD
    _putsXLCD->_WriteDataXLCD
    _setFrequency->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _atoi->_isspace
    _setData->_writeEEPROM
    _beep->___wmul
    _getData->_readEEPROM
    _config->_setTransStat
    _setTransStat->_writeFrequency
    _writeFrequency->_codFreq
    _initLCD->_OpenXLCD
    _SendCMDLCD->_BusyXLCD
    _SendCMDLCD->_WriteCmdXLCD
    _OpenXLCD->_BusyXLCD
    _OpenXLCD->_DelayPORXLCD
    _OpenXLCD->_SetDDRamAddr
    _OpenXLCD->_WriteCmdXLCD

Critical Paths under _inter in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _inter in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _inter in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _inter in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _inter in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _inter in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0   34252
                                            111 BANK0      3     3      0
                       _SetDDRamAddr
                               _beep
                             _config
                            _getData
                           _putsXLCD
                       _setFrequency
                       _setTransStat
                            _sprintf
                          _updateLCD
                     _writeFrequency
 ---------------------------------------------------------------------------------
 (1) _updateLCD                                            2     2      0   10027
                                            109 BANK0      2     2      0
                       _SetDDRamAddr
                            ___lwdiv
                            ___lwmod
                           _putsXLCD
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _putsXLCD                                             2     0      2     393
                                              1 BANK0      2     0      2
                           _BusyXLCD
                      _WriteDataXLCD
 ---------------------------------------------------------------------------------
 (3) _WriteDataXLCD                                        1     1      0      44
                                              0 BANK0      1     1      0
                      _DelayFor18TCY
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4     311
                                              0 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     314
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (1) _setFrequency                                         2     2      0   11248
                                            109 BANK0      2     2      0
                               _beep
                            _setData
                            _sprintf
                     _writeFrequency
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             18    10      8    8919
                                             91 BANK0     18    10      8
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     2      6    7947
                                             83 BANK0      8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           46    40      6    7562
                                             63 BANK0     20    14      6
                               _atoi
                               _dtoa
                              _fputc
                            _isdigit
 ---------------------------------------------------------------------------------
 (5) _dtoa                                                36    26     10    4358
                                             27 BANK0     36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                 11     5      6    2709
                                             16 BANK0     11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _strlen                                               4     2      2     166
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (7) _fputs                                                7     3      4    1235
                                              9 BANK0      7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                9     5      4     834
                                              0 BANK0      9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2     142
                                             18 BANK0      4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (6) ___aomod                                             18     2     16     448
                                              0 BANK0     18     2     16
 ---------------------------------------------------------------------------------
 (6) ___aodiv                                             26    10     16     452
                                              0 BANK0     26    10     16
 ---------------------------------------------------------------------------------
 (5) _atoi                                                15    13      2    1396
                                              7 BANK0     15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (6) _isspace                                              7     5      2     207
                                              0 BANK0      7     5      2
 ---------------------------------------------------------------------------------
 (5) _isdigit                                              6     4      2     237
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (2) _setData                                              3     3      0     666
                                              2 BANK0      3     3      0
                        _writeEEPROM
 ---------------------------------------------------------------------------------
 (3) _writeEEPROM                                          2     1      1     576
                                              0 BANK0      2     1      1
 ---------------------------------------------------------------------------------
 (2) _beep                                                 2     0      2    1079
                                              6 BANK0      2     0      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (6) ___wmul                                               6     2      4     555
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) _getData                                              4     4      0      68
                                              1 BANK0      4     4      0
                         _readEEPROM
 ---------------------------------------------------------------------------------
 (2) _readEEPROM                                           1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _config                                               0     0      0    1010
                            _initLCD
                       _setTransStat
 ---------------------------------------------------------------------------------
 (1) _setTransStat                                         3     1      2     834
                                             12 BANK0      3     1      2
                     _writeFrequency
 ---------------------------------------------------------------------------------
 (1) _writeFrequency                                      10     8      2     584
                                              2 BANK0     10     8      2
                            _codFreq
 ---------------------------------------------------------------------------------
 (2) _codFreq                                              2     0      2     144
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _initLCD                                              2     2      0     176
                                              3 BANK0      2     2      0
                           _OpenXLCD
                         _SendCMDLCD
 ---------------------------------------------------------------------------------
 (3) _SendCMDLCD                                           1     1      0      66
                                              1 BANK0      1     1      0
                           _BusyXLCD
                       _WriteCmdXLCD
 ---------------------------------------------------------------------------------
 (3) _OpenXLCD                                             2     2      0     110
                                              1 BANK0      2     2      0
                           _BusyXLCD
                       _DelayPORXLCD
                       _SetDDRamAddr
                       _WriteCmdXLCD
 ---------------------------------------------------------------------------------
 (4) _WriteCmdXLCD                                         1     1      0      44
                                              0 BANK0      1     1      0
                      _DelayFor18TCY
 ---------------------------------------------------------------------------------
 (2) _SetDDRamAddr                                         1     1      0      44
                                              0 BANK0      1     1      0
                      _DelayFor18TCY
 ---------------------------------------------------------------------------------
 (4) _DelayFor18TCY                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _DelayPORXLCD                                         1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _BusyXLCD                                             1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _inter                                              10    10      0    6066
                                            111 COMRAM    10    10      0
                               _time
                        i2_updateLCD
 ---------------------------------------------------------------------------------
 (11) i2_updateLCD                                         2     2      0    5750
                                            109 COMRAM     2     2      0
                     i2_SetDDRamAddr
                          i2___lwdiv
                          i2___lwmod
                         i2_putsXLCD
                          i2_sprintf
 ---------------------------------------------------------------------------------
 (12) i2_sprintf                                          18    10      8    5094
                                             91 COMRAM    18    10      8
                         i2_vfprintf
 ---------------------------------------------------------------------------------
 (13) i2_vfprintf                                          8     2      6    4841
                                             83 COMRAM     8     2      6
                        i2_vfpfcnvrt
 ---------------------------------------------------------------------------------
 (14) i2_vfpfcnvrt                                        46    40      6    4629
                                             63 COMRAM    20    14      6
                             i2_atoi
                             i2_dtoa
                            i2_fputc
                          i2_isdigit
 ---------------------------------------------------------------------------------
 (15) i2_dtoa                                             36    26     10    2808
                                             27 COMRAM    36    26     10
                          i2___aodiv
                          i2___aomod
                              i2_abs
                              i2_pad
 ---------------------------------------------------------------------------------
 (16) i2_pad                                              11     5      6    1509
                                             16 COMRAM    11     5      6
                            i2_fputc
                            i2_fputs
                           i2_strlen
 ---------------------------------------------------------------------------------
 (17) i2_strlen                                            4     2      2     116
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (17) i2_fputs                                             7     3      4     635
                                              9 COMRAM     7     3      4
                            i2_fputc
 ---------------------------------------------------------------------------------
 (15) i2_fputc                                             9     5      4     434
                                              0 COMRAM     9     5      4
                            i2_putch
 ---------------------------------------------------------------------------------
 (16) i2_putch                                             1     1      0       0
 ---------------------------------------------------------------------------------
 (16) i2_abs                                               4     2      2      92
                                             18 COMRAM     4     2      2
                          i2___aomod (ARG)
 ---------------------------------------------------------------------------------
 (16) i2___aomod                                          18     2     16     348
                                              0 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (16) i2___aodiv                                          26    10     16     352
                                              0 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (15) i2_atoi                                             15    13      2     726
                                              7 COMRAM    15    13      2
                           i2___wmul
                          i2_isdigit
                          i2_isspace
 ---------------------------------------------------------------------------------
 (16) i2_isspace                                           7     5      2      94
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (15) i2_isdigit                                           6     4      2      74
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (16) i2___wmul                                            6     2      4     211
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (12) i2_putsXLCD                                          2     0      2     141
                                              1 COMRAM     2     0      2
                         i2_BusyXLCD
                    i2_WriteDataXLCD
 ---------------------------------------------------------------------------------
 (13) i2_WriteDataXLCD                                     1     1      0      44
                                              0 COMRAM     1     1      0
                    i2_DelayFor18TCY
 ---------------------------------------------------------------------------------
 (13) i2_BusyXLCD                                          1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (12) i2___lwmod                                           5     1      4     211
                                              0 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (12) i2___lwdiv                                           7     3      4     214
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (12) i2_SetDDRamAddr                                      1     1      0      44
                                              0 COMRAM     1     1      0
                    i2_DelayFor18TCY
 ---------------------------------------------------------------------------------
 (14) i2_DelayFor18TCY                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _time                                                0     0      0     316
                          i2_setData
 ---------------------------------------------------------------------------------
 (12) i2_setData                                           3     3      0     316
                                              2 COMRAM     3     3      0
                      i2_writeEEPROM
 ---------------------------------------------------------------------------------
 (13) i2_writeEEPROM                                       2     1      1     226
                                              0 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 17
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SetDDRamAddr
     _DelayFor18TCY
   _beep
     ___wmul
   _config
     _initLCD
       _OpenXLCD
         _BusyXLCD
         _DelayPORXLCD
         _SetDDRamAddr
           _DelayFor18TCY
         _WriteCmdXLCD
           _DelayFor18TCY
       _SendCMDLCD
         _BusyXLCD
         _WriteCmdXLCD
           _DelayFor18TCY
     _setTransStat
       _writeFrequency
         _codFreq
   _getData
     _readEEPROM
   _putsXLCD
     _BusyXLCD
     _WriteDataXLCD
       _DelayFor18TCY
   _setFrequency
     _beep
       ___wmul
     _setData
       _writeEEPROM
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
           _fputc
             _putch
           _isdigit
     _writeFrequency
       _codFreq
   _setTransStat
     _writeFrequency
       _codFreq
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _atoi
           ___wmul
           _isdigit
           _isspace
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
             _fputs
               _fputc
                 _putch
             _strlen
         _fputc
           _putch
         _isdigit
   _updateLCD
     _SetDDRamAddr
       _DelayFor18TCY
     ___lwdiv
     ___lwmod
     _putsXLCD
       _BusyXLCD
       _WriteDataXLCD
         _DelayFor18TCY
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
           _fputc
             _putch
           _isdigit
   _writeFrequency
     _codFreq

 _inter (ROOT)
   _time
     i2_setData
       i2_writeEEPROM
   i2_updateLCD
     i2_SetDDRamAddr
       i2_DelayFor18TCY
     i2___lwdiv
     i2___lwmod
     i2_putsXLCD
       i2_BusyXLCD
       i2_WriteDataXLCD
         i2_DelayFor18TCY
     i2_sprintf
       i2_vfprintf
         i2_vfpfcnvrt
           i2_atoi
             i2___wmul
             i2_isdigit
             i2_isspace
           i2_dtoa
             i2___aodiv
             i2___aomod
             i2_abs
               i2___aomod (ARG)
             i2_pad
               i2_fputc
                 i2_putch
               i2_fputs
                 i2_fputc
                   i2_putch
               i2_strlen
           i2_fputc
             i2_putch
           i2_isdigit

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      48       7       28.1%
BITBANK0            80      0       0       4        0.0%
BANK0               80     72      80       5      100.0%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     79      7E       1      100.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     146      15        0.0%
DATA                 0      0     146       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Mon Aug 12 21:02:11 2019

                                                 _UN_BLOCKED 0603  
                                                         l62 2BC2  
                                                         l72 21A0  
                                        ___wmul@multiplicand 0082  
                                         i2___lwdiv@dividend 0001  
                                               __CFG_CP0$OFF 000000  
                                               __CFG_CP1$OFF 000000  
                                               __CFG_CP2$OFF 000000  
                                               __CFG_CP3$OFF 000000  
                                                __CFG_OSC$HS 000000  
                                                        l232 25A0  
                                                        l237 1066  
                                                        l264 23CA  
                                                        l266 23F6  
                                                        l534 1CE4  
                                                        l615 08DC  
                                                        l580 0BEA  
                                                        l567 1D78  
                                                        l578 0BE0  
                                               __CFG_CPB$OFF 000000  
                                               __CFG_CPD$OFF 000000  
                                         i2___aodiv@quotient 0013  
                                               __CFG_BOR$OFF 000000  
                                                        _abs 29DA  
                                                        _pad 1D40  
                                               __CFG_BORV$20 000000  
                                      __size_of_WriteCmdXLCD 0048  
                                                        wreg 000FE8  
                                        __end_ofi2_updateLCD 216C  
                                            __end_of_BLOCKED 0605  
                                        __end_ofi2_vfpfcnvrt 0B62  
                                                 i2_dtoa$939 002E  
                                        i2WriteDataXLCD@data 0001  
                                               __CFG_LVP$OFF 000000  
                                               __CFG_WDT$OFF 000000  
                                                       ?_abs 0092  
                                                       l1300 2A08  
                                                       l1116 2450  
                                                       l1126 266E  
                                                       l1303 2A12  
                                                       l1331 14DA  
                                                       l3020 16E8  
                                                       l3012 16AA  
                                                       l1334 14E4  
                                                       l3030 1748  
                                                       l3006 1680  
                                                       l1360 1E96  
                                                       l3018 16D2  
                                                       l3034 1760  
                                                       l3050 193A  
                                                       l3300 13FA  
                                                       l3060 1992  
                                                       l4100 112E  
                                                       l3310 1472  
                                                       l3302 1404  
                                                       l3038 1788  
                                                       l3070 19F6  
                                                       l3054 1960  
                                                       l3304 140C  
                                                       l3240 0C08  
                                                       l4112 1186  
                                                       l4104 1144  
                                                       l3306 1438  
                                                       l3074 1A1E  
                                                       l3066 19DE  
                                                       l3058 197C  
                                                       l3226 0BC0  
                                                       l3244 0C1A  
                                                       l4116 119C  
                                                       l4108 1170  
                                                       l3086 28C2  
                                                       l3254 0D16  
                                                       l3510 0730  
                                                       l4080 109A  
                                                       l4224 126C  
                                                       l3274 0D84  
                                                       l3506 0700  
                                                       l3284 1396  
                                                       l3532 087A  
                                                       l3508 0720  
                                                       l4092 10F0  
                                                       l4084 10C6  
                                                       l4076 1084  
                                                       l4260 1358  
                                                       l3710 1C52  
                                                       l3702 1C2E  
                                                       l3294 13E8  
                                                       l3286 139C  
                                                       l3278 0DA0  
                                                       l3526 083A  
                                                       l3542 08A2  
                                                       l4262 1366  
                                                       l4238 12A8  
                                                       l2904 1E0C  
                                                       l3536 0886  
                                                       l4088 10DA  
                                                       l4256 1340  
                                                       l3714 1C64  
                                                       l3706 1C40  
                                                       l3644 1CAE  
                                                       l2932 286A  
                                                       ?_pad 0090  
                                                       l3744 2C56  
                                                       l3648 1CE8  
                                                       l2928 2850  
                                                       l2936 2B44  
                                                       l3904 2416  
                                                       l3690 1BF8  
                                                       l3834 218C  
                                                       l2938 2B4C  
                                                       l2970 1D6E  
                                                       l3754 2342  
                                                       l3906 2420  
                                                       l3684 1BD8  
                                                       l2980 1DCE  
                                                       l2972 1D84  
                                                       l3756 2372  
                                                       l3916 2444  
                                                       l3932 2662  
                                                       l3924 263C  
                                                       l3694 1C0A  
                                                       l2966 1D5C  
                                                       l3926 2646  
                                                       l2976 1DA0  
                                                       l3872 2A78  
                                                       l3698 1C1C  
                                                       l3866 2A58  
                                                       STR_1 0617  
                                                       STR_2 064A  
                                                       STR_3 0639  
                                                       STR_4 0628  
                                                       STR_5 0605  
                                                       u2101 16B2  
                                                       u2120 16EE  
                                                       u2050 29EC  
                                                       u2060 2ABA  
                                                       u2220 28BE  
                                                       u3110 1BE4  
                                                       u2070 2ABE  
                                                       u2180 1998  
                                                       u2510 0C00  
                                                       u4007 2CB2  
                                                       u2520 0D28  
                                                       u3320 2426  
                                                       u4017 2C78  
                                                       u2610 13E4  
                                                       u2450 0B8E  
                                                       u3084 1CC8  
                                                       u1900 1E02  
                                                       u2540 0D4A  
                                                       u2460 0B92  
                                                       u3085 1CC0  
                                                       u2541 0D48  
                                                       u3270 25CE  
                                                       u2630 14A6  
                                                       u2550 0D5A  
                                                       u3350 264C  
                                                       _PIE1 000F9D  
                                                       u2640 14AA  
                                                       u1920 1E4E  
                                                       u2560 0D5E  
                                                       u2490 0BD4  
                                                       u3530 1114  
                                                       u2580 0D6C  
                                                       u3470 106C  
                                                       u2920 076E  
                                                       u2930 0772  
                                                       u2940 0780  
                                                       u3590 11C0  
                                                       u3807 130A  
                                                       u2960 07BA  
                                                       u3817 1370  
                                                       u3907 23DC  
                                                       u3827 10B4  
                                                       u3917 1C9A  
                                                       u3837 10FE  
                                                       u3927 1CF2  
                                                       u3847 115E  
                                                       u3937 1D0A  
                                                       u3857 11AA  
                                                       u3777 1226  
                                                       u3947 1D2C  
                                                       u3867 11D2  
                                                       u3787 125A  
                                                       u3957 2732  
                                                       u3877 25A6  
                                                       u3797 127C  
                                                       i2l62 2C1A  
                                                       u3967 2756  
                                                       u3887 25B0  
                                                       i2l72 2212  
                                                       u3977 1BA8  
                                                       u3897 23B0  
                                                       u3987 1BC4  
                                                       u3997 2CF6  
                                               __CFG_PWRT$ON 000000  
                                               _stereoEnable 0146  
                                               __CFG_STVR$ON 000000  
                                                       abs@a 0092  
                                                       _beep 257C  
                                                       _dbuf 0104  
                                                       _days 00FD  
                                                       _atoi 1380  
                                                       _main 1212  
                                                       _dtoa 0B62  
                                                       _prec 00F4  
                                                       _time 2254  
                                                       _nout 0100  
                                                       pad@i 0097  
                                                       pad@p 0094  
                                                       fsr1h 000FE2  
                                         i2___lwdiv@quotient 0005  
                                                       fsr2h 000FDA  
                                                       indf2 000FDF  
                                                       fsr1l 000FE1  
                                                       pad@w 0099  
                                                       fsr2l 000FD9  
                                                       btemp 007F  
                                                i2_atoi$1411 0010  
                                                i2_atoi$1412 0014  
                                                i2_atoi$1413 0012  
                                     __size_of_WriteDataXLCD 0048  
                                                       prodh 000FF4  
                                                       prodl 000FF3  
                                                       start 008E  
                                            __end_ofi2_fputc 1F48  
                                            __end_ofi2_fputs 2998  
                                            __end_ofi2_putch 2D1E  
                                               ___param_bank 000000  
                                                _writeEEPROM 2BA0  
                                                      ??_abs 0094  
                                                      ??_pad 0096  
                                                 i2_putsXLCD 2B00  
                                               _WriteCmdXLCD 27FA  
                                           ?i2_DelayFor18TCY 0001  
                                           ??_writeFrequency 0084  
                                                 i2_vfprintf 245E  
                                              __CFG_OSCS$OFF 000000  
                                                      ?_beep 0086  
                                            __end_of___aodiv 17AE  
                                         writeEEPROM@address 0080  
                                                      ?_atoi 0087  
                                              ?_SetDDRamAddr 0001  
                                                      ?_main 0001  
                                                      ?_dtoa 009B  
                                            __end_of___aomod 1A44  
                                                      _EEADR 000FA9  
                                                      ?_time 0001  
                                                      _T0CON 000FD5  
                                                      _T1CON 000FCD  
                                            __end_of___lwdiv 245E  
                                            __end_of___lwmod 267C  
                                                      i2l229 22BC  
                                                      i2l615 0B5C  
                                                      i2l580 0E56  
                                                      i2l567 1F7E  
                                                      i2l578 0E4C  
                                               vfpfcnvrt@fmt 00C1  
                                                      _TMR1H 000FCF  
                                                      _TMR1L 000FCE  
                                                      _PORTA 000F80  
                                                      _PORTB 000F81  
                                                      _PORTC 000F82  
                                                      _PORTD 000F83  
                                                      _PORTE 000F84  
                                                      _TRISA 000F92  
                                                      _TRISB 000F93  
                                                      _TRISC 000F94  
                                                      _TRISD 000F95  
                                                      _TRISE 000F96  
                                                      i2_abs 2A18  
                                            __end_of_codFreq 2CA8  
                                                      i2_pad 1F48  
                                              __CFG_WRT0$OFF 000000  
                                            __end_of_getData 232C  
                                              __CFG_WRT1$OFF 000000  
                                              __CFG_WRT2$OFF 000000  
                                              __CFG_WRT3$OFF 000000  
                                             __CFG_EBTR0$OFF 000000  
                                             __CFG_EBTR1$OFF 000000  
                                             __CFG_EBTR2$OFF 000000  
                                             __CFG_EBTR3$OFF 000000  
                                              __CFG_WRTB$OFF 000000  
                                              __CFG_WRTC$OFF 000000  
                                              __CFG_WRTD$OFF 000000  
                                            __end_of_initLCD 2768  
                                             __CFG_EBTRB$OFF 000000  
                                                 i2isdigit@c 0001  
                                                      _flags 00F6  
                                       writeFrequency@buffer 0087  
                                                      _level 0102  
                                                      _fputc 1DEE  
                                                      _inter 0008  
                                                      _fputs 2842  
                                            __end_of_isdigit 2AC8  
                                                      _hours 00FC  
                                                      atoi@n 0094  
                                                      pad@fp 0090  
                                                      atoi@s 0087  
                                            __end_of_setData 21E2  
                                                      _width 00F2  
                                                      _putch 2D12  
                                                      main@i 00F1  
                                                      dtoa@d 009D  
                                                      dtoa@i 00BD  
                                                      dtoa@n 00B5  
                                                      dtoa@p 00AF  
                                                      dtoa@s 00B3  
                                                      dtoa@w 00B1  
                                            __end_of_isspace 28CE  
                                                ?i2_BusyXLCD 0001  
                                                      tablat 000FF5  
                                           __end_ofi2___wmul 2C50  
                                                      ttemp5 0080  
                                                      ttemp6 0083  
                                                      ttemp7 0087  
                                                      status 000FD8  
                                                 i2isspace@c 0001  
                                                      wtemp8 0080  
                                            __end_of_sprintf 262A  
                                         __size_ofi2___aodiv 015C  
                                         __size_ofi2___aomod 0138  
                                         __size_ofi2___lwdiv 0060  
                                         __size_ofi2___lwmod 0050  
                                           __end_ofi2_strlen 2BA0  
                                            __initialization 2076  
                                          __end_of_FINAL_DAY 0602  
                                               __end_of_beep 25D4  
                                               __end_of_atoi 14EA  
                                               __end_of_main 1380  
                                               __end_of_dtoa 0DCE  
                                               __end_of_time 22C2  
                                           __end_of_BusyXLCD 2C8C  
                                           ??i2_SetDDRamAddr 0001  
                                      __size_of_DelayPORXLCD 001C  
                                         __size_ofi2_isdigit 0038  
                                         __size_ofi2_setData 0072  
                                                i2_updateLCD 20F2  
                                                i2_vfpfcnvrt 08E2  
                                             ??_SetDDRamAddr 0080  
                                         __size_ofi2_isspace 0044  
                                              i2vfpfcnvrt@ap 0044  
                                              i2vfpfcnvrt@fp 0040  
                                              i2vfpfcnvrt@ll 004A  
                                                 _SendCMDLCD 2C50  
                                                     ??_beep 0088  
                                           __end_of_OpenXLCD 1C7A  
                                                     ??_atoi 0089  
                                                     ??_main 00EF  
                                                     ??_dtoa 00A5  
                                                     ??_time 0006  
                                              __activetblptr 000002  
                                                 i2sprintf@f 0068  
                                              _WriteDataXLCD 27B2  
                                                 i2sprintf@s 005C  
                                         __size_ofi2_sprintf 0052  
                                                     ?i2_abs 0013  
                                                     ?i2_pad 0011  
                                         _hundredMiliSeconds 007A  
                                                     _ADCON0 000FC2  
                                                     _ADCON1 000FC1  
                                                     ?_fputc 0080  
                                                     ?_inter 0001  
                                                     ?_fputs 0089  
                                                     _EEDATA 000FA8  
                                                     _EECON2 000FA7  
                                                     ?_putch 0001  
                                                     i2l1116 2510  
                                                     i2l1300 2A44  
                                                     i2l1126 2710  
                                                     i2l1303 2A4E  
                                                     i2l1331 1640  
                                                     i2l3100 1F8A  
                                                     i2l1334 164A  
                                                     i2l1360 1F42  
                                                     i2l3104 1FA4  
                                                     i2l4002 2504  
                                                     i2l4010 26DE  
                                                     i2l4012 26E8  
                                                     i2l3140 1844  
                                                     i2l3132 1806  
                                                     i2l3108 1FD4  
                                                     i2l3214 2906  
                                                     i2l3150 18A4  
                                                     i2l3126 17DC  
                                                     i2l4018 2704  
                                                     i2l3410 15A0  
                                                     i2l3138 182E  
                                                     i2l3154 18BC  
                                                     i2l3170 1A72  
                                                     i2l3330 0E2A  
                                                     i2l3404 1562  
                                                     i2l3180 1ACA  
                                                     i2l3414 15D8  
                                                     i2l3406 156C  
                                                     i2l3158 18E4  
                                                     i2l3190 1B2E  
                                                     i2l3174 1A98  
                                                     i2l3094 1F64  
                                                     i2l3408 1574  
                                                     i2l3344 0E74  
                                                     i2l3194 1B56  
                                                     i2l3186 1B16  
                                                     i2l3178 1AB4  
                                                     i2l3098 1F74  
                                                     i2l3348 0E86  
                                                     i2l3604 0B24  
                                                     i2l4182 229E  
                                                     i2l3390 1504  
                                                     i2l3382 100C  
                                                     i2l3358 0F80  
                                                     i2l4280 005C  
                                                     i2l3378 0FF0  
                                                     i2l3570 09A6  
                                                     i2l3810 2474  
                                                     i2l4188 22B4  
                                                     i2l3388 14FE  
                                                     i2l3572 09B6  
                                                     i2l3812 249C  
                                                     i2l3398 1550  
                                                     i2l2918 1EB8  
                                                     i2l2950 297A  
                                                     i2l4278 0058  
                                                     i2l3568 0986  
                                                     i2l2946 2962  
                                                     i2l2954 2B7A  
                                                     i2l3594 0AFE  
                                                     i2l2956 2B80  
                                                     i2l3588 0ABE  
                                                     i2l3598 0B08  
                                                     i2l3944 2200  
                                                     _INTCON 000FF2  
                                                     i2l3990 24D6  
                                                     i2l3982 2B22  
                                                     i2l3992 24E0  
                                                     i2l3976 2B04  
                                   __size_ofi2_WriteDataXLCD 0042  
                                                  ??i2_fputc 0005  
                                                  ??i2_fputs 000E  
                                                     _OSCCON 000FD3  
                                                  ??i2_putch 0001  
                                             __CFG_WDTPS$128 000000  
                                             i2___aodiv@sign 0012  
                                           i2updateLCD@decim 006E  
                                                     i2abs@a 0013  
                                                     i2_atoi 14EA  
                                                     i2_dtoa 0DCE  
                                                     i2pad@i 0018  
                                                     i2pad@p 0015  
                                           i2updateLCD@integ 006F  
                                                     i2pad@w 001A  
                                               _DelayPORXLCD 2CA8  
                                               vfprintf@cfmt 00D9  
                                      __end_ofi2_writeEEPROM 2C26  
                                             i2___aomod@sign 0012  
                                                  ??___aodiv 0090  
                                              i2vfprintf@fmt 0056  
                                                  ??___aomod 0090  
                                                     ___wmul 2BCE  
                                                  ??___lwdiv 0084  
                                                ?i2_putsXLCD 0002  
                                                     beep@ms 0086  
                                                  ??___lwmod 0084  
                                                     _config 251E  
                                                ?i2_vfprintf 0054  
                                                  ??_codFreq 0082  
                                                     clear_0 20CC  
                                                     clear_1 20D8  
                                                  ??_getData 0081  
                                                     _months 00FE  
                                        __size_ofi2_BusyXLCD 0018  
                                                     pad@buf 0092  
                                             ?_WriteDataXLCD 0001  
                                                     dtoa@fp 009B  
                                                     _strlen 2B38  
                                                  ??_initLCD 0083  
                                                     fputc@c 0080  
                                                     fputs@c 008D  
                                                     fputs@i 008E  
                                               __pdataCOMRAM 007D  
                                          __end_ofi2___aodiv 190A  
                                                     fputs@s 0089  
                                                  ??_isdigit 0082  
                                          __end_ofi2___aomod 1B7C  
                                                  ??_setData 0082  
                                          __end_ofi2___lwdiv 251E  
                                               __mediumconst 0000  
                                                  ??_isspace 0082  
                                          __end_ofi2___lwmod 271E  
                                                     tblptrh 000FF7  
                                                     tblptrl 000FF6  
                                                     tblptru 000FF8  
                                                     putch@c 0001  
                                           __end_of_putsXLCD 2A8E  
                                         i2___aomod@dividend 0001  
                                           __end_of_vfprintf 2394  
                                                  ??_sprintf 00E3  
                                          __end_ofi2_isdigit 2B00  
                                          __end_ofi2_setData 2254  
                                                 __accesstop 0080  
                                    __end_of__initialization 20E4  
                                          __end_ofi2_isspace 2912  
                                              ___rparam_used 000001  
                                            writeEEPROM@data 0081  
                                          __end_ofi2_sprintf 26CE  
                                              __end_ofi2_abs 2A54  
                                              __end_ofi2_pad 1FF2  
                                         i2___lwmod@dividend 0001  
                                             __pcstackCOMRAM 0001  
                                               __pidataBANK0 2D1E  
                                               __pidataBANK1 2D25  
                                              __end_of_fputc 1E9C  
                                              __end_of_inter 008E  
                                              __end_of_fputs 2888  
                                              __end_of_putch 2D18  
                                                ?_SendCMDLCD 0001  
                                                  ?i2___wmul 0001  
                                                    ??i2_abs 0015  
                                                    ??i2_pad 0017  
                                                setData@full 0084  
                                             i2vfpfcnvrt@fmt 0042  
                                                  ?i2_strlen 0001  
                                                    ??_fputc 0084  
                                                    ??_inter 0070  
                                                    ??_fputs 008D  
                                     __size_of_DelayFor18TCY 0010  
                                                    ??_putch 0080  
                                              ?_setFrequency 0001  
                                                 __pbssBANK0 00F2  
                                                 __pbssBANK1 0100  
                                                  ?_BusyXLCD 0001  
                                                i2sprintf@ap 0066  
                                        __size_ofi2_putsXLCD 0038  
                                        __size_ofi2_vfprintf 0060  
                                            WriteCmdXLCD@cmd 0080  
                                       __end_of_SetDDRamAddr 27B2  
                                                    ?i2_atoi 0008  
                                                    ?i2_dtoa 001C  
                                                  ?_OpenXLCD 0001  
                                          ??i2_WriteDataXLCD 0001  
                                               ?_writeEEPROM 0080  
                                          WriteDataXLCD@data 0080  
                                           __CFG_CCP2MUX$OFF 000000  
                                                    ?___wmul 0080  
                                                    ?_config 0001  
                                            ??_WriteDataXLCD 0080  
                                                    _BLOCKED 0604  
                                             updateLCD@decim 00ED  
                                                    ?_strlen 0080  
                                             updateLCD@integ 00EE  
                                                 ??i2___wmul 0005  
                                                 _isOnConfig 0103  
                                              ?_setTransStat 008C  
                                         __size_of_updateLCD 0084  
                                            i2_vfpfcnvrt$954 0052  
                                         __size_of_vfpfcnvrt 0286  
                                                 ??i2_strlen 0003  
                                             ??_setFrequency 00ED  
                                               ??i2_BusyXLCD 0001  
                                                 ??_BusyXLCD 0080  
                                                    i2_fputc 1E9C  
                                                    i2_fputs 2956  
                                                    i2atoi@n 0015  
                                                    i2pad@fp 0011  
                                                    i2atoi@s 0008  
                                                    i2_putch 2D18  
                                                    i2dtoa@d 001E  
                                                    i2dtoa@i 003E  
                                                    i2dtoa@n 0036  
                                                    i2dtoa@p 0030  
                                                    i2dtoa@s 0034  
                                                    i2dtoa@w 0032  
                                                 _readEEPROM 2CDC  
                                        __size_of_SendCMDLCD 001E  
                                                 ??_OpenXLCD 0081  
                                            __size_ofi2_atoi 0166  
                                            __size_ofi2_dtoa 026C  
                                                    __Hparam 0000  
                                                    __Lparam 0000  
                                                    ___aodiv 1650  
                                                    ___aomod 190A  
                                              _DelayFor18TCY 2CF2  
                                            __size_of___wmul 002C  
                                                  ?_putsXLCD 0081  
                                                    ___lwdiv 23FC  
                                                    ___lwmod 262A  
                                                  ?_vfprintf 00D3  
                                             i2vfprintf@cfmt 005A  
                                               __psmallconst 0600  
                                            __size_of_config 005E  
                                                  _FINAL_DAY 0601  
                                               ?i2_updateLCD 0001  
                                               ?i2_vfpfcnvrt 0040  
                                                    _codFreq 2C8C  
                                                    __pcinit 2076  
                                                    _getData 22C2  
                                                    __ramtop 0600  
                                                    __ptext0 1212  
                                                    __ptext1 1FF2  
                                                    __ptext2 2A54  
                                                    __ptext3 27B2  
                                                    __ptext4 262A  
                                                    __ptext5 23FC  
                                                    __ptext6 103A  
                                                    __ptext7 25D4  
                                                    __ptext8 232C  
                                                    __ptext9 065C  
                                                    _cntTmr1 007C  
                                         __end_ofi2_BusyXLCD 2CDC  
                                            __size_of_strlen 0036  
                                                    _initLCD 271E  
                                                  _T1CONbits 000FCD  
                                             ??_setTransStat 008E  
                                                    _lineOne 0135  
                                               __size_of_abs 003E  
                                                    _lineTwo 0124  
                                               __size_of_pad 00AE  
                                                    _isdigit 2A8E  
                                                    _prTmr0H 0147  
                                                    _prTmr1H 007D  
                                                    _prTmr0L 00FF  
                                                    _prTmr1L 007E  
                                                    _setData 216C  
                                   __size_ofi2_DelayFor18TCY 0010  
                                                    _minutes 00FB  
                                                    _seconds 007B  
                                                    _isspace 2888  
                                                    atoi@neg 008D  
                                                    _sprintf 25D4  
                                       end_of_initialization 20E4  
                                         __end_of_UN_BLOCKED 0604  
                                                    fputc@fp 0082  
                                              __Lmediumconst 0000  
                                                    fputs@fp 008B  
                                        i2___wmul@multiplier 0001  
                                          __end_of_updateLCD 2076  
                                          __end_of_vfpfcnvrt 08E2  
                                             ?_DelayFor18TCY 0001  
                                                    postdec1 000FE5  
                                                    postdec2 000FDD  
                                                    postinc0 000FEE  
                                                    postinc1 000FE6  
                                                    postinc2 000FDE  
                                               ??i2_putsXLCD 0004  
                                                 ??_putsXLCD 0083  
                                               ??i2_vfprintf 005A  
                                                 ??_vfprintf 00D9  
                                                    strlen@a 0082  
                                                    strlen@s 0080  
                                       i2writeEEPROM@address 0001  
                                                  _PORTBbits 000F81  
                                                  _PORTCbits 000F82  
                                                  _PORTDbits 000F83  
                                                  _PORTEbits 000F84  
                                          i2___aodiv@divisor 0009  
                                          i2___aodiv@counter 0011  
                                                  _TRISDbits 000F95  
                                           i2putsXLCD@buffer 0002  
                                    __size_of_writeFrequency 00C6  
                                      __size_of_SetDDRamAddr 004A  
                                                  i2___aodiv 17AE  
                                                  i2___aomod 1A44  
                                          readEEPROM@address 0080  
                                          i2___lwdiv@divisor 0003  
                                                  i2___lwdiv 24BE  
                                                  i2___lwmod 26CE  
                                          i2___lwdiv@counter 0007  
                                         __end_ofi2_putsXLCD 2B38  
                                         __end_ofi2_vfprintf 24BE  
                                                ?_readEEPROM 0001  
                                                  i2_isdigit 2AC8  
                                                  i2_setData 21E2  
                                             __end_ofi2_atoi 1650  
                                             __end_ofi2_dtoa 103A  
                                                  i2_isspace 28CE  
                                                  i2atoi@neg 000E  
                                                  i2_sprintf 267C  
                                        __end_of_FINAL_MONTH 0603  
                                       __size_of_writeEEPROM 002E  
                                       __end_of_setFrequency 1212  
                                                vfpfcnvrt@ap 00C3  
                                                vfpfcnvrt@fp 00BF  
                                                vfpfcnvrt@ll 00C9  
                                             __end_of___wmul 2BFA  
                                              __pidataCOMRAM 2D23  
                                               ??_SendCMDLCD 0081  
                                             __end_of_config 257C  
                                                  i2fputc@fp 0003  
                                                  i2fputs@fp 000C  
                                               _SetDDRamAddr 2768  
                                           i2___wmul@product 0005  
                                         SetDDRamAddr@DDaddr 0080  
                                             __end_of_strlen 2B6E  
                                        start_initialization 2076  
                                          __size_ofi2___wmul 002A  
                                    __size_ofi2_SetDDRamAddr 0044  
                                                __end_of_abs 2A18  
                                                __end_of_pad 1DEE  
                                                 ?i2___aodiv 0001  
                                                 ?i2___aomod 0001  
                                     __size_ofi2_writeEEPROM 002C  
                                            i2_WriteDataXLCD 2998  
                                                 ?i2___lwdiv 0001  
                                                 ?i2___lwmod 0001  
                                          __size_ofi2_strlen 0032  
                                                  i2strlen@a 0003  
                                                  i2strlen@s 0001  
                                          ??i2_DelayFor18TCY 0001  
                                          __size_of_BusyXLCD 001E  
                                                   ??i2_atoi 000A  
                                               setData@data0 0082  
                                               setData@data1 0083  
                                                   ??i2_dtoa 0026  
                                         __end_of_SendCMDLCD 2C6E  
                                                 ?i2_isdigit 0001  
                                       __end_of_setTransStat 23FC  
                                            ??_DelayFor18TCY 0080  
                                                 ?i2_setData 0001  
                                                 ?i2_isspace 0001  
                                                vfprintf@fmt 00D5  
                                          __size_of_OpenXLCD 00FE  
                                               i2vfprintf@ap 0058  
                                               i2vfprintf@fp 0054  
                                                   ??___wmul 0084  
                                                 ?i2_sprintf 005C  
                                              ?_WriteCmdXLCD 0001  
                                                   ??_config 008F  
                                                __pdataBANK0 00FB  
                                                __pdataBANK1 0146  
                                          i2___aomod@divisor 0009  
                                                   ??_strlen 0082  
                                          i2___aomod@counter 0011  
                                       __size_ofi2_updateLCD 007A  
                                       __size_ofi2_vfpfcnvrt 0280  
                                        __size_of_readEEPROM 0016  
                                               i2sprintf@fmt 005E  
                                                __pbssCOMRAM 007A  
                                              __pcstackBANK0 0080  
                                           ___aodiv@dividend 0080  
                                          i2___lwmod@divisor 0003  
                                          i2___lwmod@counter 0005  
                                                   ?i2_fputc 0001  
                                                   ?i2_fputs 000A  
                                                   ?i2_putch 0001  
                                                  _atoi$1411 008F  
                                                  _atoi$1412 0093  
                                                  _atoi$1413 0091  
                                                _FINAL_MONTH 0602  
                                             putsXLCD@buffer 0081  
                                           ___lwdiv@dividend 0080  
                                                  __pintcode 0008  
                                             ??_WriteCmdXLCD 0080  
                                                   ?___aodiv 0080  
                                                   ?___aomod 0080  
                                              i2_writeEEPROM 2BFA  
                                           ___aodiv@quotient 0092  
                                                   ?___lwdiv 0080  
                                                   ?___lwmod 0080  
                                                   ?_codFreq 0080  
                                                   ?_getData 0001  
                                              SendCMDLCD@CMD 0081  
                                          __size_of_putsXLCD 003A  
                                      __end_of_WriteDataXLCD 27FA  
                                          __size_of_vfprintf 0068  
                                                   ?_initLCD 0001  
                                                __smallconst 0600  
                                    __end_ofi2_WriteDataXLCD 29DA  
                                                   ?_isdigit 0080  
                                             __size_ofi2_abs 003C  
                                                   ?_setData 0001  
                                             __size_ofi2_pad 00AA  
                                                   ?_isspace 0080  
                                             _writeFrequency 1C7A  
                                                  _frequency 00F8  
                                           ___lwdiv@quotient 0084  
                                                ??i2___aodiv 0011  
                                                ??i2___aomod 0011  
                                                   ?_sprintf 00DB  
                                             __size_of_fputc 00AE  
                                             __size_of_inter 0086  
                                             __size_of_fputs 0046  
                                                ??i2___lwdiv 0005  
                                                ??i2___lwmod 0005  
                                             __size_of_putch 0006  
                                             ___wmul@product 0084  
                                              ?_DelayPORXLCD 0001  
                                                ??i2_isdigit 0003  
                                                ??i2_setData 0003  
                                                   i2u301_40 09F2  
                                      __size_of_setFrequency 01D8  
                                                   i2u302_40 09F6  
                                                ??i2_isspace 0003  
                                                   i2u231_40 184A  
                                                   i2u303_40 0A04  
                                                   i2u240_40 2A28  
                                                   i2u241_40 2AF2  
                                                   i2u305_40 0A3E  
                                                   i2u242_40 2AF6  
                                                   i2u402_47 2CCC  
                                                   i2u403_47 2D06  
                                                   i2u244_40 2902  
                                                   i2u237_40 1AD0  
                                                   i2u229_41 180E  
                                                   i2u342_40 24E6  
                                                   i2u271_40 0E40  
                                                   i2u280_40 0FD8  
                                                   i2u345_40 26EE  
                                                   i2u273_40 0E6C  
                                                   _PIR1bits 000F9E  
                                            OpenXLCD@lcdtype 0082  
                                                   i2u194_40 1EAE  
                                                   i2u274_40 0F90  
                                                   i2u283_40 154C  
                                                   i2u267_40 0DF8  
                                                   _PIR2bits 000FA1  
                                                   i2u196_40 1EFA  
                                                   i2u276_40 0FB2  
                                                   i2u268_40 0DFC  
                                                   i2u276_41 0FB0  
                                                   i2u285_40 160C  
                                                   i2u277_40 0FC2  
                                                   i2u286_40 1610  
                                                   i2u278_40 0FC8  
                                           setTransStat@stat 008C  
                                             ?i2_writeEEPROM 0001  
                                                ??i2_sprintf 0064  
                                                  _updateLCD 1FF2  
                                             _functionalStat 00FA  
                                                  _vfpfcnvrt 065C  
                                          ___wmul@multiplier 0080  
                                                   i2___wmul 2C26  
                                     __end_of_writeFrequency 1D40  
                                             i2_SetDDRamAddr 2912  
                                               _isspace$1429 0086  
                                                   i2pad@buf 0013  
                                                   i2dtoa@fp 001C  
                                                   i2_strlen 2B6E  
                                                  copy_data0 20A2  
                                                   i2fputc@c 0001  
                                                   i2fputs@c 000E  
                                                   i2fputs@i 000F  
                                                   i2fputs@s 000A  
                                               _setFrequency 103A  
                                                   _BusyXLCD 2C6E  
                                      __size_of_setTransStat 0068  
                                               ??_readEEPROM 0080  
                                           __size_ofi2_fputc 00AC  
                                           __size_ofi2_fputs 0042  
                                             ??_DelayPORXLCD 0080  
                                           __size_ofi2_putch 0006  
                                                 _EECON1bits 000FA6  
                                                   _OpenXLCD 1B7C  
                                                   __Hrparam 0000  
                                             i2setData@data0 0003  
                                             i2setData@data1 0004  
                                                 vfprintf@ap 00D7  
                                                   __Lrparam 0000  
                                                 vfprintf@fp 00D3  
                                           __size_of___aodiv 015E  
                                           __size_of___aomod 013A  
                                      i2___wmul@multiplicand 0003  
                                                 ?_updateLCD 0001  
                                                 ?_vfpfcnvrt 00BF  
                                           __size_of___lwdiv 0062  
                                           __size_of___lwmod 0052  
                                            ___aodiv@divisor 0088  
                                           __size_of_codFreq 001C  
                                            ___aodiv@counter 0090  
                                           __size_of_getData 006A  
                                     __end_ofi2_SetDDRamAddr 2956  
                                            i2_DelayFor18TCY 2D02  
                                            ?_writeFrequency 0082  
                                                 sprintf@fmt 00DD  
                                           ?i2_WriteDataXLCD 0001  
                                           __size_of_initLCD 004A  
                                         __end_of_readEEPROM 2CF2  
                                               _setTransStat 2394  
                                           __size_of_isdigit 003A  
                                                   _dtoa$939 00AD  
                                            ___lwdiv@divisor 0082  
                                           __size_of_setData 0076  
                                           __size_of_isspace 0046  
                                            ___lwdiv@counter 0086  
                                                   __ptext10 0B62  
                                                   __ptext11 1D40  
                                                   __ptext20 2888  
                                                   __ptext12 2B38  
                                                   __ptext21 2A8E  
                                                   __ptext13 2842  
                                                   __ptext30 1C7A  
                                                   __ptext22 216C  
                                                   __ptext14 1DEE  
                                                   __ptext31 2C8C  
                                                   __ptext23 2BA0  
                                                   __ptext15 2D12  
                                                   __ptext32 271E  
                                                   __ptext24 257C  
                                                   __ptext16 29DA  
                                                   __ptext41 20F2  
                                                   __ptext33 2C50  
                                                   __ptext25 2BCE  
                                                   __ptext17 190A  
                                                   __ptext50 2D18  
                                                   __ptext42 267C  
                                                   __ptext34 1B7C  
                                                   __ptext26 22C2  
                                                   __ptext18 1650  
                                                   __ptext51 2A18  
                                                   __ptext43 245E  
                                                   __ptext35 27FA  
                                                   __ptext27 2CDC  
                                                   __ptext19 1380  
                                                   __ptext60 2CC4  
                                                   __ptext52 1A44  
                                                   __ptext44 08E2  
                                                   __ptext36 2768  
                                                   __ptext28 251E  
                                                   __ptext61 26CE  
                                                   __ptext53 17AE  
                                                   __ptext45 0DCE  
                                                   __ptext37 2CF2  
                                                   __ptext29 2394  
                                                   __ptext62 24BE  
                                                   __ptext54 14EA  
                                                   __ptext46 1F48  
                                                   __ptext38 2CA8  
                                                   __ptext63 2912  
                                                   __ptext55 28CE  
                                                   __ptext47 2B6E  
                                                   __ptext39 2C6E  
                                                   __ptext64 2D02  
                                                   __ptext56 2AC8  
                                                   __ptext48 2956  
                                                   __ptext65 2254  
                                                   __ptext57 2C26  
                                                   __ptext49 1E9C  
                                                   __ptext66 21E2  
                                                   __ptext58 2B00  
                                                   __ptext67 2BFA  
                                                   __ptext59 2998  
                                       __end_of_WriteCmdXLCD 2842  
                                           __size_of_sprintf 0056  
                                              __size_of_beep 0058  
                                                   codFreq@f 0080  
                                              __size_of_atoi 016A  
                                              __size_of_main 016E  
                                              __size_of_dtoa 026C  
                                              __size_of_time 006E  
                                            ??i2_writeEEPROM 0002  
                                              ??_writeEEPROM 0081  
                                                   int$flags 007F  
                                                   _putsXLCD 2A54  
                                                   _vfprintf 232C  
                                            writeFrequency@f 0082  
                                            writeFrequency@i 008B  
                                            writeFrequency@r 0089  
                                           ___aomod@dividend 0080  
                                                getData@aux0 0083  
                                                getData@aux1 0084  
                                            ?i2_SetDDRamAddr 0001  
                                                 _INTCONbits 000FF2  
                                              i2setData@full 0005  
                                                   isdigit@c 0080  
                                                   intlevel2 2D28  
                                                  sprintf@ap 00E5  
                                           ___lwmod@dividend 0080  
                                                   isspace@c 0080  
                                          i2writeEEPROM@data 0002  
                                      __end_of_DelayFor18TCY 2D02  
                                    __end_ofi2_DelayFor18TCY 2D12  
                                            ___aomod@divisor 0088  
                                              ??i2_updateLCD 006E  
                                              ??i2_vfpfcnvrt 0046  
                                                ??_updateLCD 00ED  
                                                ??_vfpfcnvrt 00C5  
                                            ___aomod@counter 0090  
                                              _vfpfcnvrt$954 00D1  
                                        __end_of_writeEEPROM 2BCE  
                                                   sprintf@f 00E7  
                                                   sprintf@s 00DB  
                                       __end_of_DelayPORXLCD 2CC4  
                                       i2SetDDRamAddr@DDaddr 0001  
                                            ___lwmod@divisor 0082  
                                            ___lwmod@counter 0084  
                                             i2_isspace$1429 0007  
                                               ___aodiv@sign 0091  
                                                 i2_BusyXLCD 2CC4  
                                         i2___aodiv@dividend 0001  
                                               ___aomod@sign 0091  
