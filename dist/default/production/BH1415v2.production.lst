

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Wed Sep 18 13:05:52 2019

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F886
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	eeprom_data,global,class=EEDATA,space=3,delta=2
     5                           	psect	idataBANK0,global,class=CODE,delta=2
     6                           	psect	strings,global,class=STRING,delta=2
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	inittext,global,class=CODE,delta=2
    12                           	psect	clrtext,global,class=CODE,delta=2
    13                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    14                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    16                           	psect	maintext,global,class=CODE,split=1,delta=2
    17                           	psect	text1,local,class=CODE,merge=1,delta=2
    18                           	psect	text2,local,class=CODE,merge=1,delta=2
    19                           	psect	text3,local,class=CODE,merge=1,delta=2
    20                           	psect	text4,local,class=CODE,merge=1,delta=2
    21                           	psect	text5,local,class=CODE,merge=1,delta=2
    22                           	psect	text6,local,class=CODE,merge=1,delta=2
    23                           	psect	text7,local,class=CODE,merge=1,delta=2
    24                           	psect	text8,local,class=CODE,merge=1,delta=2
    25                           	psect	text9,local,class=CODE,merge=1,delta=2
    26                           	psect	text10,local,class=CODE,merge=1,delta=2
    27                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    28                           	psect	text12,local,class=CODE,merge=1,delta=2,group=1
    29                           	psect	text13,local,class=CODE,merge=1,delta=2,group=1
    30                           	psect	text14,local,class=CODE,merge=1,delta=2,group=1
    31                           	psect	text15,local,class=CODE,merge=1,delta=2
    32                           	psect	text16,local,class=CODE,merge=1,delta=2
    33                           	psect	text17,local,class=CODE,merge=1,delta=2
    34                           	psect	text18,local,class=CODE,merge=1,delta=2
    35                           	psect	text19,local,class=CODE,merge=1,delta=2
    36                           	psect	text20,local,class=CODE,merge=1,delta=2
    37                           	psect	text21,local,class=CODE,merge=1,delta=2
    38                           	psect	text22,local,class=CODE,merge=1,delta=2
    39                           	psect	text23,local,class=CODE,merge=1,delta=2
    40                           	psect	text24,local,class=CODE,merge=1,delta=2
    41                           	psect	text25,local,class=CODE,merge=1,delta=2
    42                           	psect	text26,local,class=CODE,merge=1,delta=2
    43                           	psect	text27,local,class=CODE,merge=1,delta=2
    44                           	psect	text28,local,class=CODE,merge=1,delta=2
    45                           	psect	text29,local,class=CODE,merge=1,delta=2
    46                           	psect	text30,local,class=CODE,merge=1,delta=2
    47                           	psect	intentry,global,class=CODE,delta=2
    48                           	psect	text31,local,class=CODE,merge=1,delta=2
    49                           	psect	text32,local,class=CODE,merge=1,delta=2
    50                           	psect	text33,local,class=CODE,merge=1,delta=2
    51                           	psect	text34,local,class=CODE,merge=1,delta=2
    52                           	psect	text35,local,class=CODE,merge=1,delta=2
    53                           	psect	text36,local,class=CODE,merge=1,delta=2
    54                           	psect	text37,local,class=CODE,merge=1,delta=2
    55                           	psect	text38,local,class=CODE,merge=1,delta=2
    56                           	psect	text39,local,class=CODE,merge=1,delta=2
    57                           	psect	text40,local,class=CODE,merge=1,delta=2
    58                           	psect	text41,local,class=CODE,merge=1,delta=2
    59                           	psect	text42,local,class=CODE,merge=1,delta=2
    60                           	psect	text43,local,class=CODE,merge=1,delta=2
    61                           	psect	text44,local,class=CODE,merge=1,delta=2
    62                           	dabs	1,0x7E,2
    63  0000                     
    64                           ; Version 2.10
    65                           ; Generated 31/07/2019 GMT
    66                           ; 
    67                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    68                           ; All rights reserved.
    69                           ; 
    70                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    71                           ; 
    72                           ; Redistribution and use in source and binary forms, with or without modification, are
    73                           ; permitted provided that the following conditions are met:
    74                           ; 
    75                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    76                           ;        conditions and the following disclaimer.
    77                           ; 
    78                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    79                           ;        of conditions and the following disclaimer in the documentation and/or other
    80                           ;        materials provided with the distribution.
    81                           ; 
    82                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    83                           ;        software without specific prior written permission.
    84                           ; 
    85                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    86                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    87                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    88                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    89                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    90                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    91                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    92                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    93                           ; 
    94                           ; 
    95                           ; Code-generator required, PIC16F886 Definitions
    96                           ; 
    97                           ; SFR Addresses
    98  0000                     	;# 
    99  0001                     	;# 
   100  0002                     	;# 
   101  0003                     	;# 
   102  0004                     	;# 
   103  0005                     	;# 
   104  0006                     	;# 
   105  0007                     	;# 
   106  0009                     	;# 
   107  000A                     	;# 
   108  000B                     	;# 
   109  000C                     	;# 
   110  000D                     	;# 
   111  000E                     	;# 
   112  000E                     	;# 
   113  000F                     	;# 
   114  0010                     	;# 
   115  0011                     	;# 
   116  0012                     	;# 
   117  0013                     	;# 
   118  0014                     	;# 
   119  0015                     	;# 
   120  0015                     	;# 
   121  0016                     	;# 
   122  0017                     	;# 
   123  0018                     	;# 
   124  0019                     	;# 
   125  001A                     	;# 
   126  001B                     	;# 
   127  001B                     	;# 
   128  001C                     	;# 
   129  001D                     	;# 
   130  001E                     	;# 
   131  001F                     	;# 
   132  0081                     	;# 
   133  0085                     	;# 
   134  0086                     	;# 
   135  0087                     	;# 
   136  0089                     	;# 
   137  008C                     	;# 
   138  008D                     	;# 
   139  008E                     	;# 
   140  008F                     	;# 
   141  0090                     	;# 
   142  0091                     	;# 
   143  0092                     	;# 
   144  0093                     	;# 
   145  0093                     	;# 
   146  0093                     	;# 
   147  0094                     	;# 
   148  0095                     	;# 
   149  0096                     	;# 
   150  0097                     	;# 
   151  0098                     	;# 
   152  0099                     	;# 
   153  009A                     	;# 
   154  009B                     	;# 
   155  009C                     	;# 
   156  009D                     	;# 
   157  009E                     	;# 
   158  009F                     	;# 
   159  0105                     	;# 
   160  0107                     	;# 
   161  0108                     	;# 
   162  0109                     	;# 
   163  010C                     	;# 
   164  010C                     	;# 
   165  010D                     	;# 
   166  010E                     	;# 
   167  010F                     	;# 
   168  0185                     	;# 
   169  0187                     	;# 
   170  0188                     	;# 
   171  0189                     	;# 
   172  018C                     	;# 
   173  018D                     	;# 
   174                           
   175                           	psect	eeprom_data
   176  0000  00D1 0003 0000 0000 0000 0000 0001 0000 	db	209,3,0,0,0,0,1,0	;# 
   177  0000                     	;# 
   178  0001                     	;# 
   179  0002                     	;# 
   180  0003                     	;# 
   181  0004                     	;# 
   182  0005                     	;# 
   183  0006                     	;# 
   184  0007                     	;# 
   185  0009                     	;# 
   186  000A                     	;# 
   187  000B                     	;# 
   188  000C                     	;# 
   189  000D                     	;# 
   190  000E                     	;# 
   191  000E                     	;# 
   192  000F                     	;# 
   193  0010                     	;# 
   194  0011                     	;# 
   195  0012                     	;# 
   196  0013                     	;# 
   197  0014                     	;# 
   198  0015                     	;# 
   199  0015                     	;# 
   200  0016                     	;# 
   201  0017                     	;# 
   202  0018                     	;# 
   203  0019                     	;# 
   204  001A                     	;# 
   205  001B                     	;# 
   206  001B                     	;# 
   207  001C                     	;# 
   208  001D                     	;# 
   209  001E                     	;# 
   210  001F                     	;# 
   211  0081                     	;# 
   212  0085                     	;# 
   213  0086                     	;# 
   214  0087                     	;# 
   215  0089                     	;# 
   216  008C                     	;# 
   217  008D                     	;# 
   218  008E                     	;# 
   219  008F                     	;# 
   220  0090                     	;# 
   221  0091                     	;# 
   222  0092                     	;# 
   223  0093                     	;# 
   224  0093                     	;# 
   225  0093                     	;# 
   226  0094                     	;# 
   227  0095                     	;# 
   228  0096                     	;# 
   229  0097                     	;# 
   230  0098                     	;# 
   231  0099                     	;# 
   232  009A                     	;# 
   233  009B                     	;# 
   234  009C                     	;# 
   235  009D                     	;# 
   236  009E                     	;# 
   237  009F                     	;# 
   238  0105                     	;# 
   239  0107                     	;# 
   240  0108                     	;# 
   241  0109                     	;# 
   242  010C                     	;# 
   243  010C                     	;# 
   244  010D                     	;# 
   245  010E                     	;# 
   246  010F                     	;# 
   247  0185                     	;# 
   248  0187                     	;# 
   249  0188                     	;# 
   250  0189                     	;# 
   251  018C                     	;# 
   252  018D                     	;# 
   253  0008  00D1 0003 0000 0000 0000 0000 0001 0000 	db	209,3,0,0,0,0,1,0	;# 
   254  0000                     	;# 
   255  0001                     	;# 
   256  0002                     	;# 
   257  0003                     	;# 
   258  0004                     	;# 
   259  0005                     	;# 
   260  0006                     	;# 
   261  0007                     	;# 
   262  0009                     	;# 
   263  000A                     	;# 
   264  000B                     	;# 
   265  000C                     	;# 
   266  000D                     	;# 
   267  000E                     	;# 
   268  000E                     	;# 
   269  000F                     	;# 
   270  0010                     	;# 
   271  0011                     	;# 
   272  0012                     	;# 
   273  0013                     	;# 
   274  0014                     	;# 
   275  0015                     	;# 
   276  0015                     	;# 
   277  0016                     	;# 
   278  0017                     	;# 
   279  0018                     	;# 
   280  0019                     	;# 
   281  001A                     	;# 
   282  001B                     	;# 
   283  001B                     	;# 
   284  001C                     	;# 
   285  001D                     	;# 
   286  001E                     	;# 
   287  001F                     	;# 
   288  0081                     	;# 
   289  0085                     	;# 
   290  0086                     	;# 
   291  0087                     	;# 
   292  0089                     	;# 
   293  008C                     	;# 
   294  008D                     	;# 
   295  008E                     	;# 
   296  008F                     	;# 
   297  0090                     	;# 
   298  0091                     	;# 
   299  0092                     	;# 
   300  0093                     	;# 
   301  0093                     	;# 
   302  0093                     	;# 
   303  0094                     	;# 
   304  0095                     	;# 
   305  0096                     	;# 
   306  0097                     	;# 
   307  0098                     	;# 
   308  0099                     	;# 
   309  009A                     	;# 
   310  009B                     	;# 
   311  009C                     	;# 
   312  009D                     	;# 
   313  009E                     	;# 
   314  009F                     	;# 
   315  0105                     	;# 
   316  0107                     	;# 
   317  0108                     	;# 
   318  0109                     	;# 
   319  010C                     	;# 
   320  010C                     	;# 
   321  010D                     	;# 
   322  010E                     	;# 
   323  010F                     	;# 
   324  0185                     	;# 
   325  0187                     	;# 
   326  0188                     	;# 
   327  0189                     	;# 
   328  018C                     	;# 
   329  018D                     	;# 
   330  0010  00D1 0003 0000 0000 0000 0000 0001 0000 	db	209,3,0,0,0,0,1,0	;# 
   331  0000                     	;# 
   332  0001                     	;# 
   333  0002                     	;# 
   334  0003                     	;# 
   335  0004                     	;# 
   336  0005                     	;# 
   337  0006                     	;# 
   338  0007                     	;# 
   339  0009                     	;# 
   340  000A                     	;# 
   341  000B                     	;# 
   342  000C                     	;# 
   343  000D                     	;# 
   344  000E                     	;# 
   345  000E                     	;# 
   346  000F                     	;# 
   347  0010                     	;# 
   348  0011                     	;# 
   349  0012                     	;# 
   350  0013                     	;# 
   351  0014                     	;# 
   352  0015                     	;# 
   353  0015                     	;# 
   354  0016                     	;# 
   355  0017                     	;# 
   356  0018                     	;# 
   357  0019                     	;# 
   358  001A                     	;# 
   359  001B                     	;# 
   360  001B                     	;# 
   361  001C                     	;# 
   362  001D                     	;# 
   363  001E                     	;# 
   364  001F                     	;# 
   365  0081                     	;# 
   366  0085                     	;# 
   367  0086                     	;# 
   368  0087                     	;# 
   369  0089                     	;# 
   370  008C                     	;# 
   371  008D                     	;# 
   372  008E                     	;# 
   373  008F                     	;# 
   374  0090                     	;# 
   375  0091                     	;# 
   376  0092                     	;# 
   377  0093                     	;# 
   378  0093                     	;# 
   379  0093                     	;# 
   380  0094                     	;# 
   381  0095                     	;# 
   382  0096                     	;# 
   383  0097                     	;# 
   384  0098                     	;# 
   385  0099                     	;# 
   386  009A                     	;# 
   387  009B                     	;# 
   388  009C                     	;# 
   389  009D                     	;# 
   390  009E                     	;# 
   391  009F                     	;# 
   392  0105                     	;# 
   393  0107                     	;# 
   394  0108                     	;# 
   395  0109                     	;# 
   396  010C                     	;# 
   397  010C                     	;# 
   398  010D                     	;# 
   399  010E                     	;# 
   400  010F                     	;# 
   401  0185                     	;# 
   402  0187                     	;# 
   403  0188                     	;# 
   404  0189                     	;# 
   405  018C                     	;# 
   406  018D                     	;# 
   407  0018  00D1 0003 0000 0000 0000 0000 0001 0000 	db	209,3,0,0,0,0,1,0	;# 
   408  0000                     	;# 
   409  0001                     	;# 
   410  0002                     	;# 
   411  0003                     	;# 
   412  0004                     	;# 
   413  0005                     	;# 
   414  0006                     	;# 
   415  0007                     	;# 
   416  0009                     	;# 
   417  000A                     	;# 
   418  000B                     	;# 
   419  000C                     	;# 
   420  000D                     	;# 
   421  000E                     	;# 
   422  000E                     	;# 
   423  000F                     	;# 
   424  0010                     	;# 
   425  0011                     	;# 
   426  0012                     	;# 
   427  0013                     	;# 
   428  0014                     	;# 
   429  0015                     	;# 
   430  0015                     	;# 
   431  0016                     	;# 
   432  0017                     	;# 
   433  0018                     	;# 
   434  0019                     	;# 
   435  001A                     	;# 
   436  001B                     	;# 
   437  001B                     	;# 
   438  001C                     	;# 
   439  001D                     	;# 
   440  001E                     	;# 
   441  001F                     	;# 
   442  0081                     	;# 
   443  0085                     	;# 
   444  0086                     	;# 
   445  0087                     	;# 
   446  0089                     	;# 
   447  008C                     	;# 
   448  008D                     	;# 
   449  008E                     	;# 
   450  008F                     	;# 
   451  0090                     	;# 
   452  0091                     	;# 
   453  0092                     	;# 
   454  0093                     	;# 
   455  0093                     	;# 
   456  0093                     	;# 
   457  0094                     	;# 
   458  0095                     	;# 
   459  0096                     	;# 
   460  0097                     	;# 
   461  0098                     	;# 
   462  0099                     	;# 
   463  009A                     	;# 
   464  009B                     	;# 
   465  009C                     	;# 
   466  009D                     	;# 
   467  009E                     	;# 
   468  009F                     	;# 
   469  0105                     	;# 
   470  0107                     	;# 
   471  0108                     	;# 
   472  0109                     	;# 
   473  010C                     	;# 
   474  010C                     	;# 
   475  010D                     	;# 
   476  010E                     	;# 
   477  010F                     	;# 
   478  0185                     	;# 
   479  0187                     	;# 
   480  0188                     	;# 
   481  0189                     	;# 
   482  018C                     	;# 
   483  018D                     	;# 
   484  0020  00D1 0003 0000 0000 0000 0000 0001 0000 	db	209,3,0,0,0,0,1,0	;# 
   485  0000                     	;# 
   486  0001                     	;# 
   487  0002                     	;# 
   488  0003                     	;# 
   489  0004                     	;# 
   490  0005                     	;# 
   491  0006                     	;# 
   492  0007                     	;# 
   493  0009                     	;# 
   494  000A                     	;# 
   495  000B                     	;# 
   496  000C                     	;# 
   497  000D                     	;# 
   498  000E                     	;# 
   499  000E                     	;# 
   500  000F                     	;# 
   501  0010                     	;# 
   502  0011                     	;# 
   503  0012                     	;# 
   504  0013                     	;# 
   505  0014                     	;# 
   506  0015                     	;# 
   507  0015                     	;# 
   508  0016                     	;# 
   509  0017                     	;# 
   510  0018                     	;# 
   511  0019                     	;# 
   512  001A                     	;# 
   513  001B                     	;# 
   514  001B                     	;# 
   515  001C                     	;# 
   516  001D                     	;# 
   517  001E                     	;# 
   518  001F                     	;# 
   519  0081                     	;# 
   520  0085                     	;# 
   521  0086                     	;# 
   522  0087                     	;# 
   523  0089                     	;# 
   524  008C                     	;# 
   525  008D                     	;# 
   526  008E                     	;# 
   527  008F                     	;# 
   528  0090                     	;# 
   529  0091                     	;# 
   530  0092                     	;# 
   531  0093                     	;# 
   532  0093                     	;# 
   533  0093                     	;# 
   534  0094                     	;# 
   535  0095                     	;# 
   536  0096                     	;# 
   537  0097                     	;# 
   538  0098                     	;# 
   539  0099                     	;# 
   540  009A                     	;# 
   541  009B                     	;# 
   542  009C                     	;# 
   543  009D                     	;# 
   544  009E                     	;# 
   545  009F                     	;# 
   546  0105                     	;# 
   547  0107                     	;# 
   548  0108                     	;# 
   549  0109                     	;# 
   550  010C                     	;# 
   551  010C                     	;# 
   552  010D                     	;# 
   553  010E                     	;# 
   554  010F                     	;# 
   555  0185                     	;# 
   556  0187                     	;# 
   557  0188                     	;# 
   558  0189                     	;# 
   559  018C                     	;# 
   560  018D                     	;# 
   561  0028  00D1 0003 0000 0000 0000 0000 0001 0000 	db	209,3,0,0,0,0,1,0	;# 
   562  0000                     	;# 
   563  0001                     	;# 
   564  0002                     	;# 
   565  0003                     	;# 
   566  0004                     	;# 
   567  0005                     	;# 
   568  0006                     	;# 
   569  0007                     	;# 
   570  0009                     	;# 
   571  000A                     	;# 
   572  000B                     	;# 
   573  000C                     	;# 
   574  000D                     	;# 
   575  000E                     	;# 
   576  000E                     	;# 
   577  000F                     	;# 
   578  0010                     	;# 
   579  0011                     	;# 
   580  0012                     	;# 
   581  0013                     	;# 
   582  0014                     	;# 
   583  0015                     	;# 
   584  0015                     	;# 
   585  0016                     	;# 
   586  0017                     	;# 
   587  0018                     	;# 
   588  0019                     	;# 
   589  001A                     	;# 
   590  001B                     	;# 
   591  001B                     	;# 
   592  001C                     	;# 
   593  001D                     	;# 
   594  001E                     	;# 
   595  001F                     	;# 
   596  0081                     	;# 
   597  0085                     	;# 
   598  0086                     	;# 
   599  0087                     	;# 
   600  0089                     	;# 
   601  008C                     	;# 
   602  008D                     	;# 
   603  008E                     	;# 
   604  008F                     	;# 
   605  0090                     	;# 
   606  0091                     	;# 
   607  0092                     	;# 
   608  0093                     	;# 
   609  0093                     	;# 
   610  0093                     	;# 
   611  0094                     	;# 
   612  0095                     	;# 
   613  0096                     	;# 
   614  0097                     	;# 
   615  0098                     	;# 
   616  0099                     	;# 
   617  009A                     	;# 
   618  009B                     	;# 
   619  009C                     	;# 
   620  009D                     	;# 
   621  009E                     	;# 
   622  009F                     	;# 
   623  0105                     	;# 
   624  0107                     	;# 
   625  0108                     	;# 
   626  0109                     	;# 
   627  010C                     	;# 
   628  010C                     	;# 
   629  010D                     	;# 
   630  010E                     	;# 
   631  010F                     	;# 
   632  0185                     	;# 
   633  0187                     	;# 
   634  0188                     	;# 
   635  0189                     	;# 
   636  018C                     	;# 
   637  018D                     	;# 
   638                           
   639                           	psect	idataBANK0
   640  17E1                     __pidataBANK0:	
   641                           
   642                           ;initializer for _frequency
   643  17E1  346F               	retlw	111
   644  17E2  3400               	retlw	0
   645                           
   646                           ;initializer for _stereoEnable
   647  17E3  3401               	retlw	1
   648                           
   649                           ;initializer for _minutes
   650  17E4  340F               	retlw	15
   651                           
   652                           ;initializer for _hours
   653  17E5  3416               	retlw	22
   654                           
   655                           ;initializer for _days
   656  17E6  3413               	retlw	19
   657                           
   658                           ;initializer for _months
   659  17E7  3403               	retlw	3
   660                           
   661                           ;initializer for _prTmr1H
   662  17E8  343C               	retlw	60
   663                           
   664                           ;initializer for _prTmr1L
   665  17E9  34B0               	retlw	176
   666                           
   667                           	psect	strings
   668  0800                     __pstrings:	
   669  0800                     stringtab:	
   670  0800                     __stringtab:	
   671  0800                     stringcode:	
   672                           ;	String table - string pointers are 1 byte each
   673                           
   674  0800                     stringdir:	
   675  0800  3008               	movlw	high stringdir
   676  0801  008A               	movwf	10
   677  0802  0804               	movf	4,w
   678  0803  0A84               	incf	4,f
   679  0804  0782               	addwf	2,f
   680  0805                     __stringbase:	
   681  0805  3400               	retlw	0
   682  0806                     __end_of__stringtab:	
   683  0806                     _dpowers:	
   684  0806  3401               	retlw	1
   685  0807  3400               	retlw	0
   686  0808  340A               	retlw	10
   687  0809  3400               	retlw	0
   688  080A  3464               	retlw	100
   689  080B  3400               	retlw	0
   690  080C  34E8               	retlw	232
   691  080D  3403               	retlw	3
   692  080E  3410               	retlw	16
   693  080F  3427               	retlw	39
   694  0810                     __end_of_dpowers:	
   695  0810                     _FINAL_DAY:	
   696  0810  340D               	retlw	13
   697  0811                     __end_of_FINAL_DAY:	
   698  0811                     _FINAL_MONTH:	
   699  0811  3406               	retlw	6
   700  0812                     __end_of_FINAL_MONTH:	
   701  0812                     _UN_BLOCKED:	
   702  0812  3401               	retlw	1
   703  0813                     __end_of_UN_BLOCKED:	
   704  0813                     _BLOCKED:	
   705  0813  3400               	retlw	0
   706  0814                     __end_of_BLOCKED:	
   707  0019                     _TXREG	set	25
   708  0006                     _PORTBbits	set	6
   709  001A                     _RCREG	set	26
   710  000E                     _TMR1L	set	14
   711  000F                     _TMR1H	set	15
   712  000C                     _PIR1bits	set	12
   713  0010                     _T1CONbits	set	16
   714  0007                     _PORTCbits	set	7
   715  0018                     _RCSTA	set	24
   716  001F                     _ADCON0	set	31
   717  0010                     _T1CON	set	16
   718  0007                     _PORTC	set	7
   719  0006                     _PORTB	set	6
   720  0005                     _PORTA	set	5
   721  000B                     _INTCON	set	11
   722  0005                     _PORTAbits	set	5
   723  000D                     _PIR2bits	set	13
   724  000B                     _INTCONbits	set	11
   725  0064                     _TXIF	set	100
   726  0086                     _TRISBbits	set	134
   727  0099                     _SPBRG	set	153
   728  0098                     _TXSTA	set	152
   729  009F                     _ADCON1	set	159
   730  0087                     _TRISC	set	135
   731  0086                     _TRISB	set	134
   732  0085                     _TRISA	set	133
   733  008C                     _PIE1	set	140
   734  010C                     _EEDATA	set	268
   735  010D                     _EEADR	set	269
   736  0187                     _BAUDCTL	set	391
   737  0189                     _ANSELH	set	393
   738  0188                     _ANSEL	set	392
   739  018D                     _EECON2	set	397
   740  018C                     _EECON1bits	set	396
   741  0814                     STR_9:	
   742  0814  3446               	retlw	70	;'F'
   743  0815  3452               	retlw	82	;'R'
   744  0816  3445               	retlw	69	;'E'
   745  0817  3451               	retlw	81	;'Q'
   746  0818  342E               	retlw	46	;'.'
   747  0819  3420               	retlw	32	;' '
   748  081A  3420               	retlw	32	;' '
   749  081B  3425               	retlw	37	;'%'
   750  081C  3433               	retlw	51	;'3'
   751  081D  3464               	retlw	100	;'d'
   752  081E  342E               	retlw	46	;'.'
   753  081F  3425               	retlw	37	;'%'
   754  0820  3464               	retlw	100	;'d'
   755  0821  3420               	retlw	32	;' '
   756  0822  344D               	retlw	77	;'M'
   757  0823  3448               	retlw	72	;'H'
   758  0824  347A               	retlw	122	;'z'
   759  0825  3400               	retlw	0
   760  0826                     STR_10:	
   761  0826  344C               	retlw	76	;'L'
   762  0827  344F               	retlw	79	;'O'
   763  0828  3443               	retlw	67	;'C'
   764  0829  344B               	retlw	75	;'K'
   765  082A  3449               	retlw	73	;'I'
   766  082B  344E               	retlw	78	;'N'
   767  082C  3447               	retlw	71	;'G'
   768  082D  3420               	retlw	32	;' '
   769  082E  3420               	retlw	32	;' '
   770  082F  3420               	retlw	32	;' '
   771  0830  3420               	retlw	32	;' '
   772  0831  3420               	retlw	32	;' '
   773  0832  3420               	retlw	32	;' '
   774  0833  3420               	retlw	32	;' '
   775  0834  3420               	retlw	32	;' '
   776  0835  3420               	retlw	32	;' '
   777  0836  3400               	retlw	0
   778  0837                     STR_1:	
   779  0837  3454               	retlw	84	;'T'
   780  0838  3445               	retlw	69	;'E'
   781  0839  3453               	retlw	83	;'S'
   782  083A  3454               	retlw	84	;'T'
   783  083B  3449               	retlw	73	;'I'
   784  083C  344E               	retlw	78	;'N'
   785  083D  3447               	retlw	71	;'G'
   786  083E  3420               	retlw	32	;' '
   787  083F  3420               	retlw	32	;' '
   788  0840  3420               	retlw	32	;' '
   789  0841  3420               	retlw	32	;' '
   790  0842  3420               	retlw	32	;' '
   791  0843  3420               	retlw	32	;' '
   792  0844  3420               	retlw	32	;' '
   793  0845  3420               	retlw	32	;' '
   794  0846  3420               	retlw	32	;' '
   795  0847  3400               	retlw	0
   796  0848                     STR_7:	
   797  0848  3453               	retlw	83	;'S'
   798  0849  3445               	retlw	69	;'E'
   799  084A  3454               	retlw	84	;'T'
   800  084B  3420               	retlw	32	;' '
   801  084C  3420               	retlw	32	;' '
   802  084D  3420               	retlw	32	;' '
   803  084E  3446               	retlw	70	;'F'
   804  084F  3452               	retlw	82	;'R'
   805  0850  3445               	retlw	69	;'E'
   806  0851  3451               	retlw	81	;'Q'
   807  0852  3455               	retlw	85	;'U'
   808  0853  3445               	retlw	69	;'E'
   809  0854  344E               	retlw	78	;'N'
   810  0855  3443               	retlw	67	;'C'
   811  0856  3459               	retlw	89	;'Y'
   812  0857  3420               	retlw	32	;' '
   813  0858  3400               	retlw	0
   814  0859                     STR_4:	
   815  0859  3420               	retlw	32	;' '
   816  085A  3420               	retlw	32	;' '
   817  085B  3420               	retlw	32	;' '
   818  085C  3420               	retlw	32	;' '
   819  085D  3420               	retlw	32	;' '
   820  085E  3454               	retlw	84	;'T'
   821  085F  3445               	retlw	69	;'E'
   822  0860  344D               	retlw	77	;'M'
   823  0861  3450               	retlw	80	;'P'
   824  0862  3445               	retlw	69	;'E'
   825  0863  3452               	retlw	82	;'R'
   826  0864  3441               	retlw	65	;'A'
   827  0865  3454               	retlw	84	;'T'
   828  0866  3455               	retlw	85	;'U'
   829  0867  3452               	retlw	82	;'R'
   830  0868  3445               	retlw	69	;'E'
   831  0869  3400               	retlw	0
   832  086A                     STR_8:	
   833  086A  3441               	retlw	65	;'A'
   834  086B  344D               	retlw	77	;'M'
   835  086C  3450               	retlw	80	;'P'
   836  086D  3452               	retlw	82	;'R'
   837  086E  344F               	retlw	79	;'O'
   838  086F  3420               	retlw	32	;' '
   839  0870  3420               	retlw	32	;' '
   840  0871  3420               	retlw	32	;' '
   841  0872  3420               	retlw	32	;' '
   842  0873  3420               	retlw	32	;' '
   843  0874  3420               	retlw	32	;' '
   844  0875  3445               	retlw	69	;'E'
   845  0876  3458               	retlw	88	;'X'
   846  0877  342D               	retlw	45	;'-'
   847  0878  3446               	retlw	70	;'F'
   848  0879  344D               	retlw	77	;'M'
   849  087A  3400               	retlw	0
   850  087B                     STR_6:	
   851  087B  3420               	retlw	32	;' '
   852  087C  3420               	retlw	32	;' '
   853  087D  3420               	retlw	32	;' '
   854  087E  3420               	retlw	32	;' '
   855  087F  3420               	retlw	32	;' '
   856  0880  3420               	retlw	32	;' '
   857  0881  3420               	retlw	32	;' '
   858  0882  3420               	retlw	32	;' '
   859  0883  3420               	retlw	32	;' '
   860  0884  3420               	retlw	32	;' '
   861  0885  3420               	retlw	32	;' '
   862  0886  3420               	retlw	32	;' '
   863  0887  3420               	retlw	32	;' '
   864  0888  3453               	retlw	83	;'S'
   865  0889  3457               	retlw	87	;'W'
   866  088A  3452               	retlw	82	;'R'
   867  088B  3400               	retlw	0
   868  088C                     STR_11:	
   869  088C  3420               	retlw	32	;' '
   870  088D  3420               	retlw	32	;' '
   871  088E  3420               	retlw	32	;' '
   872  088F  3420               	retlw	32	;' '
   873  0890  3420               	retlw	32	;' '
   874  0891  3420               	retlw	32	;' '
   875  0892  3420               	retlw	32	;' '
   876  0893  3446               	retlw	70	;'F'
   877  0894  3452               	retlw	82	;'R'
   878  0895  3445               	retlw	69	;'E'
   879  0896  3451               	retlw	81	;'Q'
   880  0897  3455               	retlw	85	;'U'
   881  0898  3445               	retlw	69	;'E'
   882  0899  344E               	retlw	78	;'N'
   883  089A  3443               	retlw	67	;'C'
   884  089B  3459               	retlw	89	;'Y'
   885  089C  3400               	retlw	0
   886  089D                     STR_2:	
   887  089D  3420               	retlw	32	;' '
   888  089E  3420               	retlw	32	;' '
   889  089F  3420               	retlw	32	;' '
   890  08A0  3420               	retlw	32	;' '
   891  08A1  3420               	retlw	32	;' '
   892  08A2  3420               	retlw	32	;' '
   893  08A3  3420               	retlw	32	;' '
   894  08A4  3420               	retlw	32	;' '
   895  08A5  3420               	retlw	32	;' '
   896  08A6  3420               	retlw	32	;' '
   897  08A7  3453               	retlw	83	;'S'
   898  08A8  3455               	retlw	85	;'U'
   899  08A9  3450               	retlw	80	;'P'
   900  08AA  3450               	retlw	80	;'P'
   901  08AB  344C               	retlw	76	;'L'
   902  08AC  3459               	retlw	89	;'Y'
   903  08AD  3400               	retlw	0
   904  0837                     
   905                           ; #config settings
   906  0000                     
   907                           	psect	cinit
   908  0015                     start_initialization:	
   909  0015                     __initialization:	
   910                           
   911                           ; Initialize objects allocated to BANK0
   912  0015  1383               	bcf	3,7	;select IRP bank0
   913  0016  304D               	movlw	low (__pdataBANK0+9)
   914  0017  00FD               	movwf	btemp+-1
   915  0018  3017               	movlw	high __pidataBANK0
   916  0019  00FE               	movwf	btemp
   917  001A  30E1               	movlw	low __pidataBANK0
   918  001B  00FF               	movwf	btemp+1
   919  001C  3044               	movlw	low __pdataBANK0
   920  001D  0084               	movwf	4
   921  001E  120A  158A  20F1  120A  118A  	fcall	init_ram0
   922                           
   923                           ; Clear objects allocated to BANK1
   924  0023  30A0               	movlw	low __pbssBANK1
   925  0024  0084               	movwf	4
   926  0025  30C3               	movlw	low (__pbssBANK1+35)
   927  0026  160A  118A  27D9  120A  118A  	fcall	clear_ram0
   928                           
   929                           ; Clear objects allocated to BANK0
   930  002B  01CD               	clrf	__pbssBANK0& (0+127)
   931  002C  01CE               	clrf	(__pbssBANK0+1)& (0+127)
   932  002D  01CF               	clrf	(__pbssBANK0+2)& (0+127)
   933  002E  01D0               	clrf	(__pbssBANK0+3)& (0+127)
   934  002F  01D1               	clrf	(__pbssBANK0+4)& (0+127)
   935  0030  01D2               	clrf	(__pbssBANK0+5)& (0+127)
   936  0031                     end_of_initialization:	
   937                           ;End of C runtime variable initialization code
   938                           
   939  0031                     __end_of__initialization:	
   940  0031  0183               	clrf	3
   941  0032  120A  118A  2F23   	ljmp	_main	;jump to C main() function
   942                           
   943                           	psect	bssBANK0
   944  004D                     __pbssBANK0:	
   945  004D                     _level:	
   946  004D                     	ds	1
   947  004E                     _isOnConfig:	
   948  004E                     	ds	1
   949  004F                     _functionalStat:	
   950  004F                     	ds	1
   951  0050                     _hundredMiliSeconds:	
   952  0050                     	ds	1
   953  0051                     _seconds:	
   954  0051                     	ds	1
   955  0052                     _cntTmr1:	
   956  0052                     	ds	1
   957                           
   958                           	psect	dataBANK0
   959  0044                     __pdataBANK0:	
   960  0044                     _frequency:	
   961  0044                     	ds	2
   962  0046                     _stereoEnable:	
   963  0046                     	ds	1
   964  0047                     _minutes:	
   965  0047                     	ds	1
   966  0048                     _hours:	
   967  0048                     	ds	1
   968  0049                     _days:	
   969  0049                     	ds	1
   970  004A                     _months:	
   971  004A                     	ds	1
   972  004B                     _prTmr1H:	
   973  004B                     	ds	1
   974  004C                     _prTmr1L:	
   975  004C                     	ds	1
   976                           
   977                           	psect	bssBANK1
   978  00A0                     __pbssBANK1:	
   979  00A0                     _i:	
   980  00A0                     	ds	1
   981  00A1                     _lineTwo:	
   982  00A1                     	ds	17
   983  00B2                     _lineOne:	
   984  00B2                     	ds	17
   985                           
   986                           	psect	inittext
   987  08ED                     init_fetch0:	
   988                           ;	Called with low address in FSR and high address in W
   989                           
   990  08ED  087E               	movf	btemp,w
   991  08EE  008A               	movwf	10
   992  08EF  087F               	movf	btemp+1,w
   993  08F0  0082               	movwf	2
   994  08F1                     init_ram0:	
   995                           ;Called with:
   996                           ;	high address of idata address in btemp 
   997                           ;	low address of idata address in btemp+1 
   998                           ;	low address of data in FSR
   999                           ;	high address + 1 of data in btemp-1
  1000                           
  1001  08F1  120A  158A  20ED  120A  158A  	fcall	init_fetch0
  1002  08F6  0080               	movwf	0
  1003  08F7  0A84               	incf	4,f
  1004  08F8  0804               	movf	4,w
  1005  08F9  067D               	xorwf	btemp+-1,w
  1006  08FA  1903               	btfsc	3,2
  1007  08FB  3400               	retlw	0
  1008  08FC  0AFF               	incf	btemp+1,f
  1009  08FD  1903               	btfsc	3,2
  1010  08FE  0AFE               	incf	btemp,f
  1011  08FF  28F1               	goto	init_ram0
  1012                           
  1013                           	psect	clrtext
  1014  17D9                     clear_ram0:	
  1015                           ;	Called with FSR containing the base address, and
  1016                           ;	W with the last address+1
  1017                           
  1018  17D9  0064               	clrwdt	;clear the watchdog before getting into this loop
  1019  17DA                     clrloop0:	
  1020  17DA  0180               	clrf	0	;clear RAM location pointed to by FSR
  1021  17DB  0A84               	incf	4,f	;increment pointer
  1022  17DC  0604               	xorwf	4,w	;XOR with final address
  1023  17DD  1903               	btfsc	3,2	;have we reached the end yet?
  1024  17DE  3400               	retlw	0	;all done for this memory range, return
  1025  17DF  0604               	xorwf	4,w	;XOR again to restore value
  1026  17E0  2FDA               	goto	clrloop0	;do the next byte
  1027                           
  1028                           	psect	cstackBANK1
  1029  00C3                     __pcstackBANK1:	
  1030  00C3                     ?_beep:	
  1031  00C3                     ??_initLCD:	
  1032                           ; 1 bytes @ 0x0
  1033                           
  1034  00C3                     ___lwdiv@counter:	
  1035                           ; 1 bytes @ 0x0
  1036                           
  1037  00C3                     beep@ms:	
  1038                           ; 1 bytes @ 0x0
  1039                           
  1040                           
  1041                           ; 2 bytes @ 0x0
  1042  00C3                     	ds	1
  1043  00C4                     ___lwdiv@quotient:	
  1044                           
  1045                           ; 2 bytes @ 0x1
  1046  00C4                     	ds	1
  1047  00C5                     ?_writeFrequency:	
  1048  00C5                     writeFrequency@f:	
  1049                           ; 1 bytes @ 0x2
  1050                           
  1051                           
  1052                           ; 2 bytes @ 0x2
  1053  00C5                     	ds	1
  1054  00C6                     ?___lwmod:	
  1055  00C6                     ___lwmod@divisor:	
  1056                           ; 2 bytes @ 0x3
  1057                           
  1058                           
  1059                           ; 2 bytes @ 0x3
  1060  00C6                     	ds	1
  1061  00C7                     ??_writeFrequency:	
  1062                           
  1063                           ; 1 bytes @ 0x4
  1064  00C7                     	ds	1
  1065  00C8                     ___lwmod@dividend:	
  1066                           
  1067                           ; 2 bytes @ 0x5
  1068  00C8                     	ds	2
  1069  00CA                     ?_sprintf:	
  1070  00CA                     sprintf@f:	
  1071                           ; 2 bytes @ 0x7
  1072                           
  1073  00CA                     writeFrequency@buffer:	
  1074                           ; 1 bytes @ 0x7
  1075                           
  1076                           
  1077                           ; 2 bytes @ 0x7
  1078  00CA                     	ds	2
  1079  00CC                     writeFrequency@r:	
  1080                           
  1081                           ; 2 bytes @ 0x9
  1082  00CC                     	ds	3
  1083  00CF                     ??_sprintf:	
  1084                           
  1085                           ; 1 bytes @ 0xC
  1086  00CF                     	ds	3
  1087  00D2                     sprintf@ap:	
  1088                           
  1089                           ; 1 bytes @ 0xF
  1090  00D2                     	ds	1
  1091  00D3                     sprintf@prec:	
  1092                           
  1093                           ; 1 bytes @ 0x10
  1094  00D3                     	ds	1
  1095  00D4                     sprintf@flag:	
  1096                           
  1097                           ; 1 bytes @ 0x11
  1098  00D4                     	ds	1
  1099  00D5                     sprintf@val:	
  1100                           
  1101                           ; 2 bytes @ 0x12
  1102  00D5                     	ds	2
  1103  00D7                     sprintf@width:	
  1104                           
  1105                           ; 2 bytes @ 0x14
  1106  00D7                     	ds	2
  1107  00D9                     sprintf@sp:	
  1108                           
  1109                           ; 1 bytes @ 0x16
  1110  00D9                     	ds	1
  1111  00DA                     sprintf@c:	
  1112                           
  1113                           ; 1 bytes @ 0x17
  1114  00DA                     	ds	1
  1115  00DB                     ??_start:	
  1116  00DB                     ??_lockingScreen:	
  1117                           ; 1 bytes @ 0x18
  1118                           
  1119  00DB                     ??_principalScreen:	
  1120                           ; 1 bytes @ 0x18
  1121                           
  1122                           
  1123                           ; 1 bytes @ 0x18
  1124  00DB                     	ds	1
  1125  00DC                     ??_setFrequency:	
  1126                           
  1127                           ; 1 bytes @ 0x19
  1128  00DC                     	ds	2
  1129  00DE                     start@i:	
  1130                           
  1131                           ; 1 bytes @ 0x1B
  1132  00DE                     	ds	2
  1133  00E0                     principalScreen@decim:	
  1134                           
  1135                           ; 1 bytes @ 0x1D
  1136  00E0                     	ds	1
  1137  00E1                     principalScreen@integ:	
  1138                           
  1139                           ; 1 bytes @ 0x1E
  1140  00E1                     	ds	1
  1141  00E2                     ??_main:	
  1142                           
  1143                           ; 1 bytes @ 0x1F
  1144  00E2                     	ds	3
  1145                           
  1146                           	psect	cstackCOMMON
  1147  0070                     __pcstackCOMMON:	
  1148  0070                     ?_isdigit:	
  1149  0070                     ?i1_isdigit:	
  1150                           ; 1 bit 
  1151                           
  1152  0070                     ?_config:	
  1153                           ; 1 bit 
  1154                           
  1155  0070                     ?_setFrequency:	
  1156                           ; 1 bytes @ 0x0
  1157                           
  1158  0070                     ?_start:	
  1159                           ; 1 bytes @ 0x0
  1160                           
  1161  0070                     ?_lockingScreen:	
  1162                           ; 1 bytes @ 0x0
  1163                           
  1164  0070                     ?_principalScreen:	
  1165                           ; 1 bytes @ 0x0
  1166                           
  1167  0070                     ?_initLCD:	
  1168                           ; 1 bytes @ 0x0
  1169                           
  1170  0070                     ?_SetDDRamAddr:	
  1171                           ; 1 bytes @ 0x0
  1172                           
  1173  0070                     ?_putsXLCD:	
  1174                           ; 1 bytes @ 0x0
  1175                           
  1176  0070                     ?_time:	
  1177                           ; 1 bytes @ 0x0
  1178                           
  1179  0070                     ?_updateLCD:	
  1180                           ; 1 bytes @ 0x0
  1181                           
  1182  0070                     ?_putrsXLCD:	
  1183                           ; 1 bytes @ 0x0
  1184                           
  1185  0070                     ?_WriteCmdXLCD:	
  1186                           ; 1 bytes @ 0x0
  1187                           
  1188  0070                     ?_BusyXLCD:	
  1189                           ; 1 bytes @ 0x0
  1190                           
  1191  0070                     ?_SendCMDLCD:	
  1192                           ; 1 bytes @ 0x0
  1193                           
  1194  0070                     ?_readEEPROM:	
  1195                           ; 1 bytes @ 0x0
  1196                           
  1197  0070                     ?_getData:	
  1198                           ; 1 bytes @ 0x0
  1199                           
  1200  0070                     ?_setData:	
  1201                           ; 1 bytes @ 0x0
  1202                           
  1203  0070                     ?_main:	
  1204                           ; 1 bytes @ 0x0
  1205                           
  1206  0070                     ?_inter:	
  1207                           ; 1 bytes @ 0x0
  1208                           
  1209  0070                     ?_DelayFor18TCY:	
  1210                           ; 1 bytes @ 0x0
  1211                           
  1212  0070                     ?_DelayPORXLCD:	
  1213                           ; 1 bytes @ 0x0
  1214                           
  1215  0070                     ?_OpenXLCD:	
  1216                           ; 1 bytes @ 0x0
  1217                           
  1218  0070                     ?_WriteDataXLCD:	
  1219                           ; 1 bytes @ 0x0
  1220                           
  1221  0070                     ?i1_writeEEPROM:	
  1222                           ; 1 bytes @ 0x0
  1223                           
  1224  0070                     ?i1_setData:	
  1225                           ; 1 bytes @ 0x0
  1226                           
  1227  0070                     ?i1_DelayFor18TCY:	
  1228                           ; 1 bytes @ 0x0
  1229                           
  1230  0070                     ??i1_DelayFor18TCY:	
  1231                           ; 1 bytes @ 0x0
  1232                           
  1233  0070                     ?i1_WriteDataXLCD:	
  1234                           ; 1 bytes @ 0x0
  1235                           
  1236  0070                     ?i1_SetDDRamAddr:	
  1237                           ; 1 bytes @ 0x0
  1238                           
  1239  0070                     ?i1_putsXLCD:	
  1240                           ; 1 bytes @ 0x0
  1241                           
  1242  0070                     ?i1_BusyXLCD:	
  1243                           ; 1 bytes @ 0x0
  1244                           
  1245  0070                     ??i1_BusyXLCD:	
  1246                           ; 1 bytes @ 0x0
  1247                           
  1248  0070                     ??i1_isdigit:	
  1249                           ; 1 bytes @ 0x0
  1250                           
  1251  0070                     ?i1___wmul:	
  1252                           ; 1 bytes @ 0x0
  1253                           
  1254  0070                     ?i1___lwdiv:	
  1255                           ; 2 bytes @ 0x0
  1256                           
  1257  0070                     setData@full:	
  1258                           ; 2 bytes @ 0x0
  1259                           
  1260  0070                     i1writeEEPROM@address:	
  1261                           ; 1 bytes @ 0x0
  1262                           
  1263  0070                     i1_isdigit$1166:	
  1264                           ; 1 bytes @ 0x0
  1265                           
  1266  0070                     i1___wmul@multiplier:	
  1267                           ; 1 bytes @ 0x0
  1268                           
  1269  0070                     i1___lwdiv@divisor:	
  1270                           ; 2 bytes @ 0x0
  1271                           
  1272                           
  1273                           ; 2 bytes @ 0x0
  1274  0070                     	ds	1
  1275  0071                     ??i1_writeEEPROM:	
  1276  0071                     ??i1_WriteDataXLCD:	
  1277                           ; 1 bytes @ 0x1
  1278                           
  1279  0071                     ??i1_SetDDRamAddr:	
  1280                           ; 1 bytes @ 0x1
  1281                           
  1282  0071                     i1writeEEPROM@data:	
  1283                           ; 1 bytes @ 0x1
  1284                           
  1285  0071                     i1isdigit@c:	
  1286                           ; 1 bytes @ 0x1
  1287                           
  1288                           
  1289                           ; 1 bytes @ 0x1
  1290  0071                     	ds	1
  1291  0072                     ??i1_setData:	
  1292  0072                     i1___wmul@multiplicand:	
  1293                           ; 1 bytes @ 0x2
  1294                           
  1295  0072                     i1___lwdiv@dividend:	
  1296                           ; 2 bytes @ 0x2
  1297                           
  1298                           
  1299                           ; 2 bytes @ 0x2
  1300  0072                     	ds	1
  1301  0073                     i1setData@data0:	
  1302  0073                     i1WriteDataXLCD@data:	
  1303                           ; 1 bytes @ 0x3
  1304                           
  1305  0073                     i1SetDDRamAddr@DDaddr:	
  1306                           ; 1 bytes @ 0x3
  1307                           
  1308                           
  1309                           ; 1 bytes @ 0x3
  1310  0073                     	ds	1
  1311  0074                     ??i1_putsXLCD:	
  1312  0074                     ??i1___wmul:	
  1313                           ; 1 bytes @ 0x4
  1314                           
  1315  0074                     ??i1___lwdiv:	
  1316                           ; 1 bytes @ 0x4
  1317                           
  1318  0074                     i1setData@data1:	
  1319                           ; 1 bytes @ 0x4
  1320                           
  1321  0074                     i1___wmul@product:	
  1322                           ; 1 bytes @ 0x4
  1323                           
  1324                           
  1325                           ; 2 bytes @ 0x4
  1326  0074                     	ds	1
  1327  0075                     ??_time:	
  1328  0075                     i1putsXLCD@buffer:	
  1329                           ; 1 bytes @ 0x5
  1330                           
  1331  0075                     i1___lwdiv@quotient:	
  1332                           ; 1 bytes @ 0x5
  1333                           
  1334                           
  1335                           ; 2 bytes @ 0x5
  1336  0075                     	ds	2
  1337  0077                     i1___lwdiv@counter:	
  1338                           
  1339                           ; 1 bytes @ 0x7
  1340  0077                     	ds	1
  1341  0078                     ?i1___lwmod:	
  1342  0078                     i1___lwmod@divisor:	
  1343                           ; 2 bytes @ 0x8
  1344                           
  1345                           
  1346                           ; 2 bytes @ 0x8
  1347  0078                     	ds	2
  1348  007A                     i1___lwmod@dividend:	
  1349                           
  1350                           ; 2 bytes @ 0xA
  1351  007A                     	ds	2
  1352  007C                     ??i1___lwmod:	
  1353                           
  1354                           ; 1 bytes @ 0xC
  1355  007C                     	ds	1
  1356  007D                     i1___lwmod@counter:	
  1357                           
  1358                           ; 1 bytes @ 0xD
  1359  007D                     	ds	1
  1360                           
  1361                           	psect	cstackBANK0
  1362  0020                     __pcstackBANK0:	
  1363  0020                     ?i1_sprintf:	
  1364  0020                     i1sprintf@f:	
  1365                           ; 2 bytes @ 0x0
  1366                           
  1367                           
  1368                           ; 1 bytes @ 0x0
  1369  0020                     	ds	5
  1370  0025                     ??i1_sprintf:	
  1371                           
  1372                           ; 1 bytes @ 0x5
  1373  0025                     	ds	3
  1374  0028                     i1sprintf@ap:	
  1375                           
  1376                           ; 1 bytes @ 0x8
  1377  0028                     	ds	1
  1378  0029                     i1sprintf@prec:	
  1379                           
  1380                           ; 1 bytes @ 0x9
  1381  0029                     	ds	1
  1382  002A                     i1sprintf@flag:	
  1383                           
  1384                           ; 1 bytes @ 0xA
  1385  002A                     	ds	1
  1386  002B                     i1sprintf@val:	
  1387                           
  1388                           ; 2 bytes @ 0xB
  1389  002B                     	ds	2
  1390  002D                     i1sprintf@sp:	
  1391                           
  1392                           ; 1 bytes @ 0xD
  1393  002D                     	ds	1
  1394  002E                     i1sprintf@width:	
  1395                           
  1396                           ; 2 bytes @ 0xE
  1397  002E                     	ds	2
  1398  0030                     i1sprintf@c:	
  1399                           
  1400                           ; 1 bytes @ 0x10
  1401  0030                     	ds	1
  1402  0031                     ??_updateLCD:	
  1403                           
  1404                           ; 1 bytes @ 0x11
  1405  0031                     	ds	5
  1406  0036                     updateLCD@decim:	
  1407                           
  1408                           ; 1 bytes @ 0x16
  1409  0036                     	ds	1
  1410  0037                     updateLCD@integ:	
  1411                           
  1412                           ; 1 bytes @ 0x17
  1413  0037                     	ds	1
  1414  0038                     ??_inter:	
  1415                           
  1416                           ; 1 bytes @ 0x18
  1417  0038                     	ds	5
  1418  003D                     ?_setTransStat:	
  1419  003D                     ??_BusyXLCD:	
  1420                           ; 1 bytes @ 0x1D
  1421                           
  1422  003D                     ??_isdigit:	
  1423                           ; 1 bytes @ 0x1D
  1424                           
  1425  003D                     ??_readEEPROM:	
  1426                           ; 1 bytes @ 0x1D
  1427                           
  1428  003D                     ?_writeEEPROM:	
  1429                           ; 1 bytes @ 0x1D
  1430                           
  1431  003D                     ??_DelayFor18TCY:	
  1432                           ; 1 bytes @ 0x1D
  1433                           
  1434  003D                     ??_DelayPORXLCD:	
  1435                           ; 1 bytes @ 0x1D
  1436                           
  1437  003D                     ?_codFreq:	
  1438                           ; 1 bytes @ 0x1D
  1439                           
  1440  003D                     ?___wmul:	
  1441                           ; 2 bytes @ 0x1D
  1442                           
  1443  003D                     ?___lwdiv:	
  1444                           ; 2 bytes @ 0x1D
  1445                           
  1446  003D                     readEEPROM@address:	
  1447                           ; 2 bytes @ 0x1D
  1448                           
  1449  003D                     writeEEPROM@address:	
  1450                           ; 1 bytes @ 0x1D
  1451                           
  1452  003D                     _isdigit$1166:	
  1453                           ; 1 bytes @ 0x1D
  1454                           
  1455  003D                     setTransStat@stat:	
  1456                           ; 1 bytes @ 0x1D
  1457                           
  1458  003D                     codFreq@f:	
  1459                           ; 2 bytes @ 0x1D
  1460                           
  1461  003D                     ___wmul@multiplier:	
  1462                           ; 2 bytes @ 0x1D
  1463                           
  1464  003D                     ___lwdiv@divisor:	
  1465                           ; 2 bytes @ 0x1D
  1466                           
  1467                           
  1468                           ; 2 bytes @ 0x1D
  1469  003D                     	ds	1
  1470  003E                     ??_SetDDRamAddr:	
  1471  003E                     ??_WriteCmdXLCD:	
  1472                           ; 1 bytes @ 0x1E
  1473                           
  1474  003E                     ??_writeEEPROM:	
  1475                           ; 1 bytes @ 0x1E
  1476                           
  1477  003E                     ??_getData:	
  1478                           ; 1 bytes @ 0x1E
  1479                           
  1480  003E                     ??_WriteDataXLCD:	
  1481                           ; 1 bytes @ 0x1E
  1482                           
  1483  003E                     writeEEPROM@data:	
  1484                           ; 1 bytes @ 0x1E
  1485                           
  1486  003E                     isdigit@c:	
  1487                           ; 1 bytes @ 0x1E
  1488                           
  1489                           
  1490                           ; 1 bytes @ 0x1E
  1491  003E                     	ds	1
  1492  003F                     ??_setTransStat:	
  1493  003F                     ??_setData:	
  1494                           ; 1 bytes @ 0x1F
  1495                           
  1496  003F                     ??_codFreq:	
  1497                           ; 1 bytes @ 0x1F
  1498                           
  1499  003F                     codFreq@fr:	
  1500                           ; 1 bytes @ 0x1F
  1501                           
  1502  003F                     ___wmul@multiplicand:	
  1503                           ; 2 bytes @ 0x1F
  1504                           
  1505  003F                     ___lwdiv@dividend:	
  1506                           ; 2 bytes @ 0x1F
  1507                           
  1508                           
  1509                           ; 2 bytes @ 0x1F
  1510  003F                     	ds	1
  1511  0040                     setData@data0:	
  1512  0040                     WriteDataXLCD@data:	
  1513                           ; 1 bytes @ 0x20
  1514                           
  1515  0040                     WriteCmdXLCD@cmd:	
  1516                           ; 1 bytes @ 0x20
  1517                           
  1518  0040                     SetDDRamAddr@DDaddr:	
  1519                           ; 1 bytes @ 0x20
  1520                           
  1521                           
  1522                           ; 1 bytes @ 0x20
  1523  0040                     	ds	1
  1524  0041                     ??_putsXLCD:	
  1525  0041                     ??_putrsXLCD:	
  1526                           ; 1 bytes @ 0x21
  1527                           
  1528  0041                     ??_SendCMDLCD:	
  1529                           ; 1 bytes @ 0x21
  1530                           
  1531  0041                     ??_OpenXLCD:	
  1532                           ; 1 bytes @ 0x21
  1533                           
  1534  0041                     ??___wmul:	
  1535                           ; 1 bytes @ 0x21
  1536                           
  1537  0041                     ??___lwdiv:	
  1538                           ; 1 bytes @ 0x21
  1539                           
  1540  0041                     setData@data1:	
  1541                           ; 1 bytes @ 0x21
  1542                           
  1543  0041                     SendCMDLCD@CMD:	
  1544                           ; 1 bytes @ 0x21
  1545                           
  1546  0041                     ___wmul@product:	
  1547                           ; 1 bytes @ 0x21
  1548                           
  1549                           
  1550                           ; 2 bytes @ 0x21
  1551  0041                     	ds	1
  1552  0042                     ??___lwmod:	
  1553  0042                     getData@aux0:	
  1554                           ; 1 bytes @ 0x22
  1555                           
  1556  0042                     putsXLCD@buffer:	
  1557                           ; 1 bytes @ 0x22
  1558                           
  1559  0042                     putrsXLCD@buffer:	
  1560                           ; 1 bytes @ 0x22
  1561                           
  1562                           
  1563                           ; 1 bytes @ 0x22
  1564  0042                     	ds	1
  1565  0043                     ??_beep:	
  1566  0043                     getData@aux1:	
  1567                           ; 1 bytes @ 0x23
  1568                           
  1569  0043                     OpenXLCD@lcdtype:	
  1570                           ; 1 bytes @ 0x23
  1571                           
  1572  0043                     ___lwmod@counter:	
  1573                           ; 1 bytes @ 0x23
  1574                           
  1575                           
  1576                           ; 1 bytes @ 0x23
  1577  0043                     	ds	1
  1578  0044                     ??_config:	
  1579                           
  1580                           	psect	maintext
  1581  0723                     __pmaintext:	
  1582                           ; 1 bytes @ 0x24
  1583 ;;
  1584 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1585 ;;
  1586 ;; *************** function _main *****************
  1587 ;; Defined at:
  1588 ;;		line 5 in file "main.c"
  1589 ;; Parameters:    Size  Location     Type
  1590 ;;		None
  1591 ;; Auto vars:     Size  Location     Type
  1592 ;;  index           1    0        unsigned char 
  1593 ;; Return value:  Size  Location     Type
  1594 ;;                  1    wreg      void 
  1595 ;; Registers used:
  1596 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1597 ;; Tracked objects:
  1598 ;;		On entry : B00/0
  1599 ;;		On exit  : 0/0
  1600 ;;		Unchanged: 0/0
  1601 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1602 ;;      Params:         0       0       0       0       0
  1603 ;;      Locals:         0       0       0       0       0
  1604 ;;      Temps:          0       0       3       0       0
  1605 ;;      Totals:         0       0       3       0       0
  1606 ;;Total ram usage:        3 bytes
  1607 ;; Hardware stack levels required when called:   10
  1608 ;; This function calls:
  1609 ;;		_beep
  1610 ;;		_config
  1611 ;;		_getData
  1612 ;;		_lockingScreen
  1613 ;;		_principalScreen
  1614 ;;		_setFrequency
  1615 ;;		_start
  1616 ;;		_writeFrequency
  1617 ;; This function is called by:
  1618 ;;		Startup code after reset
  1619 ;; This function uses a non-reentrant model
  1620 ;;
  1621                           
  1622                           
  1623                           ;psect for function _main
  1624  0723                     _main:	
  1625  0723                     l4077:	
  1626                           ;incstack = 0
  1627 ;; hardware stack exceeded
  1628                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1629                           
  1630                           
  1631                           ;main.c: 6:     unsigned char index;;main.c: 7:     _delay((unsigned long)((100)*(400000
      +                          0/4000.0)));
  1632  0723  3082               	movlw	130
  1633  0724  1683               	bsf	3,5	;RP0=1, select bank1
  1634  0725  1303               	bcf	3,6	;RP1=0, select bank1
  1635  0726  00E3               	movwf	(??_main^(0+128)+1)
  1636  0727  30DD               	movlw	221
  1637  0728  00E2               	movwf	??_main^(0+128)
  1638  0729                     u3237:	
  1639  0729  0BE2               	decfsz	??_main^(0+128),f
  1640  072A  2F29               	goto	u3237
  1641  072B  0BE3               	decfsz	(??_main^(0+128)+1),f
  1642  072C  2F29               	goto	u3237
  1643  072D                     l4079:	
  1644                           
  1645                           ;main.c: 8:     config();
  1646  072D  120A  158A  22D6  120A  118A  	fcall	_config
  1647  0732                     l4081:	
  1648                           
  1649                           ;main.c: 9:     _delay((unsigned long)((100)*(4000000/4000.0)));
  1650  0732  3082               	movlw	130
  1651  0733  1683               	bsf	3,5	;RP0=1, select bank1
  1652  0734  1303               	bcf	3,6	;RP1=0, select bank1
  1653  0735  00E3               	movwf	(??_main^(0+128)+1)
  1654  0736  30DD               	movlw	221
  1655  0737  00E2               	movwf	??_main^(0+128)
  1656  0738                     u3247:	
  1657  0738  0BE2               	decfsz	??_main^(0+128),f
  1658  0739  2F38               	goto	u3247
  1659  073A  0BE3               	decfsz	(??_main^(0+128)+1),f
  1660  073B  2F38               	goto	u3247
  1661  073C                     l4083:	
  1662                           
  1663                           ;main.c: 10:     beep(100);
  1664  073C  3064               	movlw	100
  1665  073D  1683               	bsf	3,5	;RP0=1, select bank1
  1666  073E  1303               	bcf	3,6	;RP1=0, select bank1
  1667  073F  00C3               	movwf	beep@ms^(0+128)
  1668  0740  3000               	movlw	0
  1669  0741  00C4               	movwf	(beep@ms^(0+128)+1)
  1670  0742  120A  158A  24DC  120A  118A  	fcall	_beep
  1671  0747                     l4085:	
  1672                           
  1673                           ;main.c: 11:     getData();
  1674  0747  120A  158A  26DD  120A  118A  	fcall	_getData
  1675  074C                     l4087:	
  1676                           
  1677                           ;main.c: 12:     beep(10);
  1678  074C  300A               	movlw	10
  1679  074D  1683               	bsf	3,5	;RP0=1, select bank1
  1680  074E  1303               	bcf	3,6	;RP1=0, select bank1
  1681  074F  00C3               	movwf	beep@ms^(0+128)
  1682  0750  3000               	movlw	0
  1683  0751  00C4               	movwf	(beep@ms^(0+128)+1)
  1684  0752  120A  158A  24DC  120A  118A  	fcall	_beep
  1685  0757                     l4089:	
  1686                           
  1687                           ;main.c: 13:     if(!PORTAbits.RA4){
  1688  0757  1283               	bcf	3,5	;RP0=0, select bank0
  1689  0758  1303               	bcf	3,6	;RP1=0, select bank0
  1690  0759  1A05               	btfsc	5,4	;volatile
  1691  075A  2F5C               	goto	u3181
  1692  075B  2F5D               	goto	u3180
  1693  075C                     u3181:	
  1694  075C  2F73               	goto	l204
  1695  075D                     u3180:	
  1696  075D                     l4091:	
  1697                           
  1698                           ;main.c: 14:         _delay((unsigned long)((25)*(4000000/4000.0)));
  1699  075D  3021               	movlw	33
  1700  075E  1683               	bsf	3,5	;RP0=1, select bank1
  1701  075F  1303               	bcf	3,6	;RP1=0, select bank1
  1702  0760  00E3               	movwf	(??_main^(0+128)+1)
  1703  0761  3075               	movlw	117
  1704  0762  00E2               	movwf	??_main^(0+128)
  1705  0763                     u3257:	
  1706  0763  0BE2               	decfsz	??_main^(0+128),f
  1707  0764  2F63               	goto	u3257
  1708  0765  0BE3               	decfsz	(??_main^(0+128)+1),f
  1709  0766  2F63               	goto	u3257
  1710  0767  2F68               	nop2
  1711  0768                     l4093:	
  1712                           
  1713                           ;main.c: 15:         if(!PORTAbits.RA4) setFrequency();
  1714  0768  1283               	bcf	3,5	;RP0=0, select bank0
  1715  0769  1303               	bcf	3,6	;RP1=0, select bank0
  1716  076A  1A05               	btfsc	5,4	;volatile
  1717  076B  2F6D               	goto	u3191
  1718  076C  2F6E               	goto	u3190
  1719  076D                     u3191:	
  1720  076D  2F73               	goto	l204
  1721  076E                     u3190:	
  1722  076E                     l4095:	
  1723  076E  120A  118A  2361  120A  118A  	fcall	_setFrequency
  1724  0773                     l204:	
  1725                           ;main.c: 16:     }
  1726                           
  1727                           
  1728                           ;main.c: 17:     start();
  1729  0773  120A  118A  2499  120A  118A  	fcall	_start
  1730                           
  1731                           ;main.c: 18:     lockingScreen();
  1732  0778  120A  158A  226B  120A  118A  	fcall	_lockingScreen
  1733  077D                     l4097:	
  1734                           
  1735                           ;main.c: 19:     writeFrequency(frequency);
  1736  077D  1283               	bcf	3,5	;RP0=0, select bank0
  1737  077E  1303               	bcf	3,6	;RP1=0, select bank0
  1738  077F  0845               	movf	_frequency+1,w
  1739  0780  1683               	bsf	3,5	;RP0=1, select bank1
  1740  0781  1303               	bcf	3,6	;RP1=0, select bank1
  1741  0782  00C6               	movwf	(writeFrequency@f+1)^(0+128)
  1742  0783  1283               	bcf	3,5	;RP0=0, select bank0
  1743  0784  1303               	bcf	3,6	;RP1=0, select bank0
  1744  0785  0844               	movf	_frequency,w
  1745  0786  1683               	bsf	3,5	;RP0=1, select bank1
  1746  0787  1303               	bcf	3,6	;RP1=0, select bank1
  1747  0788  00C5               	movwf	writeFrequency@f^(0+128)
  1748  0789  120A  118A  2585  120A  118A  	fcall	_writeFrequency
  1749  078E                     l4099:	
  1750                           
  1751                           ;main.c: 22:     principalScreen();
  1752  078E  120A  158A  279B  120A  118A  	fcall	_principalScreen
  1753  0793                     l4101:	
  1754                           
  1755                           ;main.c: 29:         if(!PORTAbits.RA4){
  1756  0793  1283               	bcf	3,5	;RP0=0, select bank0
  1757  0794  1303               	bcf	3,6	;RP1=0, select bank0
  1758  0795  1A05               	btfsc	5,4	;volatile
  1759  0796  2F98               	goto	u3201
  1760  0797  2F99               	goto	u3200
  1761  0798                     u3201:	
  1762  0798  2F93               	goto	l4101
  1763  0799                     u3200:	
  1764  0799                     l4103:	
  1765                           
  1766                           ;main.c: 30:             _delay((unsigned long)((500)*(4000000/4000.0)));
  1767  0799  3003               	movlw	3
  1768  079A  1683               	bsf	3,5	;RP0=1, select bank1
  1769  079B  1303               	bcf	3,6	;RP1=0, select bank1
  1770  079C  00E4               	movwf	(??_main^(0+128)+2)
  1771  079D  308A               	movlw	138
  1772  079E  00E3               	movwf	(??_main^(0+128)+1)
  1773  079F  3055               	movlw	85
  1774  07A0  00E2               	movwf	??_main^(0+128)
  1775  07A1                     u3267:	
  1776  07A1  0BE2               	decfsz	??_main^(0+128),f
  1777  07A2  2FA1               	goto	u3267
  1778  07A3  0BE3               	decfsz	(??_main^(0+128)+1),f
  1779  07A4  2FA1               	goto	u3267
  1780  07A5  0BE4               	decfsz	(??_main^(0+128)+2),f
  1781  07A6  2FA1               	goto	u3267
  1782  07A7                     l4105:	
  1783                           
  1784                           ;main.c: 31:             for(i = 0; i < 10; i++){
  1785  07A7  1683               	bsf	3,5	;RP0=1, select bank1
  1786  07A8  1303               	bcf	3,6	;RP1=0, select bank1
  1787  07A9  01A0               	clrf	_i^(0+128)
  1788  07AA                     l4107:	
  1789  07AA  300A               	movlw	10
  1790  07AB  0220               	subwf	_i^(0+128),w
  1791  07AC  1C03               	skipc
  1792  07AD  2FAF               	goto	u3211
  1793  07AE  2FB0               	goto	u3210
  1794  07AF                     u3211:	
  1795  07AF  2FB1               	goto	l4111
  1796  07B0                     u3210:	
  1797  07B0  2FC2               	goto	l209
  1798  07B1                     l4111:	
  1799                           
  1800                           ;main.c: 32:                 _delay((unsigned long)((100)*(4000000/4000.0)));
  1801  07B1  3082               	movlw	130
  1802  07B2  1683               	bsf	3,5	;RP0=1, select bank1
  1803  07B3  1303               	bcf	3,6	;RP1=0, select bank1
  1804  07B4  00E3               	movwf	(??_main^(0+128)+1)
  1805  07B5  30DD               	movlw	221
  1806  07B6  00E2               	movwf	??_main^(0+128)
  1807  07B7                     u3277:	
  1808  07B7  0BE2               	decfsz	??_main^(0+128),f
  1809  07B8  2FB7               	goto	u3277
  1810  07B9  0BE3               	decfsz	(??_main^(0+128)+1),f
  1811  07BA  2FB7               	goto	u3277
  1812  07BB                     l4113:	
  1813                           
  1814                           ;main.c: 33:             }
  1815  07BB  3001               	movlw	1
  1816  07BC  1683               	bsf	3,5	;RP0=1, select bank1
  1817  07BD  1303               	bcf	3,6	;RP1=0, select bank1
  1818  07BE  00E2               	movwf	??_main^(0+128)
  1819  07BF  0862               	movf	??_main^(0+128),w
  1820  07C0  07A0               	addwf	_i^(0+128),f
  1821  07C1  2FAA               	goto	l4107
  1822  07C2                     l209:	
  1823                           
  1824                           ;main.c: 34:             if(!PORTAbits.RA4){
  1825  07C2  1283               	bcf	3,5	;RP0=0, select bank0
  1826  07C3  1303               	bcf	3,6	;RP1=0, select bank0
  1827  07C4  1A05               	btfsc	5,4	;volatile
  1828  07C5  2FC7               	goto	u3221
  1829  07C6  2FC8               	goto	u3220
  1830  07C7                     u3221:	
  1831  07C7  2F93               	goto	l4101
  1832  07C8                     u3220:	
  1833  07C8                     l4117:	
  1834                           
  1835                           ;main.c: 35:                 setFrequency();
  1836  07C8  120A  118A  2361  120A  118A  	fcall	_setFrequency
  1837                           
  1838                           ;main.c: 36:                 principalScreen();
  1839  07CD  120A  158A  279B  120A  118A  	fcall	_principalScreen
  1840  07D2  2F93               	goto	l4101
  1841  07D3  120A  118A  2812   	ljmp	start
  1842  07D6                     __end_of_main:	
  1843                           
  1844                           	psect	text1
  1845  0499                     __ptext1:	
  1846 ;; *************** function _start *****************
  1847 ;; Defined at:
  1848 ;;		line 78 in file "main.c"
  1849 ;; Parameters:    Size  Location     Type
  1850 ;;		None
  1851 ;; Auto vars:     Size  Location     Type
  1852 ;;  i               1   27[BANK1 ] unsigned char 
  1853 ;; Return value:  Size  Location     Type
  1854 ;;                  1    wreg      void 
  1855 ;; Registers used:
  1856 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1857 ;; Tracked objects:
  1858 ;;		On entry : 0/0
  1859 ;;		On exit  : 0/0
  1860 ;;		Unchanged: 0/0
  1861 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1862 ;;      Params:         0       0       0       0       0
  1863 ;;      Locals:         0       0       1       0       0
  1864 ;;      Temps:          0       0       3       0       0
  1865 ;;      Totals:         0       0       4       0       0
  1866 ;;Total ram usage:        4 bytes
  1867 ;; Hardware stack levels used:    1
  1868 ;; Hardware stack levels required when called:    8
  1869 ;; This function calls:
  1870 ;;		_SetDDRamAddr
  1871 ;;		_beep
  1872 ;;		_putsXLCD
  1873 ;;		_sprintf
  1874 ;; This function is called by:
  1875 ;;		_main
  1876 ;; This function uses a non-reentrant model
  1877 ;;
  1878                           
  1879                           
  1880                           ;psect for function _start
  1881  0499                     _start:	
  1882  0499                     l3987:	
  1883                           ;incstack = 0
  1884 ;; hardware stack exceeded
  1885                           ; Regs used in _start: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1886                           
  1887  0499                     l3989:	
  1888                           
  1889                           ;main.c: 80:     INTCONbits.GIE = 0;
  1890  0499  138B               	bcf	11,7	;volatile
  1891                           
  1892                           ;main.c: 83:     for(i = 0; i < 10; i++){
  1893  049A  1683               	bsf	3,5	;RP0=1, select bank1
  1894  049B  1303               	bcf	3,6	;RP1=0, select bank1
  1895  049C  01DE               	clrf	start@i^(0+128)
  1896  049D                     l3995:	
  1897                           
  1898                           ;main.c: 84:         sprintf(lineOne,"TESTING         ");
  1899  049D  3032               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1900  049E  00DB               	movwf	??_start^(0+128)
  1901  049F  085B               	movf	??_start^(0+128),w
  1902  04A0  00CA               	movwf	sprintf@f^(0+128)
  1903  04A1  30B2               	movlw	(low (_lineOne| 0))& (0+255)
  1904  04A2  120A  118A  2035  120A  118A  	fcall	_sprintf
  1905                           
  1906                           ;main.c: 85:         sprintf(lineTwo,"          SUPPLY");
  1907  04A7  3098               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1908  04A8  1683               	bsf	3,5	;RP0=1, select bank1
  1909  04A9  1303               	bcf	3,6	;RP1=0, select bank1
  1910  04AA  00DB               	movwf	??_start^(0+128)
  1911  04AB  085B               	movf	??_start^(0+128),w
  1912  04AC  00CA               	movwf	sprintf@f^(0+128)
  1913  04AD  30A1               	movlw	(low (_lineTwo| 0))& (0+255)
  1914  04AE  120A  118A  2035  120A  118A  	fcall	_sprintf
  1915  04B3                     l3997:	
  1916                           
  1917                           ;main.c: 86:         SetDDRamAddr(0x00);
  1918  04B3  3000               	movlw	0
  1919  04B4  120A  158A  252B  120A  118A  	fcall	_SetDDRamAddr
  1920  04B9                     l3999:	
  1921                           
  1922                           ;main.c: 87:         putsXLCD(lineOne);
  1923  04B9  30B2               	movlw	(low (_lineOne| 0))& (0+255)
  1924  04BA  120A  118A  27D6  120A  118A  	fcall	_putsXLCD
  1925  04BF                     l4001:	
  1926                           
  1927                           ;main.c: 88:         SetDDRamAddr(0x40);
  1928  04BF  3040               	movlw	64
  1929  04C0  120A  158A  252B  120A  118A  	fcall	_SetDDRamAddr
  1930  04C5                     l4003:	
  1931                           
  1932                           ;main.c: 89:         putsXLCD(lineTwo);
  1933  04C5  30A1               	movlw	(low (_lineTwo| 0))& (0+255)
  1934  04C6  120A  118A  27D6  120A  118A  	fcall	_putsXLCD
  1935  04CB                     l4005:	
  1936                           
  1937                           ;main.c: 90:         _delay((unsigned long)((100)*(4000000/4000.0)));
  1938  04CB  3082               	movlw	130
  1939  04CC  1683               	bsf	3,5	;RP0=1, select bank1
  1940  04CD  1303               	bcf	3,6	;RP1=0, select bank1
  1941  04CE  00DC               	movwf	(??_start^(0+128)+1)
  1942  04CF  30DD               	movlw	221
  1943  04D0  00DB               	movwf	??_start^(0+128)
  1944  04D1                     u3287:	
  1945  04D1  0BDB               	decfsz	??_start^(0+128),f
  1946  04D2  2CD1               	goto	u3287
  1947  04D3  0BDC               	decfsz	(??_start^(0+128)+1),f
  1948  04D4  2CD1               	goto	u3287
  1949  04D5                     l4007:	
  1950                           
  1951                           ;main.c: 91:     }
  1952  04D5  3001               	movlw	1
  1953  04D6  1683               	bsf	3,5	;RP0=1, select bank1
  1954  04D7  1303               	bcf	3,6	;RP1=0, select bank1
  1955  04D8  00DB               	movwf	??_start^(0+128)
  1956  04D9  085B               	movf	??_start^(0+128),w
  1957  04DA  07DE               	addwf	start@i^(0+128),f
  1958  04DB                     l4009:	
  1959  04DB  300A               	movlw	10
  1960  04DC  025E               	subwf	start@i^(0+128),w
  1961  04DD  1C03               	skipc
  1962  04DE  2CE0               	goto	u3151
  1963  04DF  2CE1               	goto	u3150
  1964  04E0                     u3151:	
  1965  04E0  2C9D               	goto	l3995
  1966  04E1                     u3150:	
  1967  04E1                     l4011:	
  1968                           
  1969                           ;main.c: 93:     for(i = 0; i < 18; i++){
  1970  04E1  01DE               	clrf	start@i^(0+128)
  1971  04E2                     l4017:	
  1972                           
  1973                           ;main.c: 94:         sprintf(lineOne,"TESTING         ");
  1974  04E2  3032               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1975  04E3  00DB               	movwf	??_start^(0+128)
  1976  04E4  085B               	movf	??_start^(0+128),w
  1977  04E5  00CA               	movwf	sprintf@f^(0+128)
  1978  04E6  30B2               	movlw	(low (_lineOne| 0))& (0+255)
  1979  04E7  120A  118A  2035  120A  118A  	fcall	_sprintf
  1980                           
  1981                           ;main.c: 95:         sprintf(lineTwo,"     TEMPERATURE");
  1982  04EC  3054               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1983  04ED  1683               	bsf	3,5	;RP0=1, select bank1
  1984  04EE  1303               	bcf	3,6	;RP1=0, select bank1
  1985  04EF  00DB               	movwf	??_start^(0+128)
  1986  04F0  085B               	movf	??_start^(0+128),w
  1987  04F1  00CA               	movwf	sprintf@f^(0+128)
  1988  04F2  30A1               	movlw	(low (_lineTwo| 0))& (0+255)
  1989  04F3  120A  118A  2035  120A  118A  	fcall	_sprintf
  1990  04F8                     l4019:	
  1991                           
  1992                           ;main.c: 96:         SetDDRamAddr(0x00);
  1993  04F8  3000               	movlw	0
  1994  04F9  120A  158A  252B  120A  118A  	fcall	_SetDDRamAddr
  1995  04FE                     l4021:	
  1996                           
  1997                           ;main.c: 97:         putsXLCD(lineOne);
  1998  04FE  30B2               	movlw	(low (_lineOne| 0))& (0+255)
  1999  04FF  120A  118A  27D6  120A  118A  	fcall	_putsXLCD
  2000  0504                     l4023:	
  2001                           
  2002                           ;main.c: 98:         SetDDRamAddr(0x40);
  2003  0504  3040               	movlw	64
  2004  0505  120A  158A  252B  120A  118A  	fcall	_SetDDRamAddr
  2005  050A                     l4025:	
  2006                           
  2007                           ;main.c: 99:         putsXLCD(lineTwo);
  2008  050A  30A1               	movlw	(low (_lineTwo| 0))& (0+255)
  2009  050B  120A  118A  27D6  120A  118A  	fcall	_putsXLCD
  2010  0510                     l4027:	
  2011                           
  2012                           ;main.c: 100:         _delay((unsigned long)((100)*(4000000/4000.0)));
  2013  0510  3082               	movlw	130
  2014  0511  1683               	bsf	3,5	;RP0=1, select bank1
  2015  0512  1303               	bcf	3,6	;RP1=0, select bank1
  2016  0513  00DC               	movwf	(??_start^(0+128)+1)
  2017  0514  30DD               	movlw	221
  2018  0515  00DB               	movwf	??_start^(0+128)
  2019  0516                     u3297:	
  2020  0516  0BDB               	decfsz	??_start^(0+128),f
  2021  0517  2D16               	goto	u3297
  2022  0518  0BDC               	decfsz	(??_start^(0+128)+1),f
  2023  0519  2D16               	goto	u3297
  2024  051A                     l4029:	
  2025                           
  2026                           ;main.c: 101:     }
  2027  051A  3001               	movlw	1
  2028  051B  1683               	bsf	3,5	;RP0=1, select bank1
  2029  051C  1303               	bcf	3,6	;RP1=0, select bank1
  2030  051D  00DB               	movwf	??_start^(0+128)
  2031  051E  085B               	movf	??_start^(0+128),w
  2032  051F  07DE               	addwf	start@i^(0+128),f
  2033  0520                     l4031:	
  2034  0520  3012               	movlw	18
  2035  0521  025E               	subwf	start@i^(0+128),w
  2036  0522  1C03               	skipc
  2037  0523  2D25               	goto	u3161
  2038  0524  2D26               	goto	u3160
  2039  0525                     u3161:	
  2040  0525  2CE2               	goto	l4017
  2041  0526                     u3160:	
  2042  0526                     l4033:	
  2043                           
  2044                           ;main.c: 103:     for(i = 0; i < 15; i++){
  2045  0526  01DE               	clrf	start@i^(0+128)
  2046  0527                     l4039:	
  2047                           
  2048                           ;main.c: 104:         sprintf(lineOne,"TESTING         ");
  2049  0527  3032               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  2050  0528  00DB               	movwf	??_start^(0+128)
  2051  0529  085B               	movf	??_start^(0+128),w
  2052  052A  00CA               	movwf	sprintf@f^(0+128)
  2053  052B  30B2               	movlw	(low (_lineOne| 0))& (0+255)
  2054  052C  120A  118A  2035  120A  118A  	fcall	_sprintf
  2055                           
  2056                           ;main.c: 105:         sprintf(lineTwo,"             SWR");
  2057  0531  3076               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  2058  0532  1683               	bsf	3,5	;RP0=1, select bank1
  2059  0533  1303               	bcf	3,6	;RP1=0, select bank1
  2060  0534  00DB               	movwf	??_start^(0+128)
  2061  0535  085B               	movf	??_start^(0+128),w
  2062  0536  00CA               	movwf	sprintf@f^(0+128)
  2063  0537  30A1               	movlw	(low (_lineTwo| 0))& (0+255)
  2064  0538  120A  118A  2035  120A  118A  	fcall	_sprintf
  2065  053D                     l4041:	
  2066                           
  2067                           ;main.c: 106:         SetDDRamAddr(0x00);
  2068  053D  3000               	movlw	0
  2069  053E  120A  158A  252B  120A  118A  	fcall	_SetDDRamAddr
  2070  0543                     l4043:	
  2071                           
  2072                           ;main.c: 107:         putsXLCD(lineOne);
  2073  0543  30B2               	movlw	(low (_lineOne| 0))& (0+255)
  2074  0544  120A  118A  27D6  120A  118A  	fcall	_putsXLCD
  2075  0549                     l4045:	
  2076                           
  2077                           ;main.c: 108:         SetDDRamAddr(0x40);
  2078  0549  3040               	movlw	64
  2079  054A  120A  158A  252B  120A  118A  	fcall	_SetDDRamAddr
  2080  054F                     l4047:	
  2081                           
  2082                           ;main.c: 109:         putsXLCD(lineTwo);
  2083  054F  30A1               	movlw	(low (_lineTwo| 0))& (0+255)
  2084  0550  120A  118A  27D6  120A  118A  	fcall	_putsXLCD
  2085  0555                     l4049:	
  2086                           
  2087                           ;main.c: 110:         _delay((unsigned long)((100)*(4000000/4000.0)));
  2088  0555  3082               	movlw	130
  2089  0556  1683               	bsf	3,5	;RP0=1, select bank1
  2090  0557  1303               	bcf	3,6	;RP1=0, select bank1
  2091  0558  00DC               	movwf	(??_start^(0+128)+1)
  2092  0559  30DD               	movlw	221
  2093  055A  00DB               	movwf	??_start^(0+128)
  2094  055B                     u3307:	
  2095  055B  0BDB               	decfsz	??_start^(0+128),f
  2096  055C  2D5B               	goto	u3307
  2097  055D  0BDC               	decfsz	(??_start^(0+128)+1),f
  2098  055E  2D5B               	goto	u3307
  2099  055F                     l4051:	
  2100                           
  2101                           ;main.c: 111:     }
  2102  055F  3001               	movlw	1
  2103  0560  1683               	bsf	3,5	;RP0=1, select bank1
  2104  0561  1303               	bcf	3,6	;RP1=0, select bank1
  2105  0562  00DB               	movwf	??_start^(0+128)
  2106  0563  085B               	movf	??_start^(0+128),w
  2107  0564  07DE               	addwf	start@i^(0+128),f
  2108  0565                     l4053:	
  2109  0565  300F               	movlw	15
  2110  0566  025E               	subwf	start@i^(0+128),w
  2111  0567  1C03               	skipc
  2112  0568  2D6A               	goto	u3171
  2113  0569  2D6B               	goto	u3170
  2114  056A                     u3171:	
  2115  056A  2D27               	goto	l4039
  2116  056B                     u3170:	
  2117  056B                     l4055:	
  2118                           
  2119                           ;main.c: 112:     beep(250);
  2120  056B  30FA               	movlw	250
  2121  056C  00C3               	movwf	beep@ms^(0+128)
  2122  056D  3000               	movlw	0
  2123  056E  00C4               	movwf	(beep@ms^(0+128)+1)
  2124  056F  120A  158A  24DC  120A  118A  	fcall	_beep
  2125  0574                     l4057:	
  2126                           
  2127                           ;main.c: 113:     INTCONbits.GIE = 1;
  2128  0574  178B               	bsf	11,7	;volatile
  2129  0575                     l4059:	
  2130                           
  2131                           ;main.c: 114:     _delay((unsigned long)((500)*(4000000/4000.0)));
  2132  0575  3003               	movlw	3
  2133  0576  1683               	bsf	3,5	;RP0=1, select bank1
  2134  0577  1303               	bcf	3,6	;RP1=0, select bank1
  2135  0578  00DD               	movwf	(??_start^(0+128)+2)
  2136  0579  308A               	movlw	138
  2137  057A  00DC               	movwf	(??_start^(0+128)+1)
  2138  057B  3055               	movlw	85
  2139  057C  00DB               	movwf	??_start^(0+128)
  2140  057D                     u3317:	
  2141  057D  0BDB               	decfsz	??_start^(0+128),f
  2142  057E  2D7D               	goto	u3317
  2143  057F  0BDC               	decfsz	(??_start^(0+128)+1),f
  2144  0580  2D7D               	goto	u3317
  2145  0581  0BDD               	decfsz	(??_start^(0+128)+2),f
  2146  0582  2D7D               	goto	u3317
  2147  0583                     l4061:	
  2148                           
  2149                           ;main.c: 115:     INTCONbits.GIE = 1;
  2150  0583  178B               	bsf	11,7	;volatile
  2151  0584                     l225:	
  2152  0584  0008               	return
  2153  0585                     __end_of_start:	
  2154                           
  2155                           	psect	text2
  2156  0361                     __ptext2:	
  2157 ;; *************** function _setFrequency *****************
  2158 ;; Defined at:
  2159 ;;		line 179 in file "main.c"
  2160 ;; Parameters:    Size  Location     Type
  2161 ;;		None
  2162 ;; Auto vars:     Size  Location     Type
  2163 ;;		None
  2164 ;; Return value:  Size  Location     Type
  2165 ;;                  1    wreg      void 
  2166 ;; Registers used:
  2167 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2168 ;; Tracked objects:
  2169 ;;		On entry : 0/0
  2170 ;;		On exit  : 0/0
  2171 ;;		Unchanged: 0/0
  2172 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2173 ;;      Params:         0       0       0       0       0
  2174 ;;      Locals:         0       0       0       0       0
  2175 ;;      Temps:          0       0       3       0       0
  2176 ;;      Totals:         0       0       3       0       0
  2177 ;;Total ram usage:        3 bytes
  2178 ;; Hardware stack levels used:    1
  2179 ;; Hardware stack levels required when called:    9
  2180 ;; This function calls:
  2181 ;;		_SetDDRamAddr
  2182 ;;		_beep
  2183 ;;		_lockingScreen
  2184 ;;		_putsXLCD
  2185 ;;		_setData
  2186 ;;		_sprintf
  2187 ;;		_writeFrequency
  2188 ;; This function is called by:
  2189 ;;		_main
  2190 ;; This function uses a non-reentrant model
  2191 ;;
  2192                           
  2193                           
  2194                           ;psect for function _setFrequency
  2195  0361                     _setFrequency:	
  2196  0361                     l3927:	
  2197                           ;incstack = 0
  2198 ;; hardware stack exceeded
  2199                           ; Regs used in _setFrequency: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2200                           
  2201                           
  2202                           ;main.c: 180:     isOnConfig = 1;
  2203  0361  1283               	bcf	3,5	;RP0=0, select bank0
  2204  0362  1303               	bcf	3,6	;RP1=0, select bank0
  2205  0363  01CE               	clrf	_isOnConfig
  2206  0364  0ACE               	incf	_isOnConfig,f
  2207  0365                     l3929:	
  2208                           
  2209                           ;main.c: 181:     sprintf(lineOne,"SET   FREQUENCY ");
  2210  0365  3043               	movlw	(low ((STR_7-__stringbase)| (0+32768)))& (0+255)
  2211  0366  1683               	bsf	3,5	;RP0=1, select bank1
  2212  0367  1303               	bcf	3,6	;RP1=0, select bank1
  2213  0368  00DC               	movwf	??_setFrequency^(0+128)
  2214  0369  085C               	movf	??_setFrequency^(0+128),w
  2215  036A  00CA               	movwf	sprintf@f^(0+128)
  2216  036B  30B2               	movlw	(low (_lineOne| 0))& (0+255)
  2217  036C  120A  118A  2035  120A  118A  	fcall	_sprintf
  2218  0371                     l3931:	
  2219                           
  2220                           ;main.c: 182:     SetDDRamAddr(0x00);
  2221  0371  3000               	movlw	0
  2222  0372  120A  158A  252B  120A  118A  	fcall	_SetDDRamAddr
  2223  0377                     l3933:	
  2224                           
  2225                           ;main.c: 183:     putsXLCD(lineOne);
  2226  0377  30B2               	movlw	(low (_lineOne| 0))& (0+255)
  2227  0378  120A  118A  27D6  120A  118A  	fcall	_putsXLCD
  2228                           
  2229                           ;main.c: 184:     beep(200);
  2230  037D  30C8               	movlw	200
  2231  037E  1683               	bsf	3,5	;RP0=1, select bank1
  2232  037F  1303               	bcf	3,6	;RP1=0, select bank1
  2233  0380  00C3               	movwf	beep@ms^(0+128)
  2234  0381  3000               	movlw	0
  2235  0382  00C4               	movwf	(beep@ms^(0+128)+1)
  2236  0383  120A  158A  24DC  120A  118A  	fcall	_beep
  2237  0388                     l251:	
  2238                           ;main.c: 185:     while(!PORTAbits.RA4)continue;
  2239                           
  2240  0388  1283               	bcf	3,5	;RP0=0, select bank0
  2241  0389  1303               	bcf	3,6	;RP1=0, select bank0
  2242  038A  1E05               	btfss	5,4	;volatile
  2243  038B  2B8D               	goto	u3001
  2244  038C  2B8E               	goto	u3000
  2245  038D                     u3001:	
  2246  038D  2B88               	goto	l251
  2247  038E                     u3000:	
  2248  038E                     l254:	
  2249                           ;main.c: 187:     while(1){
  2250                           
  2251                           
  2252                           ;main.c: 188:         if(!PORTAbits.RA3){
  2253  038E  1985               	btfsc	5,3	;volatile
  2254  038F  2B91               	goto	u3011
  2255  0390  2B92               	goto	u3010
  2256  0391                     u3011:	
  2257  0391  2BF2               	goto	l255
  2258  0392                     u3010:	
  2259  0392                     l3935:	
  2260                           
  2261                           ;main.c: 189:             if(frequency <= 1081)frequency++;
  2262  0392  3004               	movlw	4
  2263  0393  0245               	subwf	_frequency+1,w
  2264  0394  303A               	movlw	58
  2265  0395  1903               	skipnz
  2266  0396  0244               	subwf	_frequency,w
  2267  0397  1803               	skipnc
  2268  0398  2B9A               	goto	u3021
  2269  0399  2B9B               	goto	u3020
  2270  039A                     u3021:	
  2271  039A  2BA1               	goto	l256
  2272  039B                     u3020:	
  2273  039B                     l3937:	
  2274  039B  3001               	movlw	1
  2275  039C  07C4               	addwf	_frequency,f
  2276  039D  1803               	skipnc
  2277  039E  0AC5               	incf	_frequency+1,f
  2278  039F  3000               	movlw	0
  2279  03A0  07C5               	addwf	_frequency+1,f
  2280  03A1                     l256:	
  2281                           
  2282                           ;main.c: 190:             if(frequency > 1081)frequency = 875;
  2283  03A1  3004               	movlw	4
  2284  03A2  0245               	subwf	_frequency+1,w
  2285  03A3  303A               	movlw	58
  2286  03A4  1903               	skipnz
  2287  03A5  0244               	subwf	_frequency,w
  2288  03A6  1C03               	skipc
  2289  03A7  2BA9               	goto	u3031
  2290  03A8  2BAA               	goto	u3030
  2291  03A9                     u3031:	
  2292  03A9  2BAE               	goto	l3941
  2293  03AA                     u3030:	
  2294  03AA                     l3939:	
  2295  03AA  306B               	movlw	107
  2296  03AB  00C4               	movwf	_frequency
  2297  03AC  3003               	movlw	3
  2298  03AD  00C5               	movwf	_frequency+1
  2299  03AE                     l3941:	
  2300                           
  2301                           ;main.c: 191:             beep(100);
  2302  03AE  3064               	movlw	100
  2303  03AF  1683               	bsf	3,5	;RP0=1, select bank1
  2304  03B0  1303               	bcf	3,6	;RP1=0, select bank1
  2305  03B1  00C3               	movwf	beep@ms^(0+128)
  2306  03B2  3000               	movlw	0
  2307  03B3  00C4               	movwf	(beep@ms^(0+128)+1)
  2308  03B4  120A  158A  24DC  120A  118A  	fcall	_beep
  2309  03B9                     l3943:	
  2310                           
  2311                           ;main.c: 192:             _delay((unsigned long)((150)*(4000000/4000.0)));
  2312  03B9  30C3               	movlw	195
  2313  03BA  1683               	bsf	3,5	;RP0=1, select bank1
  2314  03BB  1303               	bcf	3,6	;RP1=0, select bank1
  2315  03BC  00DD               	movwf	(??_setFrequency^(0+128)+1)
  2316  03BD  30CC               	movlw	204
  2317  03BE  00DC               	movwf	??_setFrequency^(0+128)
  2318  03BF                     u3327:	
  2319  03BF  0BDC               	decfsz	??_setFrequency^(0+128),f
  2320  03C0  2BBF               	goto	u3327
  2321  03C1  0BDD               	decfsz	(??_setFrequency^(0+128)+1),f
  2322  03C2  2BBF               	goto	u3327
  2323  03C3  0000               	nop
  2324                           
  2325                           ;main.c: 193:             while(!PORTAbits.RA3){
  2326  03C4  2BEC               	goto	l3951
  2327  03C5                     l3945:	
  2328                           
  2329                           ;main.c: 194:                 if(frequency <= 1081)frequency++;
  2330  03C5  3004               	movlw	4
  2331  03C6  0245               	subwf	_frequency+1,w
  2332  03C7  303A               	movlw	58
  2333  03C8  1903               	skipnz
  2334  03C9  0244               	subwf	_frequency,w
  2335  03CA  1803               	skipnc
  2336  03CB  2BCD               	goto	u3041
  2337  03CC  2BCE               	goto	u3040
  2338  03CD                     u3041:	
  2339  03CD  2BD4               	goto	l260
  2340  03CE                     u3040:	
  2341  03CE                     l3947:	
  2342  03CE  3001               	movlw	1
  2343  03CF  07C4               	addwf	_frequency,f
  2344  03D0  1803               	skipnc
  2345  03D1  0AC5               	incf	_frequency+1,f
  2346  03D2  3000               	movlw	0
  2347  03D3  07C5               	addwf	_frequency+1,f
  2348  03D4                     l260:	
  2349                           
  2350                           ;main.c: 195:                 if(frequency > 1081)frequency = 875;
  2351  03D4  3004               	movlw	4
  2352  03D5  0245               	subwf	_frequency+1,w
  2353  03D6  303A               	movlw	58
  2354  03D7  1903               	skipnz
  2355  03D8  0244               	subwf	_frequency,w
  2356  03D9  1C03               	skipc
  2357  03DA  2BDC               	goto	u3051
  2358  03DB  2BDD               	goto	u3050
  2359  03DC                     u3051:	
  2360  03DC  2BE1               	goto	l261
  2361  03DD                     u3050:	
  2362  03DD                     l3949:	
  2363  03DD  306B               	movlw	107
  2364  03DE  00C4               	movwf	_frequency
  2365  03DF  3003               	movlw	3
  2366  03E0  00C5               	movwf	_frequency+1
  2367  03E1                     l261:	
  2368                           
  2369                           ;main.c: 196:                 _delay((unsigned long)((50)*(4000000/4000.0)));
  2370  03E1  3041               	movlw	65
  2371  03E2  1683               	bsf	3,5	;RP0=1, select bank1
  2372  03E3  1303               	bcf	3,6	;RP1=0, select bank1
  2373  03E4  00DD               	movwf	(??_setFrequency^(0+128)+1)
  2374  03E5  30ED               	movlw	237
  2375  03E6  00DC               	movwf	??_setFrequency^(0+128)
  2376  03E7                     u3337:	
  2377  03E7  0BDC               	decfsz	??_setFrequency^(0+128),f
  2378  03E8  2BE7               	goto	u3337
  2379  03E9  0BDD               	decfsz	(??_setFrequency^(0+128)+1),f
  2380  03EA  2BE7               	goto	u3337
  2381  03EB  2BEC               	nop2
  2382  03EC                     l3951:	
  2383                           
  2384                           ;main.c: 193:             while(!PORTAbits.RA3){
  2385  03EC  1283               	bcf	3,5	;RP0=0, select bank0
  2386  03ED  1303               	bcf	3,6	;RP1=0, select bank0
  2387  03EE  1D85               	btfss	5,3	;volatile
  2388  03EF  2BF1               	goto	u3061
  2389  03F0  2BF2               	goto	u3060
  2390  03F1                     u3061:	
  2391  03F1  2BC5               	goto	l3945
  2392  03F2                     u3060:	
  2393  03F2                     l255:	
  2394                           ;main.c: 198:         }
  2395                           
  2396                           
  2397                           ;main.c: 200:         if(!PORTAbits.RA5){
  2398  03F2  1A85               	btfsc	5,5	;volatile
  2399  03F3  2BF5               	goto	u3071
  2400  03F4  2BF6               	goto	u3070
  2401  03F5                     u3071:	
  2402  03F5  2C56               	goto	l263
  2403  03F6                     u3070:	
  2404  03F6                     l3953:	
  2405                           
  2406                           ;main.c: 201:             if(frequency >= 875)frequency--;
  2407  03F6  3003               	movlw	3
  2408  03F7  0245               	subwf	_frequency+1,w
  2409  03F8  306B               	movlw	107
  2410  03F9  1903               	skipnz
  2411  03FA  0244               	subwf	_frequency,w
  2412  03FB  1C03               	skipc
  2413  03FC  2BFE               	goto	u3081
  2414  03FD  2BFF               	goto	u3080
  2415  03FE                     u3081:	
  2416  03FE  2C05               	goto	l264
  2417  03FF                     u3080:	
  2418  03FF                     l3955:	
  2419  03FF  3001               	movlw	1
  2420  0400  02C4               	subwf	_frequency,f
  2421  0401  3000               	movlw	0
  2422  0402  1C03               	skipc
  2423  0403  03C5               	decf	_frequency+1,f
  2424  0404  02C5               	subwf	_frequency+1,f
  2425  0405                     l264:	
  2426                           
  2427                           ;main.c: 202:             if(frequency < 875)frequency = 1081;
  2428  0405  3003               	movlw	3
  2429  0406  0245               	subwf	_frequency+1,w
  2430  0407  306B               	movlw	107
  2431  0408  1903               	skipnz
  2432  0409  0244               	subwf	_frequency,w
  2433  040A  1803               	skipnc
  2434  040B  2C0D               	goto	u3091
  2435  040C  2C0E               	goto	u3090
  2436  040D                     u3091:	
  2437  040D  2C12               	goto	l3959
  2438  040E                     u3090:	
  2439  040E                     l3957:	
  2440  040E  3039               	movlw	57
  2441  040F  00C4               	movwf	_frequency
  2442  0410  3004               	movlw	4
  2443  0411  00C5               	movwf	_frequency+1
  2444  0412                     l3959:	
  2445                           
  2446                           ;main.c: 203:             beep(100);
  2447  0412  3064               	movlw	100
  2448  0413  1683               	bsf	3,5	;RP0=1, select bank1
  2449  0414  1303               	bcf	3,6	;RP1=0, select bank1
  2450  0415  00C3               	movwf	beep@ms^(0+128)
  2451  0416  3000               	movlw	0
  2452  0417  00C4               	movwf	(beep@ms^(0+128)+1)
  2453  0418  120A  158A  24DC  120A  118A  	fcall	_beep
  2454  041D                     l3961:	
  2455                           
  2456                           ;main.c: 204:             _delay((unsigned long)((150)*(4000000/4000.0)));
  2457  041D  30C3               	movlw	195
  2458  041E  1683               	bsf	3,5	;RP0=1, select bank1
  2459  041F  1303               	bcf	3,6	;RP1=0, select bank1
  2460  0420  00DD               	movwf	(??_setFrequency^(0+128)+1)
  2461  0421  30CC               	movlw	204
  2462  0422  00DC               	movwf	??_setFrequency^(0+128)
  2463  0423                     u3347:	
  2464  0423  0BDC               	decfsz	??_setFrequency^(0+128),f
  2465  0424  2C23               	goto	u3347
  2466  0425  0BDD               	decfsz	(??_setFrequency^(0+128)+1),f
  2467  0426  2C23               	goto	u3347
  2468  0427  0000               	nop
  2469                           
  2470                           ;main.c: 205:             while(!PORTAbits.RA5){
  2471  0428  2C50               	goto	l3969
  2472  0429                     l3963:	
  2473                           
  2474                           ;main.c: 206:                 if(frequency >= 875)frequency--;
  2475  0429  3003               	movlw	3
  2476  042A  0245               	subwf	_frequency+1,w
  2477  042B  306B               	movlw	107
  2478  042C  1903               	skipnz
  2479  042D  0244               	subwf	_frequency,w
  2480  042E  1C03               	skipc
  2481  042F  2C31               	goto	u3101
  2482  0430  2C32               	goto	u3100
  2483  0431                     u3101:	
  2484  0431  2C38               	goto	l268
  2485  0432                     u3100:	
  2486  0432                     l3965:	
  2487  0432  3001               	movlw	1
  2488  0433  02C4               	subwf	_frequency,f
  2489  0434  3000               	movlw	0
  2490  0435  1C03               	skipc
  2491  0436  03C5               	decf	_frequency+1,f
  2492  0437  02C5               	subwf	_frequency+1,f
  2493  0438                     l268:	
  2494                           
  2495                           ;main.c: 207:                 if(frequency < 875)frequency = 1081;
  2496  0438  3003               	movlw	3
  2497  0439  0245               	subwf	_frequency+1,w
  2498  043A  306B               	movlw	107
  2499  043B  1903               	skipnz
  2500  043C  0244               	subwf	_frequency,w
  2501  043D  1803               	skipnc
  2502  043E  2C40               	goto	u3111
  2503  043F  2C41               	goto	u3110
  2504  0440                     u3111:	
  2505  0440  2C45               	goto	l269
  2506  0441                     u3110:	
  2507  0441                     l3967:	
  2508  0441  3039               	movlw	57
  2509  0442  00C4               	movwf	_frequency
  2510  0443  3004               	movlw	4
  2511  0444  00C5               	movwf	_frequency+1
  2512  0445                     l269:	
  2513                           
  2514                           ;main.c: 208:                 _delay((unsigned long)((50)*(4000000/4000.0)));
  2515  0445  3041               	movlw	65
  2516  0446  1683               	bsf	3,5	;RP0=1, select bank1
  2517  0447  1303               	bcf	3,6	;RP1=0, select bank1
  2518  0448  00DD               	movwf	(??_setFrequency^(0+128)+1)
  2519  0449  30ED               	movlw	237
  2520  044A  00DC               	movwf	??_setFrequency^(0+128)
  2521  044B                     u3357:	
  2522  044B  0BDC               	decfsz	??_setFrequency^(0+128),f
  2523  044C  2C4B               	goto	u3357
  2524  044D  0BDD               	decfsz	(??_setFrequency^(0+128)+1),f
  2525  044E  2C4B               	goto	u3357
  2526  044F  2C50               	nop2
  2527  0450                     l3969:	
  2528                           
  2529                           ;main.c: 205:             while(!PORTAbits.RA5){
  2530  0450  1283               	bcf	3,5	;RP0=0, select bank0
  2531  0451  1303               	bcf	3,6	;RP1=0, select bank0
  2532  0452  1E85               	btfss	5,5	;volatile
  2533  0453  2C55               	goto	u3121
  2534  0454  2C56               	goto	u3120
  2535  0455                     u3121:	
  2536  0455  2C29               	goto	l3963
  2537  0456                     u3120:	
  2538  0456                     l263:	
  2539                           ;main.c: 210:         }
  2540                           
  2541                           
  2542                           ;main.c: 212:         if(!PORTAbits.RA4){
  2543  0456  1A05               	btfsc	5,4	;volatile
  2544  0457  2C59               	goto	u3131
  2545  0458  2C5A               	goto	u3130
  2546  0459                     u3131:	
  2547  0459  2B8E               	goto	l254
  2548  045A                     u3130:	
  2549  045A                     l3971:	
  2550                           
  2551                           ;main.c: 213:             _delay((unsigned long)((500)*(4000000/4000.0)));
  2552  045A  3003               	movlw	3
  2553  045B  1683               	bsf	3,5	;RP0=1, select bank1
  2554  045C  1303               	bcf	3,6	;RP1=0, select bank1
  2555  045D  00DE               	movwf	(??_setFrequency^(0+128)+2)
  2556  045E  308A               	movlw	138
  2557  045F  00DD               	movwf	(??_setFrequency^(0+128)+1)
  2558  0460  3055               	movlw	85
  2559  0461  00DC               	movwf	??_setFrequency^(0+128)
  2560  0462                     u3367:	
  2561  0462  0BDC               	decfsz	??_setFrequency^(0+128),f
  2562  0463  2C62               	goto	u3367
  2563  0464  0BDD               	decfsz	(??_setFrequency^(0+128)+1),f
  2564  0465  2C62               	goto	u3367
  2565  0466  0BDE               	decfsz	(??_setFrequency^(0+128)+2),f
  2566  0467  2C62               	goto	u3367
  2567  0468                     l3973:	
  2568                           
  2569                           ;main.c: 214:             if(!PORTAbits.RA4){
  2570  0468  1283               	bcf	3,5	;RP0=0, select bank0
  2571  0469  1303               	bcf	3,6	;RP1=0, select bank0
  2572  046A  1A05               	btfsc	5,4	;volatile
  2573  046B  2C6D               	goto	u3141
  2574  046C  2C6E               	goto	u3140
  2575  046D                     u3141:	
  2576  046D  2B8E               	goto	l254
  2577  046E                     u3140:	
  2578  046E                     l3975:	
  2579                           
  2580                           ;main.c: 215:                 setData(1);
  2581  046E  3001               	movlw	1
  2582  046F  120A  158A  2627  120A  118A  	fcall	_setData
  2583  0474                     l3977:	
  2584                           
  2585                           ;main.c: 216:                 beep(1000);
  2586  0474  30E8               	movlw	232
  2587  0475  1683               	bsf	3,5	;RP0=1, select bank1
  2588  0476  1303               	bcf	3,6	;RP1=0, select bank1
  2589  0477  00C3               	movwf	beep@ms^(0+128)
  2590  0478  3003               	movlw	3
  2591  0479  00C4               	movwf	(beep@ms^(0+128)+1)
  2592  047A  120A  158A  24DC  120A  118A  	fcall	_beep
  2593  047F                     l3979:	
  2594                           ;main.c: 217:                 break;
  2595                           
  2596                           
  2597                           ;main.c: 222:     isOnConfig = 0;
  2598  047F  1283               	bcf	3,5	;RP0=0, select bank0
  2599  0480  1303               	bcf	3,6	;RP1=0, select bank0
  2600  0481  01CE               	clrf	_isOnConfig
  2601  0482                     l3981:	
  2602                           
  2603                           ;main.c: 223:     lockingScreen();
  2604  0482  120A  158A  226B  120A  118A  	fcall	_lockingScreen
  2605  0487                     l3983:	
  2606                           
  2607                           ;main.c: 224:     writeFrequency(frequency);
  2608  0487  1283               	bcf	3,5	;RP0=0, select bank0
  2609  0488  1303               	bcf	3,6	;RP1=0, select bank0
  2610  0489  0845               	movf	_frequency+1,w
  2611  048A  1683               	bsf	3,5	;RP0=1, select bank1
  2612  048B  1303               	bcf	3,6	;RP1=0, select bank1
  2613  048C  00C6               	movwf	(writeFrequency@f+1)^(0+128)
  2614  048D  1283               	bcf	3,5	;RP0=0, select bank0
  2615  048E  1303               	bcf	3,6	;RP1=0, select bank0
  2616  048F  0844               	movf	_frequency,w
  2617  0490  1683               	bsf	3,5	;RP0=1, select bank1
  2618  0491  1303               	bcf	3,6	;RP1=0, select bank1
  2619  0492  00C5               	movwf	writeFrequency@f^(0+128)
  2620  0493  120A  118A  2585  120A  118A  	fcall	_writeFrequency
  2621  0498                     l275:	
  2622  0498  0008               	return
  2623  0499                     __end_of_setFrequency:	
  2624                           
  2625                           	psect	text3
  2626  0585                     __ptext3:	
  2627 ;; *************** function _writeFrequency *****************
  2628 ;; Defined at:
  2629 ;;		line 12 in file "bh1514.c"
  2630 ;; Parameters:    Size  Location     Type
  2631 ;;  f               2    2[BANK1 ] unsigned int 
  2632 ;; Auto vars:     Size  Location     Type
  2633 ;;  r               2    9[BANK1 ] unsigned int 
  2634 ;;  buffer          2    7[BANK1 ] unsigned int 
  2635 ;; Return value:  Size  Location     Type
  2636 ;;                  1    wreg      void 
  2637 ;; Registers used:
  2638 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  2639 ;; Tracked objects:
  2640 ;;		On entry : 0/0
  2641 ;;		On exit  : 0/0
  2642 ;;		Unchanged: 0/0
  2643 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2644 ;;      Params:         0       0       2       0       0
  2645 ;;      Locals:         0       0       4       0       0
  2646 ;;      Temps:          0       0       3       0       0
  2647 ;;      Totals:         0       0       9       0       0
  2648 ;;Total ram usage:        9 bytes
  2649 ;; Hardware stack levels used:    1
  2650 ;; Hardware stack levels required when called:    7
  2651 ;; This function calls:
  2652 ;;		_beep
  2653 ;;		_codFreq
  2654 ;; This function is called by:
  2655 ;;		_main
  2656 ;;		_setFrequency
  2657 ;; This function uses a non-reentrant model
  2658 ;;
  2659                           
  2660                           
  2661                           ;psect for function _writeFrequency
  2662  0585                     _writeFrequency:	
  2663  0585                     l3825:	
  2664                           ;incstack = 0
  2665                           ; Regs used in _writeFrequency: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  2666                           
  2667                           
  2668                           ;bh1514.c: 13:     unsigned int buffer;;bh1514.c: 14:     unsigned int r;;bh1514.c: 16: 
      +                              PORTCbits.RC4 = 0;
  2669  0585  1283               	bcf	3,5	;RP0=0, select bank0
  2670  0586  1303               	bcf	3,6	;RP1=0, select bank0
  2671  0587  1207               	bcf	7,4	;volatile
  2672                           
  2673                           ;bh1514.c: 17:     PORTCbits.RC0 = 0;
  2674  0588  1007               	bcf	7,0	;volatile
  2675  0589                     l3827:	
  2676                           
  2677                           ;bh1514.c: 19:     buffer = codFreq(f);
  2678  0589  1683               	bsf	3,5	;RP0=1, select bank1
  2679  058A  1303               	bcf	3,6	;RP1=0, select bank1
  2680  058B  0846               	movf	(writeFrequency@f+1)^(0+128),w
  2681  058C  1283               	bcf	3,5	;RP0=0, select bank0
  2682  058D  1303               	bcf	3,6	;RP1=0, select bank0
  2683  058E  00BE               	movwf	codFreq@f+1
  2684  058F  1683               	bsf	3,5	;RP0=1, select bank1
  2685  0590  1303               	bcf	3,6	;RP1=0, select bank1
  2686  0591  0845               	movf	writeFrequency@f^(0+128),w
  2687  0592  1283               	bcf	3,5	;RP0=0, select bank0
  2688  0593  1303               	bcf	3,6	;RP1=0, select bank0
  2689  0594  00BD               	movwf	codFreq@f
  2690  0595  120A  158A  20BF  120A  118A  	fcall	_codFreq
  2691  059A  1283               	bcf	3,5	;RP0=0, select bank0
  2692  059B  1303               	bcf	3,6	;RP1=0, select bank0
  2693  059C  083E               	movf	?_codFreq+1,w
  2694  059D  1683               	bsf	3,5	;RP0=1, select bank1
  2695  059E  1303               	bcf	3,6	;RP1=0, select bank1
  2696  059F  00CB               	movwf	(writeFrequency@buffer+1)^(0+128)
  2697  05A0  1283               	bcf	3,5	;RP0=0, select bank0
  2698  05A1  1303               	bcf	3,6	;RP1=0, select bank0
  2699  05A2  083D               	movf	?_codFreq,w
  2700  05A3  1683               	bsf	3,5	;RP0=1, select bank1
  2701  05A4  1303               	bcf	3,6	;RP1=0, select bank1
  2702  05A5  00CA               	movwf	writeFrequency@buffer^(0+128)
  2703  05A6                     l3829:	
  2704                           
  2705                           ;bh1514.c: 20:     PORTCbits.RC2 = 0;
  2706  05A6  1283               	bcf	3,5	;RP0=0, select bank0
  2707  05A7  1303               	bcf	3,6	;RP1=0, select bank0
  2708  05A8  1107               	bcf	7,2	;volatile
  2709  05A9                     l3831:	
  2710                           
  2711                           ;bh1514.c: 21:     PORTCbits.RC3 = 0;
  2712  05A9  1187               	bcf	7,3	;volatile
  2713  05AA                     l3833:	
  2714                           
  2715                           ;bh1514.c: 22:     PORTCbits.RC1 = 1;
  2716  05AA  1487               	bsf	7,1	;volatile
  2717  05AB                     l3835:	
  2718                           
  2719                           ;bh1514.c: 23:     _delay((unsigned long)((1)*(4000000/4000.0)));
  2720  05AB  30C7               	movlw	199
  2721  05AC  1683               	bsf	3,5	;RP0=1, select bank1
  2722  05AD  1303               	bcf	3,6	;RP1=0, select bank1
  2723  05AE  00C7               	movwf	??_writeFrequency^(0+128)
  2724  05AF                     u3377:	
  2725  05AF  2DB0               	nop2
  2726  05B0  0BC7               	decfsz	??_writeFrequency^(0+128),f
  2727  05B1  2DAF               	goto	u3377
  2728  05B2  2DB3               	nop2
  2729  05B3                     l3837:	
  2730                           
  2731                           ;bh1514.c: 25:     for(i = 0; i < 16; i++){
  2732  05B3  1683               	bsf	3,5	;RP0=1, select bank1
  2733  05B4  1303               	bcf	3,6	;RP1=0, select bank1
  2734  05B5  01A0               	clrf	_i^(0+128)
  2735  05B6                     l3839:	
  2736  05B6  3010               	movlw	16
  2737  05B7  0220               	subwf	_i^(0+128),w
  2738  05B8  1C03               	skipc
  2739  05B9  2DBB               	goto	u2961
  2740  05BA  2DBC               	goto	u2960
  2741  05BB                     u2961:	
  2742  05BB  2DBD               	goto	l3843
  2743  05BC                     u2960:	
  2744  05BC  2DFB               	goto	l3861
  2745  05BD                     l3843:	
  2746                           
  2747                           ;bh1514.c: 26:         r = (buffer >> i) & 0x0001;
  2748  05BD  084B               	movf	(writeFrequency@buffer+1)^(0+128),w
  2749  05BE  00C8               	movwf	(??_writeFrequency^(0+128)+1)
  2750  05BF  084A               	movf	writeFrequency@buffer^(0+128),w
  2751  05C0  00C7               	movwf	??_writeFrequency^(0+128)
  2752  05C1  0A20               	incf	_i^(0+128),w
  2753  05C2  2DC6               	goto	u2974
  2754  05C3                     u2975:	
  2755  05C3  1003               	clrc
  2756  05C4  0CC8               	rrf	(??_writeFrequency^(0+128)+1),f
  2757  05C5  0CC7               	rrf	??_writeFrequency^(0+128),f
  2758  05C6                     u2974:	
  2759  05C6  3EFF               	addlw	-1
  2760  05C7  1D03               	skipz
  2761  05C8  2DC3               	goto	u2975
  2762  05C9  3001               	movlw	1
  2763  05CA  0547               	andwf	??_writeFrequency^(0+128),w
  2764  05CB  00CC               	movwf	writeFrequency@r^(0+128)
  2765  05CC  3000               	movlw	0
  2766  05CD  0548               	andwf	(??_writeFrequency+1)^(0+128),w
  2767  05CE  00CD               	movwf	(writeFrequency@r+1)^(0+128)
  2768  05CF                     l3845:	
  2769                           
  2770                           ;bh1514.c: 27:         _delay((unsigned long)((1)*(4000000/4000.0)));
  2771  05CF  30C7               	movlw	199
  2772  05D0  1683               	bsf	3,5	;RP0=1, select bank1
  2773  05D1  1303               	bcf	3,6	;RP1=0, select bank1
  2774  05D2  00C7               	movwf	??_writeFrequency^(0+128)
  2775  05D3                     u3387:	
  2776  05D3  2DD4               	nop2
  2777  05D4  0BC7               	decfsz	??_writeFrequency^(0+128),f
  2778  05D5  2DD3               	goto	u3387
  2779  05D6  2DD7               	nop2
  2780  05D7                     l3847:	
  2781                           
  2782                           ;bh1514.c: 28:         PORTCbits.RC2 = 0;
  2783  05D7  1283               	bcf	3,5	;RP0=0, select bank0
  2784  05D8  1303               	bcf	3,6	;RP1=0, select bank0
  2785  05D9  1107               	bcf	7,2	;volatile
  2786  05DA                     l3849:	
  2787                           
  2788                           ;bh1514.c: 29:         if(r == 1){
  2789  05DA  1683               	bsf	3,5	;RP0=1, select bank1
  2790  05DB  1303               	bcf	3,6	;RP1=0, select bank1
  2791  05DC  034C               	decf	writeFrequency@r^(0+128),w
  2792  05DD  044D               	iorwf	(writeFrequency@r+1)^(0+128),w
  2793  05DE  1D03               	btfss	3,2
  2794  05DF  2DE1               	goto	u2981
  2795  05E0  2DE2               	goto	u2980
  2796  05E1                     u2981:	
  2797  05E1  2DE6               	goto	l549
  2798  05E2                     u2980:	
  2799  05E2                     l3851:	
  2800                           
  2801                           ;bh1514.c: 30:             PORTCbits.RC3 = 1;
  2802  05E2  1283               	bcf	3,5	;RP0=0, select bank0
  2803  05E3  1303               	bcf	3,6	;RP1=0, select bank0
  2804  05E4  1587               	bsf	7,3	;volatile
  2805                           
  2806                           ;bh1514.c: 31:         }else{
  2807  05E5  2DE9               	goto	l3853
  2808  05E6                     l549:	
  2809                           
  2810                           ;bh1514.c: 32:             PORTCbits.RC3 = 0;
  2811  05E6  1283               	bcf	3,5	;RP0=0, select bank0
  2812  05E7  1303               	bcf	3,6	;RP1=0, select bank0
  2813  05E8  1187               	bcf	7,3	;volatile
  2814  05E9                     l3853:	
  2815                           
  2816                           ;bh1514.c: 34:         _delay((unsigned long)((1)*(4000000/4000.0)));
  2817  05E9  30C7               	movlw	199
  2818  05EA  1683               	bsf	3,5	;RP0=1, select bank1
  2819  05EB  1303               	bcf	3,6	;RP1=0, select bank1
  2820  05EC  00C7               	movwf	??_writeFrequency^(0+128)
  2821  05ED                     u3397:	
  2822  05ED  2DEE               	nop2
  2823  05EE  0BC7               	decfsz	??_writeFrequency^(0+128),f
  2824  05EF  2DED               	goto	u3397
  2825  05F0  2DF1               	nop2
  2826  05F1                     l3855:	
  2827                           
  2828                           ;bh1514.c: 35:         PORTCbits.RC2 = 1;
  2829  05F1  1283               	bcf	3,5	;RP0=0, select bank0
  2830  05F2  1303               	bcf	3,6	;RP1=0, select bank0
  2831  05F3  1507               	bsf	7,2	;volatile
  2832  05F4                     l3857:	
  2833                           
  2834                           ;bh1514.c: 36:     }
  2835  05F4  3001               	movlw	1
  2836  05F5  1683               	bsf	3,5	;RP0=1, select bank1
  2837  05F6  1303               	bcf	3,6	;RP1=0, select bank1
  2838  05F7  00C7               	movwf	??_writeFrequency^(0+128)
  2839  05F8  0847               	movf	??_writeFrequency^(0+128),w
  2840  05F9  07A0               	addwf	_i^(0+128),f
  2841  05FA  2DB6               	goto	l3839
  2842  05FB                     l3861:	
  2843                           
  2844                           ;bh1514.c: 38:     _delay((unsigned long)((1)*(4000000/4000.0)));
  2845  05FB  30C7               	movlw	199
  2846  05FC  1683               	bsf	3,5	;RP0=1, select bank1
  2847  05FD  1303               	bcf	3,6	;RP1=0, select bank1
  2848  05FE  00C7               	movwf	??_writeFrequency^(0+128)
  2849  05FF                     u3407:	
  2850  05FF  2E00               	nop2
  2851  0600  0BC7               	decfsz	??_writeFrequency^(0+128),f
  2852  0601  2DFF               	goto	u3407
  2853  0602  2E03               	nop2
  2854  0603                     l3863:	
  2855                           
  2856                           ;bh1514.c: 39:     PORTCbits.RC1 = 0;
  2857  0603  1283               	bcf	3,5	;RP0=0, select bank0
  2858  0604  1303               	bcf	3,6	;RP1=0, select bank0
  2859  0605  1087               	bcf	7,1	;volatile
  2860  0606                     l3865:	
  2861                           
  2862                           ;bh1514.c: 41:     beep(20);
  2863  0606  3014               	movlw	20
  2864  0607  1683               	bsf	3,5	;RP0=1, select bank1
  2865  0608  1303               	bcf	3,6	;RP1=0, select bank1
  2866  0609  00C3               	movwf	beep@ms^(0+128)
  2867  060A  3000               	movlw	0
  2868  060B  00C4               	movwf	(beep@ms^(0+128)+1)
  2869  060C  120A  158A  24DC  120A  118A  	fcall	_beep
  2870  0611                     l3867:	
  2871                           
  2872                           ;bh1514.c: 42:     _delay((unsigned long)((500)*(4000000/4000.0)));
  2873  0611  3003               	movlw	3
  2874  0612  1683               	bsf	3,5	;RP0=1, select bank1
  2875  0613  1303               	bcf	3,6	;RP1=0, select bank1
  2876  0614  00C9               	movwf	(??_writeFrequency^(0+128)+2)
  2877  0615  308A               	movlw	138
  2878  0616  00C8               	movwf	(??_writeFrequency^(0+128)+1)
  2879  0617  3055               	movlw	85
  2880  0618  00C7               	movwf	??_writeFrequency^(0+128)
  2881  0619                     u3417:	
  2882  0619  0BC7               	decfsz	??_writeFrequency^(0+128),f
  2883  061A  2E19               	goto	u3417
  2884  061B  0BC8               	decfsz	(??_writeFrequency^(0+128)+1),f
  2885  061C  2E19               	goto	u3417
  2886  061D  0BC9               	decfsz	(??_writeFrequency^(0+128)+2),f
  2887  061E  2E19               	goto	u3417
  2888                           
  2889                           ;bh1514.c: 43:     beep(20);
  2890  061F  3014               	movlw	20
  2891  0620  1683               	bsf	3,5	;RP0=1, select bank1
  2892  0621  1303               	bcf	3,6	;RP1=0, select bank1
  2893  0622  00C3               	movwf	beep@ms^(0+128)
  2894  0623  3000               	movlw	0
  2895  0624  00C4               	movwf	(beep@ms^(0+128)+1)
  2896  0625  120A  158A  24DC  120A  118A  	fcall	_beep
  2897  062A                     l3869:	
  2898                           
  2899                           ;bh1514.c: 44:     _delay((unsigned long)((500)*(4000000/4000.0)));
  2900  062A  3003               	movlw	3
  2901  062B  1683               	bsf	3,5	;RP0=1, select bank1
  2902  062C  1303               	bcf	3,6	;RP1=0, select bank1
  2903  062D  00C9               	movwf	(??_writeFrequency^(0+128)+2)
  2904  062E  308A               	movlw	138
  2905  062F  00C8               	movwf	(??_writeFrequency^(0+128)+1)
  2906  0630  3055               	movlw	85
  2907  0631  00C7               	movwf	??_writeFrequency^(0+128)
  2908  0632                     u3427:	
  2909  0632  0BC7               	decfsz	??_writeFrequency^(0+128),f
  2910  0633  2E32               	goto	u3427
  2911  0634  0BC8               	decfsz	(??_writeFrequency^(0+128)+1),f
  2912  0635  2E32               	goto	u3427
  2913  0636  0BC9               	decfsz	(??_writeFrequency^(0+128)+2),f
  2914  0637  2E32               	goto	u3427
  2915  0638                     l3871:	
  2916                           
  2917                           ;bh1514.c: 45:     for(i = 0; i < 100; i++){
  2918  0638  1683               	bsf	3,5	;RP0=1, select bank1
  2919  0639  1303               	bcf	3,6	;RP1=0, select bank1
  2920  063A  01A0               	clrf	_i^(0+128)
  2921  063B                     l3873:	
  2922  063B  3064               	movlw	100
  2923  063C  0220               	subwf	_i^(0+128),w
  2924  063D  1C03               	skipc
  2925  063E  2E40               	goto	u2991
  2926  063F  2E41               	goto	u2990
  2927  0640                     u2991:	
  2928  0640  2E42               	goto	l3877
  2929  0641                     u2990:	
  2930  0641  2E53               	goto	l552
  2931  0642                     l3877:	
  2932                           
  2933                           ;bh1514.c: 46:         _delay((unsigned long)((100)*(4000000/4000.0)));
  2934  0642  3082               	movlw	130
  2935  0643  1683               	bsf	3,5	;RP0=1, select bank1
  2936  0644  1303               	bcf	3,6	;RP1=0, select bank1
  2937  0645  00C8               	movwf	(??_writeFrequency^(0+128)+1)
  2938  0646  30DD               	movlw	221
  2939  0647  00C7               	movwf	??_writeFrequency^(0+128)
  2940  0648                     u3437:	
  2941  0648  0BC7               	decfsz	??_writeFrequency^(0+128),f
  2942  0649  2E48               	goto	u3437
  2943  064A  0BC8               	decfsz	(??_writeFrequency^(0+128)+1),f
  2944  064B  2E48               	goto	u3437
  2945  064C                     l3879:	
  2946                           
  2947                           ;bh1514.c: 47:     }
  2948  064C  3001               	movlw	1
  2949  064D  1683               	bsf	3,5	;RP0=1, select bank1
  2950  064E  1303               	bcf	3,6	;RP1=0, select bank1
  2951  064F  00C7               	movwf	??_writeFrequency^(0+128)
  2952  0650  0847               	movf	??_writeFrequency^(0+128),w
  2953  0651  07A0               	addwf	_i^(0+128),f
  2954  0652  2E3B               	goto	l3873
  2955  0653                     l552:	
  2956                           
  2957                           ;bh1514.c: 49:     PORTCbits.RC0 = 1;
  2958  0653  1283               	bcf	3,5	;RP0=0, select bank0
  2959  0654  1303               	bcf	3,6	;RP1=0, select bank0
  2960  0655  1407               	bsf	7,0	;volatile
  2961  0656                     l553:	
  2962                           ;bh1514.c: 51:     return;
  2963                           
  2964  0656  0008               	return
  2965  0657                     __end_of_writeFrequency:	
  2966                           
  2967                           	psect	text4
  2968  08BF                     __ptext4:	
  2969 ;; *************** function _codFreq *****************
  2970 ;; Defined at:
  2971 ;;		line 6 in file "bh1514.c"
  2972 ;; Parameters:    Size  Location     Type
  2973 ;;  f               2   29[BANK0 ] unsigned int 
  2974 ;; Auto vars:     Size  Location     Type
  2975 ;;  fr              2   31[BANK0 ] unsigned int 
  2976 ;; Return value:  Size  Location     Type
  2977 ;;                  2   29[BANK0 ] unsigned int 
  2978 ;; Registers used:
  2979 ;;		wreg
  2980 ;; Tracked objects:
  2981 ;;		On entry : 0/0
  2982 ;;		On exit  : 0/0
  2983 ;;		Unchanged: 0/0
  2984 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2985 ;;      Params:         0       2       0       0       0
  2986 ;;      Locals:         0       2       0       0       0
  2987 ;;      Temps:          0       0       0       0       0
  2988 ;;      Totals:         0       4       0       0       0
  2989 ;;Total ram usage:        4 bytes
  2990 ;; Hardware stack levels used:    1
  2991 ;; Hardware stack levels required when called:    5
  2992 ;; This function calls:
  2993 ;;		Nothing
  2994 ;; This function is called by:
  2995 ;;		_writeFrequency
  2996 ;; This function uses a non-reentrant model
  2997 ;;
  2998                           
  2999                           
  3000                           ;psect for function _codFreq
  3001  08BF                     _codFreq:	
  3002  08BF                     l3809:	
  3003                           ;incstack = 0
  3004                           ; Regs used in _codFreq: [wreg]
  3005                           
  3006                           
  3007                           ;bh1514.c: 7:     unsigned int fr;;bh1514.c: 8:         fr = f | 0b0100100000000000;
  3008  08BF  3000               	movlw	0
  3009  08C0  1283               	bcf	3,5	;RP0=0, select bank0
  3010  08C1  1303               	bcf	3,6	;RP1=0, select bank0
  3011  08C2  043D               	iorwf	codFreq@f,w
  3012  08C3  00BF               	movwf	codFreq@fr
  3013  08C4  3048               	movlw	72
  3014  08C5  043E               	iorwf	codFreq@f+1,w
  3015  08C6  00C0               	movwf	codFreq@fr+1
  3016                           
  3017                           ;bh1514.c: 9:     return fr;
  3018  08C7  0840               	movf	codFreq@fr+1,w
  3019  08C8  00BE               	movwf	?_codFreq+1
  3020  08C9  083F               	movf	codFreq@fr,w
  3021  08CA  00BD               	movwf	?_codFreq
  3022  08CB                     l544:	
  3023  08CB  0008               	return
  3024  08CC                     __end_of_codFreq:	
  3025                           
  3026                           	psect	text5
  3027  0CDC                     __ptext5:	
  3028 ;; *************** function _beep *****************
  3029 ;; Defined at:
  3030 ;;		line 168 in file "main.c"
  3031 ;; Parameters:    Size  Location     Type
  3032 ;;  ms              2    0[BANK1 ] int 
  3033 ;; Auto vars:     Size  Location     Type
  3034 ;;		None
  3035 ;; Return value:  Size  Location     Type
  3036 ;;                  1    wreg      void 
  3037 ;; Registers used:
  3038 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  3039 ;; Tracked objects:
  3040 ;;		On entry : 0/0
  3041 ;;		On exit  : 0/0
  3042 ;;		Unchanged: 0/0
  3043 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3044 ;;      Params:         0       0       2       0       0
  3045 ;;      Locals:         0       0       0       0       0
  3046 ;;      Temps:          0       1       0       0       0
  3047 ;;      Totals:         0       1       2       0       0
  3048 ;;Total ram usage:        3 bytes
  3049 ;; Hardware stack levels used:    1
  3050 ;; Hardware stack levels required when called:    6
  3051 ;; This function calls:
  3052 ;;		___wmul
  3053 ;; This function is called by:
  3054 ;;		_main
  3055 ;;		_start
  3056 ;;		_setFrequency
  3057 ;;		_writeFrequency
  3058 ;; This function uses a non-reentrant model
  3059 ;;
  3060                           
  3061                           
  3062                           ;psect for function _beep
  3063  0CDC                     _beep:	
  3064  0CDC                     l3705:	
  3065                           ;incstack = 0
  3066                           ; Regs used in _beep: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  3067                           
  3068                           
  3069                           ;main.c: 169:     ms *= 5;
  3070  0CDC  3005               	movlw	5
  3071  0CDD  1283               	bcf	3,5	;RP0=0, select bank0
  3072  0CDE  1303               	bcf	3,6	;RP1=0, select bank0
  3073  0CDF  00BD               	movwf	___wmul@multiplier
  3074  0CE0  3000               	movlw	0
  3075  0CE1  00BE               	movwf	___wmul@multiplier+1
  3076  0CE2  1683               	bsf	3,5	;RP0=1, select bank1
  3077  0CE3  1303               	bcf	3,6	;RP1=0, select bank1
  3078  0CE4  0844               	movf	(beep@ms+1)^(0+128),w
  3079  0CE5  1283               	bcf	3,5	;RP0=0, select bank0
  3080  0CE6  1303               	bcf	3,6	;RP1=0, select bank0
  3081  0CE7  00C0               	movwf	___wmul@multiplicand+1
  3082  0CE8  1683               	bsf	3,5	;RP0=1, select bank1
  3083  0CE9  1303               	bcf	3,6	;RP1=0, select bank1
  3084  0CEA  0843               	movf	beep@ms^(0+128),w
  3085  0CEB  1283               	bcf	3,5	;RP0=0, select bank0
  3086  0CEC  1303               	bcf	3,6	;RP1=0, select bank0
  3087  0CED  00BF               	movwf	___wmul@multiplicand
  3088  0CEE  120A  158A  21C2  120A  158A  	fcall	___wmul
  3089  0CF3  1283               	bcf	3,5	;RP0=0, select bank0
  3090  0CF4  1303               	bcf	3,6	;RP1=0, select bank0
  3091  0CF5  083E               	movf	?___wmul+1,w
  3092  0CF6  1683               	bsf	3,5	;RP0=1, select bank1
  3093  0CF7  1303               	bcf	3,6	;RP1=0, select bank1
  3094  0CF8  00C4               	movwf	(beep@ms+1)^(0+128)
  3095  0CF9  1283               	bcf	3,5	;RP0=0, select bank0
  3096  0CFA  1303               	bcf	3,6	;RP1=0, select bank0
  3097  0CFB  083D               	movf	?___wmul,w
  3098  0CFC  1683               	bsf	3,5	;RP0=1, select bank1
  3099  0CFD  1303               	bcf	3,6	;RP1=0, select bank1
  3100  0CFE  00C3               	movwf	beep@ms^(0+128)
  3101  0CFF                     l3707:	
  3102  0CFF  0844               	movf	(beep@ms+1)^(0+128),w
  3103  0D00  3A80               	xorlw	128
  3104  0D01  00FF               	movwf	btemp+1
  3105  0D02  3080               	movlw	128
  3106  0D03  027F               	subwf	btemp+1,w
  3107  0D04  1D03               	skipz
  3108  0D05  2D08               	goto	u2815
  3109  0D06  3001               	movlw	1
  3110  0D07  0243               	subwf	beep@ms^(0+128),w
  3111  0D08                     u2815:	
  3112  0D08  1803               	skipnc
  3113  0D09  2D0B               	goto	u2811
  3114  0D0A  2D0C               	goto	u2810
  3115  0D0B                     u2811:	
  3116  0D0B  2D0D               	goto	l246
  3117  0D0C                     u2810:	
  3118  0D0C  2D2A               	goto	l248
  3119  0D0D                     l246:	
  3120                           
  3121                           ;main.c: 171:         PORTBbits.RB0 = 1;
  3122  0D0D  1283               	bcf	3,5	;RP0=0, select bank0
  3123  0D0E  1303               	bcf	3,6	;RP1=0, select bank0
  3124  0D0F  1406               	bsf	6,0	;volatile
  3125  0D10                     l3711:	
  3126                           
  3127                           ;main.c: 172:         _delay((unsigned long)((100)*(4000000/4000000.0)));
  3128  0D10  3020               	movlw	32
  3129  0D11  1283               	bcf	3,5	;RP0=0, select bank0
  3130  0D12  1303               	bcf	3,6	;RP1=0, select bank0
  3131  0D13  00C3               	movwf	??_beep
  3132  0D14                     u3447:	
  3133  0D14  0BC3               	decfsz	??_beep,f
  3134  0D15  2D14               	goto	u3447
  3135  0D16  0000               	nop
  3136  0D17                     l3713:	
  3137                           
  3138                           ;main.c: 173:         PORTBbits.RB0 = 0;
  3139  0D17  1283               	bcf	3,5	;RP0=0, select bank0
  3140  0D18  1303               	bcf	3,6	;RP1=0, select bank0
  3141  0D19  1006               	bcf	6,0	;volatile
  3142                           
  3143                           ;main.c: 174:         _delay((unsigned long)((100)*(4000000/4000000.0)));
  3144  0D1A  3020               	movlw	32
  3145  0D1B  1283               	bcf	3,5	;RP0=0, select bank0
  3146  0D1C  1303               	bcf	3,6	;RP1=0, select bank0
  3147  0D1D  00C3               	movwf	??_beep
  3148  0D1E                     u3457:	
  3149  0D1E  0BC3               	decfsz	??_beep,f
  3150  0D1F  2D1E               	goto	u3457
  3151  0D20  0000               	nop
  3152                           
  3153                           ;main.c: 175:     }
  3154  0D21  30FF               	movlw	255
  3155  0D22  1683               	bsf	3,5	;RP0=1, select bank1
  3156  0D23  1303               	bcf	3,6	;RP1=0, select bank1
  3157  0D24  07C3               	addwf	beep@ms^(0+128),f
  3158  0D25  1803               	skipnc
  3159  0D26  0AC4               	incf	(beep@ms+1)^(0+128),f
  3160  0D27  30FF               	movlw	255
  3161  0D28  07C4               	addwf	(beep@ms+1)^(0+128),f
  3162  0D29  2CFF               	goto	l3707
  3163  0D2A                     l248:	
  3164  0D2A  0008               	return
  3165  0D2B                     __end_of_beep:	
  3166                           
  3167                           	psect	text6
  3168  0E27                     __ptext6:	
  3169 ;; *************** function _setData *****************
  3170 ;; Defined at:
  3171 ;;		line 44 in file "eeprom.c"
  3172 ;; Parameters:    Size  Location     Type
  3173 ;;  full            1    wreg     unsigned char 
  3174 ;; Auto vars:     Size  Location     Type
  3175 ;;  full            1    0[COMMON] unsigned char 
  3176 ;;  data1           1   33[BANK0 ] unsigned char 
  3177 ;;  data0           1   32[BANK0 ] unsigned char 
  3178 ;; Return value:  Size  Location     Type
  3179 ;;                  1    wreg      void 
  3180 ;; Registers used:
  3181 ;;		wreg, status,2, status,0, pclath, cstack
  3182 ;; Tracked objects:
  3183 ;;		On entry : 0/0
  3184 ;;		On exit  : 0/0
  3185 ;;		Unchanged: 0/0
  3186 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3187 ;;      Params:         0       0       0       0       0
  3188 ;;      Locals:         0       2       0       0       0
  3189 ;;      Temps:          0       1       0       0       0
  3190 ;;      Totals:         0       3       0       0       0
  3191 ;;Total ram usage:        3 bytes
  3192 ;; Hardware stack levels used:    1
  3193 ;; Hardware stack levels required when called:    6
  3194 ;; This function calls:
  3195 ;;		_writeEEPROM
  3196 ;; This function is called by:
  3197 ;;		_setFrequency
  3198 ;; This function uses a non-reentrant model
  3199 ;;
  3200                           
  3201                           
  3202                           ;psect for function _setData
  3203  0E27                     _setData:	
  3204  0E27                     l2949:	
  3205                           ;incstack = 0
  3206                           ; Regs used in _setData: [wreg+status,2+status,0+pclath+cstack]
  3207                           
  3208                           
  3209                           ;eeprom.c: 45:     unsigned char data0 = frequency & 0x00FF;
  3210  0E27  1283               	bcf	3,5	;RP0=0, select bank0
  3211  0E28  1303               	bcf	3,6	;RP1=0, select bank0
  3212  0E29  0844               	movf	_frequency,w
  3213  0E2A  00BF               	movwf	??_setData
  3214  0E2B  083F               	movf	??_setData,w
  3215  0E2C  00C0               	movwf	setData@data0
  3216  0E2D                     l2951:	
  3217                           
  3218                           ;eeprom.c: 46:     unsigned char data1 = frequency >> 8;
  3219  0E2D  0845               	movf	_frequency+1,w
  3220  0E2E  00BF               	movwf	??_setData
  3221  0E2F  083F               	movf	??_setData,w
  3222  0E30  00C1               	movwf	setData@data1
  3223  0E31                     l2953:	
  3224                           
  3225                           ;eeprom.c: 47:     writeEEPROM(data0 ,0);
  3226  0E31  01BD               	clrf	writeEEPROM@address
  3227  0E32  0840               	movf	setData@data0,w
  3228  0E33  120A  158A  215C  120A  158A  	fcall	_writeEEPROM
  3229  0E38                     l2955:	
  3230                           
  3231                           ;eeprom.c: 48:     writeEEPROM(data1 ,1);
  3232  0E38  1283               	bcf	3,5	;RP0=0, select bank0
  3233  0E39  1303               	bcf	3,6	;RP1=0, select bank0
  3234  0E3A  01BD               	clrf	writeEEPROM@address
  3235  0E3B  0ABD               	incf	writeEEPROM@address,f
  3236  0E3C  0841               	movf	setData@data1,w
  3237  0E3D  120A  158A  215C  120A  158A  	fcall	_writeEEPROM
  3238  0E42                     l2957:	
  3239                           
  3240                           ;eeprom.c: 49:     writeEEPROM(months ,2);
  3241  0E42  3002               	movlw	2
  3242  0E43  1283               	bcf	3,5	;RP0=0, select bank0
  3243  0E44  1303               	bcf	3,6	;RP1=0, select bank0
  3244  0E45  00BF               	movwf	??_setData
  3245  0E46  083F               	movf	??_setData,w
  3246  0E47  00BD               	movwf	writeEEPROM@address
  3247  0E48  084A               	movf	_months,w
  3248  0E49  120A  158A  215C  120A  158A  	fcall	_writeEEPROM
  3249  0E4E                     l2959:	
  3250                           
  3251                           ;eeprom.c: 50:     writeEEPROM(days ,3);
  3252  0E4E  3003               	movlw	3
  3253  0E4F  1283               	bcf	3,5	;RP0=0, select bank0
  3254  0E50  1303               	bcf	3,6	;RP1=0, select bank0
  3255  0E51  00BF               	movwf	??_setData
  3256  0E52  083F               	movf	??_setData,w
  3257  0E53  00BD               	movwf	writeEEPROM@address
  3258  0E54  0849               	movf	_days,w
  3259  0E55  120A  158A  215C  120A  158A  	fcall	_writeEEPROM
  3260  0E5A                     l2961:	
  3261                           
  3262                           ;eeprom.c: 51:     writeEEPROM(hours ,4);
  3263  0E5A  3004               	movlw	4
  3264  0E5B  1283               	bcf	3,5	;RP0=0, select bank0
  3265  0E5C  1303               	bcf	3,6	;RP1=0, select bank0
  3266  0E5D  00BF               	movwf	??_setData
  3267  0E5E  083F               	movf	??_setData,w
  3268  0E5F  00BD               	movwf	writeEEPROM@address
  3269  0E60  0848               	movf	_hours,w
  3270  0E61  120A  158A  215C  120A  158A  	fcall	_writeEEPROM
  3271  0E66                     l2963:	
  3272                           
  3273                           ;eeprom.c: 52:     writeEEPROM(minutes ,5);
  3274  0E66  3005               	movlw	5
  3275  0E67  1283               	bcf	3,5	;RP0=0, select bank0
  3276  0E68  1303               	bcf	3,6	;RP1=0, select bank0
  3277  0E69  00BF               	movwf	??_setData
  3278  0E6A  083F               	movf	??_setData,w
  3279  0E6B  00BD               	movwf	writeEEPROM@address
  3280  0E6C  0847               	movf	_minutes,w
  3281  0E6D  120A  158A  215C  120A  158A  	fcall	_writeEEPROM
  3282  0E72                     l2965:	
  3283                           
  3284                           ;eeprom.c: 53:     writeEEPROM(functionalStat ,6);
  3285  0E72  3006               	movlw	6
  3286  0E73  1283               	bcf	3,5	;RP0=0, select bank0
  3287  0E74  1303               	bcf	3,6	;RP1=0, select bank0
  3288  0E75  00BF               	movwf	??_setData
  3289  0E76  083F               	movf	??_setData,w
  3290  0E77  00BD               	movwf	writeEEPROM@address
  3291  0E78  084F               	movf	_functionalStat,w
  3292  0E79  120A  158A  215C  120A  158A  	fcall	_writeEEPROM
  3293  0E7E                     l69:	
  3294  0E7E  0008               	return
  3295  0E7F                     __end_of_setData:	
  3296                           
  3297                           	psect	text7
  3298  095C                     __ptext7:	
  3299 ;; *************** function _writeEEPROM *****************
  3300 ;; Defined at:
  3301 ;;		line 14 in file "eeprom.c"
  3302 ;; Parameters:    Size  Location     Type
  3303 ;;  data            1    wreg     unsigned char 
  3304 ;;  address         1   29[BANK0 ] unsigned char 
  3305 ;; Auto vars:     Size  Location     Type
  3306 ;;  data            1   30[BANK0 ] unsigned char 
  3307 ;; Return value:  Size  Location     Type
  3308 ;;                  1    wreg      void 
  3309 ;; Registers used:
  3310 ;;		wreg
  3311 ;; Tracked objects:
  3312 ;;		On entry : 0/0
  3313 ;;		On exit  : 0/0
  3314 ;;		Unchanged: 0/0
  3315 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3316 ;;      Params:         0       1       0       0       0
  3317 ;;      Locals:         0       1       0       0       0
  3318 ;;      Temps:          0       0       0       0       0
  3319 ;;      Totals:         0       2       0       0       0
  3320 ;;Total ram usage:        2 bytes
  3321 ;; Hardware stack levels used:    1
  3322 ;; Hardware stack levels required when called:    5
  3323 ;; This function calls:
  3324 ;;		Nothing
  3325 ;; This function is called by:
  3326 ;;		_setData
  3327 ;; This function uses a non-reentrant model
  3328 ;;
  3329                           
  3330                           
  3331                           ;psect for function _writeEEPROM
  3332  095C                     _writeEEPROM:	
  3333                           
  3334                           ;incstack = 0
  3335                           ; Regs used in _writeEEPROM: [wreg]
  3336                           ;writeEEPROM@data stored from wreg
  3337  095C  1283               	bcf	3,5	;RP0=0, select bank0
  3338  095D  1303               	bcf	3,6	;RP1=0, select bank0
  3339  095E  00BE               	movwf	writeEEPROM@data
  3340  095F                     l2629:	
  3341                           
  3342                           ;eeprom.c: 15:     EEADR = address;
  3343  095F  083D               	movf	writeEEPROM@address,w
  3344  0960  1283               	bcf	3,5	;RP0=0, select bank2
  3345  0961  1703               	bsf	3,6	;RP1=1, select bank2
  3346  0962  008D               	movwf	13	;volatile
  3347                           
  3348                           ;eeprom.c: 16:     EEDATA = data;
  3349  0963  1283               	bcf	3,5	;RP0=0, select bank0
  3350  0964  1303               	bcf	3,6	;RP1=0, select bank0
  3351  0965  083E               	movf	writeEEPROM@data,w
  3352  0966  1283               	bcf	3,5	;RP0=0, select bank2
  3353  0967  1703               	bsf	3,6	;RP1=1, select bank2
  3354  0968  008C               	movwf	12	;volatile
  3355  0969                     l2631:	
  3356                           
  3357                           ;eeprom.c: 18:     EECON1bits.EEPGD = 0;
  3358  0969  1683               	bsf	3,5	;RP0=1, select bank3
  3359  096A  1703               	bsf	3,6	;RP1=1, select bank3
  3360  096B  138C               	bcf	12,7	;volsfr
  3361  096C                     l2633:	
  3362                           
  3363                           ;eeprom.c: 19:     EECON1bits.WREN = 1;
  3364  096C  150C               	bsf	12,2	;volsfr
  3365  096D                     l2635:	
  3366                           
  3367                           ;eeprom.c: 21:     INTCONbits.GIE = 0;
  3368  096D  138B               	bcf	11,7	;volatile
  3369                           
  3370                           ;eeprom.c: 22:     EECON2 = 0x55;
  3371  096E  3055               	movlw	85
  3372  096F  008D               	movwf	13	;volsfr
  3373                           
  3374                           ;eeprom.c: 23:     EECON2 = 0xAA;
  3375  0970  30AA               	movlw	170
  3376  0971  008D               	movwf	13	;volsfr
  3377  0972                     l2637:	
  3378                           
  3379                           ;eeprom.c: 24:     EECON1bits.WR = 1;
  3380  0972  148C               	bsf	12,1	;volsfr
  3381  0973                     l2639:	
  3382                           
  3383                           ;eeprom.c: 25:     INTCONbits.GIE = 1;
  3384  0973  178B               	bsf	11,7	;volatile
  3385  0974                     l60:	
  3386                           ;eeprom.c: 27:     while(PIR2bits.EEIF == 0) continue;
  3387                           
  3388  0974  1283               	bcf	3,5	;RP0=0, select bank0
  3389  0975  1303               	bcf	3,6	;RP1=0, select bank0
  3390  0976  1E0D               	btfss	13,4	;volatile
  3391  0977  2979               	goto	u1551
  3392  0978  297A               	goto	u1550
  3393  0979                     u1551:	
  3394  0979  2974               	goto	l60
  3395  097A                     u1550:	
  3396  097A                     l63:	
  3397  097A  0008               	return
  3398  097B                     __end_of_writeEEPROM:	
  3399                           
  3400                           	psect	text8
  3401  0A6B                     __ptext8:	
  3402 ;; *************** function _lockingScreen *****************
  3403 ;; Defined at:
  3404 ;;		line 250 in file "main.c"
  3405 ;; Parameters:    Size  Location     Type
  3406 ;;		None
  3407 ;; Auto vars:     Size  Location     Type
  3408 ;;		None
  3409 ;; Return value:  Size  Location     Type
  3410 ;;                  1    wreg      void 
  3411 ;; Registers used:
  3412 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3413 ;; Tracked objects:
  3414 ;;		On entry : 0/0
  3415 ;;		On exit  : 0/0
  3416 ;;		Unchanged: 0/0
  3417 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3418 ;;      Params:         0       0       0       0       0
  3419 ;;      Locals:         0       0       0       0       0
  3420 ;;      Temps:          0       0       1       0       0
  3421 ;;      Totals:         0       0       1       0       0
  3422 ;;Total ram usage:        1 bytes
  3423 ;; Hardware stack levels used:    1
  3424 ;; Hardware stack levels required when called:    8
  3425 ;; This function calls:
  3426 ;;		_SetDDRamAddr
  3427 ;;		_putsXLCD
  3428 ;;		_sprintf
  3429 ;; This function is called by:
  3430 ;;		_main
  3431 ;;		_setFrequency
  3432 ;; This function uses a non-reentrant model
  3433 ;;
  3434                           
  3435                           
  3436                           ;psect for function _lockingScreen
  3437  0A6B                     _lockingScreen:	
  3438  0A6B                     l3813:	
  3439                           ;incstack = 0
  3440 ;; hardware stack exceeded
  3441                           ; Regs used in _lockingScreen: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3442                           
  3443                           
  3444                           ;main.c: 252:     sprintf(lineOne,"LOCKING         ");
  3445  0A6B  3021               	movlw	(low ((STR_10-__stringbase)| (0+32768)))& (0+255)
  3446  0A6C  1683               	bsf	3,5	;RP0=1, select bank1
  3447  0A6D  1303               	bcf	3,6	;RP1=0, select bank1
  3448  0A6E  00DB               	movwf	??_lockingScreen^(0+128)
  3449  0A6F  085B               	movf	??_lockingScreen^(0+128),w
  3450  0A70  00CA               	movwf	sprintf@f^(0+128)
  3451  0A71  30B2               	movlw	(low (_lineOne| 0))& (0+255)
  3452  0A72  120A  118A  2035  120A  158A  	fcall	_sprintf
  3453                           
  3454                           ;main.c: 253:     sprintf(lineTwo,"       FREQUENCY");
  3455  0A77  3087               	movlw	(low ((STR_11-__stringbase)| (0+32768)))& (0+255)
  3456  0A78  1683               	bsf	3,5	;RP0=1, select bank1
  3457  0A79  1303               	bcf	3,6	;RP1=0, select bank1
  3458  0A7A  00DB               	movwf	??_lockingScreen^(0+128)
  3459  0A7B  085B               	movf	??_lockingScreen^(0+128),w
  3460  0A7C  00CA               	movwf	sprintf@f^(0+128)
  3461  0A7D  30A1               	movlw	(low (_lineTwo| 0))& (0+255)
  3462  0A7E  120A  118A  2035  120A  158A  	fcall	_sprintf
  3463  0A83                     l3815:	
  3464                           
  3465                           ;main.c: 254:     SetDDRamAddr(0x00);
  3466  0A83  3000               	movlw	0
  3467  0A84  120A  158A  252B  120A  158A  	fcall	_SetDDRamAddr
  3468  0A89                     l3817:	
  3469                           
  3470                           ;main.c: 255:     putsXLCD(lineOne);
  3471  0A89  30B2               	movlw	(low (_lineOne| 0))& (0+255)
  3472  0A8A  120A  118A  27D6  120A  158A  	fcall	_putsXLCD
  3473  0A8F                     l3819:	
  3474                           
  3475                           ;main.c: 256:     SetDDRamAddr(0x40);
  3476  0A8F  3040               	movlw	64
  3477  0A90  120A  158A  252B  120A  158A  	fcall	_SetDDRamAddr
  3478  0A95                     l3821:	
  3479                           
  3480                           ;main.c: 257:     putsXLCD(lineTwo);
  3481  0A95  30A1               	movlw	(low (_lineTwo| 0))& (0+255)
  3482  0A96  120A  118A  27D6  120A  158A  	fcall	_putsXLCD
  3483  0A9B                     l286:	
  3484  0A9B  0008               	return
  3485  0A9C                     __end_of_lockingScreen:	
  3486                           
  3487                           	psect	text9
  3488  0F9B                     __ptext9:	
  3489 ;; *************** function _principalScreen *****************
  3490 ;; Defined at:
  3491 ;;		line 240 in file "main.c"
  3492 ;; Parameters:    Size  Location     Type
  3493 ;;		None
  3494 ;; Auto vars:     Size  Location     Type
  3495 ;;  integ           1   30[BANK1 ] unsigned char 
  3496 ;;  decim           1   29[BANK1 ] unsigned char 
  3497 ;; Return value:  Size  Location     Type
  3498 ;;                  1    wreg      void 
  3499 ;; Registers used:
  3500 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3501 ;; Tracked objects:
  3502 ;;		On entry : 0/0
  3503 ;;		On exit  : 0/0
  3504 ;;		Unchanged: 0/0
  3505 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3506 ;;      Params:         0       0       0       0       0
  3507 ;;      Locals:         0       0       2       0       0
  3508 ;;      Temps:          0       0       5       0       0
  3509 ;;      Totals:         0       0       7       0       0
  3510 ;;Total ram usage:        7 bytes
  3511 ;; Hardware stack levels used:    1
  3512 ;; Hardware stack levels required when called:    8
  3513 ;; This function calls:
  3514 ;;		_SetDDRamAddr
  3515 ;;		___lwdiv
  3516 ;;		___lwmod
  3517 ;;		_putrsXLCD
  3518 ;;		_putsXLCD
  3519 ;;		_sprintf
  3520 ;; This function is called by:
  3521 ;;		_main
  3522 ;; This function uses a non-reentrant model
  3523 ;;
  3524                           
  3525                           
  3526                           ;psect for function _principalScreen
  3527  0F9B                     _principalScreen:	
  3528  0F9B                     l4063:	
  3529                           ;incstack = 0
  3530 ;; hardware stack exceeded
  3531                           ; Regs used in _principalScreen: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3532                           
  3533                           
  3534                           ;main.c: 241:     SetDDRamAddr(0x00);
  3535  0F9B  3000               	movlw	0
  3536  0F9C  120A  158A  252B  120A  158A  	fcall	_SetDDRamAddr
  3537  0FA1                     l4065:	
  3538                           
  3539                           ;main.c: 242:     putrsXLCD("AMPRO      EX-FM");
  3540  0FA1  3065               	movlw	(low ((STR_8-__stringbase)| (0+32768)))& (0+255)
  3541  0FA2  120A  158A  223C  120A  158A  	fcall	_putrsXLCD
  3542  0FA7                     l4067:	
  3543                           
  3544                           ;main.c: 243:     unsigned char decim = frequency % 10;
  3545  0FA7  300A               	movlw	10
  3546  0FA8  1683               	bsf	3,5	;RP0=1, select bank1
  3547  0FA9  1303               	bcf	3,6	;RP1=0, select bank1
  3548  0FAA  00C6               	movwf	___lwmod@divisor^(0+128)
  3549  0FAB  3000               	movlw	0
  3550  0FAC  00C7               	movwf	(___lwmod@divisor^(0+128)+1)
  3551  0FAD  1283               	bcf	3,5	;RP0=0, select bank0
  3552  0FAE  1303               	bcf	3,6	;RP1=0, select bank0
  3553  0FAF  0845               	movf	_frequency+1,w
  3554  0FB0  1683               	bsf	3,5	;RP0=1, select bank1
  3555  0FB1  1303               	bcf	3,6	;RP1=0, select bank1
  3556  0FB2  00C9               	movwf	(___lwmod@dividend+1)^(0+128)
  3557  0FB3  1283               	bcf	3,5	;RP0=0, select bank0
  3558  0FB4  1303               	bcf	3,6	;RP1=0, select bank0
  3559  0FB5  0844               	movf	_frequency,w
  3560  0FB6  1683               	bsf	3,5	;RP0=1, select bank1
  3561  0FB7  1303               	bcf	3,6	;RP1=0, select bank1
  3562  0FB8  00C8               	movwf	___lwmod@dividend^(0+128)
  3563  0FB9  120A  158A  235B  120A  158A  	fcall	___lwmod
  3564  0FBE  1683               	bsf	3,5	;RP0=1, select bank1
  3565  0FBF  1303               	bcf	3,6	;RP1=0, select bank1
  3566  0FC0  0846               	movf	?___lwmod^(0+128),w
  3567  0FC1  00DB               	movwf	??_principalScreen^(0+128)
  3568  0FC2  085B               	movf	??_principalScreen^(0+128),w
  3569  0FC3  00E0               	movwf	principalScreen@decim^(0+128)
  3570  0FC4                     l4069:	
  3571                           
  3572                           ;main.c: 244:     unsigned char integ = frequency / 10;
  3573  0FC4  300A               	movlw	10
  3574  0FC5  1283               	bcf	3,5	;RP0=0, select bank0
  3575  0FC6  1303               	bcf	3,6	;RP1=0, select bank0
  3576  0FC7  00BD               	movwf	___lwdiv@divisor
  3577  0FC8  3000               	movlw	0
  3578  0FC9  00BE               	movwf	___lwdiv@divisor+1
  3579  0FCA  0845               	movf	_frequency+1,w
  3580  0FCB  00C0               	movwf	___lwdiv@dividend+1
  3581  0FCC  0844               	movf	_frequency,w
  3582  0FCD  00BF               	movwf	___lwdiv@dividend
  3583  0FCE  120A  158A  273C  120A  158A  	fcall	___lwdiv
  3584  0FD3  1283               	bcf	3,5	;RP0=0, select bank0
  3585  0FD4  1303               	bcf	3,6	;RP1=0, select bank0
  3586  0FD5  083D               	movf	?___lwdiv,w
  3587  0FD6  1683               	bsf	3,5	;RP0=1, select bank1
  3588  0FD7  1303               	bcf	3,6	;RP1=0, select bank1
  3589  0FD8  00DB               	movwf	??_principalScreen^(0+128)
  3590  0FD9  085B               	movf	??_principalScreen^(0+128),w
  3591  0FDA  00E1               	movwf	principalScreen@integ^(0+128)
  3592  0FDB                     l4071:	
  3593                           
  3594                           ;main.c: 245:     sprintf(lineTwo,"FREQ.  %3d.%d MHz",integ, decim);
  3595  0FDB  300F               	movlw	(low ((STR_9-__stringbase)| (0+32768)))& (0+255)
  3596  0FDC  00DB               	movwf	??_principalScreen^(0+128)
  3597  0FDD  085B               	movf	??_principalScreen^(0+128),w
  3598  0FDE  00CA               	movwf	sprintf@f^(0+128)
  3599  0FDF  0861               	movf	principalScreen@integ^(0+128),w
  3600  0FE0  00DC               	movwf	(??_principalScreen+1)^(0+128)
  3601  0FE1  01DD               	clrf	((??_principalScreen+1)^(0+128)+1)
  3602  0FE2  085C               	movf	(??_principalScreen+1)^(0+128),w
  3603  0FE3  00CB               	movwf	(?_sprintf^(0+128)+1)
  3604  0FE4  085D               	movf	(??_principalScreen+2)^(0+128),w
  3605  0FE5  00CC               	movwf	((?_sprintf+1)^(0+128)+1)
  3606  0FE6  0860               	movf	principalScreen@decim^(0+128),w
  3607  0FE7  00DE               	movwf	(??_principalScreen+3)^(0+128)
  3608  0FE8  01DF               	clrf	((??_principalScreen+3)^(0+128)+1)
  3609  0FE9  085E               	movf	(??_principalScreen+3)^(0+128),w
  3610  0FEA  00CD               	movwf	(?_sprintf^(0+128)+3)
  3611  0FEB  085F               	movf	(??_principalScreen+4)^(0+128),w
  3612  0FEC  00CE               	movwf	((?_sprintf+1)^(0+128)+3)
  3613  0FED  30A1               	movlw	(low (_lineTwo| 0))& (0+255)
  3614  0FEE  120A  118A  2035  120A  158A  	fcall	_sprintf
  3615  0FF3                     l4073:	
  3616                           
  3617                           ;main.c: 246:     SetDDRamAddr(0x40);
  3618  0FF3  3040               	movlw	64
  3619  0FF4  120A  158A  252B  120A  158A  	fcall	_SetDDRamAddr
  3620  0FF9                     l4075:	
  3621                           
  3622                           ;main.c: 247:     putsXLCD(lineTwo);
  3623  0FF9  30A1               	movlw	(low (_lineTwo| 0))& (0+255)
  3624  0FFA  120A  118A  27D6  120A  158A  	fcall	_putsXLCD
  3625  0FFF                     l283:	
  3626  0FFF  0008               	return
  3627  1000                     __end_of_principalScreen:	
  3628                           
  3629                           	psect	text10
  3630  0035                     __ptext10:	
  3631 ;; *************** function _sprintf *****************
  3632 ;; Defined at:
  3633 ;;		line 505 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c"
  3634 ;; Parameters:    Size  Location     Type
  3635 ;;  sp              1    wreg     PTR unsigned char 
  3636 ;;		 -> lineTwo(17), lineOne(17), 
  3637 ;;  f               1    7[BANK1 ] PTR const unsigned char 
  3638 ;;		 -> STR_12(18), STR_11(17), STR_10(17), STR_9(18), 
  3639 ;;		 -> STR_7(17), STR_6(17), STR_5(17), STR_4(17), 
  3640 ;;		 -> STR_3(17), STR_2(17), STR_1(17), 
  3641 ;; Auto vars:     Size  Location     Type
  3642 ;;  sp              1   22[BANK1 ] PTR unsigned char 
  3643 ;;		 -> lineTwo(17), lineOne(17), 
  3644 ;;  tmpval          4    0        struct .
  3645 ;;  width           2   20[BANK1 ] int 
  3646 ;;  val             2   18[BANK1 ] unsigned int 
  3647 ;;  cp              2    0        PTR const unsigned char 
  3648 ;;  len             2    0        unsigned int 
  3649 ;;  c               1   23[BANK1 ] unsigned char 
  3650 ;;  flag            1   17[BANK1 ] unsigned char 
  3651 ;;  prec            1   16[BANK1 ] char 
  3652 ;;  ap              1   15[BANK1 ] PTR void [1]
  3653 ;;		 -> ?_sprintf(2), 
  3654 ;; Return value:  Size  Location     Type
  3655 ;;                  2    7[BANK1 ] int 
  3656 ;; Registers used:
  3657 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3658 ;; Tracked objects:
  3659 ;;		On entry : 0/0
  3660 ;;		On exit  : 0/0
  3661 ;;		Unchanged: 0/0
  3662 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3663 ;;      Params:         0       0       5       0       0
  3664 ;;      Locals:         0       0       9       0       0
  3665 ;;      Temps:          0       0       3       0       0
  3666 ;;      Totals:         0       0      17       0       0
  3667 ;;Total ram usage:       17 bytes
  3668 ;; Hardware stack levels used:    1
  3669 ;; Hardware stack levels required when called:    6
  3670 ;; This function calls:
  3671 ;;		___lwdiv
  3672 ;;		___lwmod
  3673 ;;		___wmul
  3674 ;;		_isdigit
  3675 ;; This function is called by:
  3676 ;;		_start
  3677 ;;		_setFrequency
  3678 ;;		_principalScreen
  3679 ;;		_lockingScreen
  3680 ;; This function uses a non-reentrant model
  3681 ;;
  3682                           
  3683                           
  3684                           ;psect for function _sprintf
  3685  0035                     _sprintf:	
  3686                           
  3687                           ;incstack = 0
  3688 ;; using string table level
  3689                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3690                           ;sprintf@sp stored from wreg
  3691  0035  1683               	bsf	3,5	;RP0=1, select bank1
  3692  0036  1303               	bcf	3,6	;RP1=0, select bank1
  3693  0037  00D9               	movwf	sprintf@sp^(0+128)
  3694  0038                     l3717:	
  3695                           
  3696                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 505: sprint
      +                          f(char * sp, const char * f, ...);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources
      +                          \c90\common\doprnt.c: 506: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\
      +                          common\doprnt.c: 507:  va_list ap;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\source
      +                          s\c90\common\doprnt.c: 512:  char c;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sour
      +                          ces\c90\common\doprnt.c: 514:  int width;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic
      +                          \sources\c90\common\doprnt.c: 521:  signed char prec;
  3697  0038  30CB               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  3698  0039  00CF               	movwf	??_sprintf^(0+128)
  3699  003A  084F               	movf	??_sprintf^(0+128),w
  3700  003B  00D2               	movwf	sprintf@ap^(0+128)
  3701                           
  3702                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 553:  while
      +                          ((c = *f++)) {
  3703  003C  29C4               	goto	l3799
  3704  003D                     l3719:	
  3705                           
  3706                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 555:   if(c
      +                           != '%')
  3707  003D  3025               	movlw	37
  3708  003E  065A               	xorwf	sprintf@c^(0+128),w
  3709  003F  1903               	btfsc	3,2
  3710  0040  2842               	goto	u2821
  3711  0041  2843               	goto	u2820
  3712  0042                     u2821:	
  3713  0042  284F               	goto	l3725
  3714  0043                     u2820:	
  3715  0043                     l3721:	
  3716                           
  3717                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 557:   {;C:
      +                          \Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 558:    ((*sp+
      +                          + = (c)));
  3718  0043  085A               	movf	sprintf@c^(0+128),w
  3719  0044  00CF               	movwf	??_sprintf^(0+128)
  3720  0045  0859               	movf	sprintf@sp^(0+128),w
  3721  0046  0084               	movwf	4
  3722  0047  084F               	movf	??_sprintf^(0+128),w
  3723  0048  1383               	bcf	3,7	;select IRP bank0
  3724  0049  0080               	movwf	0
  3725  004A                     l3723:	
  3726  004A  3001               	movlw	1
  3727  004B  00CF               	movwf	??_sprintf^(0+128)
  3728  004C  084F               	movf	??_sprintf^(0+128),w
  3729  004D  07D9               	addwf	sprintf@sp^(0+128),f
  3730                           
  3731                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 559:    con
      +                          tinue;
  3732  004E  29C4               	goto	l3799
  3733  004F                     l3725:	
  3734                           
  3735                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 563:   widt
      +                          h = 0;
  3736  004F  01D7               	clrf	sprintf@width^(0+128)
  3737  0050  01D8               	clrf	(sprintf@width+1)^(0+128)
  3738                           
  3739                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 565:   flag
      +                           = 0;
  3740  0051  01D4               	clrf	sprintf@flag^(0+128)
  3741  0052                     l3727:	
  3742                           
  3743                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 614:   if(i
      +                          sdigit((unsigned)*f)) {
  3744  0052  084A               	movf	sprintf@f^(0+128),w
  3745  0053  0084               	movwf	4
  3746  0054  120A  158A  2000  120A  118A  	fcall	stringdir
  3747  0059  120A  158A  2100  120A  118A  	fcall	_isdigit
  3748  005E  1C03               	btfss	3,0
  3749  005F  2861               	goto	u2831
  3750  0060  2862               	goto	u2830
  3751  0061                     u2831:	
  3752  0061  28B0               	goto	l3741
  3753  0062                     u2830:	
  3754  0062                     l3729:	
  3755                           
  3756                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 615:    wid
      +                          th = 0;
  3757  0062  1683               	bsf	3,5	;RP0=1, select bank1
  3758  0063  1303               	bcf	3,6	;RP1=0, select bank1
  3759  0064  01D7               	clrf	sprintf@width^(0+128)
  3760  0065  01D8               	clrf	(sprintf@width+1)^(0+128)
  3761  0066                     l3731:	
  3762                           
  3763                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 617:     wi
      +                          dth *= 10;
  3764  0066  300A               	movlw	10
  3765  0067  1283               	bcf	3,5	;RP0=0, select bank0
  3766  0068  1303               	bcf	3,6	;RP1=0, select bank0
  3767  0069  00BD               	movwf	___wmul@multiplier
  3768  006A  3000               	movlw	0
  3769  006B  00BE               	movwf	___wmul@multiplier+1
  3770  006C  1683               	bsf	3,5	;RP0=1, select bank1
  3771  006D  1303               	bcf	3,6	;RP1=0, select bank1
  3772  006E  0858               	movf	(sprintf@width+1)^(0+128),w
  3773  006F  1283               	bcf	3,5	;RP0=0, select bank0
  3774  0070  1303               	bcf	3,6	;RP1=0, select bank0
  3775  0071  00C0               	movwf	___wmul@multiplicand+1
  3776  0072  1683               	bsf	3,5	;RP0=1, select bank1
  3777  0073  1303               	bcf	3,6	;RP1=0, select bank1
  3778  0074  0857               	movf	sprintf@width^(0+128),w
  3779  0075  1283               	bcf	3,5	;RP0=0, select bank0
  3780  0076  1303               	bcf	3,6	;RP1=0, select bank0
  3781  0077  00BF               	movwf	___wmul@multiplicand
  3782  0078  120A  158A  21C2  120A  118A  	fcall	___wmul
  3783  007D  1283               	bcf	3,5	;RP0=0, select bank0
  3784  007E  1303               	bcf	3,6	;RP1=0, select bank0
  3785  007F  083E               	movf	?___wmul+1,w
  3786  0080  1683               	bsf	3,5	;RP0=1, select bank1
  3787  0081  1303               	bcf	3,6	;RP1=0, select bank1
  3788  0082  00D8               	movwf	(sprintf@width+1)^(0+128)
  3789  0083  1283               	bcf	3,5	;RP0=0, select bank0
  3790  0084  1303               	bcf	3,6	;RP1=0, select bank0
  3791  0085  083D               	movf	?___wmul,w
  3792  0086  1683               	bsf	3,5	;RP0=1, select bank1
  3793  0087  1303               	bcf	3,6	;RP1=0, select bank1
  3794  0088  00D7               	movwf	sprintf@width^(0+128)
  3795  0089                     l3733:	
  3796                           
  3797                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 618:       
      +                           width += *f++ - '0';
  3798  0089  084A               	movf	sprintf@f^(0+128),w
  3799  008A  0084               	movwf	4
  3800  008B  120A  158A  2000  120A  118A  	fcall	stringdir
  3801  0090  3ED0               	addlw	208
  3802  0091  00CF               	movwf	??_sprintf^(0+128)
  3803  0092  30FF               	movlw	255
  3804  0093  1803               	skipnc
  3805  0094  3000               	movlw	0
  3806  0095  00D0               	movwf	(??_sprintf^(0+128)+1)
  3807  0096  084F               	movf	??_sprintf^(0+128),w
  3808  0097  07D7               	addwf	sprintf@width^(0+128),f
  3809  0098  1803               	skipnc
  3810  0099  0AD8               	incf	(sprintf@width+1)^(0+128),f
  3811  009A  0850               	movf	(??_sprintf+1)^(0+128),w
  3812  009B  07D8               	addwf	(sprintf@width+1)^(0+128),f
  3813  009C                     l3735:	
  3814  009C  3001               	movlw	1
  3815  009D  00CF               	movwf	??_sprintf^(0+128)
  3816  009E  084F               	movf	??_sprintf^(0+128),w
  3817  009F  07CA               	addwf	sprintf@f^(0+128),f
  3818  00A0                     l3737:	
  3819                           
  3820                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 619:    } w
      +                          hile(isdigit((unsigned)*f));
  3821  00A0  084A               	movf	sprintf@f^(0+128),w
  3822  00A1  0084               	movwf	4
  3823  00A2  120A  158A  2000  120A  118A  	fcall	stringdir
  3824  00A7  120A  158A  2100  120A  118A  	fcall	_isdigit
  3825  00AC  1803               	btfsc	3,0
  3826  00AD  28AF               	goto	u2841
  3827  00AE  28B0               	goto	u2840
  3828  00AF                     u2841:	
  3829  00AF  2866               	goto	l3731
  3830  00B0                     u2840:	
  3831  00B0                     l3741:	
  3832  00B0  3001               	movlw	1
  3833  00B1  1683               	bsf	3,5	;RP0=1, select bank1
  3834  00B2  1303               	bcf	3,6	;RP1=0, select bank1
  3835  00B3  07CA               	addwf	sprintf@f^(0+128),f
  3836  00B4  30FF               	movlw	-1
  3837  00B5  074A               	addwf	sprintf@f^(0+128),w
  3838  00B6  0084               	movwf	4
  3839  00B7  120A  158A  2000  120A  118A  	fcall	stringdir
  3840  00BC  00DA               	movwf	sprintf@c^(0+128)
  3841  00BD  00CF               	movwf	??_sprintf^(0+128)
  3842  00BE  01D0               	clrf	(??_sprintf^(0+128)+1)
  3843                           
  3844                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3845                           ; Switch size 1, requested type "simple"
  3846                           ; Number of cases is 1, Range of values is 0 to 0
  3847                           ; switch strategies available:
  3848                           ; Name         Instructions Cycles
  3849                           ; simple_byte            4     3 (average)
  3850                           ; direct_byte           11     8 (fixed)
  3851                           ; jumptable            260     6 (fixed)
  3852                           ;	Chosen strategy is simple_byte
  3853  00BF  0850               	movf	(??_sprintf+1)^(0+128),w
  3854  00C0  3A00               	xorlw	0	; case 0
  3855  00C1  1903               	skipnz
  3856  00C2  28C4               	goto	l4159
  3857  00C3  29C4               	goto	l3799
  3858  00C4                     l4159:	
  3859                           
  3860                           ; Switch size 1, requested type "simple"
  3861                           ; Number of cases is 3, Range of values is 0 to 105
  3862                           ; switch strategies available:
  3863                           ; Name         Instructions Cycles
  3864                           ; simple_byte           10     6 (average)
  3865                           ; jumptable            260     6 (fixed)
  3866                           ;	Chosen strategy is simple_byte
  3867  00C4  084F               	movf	??_sprintf^(0+128),w
  3868  00C5  3A00               	xorlw	0	; case 0
  3869  00C6  1903               	skipnz
  3870  00C7  29D6               	goto	l3801
  3871  00C8  3A64               	xorlw	100	; case 100
  3872  00C9  1903               	skipnz
  3873  00CA  28CF               	goto	l3743
  3874  00CB  3A0D               	xorlw	13	; case 105
  3875  00CC  1903               	skipnz
  3876  00CD  28CF               	goto	l3743
  3877  00CE  29C4               	goto	l3799
  3878  00CF                     l3743:	
  3879                           
  3880                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1279:   {;C
      +                          :\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1285:     val
      +                           = (unsigned int)(*(int *)__va_arg((*(int **)ap), (int)0));
  3881  00CF  0852               	movf	sprintf@ap^(0+128),w
  3882  00D0  0084               	movwf	4
  3883  00D1  1383               	bcf	3,7	;select IRP bank0
  3884  00D2  0800               	movf	0,w
  3885  00D3  00D5               	movwf	sprintf@val^(0+128)
  3886  00D4  0A84               	incf	4,f
  3887  00D5  0800               	movf	0,w
  3888  00D6  00D6               	movwf	(sprintf@val+1)^(0+128)
  3889  00D7                     l3745:	
  3890  00D7  3002               	movlw	2
  3891  00D8  00CF               	movwf	??_sprintf^(0+128)
  3892  00D9  084F               	movf	??_sprintf^(0+128),w
  3893  00DA  07D2               	addwf	sprintf@ap^(0+128),f
  3894  00DB                     l3747:	
  3895                           
  3896                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1287:    if
      +                          ((int)val < 0) {
  3897  00DB  1FD6               	btfss	(sprintf@val+1)^(0+128),7
  3898  00DC  28DE               	goto	u2851
  3899  00DD  28DF               	goto	u2850
  3900  00DE                     u2851:	
  3901  00DE  28E8               	goto	l3753
  3902  00DF                     u2850:	
  3903  00DF                     l3749:	
  3904                           
  3905                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1288:     f
      +                          lag |= 0x03;
  3906  00DF  3003               	movlw	3
  3907  00E0  00CF               	movwf	??_sprintf^(0+128)
  3908  00E1  084F               	movf	??_sprintf^(0+128),w
  3909  00E2  04D4               	iorwf	sprintf@flag^(0+128),f
  3910  00E3                     l3751:	
  3911                           
  3912                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1289:     v
      +                          al = -val;
  3913  00E3  09D5               	comf	sprintf@val^(0+128),f
  3914  00E4  09D6               	comf	(sprintf@val+1)^(0+128),f
  3915  00E5  0AD5               	incf	sprintf@val^(0+128),f
  3916  00E6  1903               	skipnz
  3917  00E7  0AD6               	incf	(sprintf@val+1)^(0+128),f
  3918  00E8                     l3753:	
  3919                           
  3920                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1292:   };C
      +                          :\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1331:    for(
      +                          c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  3921  00E8  01DA               	clrf	sprintf@c^(0+128)
  3922  00E9  0ADA               	incf	sprintf@c^(0+128),f
  3923  00EA                     l3759:	
  3924                           
  3925                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1332:     i
      +                          f(val < dpowers[c])
  3926  00EA  085A               	movf	sprintf@c^(0+128),w
  3927  00EB  00CF               	movwf	??_sprintf^(0+128)
  3928  00EC  074F               	addwf	??_sprintf^(0+128),w
  3929  00ED  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  3930  00EE  0084               	movwf	4
  3931  00EF  120A  158A  2000  120A  118A  	fcall	stringdir
  3932  00F4  00D0               	movwf	(??_sprintf+1)^(0+128)
  3933  00F5  120A  158A  2000  120A  118A  	fcall	stringdir
  3934  00FA  00D1               	movwf	((??_sprintf+1)^(0+128)+1)
  3935  00FB  0851               	movf	(??_sprintf+2)^(0+128),w
  3936  00FC  0256               	subwf	(sprintf@val+1)^(0+128),w
  3937  00FD  1D03               	skipz
  3938  00FE  2901               	goto	u2865
  3939  00FF  0850               	movf	(??_sprintf+1)^(0+128),w
  3940  0100  0255               	subwf	sprintf@val^(0+128),w
  3941  0101                     u2865:	
  3942  0101  1803               	skipnc
  3943  0102  2904               	goto	u2861
  3944  0103  2905               	goto	u2860
  3945  0104                     u2861:	
  3946  0104  2906               	goto	l3763
  3947  0105                     u2860:	
  3948  0105  2910               	goto	l3765
  3949  0106                     l3763:	
  3950  0106  3001               	movlw	1
  3951  0107  00CF               	movwf	??_sprintf^(0+128)
  3952  0108  084F               	movf	??_sprintf^(0+128),w
  3953  0109  07DA               	addwf	sprintf@c^(0+128),f
  3954  010A  3005               	movlw	5
  3955  010B  065A               	xorwf	sprintf@c^(0+128),w
  3956  010C  1D03               	btfss	3,2
  3957  010D  290F               	goto	u2871
  3958  010E  2910               	goto	u2870
  3959  010F                     u2871:	
  3960  010F  28EA               	goto	l3759
  3961  0110                     u2870:	
  3962  0110                     l3765:	
  3963                           
  3964                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1371:   if(
      +                          width && flag & 0x03)
  3965  0110  0857               	movf	sprintf@width^(0+128),w
  3966  0111  0458               	iorwf	(sprintf@width+1)^(0+128),w
  3967  0112  1903               	btfsc	3,2
  3968  0113  2915               	goto	u2881
  3969  0114  2916               	goto	u2880
  3970  0115                     u2881:	
  3971  0115  2922               	goto	l740
  3972  0116                     u2880:	
  3973  0116                     l3767:	
  3974  0116  0854               	movf	sprintf@flag^(0+128),w
  3975  0117  3903               	andlw	3
  3976  0118  1903               	btfsc	3,2
  3977  0119  291B               	goto	u2891
  3978  011A  291C               	goto	u2890
  3979  011B                     u2891:	
  3980  011B  2922               	goto	l740
  3981  011C                     u2890:	
  3982  011C                     l3769:	
  3983                           
  3984                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1372:    wi
      +                          dth--;
  3985  011C  30FF               	movlw	255
  3986  011D  07D7               	addwf	sprintf@width^(0+128),f
  3987  011E  1803               	skipnc
  3988  011F  0AD8               	incf	(sprintf@width+1)^(0+128),f
  3989  0120  30FF               	movlw	255
  3990  0121  07D8               	addwf	(sprintf@width+1)^(0+128),f
  3991  0122                     l740:	
  3992                           
  3993                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1407:   if(
      +                          width > c)
  3994  0122  0858               	movf	(sprintf@width+1)^(0+128),w
  3995  0123  3A80               	xorlw	128
  3996  0124  3C80               	sublw	128
  3997  0125  1D03               	skipz
  3998  0126  2929               	goto	u2905
  3999  0127  0857               	movf	sprintf@width^(0+128),w
  4000  0128  025A               	subwf	sprintf@c^(0+128),w
  4001  0129                     u2905:	
  4002  0129  1803               	skipnc
  4003  012A  292C               	goto	u2901
  4004  012B  292D               	goto	u2900
  4005  012C                     u2901:	
  4006  012C  2939               	goto	l3773
  4007  012D                     u2900:	
  4008  012D                     l3771:	
  4009                           
  4010                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1408:    wi
      +                          dth -= c;
  4011  012D  1683               	bsf	3,5	;RP0=1, select bank1
  4012  012E  1303               	bcf	3,6	;RP1=0, select bank1
  4013  012F  085A               	movf	sprintf@c^(0+128),w
  4014  0130  00CF               	movwf	??_sprintf^(0+128)
  4015  0131  01D0               	clrf	(??_sprintf^(0+128)+1)
  4016  0132  084F               	movf	??_sprintf^(0+128),w
  4017  0133  02D7               	subwf	sprintf@width^(0+128),f
  4018  0134  0850               	movf	(??_sprintf+1)^(0+128),w
  4019  0135  1C03               	skipc
  4020  0136  03D8               	decf	(sprintf@width+1)^(0+128),f
  4021  0137  02D8               	subwf	(sprintf@width+1)^(0+128),f
  4022  0138  293D               	goto	l3775
  4023  0139                     l3773:	
  4024                           
  4025                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1410:    wi
      +                          dth = 0;
  4026  0139  1683               	bsf	3,5	;RP0=1, select bank1
  4027  013A  1303               	bcf	3,6	;RP1=0, select bank1
  4028  013B  01D7               	clrf	sprintf@width^(0+128)
  4029  013C  01D8               	clrf	(sprintf@width+1)^(0+128)
  4030  013D                     l3775:	
  4031                           
  4032                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1448:   {;C
      +                          :\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1450:    if(w
      +                          idth
  4033  013D  0857               	movf	sprintf@width^(0+128),w
  4034  013E  0458               	iorwf	(sprintf@width+1)^(0+128),w
  4035  013F  1903               	btfsc	3,2
  4036  0140  2942               	goto	u2911
  4037  0141  2943               	goto	u2910
  4038  0142                     u2911:	
  4039  0142  295A               	goto	l3783
  4040  0143                     u2910:	
  4041  0143                     l3777:	
  4042                           
  4043                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1456:      
      +                          ((*sp++ = (' ')));
  4044  0143  3020               	movlw	32
  4045  0144  00CF               	movwf	??_sprintf^(0+128)
  4046  0145  0859               	movf	sprintf@sp^(0+128),w
  4047  0146  0084               	movwf	4
  4048  0147  084F               	movf	??_sprintf^(0+128),w
  4049  0148  1383               	bcf	3,7	;select IRP bank0
  4050  0149  0080               	movwf	0
  4051  014A                     l3779:	
  4052  014A  3001               	movlw	1
  4053  014B  00CF               	movwf	??_sprintf^(0+128)
  4054  014C  084F               	movf	??_sprintf^(0+128),w
  4055  014D  07D9               	addwf	sprintf@sp^(0+128),f
  4056  014E                     l3781:	
  4057  014E  30FF               	movlw	255
  4058  014F  07D7               	addwf	sprintf@width^(0+128),f
  4059  0150  1803               	skipnc
  4060  0151  0AD8               	incf	(sprintf@width+1)^(0+128),f
  4061  0152  30FF               	movlw	255
  4062  0153  07D8               	addwf	(sprintf@width+1)^(0+128),f
  4063  0154  0857               	movf	sprintf@width^(0+128),w
  4064  0155  0458               	iorwf	(sprintf@width+1)^(0+128),w
  4065  0156  1D03               	btfss	3,2
  4066  0157  2959               	goto	u2921
  4067  0158  295A               	goto	u2920
  4068  0159                     u2921:	
  4069  0159  2943               	goto	l3777
  4070  015A                     u2920:	
  4071  015A                     l3783:	
  4072                           
  4073                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1464:    if
      +                          (flag & 0x03)
  4074  015A  0854               	movf	sprintf@flag^(0+128),w
  4075  015B  3903               	andlw	3
  4076  015C  1903               	btfsc	3,2
  4077  015D  295F               	goto	u2931
  4078  015E  2960               	goto	u2930
  4079  015F                     u2931:	
  4080  015F  296B               	goto	l3789
  4081  0160                     u2930:	
  4082  0160                     l3785:	
  4083                           
  4084                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1465:     (
      +                          (*sp++ = ('-')));
  4085  0160  302D               	movlw	45
  4086  0161  00CF               	movwf	??_sprintf^(0+128)
  4087  0162  0859               	movf	sprintf@sp^(0+128),w
  4088  0163  0084               	movwf	4
  4089  0164  084F               	movf	??_sprintf^(0+128),w
  4090  0165  1383               	bcf	3,7	;select IRP bank0
  4091  0166  0080               	movwf	0
  4092  0167                     l3787:	
  4093  0167  3001               	movlw	1
  4094  0168  00CF               	movwf	??_sprintf^(0+128)
  4095  0169  084F               	movf	??_sprintf^(0+128),w
  4096  016A  07D9               	addwf	sprintf@sp^(0+128),f
  4097  016B                     l3789:	
  4098                           
  4099                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1495:   };C
      +                          :\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1498:   prec 
      +                          = c;
  4100  016B  085A               	movf	sprintf@c^(0+128),w
  4101  016C  00CF               	movwf	??_sprintf^(0+128)
  4102  016D  084F               	movf	??_sprintf^(0+128),w
  4103  016E  00D3               	movwf	sprintf@prec^(0+128)
  4104                           
  4105                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1500:   whi
      +                          le(prec--) {
  4106  016F  29BB               	goto	l3797
  4107  0170                     l3791:	
  4108                           
  4109                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1504:    {;
      +                          C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1515:     c 
      +                          = (val / dpowers[(unsigned char)prec]) % 10 + '0';
  4110  0170  300A               	movlw	10
  4111  0171  00C6               	movwf	___lwmod@divisor^(0+128)
  4112  0172  3000               	movlw	0
  4113  0173  00C7               	movwf	(___lwmod@divisor^(0+128)+1)
  4114  0174  0853               	movf	sprintf@prec^(0+128),w
  4115  0175  00CF               	movwf	??_sprintf^(0+128)
  4116  0176  074F               	addwf	??_sprintf^(0+128),w
  4117  0177  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  4118  0178  0084               	movwf	4
  4119  0179  120A  158A  2000  120A  118A  	fcall	stringdir
  4120  017E  1283               	bcf	3,5	;RP0=0, select bank0
  4121  017F  1303               	bcf	3,6	;RP1=0, select bank0
  4122  0180  00BD               	movwf	___lwdiv@divisor
  4123  0181  120A  158A  2000  120A  118A  	fcall	stringdir
  4124  0186  00BE               	movwf	___lwdiv@divisor+1
  4125  0187  1683               	bsf	3,5	;RP0=1, select bank1
  4126  0188  1303               	bcf	3,6	;RP1=0, select bank1
  4127  0189  0856               	movf	(sprintf@val+1)^(0+128),w
  4128  018A  1283               	bcf	3,5	;RP0=0, select bank0
  4129  018B  1303               	bcf	3,6	;RP1=0, select bank0
  4130  018C  00C0               	movwf	___lwdiv@dividend+1
  4131  018D  1683               	bsf	3,5	;RP0=1, select bank1
  4132  018E  1303               	bcf	3,6	;RP1=0, select bank1
  4133  018F  0855               	movf	sprintf@val^(0+128),w
  4134  0190  1283               	bcf	3,5	;RP0=0, select bank0
  4135  0191  1303               	bcf	3,6	;RP1=0, select bank0
  4136  0192  00BF               	movwf	___lwdiv@dividend
  4137  0193  120A  158A  273C  120A  118A  	fcall	___lwdiv
  4138  0198  1283               	bcf	3,5	;RP0=0, select bank0
  4139  0199  1303               	bcf	3,6	;RP1=0, select bank0
  4140  019A  083E               	movf	?___lwdiv+1,w
  4141  019B  1683               	bsf	3,5	;RP0=1, select bank1
  4142  019C  1303               	bcf	3,6	;RP1=0, select bank1
  4143  019D  00C9               	movwf	(___lwmod@dividend+1)^(0+128)
  4144  019E  1283               	bcf	3,5	;RP0=0, select bank0
  4145  019F  1303               	bcf	3,6	;RP1=0, select bank0
  4146  01A0  083D               	movf	?___lwdiv,w
  4147  01A1  1683               	bsf	3,5	;RP0=1, select bank1
  4148  01A2  1303               	bcf	3,6	;RP1=0, select bank1
  4149  01A3  00C8               	movwf	___lwmod@dividend^(0+128)
  4150  01A4  120A  158A  235B  120A  118A  	fcall	___lwmod
  4151  01A9  1683               	bsf	3,5	;RP0=1, select bank1
  4152  01AA  1303               	bcf	3,6	;RP1=0, select bank1
  4153  01AB  0846               	movf	?___lwmod^(0+128),w
  4154  01AC  3E30               	addlw	48
  4155  01AD  00D0               	movwf	(??_sprintf+1)^(0+128)
  4156  01AE  0850               	movf	(??_sprintf+1)^(0+128),w
  4157  01AF  00DA               	movwf	sprintf@c^(0+128)
  4158  01B0                     l3793:	
  4159                           
  4160                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1549:    };
      +                          C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1550:    ((*
      +                          sp++ = (c)));
  4161  01B0  085A               	movf	sprintf@c^(0+128),w
  4162  01B1  00CF               	movwf	??_sprintf^(0+128)
  4163  01B2  0859               	movf	sprintf@sp^(0+128),w
  4164  01B3  0084               	movwf	4
  4165  01B4  084F               	movf	??_sprintf^(0+128),w
  4166  01B5  1383               	bcf	3,7	;select IRP bank0
  4167  01B6  0080               	movwf	0
  4168  01B7                     l3795:	
  4169  01B7  3001               	movlw	1
  4170  01B8  00CF               	movwf	??_sprintf^(0+128)
  4171  01B9  084F               	movf	??_sprintf^(0+128),w
  4172  01BA  07D9               	addwf	sprintf@sp^(0+128),f
  4173  01BB                     l3797:	
  4174                           
  4175                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1500:   whi
      +                          le(prec--) {
  4176  01BB  30FF               	movlw	255
  4177  01BC  00CF               	movwf	??_sprintf^(0+128)
  4178  01BD  084F               	movf	??_sprintf^(0+128),w
  4179  01BE  07D3               	addwf	sprintf@prec^(0+128),f
  4180  01BF  0A53               	incf	sprintf@prec^(0+128),w
  4181  01C0  1D03               	btfss	3,2
  4182  01C1  29C3               	goto	u2941
  4183  01C2  29C4               	goto	u2940
  4184  01C3                     u2941:	
  4185  01C3  2970               	goto	l3791
  4186  01C4                     u2940:	
  4187  01C4                     l3799:	
  4188                           
  4189                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 553:  while
      +                          ((c = *f++)) {
  4190  01C4  3001               	movlw	1
  4191  01C5  07CA               	addwf	sprintf@f^(0+128),f
  4192  01C6  30FF               	movlw	-1
  4193  01C7  074A               	addwf	sprintf@f^(0+128),w
  4194  01C8  0084               	movwf	4
  4195  01C9  120A  158A  2000  120A  118A  	fcall	stringdir
  4196  01CE  00CF               	movwf	??_sprintf^(0+128)
  4197  01CF  084F               	movf	??_sprintf^(0+128),w
  4198  01D0  00DA               	movwf	sprintf@c^(0+128)
  4199  01D1  085A               	movf	sprintf@c^(0+128),w
  4200  01D2  1D03               	btfss	3,2
  4201  01D3  29D5               	goto	u2951
  4202  01D4  29D6               	goto	u2950
  4203  01D5                     u2951:	
  4204  01D5  283D               	goto	l3719
  4205  01D6                     u2950:	
  4206  01D6                     l3801:	
  4207                           
  4208                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1564:  *sp 
      +                          = 0;
  4209  01D6  0859               	movf	sprintf@sp^(0+128),w
  4210  01D7  0084               	movwf	4
  4211  01D8  1383               	bcf	3,7	;select IRP bank0
  4212  01D9  0180               	clrf	0
  4213  01DA                     l751:	
  4214  01DA  0008               	return
  4215  01DB                     __end_of_sprintf:	
  4216                           
  4217                           	psect	text11
  4218  0900                     __ptext11:	
  4219 ;; *************** function _isdigit *****************
  4220 ;; Defined at:
  4221 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\isdigit.c"
  4222 ;; Parameters:    Size  Location     Type
  4223 ;;  c               1    wreg     unsigned char 
  4224 ;; Auto vars:     Size  Location     Type
  4225 ;;  c               1   30[BANK0 ] unsigned char 
  4226 ;; Return value:  Size  Location     Type
  4227 ;;		None               void
  4228 ;; Registers used:
  4229 ;;		wreg, status,2, status,0
  4230 ;; Tracked objects:
  4231 ;;		On entry : 0/0
  4232 ;;		On exit  : 0/0
  4233 ;;		Unchanged: 0/0
  4234 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4235 ;;      Params:         0       0       0       0       0
  4236 ;;      Locals:         0       2       0       0       0
  4237 ;;      Temps:          0       0       0       0       0
  4238 ;;      Totals:         0       2       0       0       0
  4239 ;;Total ram usage:        2 bytes
  4240 ;; Hardware stack levels used:    1
  4241 ;; Hardware stack levels required when called:    5
  4242 ;; This function calls:
  4243 ;;		Nothing
  4244 ;; This function is called by:
  4245 ;;		_sprintf
  4246 ;; This function uses a non-reentrant model
  4247 ;;
  4248                           
  4249                           
  4250                           ;psect for function _isdigit
  4251  0900                     _isdigit:	
  4252                           
  4253                           ;incstack = 0
  4254                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  4255                           ;isdigit@c stored from wreg
  4256  0900  1283               	bcf	3,5	;RP0=0, select bank0
  4257  0901  1303               	bcf	3,6	;RP1=0, select bank0
  4258  0902  00BE               	movwf	isdigit@c
  4259  0903                     l2553:	
  4260  0903  01BD               	clrf	_isdigit$1166
  4261  0904                     l2555:	
  4262  0904  303A               	movlw	58
  4263  0905  023E               	subwf	isdigit@c,w
  4264  0906  1803               	skipnc
  4265  0907  2909               	goto	u1361
  4266  0908  290A               	goto	u1360
  4267  0909                     u1361:	
  4268  0909  2912               	goto	l2561
  4269  090A                     u1360:	
  4270  090A                     l2557:	
  4271  090A  3030               	movlw	48
  4272  090B  023E               	subwf	isdigit@c,w
  4273  090C  1C03               	skipc
  4274  090D  290F               	goto	u1371
  4275  090E  2910               	goto	u1370
  4276  090F                     u1371:	
  4277  090F  2912               	goto	l2561
  4278  0910                     u1370:	
  4279  0910                     l2559:	
  4280  0910  01BD               	clrf	_isdigit$1166
  4281  0911  0ABD               	incf	_isdigit$1166,f
  4282  0912                     l2561:	
  4283  0912  0C3D               	rrf	_isdigit$1166,w
  4284  0913                     l1217:	
  4285  0913  0008               	return
  4286  0914                     __end_of_isdigit:	
  4287                           
  4288                           	psect	text12
  4289  09C2                     __ptext12:	
  4290 ;; *************** function ___wmul *****************
  4291 ;; Defined at:
  4292 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\Umul16.c"
  4293 ;; Parameters:    Size  Location     Type
  4294 ;;  multiplier      2   29[BANK0 ] unsigned int 
  4295 ;;  multiplicand    2   31[BANK0 ] unsigned int 
  4296 ;; Auto vars:     Size  Location     Type
  4297 ;;  product         2   33[BANK0 ] unsigned int 
  4298 ;; Return value:  Size  Location     Type
  4299 ;;                  2   29[BANK0 ] unsigned int 
  4300 ;; Registers used:
  4301 ;;		wreg, status,2, status,0
  4302 ;; Tracked objects:
  4303 ;;		On entry : 0/0
  4304 ;;		On exit  : 0/0
  4305 ;;		Unchanged: 0/0
  4306 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4307 ;;      Params:         0       4       0       0       0
  4308 ;;      Locals:         0       2       0       0       0
  4309 ;;      Temps:          0       0       0       0       0
  4310 ;;      Totals:         0       6       0       0       0
  4311 ;;Total ram usage:        6 bytes
  4312 ;; Hardware stack levels used:    1
  4313 ;; Hardware stack levels required when called:    5
  4314 ;; This function calls:
  4315 ;;		Nothing
  4316 ;; This function is called by:
  4317 ;;		_beep
  4318 ;;		_sprintf
  4319 ;; This function uses a non-reentrant model
  4320 ;;
  4321                           
  4322                           
  4323                           ;psect for function ___wmul
  4324  09C2                     ___wmul:	
  4325  09C2                     l3643:	
  4326                           ;incstack = 0
  4327                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  4328                           
  4329  09C2  1283               	bcf	3,5	;RP0=0, select bank0
  4330  09C3  1303               	bcf	3,6	;RP1=0, select bank0
  4331  09C4  01C1               	clrf	___wmul@product
  4332  09C5  01C2               	clrf	___wmul@product+1
  4333  09C6                     l3645:	
  4334  09C6  1C3D               	btfss	___wmul@multiplier,0
  4335  09C7  29C9               	goto	u2641
  4336  09C8  29CA               	goto	u2640
  4337  09C9                     u2641:	
  4338  09C9  29D0               	goto	l755
  4339  09CA                     u2640:	
  4340  09CA                     l3647:	
  4341  09CA  083F               	movf	___wmul@multiplicand,w
  4342  09CB  07C1               	addwf	___wmul@product,f
  4343  09CC  1803               	skipnc
  4344  09CD  0AC2               	incf	___wmul@product+1,f
  4345  09CE  0840               	movf	___wmul@multiplicand+1,w
  4346  09CF  07C2               	addwf	___wmul@product+1,f
  4347  09D0                     l755:	
  4348  09D0  3001               	movlw	1
  4349  09D1                     u2655:	
  4350  09D1  1003               	clrc
  4351  09D2  0DBF               	rlf	___wmul@multiplicand,f
  4352  09D3  0DC0               	rlf	___wmul@multiplicand+1,f
  4353  09D4  3EFF               	addlw	-1
  4354  09D5  1D03               	skipz
  4355  09D6  29D1               	goto	u2655
  4356  09D7                     l3649:	
  4357  09D7  3001               	movlw	1
  4358  09D8                     u2665:	
  4359  09D8  1003               	clrc
  4360  09D9  0CBE               	rrf	___wmul@multiplier+1,f
  4361  09DA  0CBD               	rrf	___wmul@multiplier,f
  4362  09DB  3EFF               	addlw	-1
  4363  09DC  1D03               	skipz
  4364  09DD  29D8               	goto	u2665
  4365  09DE                     l3651:	
  4366  09DE  083D               	movf	___wmul@multiplier,w
  4367  09DF  043E               	iorwf	___wmul@multiplier+1,w
  4368  09E0  1D03               	btfss	3,2
  4369  09E1  29E3               	goto	u2671
  4370  09E2  29E4               	goto	u2670
  4371  09E3                     u2671:	
  4372  09E3  29C6               	goto	l3645
  4373  09E4                     u2670:	
  4374  09E4                     l3653:	
  4375  09E4  0842               	movf	___wmul@product+1,w
  4376  09E5  00BE               	movwf	?___wmul+1
  4377  09E6  0841               	movf	___wmul@product,w
  4378  09E7  00BD               	movwf	?___wmul
  4379  09E8                     l757:	
  4380  09E8  0008               	return
  4381  09E9                     __end_of___wmul:	
  4382                           
  4383                           	psect	text13
  4384  0B5B                     __ptext13:	
  4385 ;; *************** function ___lwmod *****************
  4386 ;; Defined at:
  4387 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\lwmod.c"
  4388 ;; Parameters:    Size  Location     Type
  4389 ;;  divisor         2    3[BANK1 ] unsigned int 
  4390 ;;  dividend        2    5[BANK1 ] unsigned int 
  4391 ;; Auto vars:     Size  Location     Type
  4392 ;;  counter         1   35[BANK0 ] unsigned char 
  4393 ;; Return value:  Size  Location     Type
  4394 ;;                  2    3[BANK1 ] unsigned int 
  4395 ;; Registers used:
  4396 ;;		wreg, status,2, status,0
  4397 ;; Tracked objects:
  4398 ;;		On entry : 0/0
  4399 ;;		On exit  : 0/0
  4400 ;;		Unchanged: 0/0
  4401 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4402 ;;      Params:         0       0       4       0       0
  4403 ;;      Locals:         0       1       0       0       0
  4404 ;;      Temps:          0       1       0       0       0
  4405 ;;      Totals:         0       2       4       0       0
  4406 ;;Total ram usage:        6 bytes
  4407 ;; Hardware stack levels used:    1
  4408 ;; Hardware stack levels required when called:    5
  4409 ;; This function calls:
  4410 ;;		Nothing
  4411 ;; This function is called by:
  4412 ;;		_principalScreen
  4413 ;;		_sprintf
  4414 ;; This function uses a non-reentrant model
  4415 ;;
  4416                           
  4417                           
  4418                           ;psect for function ___lwmod
  4419  0B5B                     ___lwmod:	
  4420  0B5B                     l3683:	
  4421                           ;incstack = 0
  4422                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  4423                           
  4424  0B5B  1683               	bsf	3,5	;RP0=1, select bank1
  4425  0B5C  1303               	bcf	3,6	;RP1=0, select bank1
  4426  0B5D  0846               	movf	___lwmod@divisor^(0+128),w
  4427  0B5E  0447               	iorwf	(___lwmod@divisor+1)^(0+128),w
  4428  0B5F  1903               	btfsc	3,2
  4429  0B60  2B62               	goto	u2751
  4430  0B61  2B63               	goto	u2750
  4431  0B62                     u2751:	
  4432  0B62  2B9C               	goto	l3701
  4433  0B63                     u2750:	
  4434  0B63                     l3685:	
  4435  0B63  1283               	bcf	3,5	;RP0=0, select bank0
  4436  0B64  1303               	bcf	3,6	;RP1=0, select bank0
  4437  0B65  01C3               	clrf	___lwmod@counter
  4438  0B66  0AC3               	incf	___lwmod@counter,f
  4439  0B67  2B75               	goto	l3691
  4440  0B68                     l3687:	
  4441  0B68  3001               	movlw	1
  4442  0B69                     u2765:	
  4443  0B69  1003               	clrc
  4444  0B6A  0DC6               	rlf	___lwmod@divisor^(0+128),f
  4445  0B6B  0DC7               	rlf	(___lwmod@divisor+1)^(0+128),f
  4446  0B6C  3EFF               	addlw	-1
  4447  0B6D  1D03               	skipz
  4448  0B6E  2B69               	goto	u2765
  4449  0B6F                     l3689:	
  4450  0B6F  3001               	movlw	1
  4451  0B70  1283               	bcf	3,5	;RP0=0, select bank0
  4452  0B71  1303               	bcf	3,6	;RP1=0, select bank0
  4453  0B72  00C2               	movwf	??___lwmod
  4454  0B73  0842               	movf	??___lwmod,w
  4455  0B74  07C3               	addwf	___lwmod@counter,f
  4456  0B75                     l3691:	
  4457  0B75  1683               	bsf	3,5	;RP0=1, select bank1
  4458  0B76  1303               	bcf	3,6	;RP1=0, select bank1
  4459  0B77  1FC7               	btfss	(___lwmod@divisor+1)^(0+128),7
  4460  0B78  2B7A               	goto	u2771
  4461  0B79  2B7B               	goto	u2770
  4462  0B7A                     u2771:	
  4463  0B7A  2B68               	goto	l3687
  4464  0B7B                     u2770:	
  4465  0B7B                     l3693:	
  4466  0B7B  1683               	bsf	3,5	;RP0=1, select bank1
  4467  0B7C  1303               	bcf	3,6	;RP1=0, select bank1
  4468  0B7D  0847               	movf	(___lwmod@divisor+1)^(0+128),w
  4469  0B7E  0249               	subwf	(___lwmod@dividend+1)^(0+128),w
  4470  0B7F  1D03               	skipz
  4471  0B80  2B83               	goto	u2785
  4472  0B81  0846               	movf	___lwmod@divisor^(0+128),w
  4473  0B82  0248               	subwf	___lwmod@dividend^(0+128),w
  4474  0B83                     u2785:	
  4475  0B83  1C03               	skipc
  4476  0B84  2B86               	goto	u2781
  4477  0B85  2B87               	goto	u2780
  4478  0B86                     u2781:	
  4479  0B86  2B8D               	goto	l3697
  4480  0B87                     u2780:	
  4481  0B87                     l3695:	
  4482  0B87  0846               	movf	___lwmod@divisor^(0+128),w
  4483  0B88  02C8               	subwf	___lwmod@dividend^(0+128),f
  4484  0B89  0847               	movf	(___lwmod@divisor+1)^(0+128),w
  4485  0B8A  1C03               	skipc
  4486  0B8B  03C9               	decf	(___lwmod@dividend+1)^(0+128),f
  4487  0B8C  02C9               	subwf	(___lwmod@dividend+1)^(0+128),f
  4488  0B8D                     l3697:	
  4489  0B8D  3001               	movlw	1
  4490  0B8E                     u2795:	
  4491  0B8E  1003               	clrc
  4492  0B8F  0CC7               	rrf	(___lwmod@divisor+1)^(0+128),f
  4493  0B90  0CC6               	rrf	___lwmod@divisor^(0+128),f
  4494  0B91  3EFF               	addlw	-1
  4495  0B92  1D03               	skipz
  4496  0B93  2B8E               	goto	u2795
  4497  0B94                     l3699:	
  4498  0B94  3001               	movlw	1
  4499  0B95  1283               	bcf	3,5	;RP0=0, select bank0
  4500  0B96  1303               	bcf	3,6	;RP1=0, select bank0
  4501  0B97  02C3               	subwf	___lwmod@counter,f
  4502  0B98  1D03               	btfss	3,2
  4503  0B99  2B9B               	goto	u2801
  4504  0B9A  2B9C               	goto	u2800
  4505  0B9B                     u2801:	
  4506  0B9B  2B7B               	goto	l3693
  4507  0B9C                     u2800:	
  4508  0B9C                     l3701:	
  4509  0B9C  1683               	bsf	3,5	;RP0=1, select bank1
  4510  0B9D  1303               	bcf	3,6	;RP1=0, select bank1
  4511  0B9E  0849               	movf	(___lwmod@dividend+1)^(0+128),w
  4512  0B9F  00C7               	movwf	(?___lwmod+1)^(0+128)
  4513  0BA0  0848               	movf	___lwmod@dividend^(0+128),w
  4514  0BA1  00C6               	movwf	?___lwmod^(0+128)
  4515  0BA2                     l1037:	
  4516  0BA2  0008               	return
  4517  0BA3                     __end_of___lwmod:	
  4518                           
  4519                           	psect	text14
  4520  0F3C                     __ptext14:	
  4521 ;; *************** function ___lwdiv *****************
  4522 ;; Defined at:
  4523 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\lwdiv.c"
  4524 ;; Parameters:    Size  Location     Type
  4525 ;;  divisor         2   29[BANK0 ] unsigned int 
  4526 ;;  dividend        2   31[BANK0 ] unsigned int 
  4527 ;; Auto vars:     Size  Location     Type
  4528 ;;  quotient        2    1[BANK1 ] unsigned int 
  4529 ;;  counter         1    0[BANK1 ] unsigned char 
  4530 ;; Return value:  Size  Location     Type
  4531 ;;                  2   29[BANK0 ] unsigned int 
  4532 ;; Registers used:
  4533 ;;		wreg, status,2, status,0
  4534 ;; Tracked objects:
  4535 ;;		On entry : 0/0
  4536 ;;		On exit  : 0/0
  4537 ;;		Unchanged: 0/0
  4538 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4539 ;;      Params:         0       4       0       0       0
  4540 ;;      Locals:         0       0       3       0       0
  4541 ;;      Temps:          0       1       0       0       0
  4542 ;;      Totals:         0       5       3       0       0
  4543 ;;Total ram usage:        8 bytes
  4544 ;; Hardware stack levels used:    1
  4545 ;; Hardware stack levels required when called:    5
  4546 ;; This function calls:
  4547 ;;		Nothing
  4548 ;; This function is called by:
  4549 ;;		_principalScreen
  4550 ;;		_sprintf
  4551 ;; This function uses a non-reentrant model
  4552 ;;
  4553                           
  4554                           
  4555                           ;psect for function ___lwdiv
  4556  0F3C                     ___lwdiv:	
  4557  0F3C                     l3657:	
  4558                           ;incstack = 0
  4559                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  4560                           
  4561  0F3C  1683               	bsf	3,5	;RP0=1, select bank1
  4562  0F3D  1303               	bcf	3,6	;RP1=0, select bank1
  4563  0F3E  01C4               	clrf	___lwdiv@quotient^(0+128)
  4564  0F3F  01C5               	clrf	(___lwdiv@quotient+1)^(0+128)
  4565  0F40                     l3659:	
  4566  0F40  1283               	bcf	3,5	;RP0=0, select bank0
  4567  0F41  1303               	bcf	3,6	;RP1=0, select bank0
  4568  0F42  083D               	movf	___lwdiv@divisor,w
  4569  0F43  043E               	iorwf	___lwdiv@divisor+1,w
  4570  0F44  1903               	btfsc	3,2
  4571  0F45  2F47               	goto	u2681
  4572  0F46  2F48               	goto	u2680
  4573  0F47                     u2681:	
  4574  0F47  2F8E               	goto	l3679
  4575  0F48                     u2680:	
  4576  0F48                     l3661:	
  4577  0F48  1683               	bsf	3,5	;RP0=1, select bank1
  4578  0F49  1303               	bcf	3,6	;RP1=0, select bank1
  4579  0F4A  01C3               	clrf	___lwdiv@counter^(0+128)
  4580  0F4B  0AC3               	incf	___lwdiv@counter^(0+128),f
  4581  0F4C  2F5A               	goto	l3667
  4582  0F4D                     l3663:	
  4583  0F4D  3001               	movlw	1
  4584  0F4E                     u2695:	
  4585  0F4E  1003               	clrc
  4586  0F4F  0DBD               	rlf	___lwdiv@divisor,f
  4587  0F50  0DBE               	rlf	___lwdiv@divisor+1,f
  4588  0F51  3EFF               	addlw	-1
  4589  0F52  1D03               	skipz
  4590  0F53  2F4E               	goto	u2695
  4591  0F54                     l3665:	
  4592  0F54  3001               	movlw	1
  4593  0F55  00C1               	movwf	??___lwdiv
  4594  0F56  0841               	movf	??___lwdiv,w
  4595  0F57  1683               	bsf	3,5	;RP0=1, select bank1
  4596  0F58  1303               	bcf	3,6	;RP1=0, select bank1
  4597  0F59  07C3               	addwf	___lwdiv@counter^(0+128),f
  4598  0F5A                     l3667:	
  4599  0F5A  1283               	bcf	3,5	;RP0=0, select bank0
  4600  0F5B  1303               	bcf	3,6	;RP1=0, select bank0
  4601  0F5C  1FBE               	btfss	___lwdiv@divisor+1,7
  4602  0F5D  2F5F               	goto	u2701
  4603  0F5E  2F60               	goto	u2700
  4604  0F5F                     u2701:	
  4605  0F5F  2F4D               	goto	l3663
  4606  0F60                     u2700:	
  4607  0F60                     l3669:	
  4608  0F60  3001               	movlw	1
  4609  0F61  1683               	bsf	3,5	;RP0=1, select bank1
  4610  0F62  1303               	bcf	3,6	;RP1=0, select bank1
  4611  0F63                     u2715:	
  4612  0F63  1003               	clrc
  4613  0F64  0DC4               	rlf	___lwdiv@quotient^(0+128),f
  4614  0F65  0DC5               	rlf	(___lwdiv@quotient+1)^(0+128),f
  4615  0F66  3EFF               	addlw	-1
  4616  0F67  1D03               	skipz
  4617  0F68  2F63               	goto	u2715
  4618  0F69  1283               	bcf	3,5	;RP0=0, select bank0
  4619  0F6A  1303               	bcf	3,6	;RP1=0, select bank0
  4620  0F6B  083E               	movf	___lwdiv@divisor+1,w
  4621  0F6C  0240               	subwf	___lwdiv@dividend+1,w
  4622  0F6D  1D03               	skipz
  4623  0F6E  2F71               	goto	u2725
  4624  0F6F  083D               	movf	___lwdiv@divisor,w
  4625  0F70  023F               	subwf	___lwdiv@dividend,w
  4626  0F71                     u2725:	
  4627  0F71  1C03               	skipc
  4628  0F72  2F74               	goto	u2721
  4629  0F73  2F75               	goto	u2720
  4630  0F74                     u2721:	
  4631  0F74  2F7E               	goto	l3675
  4632  0F75                     u2720:	
  4633  0F75                     l3671:	
  4634  0F75  083D               	movf	___lwdiv@divisor,w
  4635  0F76  02BF               	subwf	___lwdiv@dividend,f
  4636  0F77  083E               	movf	___lwdiv@divisor+1,w
  4637  0F78  1C03               	skipc
  4638  0F79  03C0               	decf	___lwdiv@dividend+1,f
  4639  0F7A  02C0               	subwf	___lwdiv@dividend+1,f
  4640  0F7B                     l3673:	
  4641  0F7B  1683               	bsf	3,5	;RP0=1, select bank1
  4642  0F7C  1303               	bcf	3,6	;RP1=0, select bank1
  4643  0F7D  1444               	bsf	___lwdiv@quotient^(0+128),0
  4644  0F7E                     l3675:	
  4645  0F7E  3001               	movlw	1
  4646  0F7F  1283               	bcf	3,5	;RP0=0, select bank0
  4647  0F80                     u2735:	
  4648  0F80  1003               	clrc
  4649  0F81  0CBE               	rrf	___lwdiv@divisor+1,f
  4650  0F82  0CBD               	rrf	___lwdiv@divisor,f
  4651  0F83  3EFF               	addlw	-1
  4652  0F84  1D03               	skipz
  4653  0F85  2F80               	goto	u2735
  4654  0F86                     l3677:	
  4655  0F86  3001               	movlw	1
  4656  0F87  1683               	bsf	3,5	;RP0=1, select bank1
  4657  0F88  1303               	bcf	3,6	;RP1=0, select bank1
  4658  0F89  02C3               	subwf	___lwdiv@counter^(0+128),f
  4659  0F8A  1D03               	btfss	3,2
  4660  0F8B  2F8D               	goto	u2741
  4661  0F8C  2F8E               	goto	u2740
  4662  0F8D                     u2741:	
  4663  0F8D  2F60               	goto	l3669
  4664  0F8E                     u2740:	
  4665  0F8E                     l3679:	
  4666  0F8E  1683               	bsf	3,5	;RP0=1, select bank1
  4667  0F8F  1303               	bcf	3,6	;RP1=0, select bank1
  4668  0F90  0845               	movf	(___lwdiv@quotient+1)^(0+128),w
  4669  0F91  1283               	bcf	3,5	;RP0=0, select bank0
  4670  0F92  1303               	bcf	3,6	;RP1=0, select bank0
  4671  0F93  00BE               	movwf	?___lwdiv+1
  4672  0F94  1683               	bsf	3,5	;RP0=1, select bank1
  4673  0F95  1303               	bcf	3,6	;RP1=0, select bank1
  4674  0F96  0844               	movf	___lwdiv@quotient^(0+128),w
  4675  0F97  1283               	bcf	3,5	;RP0=0, select bank0
  4676  0F98  1303               	bcf	3,6	;RP1=0, select bank0
  4677  0F99  00BD               	movwf	?___lwdiv
  4678  0F9A                     l1027:	
  4679  0F9A  0008               	return
  4680  0F9B                     __end_of___lwdiv:	
  4681                           
  4682                           	psect	text15
  4683  07D6                     __ptext15:	
  4684 ;; *************** function _putsXLCD *****************
  4685 ;; Defined at:
  4686 ;;		line 419 in file "lcd_pic16.c"
  4687 ;; Parameters:    Size  Location     Type
  4688 ;;  buffer          1    wreg     PTR unsigned char 
  4689 ;;		 -> lineTwo(17), lineOne(17), 
  4690 ;; Auto vars:     Size  Location     Type
  4691 ;;  buffer          1   34[BANK0 ] PTR unsigned char 
  4692 ;;		 -> lineTwo(17), lineOne(17), 
  4693 ;; Return value:  Size  Location     Type
  4694 ;;                  1    wreg      void 
  4695 ;; Registers used:
  4696 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4697 ;; Tracked objects:
  4698 ;;		On entry : 0/0
  4699 ;;		On exit  : 0/0
  4700 ;;		Unchanged: 0/0
  4701 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4702 ;;      Params:         0       0       0       0       0
  4703 ;;      Locals:         0       1       0       0       0
  4704 ;;      Temps:          0       1       0       0       0
  4705 ;;      Totals:         0       2       0       0       0
  4706 ;;Total ram usage:        2 bytes
  4707 ;; Hardware stack levels used:    1
  4708 ;; Hardware stack levels required when called:    7
  4709 ;; This function calls:
  4710 ;;		_BusyXLCD
  4711 ;;		_WriteDataXLCD
  4712 ;; This function is called by:
  4713 ;;		_start
  4714 ;;		_setFrequency
  4715 ;;		_principalScreen
  4716 ;;		_lockingScreen
  4717 ;; This function uses a non-reentrant model
  4718 ;;
  4719                           
  4720                           
  4721                           ;psect for function _putsXLCD
  4722  07D6                     _putsXLCD:	
  4723                           
  4724                           ;incstack = 0
  4725 ;; hardware stack exceeded
  4726                           ; Regs used in _putsXLCD: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4727                           ;putsXLCD@buffer stored from wreg
  4728  07D6  1283               	bcf	3,5	;RP0=0, select bank0
  4729  07D7  1303               	bcf	3,6	;RP1=0, select bank0
  4730  07D8  00C2               	movwf	putsXLCD@buffer
  4731  07D9                     l2745:	
  4732                           
  4733                           ;lcd_pic16.c: 419: void putsXLCD(char *buffer);lcd_pic16.c: 420: {;lcd_pic16.c: 421:    
      +                               while(*buffer)
  4734  07D9  2FF5               	goto	l2753
  4735  07DA                     l2747:	
  4736  07DA  120A  158A  20B2  120A  118A  	fcall	_BusyXLCD
  4737  07DF  3A00               	xorlw	0
  4738  07E0  1D03               	skipz
  4739  07E1  2FE3               	goto	u1711
  4740  07E2  2FE4               	goto	u1710
  4741  07E3                     u1711:	
  4742  07E3  2FDA               	goto	l2747
  4743  07E4                     u1710:	
  4744  07E4                     l2749:	
  4745                           
  4746                           ;lcd_pic16.c: 424:                 WriteDataXLCD(*buffer);
  4747  07E4  1283               	bcf	3,5	;RP0=0, select bank0
  4748  07E5  1303               	bcf	3,6	;RP1=0, select bank0
  4749  07E6  0842               	movf	putsXLCD@buffer,w
  4750  07E7  0084               	movwf	4
  4751  07E8  1383               	bcf	3,7	;select IRP bank0
  4752  07E9  0800               	movf	0,w
  4753  07EA  120A  158A  248D  120A  118A  	fcall	_WriteDataXLCD
  4754  07EF                     l2751:	
  4755                           
  4756                           ;lcd_pic16.c: 425:                 buffer++;
  4757  07EF  3001               	movlw	1
  4758  07F0  1283               	bcf	3,5	;RP0=0, select bank0
  4759  07F1  1303               	bcf	3,6	;RP1=0, select bank0
  4760  07F2  00C1               	movwf	??_putsXLCD
  4761  07F3  0841               	movf	??_putsXLCD,w
  4762  07F4  07C2               	addwf	putsXLCD@buffer,f
  4763  07F5                     l2753:	
  4764                           
  4765                           ;lcd_pic16.c: 421:         while(*buffer)
  4766  07F5  0842               	movf	putsXLCD@buffer,w
  4767  07F6  0084               	movwf	4
  4768  07F7  1383               	bcf	3,7	;select IRP bank0
  4769  07F8  0800               	movf	0,w
  4770  07F9  1D03               	btfss	3,2
  4771  07FA  2FFC               	goto	u1721
  4772  07FB  2FFD               	goto	u1720
  4773  07FC                     u1721:	
  4774  07FC  2FDA               	goto	l2747
  4775  07FD                     u1720:	
  4776  07FD                     l410:	
  4777  07FD  0008               	return
  4778  07FE                     __end_of_putsXLCD:	
  4779                           
  4780                           	psect	text16
  4781  0A3C                     __ptext16:	
  4782 ;; *************** function _putrsXLCD *****************
  4783 ;; Defined at:
  4784 ;;		line 435 in file "lcd_pic16.c"
  4785 ;; Parameters:    Size  Location     Type
  4786 ;;  buffer          1    wreg     PTR const unsigned char 
  4787 ;;		 -> STR_8(17), 
  4788 ;; Auto vars:     Size  Location     Type
  4789 ;;  buffer          1   34[BANK0 ] PTR const unsigned char 
  4790 ;;		 -> STR_8(17), 
  4791 ;; Return value:  Size  Location     Type
  4792 ;;                  1    wreg      void 
  4793 ;; Registers used:
  4794 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4795 ;; Tracked objects:
  4796 ;;		On entry : 0/0
  4797 ;;		On exit  : 0/0
  4798 ;;		Unchanged: 0/0
  4799 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4800 ;;      Params:         0       0       0       0       0
  4801 ;;      Locals:         0       1       0       0       0
  4802 ;;      Temps:          0       1       0       0       0
  4803 ;;      Totals:         0       2       0       0       0
  4804 ;;Total ram usage:        2 bytes
  4805 ;; Hardware stack levels used:    1
  4806 ;; Hardware stack levels required when called:    7
  4807 ;; This function calls:
  4808 ;;		_BusyXLCD
  4809 ;;		_WriteDataXLCD
  4810 ;; This function is called by:
  4811 ;;		_principalScreen
  4812 ;; This function uses a non-reentrant model
  4813 ;;
  4814                           
  4815                           
  4816                           ;psect for function _putrsXLCD
  4817  0A3C                     _putrsXLCD:	
  4818                           
  4819                           ;incstack = 0
  4820 ;; hardware stack exceeded
  4821                           ; Regs used in _putrsXLCD: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4822                           ;putrsXLCD@buffer stored from wreg
  4823  0A3C  1283               	bcf	3,5	;RP0=0, select bank0
  4824  0A3D  1303               	bcf	3,6	;RP1=0, select bank0
  4825  0A3E  00C2               	movwf	putrsXLCD@buffer
  4826  0A3F                     l3059:	
  4827                           
  4828                           ;lcd_pic16.c: 435: void putrsXLCD(const char *buffer);lcd_pic16.c: 436: {;lcd_pic16.c: 4
      +                          37:         while(*buffer)
  4829  0A3F  2A5E               	goto	l3067
  4830  0A40                     l3061:	
  4831  0A40  120A  158A  20B2  120A  158A  	fcall	_BusyXLCD
  4832  0A45  3A00               	xorlw	0
  4833  0A46  1D03               	skipz
  4834  0A47  2A49               	goto	u2091
  4835  0A48  2A4A               	goto	u2090
  4836  0A49                     u2091:	
  4837  0A49  2A40               	goto	l3061
  4838  0A4A                     u2090:	
  4839  0A4A                     l3063:	
  4840                           
  4841                           ;lcd_pic16.c: 440:                 WriteDataXLCD(*buffer);
  4842  0A4A  1283               	bcf	3,5	;RP0=0, select bank0
  4843  0A4B  1303               	bcf	3,6	;RP1=0, select bank0
  4844  0A4C  0842               	movf	putrsXLCD@buffer,w
  4845  0A4D  0084               	movwf	4
  4846  0A4E  120A  158A  2000  120A  158A  	fcall	stringdir
  4847  0A53  120A  158A  248D  120A  158A  	fcall	_WriteDataXLCD
  4848  0A58                     l3065:	
  4849                           
  4850                           ;lcd_pic16.c: 441:                 buffer++;
  4851  0A58  3001               	movlw	1
  4852  0A59  1283               	bcf	3,5	;RP0=0, select bank0
  4853  0A5A  1303               	bcf	3,6	;RP1=0, select bank0
  4854  0A5B  00C1               	movwf	??_putrsXLCD
  4855  0A5C  0841               	movf	??_putrsXLCD,w
  4856  0A5D  07C2               	addwf	putrsXLCD@buffer,f
  4857  0A5E                     l3067:	
  4858                           
  4859                           ;lcd_pic16.c: 437:         while(*buffer)
  4860  0A5E  0842               	movf	putrsXLCD@buffer,w
  4861  0A5F  0084               	movwf	4
  4862  0A60  120A  158A  2000  120A  158A  	fcall	stringdir
  4863  0A65  3A00               	xorlw	0
  4864  0A66  1D03               	skipz
  4865  0A67  2A69               	goto	u2101
  4866  0A68  2A6A               	goto	u2100
  4867  0A69                     u2101:	
  4868  0A69  2A40               	goto	l3061
  4869  0A6A                     u2100:	
  4870  0A6A                     l419:	
  4871  0A6A  0008               	return
  4872  0A6B                     __end_of_putrsXLCD:	
  4873                           
  4874                           	psect	text17
  4875  0C8D                     __ptext17:	
  4876 ;; *************** function _WriteDataXLCD *****************
  4877 ;; Defined at:
  4878 ;;		line 110 in file "lcd_pic16.c"
  4879 ;; Parameters:    Size  Location     Type
  4880 ;;  data            1    wreg     unsigned char 
  4881 ;; Auto vars:     Size  Location     Type
  4882 ;;  data            1   32[BANK0 ] unsigned char 
  4883 ;; Return value:  Size  Location     Type
  4884 ;;                  1    wreg      void 
  4885 ;; Registers used:
  4886 ;;		wreg, status,2, status,0, pclath, cstack
  4887 ;; Tracked objects:
  4888 ;;		On entry : 0/0
  4889 ;;		On exit  : 0/0
  4890 ;;		Unchanged: 0/0
  4891 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4892 ;;      Params:         0       0       0       0       0
  4893 ;;      Locals:         0       1       0       0       0
  4894 ;;      Temps:          0       2       0       0       0
  4895 ;;      Totals:         0       3       0       0       0
  4896 ;;Total ram usage:        3 bytes
  4897 ;; Hardware stack levels used:    1
  4898 ;; Hardware stack levels required when called:    6
  4899 ;; This function calls:
  4900 ;;		_DelayFor18TCY
  4901 ;; This function is called by:
  4902 ;;		_putsXLCD
  4903 ;;		_putrsXLCD
  4904 ;; This function uses a non-reentrant model
  4905 ;;
  4906                           
  4907                           
  4908                           ;psect for function _WriteDataXLCD
  4909  0C8D                     _WriteDataXLCD:	
  4910                           
  4911                           ;incstack = 0
  4912 ;; hardware stack exceeded
  4913                           ; Regs used in _WriteDataXLCD: [wreg+status,2+status,0+pclath+cstack]
  4914                           ;WriteDataXLCD@data stored from wreg
  4915  0C8D  1283               	bcf	3,5	;RP0=0, select bank0
  4916  0C8E  1303               	bcf	3,6	;RP1=0, select bank0
  4917  0C8F  00C0               	movwf	WriteDataXLCD@data
  4918  0C90                     l2529:	
  4919                           
  4920                           ;lcd_pic16.c: 110: void WriteDataXLCD(char data);lcd_pic16.c: 111: {;lcd_pic16.c: 125:  
      +                                 TRISB &= 0x0f;
  4921  0C90  300F               	movlw	15
  4922  0C91  00BE               	movwf	??_WriteDataXLCD
  4923  0C92  083E               	movf	??_WriteDataXLCD,w
  4924  0C93  1683               	bsf	3,5	;RP0=1, select bank1
  4925  0C94  1303               	bcf	3,6	;RP1=0, select bank1
  4926  0C95  0586               	andwf	6,f	;volatile
  4927                           
  4928                           ;lcd_pic16.c: 126:         PORTB &= 0x0f;
  4929  0C96  300F               	movlw	15
  4930  0C97  1283               	bcf	3,5	;RP0=0, select bank0
  4931  0C98  1303               	bcf	3,6	;RP1=0, select bank0
  4932  0C99  00BE               	movwf	??_WriteDataXLCD
  4933  0C9A  083E               	movf	??_WriteDataXLCD,w
  4934  0C9B  0586               	andwf	6,f	;volatile
  4935                           
  4936                           ;lcd_pic16.c: 127:         PORTB |= data&0xf0;
  4937  0C9C  0840               	movf	WriteDataXLCD@data,w
  4938  0C9D  39F0               	andlw	240
  4939  0C9E  00BE               	movwf	??_WriteDataXLCD
  4940  0C9F  083E               	movf	??_WriteDataXLCD,w
  4941  0CA0  0486               	iorwf	6,f	;volatile
  4942  0CA1                     l2531:	
  4943                           
  4944                           ;lcd_pic16.c: 133:         PORTBbits.RB1 = 1;
  4945  0CA1  1486               	bsf	6,1	;volatile
  4946  0CA2                     l2533:	
  4947                           
  4948                           ;lcd_pic16.c: 134:         PORTBbits.RB2 = 0;
  4949  0CA2  1106               	bcf	6,2	;volatile
  4950  0CA3                     l2535:	
  4951                           
  4952                           ;lcd_pic16.c: 135:         DelayFor18TCY();
  4953  0CA3  160A  118A  27D2  120A  158A  	fcall	_DelayFor18TCY
  4954  0CA8                     l2537:	
  4955                           
  4956                           ;lcd_pic16.c: 136:         PORTBbits.RB3 = 1;
  4957  0CA8  1283               	bcf	3,5	;RP0=0, select bank0
  4958  0CA9  1303               	bcf	3,6	;RP1=0, select bank0
  4959  0CAA  1586               	bsf	6,3	;volatile
  4960  0CAB                     l2539:	
  4961                           
  4962                           ;lcd_pic16.c: 137:         DelayFor18TCY();
  4963  0CAB  160A  118A  27D2  120A  158A  	fcall	_DelayFor18TCY
  4964  0CB0                     l2541:	
  4965                           
  4966                           ;lcd_pic16.c: 138:         PORTBbits.RB3 = 0;
  4967  0CB0  1283               	bcf	3,5	;RP0=0, select bank0
  4968  0CB1  1303               	bcf	3,6	;RP1=0, select bank0
  4969  0CB2  1186               	bcf	6,3	;volatile
  4970                           
  4971                           ;lcd_pic16.c: 140:         PORTB &= 0x0f;
  4972  0CB3  300F               	movlw	15
  4973  0CB4  00BE               	movwf	??_WriteDataXLCD
  4974  0CB5  083E               	movf	??_WriteDataXLCD,w
  4975  0CB6  0586               	andwf	6,f	;volatile
  4976                           
  4977                           ;lcd_pic16.c: 141:         PORTB |= ((data<<4)&0xf0);
  4978  0CB7  0840               	movf	WriteDataXLCD@data,w
  4979  0CB8  00BE               	movwf	??_WriteDataXLCD
  4980  0CB9  3003               	movlw	3
  4981  0CBA                     u1355:	
  4982  0CBA  1003               	clrc
  4983  0CBB  0DBE               	rlf	??_WriteDataXLCD,f
  4984  0CBC  3EFF               	addlw	-1
  4985  0CBD  1D03               	skipz
  4986  0CBE  2CBA               	goto	u1355
  4987  0CBF  1003               	clrc
  4988  0CC0  0D3E               	rlf	??_WriteDataXLCD,w
  4989  0CC1  39F0               	andlw	240
  4990  0CC2  00BF               	movwf	??_WriteDataXLCD+1
  4991  0CC3  083F               	movf	??_WriteDataXLCD+1,w
  4992  0CC4  0486               	iorwf	6,f	;volatile
  4993  0CC5                     l2543:	
  4994                           
  4995                           ;lcd_pic16.c: 146:         DelayFor18TCY();
  4996  0CC5  160A  118A  27D2  120A  158A  	fcall	_DelayFor18TCY
  4997  0CCA                     l2545:	
  4998                           
  4999                           ;lcd_pic16.c: 147:         PORTBbits.RB3 = 1;
  5000  0CCA  1283               	bcf	3,5	;RP0=0, select bank0
  5001  0CCB  1303               	bcf	3,6	;RP1=0, select bank0
  5002  0CCC  1586               	bsf	6,3	;volatile
  5003  0CCD                     l2547:	
  5004                           
  5005                           ;lcd_pic16.c: 148:         DelayFor18TCY();
  5006  0CCD  160A  118A  27D2  120A  158A  	fcall	_DelayFor18TCY
  5007  0CD2                     l2549:	
  5008                           
  5009                           ;lcd_pic16.c: 149:         PORTBbits.RB3 = 0;
  5010  0CD2  1283               	bcf	3,5	;RP0=0, select bank0
  5011  0CD3  1303               	bcf	3,6	;RP1=0, select bank0
  5012  0CD4  1186               	bcf	6,3	;volatile
  5013                           
  5014                           ;lcd_pic16.c: 151:         TRISB |= 0xf0;
  5015  0CD5  30F0               	movlw	240
  5016  0CD6  00BE               	movwf	??_WriteDataXLCD
  5017  0CD7  083E               	movf	??_WriteDataXLCD,w
  5018  0CD8  1683               	bsf	3,5	;RP0=1, select bank1
  5019  0CD9  1303               	bcf	3,6	;RP1=0, select bank1
  5020  0CDA  0486               	iorwf	6,f	;volatile
  5021  0CDB                     l386:	
  5022  0CDB  0008               	return
  5023  0CDC                     __end_of_WriteDataXLCD:	
  5024                           
  5025                           	psect	text18
  5026  0EDD                     __ptext18:	
  5027 ;; *************** function _getData *****************
  5028 ;; Defined at:
  5029 ;;		line 31 in file "eeprom.c"
  5030 ;; Parameters:    Size  Location     Type
  5031 ;;		None
  5032 ;; Auto vars:     Size  Location     Type
  5033 ;;  aux1            1   35[BANK0 ] unsigned char 
  5034 ;;  aux0            1   34[BANK0 ] unsigned char 
  5035 ;; Return value:  Size  Location     Type
  5036 ;;                  1    wreg      void 
  5037 ;; Registers used:
  5038 ;;		wreg, status,2, btemp+1, pclath, cstack
  5039 ;; Tracked objects:
  5040 ;;		On entry : 0/0
  5041 ;;		On exit  : 0/0
  5042 ;;		Unchanged: 0/0
  5043 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5044 ;;      Params:         0       0       0       0       0
  5045 ;;      Locals:         0       2       0       0       0
  5046 ;;      Temps:          0       4       0       0       0
  5047 ;;      Totals:         0       6       0       0       0
  5048 ;;Total ram usage:        6 bytes
  5049 ;; Hardware stack levels used:    1
  5050 ;; Hardware stack levels required when called:    6
  5051 ;; This function calls:
  5052 ;;		_readEEPROM
  5053 ;; This function is called by:
  5054 ;;		_main
  5055 ;; This function uses a non-reentrant model
  5056 ;;
  5057                           
  5058                           
  5059                           ;psect for function _getData
  5060  0EDD                     _getData:	
  5061  0EDD                     l3215:	
  5062                           ;incstack = 0
  5063                           ; Regs used in _getData: [wreg+status,2+btemp+1+pclath+cstack]
  5064                           
  5065                           
  5066                           ;eeprom.c: 32:     unsigned char aux0 = readEEPROM(0);
  5067  0EDD  3000               	movlw	0
  5068  0EDE  120A  158A  20CC  120A  158A  	fcall	_readEEPROM
  5069  0EE3  1283               	bcf	3,5	;RP0=0, select bank0
  5070  0EE4  1303               	bcf	3,6	;RP1=0, select bank0
  5071  0EE5  00BE               	movwf	??_getData
  5072  0EE6  083E               	movf	??_getData,w
  5073  0EE7  00C2               	movwf	getData@aux0
  5074                           
  5075                           ;eeprom.c: 33:     unsigned char aux1 = readEEPROM(1);
  5076  0EE8  3001               	movlw	1
  5077  0EE9  120A  158A  20CC  120A  158A  	fcall	_readEEPROM
  5078  0EEE  1283               	bcf	3,5	;RP0=0, select bank0
  5079  0EEF  1303               	bcf	3,6	;RP1=0, select bank0
  5080  0EF0  00BE               	movwf	??_getData
  5081  0EF1  083E               	movf	??_getData,w
  5082  0EF2  00C3               	movwf	getData@aux1
  5083  0EF3                     l3217:	
  5084                           
  5085                           ;eeprom.c: 34:     frequency = 0;
  5086  0EF3  01C4               	clrf	_frequency
  5087  0EF4  01C5               	clrf	_frequency+1
  5088  0EF5                     l3219:	
  5089                           
  5090                           ;eeprom.c: 35:     frequency = (aux1 << 8) | aux0;
  5091  0EF5  0842               	movf	getData@aux0,w
  5092  0EF6  00BE               	movwf	??_getData
  5093  0EF7  01BF               	clrf	??_getData+1
  5094  0EF8  0843               	movf	getData@aux1,w
  5095  0EF9  00C0               	movwf	??_getData+2
  5096  0EFA  01C1               	clrf	??_getData+3
  5097  0EFB  0840               	movf	??_getData+2,w
  5098  0EFC  00C1               	movwf	??_getData+3
  5099  0EFD  01C0               	clrf	??_getData+2
  5100  0EFE  083E               	movf	??_getData,w
  5101  0EFF  0440               	iorwf	??_getData+2,w
  5102  0F00  00C4               	movwf	_frequency
  5103  0F01  083F               	movf	??_getData+1,w
  5104  0F02  0441               	iorwf	??_getData+3,w
  5105  0F03  00C5               	movwf	_frequency+1
  5106  0F04                     l3221:	
  5107                           
  5108                           ;eeprom.c: 36:     months = readEEPROM(2);
  5109  0F04  3002               	movlw	2
  5110  0F05  120A  158A  20CC  120A  158A  	fcall	_readEEPROM
  5111  0F0A  1283               	bcf	3,5	;RP0=0, select bank0
  5112  0F0B  1303               	bcf	3,6	;RP1=0, select bank0
  5113  0F0C  00BE               	movwf	??_getData
  5114  0F0D  083E               	movf	??_getData,w
  5115  0F0E  00CA               	movwf	_months
  5116  0F0F                     l3223:	
  5117                           
  5118                           ;eeprom.c: 37:     days = readEEPROM(3);
  5119  0F0F  3003               	movlw	3
  5120  0F10  120A  158A  20CC  120A  158A  	fcall	_readEEPROM
  5121  0F15  1283               	bcf	3,5	;RP0=0, select bank0
  5122  0F16  1303               	bcf	3,6	;RP1=0, select bank0
  5123  0F17  00BE               	movwf	??_getData
  5124  0F18  083E               	movf	??_getData,w
  5125  0F19  00C9               	movwf	_days
  5126  0F1A                     l3225:	
  5127                           
  5128                           ;eeprom.c: 38:     hours = readEEPROM(4);
  5129  0F1A  3004               	movlw	4
  5130  0F1B  120A  158A  20CC  120A  158A  	fcall	_readEEPROM
  5131  0F20  1283               	bcf	3,5	;RP0=0, select bank0
  5132  0F21  1303               	bcf	3,6	;RP1=0, select bank0
  5133  0F22  00BE               	movwf	??_getData
  5134  0F23  083E               	movf	??_getData,w
  5135  0F24  00C8               	movwf	_hours
  5136  0F25                     l3227:	
  5137                           
  5138                           ;eeprom.c: 39:     minutes = readEEPROM(5);
  5139  0F25  3005               	movlw	5
  5140  0F26  120A  158A  20CC  120A  158A  	fcall	_readEEPROM
  5141  0F2B  1283               	bcf	3,5	;RP0=0, select bank0
  5142  0F2C  1303               	bcf	3,6	;RP1=0, select bank0
  5143  0F2D  00BE               	movwf	??_getData
  5144  0F2E  083E               	movf	??_getData,w
  5145  0F2F  00C7               	movwf	_minutes
  5146  0F30                     l3229:	
  5147                           
  5148                           ;eeprom.c: 40:     functionalStat = readEEPROM(6);
  5149  0F30  3006               	movlw	6
  5150  0F31  120A  158A  20CC  120A  158A  	fcall	_readEEPROM
  5151  0F36  1283               	bcf	3,5	;RP0=0, select bank0
  5152  0F37  1303               	bcf	3,6	;RP1=0, select bank0
  5153  0F38  00BE               	movwf	??_getData
  5154  0F39  083E               	movf	??_getData,w
  5155  0F3A  00CF               	movwf	_functionalStat
  5156  0F3B                     l66:	
  5157  0F3B  0008               	return
  5158  0F3C                     __end_of_getData:	
  5159                           
  5160                           	psect	text19
  5161  08CC                     __ptext19:	
  5162 ;; *************** function _readEEPROM *****************
  5163 ;; Defined at:
  5164 ;;		line 7 in file "eeprom.c"
  5165 ;; Parameters:    Size  Location     Type
  5166 ;;  address         1    wreg     unsigned char 
  5167 ;; Auto vars:     Size  Location     Type
  5168 ;;  address         1   29[BANK0 ] unsigned char 
  5169 ;; Return value:  Size  Location     Type
  5170 ;;                  1    wreg      unsigned char 
  5171 ;; Registers used:
  5172 ;;		wreg
  5173 ;; Tracked objects:
  5174 ;;		On entry : 0/0
  5175 ;;		On exit  : 0/0
  5176 ;;		Unchanged: 0/0
  5177 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5178 ;;      Params:         0       0       0       0       0
  5179 ;;      Locals:         0       1       0       0       0
  5180 ;;      Temps:          0       0       0       0       0
  5181 ;;      Totals:         0       1       0       0       0
  5182 ;;Total ram usage:        1 bytes
  5183 ;; Hardware stack levels used:    1
  5184 ;; Hardware stack levels required when called:    5
  5185 ;; This function calls:
  5186 ;;		Nothing
  5187 ;; This function is called by:
  5188 ;;		_getData
  5189 ;; This function uses a non-reentrant model
  5190 ;;
  5191                           
  5192                           
  5193                           ;psect for function _readEEPROM
  5194  08CC                     _readEEPROM:	
  5195                           
  5196                           ;incstack = 0
  5197                           ; Regs used in _readEEPROM: [wreg]
  5198                           ;readEEPROM@address stored from wreg
  5199  08CC  1283               	bcf	3,5	;RP0=0, select bank0
  5200  08CD  1303               	bcf	3,6	;RP1=0, select bank0
  5201  08CE  00BD               	movwf	readEEPROM@address
  5202  08CF                     l2941:	
  5203                           
  5204                           ;eeprom.c: 8:     EEADR = address;
  5205  08CF  083D               	movf	readEEPROM@address,w
  5206  08D0  1283               	bcf	3,5	;RP0=0, select bank2
  5207  08D1  1703               	bsf	3,6	;RP1=1, select bank2
  5208  08D2  008D               	movwf	13	;volatile
  5209  08D3                     l2943:	
  5210                           
  5211                           ;eeprom.c: 9:     EECON1bits.EEPGD = 0;
  5212  08D3  1683               	bsf	3,5	;RP0=1, select bank3
  5213  08D4  1703               	bsf	3,6	;RP1=1, select bank3
  5214  08D5  138C               	bcf	12,7	;volsfr
  5215  08D6                     l2945:	
  5216                           
  5217                           ;eeprom.c: 10:     EECON1bits.RD = 1;
  5218  08D6  140C               	bsf	12,0	;volsfr
  5219                           
  5220                           ;eeprom.c: 11:     return EEDATA;
  5221  08D7  1283               	bcf	3,5	;RP0=0, select bank2
  5222  08D8  1703               	bsf	3,6	;RP1=1, select bank2
  5223  08D9  080C               	movf	12,w	;volatile
  5224  08DA                     l57:	
  5225  08DA  0008               	return
  5226  08DB                     __end_of_readEEPROM:	
  5227                           
  5228                           	psect	text20
  5229  0AD6                     __ptext20:	
  5230 ;; *************** function _config *****************
  5231 ;; Defined at:
  5232 ;;		line 42 in file "main.c"
  5233 ;; Parameters:    Size  Location     Type
  5234 ;;		None
  5235 ;; Auto vars:     Size  Location     Type
  5236 ;;		None
  5237 ;; Return value:  Size  Location     Type
  5238 ;;                  1    wreg      void 
  5239 ;; Registers used:
  5240 ;;		wreg, status,2, status,0, pclath, cstack
  5241 ;; Tracked objects:
  5242 ;;		On entry : 0/0
  5243 ;;		On exit  : 0/0
  5244 ;;		Unchanged: 0/0
  5245 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5246 ;;      Params:         0       0       0       0       0
  5247 ;;      Locals:         0       0       0       0       0
  5248 ;;      Temps:          0       0       0       0       0
  5249 ;;      Totals:         0       0       0       0       0
  5250 ;;Total ram usage:        0 bytes
  5251 ;; Hardware stack levels used:    1
  5252 ;; Hardware stack levels required when called:    9
  5253 ;; This function calls:
  5254 ;;		_initLCD
  5255 ;;		_setTransStat
  5256 ;; This function is called by:
  5257 ;;		_main
  5258 ;; This function uses a non-reentrant model
  5259 ;;
  5260                           
  5261                           
  5262                           ;psect for function _config
  5263  0AD6                     _config:	
  5264  0AD6                     l3895:	
  5265                           ;incstack = 0
  5266 ;; hardware stack exceeded
  5267                           ; Regs used in _config: [wreg+status,2+status,0+pclath+cstack]
  5268                           
  5269                           
  5270                           ;main.c: 44:     INTCON = 0b01000000;
  5271  0AD6  3040               	movlw	64
  5272  0AD7  008B               	movwf	11	;volatile
  5273                           
  5274                           ;main.c: 45:     PIE1 = 0b00100001;
  5275  0AD8  3021               	movlw	33
  5276  0AD9  1683               	bsf	3,5	;RP0=1, select bank1
  5277  0ADA  1303               	bcf	3,6	;RP1=0, select bank1
  5278  0ADB  008C               	movwf	12	;volatile
  5279                           
  5280                           ;main.c: 47:     TRISA = 0b00111000;
  5281  0ADC  3038               	movlw	56
  5282  0ADD  0085               	movwf	5	;volatile
  5283  0ADE                     l3897:	
  5284                           
  5285                           ;main.c: 48:     TRISB = 0b00000000;
  5286  0ADE  0186               	clrf	6	;volatile
  5287  0ADF                     l3899:	
  5288                           
  5289                           ;main.c: 49:     TRISC = 0b10000000;
  5290  0ADF  3080               	movlw	128
  5291  0AE0  0087               	movwf	7	;volatile
  5292                           
  5293                           ;main.c: 50:     PORTA = 0x00;
  5294  0AE1  1283               	bcf	3,5	;RP0=0, select bank0
  5295  0AE2  1303               	bcf	3,6	;RP1=0, select bank0
  5296  0AE3  0185               	clrf	5	;volatile
  5297                           
  5298                           ;main.c: 51:     PORTB = 0x00;
  5299  0AE4  0186               	clrf	6	;volatile
  5300  0AE5                     l3901:	
  5301                           
  5302                           ;main.c: 52:     PORTC = 0x0E;
  5303  0AE5  300E               	movlw	14
  5304  0AE6  0087               	movwf	7	;volatile
  5305  0AE7                     l3903:	
  5306                           
  5307                           ;main.c: 54:     T1CON = 0b00010001;
  5308  0AE7  3011               	movlw	17
  5309  0AE8  0090               	movwf	16	;volatile
  5310                           
  5311                           ;main.c: 56:     ADCON0 = 0b00000000;
  5312  0AE9  019F               	clrf	31	;volatile
  5313                           
  5314                           ;main.c: 57:     ADCON1 = 0b00000000;
  5315  0AEA  1683               	bsf	3,5	;RP0=1, select bank1
  5316  0AEB  1303               	bcf	3,6	;RP1=0, select bank1
  5317  0AEC  019F               	clrf	31	;volatile
  5318                           
  5319                           ;main.c: 58:     ANSEL = 0b00000000;
  5320  0AED  1683               	bsf	3,5	;RP0=1, select bank3
  5321  0AEE  1703               	bsf	3,6	;RP1=1, select bank3
  5322  0AEF  0188               	clrf	8	;volatile
  5323                           
  5324                           ;main.c: 59:     ANSELH = 0b00000000;
  5325  0AF0  0189               	clrf	9	;volatile
  5326  0AF1                     l3905:	
  5327                           
  5328                           ;main.c: 61:     TXSTA = 0b00100100;
  5329  0AF1  3024               	movlw	36
  5330  0AF2  1683               	bsf	3,5	;RP0=1, select bank1
  5331  0AF3  1303               	bcf	3,6	;RP1=0, select bank1
  5332  0AF4  0098               	movwf	24	;volatile
  5333  0AF5                     l3907:	
  5334                           
  5335                           ;main.c: 62:     RCSTA = 0b10010000;
  5336  0AF5  3090               	movlw	144
  5337  0AF6  1283               	bcf	3,5	;RP0=0, select bank0
  5338  0AF7  1303               	bcf	3,6	;RP1=0, select bank0
  5339  0AF8  0098               	movwf	24	;volatile
  5340  0AF9                     l3909:	
  5341                           
  5342                           ;main.c: 63:     BAUDCTL = 0b00001000;
  5343  0AF9  3008               	movlw	8
  5344  0AFA  1683               	bsf	3,5	;RP0=1, select bank3
  5345  0AFB  1703               	bsf	3,6	;RP1=1, select bank3
  5346  0AFC  0087               	movwf	7	;volatile
  5347  0AFD                     l3911:	
  5348                           
  5349                           ;main.c: 64:     SPBRG = 0b00011001;
  5350  0AFD  3019               	movlw	25
  5351  0AFE  1683               	bsf	3,5	;RP0=1, select bank1
  5352  0AFF  1303               	bcf	3,6	;RP1=0, select bank1
  5353  0B00  0099               	movwf	25	;volatile
  5354  0B01                     l3913:	
  5355                           
  5356                           ;main.c: 66:     PORTCbits.RC0 = 0;
  5357  0B01  1283               	bcf	3,5	;RP0=0, select bank0
  5358  0B02  1303               	bcf	3,6	;RP1=0, select bank0
  5359  0B03  1007               	bcf	7,0	;volatile
  5360  0B04                     l3915:	
  5361                           
  5362                           ;main.c: 67:     PORTCbits.RC4 = 1;
  5363  0B04  1607               	bsf	7,4	;volatile
  5364  0B05                     l3917:	
  5365                           
  5366                           ;main.c: 69:     initLCD();
  5367  0B05  120A  158A  21E9  120A  158A  	fcall	_initLCD
  5368  0B0A                     l3919:	
  5369                           
  5370                           ;main.c: 71:     T1CONbits.TMR1ON = 1;
  5371  0B0A  1283               	bcf	3,5	;RP0=0, select bank0
  5372  0B0B  1303               	bcf	3,6	;RP1=0, select bank0
  5373  0B0C  1410               	bsf	16,0	;volatile
  5374  0B0D                     l3921:	
  5375                           
  5376                           ;main.c: 72:     INTCONbits.GIE = 1;
  5377  0B0D  178B               	bsf	11,7	;volatile
  5378  0B0E                     l3923:	
  5379                           
  5380                           ;main.c: 74:     setTransStat(0);
  5381  0B0E  3000               	movlw	0
  5382  0B0F  00BD               	movwf	setTransStat@stat
  5383  0B10  00BE               	movwf	setTransStat@stat+1
  5384  0B11  120A  158A  2143  120A  158A  	fcall	_setTransStat
  5385  0B16                     l216:	
  5386  0B16  0008               	return
  5387  0B17                     __end_of_config:	
  5388                           
  5389                           	psect	text21
  5390  0943                     __ptext21:	
  5391 ;; *************** function _setTransStat *****************
  5392 ;; Defined at:
  5393 ;;		line 228 in file "main.c"
  5394 ;; Parameters:    Size  Location     Type
  5395 ;;  stat            2   29[BANK0 ] int 
  5396 ;; Auto vars:     Size  Location     Type
  5397 ;;		None
  5398 ;; Return value:  Size  Location     Type
  5399 ;;                  1    wreg      void 
  5400 ;; Registers used:
  5401 ;;		wreg, status,2, status,0
  5402 ;; Tracked objects:
  5403 ;;		On entry : 0/0
  5404 ;;		On exit  : 0/0
  5405 ;;		Unchanged: 0/0
  5406 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5407 ;;      Params:         0       2       0       0       0
  5408 ;;      Locals:         0       0       0       0       0
  5409 ;;      Temps:          0       2       0       0       0
  5410 ;;      Totals:         0       4       0       0       0
  5411 ;;Total ram usage:        4 bytes
  5412 ;; Hardware stack levels used:    1
  5413 ;; Hardware stack levels required when called:    5
  5414 ;; This function calls:
  5415 ;;		Nothing
  5416 ;; This function is called by:
  5417 ;;		_config
  5418 ;; This function uses a non-reentrant model
  5419 ;;
  5420                           
  5421                           
  5422                           ;psect for function _setTransStat
  5423  0943                     _setTransStat:	
  5424  0943                     l3051:	
  5425                           ;incstack = 0
  5426                           ; Regs used in _setTransStat: [wreg+status,2+status,0]
  5427                           
  5428                           
  5429                           ;main.c: 229:     if(stat == 1){
  5430  0943  1283               	bcf	3,5	;RP0=0, select bank0
  5431  0944  1303               	bcf	3,6	;RP1=0, select bank0
  5432  0945  033D               	decf	setTransStat@stat,w
  5433  0946  043E               	iorwf	setTransStat@stat+1,w
  5434  0947  1D03               	btfss	3,2
  5435  0948  294A               	goto	u2081
  5436  0949  294B               	goto	u2080
  5437  094A                     u2081:	
  5438  094A  2958               	goto	l278
  5439  094B                     u2080:	
  5440  094B                     l3053:	
  5441                           
  5442                           ;main.c: 230:         PORTCbits.RC0 = 1;
  5443  094B  1407               	bsf	7,0	;volatile
  5444                           
  5445                           ;main.c: 231:         PORTCbits.RC4 = 0;
  5446  094C  1207               	bcf	7,4	;volatile
  5447  094D                     l3055:	
  5448                           
  5449                           ;main.c: 232:         _delay((unsigned long)((2)*(4000000/4000.0)));
  5450  094D  3003               	movlw	3
  5451  094E  1283               	bcf	3,5	;RP0=0, select bank0
  5452  094F  1303               	bcf	3,6	;RP1=0, select bank0
  5453  0950  00C0               	movwf	??_setTransStat+1
  5454  0951  3097               	movlw	151
  5455  0952  00BF               	movwf	??_setTransStat
  5456  0953                     u3467:	
  5457  0953  0BBF               	decfsz	??_setTransStat,f
  5458  0954  2953               	goto	u3467
  5459  0955  0BC0               	decfsz	??_setTransStat+1,f
  5460  0956  2953               	goto	u3467
  5461                           
  5462                           ;main.c: 233:     }else{
  5463  0957  295B               	goto	l280
  5464  0958                     l278:	
  5465                           
  5466                           ;main.c: 234:         PORTCbits.RC0 = 0;
  5467  0958  1007               	bcf	7,0	;volatile
  5468                           
  5469                           ;main.c: 235:         PORTCbits.RC4 = 1;
  5470  0959  1607               	bsf	7,4	;volatile
  5471  095A  294D               	goto	l3055
  5472  095B                     l280:	
  5473  095B  0008               	return
  5474  095C                     __end_of_setTransStat:	
  5475                           
  5476                           	psect	text22
  5477  09E9                     __ptext22:	
  5478 ;; *************** function _initLCD *****************
  5479 ;; Defined at:
  5480 ;;		line 5 in file "lcd.c"
  5481 ;; Parameters:    Size  Location     Type
  5482 ;;		None
  5483 ;; Auto vars:     Size  Location     Type
  5484 ;;		None
  5485 ;; Return value:  Size  Location     Type
  5486 ;;                  1    wreg      void 
  5487 ;; Registers used:
  5488 ;;		wreg, status,2, status,0, pclath, cstack
  5489 ;; Tracked objects:
  5490 ;;		On entry : 0/0
  5491 ;;		On exit  : 0/0
  5492 ;;		Unchanged: 0/0
  5493 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5494 ;;      Params:         0       0       0       0       0
  5495 ;;      Locals:         0       0       0       0       0
  5496 ;;      Temps:          0       0       2       0       0
  5497 ;;      Totals:         0       0       2       0       0
  5498 ;;Total ram usage:        2 bytes
  5499 ;; Hardware stack levels used:    1
  5500 ;; Hardware stack levels required when called:    8
  5501 ;; This function calls:
  5502 ;;		_OpenXLCD
  5503 ;;		_SendCMDLCD
  5504 ;; This function is called by:
  5505 ;;		_config
  5506 ;; This function uses a non-reentrant model
  5507 ;;
  5508                           
  5509                           
  5510                           ;psect for function _initLCD
  5511  09E9                     _initLCD:	
  5512  09E9                     l3883:	
  5513                           ;incstack = 0
  5514 ;; hardware stack exceeded
  5515                           ; Regs used in _initLCD: [wreg+status,2+status,0+pclath+cstack]
  5516                           
  5517                           
  5518                           ;lcd.c: 6:     OpenXLCD(0b00101100 & 0b00111000);
  5519  09E9  3028               	movlw	40
  5520  09EA  120A  118A  2657  120A  158A  	fcall	_OpenXLCD
  5521  09EF                     l3885:	
  5522                           
  5523                           ;lcd.c: 7:     _delay((unsigned long)((100)*(4000000/4000.0)));
  5524  09EF  3082               	movlw	130
  5525  09F0  1683               	bsf	3,5	;RP0=1, select bank1
  5526  09F1  1303               	bcf	3,6	;RP1=0, select bank1
  5527  09F2  00C4               	movwf	(??_initLCD^(0+128)+1)
  5528  09F3  30DD               	movlw	221
  5529  09F4  00C3               	movwf	??_initLCD^(0+128)
  5530  09F5                     u3477:	
  5531  09F5  0BC3               	decfsz	??_initLCD^(0+128),f
  5532  09F6  29F5               	goto	u3477
  5533  09F7  0BC4               	decfsz	(??_initLCD^(0+128)+1),f
  5534  09F8  29F5               	goto	u3477
  5535  09F9                     l3887:	
  5536                           
  5537                           ;lcd.c: 8:     SendCMDLCD(0b00001101);
  5538  09F9  300D               	movlw	13
  5539  09FA  120A  158A  2114  120A  158A  	fcall	_SendCMDLCD
  5540  09FF                     l3889:	
  5541                           
  5542                           ;lcd.c: 9:     SendCMDLCD(0b00000110);
  5543  09FF  3006               	movlw	6
  5544  0A00  120A  158A  2114  120A  158A  	fcall	_SendCMDLCD
  5545  0A05                     l3891:	
  5546                           
  5547                           ;lcd.c: 10:     _delay((unsigned long)((50)*(4000000/4000.0)));
  5548  0A05  3041               	movlw	65
  5549  0A06  1683               	bsf	3,5	;RP0=1, select bank1
  5550  0A07  1303               	bcf	3,6	;RP1=0, select bank1
  5551  0A08  00C4               	movwf	(??_initLCD^(0+128)+1)
  5552  0A09  30ED               	movlw	237
  5553  0A0A  00C3               	movwf	??_initLCD^(0+128)
  5554  0A0B                     u3487:	
  5555  0A0B  0BC3               	decfsz	??_initLCD^(0+128),f
  5556  0A0C  2A0B               	goto	u3487
  5557  0A0D  0BC4               	decfsz	(??_initLCD^(0+128)+1),f
  5558  0A0E  2A0B               	goto	u3487
  5559  0A0F  2A10               	nop2
  5560  0A10                     l483:	
  5561  0A10  0008               	return
  5562  0A11                     __end_of_initLCD:	
  5563                           
  5564                           	psect	text23
  5565  0914                     __ptext23:	
  5566 ;; *************** function _SendCMDLCD *****************
  5567 ;; Defined at:
  5568 ;;		line 27 in file "lcd.c"
  5569 ;; Parameters:    Size  Location     Type
  5570 ;;  CMD             1    wreg     unsigned char 
  5571 ;; Auto vars:     Size  Location     Type
  5572 ;;  CMD             1   33[BANK0 ] unsigned char 
  5573 ;; Return value:  Size  Location     Type
  5574 ;;                  1    wreg      void 
  5575 ;; Registers used:
  5576 ;;		wreg, status,2, status,0, pclath, cstack
  5577 ;; Tracked objects:
  5578 ;;		On entry : 0/0
  5579 ;;		On exit  : 0/0
  5580 ;;		Unchanged: 0/0
  5581 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5582 ;;      Params:         0       0       0       0       0
  5583 ;;      Locals:         0       1       0       0       0
  5584 ;;      Temps:          0       0       0       0       0
  5585 ;;      Totals:         0       1       0       0       0
  5586 ;;Total ram usage:        1 bytes
  5587 ;; Hardware stack levels used:    1
  5588 ;; Hardware stack levels required when called:    7
  5589 ;; This function calls:
  5590 ;;		_BusyXLCD
  5591 ;;		_WriteCmdXLCD
  5592 ;; This function is called by:
  5593 ;;		_initLCD
  5594 ;; This function uses a non-reentrant model
  5595 ;;
  5596                           
  5597                           
  5598                           ;psect for function _SendCMDLCD
  5599  0914                     _SendCMDLCD:	
  5600                           
  5601                           ;incstack = 0
  5602 ;; hardware stack exceeded
  5603                           ; Regs used in _SendCMDLCD: [wreg+status,2+status,0+pclath+cstack]
  5604                           ;SendCMDLCD@CMD stored from wreg
  5605  0914  1283               	bcf	3,5	;RP0=0, select bank0
  5606  0915  1303               	bcf	3,6	;RP1=0, select bank0
  5607  0916  00C1               	movwf	SendCMDLCD@CMD
  5608  0917                     l2817:	
  5609  0917                     l2819:	
  5610                           ;lcd.c: 28:     while(BusyXLCD())continue;
  5611                           
  5612  0917  120A  158A  20B2  120A  158A  	fcall	_BusyXLCD
  5613  091C  3A00               	xorlw	0
  5614  091D  1D03               	skipz
  5615  091E  2920               	goto	u1821
  5616  091F  2921               	goto	u1820
  5617  0920                     u1821:	
  5618  0920  2917               	goto	l2819
  5619  0921                     u1820:	
  5620  0921                     l2821:	
  5621                           
  5622                           ;lcd.c: 29:     WriteCmdXLCD(CMD);
  5623  0921  1283               	bcf	3,5	;RP0=0, select bank0
  5624  0922  1303               	bcf	3,6	;RP1=0, select bank0
  5625  0923  0841               	movf	SendCMDLCD@CMD,w
  5626  0924  120A  158A  243E  120A  158A  	fcall	_WriteCmdXLCD
  5627  0929                     l493:	
  5628  0929  0008               	return
  5629  092A                     __end_of_SendCMDLCD:	
  5630                           
  5631                           	psect	text24
  5632  0657                     __ptext24:	
  5633 ;; *************** function _OpenXLCD *****************
  5634 ;; Defined at:
  5635 ;;		line 40 in file "lcd_pic16.c"
  5636 ;; Parameters:    Size  Location     Type
  5637 ;;  lcdtype         1    wreg     unsigned char 
  5638 ;; Auto vars:     Size  Location     Type
  5639 ;;  lcdtype         1   35[BANK0 ] unsigned char 
  5640 ;; Return value:  Size  Location     Type
  5641 ;;                  1    wreg      void 
  5642 ;; Registers used:
  5643 ;;		wreg, status,2, status,0, pclath, cstack
  5644 ;; Tracked objects:
  5645 ;;		On entry : 0/0
  5646 ;;		On exit  : 0/0
  5647 ;;		Unchanged: 0/0
  5648 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5649 ;;      Params:         0       0       0       0       0
  5650 ;;      Locals:         0       1       0       0       0
  5651 ;;      Temps:          0       2       0       0       0
  5652 ;;      Totals:         0       3       0       0       0
  5653 ;;Total ram usage:        3 bytes
  5654 ;; Hardware stack levels used:    1
  5655 ;; Hardware stack levels required when called:    7
  5656 ;; This function calls:
  5657 ;;		_BusyXLCD
  5658 ;;		_DelayPORXLCD
  5659 ;;		_SetDDRamAddr
  5660 ;;		_WriteCmdXLCD
  5661 ;; This function is called by:
  5662 ;;		_initLCD
  5663 ;; This function uses a non-reentrant model
  5664 ;;
  5665                           
  5666                           
  5667                           ;psect for function _OpenXLCD
  5668  0657                     _OpenXLCD:	
  5669                           
  5670                           ;incstack = 0
  5671 ;; hardware stack exceeded
  5672                           ; Regs used in _OpenXLCD: [wreg+status,2+status,0+pclath+cstack]
  5673                           ;OpenXLCD@lcdtype stored from wreg
  5674  0657  1283               	bcf	3,5	;RP0=0, select bank0
  5675  0658  1303               	bcf	3,6	;RP1=0, select bank0
  5676  0659  00C3               	movwf	OpenXLCD@lcdtype
  5677  065A                     l2755:	
  5678                           
  5679                           ;lcd_pic16.c: 40: void OpenXLCD(unsigned char lcdtype);lcd_pic16.c: 41: {;lcd_pic16.c: 4
      +                          7:         PORTB &= 0x0f;
  5680  065A  300F               	movlw	15
  5681  065B  00C1               	movwf	??_OpenXLCD
  5682  065C  0841               	movf	??_OpenXLCD,w
  5683  065D  0586               	andwf	6,f	;volatile
  5684                           
  5685                           ;lcd_pic16.c: 48:         TRISB &= 0x0F;
  5686  065E  300F               	movlw	15
  5687  065F  00C1               	movwf	??_OpenXLCD
  5688  0660  0841               	movf	??_OpenXLCD,w
  5689  0661  1683               	bsf	3,5	;RP0=1, select bank1
  5690  0662  1303               	bcf	3,6	;RP1=0, select bank1
  5691  0663  0586               	andwf	6,f	;volatile
  5692  0664                     l2757:	
  5693                           
  5694                           ;lcd_pic16.c: 54:         TRISBbits.TRISB2 = 0;
  5695  0664  1106               	bcf	6,2	;volatile
  5696  0665                     l2759:	
  5697                           
  5698                           ;lcd_pic16.c: 55:         TRISBbits.TRISB1 = 0;
  5699  0665  1086               	bcf	6,1	;volatile
  5700  0666                     l2761:	
  5701                           
  5702                           ;lcd_pic16.c: 56:         TRISBbits.TRISB3 = 0;
  5703  0666  1186               	bcf	6,3	;volatile
  5704  0667                     l2763:	
  5705                           
  5706                           ;lcd_pic16.c: 57:         PORTBbits.RB2 = 0;
  5707  0667  1283               	bcf	3,5	;RP0=0, select bank0
  5708  0668  1303               	bcf	3,6	;RP1=0, select bank0
  5709  0669  1106               	bcf	6,2	;volatile
  5710  066A                     l2765:	
  5711                           
  5712                           ;lcd_pic16.c: 58:         PORTBbits.RB1 = 0;
  5713  066A  1086               	bcf	6,1	;volatile
  5714  066B                     l2767:	
  5715                           
  5716                           ;lcd_pic16.c: 59:         PORTBbits.RB3 = 0;
  5717  066B  1186               	bcf	6,3	;volatile
  5718  066C                     l2769:	
  5719                           
  5720                           ;lcd_pic16.c: 62:         DelayPORXLCD();
  5721  066C  160A  118A  27F4  120A  118A  	fcall	_DelayPORXLCD
  5722  0671                     l2771:	
  5723                           
  5724                           ;lcd_pic16.c: 64:        WriteCmdXLCD(0x30);
  5725  0671  3030               	movlw	48
  5726  0672  120A  158A  243E  120A  118A  	fcall	_WriteCmdXLCD
  5727  0677                     l2773:	
  5728                           
  5729                           ;lcd_pic16.c: 65:          _delay((unsigned long)((5)*(4000000/4000.0)));
  5730  0677  3007               	movlw	7
  5731  0678  1283               	bcf	3,5	;RP0=0, select bank0
  5732  0679  1303               	bcf	3,6	;RP1=0, select bank0
  5733  067A  00C2               	movwf	??_OpenXLCD+1
  5734  067B  307C               	movlw	124
  5735  067C  00C1               	movwf	??_OpenXLCD
  5736  067D                     u3497:	
  5737  067D  0BC1               	decfsz	??_OpenXLCD,f
  5738  067E  2E7D               	goto	u3497
  5739  067F  0BC2               	decfsz	??_OpenXLCD+1,f
  5740  0680  2E7D               	goto	u3497
  5741  0681  0000               	nop
  5742  0682                     l2775:	
  5743                           
  5744                           ;lcd_pic16.c: 67:        WriteCmdXLCD(0x30);
  5745  0682  3030               	movlw	48
  5746  0683  120A  158A  243E  120A  118A  	fcall	_WriteCmdXLCD
  5747  0688                     l2777:	
  5748                           
  5749                           ;lcd_pic16.c: 68:          _delay((unsigned long)((1)*(4000000/4000.0)));
  5750  0688  30C7               	movlw	199
  5751  0689  1283               	bcf	3,5	;RP0=0, select bank0
  5752  068A  1303               	bcf	3,6	;RP1=0, select bank0
  5753  068B  00C1               	movwf	??_OpenXLCD
  5754  068C                     u3507:	
  5755  068C  2E8D               	nop2
  5756  068D  0BC1               	decfsz	??_OpenXLCD,f
  5757  068E  2E8C               	goto	u3507
  5758  068F  2E90               	nop2
  5759  0690                     l2779:	
  5760                           
  5761                           ;lcd_pic16.c: 71:        WriteCmdXLCD(0x32);
  5762  0690  3032               	movlw	50
  5763  0691  120A  158A  243E  120A  118A  	fcall	_WriteCmdXLCD
  5764  0696                     l2781:	
  5765                           ;lcd_pic16.c: 72:       while( BusyXLCD() );
  5766                           
  5767  0696  120A  158A  20B2  120A  118A  	fcall	_BusyXLCD
  5768  069B  3A00               	xorlw	0
  5769  069C  1D03               	skipz
  5770  069D  2E9F               	goto	u1731
  5771  069E  2EA0               	goto	u1730
  5772  069F                     u1731:	
  5773  069F  2E96               	goto	l2781
  5774  06A0                     u1730:	
  5775  06A0                     l2783:	
  5776  06A0  120A  158A  20B2  120A  118A  	fcall	_BusyXLCD
  5777  06A5  3A00               	xorlw	0
  5778  06A6  1D03               	skipz
  5779  06A7  2EA9               	goto	u1741
  5780  06A8  2EAA               	goto	u1740
  5781  06A9                     u1741:	
  5782  06A9  2EA0               	goto	l2783
  5783  06AA                     u1740:	
  5784  06AA                     l2785:	
  5785                           
  5786                           ;lcd_pic16.c: 78:         WriteCmdXLCD(lcdtype);
  5787  06AA  1283               	bcf	3,5	;RP0=0, select bank0
  5788  06AB  1303               	bcf	3,6	;RP1=0, select bank0
  5789  06AC  0843               	movf	OpenXLCD@lcdtype,w
  5790  06AD  120A  158A  243E  120A  118A  	fcall	_WriteCmdXLCD
  5791  06B2                     l2787:	
  5792                           ;lcd_pic16.c: 81:         while(BusyXLCD());
  5793                           
  5794  06B2  120A  158A  20B2  120A  118A  	fcall	_BusyXLCD
  5795  06B7  3A00               	xorlw	0
  5796  06B8  1D03               	skipz
  5797  06B9  2EBB               	goto	u1751
  5798  06BA  2EBC               	goto	u1750
  5799  06BB                     u1751:	
  5800  06BB  2EB2               	goto	l2787
  5801  06BC                     u1750:	
  5802  06BC                     l2789:	
  5803                           
  5804                           ;lcd_pic16.c: 82:         WriteCmdXLCD(0b00001011&0b00001101&0b00001110);
  5805  06BC  3008               	movlw	8
  5806  06BD  120A  158A  243E  120A  118A  	fcall	_WriteCmdXLCD
  5807  06C2                     l2791:	
  5808                           ;lcd_pic16.c: 83:         while(BusyXLCD());
  5809                           
  5810  06C2  120A  158A  20B2  120A  118A  	fcall	_BusyXLCD
  5811  06C7  3A00               	xorlw	0
  5812  06C8  1D03               	skipz
  5813  06C9  2ECB               	goto	u1761
  5814  06CA  2ECC               	goto	u1760
  5815  06CB                     u1761:	
  5816  06CB  2EC2               	goto	l2791
  5817  06CC                     u1760:	
  5818  06CC                     l2793:	
  5819                           
  5820                           ;lcd_pic16.c: 84:         WriteCmdXLCD(0b00001111&0b00001111&0b00001111);
  5821  06CC  300F               	movlw	15
  5822  06CD  120A  158A  243E  120A  118A  	fcall	_WriteCmdXLCD
  5823  06D2                     l2795:	
  5824                           ;lcd_pic16.c: 87:         while(BusyXLCD());
  5825                           
  5826  06D2  120A  158A  20B2  120A  118A  	fcall	_BusyXLCD
  5827  06D7  3A00               	xorlw	0
  5828  06D8  1D03               	skipz
  5829  06D9  2EDB               	goto	u1771
  5830  06DA  2EDC               	goto	u1770
  5831  06DB                     u1771:	
  5832  06DB  2ED2               	goto	l2795
  5833  06DC                     u1770:	
  5834  06DC                     l2797:	
  5835                           
  5836                           ;lcd_pic16.c: 88:         WriteCmdXLCD(0x01);
  5837  06DC  3001               	movlw	1
  5838  06DD  120A  158A  243E  120A  118A  	fcall	_WriteCmdXLCD
  5839  06E2                     l2799:	
  5840                           ;lcd_pic16.c: 91:         while(BusyXLCD());
  5841                           
  5842  06E2  120A  158A  20B2  120A  118A  	fcall	_BusyXLCD
  5843  06E7  3A00               	xorlw	0
  5844  06E8  1D03               	skipz
  5845  06E9  2EEB               	goto	u1781
  5846  06EA  2EEC               	goto	u1780
  5847  06EB                     u1781:	
  5848  06EB  2EE2               	goto	l2799
  5849  06EC                     u1780:	
  5850  06EC                     l2801:	
  5851                           
  5852                           ;lcd_pic16.c: 92:         WriteCmdXLCD(0b00000101);
  5853  06EC  3005               	movlw	5
  5854  06ED  120A  158A  243E  120A  118A  	fcall	_WriteCmdXLCD
  5855  06F2                     l2803:	
  5856                           ;lcd_pic16.c: 94:    while(BusyXLCD());
  5857                           
  5858  06F2  120A  158A  20B2  120A  118A  	fcall	_BusyXLCD
  5859  06F7  3A00               	xorlw	0
  5860  06F8  1D03               	skipz
  5861  06F9  2EFB               	goto	u1791
  5862  06FA  2EFC               	goto	u1790
  5863  06FB                     u1791:	
  5864  06FB  2EF2               	goto	l2803
  5865  06FC                     u1790:	
  5866  06FC                     l2805:	
  5867                           
  5868                           ;lcd_pic16.c: 95:         WriteCmdXLCD(0x06);
  5869  06FC  3006               	movlw	6
  5870  06FD  120A  158A  243E  120A  118A  	fcall	_WriteCmdXLCD
  5871  0702                     l2807:	
  5872                           ;lcd_pic16.c: 97:         while(BusyXLCD());
  5873                           
  5874  0702  120A  158A  20B2  120A  118A  	fcall	_BusyXLCD
  5875  0707  3A00               	xorlw	0
  5876  0708  1D03               	skipz
  5877  0709  2F0B               	goto	u1801
  5878  070A  2F0C               	goto	u1800
  5879  070B                     u1801:	
  5880  070B  2F02               	goto	l2807
  5881  070C                     u1800:	
  5882  070C                     l2809:	
  5883                           
  5884                           ;lcd_pic16.c: 98:         SetDDRamAddr(0x80);
  5885  070C  3080               	movlw	128
  5886  070D  120A  158A  252B  120A  118A  	fcall	_SetDDRamAddr
  5887  0712                     l2811:	
  5888                           ;lcd_pic16.c: 100:         while(BusyXLCD());
  5889                           
  5890  0712  120A  158A  20B2  120A  118A  	fcall	_BusyXLCD
  5891  0717  3A00               	xorlw	0
  5892  0718  1D03               	skipz
  5893  0719  2F1B               	goto	u1811
  5894  071A  2F1C               	goto	u1810
  5895  071B                     u1811:	
  5896  071B  2F12               	goto	l2811
  5897  071C                     u1810:	
  5898  071C                     l2813:	
  5899                           
  5900                           ;lcd_pic16.c: 101:         WriteCmdXLCD(0b00001101);
  5901  071C  300D               	movlw	13
  5902  071D  120A  158A  243E  120A  118A  	fcall	_WriteCmdXLCD
  5903  0722                     l383:	
  5904  0722  0008               	return
  5905  0723                     __end_of_OpenXLCD:	
  5906                           
  5907                           	psect	text25
  5908  0C3E                     __ptext25:	
  5909 ;; *************** function _WriteCmdXLCD *****************
  5910 ;; Defined at:
  5911 ;;		line 164 in file "lcd_pic16.c"
  5912 ;; Parameters:    Size  Location     Type
  5913 ;;  cmd             1    wreg     unsigned char 
  5914 ;; Auto vars:     Size  Location     Type
  5915 ;;  cmd             1   32[BANK0 ] unsigned char 
  5916 ;; Return value:  Size  Location     Type
  5917 ;;                  1    wreg      void 
  5918 ;; Registers used:
  5919 ;;		wreg, status,2, status,0, pclath, cstack
  5920 ;; Tracked objects:
  5921 ;;		On entry : 0/0
  5922 ;;		On exit  : 0/0
  5923 ;;		Unchanged: 0/0
  5924 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5925 ;;      Params:         0       0       0       0       0
  5926 ;;      Locals:         0       1       0       0       0
  5927 ;;      Temps:          0       2       0       0       0
  5928 ;;      Totals:         0       3       0       0       0
  5929 ;;Total ram usage:        3 bytes
  5930 ;; Hardware stack levels used:    1
  5931 ;; Hardware stack levels required when called:    6
  5932 ;; This function calls:
  5933 ;;		_DelayFor18TCY
  5934 ;; This function is called by:
  5935 ;;		_OpenXLCD
  5936 ;;		_SendCMDLCD
  5937 ;; This function uses a non-reentrant model
  5938 ;;
  5939                           
  5940                           
  5941                           ;psect for function _WriteCmdXLCD
  5942  0C3E                     _WriteCmdXLCD:	
  5943                           
  5944                           ;incstack = 0
  5945 ;; hardware stack exceeded
  5946                           ; Regs used in _WriteCmdXLCD: [wreg+status,2+status,0+pclath+cstack]
  5947                           ;WriteCmdXLCD@cmd stored from wreg
  5948  0C3E  1283               	bcf	3,5	;RP0=0, select bank0
  5949  0C3F  1303               	bcf	3,6	;RP1=0, select bank0
  5950  0C40  00C0               	movwf	WriteCmdXLCD@cmd
  5951  0C41                     l2501:	
  5952                           
  5953                           ;lcd_pic16.c: 178:         TRISB &= 0x0f;
  5954  0C41  300F               	movlw	15
  5955  0C42  00BE               	movwf	??_WriteCmdXLCD
  5956  0C43  083E               	movf	??_WriteCmdXLCD,w
  5957  0C44  1683               	bsf	3,5	;RP0=1, select bank1
  5958  0C45  1303               	bcf	3,6	;RP1=0, select bank1
  5959  0C46  0586               	andwf	6,f	;volatile
  5960                           
  5961                           ;lcd_pic16.c: 179:         PORTB &= 0x0f;
  5962  0C47  300F               	movlw	15
  5963  0C48  1283               	bcf	3,5	;RP0=0, select bank0
  5964  0C49  1303               	bcf	3,6	;RP1=0, select bank0
  5965  0C4A  00BE               	movwf	??_WriteCmdXLCD
  5966  0C4B  083E               	movf	??_WriteCmdXLCD,w
  5967  0C4C  0586               	andwf	6,f	;volatile
  5968                           
  5969                           ;lcd_pic16.c: 180:         PORTB |= cmd&0xf0;
  5970  0C4D  0840               	movf	WriteCmdXLCD@cmd,w
  5971  0C4E  39F0               	andlw	240
  5972  0C4F  00BE               	movwf	??_WriteCmdXLCD
  5973  0C50  083E               	movf	??_WriteCmdXLCD,w
  5974  0C51  0486               	iorwf	6,f	;volatile
  5975  0C52                     l2503:	
  5976                           
  5977                           ;lcd_pic16.c: 186:         PORTBbits.RB2 = 0;
  5978  0C52  1106               	bcf	6,2	;volatile
  5979  0C53                     l2505:	
  5980                           
  5981                           ;lcd_pic16.c: 187:         PORTBbits.RB1 = 0;
  5982  0C53  1086               	bcf	6,1	;volatile
  5983  0C54                     l2507:	
  5984                           
  5985                           ;lcd_pic16.c: 188:         DelayFor18TCY();
  5986  0C54  160A  118A  27D2  120A  158A  	fcall	_DelayFor18TCY
  5987  0C59                     l2509:	
  5988                           
  5989                           ;lcd_pic16.c: 189:         PORTBbits.RB3 = 1;
  5990  0C59  1283               	bcf	3,5	;RP0=0, select bank0
  5991  0C5A  1303               	bcf	3,6	;RP1=0, select bank0
  5992  0C5B  1586               	bsf	6,3	;volatile
  5993  0C5C                     l2511:	
  5994                           
  5995                           ;lcd_pic16.c: 190:         DelayFor18TCY();
  5996  0C5C  160A  118A  27D2  120A  158A  	fcall	_DelayFor18TCY
  5997  0C61                     l2513:	
  5998                           
  5999                           ;lcd_pic16.c: 191:         PORTBbits.RB3 = 0;
  6000  0C61  1283               	bcf	3,5	;RP0=0, select bank0
  6001  0C62  1303               	bcf	3,6	;RP1=0, select bank0
  6002  0C63  1186               	bcf	6,3	;volatile
  6003                           
  6004                           ;lcd_pic16.c: 193:         PORTB &= 0x0f;
  6005  0C64  300F               	movlw	15
  6006  0C65  00BE               	movwf	??_WriteCmdXLCD
  6007  0C66  083E               	movf	??_WriteCmdXLCD,w
  6008  0C67  0586               	andwf	6,f	;volatile
  6009                           
  6010                           ;lcd_pic16.c: 194:         PORTB |= (cmd<<4)&0xf0;
  6011  0C68  0840               	movf	WriteCmdXLCD@cmd,w
  6012  0C69  00BE               	movwf	??_WriteCmdXLCD
  6013  0C6A  3003               	movlw	3
  6014  0C6B                     u1345:	
  6015  0C6B  1003               	clrc
  6016  0C6C  0DBE               	rlf	??_WriteCmdXLCD,f
  6017  0C6D  3EFF               	addlw	-1
  6018  0C6E  1D03               	skipz
  6019  0C6F  2C6B               	goto	u1345
  6020  0C70  1003               	clrc
  6021  0C71  0D3E               	rlf	??_WriteCmdXLCD,w
  6022  0C72  39F0               	andlw	240
  6023  0C73  00BF               	movwf	??_WriteCmdXLCD+1
  6024  0C74  083F               	movf	??_WriteCmdXLCD+1,w
  6025  0C75  0486               	iorwf	6,f	;volatile
  6026  0C76                     l2515:	
  6027                           
  6028                           ;lcd_pic16.c: 199:         DelayFor18TCY();
  6029  0C76  160A  118A  27D2  120A  158A  	fcall	_DelayFor18TCY
  6030  0C7B                     l2517:	
  6031                           
  6032                           ;lcd_pic16.c: 200:         PORTBbits.RB3 = 1;
  6033  0C7B  1283               	bcf	3,5	;RP0=0, select bank0
  6034  0C7C  1303               	bcf	3,6	;RP1=0, select bank0
  6035  0C7D  1586               	bsf	6,3	;volatile
  6036  0C7E                     l2519:	
  6037                           
  6038                           ;lcd_pic16.c: 201:         DelayFor18TCY();
  6039  0C7E  160A  118A  27D2  120A  158A  	fcall	_DelayFor18TCY
  6040  0C83                     l2521:	
  6041                           
  6042                           ;lcd_pic16.c: 202:         PORTBbits.RB3 = 0;
  6043  0C83  1283               	bcf	3,5	;RP0=0, select bank0
  6044  0C84  1303               	bcf	3,6	;RP1=0, select bank0
  6045  0C85  1186               	bcf	6,3	;volatile
  6046                           
  6047                           ;lcd_pic16.c: 204:         TRISB |= 0xf0;
  6048  0C86  30F0               	movlw	240
  6049  0C87  00BE               	movwf	??_WriteCmdXLCD
  6050  0C88  083E               	movf	??_WriteCmdXLCD,w
  6051  0C89  1683               	bsf	3,5	;RP0=1, select bank1
  6052  0C8A  1303               	bcf	3,6	;RP1=0, select bank1
  6053  0C8B  0486               	iorwf	6,f	;volatile
  6054  0C8C                     l389:	
  6055  0C8C  0008               	return
  6056  0C8D                     __end_of_WriteCmdXLCD:	
  6057                           
  6058                           	psect	text26
  6059  0D2B                     __ptext26:	
  6060 ;; *************** function _SetDDRamAddr *****************
  6061 ;; Defined at:
  6062 ;;		line 217 in file "lcd_pic16.c"
  6063 ;; Parameters:    Size  Location     Type
  6064 ;;  DDaddr          1    wreg     unsigned char 
  6065 ;; Auto vars:     Size  Location     Type
  6066 ;;  DDaddr          1   32[BANK0 ] unsigned char 
  6067 ;; Return value:  Size  Location     Type
  6068 ;;                  1    wreg      void 
  6069 ;; Registers used:
  6070 ;;		wreg, status,2, status,0, pclath, cstack
  6071 ;; Tracked objects:
  6072 ;;		On entry : 0/0
  6073 ;;		On exit  : 0/0
  6074 ;;		Unchanged: 0/0
  6075 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6076 ;;      Params:         0       0       0       0       0
  6077 ;;      Locals:         0       1       0       0       0
  6078 ;;      Temps:          0       2       0       0       0
  6079 ;;      Totals:         0       3       0       0       0
  6080 ;;Total ram usage:        3 bytes
  6081 ;; Hardware stack levels used:    1
  6082 ;; Hardware stack levels required when called:    6
  6083 ;; This function calls:
  6084 ;;		_DelayFor18TCY
  6085 ;; This function is called by:
  6086 ;;		_start
  6087 ;;		_setFrequency
  6088 ;;		_principalScreen
  6089 ;;		_lockingScreen
  6090 ;;		_OpenXLCD
  6091 ;; This function uses a non-reentrant model
  6092 ;;
  6093                           
  6094                           
  6095                           ;psect for function _SetDDRamAddr
  6096  0D2B                     _SetDDRamAddr:	
  6097                           
  6098                           ;incstack = 0
  6099                           ; Regs used in _SetDDRamAddr: [wreg+status,2+status,0+pclath+cstack]
  6100                           ;SetDDRamAddr@DDaddr stored from wreg
  6101  0D2B  1283               	bcf	3,5	;RP0=0, select bank0
  6102  0D2C  1303               	bcf	3,6	;RP1=0, select bank0
  6103  0D2D  00C0               	movwf	SetDDRamAddr@DDaddr
  6104  0D2E                     l2475:	
  6105                           
  6106                           ;lcd_pic16.c: 217: void SetDDRamAddr(unsigned char DDaddr);lcd_pic16.c: 218: {;lcd_pic16
      +                          .c: 232:         TRISB &= 0x0f;
  6107  0D2E  300F               	movlw	15
  6108  0D2F  00BE               	movwf	??_SetDDRamAddr
  6109  0D30  083E               	movf	??_SetDDRamAddr,w
  6110  0D31  1683               	bsf	3,5	;RP0=1, select bank1
  6111  0D32  1303               	bcf	3,6	;RP1=0, select bank1
  6112  0D33  0586               	andwf	6,f	;volatile
  6113                           
  6114                           ;lcd_pic16.c: 233:         PORTB &= 0x0f;
  6115  0D34  300F               	movlw	15
  6116  0D35  1283               	bcf	3,5	;RP0=0, select bank0
  6117  0D36  1303               	bcf	3,6	;RP1=0, select bank0
  6118  0D37  00BE               	movwf	??_SetDDRamAddr
  6119  0D38  083E               	movf	??_SetDDRamAddr,w
  6120  0D39  0586               	andwf	6,f	;volatile
  6121                           
  6122                           ;lcd_pic16.c: 234:         PORTB |= ((DDaddr | 0b10000000) & 0xf0);
  6123  0D3A  0840               	movf	SetDDRamAddr@DDaddr,w
  6124  0D3B  3880               	iorlw	128
  6125  0D3C  39F0               	andlw	240
  6126  0D3D  00BE               	movwf	??_SetDDRamAddr
  6127  0D3E  083E               	movf	??_SetDDRamAddr,w
  6128  0D3F  0486               	iorwf	6,f	;volatile
  6129  0D40                     l2477:	
  6130                           
  6131                           ;lcd_pic16.c: 240:         PORTBbits.RB2 = 0;
  6132  0D40  1106               	bcf	6,2	;volatile
  6133  0D41                     l2479:	
  6134                           
  6135                           ;lcd_pic16.c: 241:         PORTBbits.RB1 = 0;
  6136  0D41  1086               	bcf	6,1	;volatile
  6137  0D42                     l2481:	
  6138                           
  6139                           ;lcd_pic16.c: 242:         DelayFor18TCY();
  6140  0D42  160A  118A  27D2  120A  158A  	fcall	_DelayFor18TCY
  6141  0D47                     l2483:	
  6142                           
  6143                           ;lcd_pic16.c: 243:         PORTBbits.RB3 = 1;
  6144  0D47  1283               	bcf	3,5	;RP0=0, select bank0
  6145  0D48  1303               	bcf	3,6	;RP1=0, select bank0
  6146  0D49  1586               	bsf	6,3	;volatile
  6147  0D4A                     l2485:	
  6148                           
  6149                           ;lcd_pic16.c: 244:         DelayFor18TCY();
  6150  0D4A  160A  118A  27D2  120A  158A  	fcall	_DelayFor18TCY
  6151  0D4F                     l2487:	
  6152                           
  6153                           ;lcd_pic16.c: 245:         PORTBbits.RB3 = 0;
  6154  0D4F  1283               	bcf	3,5	;RP0=0, select bank0
  6155  0D50  1303               	bcf	3,6	;RP1=0, select bank0
  6156  0D51  1186               	bcf	6,3	;volatile
  6157                           
  6158                           ;lcd_pic16.c: 247:         PORTB &= 0x0f;
  6159  0D52  300F               	movlw	15
  6160  0D53  00BE               	movwf	??_SetDDRamAddr
  6161  0D54  083E               	movf	??_SetDDRamAddr,w
  6162  0D55  0586               	andwf	6,f	;volatile
  6163                           
  6164                           ;lcd_pic16.c: 248:         PORTB |= ((DDaddr<<4)&0xf0);
  6165  0D56  0840               	movf	SetDDRamAddr@DDaddr,w
  6166  0D57  00BE               	movwf	??_SetDDRamAddr
  6167  0D58  3003               	movlw	3
  6168  0D59                     u1335:	
  6169  0D59  1003               	clrc
  6170  0D5A  0DBE               	rlf	??_SetDDRamAddr,f
  6171  0D5B  3EFF               	addlw	-1
  6172  0D5C  1D03               	skipz
  6173  0D5D  2D59               	goto	u1335
  6174  0D5E  1003               	clrc
  6175  0D5F  0D3E               	rlf	??_SetDDRamAddr,w
  6176  0D60  39F0               	andlw	240
  6177  0D61  00BF               	movwf	??_SetDDRamAddr+1
  6178  0D62  083F               	movf	??_SetDDRamAddr+1,w
  6179  0D63  0486               	iorwf	6,f	;volatile
  6180  0D64                     l2489:	
  6181                           
  6182                           ;lcd_pic16.c: 253:         DelayFor18TCY();
  6183  0D64  160A  118A  27D2  120A  158A  	fcall	_DelayFor18TCY
  6184  0D69                     l2491:	
  6185                           
  6186                           ;lcd_pic16.c: 254:         PORTBbits.RB3 = 1;
  6187  0D69  1283               	bcf	3,5	;RP0=0, select bank0
  6188  0D6A  1303               	bcf	3,6	;RP1=0, select bank0
  6189  0D6B  1586               	bsf	6,3	;volatile
  6190  0D6C                     l2493:	
  6191                           
  6192                           ;lcd_pic16.c: 255:         DelayFor18TCY();
  6193  0D6C  160A  118A  27D2  120A  158A  	fcall	_DelayFor18TCY
  6194  0D71                     l2495:	
  6195                           
  6196                           ;lcd_pic16.c: 256:         PORTBbits.RB3 = 0;
  6197  0D71  1283               	bcf	3,5	;RP0=0, select bank0
  6198  0D72  1303               	bcf	3,6	;RP1=0, select bank0
  6199  0D73  1186               	bcf	6,3	;volatile
  6200                           
  6201                           ;lcd_pic16.c: 258:         TRISB |= 0xf0;
  6202  0D74  30F0               	movlw	240
  6203  0D75  00BE               	movwf	??_SetDDRamAddr
  6204  0D76  083E               	movf	??_SetDDRamAddr,w
  6205  0D77  1683               	bsf	3,5	;RP0=1, select bank1
  6206  0D78  1303               	bcf	3,6	;RP1=0, select bank1
  6207  0D79  0486               	iorwf	6,f	;volatile
  6208  0D7A                     l392:	
  6209  0D7A  0008               	return
  6210  0D7B                     __end_of_SetDDRamAddr:	
  6211                           
  6212                           	psect	text27
  6213  17D2                     __ptext27:	
  6214 ;; *************** function _DelayFor18TCY *****************
  6215 ;; Defined at:
  6216 ;;		line 22 in file "lcd_pic16.c"
  6217 ;; Parameters:    Size  Location     Type
  6218 ;;		None
  6219 ;; Auto vars:     Size  Location     Type
  6220 ;;		None
  6221 ;; Return value:  Size  Location     Type
  6222 ;;                  1    wreg      void 
  6223 ;; Registers used:
  6224 ;;		wreg
  6225 ;; Tracked objects:
  6226 ;;		On entry : 0/0
  6227 ;;		On exit  : 0/0
  6228 ;;		Unchanged: 0/0
  6229 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6230 ;;      Params:         0       0       0       0       0
  6231 ;;      Locals:         0       0       0       0       0
  6232 ;;      Temps:          0       1       0       0       0
  6233 ;;      Totals:         0       1       0       0       0
  6234 ;;Total ram usage:        1 bytes
  6235 ;; Hardware stack levels used:    1
  6236 ;; Hardware stack levels required when called:    5
  6237 ;; This function calls:
  6238 ;;		Nothing
  6239 ;; This function is called by:
  6240 ;;		_WriteDataXLCD
  6241 ;;		_WriteCmdXLCD
  6242 ;;		_SetDDRamAddr
  6243 ;;		_SetCGRamAddr
  6244 ;;		_ReadDataXLCD
  6245 ;;		_ReadAddrXLCD
  6246 ;; This function uses a non-reentrant model
  6247 ;;
  6248                           
  6249                           
  6250                           ;psect for function _DelayFor18TCY
  6251  17D2                     _DelayFor18TCY:	
  6252  17D2                     l2473:	
  6253                           ;incstack = 0
  6254 ;; hardware stack exceeded
  6255                           ; Regs used in _DelayFor18TCY: [wreg]
  6256                           
  6257                           
  6258                           ;lcd_pic16.c: 24:    _delay((unsigned long)((18)*(4000000/4000000.0)));
  6259  17D2  3005               	movlw	5
  6260  17D3  1283               	bcf	3,5	;RP0=0, select bank0
  6261  17D4  1303               	bcf	3,6	;RP1=0, select bank0
  6262  17D5  00BD               	movwf	??_DelayFor18TCY
  6263  17D6                     u3517:	
  6264  17D6  0BBD               	decfsz	??_DelayFor18TCY,f
  6265  17D7  2FD6               	goto	u3517
  6266  17D8                     l347:	
  6267  17D8  0008               	return
  6268  17D9                     __end_of_DelayFor18TCY:	
  6269                           
  6270                           	psect	text28
  6271  17F4                     __ptext28:	
  6272 ;; *************** function _DelayPORXLCD *****************
  6273 ;; Defined at:
  6274 ;;		line 27 in file "lcd_pic16.c"
  6275 ;; Parameters:    Size  Location     Type
  6276 ;;		None
  6277 ;; Auto vars:     Size  Location     Type
  6278 ;;		None
  6279 ;; Return value:  Size  Location     Type
  6280 ;;                  1    wreg      void 
  6281 ;; Registers used:
  6282 ;;		wreg
  6283 ;; Tracked objects:
  6284 ;;		On entry : 0/0
  6285 ;;		On exit  : 0/0
  6286 ;;		Unchanged: 0/0
  6287 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6288 ;;      Params:         0       0       0       0       0
  6289 ;;      Locals:         0       0       0       0       0
  6290 ;;      Temps:          0       2       0       0       0
  6291 ;;      Totals:         0       2       0       0       0
  6292 ;;Total ram usage:        2 bytes
  6293 ;; Hardware stack levels used:    1
  6294 ;; Hardware stack levels required when called:    5
  6295 ;; This function calls:
  6296 ;;		Nothing
  6297 ;; This function is called by:
  6298 ;;		_OpenXLCD
  6299 ;; This function uses a non-reentrant model
  6300 ;;
  6301                           
  6302                           
  6303                           ;psect for function _DelayPORXLCD
  6304  17F4                     _DelayPORXLCD:	
  6305  17F4                     l2499:	
  6306                           ;incstack = 0
  6307 ;; hardware stack exceeded
  6308                           ; Regs used in _DelayPORXLCD: [wreg]
  6309                           
  6310                           
  6311                           ;lcd_pic16.c: 29:    _delay((unsigned long)((20)*(4000000/4000.0)));
  6312  17F4  301A               	movlw	26
  6313  17F5  1283               	bcf	3,5	;RP0=0, select bank0
  6314  17F6  1303               	bcf	3,6	;RP1=0, select bank0
  6315  17F7  00BE               	movwf	??_DelayPORXLCD+1
  6316  17F8  30F7               	movlw	247
  6317  17F9  00BD               	movwf	??_DelayPORXLCD
  6318  17FA                     u3527:	
  6319  17FA  0BBD               	decfsz	??_DelayPORXLCD,f
  6320  17FB  2FFA               	goto	u3527
  6321  17FC  0BBE               	decfsz	??_DelayPORXLCD+1,f
  6322  17FD  2FFA               	goto	u3527
  6323  17FE  2FFF               	nop2
  6324  17FF                     l350:	
  6325  17FF  0008               	return
  6326  1800                     __end_of_DelayPORXLCD:	
  6327                           
  6328                           	psect	text29
  6329  08B2                     __ptext29:	
  6330 ;; *************** function _BusyXLCD *****************
  6331 ;; Defined at:
  6332 ;;		line 451 in file "lcd_pic16.c"
  6333 ;; Parameters:    Size  Location     Type
  6334 ;;		None
  6335 ;; Auto vars:     Size  Location     Type
  6336 ;;		None
  6337 ;; Return value:  Size  Location     Type
  6338 ;;                  1    wreg      unsigned char 
  6339 ;; Registers used:
  6340 ;;		wreg
  6341 ;; Tracked objects:
  6342 ;;		On entry : 0/0
  6343 ;;		On exit  : 0/0
  6344 ;;		Unchanged: 0/0
  6345 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6346 ;;      Params:         0       0       0       0       0
  6347 ;;      Locals:         0       0       0       0       0
  6348 ;;      Temps:          0       2       0       0       0
  6349 ;;      Totals:         0       2       0       0       0
  6350 ;;Total ram usage:        2 bytes
  6351 ;; Hardware stack levels used:    1
  6352 ;; Hardware stack levels required when called:    5
  6353 ;; This function calls:
  6354 ;;		Nothing
  6355 ;; This function is called by:
  6356 ;;		_OpenXLCD
  6357 ;;		_putsXLCD
  6358 ;;		_putrsXLCD
  6359 ;;		_SendCMDLCD
  6360 ;; This function uses a non-reentrant model
  6361 ;;
  6362                           
  6363                           
  6364                           ;psect for function _BusyXLCD
  6365  08B2                     _BusyXLCD:	
  6366  08B2                     l2525:	
  6367                           ;incstack = 0
  6368                           ; Regs used in _BusyXLCD: [wreg]
  6369                           
  6370                           
  6371                           ;lcd_pic16.c: 504:         _delay((unsigned long)((5)*(4000000/4000.0)));
  6372  08B2  3007               	movlw	7
  6373  08B3  1283               	bcf	3,5	;RP0=0, select bank0
  6374  08B4  1303               	bcf	3,6	;RP1=0, select bank0
  6375  08B5  00BE               	movwf	??_BusyXLCD+1
  6376  08B6  307C               	movlw	124
  6377  08B7  00BD               	movwf	??_BusyXLCD
  6378  08B8                     u3537:	
  6379  08B8  0BBD               	decfsz	??_BusyXLCD,f
  6380  08B9  28B8               	goto	u3537
  6381  08BA  0BBE               	decfsz	??_BusyXLCD+1,f
  6382  08BB  28B8               	goto	u3537
  6383  08BC  0000               	nop
  6384                           
  6385                           ;lcd_pic16.c: 505:         return 0;
  6386  08BD  3000               	movlw	0
  6387  08BE                     l422:	
  6388  08BE  0008               	return
  6389  08BF                     __end_of_BusyXLCD:	
  6390                           
  6391                           	psect	text30
  6392  0A11                     __ptext30:	
  6393 ;; *************** function _inter *****************
  6394 ;; Defined at:
  6395 ;;		line 118 in file "main.c"
  6396 ;; Parameters:    Size  Location     Type
  6397 ;;		None
  6398 ;; Auto vars:     Size  Location     Type
  6399 ;;		None
  6400 ;; Return value:  Size  Location     Type
  6401 ;;                  1    wreg      void 
  6402 ;; Registers used:
  6403 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  6404 ;; Tracked objects:
  6405 ;;		On entry : 0/0
  6406 ;;		On exit  : 0/0
  6407 ;;		Unchanged: 0/0
  6408 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6409 ;;      Params:         0       0       0       0       0
  6410 ;;      Locals:         0       0       0       0       0
  6411 ;;      Temps:          0       5       0       0       0
  6412 ;;      Totals:         0       5       0       0       0
  6413 ;;Total ram usage:        5 bytes
  6414 ;; Hardware stack levels used:    1
  6415 ;; Hardware stack levels required when called:    4
  6416 ;; This function calls:
  6417 ;;		_time
  6418 ;;		_updateLCD
  6419 ;; This function is called by:
  6420 ;;		Interrupt level 1
  6421 ;; This function uses a non-reentrant model
  6422 ;;
  6423                           
  6424                           
  6425                           ;psect for function _inter
  6426  0A11                     _inter:	
  6427  0A11                     i1l3513:	
  6428                           
  6429                           ;main.c: 120:     INTCONbits.GIE = 0;
  6430  0A11  138B               	bcf	11,7	;volatile
  6431                           
  6432                           ;main.c: 122:     if(PIR1bits.TMR1IF == 1){
  6433  0A12  1C0C               	btfss	12,0	;volatile
  6434  0A13  2A15               	goto	u259_21
  6435  0A14  2A16               	goto	u259_20
  6436  0A15                     u259_21:	
  6437  0A15  2A2B               	goto	i1l3525
  6438  0A16                     u259_20:	
  6439  0A16                     i1l3515:	
  6440                           
  6441                           ;main.c: 123:         TMR1H = prTmr1H;
  6442  0A16  084B               	movf	_prTmr1H,w
  6443  0A17  008F               	movwf	15	;volatile
  6444                           
  6445                           ;main.c: 124:         TMR1L = prTmr1L;
  6446  0A18  084C               	movf	_prTmr1L,w
  6447  0A19  008E               	movwf	14	;volatile
  6448  0A1A                     i1l3517:	
  6449                           
  6450                           ;main.c: 125:         cntTmr1++;
  6451  0A1A  3001               	movlw	1
  6452  0A1B  00B8               	movwf	??_inter
  6453  0A1C  0838               	movf	??_inter,w
  6454  0A1D  07D2               	addwf	_cntTmr1,f
  6455  0A1E                     i1l3519:	
  6456                           
  6457                           ;main.c: 126:         time();
  6458  0A1E  120A  158A  25D1  120A  158A  	fcall	_time
  6459  0A23                     i1l3521:	
  6460                           
  6461                           ;main.c: 127:         updateLCD();
  6462  0A23  120A  158A  267F  120A  158A  	fcall	_updateLCD
  6463  0A28                     i1l3523:	
  6464                           
  6465                           ;main.c: 128:         PIR1bits.TMR1IF = 0;
  6466  0A28  1283               	bcf	3,5	;RP0=0, select bank0
  6467  0A29  1303               	bcf	3,6	;RP1=0, select bank0
  6468  0A2A  100C               	bcf	12,0	;volatile
  6469  0A2B                     i1l3525:	
  6470                           
  6471                           ;main.c: 130:     if(PIR1bits.RCIF == 1)
  6472  0A2B  1E8C               	btfss	12,5	;volatile
  6473  0A2C  2A2E               	goto	u260_21
  6474  0A2D  2A2F               	goto	u260_20
  6475  0A2E                     u260_21:	
  6476  0A2E  2A30               	goto	i1l231
  6477  0A2F                     u260_20:	
  6478  0A2F                     i1l3527:	
  6479                           
  6480                           ;main.c: 131:         if(RCREG == '$'){
  6481  0A2F  081A               	movf	26,w	;volatile
  6482  0A30                     i1l231:	
  6483                           
  6484                           ;main.c: 134:     INTCONbits.GIE = 1;
  6485  0A30  178B               	bsf	11,7	;volatile
  6486  0A31                     i1l233:	
  6487                           ;main.c: 135:     return;
  6488                           
  6489  0A31  083C               	movf	??_inter+4,w
  6490  0A32  00FF               	movwf	btemp+1
  6491  0A33  083B               	movf	??_inter+3,w
  6492  0A34  008A               	movwf	10
  6493  0A35  083A               	movf	??_inter+2,w
  6494  0A36  0084               	movwf	4
  6495  0A37  0E39               	swapf	(??_inter+1)^0,w
  6496  0A38  0083               	movwf	3
  6497  0A39  0EFE               	swapf	btemp,f
  6498  0A3A  0E7E               	swapf	btemp,w
  6499  0A3B  0009               	retfie
  6500  0A3C                     __end_of_inter:	
  6501                           
  6502                           	psect	intentry
  6503  0004                     __pintentry:	
  6504                           ;incstack = 0
  6505 ;; hardware stack exceeded
  6506                           ; Regs used in _inter: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  6507                           
  6508  0004                     interrupt_function:	
  6509  007E                     saved_w	set	btemp
  6510  0004  00FE               	movwf	btemp
  6511  0005  0E03               	swapf	3,w
  6512  0006  1283               	bcf	3,5	;RP0=0, select bank0
  6513  0007  1303               	bcf	3,6	;RP1=0, select bank0
  6514  0008  00B9               	movwf	??_inter+1
  6515  0009  0804               	movf	4,w
  6516  000A  00BA               	movwf	??_inter+2
  6517  000B  080A               	movf	10,w
  6518  000C  00BB               	movwf	??_inter+3
  6519  000D  087F               	movf	btemp+1,w
  6520  000E  00BC               	movwf	??_inter+4
  6521  000F  120A  158A  2A11   	ljmp	_inter
  6522                           
  6523                           	psect	text31
  6524  0E7F                     __ptext31:	
  6525 ;; *************** function _updateLCD *****************
  6526 ;; Defined at:
  6527 ;;		line 14 in file "lcd.c"
  6528 ;; Parameters:    Size  Location     Type
  6529 ;;		None
  6530 ;; Auto vars:     Size  Location     Type
  6531 ;;  integ           1   23[BANK0 ] unsigned char 
  6532 ;;  decim           1   22[BANK0 ] unsigned char 
  6533 ;; Return value:  Size  Location     Type
  6534 ;;                  1    wreg      void 
  6535 ;; Registers used:
  6536 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  6537 ;; Tracked objects:
  6538 ;;		On entry : 0/0
  6539 ;;		On exit  : 0/0
  6540 ;;		Unchanged: 0/0
  6541 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6542 ;;      Params:         0       0       0       0       0
  6543 ;;      Locals:         0       2       0       0       0
  6544 ;;      Temps:          0       5       0       0       0
  6545 ;;      Totals:         0       7       0       0       0
  6546 ;;Total ram usage:        7 bytes
  6547 ;; Hardware stack levels used:    1
  6548 ;; Hardware stack levels required when called:    3
  6549 ;; This function calls:
  6550 ;;		i1_SetDDRamAddr
  6551 ;;		i1___lwdiv
  6552 ;;		i1___lwmod
  6553 ;;		i1_putsXLCD
  6554 ;;		i1_sprintf
  6555 ;; This function is called by:
  6556 ;;		_inter
  6557 ;; This function uses a non-reentrant model
  6558 ;;
  6559                           
  6560                           
  6561                           ;psect for function _updateLCD
  6562  0E7F                     _updateLCD:	
  6563  0E7F                     i1l3455:	
  6564                           ;incstack = 0
  6565 ;; hardware stack exceeded
  6566                           ; Regs used in _updateLCD: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  6567                           
  6568                           
  6569                           ;lcd.c: 15:     if(isOnConfig){
  6570  0E7F  1283               	bcf	3,5	;RP0=0, select bank0
  6571  0E80  1303               	bcf	3,6	;RP1=0, select bank0
  6572  0E81  084E               	movf	_isOnConfig,w
  6573  0E82  1903               	btfsc	3,2
  6574  0E83  2E85               	goto	u253_21
  6575  0E84  2E86               	goto	u253_20
  6576  0E85                     u253_21:	
  6577  0E85  2EDC               	goto	i1l487
  6578  0E86                     u253_20:	
  6579  0E86                     i1l3457:	
  6580                           
  6581                           ;lcd.c: 16:         unsigned char decim = frequency % 10;
  6582  0E86  300A               	movlw	10
  6583  0E87  00F8               	movwf	i1___lwmod@divisor
  6584  0E88  3000               	movlw	0
  6585  0E89  00F9               	movwf	i1___lwmod@divisor+1
  6586  0E8A  0845               	movf	_frequency+1,w
  6587  0E8B  00FB               	movwf	i1___lwmod@dividend+1
  6588  0E8C  0844               	movf	_frequency,w
  6589  0E8D  00FA               	movwf	i1___lwmod@dividend
  6590  0E8E  120A  158A  229C  120A  158A  	fcall	i1___lwmod
  6591  0E93  0878               	movf	?i1___lwmod,w
  6592  0E94  1283               	bcf	3,5	;RP0=0, select bank0
  6593  0E95  1303               	bcf	3,6	;RP1=0, select bank0
  6594  0E96  00B1               	movwf	??_updateLCD
  6595  0E97  0831               	movf	??_updateLCD,w
  6596  0E98  00B6               	movwf	updateLCD@decim
  6597                           
  6598                           ;lcd.c: 17:         unsigned char integ = frequency / 10;
  6599  0E99  300A               	movlw	10
  6600  0E9A  00F0               	movwf	i1___lwdiv@divisor
  6601  0E9B  3000               	movlw	0
  6602  0E9C  00F1               	movwf	i1___lwdiv@divisor+1
  6603  0E9D  0845               	movf	_frequency+1,w
  6604  0E9E  00F3               	movwf	i1___lwdiv@dividend+1
  6605  0E9F  0844               	movf	_frequency,w
  6606  0EA0  00F2               	movwf	i1___lwdiv@dividend
  6607  0EA1  120A  158A  2317  120A  158A  	fcall	i1___lwdiv
  6608  0EA6  0870               	movf	?i1___lwdiv,w
  6609  0EA7  1283               	bcf	3,5	;RP0=0, select bank0
  6610  0EA8  1303               	bcf	3,6	;RP1=0, select bank0
  6611  0EA9  00B1               	movwf	??_updateLCD
  6612  0EAA  0831               	movf	??_updateLCD,w
  6613  0EAB  00B7               	movwf	updateLCD@integ
  6614  0EAC                     i1l3459:	
  6615                           
  6616                           ;lcd.c: 18:         sprintf(lineTwo,"FREQ.  %3d.%d MHz",integ, decim);
  6617  0EAC  300F               	movlw	(low ((STR_9-__stringbase)| (0+32768)))& (0+255)
  6618  0EAD  00B1               	movwf	??_updateLCD
  6619  0EAE  0831               	movf	??_updateLCD,w
  6620  0EAF  00A0               	movwf	i1sprintf@f
  6621  0EB0  0837               	movf	updateLCD@integ,w
  6622  0EB1  00B2               	movwf	??_updateLCD+1
  6623  0EB2  01B3               	clrf	??_updateLCD+2
  6624  0EB3  0832               	movf	??_updateLCD+1,w
  6625  0EB4  00A1               	movwf	?i1_sprintf+1
  6626  0EB5  0833               	movf	??_updateLCD+2,w
  6627  0EB6  00A2               	movwf	?i1_sprintf+2
  6628  0EB7  0836               	movf	updateLCD@decim,w
  6629  0EB8  00B4               	movwf	??_updateLCD+3
  6630  0EB9  01B5               	clrf	??_updateLCD+4
  6631  0EBA  0834               	movf	??_updateLCD+3,w
  6632  0EBB  00A3               	movwf	?i1_sprintf+3
  6633  0EBC  0835               	movf	??_updateLCD+4,w
  6634  0EBD  00A4               	movwf	?i1_sprintf+4
  6635  0EBE  30A1               	movlw	(low (_lineTwo| 0))& (0+255)
  6636  0EBF  120A  118A  21DB  120A  158A  	fcall	i1_sprintf
  6637  0EC4                     i1l3461:	
  6638                           
  6639                           ;lcd.c: 19:         SetDDRamAddr(0x40);
  6640  0EC4  3040               	movlw	64
  6641  0EC5  120A  158A  23F0  120A  158A  	fcall	i1_SetDDRamAddr
  6642  0ECA                     i1l3463:	
  6643                           
  6644                           ;lcd.c: 20:         putsXLCD(lineTwo);
  6645  0ECA  30A1               	movlw	(low (_lineTwo| 0))& (0+255)
  6646  0ECB  120A  158A  217B  120A  158A  	fcall	i1_putsXLCD
  6647  0ED0                     i1l3465:	
  6648                           
  6649                           ;lcd.c: 21:         SetDDRamAddr(0x00);
  6650  0ED0  3000               	movlw	0
  6651  0ED1  120A  158A  23F0  120A  158A  	fcall	i1_SetDDRamAddr
  6652  0ED6                     i1l3467:	
  6653                           
  6654                           ;lcd.c: 22:         putsXLCD(lineOne);
  6655  0ED6  30B2               	movlw	(low (_lineOne| 0))& (0+255)
  6656  0ED7  120A  158A  217B  120A  158A  	fcall	i1_putsXLCD
  6657  0EDC                     i1l487:	
  6658  0EDC  0008               	return
  6659  0EDD                     __end_of_updateLCD:	
  6660                           
  6661                           	psect	text32
  6662  01DB                     __ptext32:	
  6663 ;; *************** function i1_sprintf *****************
  6664 ;; Defined at:
  6665 ;;		line 505 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c"
  6666 ;; Parameters:    Size  Location     Type
  6667 ;;  sp              1    wreg     PTR unsigned char 
  6668 ;;		 -> lineTwo(17), lineOne(17), 
  6669 ;;  f               1    0[BANK0 ] PTR const unsigned char 
  6670 ;;		 -> STR_12(18), STR_11(17), STR_10(17), STR_9(18), 
  6671 ;;		 -> STR_7(17), STR_6(17), STR_5(17), STR_4(17), 
  6672 ;;		 -> STR_3(17), STR_2(17), STR_1(17), 
  6673 ;; Auto vars:     Size  Location     Type
  6674 ;;  sp              1   13[BANK0 ] PTR unsigned char 
  6675 ;;		 -> lineTwo(17), lineOne(17), 
  6676 ;;  sprintf         4    0        struct .
  6677 ;;  sprintf         2   14[BANK0 ] int 
  6678 ;;  sprintf         2   11[BANK0 ] unsigned int 
  6679 ;;  sprintf         2    0        PTR const unsigned char 
  6680 ;;  sprintf         2    0        unsigned int 
  6681 ;;  sprintf         1   16[BANK0 ] unsigned char 
  6682 ;;  sprintf         1   10[BANK0 ] unsigned char 
  6683 ;;  sprintf         1    9[BANK0 ] char 
  6684 ;;  sprintf         1    8[BANK0 ] PTR void [1]
  6685 ;;		 -> ?i1_sprintf(2), ?_sprintf(2), 
  6686 ;; Return value:  Size  Location     Type
  6687 ;;                  2    0[BANK0 ] int 
  6688 ;; Registers used:
  6689 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  6690 ;; Tracked objects:
  6691 ;;		On entry : 0/0
  6692 ;;		On exit  : 0/0
  6693 ;;		Unchanged: 0/0
  6694 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6695 ;;      Params:         0       5       0       0       0
  6696 ;;      Locals:         0       9       0       0       0
  6697 ;;      Temps:          0       3       0       0       0
  6698 ;;      Totals:         0      17       0       0       0
  6699 ;;Total ram usage:       17 bytes
  6700 ;; Hardware stack levels used:    1
  6701 ;; Hardware stack levels required when called:    1
  6702 ;; This function calls:
  6703 ;;		i1___lwdiv
  6704 ;;		i1___lwmod
  6705 ;;		i1___wmul
  6706 ;;		i1_isdigit
  6707 ;; This function is called by:
  6708 ;;		_updateLCD
  6709 ;; This function uses a non-reentrant model
  6710 ;;
  6711                           
  6712                           
  6713                           ;psect for function i1_sprintf
  6714  01DB                     i1_sprintf:	
  6715                           
  6716                           ;incstack = 0
  6717 ;; hardware stack exceeded
  6718                           ; Regs used in i1_sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  6719                           ;i1sprintf@sp stored from wreg
  6720  01DB  1283               	bcf	3,5	;RP0=0, select bank0
  6721  01DC  1303               	bcf	3,6	;RP1=0, select bank0
  6722  01DD  00AD               	movwf	i1sprintf@sp
  6723  01DE                     i1l3123:	
  6724                           
  6725                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 505: sprint
      +                          f(char * sp, const char * f, ...);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources
      +                          \c90\common\doprnt.c: 506: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\
      +                          common\doprnt.c: 507:  va_list ap;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\source
      +                          s\c90\common\doprnt.c: 512:  char c;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sour
      +                          ces\c90\common\doprnt.c: 514:  int width;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic
      +                          \sources\c90\common\doprnt.c: 521:  signed char prec;
  6726  01DE  3021               	movlw	(low ((?i1_sprintf| 0+1)))& (0+255)
  6727  01DF  00A5               	movwf	??i1_sprintf
  6728  01E0  0825               	movf	??i1_sprintf,w
  6729  01E1  00A8               	movwf	i1sprintf@ap
  6730                           
  6731                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 553:  while
      +                          ((c = *f++)) {
  6732  01E2  2B4A               	goto	i1l3205
  6733  01E3                     i1l3125:	
  6734                           
  6735                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 555:   if(c
      +                           != '%')
  6736  01E3  3025               	movlw	37
  6737  01E4  0630               	xorwf	i1sprintf@c,w
  6738  01E5  1903               	btfsc	3,2
  6739  01E6  29E8               	goto	u214_21
  6740  01E7  29E9               	goto	u214_20
  6741  01E8                     u214_21:	
  6742  01E8  29F5               	goto	i1l3131
  6743  01E9                     u214_20:	
  6744  01E9                     i1l3127:	
  6745                           
  6746                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 557:   {;C:
      +                          \Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 558:    ((*sp+
      +                          + = (c)));
  6747  01E9  0830               	movf	i1sprintf@c,w
  6748  01EA  00A5               	movwf	??i1_sprintf
  6749  01EB  082D               	movf	i1sprintf@sp,w
  6750  01EC  0084               	movwf	4
  6751  01ED  0825               	movf	??i1_sprintf,w
  6752  01EE  1383               	bcf	3,7	;select IRP bank0
  6753  01EF  0080               	movwf	0
  6754  01F0                     i1l3129:	
  6755  01F0  3001               	movlw	1
  6756  01F1  00A5               	movwf	??i1_sprintf
  6757  01F2  0825               	movf	??i1_sprintf,w
  6758  01F3  07AD               	addwf	i1sprintf@sp,f
  6759                           
  6760                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 559:    con
      +                          tinue;
  6761  01F4  2B4A               	goto	i1l3205
  6762  01F5                     i1l3131:	
  6763                           
  6764                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 563:   widt
      +                          h = 0;
  6765  01F5  01AE               	clrf	i1sprintf@width
  6766  01F6  01AF               	clrf	i1sprintf@width+1
  6767                           
  6768                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 565:   flag
      +                           = 0;
  6769  01F7  01AA               	clrf	i1sprintf@flag
  6770  01F8                     i1l3133:	
  6771                           
  6772                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 614:   if(i
      +                          sdigit((unsigned)*f)) {
  6773  01F8  0820               	movf	i1sprintf@f,w
  6774  01F9  0084               	movwf	4
  6775  01FA  120A  158A  2000  120A  118A  	fcall	stringdir
  6776  01FF  120A  158A  20DB  120A  118A  	fcall	i1_isdigit
  6777  0204  1C03               	btfss	3,0
  6778  0205  2A07               	goto	u215_21
  6779  0206  2A08               	goto	u215_20
  6780  0207                     u215_21:	
  6781  0207  2A48               	goto	i1l3147
  6782  0208                     u215_20:	
  6783  0208                     i1l3135:	
  6784                           
  6785                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 615:    wid
      +                          th = 0;
  6786  0208  1283               	bcf	3,5	;RP0=0, select bank0
  6787  0209  1303               	bcf	3,6	;RP1=0, select bank0
  6788  020A  01AE               	clrf	i1sprintf@width
  6789  020B  01AF               	clrf	i1sprintf@width+1
  6790  020C                     i1l3137:	
  6791                           
  6792                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 617:     wi
      +                          dth *= 10;
  6793  020C  300A               	movlw	10
  6794  020D  00F0               	movwf	i1___wmul@multiplier
  6795  020E  3000               	movlw	0
  6796  020F  00F1               	movwf	i1___wmul@multiplier+1
  6797  0210  1283               	bcf	3,5	;RP0=0, select bank0
  6798  0211  1303               	bcf	3,6	;RP1=0, select bank0
  6799  0212  082F               	movf	i1sprintf@width+1,w
  6800  0213  00F3               	movwf	i1___wmul@multiplicand+1
  6801  0214  082E               	movf	i1sprintf@width,w
  6802  0215  00F2               	movwf	i1___wmul@multiplicand
  6803  0216  120A  158A  219D  120A  118A  	fcall	i1___wmul
  6804  021B  0871               	movf	?i1___wmul+1,w
  6805  021C  1283               	bcf	3,5	;RP0=0, select bank0
  6806  021D  1303               	bcf	3,6	;RP1=0, select bank0
  6807  021E  00AF               	movwf	i1sprintf@width+1
  6808  021F  0870               	movf	?i1___wmul,w
  6809  0220  00AE               	movwf	i1sprintf@width
  6810  0221                     i1l3139:	
  6811                           
  6812                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 618:       
      +                           width += *f++ - '0';
  6813  0221  0820               	movf	i1sprintf@f,w
  6814  0222  0084               	movwf	4
  6815  0223  120A  158A  2000  120A  118A  	fcall	stringdir
  6816  0228  3ED0               	addlw	208
  6817  0229  00A5               	movwf	??i1_sprintf
  6818  022A  30FF               	movlw	255
  6819  022B  1803               	skipnc
  6820  022C  3000               	movlw	0
  6821  022D  00A6               	movwf	??i1_sprintf+1
  6822  022E  0825               	movf	??i1_sprintf,w
  6823  022F  07AE               	addwf	i1sprintf@width,f
  6824  0230  1803               	skipnc
  6825  0231  0AAF               	incf	i1sprintf@width+1,f
  6826  0232  0826               	movf	??i1_sprintf+1,w
  6827  0233  07AF               	addwf	i1sprintf@width+1,f
  6828  0234                     i1l3141:	
  6829  0234  3001               	movlw	1
  6830  0235  00A5               	movwf	??i1_sprintf
  6831  0236  0825               	movf	??i1_sprintf,w
  6832  0237  07A0               	addwf	i1sprintf@f,f
  6833  0238                     i1l3143:	
  6834                           
  6835                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 619:    } w
      +                          hile(isdigit((unsigned)*f));
  6836  0238  0820               	movf	i1sprintf@f,w
  6837  0239  0084               	movwf	4
  6838  023A  120A  158A  2000  120A  118A  	fcall	stringdir
  6839  023F  120A  158A  20DB  120A  118A  	fcall	i1_isdigit
  6840  0244  1803               	btfsc	3,0
  6841  0245  2A47               	goto	u216_21
  6842  0246  2A48               	goto	u216_20
  6843  0247                     u216_21:	
  6844  0247  2A0C               	goto	i1l3137
  6845  0248                     u216_20:	
  6846  0248                     i1l3147:	
  6847  0248  3001               	movlw	1
  6848  0249  1283               	bcf	3,5	;RP0=0, select bank0
  6849  024A  1303               	bcf	3,6	;RP1=0, select bank0
  6850  024B  07A0               	addwf	i1sprintf@f,f
  6851  024C  30FF               	movlw	-1
  6852  024D  0720               	addwf	i1sprintf@f,w
  6853  024E  0084               	movwf	4
  6854  024F  120A  158A  2000  120A  118A  	fcall	stringdir
  6855  0254  00B0               	movwf	i1sprintf@c
  6856  0255  00A5               	movwf	??i1_sprintf
  6857  0256  01A6               	clrf	??i1_sprintf+1
  6858                           
  6859                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6860                           ; Switch size 1, requested type "simple"
  6861                           ; Number of cases is 1, Range of values is 0 to 0
  6862                           ; switch strategies available:
  6863                           ; Name         Instructions Cycles
  6864                           ; simple_byte            4     3 (average)
  6865                           ; direct_byte           11     8 (fixed)
  6866                           ; jumptable            260     6 (fixed)
  6867                           ;	Chosen strategy is simple_byte
  6868  0257  0826               	movf	??i1_sprintf+1,w
  6869  0258  3A00               	xorlw	0	; case 0
  6870  0259  1903               	skipnz
  6871  025A  2A5C               	goto	i1l4161
  6872  025B  2B4A               	goto	i1l3205
  6873  025C                     i1l4161:	
  6874                           
  6875                           ; Switch size 1, requested type "simple"
  6876                           ; Number of cases is 3, Range of values is 0 to 105
  6877                           ; switch strategies available:
  6878                           ; Name         Instructions Cycles
  6879                           ; simple_byte           10     6 (average)
  6880                           ; jumptable            260     6 (fixed)
  6881                           ;	Chosen strategy is simple_byte
  6882  025C  0825               	movf	??i1_sprintf,w
  6883  025D  3A00               	xorlw	0	; case 0
  6884  025E  1903               	skipnz
  6885  025F  2B5C               	goto	i1l3207
  6886  0260  3A64               	xorlw	100	; case 100
  6887  0261  1903               	skipnz
  6888  0262  2A67               	goto	i1l3149
  6889  0263  3A0D               	xorlw	13	; case 105
  6890  0264  1903               	skipnz
  6891  0265  2A67               	goto	i1l3149
  6892  0266  2B4A               	goto	i1l3205
  6893  0267                     i1l3149:	
  6894                           
  6895                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1279:   {;C
      +                          :\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1285:     val
      +                           = (unsigned int)(*(int *)__va_arg((*(int **)ap), (int)0));
  6896  0267  0828               	movf	i1sprintf@ap,w
  6897  0268  0084               	movwf	4
  6898  0269  1383               	bcf	3,7	;select IRP bank0
  6899  026A  0800               	movf	0,w
  6900  026B  00AB               	movwf	i1sprintf@val
  6901  026C  0A84               	incf	4,f
  6902  026D  0800               	movf	0,w
  6903  026E  00AC               	movwf	i1sprintf@val+1
  6904  026F                     i1l3151:	
  6905  026F  3002               	movlw	2
  6906  0270  00A5               	movwf	??i1_sprintf
  6907  0271  0825               	movf	??i1_sprintf,w
  6908  0272  07A8               	addwf	i1sprintf@ap,f
  6909  0273                     i1l3153:	
  6910                           
  6911                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1287:    if
      +                          ((int)val < 0) {
  6912  0273  1FAC               	btfss	i1sprintf@val+1,7
  6913  0274  2A76               	goto	u217_21
  6914  0275  2A77               	goto	u217_20
  6915  0276                     u217_21:	
  6916  0276  2A80               	goto	i1l3159
  6917  0277                     u217_20:	
  6918  0277                     i1l3155:	
  6919                           
  6920                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1288:     f
      +                          lag |= 0x03;
  6921  0277  3003               	movlw	3
  6922  0278  00A5               	movwf	??i1_sprintf
  6923  0279  0825               	movf	??i1_sprintf,w
  6924  027A  04AA               	iorwf	i1sprintf@flag,f
  6925  027B                     i1l3157:	
  6926                           
  6927                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1289:     v
      +                          al = -val;
  6928  027B  09AB               	comf	i1sprintf@val,f
  6929  027C  09AC               	comf	i1sprintf@val+1,f
  6930  027D  0AAB               	incf	i1sprintf@val,f
  6931  027E  1903               	skipnz
  6932  027F  0AAC               	incf	i1sprintf@val+1,f
  6933  0280                     i1l3159:	
  6934                           
  6935                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1292:   };C
      +                          :\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1331:    for(
      +                          c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  6936  0280  01B0               	clrf	i1sprintf@c
  6937  0281  0AB0               	incf	i1sprintf@c,f
  6938  0282                     i1l3165:	
  6939                           
  6940                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1332:     i
      +                          f(val < dpowers[c])
  6941  0282  0830               	movf	i1sprintf@c,w
  6942  0283  00A5               	movwf	??i1_sprintf
  6943  0284  0725               	addwf	??i1_sprintf,w
  6944  0285  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  6945  0286  0084               	movwf	4
  6946  0287  120A  158A  2000  120A  118A  	fcall	stringdir
  6947  028C  00A6               	movwf	??i1_sprintf+1
  6948  028D  120A  158A  2000  120A  118A  	fcall	stringdir
  6949  0292  00A7               	movwf	??i1_sprintf+2
  6950  0293  0827               	movf	??i1_sprintf+2,w
  6951  0294  022C               	subwf	i1sprintf@val+1,w
  6952  0295  1D03               	skipz
  6953  0296  2A99               	goto	u218_25
  6954  0297  0826               	movf	??i1_sprintf+1,w
  6955  0298  022B               	subwf	i1sprintf@val,w
  6956  0299                     u218_25:	
  6957  0299  1803               	skipnc
  6958  029A  2A9C               	goto	u218_21
  6959  029B  2A9D               	goto	u218_20
  6960  029C                     u218_21:	
  6961  029C  2A9E               	goto	i1l3169
  6962  029D                     u218_20:	
  6963  029D  2AA8               	goto	i1l3171
  6964  029E                     i1l3169:	
  6965  029E  3001               	movlw	1
  6966  029F  00A5               	movwf	??i1_sprintf
  6967  02A0  0825               	movf	??i1_sprintf,w
  6968  02A1  07B0               	addwf	i1sprintf@c,f
  6969  02A2  3005               	movlw	5
  6970  02A3  0630               	xorwf	i1sprintf@c,w
  6971  02A4  1D03               	btfss	3,2
  6972  02A5  2AA7               	goto	u219_21
  6973  02A6  2AA8               	goto	u219_20
  6974  02A7                     u219_21:	
  6975  02A7  2A82               	goto	i1l3165
  6976  02A8                     u219_20:	
  6977  02A8                     i1l3171:	
  6978                           
  6979                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1371:   if(
      +                          width && flag & 0x03)
  6980  02A8  082E               	movf	i1sprintf@width,w
  6981  02A9  042F               	iorwf	i1sprintf@width+1,w
  6982  02AA  1903               	btfsc	3,2
  6983  02AB  2AAD               	goto	u220_21
  6984  02AC  2AAE               	goto	u220_20
  6985  02AD                     u220_21:	
  6986  02AD  2ABA               	goto	i1l740
  6987  02AE                     u220_20:	
  6988  02AE                     i1l3173:	
  6989  02AE  082A               	movf	i1sprintf@flag,w
  6990  02AF  3903               	andlw	3
  6991  02B0  1903               	btfsc	3,2
  6992  02B1  2AB3               	goto	u221_21
  6993  02B2  2AB4               	goto	u221_20
  6994  02B3                     u221_21:	
  6995  02B3  2ABA               	goto	i1l740
  6996  02B4                     u221_20:	
  6997  02B4                     i1l3175:	
  6998                           
  6999                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1372:    wi
      +                          dth--;
  7000  02B4  30FF               	movlw	255
  7001  02B5  07AE               	addwf	i1sprintf@width,f
  7002  02B6  1803               	skipnc
  7003  02B7  0AAF               	incf	i1sprintf@width+1,f
  7004  02B8  30FF               	movlw	255
  7005  02B9  07AF               	addwf	i1sprintf@width+1,f
  7006  02BA                     i1l740:	
  7007                           
  7008                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1407:   if(
      +                          width > c)
  7009  02BA  082F               	movf	i1sprintf@width+1,w
  7010  02BB  3A80               	xorlw	128
  7011  02BC  3C80               	sublw	128
  7012  02BD  1D03               	skipz
  7013  02BE  2AC1               	goto	u222_25
  7014  02BF  082E               	movf	i1sprintf@width,w
  7015  02C0  0230               	subwf	i1sprintf@c,w
  7016  02C1                     u222_25:	
  7017  02C1  1803               	skipnc
  7018  02C2  2AC4               	goto	u222_21
  7019  02C3  2AC5               	goto	u222_20
  7020  02C4                     u222_21:	
  7021  02C4  2AD1               	goto	i1l3179
  7022  02C5                     u222_20:	
  7023  02C5                     i1l3177:	
  7024                           
  7025                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1408:    wi
      +                          dth -= c;
  7026  02C5  1283               	bcf	3,5	;RP0=0, select bank0
  7027  02C6  1303               	bcf	3,6	;RP1=0, select bank0
  7028  02C7  0830               	movf	i1sprintf@c,w
  7029  02C8  00A5               	movwf	??i1_sprintf
  7030  02C9  01A6               	clrf	??i1_sprintf+1
  7031  02CA  0825               	movf	??i1_sprintf,w
  7032  02CB  02AE               	subwf	i1sprintf@width,f
  7033  02CC  0826               	movf	??i1_sprintf+1,w
  7034  02CD  1C03               	skipc
  7035  02CE  03AF               	decf	i1sprintf@width+1,f
  7036  02CF  02AF               	subwf	i1sprintf@width+1,f
  7037  02D0  2AD5               	goto	i1l3181
  7038  02D1                     i1l3179:	
  7039                           
  7040                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1410:    wi
      +                          dth = 0;
  7041  02D1  1283               	bcf	3,5	;RP0=0, select bank0
  7042  02D2  1303               	bcf	3,6	;RP1=0, select bank0
  7043  02D3  01AE               	clrf	i1sprintf@width
  7044  02D4  01AF               	clrf	i1sprintf@width+1
  7045  02D5                     i1l3181:	
  7046                           
  7047                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1448:   {;C
      +                          :\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1450:    if(w
      +                          idth
  7048  02D5  082E               	movf	i1sprintf@width,w
  7049  02D6  042F               	iorwf	i1sprintf@width+1,w
  7050  02D7  1903               	btfsc	3,2
  7051  02D8  2ADA               	goto	u223_21
  7052  02D9  2ADB               	goto	u223_20
  7053  02DA                     u223_21:	
  7054  02DA  2AF2               	goto	i1l3189
  7055  02DB                     u223_20:	
  7056  02DB                     i1l3183:	
  7057                           
  7058                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1456:      
      +                          ((*sp++ = (' ')));
  7059  02DB  3020               	movlw	32
  7060  02DC  00A5               	movwf	??i1_sprintf
  7061  02DD  082D               	movf	i1sprintf@sp,w
  7062  02DE  0084               	movwf	4
  7063  02DF  0825               	movf	??i1_sprintf,w
  7064  02E0  1383               	bcf	3,7	;select IRP bank0
  7065  02E1  0080               	movwf	0
  7066  02E2                     i1l3185:	
  7067  02E2  3001               	movlw	1
  7068  02E3  00A5               	movwf	??i1_sprintf
  7069  02E4  0825               	movf	??i1_sprintf,w
  7070  02E5  07AD               	addwf	i1sprintf@sp,f
  7071  02E6                     i1l3187:	
  7072  02E6  30FF               	movlw	255
  7073  02E7  07AE               	addwf	i1sprintf@width,f
  7074  02E8  1803               	skipnc
  7075  02E9  0AAF               	incf	i1sprintf@width+1,f
  7076  02EA  30FF               	movlw	255
  7077  02EB  07AF               	addwf	i1sprintf@width+1,f
  7078  02EC  082E               	movf	i1sprintf@width,w
  7079  02ED  042F               	iorwf	i1sprintf@width+1,w
  7080  02EE  1D03               	btfss	3,2
  7081  02EF  2AF1               	goto	u224_21
  7082  02F0  2AF2               	goto	u224_20
  7083  02F1                     u224_21:	
  7084  02F1  2ADB               	goto	i1l3183
  7085  02F2                     u224_20:	
  7086  02F2                     i1l3189:	
  7087                           
  7088                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1464:    if
      +                          (flag & 0x03)
  7089  02F2  082A               	movf	i1sprintf@flag,w
  7090  02F3  3903               	andlw	3
  7091  02F4  1903               	btfsc	3,2
  7092  02F5  2AF7               	goto	u225_21
  7093  02F6  2AF8               	goto	u225_20
  7094  02F7                     u225_21:	
  7095  02F7  2B03               	goto	i1l3195
  7096  02F8                     u225_20:	
  7097  02F8                     i1l3191:	
  7098                           
  7099                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1465:     (
      +                          (*sp++ = ('-')));
  7100  02F8  302D               	movlw	45
  7101  02F9  00A5               	movwf	??i1_sprintf
  7102  02FA  082D               	movf	i1sprintf@sp,w
  7103  02FB  0084               	movwf	4
  7104  02FC  0825               	movf	??i1_sprintf,w
  7105  02FD  1383               	bcf	3,7	;select IRP bank0
  7106  02FE  0080               	movwf	0
  7107  02FF                     i1l3193:	
  7108  02FF  3001               	movlw	1
  7109  0300  00A5               	movwf	??i1_sprintf
  7110  0301  0825               	movf	??i1_sprintf,w
  7111  0302  07AD               	addwf	i1sprintf@sp,f
  7112  0303                     i1l3195:	
  7113                           
  7114                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1495:   };C
      +                          :\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1498:   prec 
      +                          = c;
  7115  0303  0830               	movf	i1sprintf@c,w
  7116  0304  00A5               	movwf	??i1_sprintf
  7117  0305  0825               	movf	??i1_sprintf,w
  7118  0306  00A9               	movwf	i1sprintf@prec
  7119                           
  7120                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1500:   whi
      +                          le(prec--) {
  7121  0307  2B41               	goto	i1l3203
  7122  0308                     i1l3197:	
  7123                           
  7124                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1504:    {;
      +                          C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1515:     c 
      +                          = (val / dpowers[(unsigned char)prec]) % 10 + '0';
  7125  0308  300A               	movlw	10
  7126  0309  00F8               	movwf	i1___lwmod@divisor
  7127  030A  3000               	movlw	0
  7128  030B  00F9               	movwf	i1___lwmod@divisor+1
  7129  030C  0829               	movf	i1sprintf@prec,w
  7130  030D  00A5               	movwf	??i1_sprintf
  7131  030E  0725               	addwf	??i1_sprintf,w
  7132  030F  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  7133  0310  0084               	movwf	4
  7134  0311  120A  158A  2000  120A  118A  	fcall	stringdir
  7135  0316  00F0               	movwf	i1___lwdiv@divisor
  7136  0317  120A  158A  2000  120A  118A  	fcall	stringdir
  7137  031C  00F1               	movwf	i1___lwdiv@divisor+1
  7138  031D  082C               	movf	i1sprintf@val+1,w
  7139  031E  00F3               	movwf	i1___lwdiv@dividend+1
  7140  031F  082B               	movf	i1sprintf@val,w
  7141  0320  00F2               	movwf	i1___lwdiv@dividend
  7142  0321  120A  158A  2317  120A  118A  	fcall	i1___lwdiv
  7143  0326  0871               	movf	?i1___lwdiv+1,w
  7144  0327  00FB               	movwf	i1___lwmod@dividend+1
  7145  0328  0870               	movf	?i1___lwdiv,w
  7146  0329  00FA               	movwf	i1___lwmod@dividend
  7147  032A  120A  158A  229C  120A  118A  	fcall	i1___lwmod
  7148  032F  0878               	movf	?i1___lwmod,w
  7149  0330  3E30               	addlw	48
  7150  0331  1283               	bcf	3,5	;RP0=0, select bank0
  7151  0332  1303               	bcf	3,6	;RP1=0, select bank0
  7152  0333  00A6               	movwf	??i1_sprintf+1
  7153  0334  0826               	movf	??i1_sprintf+1,w
  7154  0335  00B0               	movwf	i1sprintf@c
  7155  0336                     i1l3199:	
  7156                           
  7157                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1549:    };
      +                          C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1550:    ((*
      +                          sp++ = (c)));
  7158  0336  0830               	movf	i1sprintf@c,w
  7159  0337  00A5               	movwf	??i1_sprintf
  7160  0338  082D               	movf	i1sprintf@sp,w
  7161  0339  0084               	movwf	4
  7162  033A  0825               	movf	??i1_sprintf,w
  7163  033B  1383               	bcf	3,7	;select IRP bank0
  7164  033C  0080               	movwf	0
  7165  033D                     i1l3201:	
  7166  033D  3001               	movlw	1
  7167  033E  00A5               	movwf	??i1_sprintf
  7168  033F  0825               	movf	??i1_sprintf,w
  7169  0340  07AD               	addwf	i1sprintf@sp,f
  7170  0341                     i1l3203:	
  7171                           
  7172                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1500:   whi
      +                          le(prec--) {
  7173  0341  30FF               	movlw	255
  7174  0342  00A5               	movwf	??i1_sprintf
  7175  0343  0825               	movf	??i1_sprintf,w
  7176  0344  07A9               	addwf	i1sprintf@prec,f
  7177  0345  0A29               	incf	i1sprintf@prec,w
  7178  0346  1D03               	btfss	3,2
  7179  0347  2B49               	goto	u226_21
  7180  0348  2B4A               	goto	u226_20
  7181  0349                     u226_21:	
  7182  0349  2B08               	goto	i1l3197
  7183  034A                     u226_20:	
  7184  034A                     i1l3205:	
  7185                           
  7186                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 553:  while
      +                          ((c = *f++)) {
  7187  034A  3001               	movlw	1
  7188  034B  07A0               	addwf	i1sprintf@f,f
  7189  034C  30FF               	movlw	-1
  7190  034D  0720               	addwf	i1sprintf@f,w
  7191  034E  0084               	movwf	4
  7192  034F  120A  158A  2000  120A  118A  	fcall	stringdir
  7193  0354  00A5               	movwf	??i1_sprintf
  7194  0355  0825               	movf	??i1_sprintf,w
  7195  0356  00B0               	movwf	i1sprintf@c
  7196  0357  0830               	movf	i1sprintf@c,w
  7197  0358  1D03               	btfss	3,2
  7198  0359  2B5B               	goto	u227_21
  7199  035A  2B5C               	goto	u227_20
  7200  035B                     u227_21:	
  7201  035B  29E3               	goto	i1l3125
  7202  035C                     u227_20:	
  7203  035C                     i1l3207:	
  7204                           
  7205                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1564:  *sp 
      +                          = 0;
  7206  035C  082D               	movf	i1sprintf@sp,w
  7207  035D  0084               	movwf	4
  7208  035E  1383               	bcf	3,7	;select IRP bank0
  7209  035F  0180               	clrf	0
  7210  0360                     i1l751:	
  7211  0360  0008               	return
  7212  0361                     __end_ofi1_sprintf:	
  7213                           
  7214                           	psect	text33
  7215  08DB                     __ptext33:	
  7216 ;; *************** function i1_isdigit *****************
  7217 ;; Defined at:
  7218 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\isdigit.c"
  7219 ;; Parameters:    Size  Location     Type
  7220 ;;  c               1    wreg     unsigned char 
  7221 ;; Auto vars:     Size  Location     Type
  7222 ;;  c               1    1[COMMON] unsigned char 
  7223 ;; Return value:  Size  Location     Type
  7224 ;;		None               void
  7225 ;; Registers used:
  7226 ;;		wreg, status,2, status,0
  7227 ;; Tracked objects:
  7228 ;;		On entry : 0/0
  7229 ;;		On exit  : 0/0
  7230 ;;		Unchanged: 0/0
  7231 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7232 ;;      Params:         0       0       0       0       0
  7233 ;;      Locals:         2       0       0       0       0
  7234 ;;      Temps:          0       0       0       0       0
  7235 ;;      Totals:         2       0       0       0       0
  7236 ;;Total ram usage:        2 bytes
  7237 ;; Hardware stack levels used:    1
  7238 ;; This function calls:
  7239 ;;		Nothing
  7240 ;; This function is called by:
  7241 ;;		i1_sprintf
  7242 ;; This function uses a non-reentrant model
  7243 ;;
  7244                           
  7245                           
  7246                           ;psect for function i1_isdigit
  7247  08DB                     i1_isdigit:	
  7248                           
  7249                           ;incstack = 0
  7250 ;; hardware stack exceeded
  7251                           ; Regs used in i1_isdigit: [wreg+status,2+status,0]
  7252                           ;i1isdigit@c stored from wreg
  7253  08DB  00F1               	movwf	i1isdigit@c
  7254  08DC                     i1l2929:	
  7255  08DC  01F0               	clrf	i1_isdigit$1166
  7256  08DD                     i1l2931:	
  7257  08DD  303A               	movlw	58
  7258  08DE  0271               	subwf	i1isdigit@c,w
  7259  08DF  1803               	skipnc
  7260  08E0  28E2               	goto	u202_21
  7261  08E1  28E3               	goto	u202_20
  7262  08E2                     u202_21:	
  7263  08E2  28EB               	goto	i1l2937
  7264  08E3                     u202_20:	
  7265  08E3                     i1l2933:	
  7266  08E3  3030               	movlw	48
  7267  08E4  0271               	subwf	i1isdigit@c,w
  7268  08E5  1C03               	skipc
  7269  08E6  28E8               	goto	u203_21
  7270  08E7  28E9               	goto	u203_20
  7271  08E8                     u203_21:	
  7272  08E8  28EB               	goto	i1l2937
  7273  08E9                     u203_20:	
  7274  08E9                     i1l2935:	
  7275  08E9  01F0               	clrf	i1_isdigit$1166
  7276  08EA  0AF0               	incf	i1_isdigit$1166,f
  7277  08EB                     i1l2937:	
  7278  08EB  0C70               	rrf	i1_isdigit$1166,w
  7279  08EC                     i1l1217:	
  7280  08EC  0008               	return
  7281  08ED                     __end_ofi1_isdigit:	
  7282                           
  7283                           	psect	text34
  7284  099D                     __ptext34:	
  7285 ;; *************** function i1___wmul *****************
  7286 ;; Defined at:
  7287 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\Umul16.c"
  7288 ;; Parameters:    Size  Location     Type
  7289 ;;  multiplier      2    0[COMMON] unsigned int 
  7290 ;;  multiplicand    2    2[COMMON] unsigned int 
  7291 ;; Auto vars:     Size  Location     Type
  7292 ;;  __wmul          2    4[COMMON] unsigned int 
  7293 ;; Return value:  Size  Location     Type
  7294 ;;                  2    0[COMMON] unsigned int 
  7295 ;; Registers used:
  7296 ;;		wreg, status,2, status,0
  7297 ;; Tracked objects:
  7298 ;;		On entry : 0/0
  7299 ;;		On exit  : 0/0
  7300 ;;		Unchanged: 0/0
  7301 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7302 ;;      Params:         4       0       0       0       0
  7303 ;;      Locals:         2       0       0       0       0
  7304 ;;      Temps:          0       0       0       0       0
  7305 ;;      Totals:         6       0       0       0       0
  7306 ;;Total ram usage:        6 bytes
  7307 ;; Hardware stack levels used:    1
  7308 ;; This function calls:
  7309 ;;		Nothing
  7310 ;; This function is called by:
  7311 ;;		i1_sprintf
  7312 ;; This function uses a non-reentrant model
  7313 ;;
  7314                           
  7315                           
  7316                           ;psect for function i1___wmul
  7317  099D                     i1___wmul:	
  7318  099D                     i1l2867:	
  7319                           ;incstack = 0
  7320 ;; hardware stack exceeded
  7321                           ; Regs used in i1___wmul: [wreg+status,2+status,0]
  7322                           
  7323  099D  01F4               	clrf	i1___wmul@product
  7324  099E  01F5               	clrf	i1___wmul@product+1
  7325  099F                     i1l2869:	
  7326  099F  1C70               	btfss	i1___wmul@multiplier,0
  7327  09A0  29A2               	goto	u185_21
  7328  09A1  29A3               	goto	u185_20
  7329  09A2                     u185_21:	
  7330  09A2  29A9               	goto	i1l755
  7331  09A3                     u185_20:	
  7332  09A3                     i1l2871:	
  7333  09A3  0872               	movf	i1___wmul@multiplicand,w
  7334  09A4  07F4               	addwf	i1___wmul@product,f
  7335  09A5  1803               	skipnc
  7336  09A6  0AF5               	incf	i1___wmul@product+1,f
  7337  09A7  0873               	movf	i1___wmul@multiplicand+1,w
  7338  09A8  07F5               	addwf	i1___wmul@product+1,f
  7339  09A9                     i1l755:	
  7340  09A9  3001               	movlw	1
  7341  09AA                     u186_25:	
  7342  09AA  1003               	clrc
  7343  09AB  0DF2               	rlf	i1___wmul@multiplicand,f
  7344  09AC  0DF3               	rlf	i1___wmul@multiplicand+1,f
  7345  09AD  3EFF               	addlw	-1
  7346  09AE  1D03               	skipz
  7347  09AF  29AA               	goto	u186_25
  7348  09B0                     i1l2873:	
  7349  09B0  3001               	movlw	1
  7350  09B1                     u187_25:	
  7351  09B1  1003               	clrc
  7352  09B2  0CF1               	rrf	i1___wmul@multiplier+1,f
  7353  09B3  0CF0               	rrf	i1___wmul@multiplier,f
  7354  09B4  3EFF               	addlw	-1
  7355  09B5  1D03               	skipz
  7356  09B6  29B1               	goto	u187_25
  7357  09B7                     i1l2875:	
  7358  09B7  0870               	movf	i1___wmul@multiplier,w
  7359  09B8  0471               	iorwf	i1___wmul@multiplier+1,w
  7360  09B9  1D03               	btfss	3,2
  7361  09BA  29BC               	goto	u188_21
  7362  09BB  29BD               	goto	u188_20
  7363  09BC                     u188_21:	
  7364  09BC  299F               	goto	i1l2869
  7365  09BD                     u188_20:	
  7366  09BD                     i1l2877:	
  7367  09BD  0875               	movf	i1___wmul@product+1,w
  7368  09BE  00F1               	movwf	?i1___wmul+1
  7369  09BF  0874               	movf	i1___wmul@product,w
  7370  09C0  00F0               	movwf	?i1___wmul
  7371  09C1                     i1l757:	
  7372  09C1  0008               	return
  7373  09C2                     __end_ofi1___wmul:	
  7374                           
  7375                           	psect	text35
  7376  0A9C                     __ptext35:	
  7377 ;; *************** function i1___lwmod *****************
  7378 ;; Defined at:
  7379 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\lwmod.c"
  7380 ;; Parameters:    Size  Location     Type
  7381 ;;  divisor         2    8[COMMON] unsigned int 
  7382 ;;  dividend        2   10[COMMON] unsigned int 
  7383 ;; Auto vars:     Size  Location     Type
  7384 ;;  __lwmod         1   13[COMMON] unsigned char 
  7385 ;; Return value:  Size  Location     Type
  7386 ;;                  2    8[COMMON] unsigned int 
  7387 ;; Registers used:
  7388 ;;		wreg, status,2, status,0
  7389 ;; Tracked objects:
  7390 ;;		On entry : 0/0
  7391 ;;		On exit  : 0/0
  7392 ;;		Unchanged: 0/0
  7393 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7394 ;;      Params:         4       0       0       0       0
  7395 ;;      Locals:         1       0       0       0       0
  7396 ;;      Temps:          1       0       0       0       0
  7397 ;;      Totals:         6       0       0       0       0
  7398 ;;Total ram usage:        6 bytes
  7399 ;; Hardware stack levels used:    1
  7400 ;; This function calls:
  7401 ;;		Nothing
  7402 ;; This function is called by:
  7403 ;;		_updateLCD
  7404 ;;		i1_sprintf
  7405 ;; This function uses a non-reentrant model
  7406 ;;
  7407                           
  7408                           
  7409                           ;psect for function i1___lwmod
  7410  0A9C                     i1___lwmod:	
  7411  0A9C                     i1l2907:	
  7412                           ;incstack = 0
  7413 ;; hardware stack exceeded
  7414                           ; Regs used in i1___lwmod: [wreg+status,2+status,0]
  7415                           
  7416  0A9C  0878               	movf	i1___lwmod@divisor,w
  7417  0A9D  0479               	iorwf	i1___lwmod@divisor+1,w
  7418  0A9E  1903               	btfsc	3,2
  7419  0A9F  2AA1               	goto	u196_21
  7420  0AA0  2AA2               	goto	u196_20
  7421  0AA1                     u196_21:	
  7422  0AA1  2AD1               	goto	i1l2925
  7423  0AA2                     u196_20:	
  7424  0AA2                     i1l2909:	
  7425  0AA2  01FD               	clrf	i1___lwmod@counter
  7426  0AA3  0AFD               	incf	i1___lwmod@counter,f
  7427  0AA4  2AB0               	goto	i1l2915
  7428  0AA5                     i1l2911:	
  7429  0AA5  3001               	movlw	1
  7430  0AA6                     u197_25:	
  7431  0AA6  1003               	clrc
  7432  0AA7  0DF8               	rlf	i1___lwmod@divisor,f
  7433  0AA8  0DF9               	rlf	i1___lwmod@divisor+1,f
  7434  0AA9  3EFF               	addlw	-1
  7435  0AAA  1D03               	skipz
  7436  0AAB  2AA6               	goto	u197_25
  7437  0AAC                     i1l2913:	
  7438  0AAC  3001               	movlw	1
  7439  0AAD  00FC               	movwf	??i1___lwmod
  7440  0AAE  087C               	movf	??i1___lwmod,w
  7441  0AAF  07FD               	addwf	i1___lwmod@counter,f
  7442  0AB0                     i1l2915:	
  7443  0AB0  1FF9               	btfss	i1___lwmod@divisor+1,7
  7444  0AB1  2AB3               	goto	u198_21
  7445  0AB2  2AB4               	goto	u198_20
  7446  0AB3                     u198_21:	
  7447  0AB3  2AA5               	goto	i1l2911
  7448  0AB4                     u198_20:	
  7449  0AB4                     i1l2917:	
  7450  0AB4  0879               	movf	i1___lwmod@divisor+1,w
  7451  0AB5  027B               	subwf	i1___lwmod@dividend+1,w
  7452  0AB6  1D03               	skipz
  7453  0AB7  2ABA               	goto	u199_25
  7454  0AB8  0878               	movf	i1___lwmod@divisor,w
  7455  0AB9  027A               	subwf	i1___lwmod@dividend,w
  7456  0ABA                     u199_25:	
  7457  0ABA  1C03               	skipc
  7458  0ABB  2ABD               	goto	u199_21
  7459  0ABC  2ABE               	goto	u199_20
  7460  0ABD                     u199_21:	
  7461  0ABD  2AC4               	goto	i1l2921
  7462  0ABE                     u199_20:	
  7463  0ABE                     i1l2919:	
  7464  0ABE  0878               	movf	i1___lwmod@divisor,w
  7465  0ABF  02FA               	subwf	i1___lwmod@dividend,f
  7466  0AC0  0879               	movf	i1___lwmod@divisor+1,w
  7467  0AC1  1C03               	skipc
  7468  0AC2  03FB               	decf	i1___lwmod@dividend+1,f
  7469  0AC3  02FB               	subwf	i1___lwmod@dividend+1,f
  7470  0AC4                     i1l2921:	
  7471  0AC4  3001               	movlw	1
  7472  0AC5                     u200_25:	
  7473  0AC5  1003               	clrc
  7474  0AC6  0CF9               	rrf	i1___lwmod@divisor+1,f
  7475  0AC7  0CF8               	rrf	i1___lwmod@divisor,f
  7476  0AC8  3EFF               	addlw	-1
  7477  0AC9  1D03               	skipz
  7478  0ACA  2AC5               	goto	u200_25
  7479  0ACB                     i1l2923:	
  7480  0ACB  3001               	movlw	1
  7481  0ACC  02FD               	subwf	i1___lwmod@counter,f
  7482  0ACD  1D03               	btfss	3,2
  7483  0ACE  2AD0               	goto	u201_21
  7484  0ACF  2AD1               	goto	u201_20
  7485  0AD0                     u201_21:	
  7486  0AD0  2AB4               	goto	i1l2917
  7487  0AD1                     u201_20:	
  7488  0AD1                     i1l2925:	
  7489  0AD1  087B               	movf	i1___lwmod@dividend+1,w
  7490  0AD2  00F9               	movwf	?i1___lwmod+1
  7491  0AD3  087A               	movf	i1___lwmod@dividend,w
  7492  0AD4  00F8               	movwf	?i1___lwmod
  7493  0AD5                     i1l1037:	
  7494  0AD5  0008               	return
  7495  0AD6                     __end_ofi1___lwmod:	
  7496                           
  7497                           	psect	text36
  7498  0B17                     __ptext36:	
  7499 ;; *************** function i1___lwdiv *****************
  7500 ;; Defined at:
  7501 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\lwdiv.c"
  7502 ;; Parameters:    Size  Location     Type
  7503 ;;  divisor         2    0[COMMON] unsigned int 
  7504 ;;  dividend        2    2[COMMON] unsigned int 
  7505 ;; Auto vars:     Size  Location     Type
  7506 ;;  __lwdiv         2    5[COMMON] unsigned int 
  7507 ;;  __lwdiv         1    7[COMMON] unsigned char 
  7508 ;; Return value:  Size  Location     Type
  7509 ;;                  2    0[COMMON] unsigned int 
  7510 ;; Registers used:
  7511 ;;		wreg, status,2, status,0
  7512 ;; Tracked objects:
  7513 ;;		On entry : 0/0
  7514 ;;		On exit  : 0/0
  7515 ;;		Unchanged: 0/0
  7516 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7517 ;;      Params:         4       0       0       0       0
  7518 ;;      Locals:         3       0       0       0       0
  7519 ;;      Temps:          1       0       0       0       0
  7520 ;;      Totals:         8       0       0       0       0
  7521 ;;Total ram usage:        8 bytes
  7522 ;; Hardware stack levels used:    1
  7523 ;; This function calls:
  7524 ;;		Nothing
  7525 ;; This function is called by:
  7526 ;;		_updateLCD
  7527 ;;		i1_sprintf
  7528 ;; This function uses a non-reentrant model
  7529 ;;
  7530                           
  7531                           
  7532                           ;psect for function i1___lwdiv
  7533  0B17                     i1___lwdiv:	
  7534  0B17                     i1l2881:	
  7535                           ;incstack = 0
  7536 ;; hardware stack exceeded
  7537                           ; Regs used in i1___lwdiv: [wreg+status,2+status,0]
  7538                           
  7539  0B17  01F5               	clrf	i1___lwdiv@quotient
  7540  0B18  01F6               	clrf	i1___lwdiv@quotient+1
  7541  0B19                     i1l2883:	
  7542  0B19  0870               	movf	i1___lwdiv@divisor,w
  7543  0B1A  0471               	iorwf	i1___lwdiv@divisor+1,w
  7544  0B1B  1903               	btfsc	3,2
  7545  0B1C  2B1E               	goto	u189_21
  7546  0B1D  2B1F               	goto	u189_20
  7547  0B1E                     u189_21:	
  7548  0B1E  2B56               	goto	i1l2903
  7549  0B1F                     u189_20:	
  7550  0B1F                     i1l2885:	
  7551  0B1F  01F7               	clrf	i1___lwdiv@counter
  7552  0B20  0AF7               	incf	i1___lwdiv@counter,f
  7553  0B21  2B2D               	goto	i1l2891
  7554  0B22                     i1l2887:	
  7555  0B22  3001               	movlw	1
  7556  0B23                     u190_25:	
  7557  0B23  1003               	clrc
  7558  0B24  0DF0               	rlf	i1___lwdiv@divisor,f
  7559  0B25  0DF1               	rlf	i1___lwdiv@divisor+1,f
  7560  0B26  3EFF               	addlw	-1
  7561  0B27  1D03               	skipz
  7562  0B28  2B23               	goto	u190_25
  7563  0B29                     i1l2889:	
  7564  0B29  3001               	movlw	1
  7565  0B2A  00F4               	movwf	??i1___lwdiv
  7566  0B2B  0874               	movf	??i1___lwdiv,w
  7567  0B2C  07F7               	addwf	i1___lwdiv@counter,f
  7568  0B2D                     i1l2891:	
  7569  0B2D  1FF1               	btfss	i1___lwdiv@divisor+1,7
  7570  0B2E  2B30               	goto	u191_21
  7571  0B2F  2B31               	goto	u191_20
  7572  0B30                     u191_21:	
  7573  0B30  2B22               	goto	i1l2887
  7574  0B31                     u191_20:	
  7575  0B31                     i1l2893:	
  7576  0B31  3001               	movlw	1
  7577  0B32                     u192_25:	
  7578  0B32  1003               	clrc
  7579  0B33  0DF5               	rlf	i1___lwdiv@quotient,f
  7580  0B34  0DF6               	rlf	i1___lwdiv@quotient+1,f
  7581  0B35  3EFF               	addlw	-1
  7582  0B36  1D03               	skipz
  7583  0B37  2B32               	goto	u192_25
  7584  0B38  0871               	movf	i1___lwdiv@divisor+1,w
  7585  0B39  0273               	subwf	i1___lwdiv@dividend+1,w
  7586  0B3A  1D03               	skipz
  7587  0B3B  2B3E               	goto	u193_25
  7588  0B3C  0870               	movf	i1___lwdiv@divisor,w
  7589  0B3D  0272               	subwf	i1___lwdiv@dividend,w
  7590  0B3E                     u193_25:	
  7591  0B3E  1C03               	skipc
  7592  0B3F  2B41               	goto	u193_21
  7593  0B40  2B42               	goto	u193_20
  7594  0B41                     u193_21:	
  7595  0B41  2B49               	goto	i1l2899
  7596  0B42                     u193_20:	
  7597  0B42                     i1l2895:	
  7598  0B42  0870               	movf	i1___lwdiv@divisor,w
  7599  0B43  02F2               	subwf	i1___lwdiv@dividend,f
  7600  0B44  0871               	movf	i1___lwdiv@divisor+1,w
  7601  0B45  1C03               	skipc
  7602  0B46  03F3               	decf	i1___lwdiv@dividend+1,f
  7603  0B47  02F3               	subwf	i1___lwdiv@dividend+1,f
  7604  0B48                     i1l2897:	
  7605  0B48  1475               	bsf	i1___lwdiv@quotient,0
  7606  0B49                     i1l2899:	
  7607  0B49  3001               	movlw	1
  7608  0B4A                     u194_25:	
  7609  0B4A  1003               	clrc
  7610  0B4B  0CF1               	rrf	i1___lwdiv@divisor+1,f
  7611  0B4C  0CF0               	rrf	i1___lwdiv@divisor,f
  7612  0B4D  3EFF               	addlw	-1
  7613  0B4E  1D03               	skipz
  7614  0B4F  2B4A               	goto	u194_25
  7615  0B50                     i1l2901:	
  7616  0B50  3001               	movlw	1
  7617  0B51  02F7               	subwf	i1___lwdiv@counter,f
  7618  0B52  1D03               	btfss	3,2
  7619  0B53  2B55               	goto	u195_21
  7620  0B54  2B56               	goto	u195_20
  7621  0B55                     u195_21:	
  7622  0B55  2B31               	goto	i1l2893
  7623  0B56                     u195_20:	
  7624  0B56                     i1l2903:	
  7625  0B56  0876               	movf	i1___lwdiv@quotient+1,w
  7626  0B57  00F1               	movwf	?i1___lwdiv+1
  7627  0B58  0875               	movf	i1___lwdiv@quotient,w
  7628  0B59  00F0               	movwf	?i1___lwdiv
  7629  0B5A                     i1l1027:	
  7630  0B5A  0008               	return
  7631  0B5B                     __end_ofi1___lwdiv:	
  7632                           
  7633                           	psect	text37
  7634  097B                     __ptext37:	
  7635 ;; *************** function i1_putsXLCD *****************
  7636 ;; Defined at:
  7637 ;;		line 419 in file "lcd_pic16.c"
  7638 ;; Parameters:    Size  Location     Type
  7639 ;;  buffer          1    wreg     PTR unsigned char 
  7640 ;;		 -> lineTwo(17), lineOne(17), 
  7641 ;; Auto vars:     Size  Location     Type
  7642 ;;  buffer          1    5[COMMON] PTR unsigned char 
  7643 ;;		 -> lineTwo(17), lineOne(17), 
  7644 ;; Return value:  Size  Location     Type
  7645 ;;                  1    wreg      void 
  7646 ;; Registers used:
  7647 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7648 ;; Tracked objects:
  7649 ;;		On entry : 0/0
  7650 ;;		On exit  : 0/0
  7651 ;;		Unchanged: 0/0
  7652 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7653 ;;      Params:         0       0       0       0       0
  7654 ;;      Locals:         1       0       0       0       0
  7655 ;;      Temps:          1       0       0       0       0
  7656 ;;      Totals:         2       0       0       0       0
  7657 ;;Total ram usage:        2 bytes
  7658 ;; Hardware stack levels used:    1
  7659 ;; Hardware stack levels required when called:    2
  7660 ;; This function calls:
  7661 ;;		i1_BusyXLCD
  7662 ;;		i1_WriteDataXLCD
  7663 ;; This function is called by:
  7664 ;;		_updateLCD
  7665 ;; This function uses a non-reentrant model
  7666 ;;
  7667                           
  7668                           
  7669                           ;psect for function i1_putsXLCD
  7670  097B                     i1_putsXLCD:	
  7671                           
  7672                           ;incstack = 0
  7673 ;; hardware stack exceeded
  7674                           ; Regs used in i1_putsXLCD: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7675                           ;i1putsXLCD@buffer stored from wreg
  7676  097B  00F5               	movwf	i1putsXLCD@buffer
  7677  097C                     i1l3113:	
  7678                           
  7679                           ;lcd_pic16.c: 419: void putsXLCD(char *buffer);lcd_pic16.c: 420: {;lcd_pic16.c: 421:    
      +                               while(*buffer)
  7680  097C  2994               	goto	i1l3121
  7681  097D                     i1l3115:	
  7682  097D  160A  118A  27EA  120A  158A  	fcall	i1_BusyXLCD
  7683  0982  3A00               	xorlw	0
  7684  0983  1D03               	skipz
  7685  0984  2986               	goto	u212_21
  7686  0985  2987               	goto	u212_20
  7687  0986                     u212_21:	
  7688  0986  297D               	goto	i1l3115
  7689  0987                     u212_20:	
  7690  0987                     i1l3117:	
  7691                           
  7692                           ;lcd_pic16.c: 424:                 WriteDataXLCD(*buffer);
  7693  0987  0875               	movf	i1putsXLCD@buffer,w
  7694  0988  0084               	movwf	4
  7695  0989  1383               	bcf	3,7	;select IRP bank0
  7696  098A  0800               	movf	0,w
  7697  098B  120A  158A  23A3  120A  158A  	fcall	i1_WriteDataXLCD
  7698  0990                     i1l3119:	
  7699                           
  7700                           ;lcd_pic16.c: 425:                 buffer++;
  7701  0990  3001               	movlw	1
  7702  0991  00F4               	movwf	??i1_putsXLCD
  7703  0992  0874               	movf	??i1_putsXLCD,w
  7704  0993  07F5               	addwf	i1putsXLCD@buffer,f
  7705  0994                     i1l3121:	
  7706                           
  7707                           ;lcd_pic16.c: 421:         while(*buffer)
  7708  0994  0875               	movf	i1putsXLCD@buffer,w
  7709  0995  0084               	movwf	4
  7710  0996  1383               	bcf	3,7	;select IRP bank0
  7711  0997  0800               	movf	0,w
  7712  0998  1D03               	btfss	3,2
  7713  0999  299B               	goto	u213_21
  7714  099A  299C               	goto	u213_20
  7715  099B                     u213_21:	
  7716  099B  297D               	goto	i1l3115
  7717  099C                     u213_20:	
  7718  099C                     i1l410:	
  7719  099C  0008               	return
  7720  099D                     __end_ofi1_putsXLCD:	
  7721                           
  7722                           	psect	text38
  7723  0BA3                     __ptext38:	
  7724 ;; *************** function i1_WriteDataXLCD *****************
  7725 ;; Defined at:
  7726 ;;		line 110 in file "lcd_pic16.c"
  7727 ;; Parameters:    Size  Location     Type
  7728 ;;  data            1    wreg     unsigned char 
  7729 ;; Auto vars:     Size  Location     Type
  7730 ;;  data            1    3[COMMON] unsigned char 
  7731 ;; Return value:  Size  Location     Type
  7732 ;;                  1    wreg      void 
  7733 ;; Registers used:
  7734 ;;		wreg, status,2, status,0, pclath, cstack
  7735 ;; Tracked objects:
  7736 ;;		On entry : 0/0
  7737 ;;		On exit  : 0/0
  7738 ;;		Unchanged: 0/0
  7739 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7740 ;;      Params:         0       0       0       0       0
  7741 ;;      Locals:         1       0       0       0       0
  7742 ;;      Temps:          2       0       0       0       0
  7743 ;;      Totals:         3       0       0       0       0
  7744 ;;Total ram usage:        3 bytes
  7745 ;; Hardware stack levels used:    1
  7746 ;; Hardware stack levels required when called:    1
  7747 ;; This function calls:
  7748 ;;		i1_DelayFor18TCY
  7749 ;; This function is called by:
  7750 ;;		i1_putsXLCD
  7751 ;; This function uses a non-reentrant model
  7752 ;;
  7753                           
  7754                           
  7755                           ;psect for function i1_WriteDataXLCD
  7756  0BA3                     i1_WriteDataXLCD:	
  7757                           
  7758                           ;incstack = 0
  7759 ;; hardware stack exceeded
  7760                           ; Regs used in i1_WriteDataXLCD: [wreg+status,2+status,0+pclath+cstack]
  7761                           ;i1WriteDataXLCD@data stored from wreg
  7762  0BA3  00F3               	movwf	i1WriteDataXLCD@data
  7763  0BA4                     i1l2839:	
  7764                           
  7765                           ;lcd_pic16.c: 110: void WriteDataXLCD(char data);lcd_pic16.c: 111: {;lcd_pic16.c: 125:  
      +                                 TRISB &= 0x0f;
  7766  0BA4  300F               	movlw	15
  7767  0BA5  00F1               	movwf	??i1_WriteDataXLCD
  7768  0BA6  0871               	movf	??i1_WriteDataXLCD,w
  7769  0BA7  1683               	bsf	3,5	;RP0=1, select bank1
  7770  0BA8  1303               	bcf	3,6	;RP1=0, select bank1
  7771  0BA9  0586               	andwf	6,f	;volatile
  7772                           
  7773                           ;lcd_pic16.c: 126:         PORTB &= 0x0f;
  7774  0BAA  300F               	movlw	15
  7775  0BAB  00F1               	movwf	??i1_WriteDataXLCD
  7776  0BAC  0871               	movf	??i1_WriteDataXLCD,w
  7777  0BAD  1283               	bcf	3,5	;RP0=0, select bank0
  7778  0BAE  1303               	bcf	3,6	;RP1=0, select bank0
  7779  0BAF  0586               	andwf	6,f	;volatile
  7780                           
  7781                           ;lcd_pic16.c: 127:         PORTB |= data&0xf0;
  7782  0BB0  0873               	movf	i1WriteDataXLCD@data,w
  7783  0BB1  39F0               	andlw	240
  7784  0BB2  00F1               	movwf	??i1_WriteDataXLCD
  7785  0BB3  0871               	movf	??i1_WriteDataXLCD,w
  7786  0BB4  0486               	iorwf	6,f	;volatile
  7787  0BB5                     i1l2841:	
  7788                           
  7789                           ;lcd_pic16.c: 133:         PORTBbits.RB1 = 1;
  7790  0BB5  1486               	bsf	6,1	;volatile
  7791  0BB6                     i1l2843:	
  7792                           
  7793                           ;lcd_pic16.c: 134:         PORTBbits.RB2 = 0;
  7794  0BB6  1106               	bcf	6,2	;volatile
  7795  0BB7                     i1l2845:	
  7796                           
  7797                           ;lcd_pic16.c: 135:         DelayFor18TCY();
  7798  0BB7  160A  118A  27CC  120A  158A  	fcall	i1_DelayFor18TCY
  7799  0BBC                     i1l2847:	
  7800                           
  7801                           ;lcd_pic16.c: 136:         PORTBbits.RB3 = 1;
  7802  0BBC  1283               	bcf	3,5	;RP0=0, select bank0
  7803  0BBD  1303               	bcf	3,6	;RP1=0, select bank0
  7804  0BBE  1586               	bsf	6,3	;volatile
  7805  0BBF                     i1l2849:	
  7806                           
  7807                           ;lcd_pic16.c: 137:         DelayFor18TCY();
  7808  0BBF  160A  118A  27CC  120A  158A  	fcall	i1_DelayFor18TCY
  7809  0BC4                     i1l2851:	
  7810                           
  7811                           ;lcd_pic16.c: 138:         PORTBbits.RB3 = 0;
  7812  0BC4  1283               	bcf	3,5	;RP0=0, select bank0
  7813  0BC5  1303               	bcf	3,6	;RP1=0, select bank0
  7814  0BC6  1186               	bcf	6,3	;volatile
  7815                           
  7816                           ;lcd_pic16.c: 140:         PORTB &= 0x0f;
  7817  0BC7  300F               	movlw	15
  7818  0BC8  00F1               	movwf	??i1_WriteDataXLCD
  7819  0BC9  0871               	movf	??i1_WriteDataXLCD,w
  7820  0BCA  0586               	andwf	6,f	;volatile
  7821                           
  7822                           ;lcd_pic16.c: 141:         PORTB |= ((data<<4)&0xf0);
  7823  0BCB  0873               	movf	i1WriteDataXLCD@data,w
  7824  0BCC  00F1               	movwf	??i1_WriteDataXLCD
  7825  0BCD  3003               	movlw	3
  7826  0BCE                     u184_25:	
  7827  0BCE  1003               	clrc
  7828  0BCF  0DF1               	rlf	??i1_WriteDataXLCD,f
  7829  0BD0  3EFF               	addlw	-1
  7830  0BD1  1D03               	skipz
  7831  0BD2  2BCE               	goto	u184_25
  7832  0BD3  1003               	clrc
  7833  0BD4  0D71               	rlf	??i1_WriteDataXLCD,w
  7834  0BD5  39F0               	andlw	240
  7835  0BD6  00F2               	movwf	??i1_WriteDataXLCD+1
  7836  0BD7  0872               	movf	??i1_WriteDataXLCD+1,w
  7837  0BD8  0486               	iorwf	6,f	;volatile
  7838  0BD9                     i1l2853:	
  7839                           
  7840                           ;lcd_pic16.c: 146:         DelayFor18TCY();
  7841  0BD9  160A  118A  27CC  120A  158A  	fcall	i1_DelayFor18TCY
  7842  0BDE                     i1l2855:	
  7843                           
  7844                           ;lcd_pic16.c: 147:         PORTBbits.RB3 = 1;
  7845  0BDE  1283               	bcf	3,5	;RP0=0, select bank0
  7846  0BDF  1303               	bcf	3,6	;RP1=0, select bank0
  7847  0BE0  1586               	bsf	6,3	;volatile
  7848  0BE1                     i1l2857:	
  7849                           
  7850                           ;lcd_pic16.c: 148:         DelayFor18TCY();
  7851  0BE1  160A  118A  27CC  120A  158A  	fcall	i1_DelayFor18TCY
  7852  0BE6                     i1l2859:	
  7853                           
  7854                           ;lcd_pic16.c: 149:         PORTBbits.RB3 = 0;
  7855  0BE6  1283               	bcf	3,5	;RP0=0, select bank0
  7856  0BE7  1303               	bcf	3,6	;RP1=0, select bank0
  7857  0BE8  1186               	bcf	6,3	;volatile
  7858                           
  7859                           ;lcd_pic16.c: 151:         TRISB |= 0xf0;
  7860  0BE9  30F0               	movlw	240
  7861  0BEA  00F1               	movwf	??i1_WriteDataXLCD
  7862  0BEB  0871               	movf	??i1_WriteDataXLCD,w
  7863  0BEC  1683               	bsf	3,5	;RP0=1, select bank1
  7864  0BED  1303               	bcf	3,6	;RP1=0, select bank1
  7865  0BEE  0486               	iorwf	6,f	;volatile
  7866  0BEF                     i1l386:	
  7867  0BEF  0008               	return
  7868  0BF0                     __end_ofi1_WriteDataXLCD:	
  7869                           
  7870                           	psect	text39
  7871  17EA                     __ptext39:	
  7872 ;; *************** function i1_BusyXLCD *****************
  7873 ;; Defined at:
  7874 ;;		line 451 in file "lcd_pic16.c"
  7875 ;; Parameters:    Size  Location     Type
  7876 ;;		None
  7877 ;; Auto vars:     Size  Location     Type
  7878 ;;		None
  7879 ;; Return value:  Size  Location     Type
  7880 ;;                  1    wreg      unsigned char 
  7881 ;; Registers used:
  7882 ;;		wreg
  7883 ;; Tracked objects:
  7884 ;;		On entry : 0/0
  7885 ;;		On exit  : 0/0
  7886 ;;		Unchanged: 0/0
  7887 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7888 ;;      Params:         0       0       0       0       0
  7889 ;;      Locals:         0       0       0       0       0
  7890 ;;      Temps:          2       0       0       0       0
  7891 ;;      Totals:         2       0       0       0       0
  7892 ;;Total ram usage:        2 bytes
  7893 ;; Hardware stack levels used:    1
  7894 ;; This function calls:
  7895 ;;		Nothing
  7896 ;; This function is called by:
  7897 ;;		i1_putsXLCD
  7898 ;; This function uses a non-reentrant model
  7899 ;;
  7900                           
  7901                           
  7902                           ;psect for function i1_BusyXLCD
  7903  17EA                     i1_BusyXLCD:	
  7904  17EA                     i1l2863:	
  7905                           ;incstack = 0
  7906 ;; hardware stack exceeded
  7907                           ; Regs used in i1_BusyXLCD: [wreg]
  7908                           
  7909                           
  7910                           ;lcd_pic16.c: 504:         _delay((unsigned long)((5)*(4000000/4000.0)));
  7911  17EA  3007               	movlw	7
  7912  17EB  00F1               	movwf	??i1_BusyXLCD+1
  7913  17EC  307D               	movlw	125
  7914  17ED  00F0               	movwf	??i1_BusyXLCD
  7915  17EE                     u354_27:	
  7916  17EE  0BF0               	decfsz	??i1_BusyXLCD,f
  7917  17EF  2FEE               	goto	u354_27
  7918  17F0  0BF1               	decfsz	??i1_BusyXLCD+1,f
  7919  17F1  2FEE               	goto	u354_27
  7920                           
  7921                           ;lcd_pic16.c: 505:         return 0;
  7922  17F2  3000               	movlw	0
  7923  17F3                     i1l422:	
  7924  17F3  0008               	return
  7925  17F4                     __end_ofi1_BusyXLCD:	
  7926                           
  7927                           	psect	text40
  7928  0BF0                     __ptext40:	
  7929 ;; *************** function i1_SetDDRamAddr *****************
  7930 ;; Defined at:
  7931 ;;		line 217 in file "lcd_pic16.c"
  7932 ;; Parameters:    Size  Location     Type
  7933 ;;  DDaddr          1    wreg     unsigned char 
  7934 ;; Auto vars:     Size  Location     Type
  7935 ;;  DDaddr          1    3[COMMON] unsigned char 
  7936 ;; Return value:  Size  Location     Type
  7937 ;;                  1    wreg      void 
  7938 ;; Registers used:
  7939 ;;		wreg, status,2, status,0, pclath, cstack
  7940 ;; Tracked objects:
  7941 ;;		On entry : 0/0
  7942 ;;		On exit  : 0/0
  7943 ;;		Unchanged: 0/0
  7944 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7945 ;;      Params:         0       0       0       0       0
  7946 ;;      Locals:         1       0       0       0       0
  7947 ;;      Temps:          2       0       0       0       0
  7948 ;;      Totals:         3       0       0       0       0
  7949 ;;Total ram usage:        3 bytes
  7950 ;; Hardware stack levels used:    1
  7951 ;; Hardware stack levels required when called:    1
  7952 ;; This function calls:
  7953 ;;		i1_DelayFor18TCY
  7954 ;; This function is called by:
  7955 ;;		_updateLCD
  7956 ;; This function uses a non-reentrant model
  7957 ;;
  7958                           
  7959                           
  7960                           ;psect for function i1_SetDDRamAddr
  7961  0BF0                     i1_SetDDRamAddr:	
  7962                           
  7963                           ;incstack = 0
  7964 ;; hardware stack exceeded
  7965                           ; Regs used in i1_SetDDRamAddr: [wreg+status,2+status,0+pclath+cstack]
  7966                           ;i1SetDDRamAddr@DDaddr stored from wreg
  7967  0BF0  00F3               	movwf	i1SetDDRamAddr@DDaddr
  7968  0BF1                     i1l3089:	
  7969                           
  7970                           ;lcd_pic16.c: 217: void SetDDRamAddr(unsigned char DDaddr);lcd_pic16.c: 218: {;lcd_pic16
      +                          .c: 232:         TRISB &= 0x0f;
  7971  0BF1  300F               	movlw	15
  7972  0BF2  00F1               	movwf	??i1_SetDDRamAddr
  7973  0BF3  0871               	movf	??i1_SetDDRamAddr,w
  7974  0BF4  1683               	bsf	3,5	;RP0=1, select bank1
  7975  0BF5  1303               	bcf	3,6	;RP1=0, select bank1
  7976  0BF6  0586               	andwf	6,f	;volatile
  7977                           
  7978                           ;lcd_pic16.c: 233:         PORTB &= 0x0f;
  7979  0BF7  300F               	movlw	15
  7980  0BF8  00F1               	movwf	??i1_SetDDRamAddr
  7981  0BF9  0871               	movf	??i1_SetDDRamAddr,w
  7982  0BFA  1283               	bcf	3,5	;RP0=0, select bank0
  7983  0BFB  1303               	bcf	3,6	;RP1=0, select bank0
  7984  0BFC  0586               	andwf	6,f	;volatile
  7985                           
  7986                           ;lcd_pic16.c: 234:         PORTB |= ((DDaddr | 0b10000000) & 0xf0);
  7987  0BFD  0873               	movf	i1SetDDRamAddr@DDaddr,w
  7988  0BFE  3880               	iorlw	128
  7989  0BFF  39F0               	andlw	240
  7990  0C00  00F1               	movwf	??i1_SetDDRamAddr
  7991  0C01  0871               	movf	??i1_SetDDRamAddr,w
  7992  0C02  0486               	iorwf	6,f	;volatile
  7993  0C03                     i1l3091:	
  7994                           
  7995                           ;lcd_pic16.c: 240:         PORTBbits.RB2 = 0;
  7996  0C03  1106               	bcf	6,2	;volatile
  7997  0C04                     i1l3093:	
  7998                           
  7999                           ;lcd_pic16.c: 241:         PORTBbits.RB1 = 0;
  8000  0C04  1086               	bcf	6,1	;volatile
  8001  0C05                     i1l3095:	
  8002                           
  8003                           ;lcd_pic16.c: 242:         DelayFor18TCY();
  8004  0C05  160A  118A  27CC  120A  158A  	fcall	i1_DelayFor18TCY
  8005  0C0A                     i1l3097:	
  8006                           
  8007                           ;lcd_pic16.c: 243:         PORTBbits.RB3 = 1;
  8008  0C0A  1283               	bcf	3,5	;RP0=0, select bank0
  8009  0C0B  1303               	bcf	3,6	;RP1=0, select bank0
  8010  0C0C  1586               	bsf	6,3	;volatile
  8011  0C0D                     i1l3099:	
  8012                           
  8013                           ;lcd_pic16.c: 244:         DelayFor18TCY();
  8014  0C0D  160A  118A  27CC  120A  158A  	fcall	i1_DelayFor18TCY
  8015  0C12                     i1l3101:	
  8016                           
  8017                           ;lcd_pic16.c: 245:         PORTBbits.RB3 = 0;
  8018  0C12  1283               	bcf	3,5	;RP0=0, select bank0
  8019  0C13  1303               	bcf	3,6	;RP1=0, select bank0
  8020  0C14  1186               	bcf	6,3	;volatile
  8021                           
  8022                           ;lcd_pic16.c: 247:         PORTB &= 0x0f;
  8023  0C15  300F               	movlw	15
  8024  0C16  00F1               	movwf	??i1_SetDDRamAddr
  8025  0C17  0871               	movf	??i1_SetDDRamAddr,w
  8026  0C18  0586               	andwf	6,f	;volatile
  8027                           
  8028                           ;lcd_pic16.c: 248:         PORTB |= ((DDaddr<<4)&0xf0);
  8029  0C19  0873               	movf	i1SetDDRamAddr@DDaddr,w
  8030  0C1A  00F1               	movwf	??i1_SetDDRamAddr
  8031  0C1B  3003               	movlw	3
  8032  0C1C                     u211_25:	
  8033  0C1C  1003               	clrc
  8034  0C1D  0DF1               	rlf	??i1_SetDDRamAddr,f
  8035  0C1E  3EFF               	addlw	-1
  8036  0C1F  1D03               	skipz
  8037  0C20  2C1C               	goto	u211_25
  8038  0C21  1003               	clrc
  8039  0C22  0D71               	rlf	??i1_SetDDRamAddr,w
  8040  0C23  39F0               	andlw	240
  8041  0C24  00F2               	movwf	??i1_SetDDRamAddr+1
  8042  0C25  0872               	movf	??i1_SetDDRamAddr+1,w
  8043  0C26  0486               	iorwf	6,f	;volatile
  8044  0C27                     i1l3103:	
  8045                           
  8046                           ;lcd_pic16.c: 253:         DelayFor18TCY();
  8047  0C27  160A  118A  27CC  120A  158A  	fcall	i1_DelayFor18TCY
  8048  0C2C                     i1l3105:	
  8049                           
  8050                           ;lcd_pic16.c: 254:         PORTBbits.RB3 = 1;
  8051  0C2C  1283               	bcf	3,5	;RP0=0, select bank0
  8052  0C2D  1303               	bcf	3,6	;RP1=0, select bank0
  8053  0C2E  1586               	bsf	6,3	;volatile
  8054  0C2F                     i1l3107:	
  8055                           
  8056                           ;lcd_pic16.c: 255:         DelayFor18TCY();
  8057  0C2F  160A  118A  27CC  120A  158A  	fcall	i1_DelayFor18TCY
  8058  0C34                     i1l3109:	
  8059                           
  8060                           ;lcd_pic16.c: 256:         PORTBbits.RB3 = 0;
  8061  0C34  1283               	bcf	3,5	;RP0=0, select bank0
  8062  0C35  1303               	bcf	3,6	;RP1=0, select bank0
  8063  0C36  1186               	bcf	6,3	;volatile
  8064                           
  8065                           ;lcd_pic16.c: 258:         TRISB |= 0xf0;
  8066  0C37  30F0               	movlw	240
  8067  0C38  00F1               	movwf	??i1_SetDDRamAddr
  8068  0C39  0871               	movf	??i1_SetDDRamAddr,w
  8069  0C3A  1683               	bsf	3,5	;RP0=1, select bank1
  8070  0C3B  1303               	bcf	3,6	;RP1=0, select bank1
  8071  0C3C  0486               	iorwf	6,f	;volatile
  8072  0C3D                     i1l392:	
  8073  0C3D  0008               	return
  8074  0C3E                     __end_ofi1_SetDDRamAddr:	
  8075                           
  8076                           	psect	text41
  8077  17CC                     __ptext41:	
  8078 ;; *************** function i1_DelayFor18TCY *****************
  8079 ;; Defined at:
  8080 ;;		line 22 in file "lcd_pic16.c"
  8081 ;; Parameters:    Size  Location     Type
  8082 ;;		None
  8083 ;; Auto vars:     Size  Location     Type
  8084 ;;		None
  8085 ;; Return value:  Size  Location     Type
  8086 ;;                  1    wreg      void 
  8087 ;; Registers used:
  8088 ;;		wreg
  8089 ;; Tracked objects:
  8090 ;;		On entry : 0/0
  8091 ;;		On exit  : 0/0
  8092 ;;		Unchanged: 0/0
  8093 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8094 ;;      Params:         0       0       0       0       0
  8095 ;;      Locals:         0       0       0       0       0
  8096 ;;      Temps:          1       0       0       0       0
  8097 ;;      Totals:         1       0       0       0       0
  8098 ;;Total ram usage:        1 bytes
  8099 ;; Hardware stack levels used:    1
  8100 ;; This function calls:
  8101 ;;		Nothing
  8102 ;; This function is called by:
  8103 ;;		i1_WriteDataXLCD
  8104 ;;		i1_SetDDRamAddr
  8105 ;; This function uses a non-reentrant model
  8106 ;;
  8107                           
  8108                           
  8109                           ;psect for function i1_DelayFor18TCY
  8110  17CC                     i1_DelayFor18TCY:	
  8111  17CC                     i1l2627:	
  8112                           ;incstack = 0
  8113 ;; hardware stack exceeded
  8114                           ; Regs used in i1_DelayFor18TCY: [wreg]
  8115                           
  8116                           
  8117                           ;lcd_pic16.c: 24:    _delay((unsigned long)((18)*(4000000/4000000.0)));
  8118  17CC  3005               	movlw	5
  8119  17CD  00F0               	movwf	??i1_DelayFor18TCY
  8120  17CE                     u355_27:	
  8121  17CE  0BF0               	decfsz	??i1_DelayFor18TCY,f
  8122  17CF  2FCE               	goto	u355_27
  8123  17D0  2FD1               	nop2
  8124  17D1                     i1l347:	
  8125  17D1  0008               	return
  8126  17D2                     __end_ofi1_DelayFor18TCY:	
  8127                           
  8128                           	psect	text42
  8129  0DD1                     __ptext42:	
  8130 ;; *************** function _time *****************
  8131 ;; Defined at:
  8132 ;;		line 138 in file "main.c"
  8133 ;; Parameters:    Size  Location     Type
  8134 ;;		None
  8135 ;; Auto vars:     Size  Location     Type
  8136 ;;		None
  8137 ;; Return value:  Size  Location     Type
  8138 ;;                  1    wreg      void 
  8139 ;; Registers used:
  8140 ;;		wreg, status,2, status,0, pclath, cstack
  8141 ;; Tracked objects:
  8142 ;;		On entry : 0/0
  8143 ;;		On exit  : 0/0
  8144 ;;		Unchanged: 0/0
  8145 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8146 ;;      Params:         0       0       0       0       0
  8147 ;;      Locals:         0       0       0       0       0
  8148 ;;      Temps:          1       0       0       0       0
  8149 ;;      Totals:         1       0       0       0       0
  8150 ;;Total ram usage:        1 bytes
  8151 ;; Hardware stack levels used:    1
  8152 ;; Hardware stack levels required when called:    2
  8153 ;; This function calls:
  8154 ;;		i1_setData
  8155 ;; This function is called by:
  8156 ;;		_inter
  8157 ;; This function uses a non-reentrant model
  8158 ;;
  8159                           
  8160                           
  8161                           ;psect for function _time
  8162  0DD1                     _time:	
  8163  0DD1                     i1l3415:	
  8164                           ;incstack = 0
  8165 ;; hardware stack exceeded
  8166                           ; Regs used in _time: [wreg+status,2+status,0+pclath+cstack]
  8167                           
  8168                           
  8169                           ;main.c: 139:     hundredMiliSeconds++;
  8170  0DD1  3001               	movlw	1
  8171  0DD2  00F5               	movwf	??_time
  8172  0DD3  0875               	movf	??_time,w
  8173  0DD4  1283               	bcf	3,5	;RP0=0, select bank0
  8174  0DD5  1303               	bcf	3,6	;RP1=0, select bank0
  8175  0DD6  07D0               	addwf	_hundredMiliSeconds,f
  8176  0DD7                     i1l3417:	
  8177                           
  8178                           ;main.c: 140:     if(hundredMiliSeconds >= 10){
  8179  0DD7  300A               	movlw	10
  8180  0DD8  0250               	subwf	_hundredMiliSeconds,w
  8181  0DD9  1C03               	skipc
  8182  0DDA  2DDC               	goto	u246_21
  8183  0DDB  2DDD               	goto	u246_20
  8184  0DDC                     u246_21:	
  8185  0DDC  2E26               	goto	i1l243
  8186  0DDD                     u246_20:	
  8187  0DDD                     i1l3419:	
  8188                           
  8189                           ;main.c: 141:         hundredMiliSeconds = 0;
  8190  0DDD  01D0               	clrf	_hundredMiliSeconds
  8191  0DDE                     i1l3421:	
  8192                           
  8193                           ;main.c: 142:         seconds++;
  8194  0DDE  3001               	movlw	1
  8195  0DDF  00F5               	movwf	??_time
  8196  0DE0  0875               	movf	??_time,w
  8197  0DE1  07D1               	addwf	_seconds,f
  8198  0DE2                     i1l3423:	
  8199                           
  8200                           ;main.c: 143:         if(seconds >= 60){
  8201  0DE2  303C               	movlw	60
  8202  0DE3  0251               	subwf	_seconds,w
  8203  0DE4  1C03               	skipc
  8204  0DE5  2DE7               	goto	u247_21
  8205  0DE6  2DE8               	goto	u247_20
  8206  0DE7                     u247_21:	
  8207  0DE7  2E26               	goto	i1l243
  8208  0DE8                     u247_20:	
  8209  0DE8                     i1l3425:	
  8210                           
  8211                           ;main.c: 144:             seconds = 0;
  8212  0DE8  01D1               	clrf	_seconds
  8213  0DE9                     i1l3427:	
  8214                           
  8215                           ;main.c: 145:             minutes++;
  8216  0DE9  3001               	movlw	1
  8217  0DEA  00F5               	movwf	??_time
  8218  0DEB  0875               	movf	??_time,w
  8219  0DEC  07C7               	addwf	_minutes,f
  8220  0DED                     i1l3429:	
  8221                           
  8222                           ;main.c: 146:             if(minutes >= 60){
  8223  0DED  303C               	movlw	60
  8224  0DEE  0247               	subwf	_minutes,w
  8225  0DEF  1C03               	skipc
  8226  0DF0  2DF2               	goto	u248_21
  8227  0DF1  2DF3               	goto	u248_20
  8228  0DF2                     u248_21:	
  8229  0DF2  2E26               	goto	i1l243
  8230  0DF3                     u248_20:	
  8231  0DF3                     i1l3431:	
  8232                           
  8233                           ;main.c: 147:                 minutes = 0;
  8234  0DF3  01C7               	clrf	_minutes
  8235  0DF4                     i1l3433:	
  8236                           
  8237                           ;main.c: 148:                 hours++;
  8238  0DF4  3001               	movlw	1
  8239  0DF5  00F5               	movwf	??_time
  8240  0DF6  0875               	movf	??_time,w
  8241  0DF7  07C8               	addwf	_hours,f
  8242  0DF8                     i1l3435:	
  8243                           
  8244                           ;main.c: 149:                 setData(0);
  8245  0DF8  3000               	movlw	0
  8246  0DF9  120A  158A  257B  120A  158A  	fcall	i1_setData
  8247  0DFE                     i1l3437:	
  8248                           
  8249                           ;main.c: 150:                 if(hours >= 24){
  8250  0DFE  3018               	movlw	24
  8251  0DFF  1283               	bcf	3,5	;RP0=0, select bank0
  8252  0E00  1303               	bcf	3,6	;RP1=0, select bank0
  8253  0E01  0248               	subwf	_hours,w
  8254  0E02  1C03               	skipc
  8255  0E03  2E05               	goto	u249_21
  8256  0E04  2E06               	goto	u249_20
  8257  0E05                     u249_21:	
  8258  0E05  2E26               	goto	i1l243
  8259  0E06                     u249_20:	
  8260  0E06                     i1l3439:	
  8261                           
  8262                           ;main.c: 151:                     hours = 0;
  8263  0E06  01C8               	clrf	_hours
  8264  0E07                     i1l3441:	
  8265                           
  8266                           ;main.c: 152:                     days++;
  8267  0E07  3001               	movlw	1
  8268  0E08  00F5               	movwf	??_time
  8269  0E09  0875               	movf	??_time,w
  8270  0E0A  07C9               	addwf	_days,f
  8271  0E0B                     i1l3443:	
  8272                           
  8273                           ;main.c: 153:                     if(days >= 30){
  8274  0E0B  301E               	movlw	30
  8275  0E0C  0249               	subwf	_days,w
  8276  0E0D  1C03               	skipc
  8277  0E0E  2E10               	goto	u250_21
  8278  0E0F  2E11               	goto	u250_20
  8279  0E10                     u250_21:	
  8280  0E10  2E16               	goto	i1l3449
  8281  0E11                     u250_20:	
  8282  0E11                     i1l3445:	
  8283                           
  8284                           ;main.c: 154:                         days = 0;
  8285  0E11  01C9               	clrf	_days
  8286  0E12                     i1l3447:	
  8287                           
  8288                           ;main.c: 155:                         months++;
  8289  0E12  3001               	movlw	1
  8290  0E13  00F5               	movwf	??_time
  8291  0E14  0875               	movf	??_time,w
  8292  0E15  07CA               	addwf	_months,f
  8293  0E16                     i1l3449:	
  8294  0E16  300D               	movlw	13
  8295  0E17  0649               	xorwf	_days,w
  8296  0E18  1D03               	btfss	3,2
  8297  0E19  2E1B               	goto	u251_21
  8298  0E1A  2E1C               	goto	u251_20
  8299  0E1B                     u251_21:	
  8300  0E1B  2E24               	goto	i1l241
  8301  0E1C                     u251_20:	
  8302  0E1C                     i1l3451:	
  8303  0E1C  3006               	movlw	6
  8304  0E1D  064A               	xorwf	_months,w
  8305  0E1E  1D03               	btfss	3,2
  8306  0E1F  2E21               	goto	u252_21
  8307  0E20  2E22               	goto	u252_20
  8308  0E21                     u252_21:	
  8309  0E21  2E24               	goto	i1l241
  8310  0E22                     u252_20:	
  8311  0E22                     i1l3453:	
  8312  0E22  01CF               	clrf	_functionalStat
  8313                           
  8314                           ;main.c: 159:                     }else{
  8315  0E23  2E26               	goto	i1l243
  8316  0E24                     i1l241:	
  8317  0E24  01CF               	clrf	_functionalStat
  8318  0E25  0ACF               	incf	_functionalStat,f
  8319  0E26                     i1l243:	
  8320  0E26  0008               	return
  8321  0E27                     __end_of_time:	
  8322                           
  8323                           	psect	text43
  8324  0D7B                     __ptext43:	
  8325 ;; *************** function i1_setData *****************
  8326 ;; Defined at:
  8327 ;;		line 44 in file "eeprom.c"
  8328 ;; Parameters:    Size  Location     Type
  8329 ;;  full            1    wreg     unsigned char 
  8330 ;; Auto vars:     Size  Location     Type
  8331 ;;  full            1  (no storage) unsigned char 
  8332 ;;  setData         1    4[COMMON] unsigned char 
  8333 ;;  setData         1    3[COMMON] unsigned char 
  8334 ;; Return value:  Size  Location     Type
  8335 ;;                  1    wreg      void 
  8336 ;; Registers used:
  8337 ;;		wreg, status,2, status,0, pclath, cstack
  8338 ;; Tracked objects:
  8339 ;;		On entry : 0/0
  8340 ;;		On exit  : 0/0
  8341 ;;		Unchanged: 0/0
  8342 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8343 ;;      Params:         0       0       0       0       0
  8344 ;;      Locals:         2       0       0       0       0
  8345 ;;      Temps:          1       0       0       0       0
  8346 ;;      Totals:         3       0       0       0       0
  8347 ;;Total ram usage:        3 bytes
  8348 ;; Hardware stack levels used:    1
  8349 ;; Hardware stack levels required when called:    1
  8350 ;; This function calls:
  8351 ;;		i1_writeEEPROM
  8352 ;; This function is called by:
  8353 ;;		_time
  8354 ;; This function uses a non-reentrant model
  8355 ;;
  8356                           
  8357                           
  8358                           ;psect for function i1_setData
  8359  0D7B                     i1_setData:	
  8360  0D7B                     i1l3069:	
  8361                           ;incstack = 0
  8362 ;; hardware stack exceeded
  8363                           ; Regs used in i1_setData: [wreg+status,2+status,0+pclath+cstack]
  8364                           
  8365                           
  8366                           ;eeprom.c: 45:     unsigned char data0 = frequency & 0x00FF;
  8367  0D7B  1283               	bcf	3,5	;RP0=0, select bank0
  8368  0D7C  1303               	bcf	3,6	;RP1=0, select bank0
  8369  0D7D  0844               	movf	_frequency,w
  8370  0D7E  00F2               	movwf	??i1_setData
  8371  0D7F  0872               	movf	??i1_setData,w
  8372  0D80  00F3               	movwf	i1setData@data0
  8373  0D81                     i1l3071:	
  8374                           
  8375                           ;eeprom.c: 46:     unsigned char data1 = frequency >> 8;
  8376  0D81  0845               	movf	_frequency+1,w
  8377  0D82  00F2               	movwf	??i1_setData
  8378  0D83  0872               	movf	??i1_setData,w
  8379  0D84  00F4               	movwf	i1setData@data1
  8380  0D85                     i1l3073:	
  8381                           
  8382                           ;eeprom.c: 47:     writeEEPROM(data0 ,0);
  8383  0D85  01F0               	clrf	i1writeEEPROM@address
  8384  0D86  0873               	movf	i1setData@data0,w
  8385  0D87  120A  158A  212A  120A  158A  	fcall	i1_writeEEPROM
  8386  0D8C                     i1l3075:	
  8387                           
  8388                           ;eeprom.c: 48:     writeEEPROM(data1 ,1);
  8389  0D8C  01F0               	clrf	i1writeEEPROM@address
  8390  0D8D  0AF0               	incf	i1writeEEPROM@address,f
  8391  0D8E  0874               	movf	i1setData@data1,w
  8392  0D8F  120A  158A  212A  120A  158A  	fcall	i1_writeEEPROM
  8393  0D94                     i1l3077:	
  8394                           
  8395                           ;eeprom.c: 49:     writeEEPROM(months ,2);
  8396  0D94  3002               	movlw	2
  8397  0D95  00F2               	movwf	??i1_setData
  8398  0D96  0872               	movf	??i1_setData,w
  8399  0D97  00F0               	movwf	i1writeEEPROM@address
  8400  0D98  1283               	bcf	3,5	;RP0=0, select bank0
  8401  0D99  1303               	bcf	3,6	;RP1=0, select bank0
  8402  0D9A  084A               	movf	_months,w
  8403  0D9B  120A  158A  212A  120A  158A  	fcall	i1_writeEEPROM
  8404  0DA0                     i1l3079:	
  8405                           
  8406                           ;eeprom.c: 50:     writeEEPROM(days ,3);
  8407  0DA0  3003               	movlw	3
  8408  0DA1  00F2               	movwf	??i1_setData
  8409  0DA2  0872               	movf	??i1_setData,w
  8410  0DA3  00F0               	movwf	i1writeEEPROM@address
  8411  0DA4  1283               	bcf	3,5	;RP0=0, select bank0
  8412  0DA5  1303               	bcf	3,6	;RP1=0, select bank0
  8413  0DA6  0849               	movf	_days,w
  8414  0DA7  120A  158A  212A  120A  158A  	fcall	i1_writeEEPROM
  8415  0DAC                     i1l3081:	
  8416                           
  8417                           ;eeprom.c: 51:     writeEEPROM(hours ,4);
  8418  0DAC  3004               	movlw	4
  8419  0DAD  00F2               	movwf	??i1_setData
  8420  0DAE  0872               	movf	??i1_setData,w
  8421  0DAF  00F0               	movwf	i1writeEEPROM@address
  8422  0DB0  1283               	bcf	3,5	;RP0=0, select bank0
  8423  0DB1  1303               	bcf	3,6	;RP1=0, select bank0
  8424  0DB2  0848               	movf	_hours,w
  8425  0DB3  120A  158A  212A  120A  158A  	fcall	i1_writeEEPROM
  8426  0DB8                     i1l3083:	
  8427                           
  8428                           ;eeprom.c: 52:     writeEEPROM(minutes ,5);
  8429  0DB8  3005               	movlw	5
  8430  0DB9  00F2               	movwf	??i1_setData
  8431  0DBA  0872               	movf	??i1_setData,w
  8432  0DBB  00F0               	movwf	i1writeEEPROM@address
  8433  0DBC  1283               	bcf	3,5	;RP0=0, select bank0
  8434  0DBD  1303               	bcf	3,6	;RP1=0, select bank0
  8435  0DBE  0847               	movf	_minutes,w
  8436  0DBF  120A  158A  212A  120A  158A  	fcall	i1_writeEEPROM
  8437  0DC4                     i1l3085:	
  8438                           
  8439                           ;eeprom.c: 53:     writeEEPROM(functionalStat ,6);
  8440  0DC4  3006               	movlw	6
  8441  0DC5  00F2               	movwf	??i1_setData
  8442  0DC6  0872               	movf	??i1_setData,w
  8443  0DC7  00F0               	movwf	i1writeEEPROM@address
  8444  0DC8  1283               	bcf	3,5	;RP0=0, select bank0
  8445  0DC9  1303               	bcf	3,6	;RP1=0, select bank0
  8446  0DCA  084F               	movf	_functionalStat,w
  8447  0DCB  120A  158A  212A  120A  158A  	fcall	i1_writeEEPROM
  8448  0DD0                     i1l69:	
  8449  0DD0  0008               	return
  8450  0DD1                     __end_ofi1_setData:	
  8451                           
  8452                           	psect	text44
  8453  092A                     __ptext44:	
  8454 ;; *************** function i1_writeEEPROM *****************
  8455 ;; Defined at:
  8456 ;;		line 14 in file "eeprom.c"
  8457 ;; Parameters:    Size  Location     Type
  8458 ;;  data            1    wreg     unsigned char 
  8459 ;;  address         1    0[COMMON] unsigned char 
  8460 ;; Auto vars:     Size  Location     Type
  8461 ;;  data            1    1[COMMON] unsigned char 
  8462 ;; Return value:  Size  Location     Type
  8463 ;;                  1    wreg      void 
  8464 ;; Registers used:
  8465 ;;		wreg
  8466 ;; Tracked objects:
  8467 ;;		On entry : 0/0
  8468 ;;		On exit  : 0/0
  8469 ;;		Unchanged: 0/0
  8470 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8471 ;;      Params:         1       0       0       0       0
  8472 ;;      Locals:         1       0       0       0       0
  8473 ;;      Temps:          0       0       0       0       0
  8474 ;;      Totals:         2       0       0       0       0
  8475 ;;Total ram usage:        2 bytes
  8476 ;; Hardware stack levels used:    1
  8477 ;; This function calls:
  8478 ;;		Nothing
  8479 ;; This function is called by:
  8480 ;;		i1_setData
  8481 ;; This function uses a non-reentrant model
  8482 ;;
  8483                           
  8484                           
  8485                           ;psect for function i1_writeEEPROM
  8486  092A                     i1_writeEEPROM:	
  8487                           
  8488                           ;incstack = 0
  8489 ;; hardware stack exceeded
  8490                           ; Regs used in i1_writeEEPROM: [wreg]
  8491                           ;i1writeEEPROM@data stored from wreg
  8492  092A  00F1               	movwf	i1writeEEPROM@data
  8493  092B                     i1l2827:	
  8494                           
  8495                           ;eeprom.c: 15:     EEADR = address;
  8496  092B  0870               	movf	i1writeEEPROM@address,w
  8497  092C  1283               	bcf	3,5	;RP0=0, select bank2
  8498  092D  1703               	bsf	3,6	;RP1=1, select bank2
  8499  092E  008D               	movwf	13	;volatile
  8500                           
  8501                           ;eeprom.c: 16:     EEDATA = data;
  8502  092F  0871               	movf	i1writeEEPROM@data,w
  8503  0930  008C               	movwf	12	;volatile
  8504  0931                     i1l2829:	
  8505                           
  8506                           ;eeprom.c: 18:     EECON1bits.EEPGD = 0;
  8507  0931  1683               	bsf	3,5	;RP0=1, select bank3
  8508  0932  1703               	bsf	3,6	;RP1=1, select bank3
  8509  0933  138C               	bcf	12,7	;volsfr
  8510  0934                     i1l2831:	
  8511                           
  8512                           ;eeprom.c: 19:     EECON1bits.WREN = 1;
  8513  0934  150C               	bsf	12,2	;volsfr
  8514  0935                     i1l2833:	
  8515                           
  8516                           ;eeprom.c: 21:     INTCONbits.GIE = 0;
  8517  0935  138B               	bcf	11,7	;volatile
  8518                           
  8519                           ;eeprom.c: 22:     EECON2 = 0x55;
  8520  0936  3055               	movlw	85
  8521  0937  008D               	movwf	13	;volsfr
  8522                           
  8523                           ;eeprom.c: 23:     EECON2 = 0xAA;
  8524  0938  30AA               	movlw	170
  8525  0939  008D               	movwf	13	;volsfr
  8526  093A                     i1l2835:	
  8527                           
  8528                           ;eeprom.c: 24:     EECON1bits.WR = 1;
  8529  093A  148C               	bsf	12,1	;volsfr
  8530  093B                     i1l2837:	
  8531                           
  8532                           ;eeprom.c: 25:     INTCONbits.GIE = 1;
  8533  093B  178B               	bsf	11,7	;volatile
  8534  093C                     i1l60:	
  8535                           ;eeprom.c: 27:     while(PIR2bits.EEIF == 0) continue;
  8536                           
  8537  093C  1283               	bcf	3,5	;RP0=0, select bank0
  8538  093D  1303               	bcf	3,6	;RP1=0, select bank0
  8539  093E  1E0D               	btfss	13,4	;volatile
  8540  093F  2941               	goto	u183_21
  8541  0940  2942               	goto	u183_20
  8542  0941                     u183_21:	
  8543  0941  293C               	goto	i1l60
  8544  0942                     u183_20:	
  8545  0942                     i1l63:	
  8546  0942  0008               	return
  8547  0943                     __end_ofi1_writeEEPROM:	
  8548  007E                     btemp	set	126	;btemp
  8549  007E                     wtemp0	set	126


Data Sizes:
    Strings     154
    Constant    14
    Data        9
    BSS         41
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     36      51
    BANK1            80     34      69
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 18
		 -> STR_12(CODE[18]), STR_11(CODE[17]), STR_10(CODE[17]), STR_9(CODE[18]), 
		 -> STR_7(CODE[17]), STR_6(CODE[17]), STR_5(CODE[17]), STR_4(CODE[17]), 
		 -> STR_3(CODE[17]), STR_2(CODE[17]), STR_1(CODE[17]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 17
		 -> lineTwo(BANK1[17]), lineOne(BANK1[17]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK1[2]), 

    putrsXLCD@buffer	PTR const unsigned char  size(1) Largest target is 17
		 -> STR_8(CODE[17]), 

    putsXLCD@buffer	PTR unsigned char  size(1) Largest target is 17
		 -> lineTwo(BANK1[17]), lineOne(BANK1[17]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _inter in COMMON

    _updateLCD->i1___lwmod
    i1_sprintf->i1___lwmod
    i1___lwmod->i1___lwdiv
    i1_putsXLCD->i1_WriteDataXLCD
    i1_WriteDataXLCD->i1_DelayFor18TCY
    i1_SetDDRamAddr->i1_DelayFor18TCY
    _time->i1_setData
    i1_setData->i1_writeEEPROM

Critical Paths under _main in BANK0

    _main->_beep
    _main->_getData
    _start->_beep
    _setFrequency->_beep
    _writeFrequency->_beep
    _beep->___wmul
    _setData->_writeEEPROM
    _principalScreen->___lwmod
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _putsXLCD->_WriteDataXLCD
    _putrsXLCD->_WriteDataXLCD
    _WriteDataXLCD->_DelayFor18TCY
    _getData->_readEEPROM
    _initLCD->_OpenXLCD
    _SendCMDLCD->_WriteCmdXLCD
    _OpenXLCD->_SetDDRamAddr
    _OpenXLCD->_WriteCmdXLCD
    _WriteCmdXLCD->_DelayFor18TCY
    _SetDDRamAddr->_DelayFor18TCY

Critical Paths under _inter in BANK0

    _inter->_updateLCD
    _updateLCD->i1_sprintf

Critical Paths under _main in BANK1

    _main->_principalScreen
    _start->_sprintf
    _setFrequency->_lockingScreen
    _writeFrequency->_beep
    _lockingScreen->_sprintf
    _principalScreen->_sprintf
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _config->_initLCD

Critical Paths under _inter in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _inter in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _inter in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0   36827
                                             31 BANK1      3     3      0
                               _beep
                             _config
                            _getData
                      _lockingScreen
                    _principalScreen
                       _setFrequency
                              _start
                     _writeFrequency
 ---------------------------------------------------------------------------------
 (1) _start                                                4     4      0    6844
                                             24 BANK1      4     4      0
                       _SetDDRamAddr
                               _beep
                           _putsXLCD
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _setFrequency                                         3     3      0   14330
                                             25 BANK1      3     3      0
                       _SetDDRamAddr
                               _beep
                      _lockingScreen
                           _putsXLCD
                            _setData
                            _sprintf
                     _writeFrequency
 ---------------------------------------------------------------------------------
 (1) _writeFrequency                                       9     7      2    1979
                                              2 BANK1      9     7      2
                               _beep
                            _codFreq
 ---------------------------------------------------------------------------------
 (2) _codFreq                                              4     2      2     155
                                             29 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (2) _beep                                                 3     1      2    1545
                                             35 BANK0      1     1      0
                                              0 BANK1      2     0      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) _setData                                              4     4      0     622
                                             31 BANK0      3     3      0
                        _writeEEPROM
 ---------------------------------------------------------------------------------
 (3) _writeEEPROM                                          2     1      1     576
                                             29 BANK0      2     1      1
 ---------------------------------------------------------------------------------
 (2) _lockingScreen                                        1     1      0    5092
                                             24 BANK1      1     1      0
                       _SetDDRamAddr
                           _putsXLCD
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _principalScreen                                      7     7      0    6695
                                             24 BANK1      7     7      0
                       _SetDDRamAddr
                            ___lwdiv
                            ___lwmod
                          _putrsXLCD
                           _putsXLCD
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             25    20      5    4563
                                              7 BANK1     17    12      5
                            ___lwdiv
                            ___lwmod
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (3) _isdigit                                              2     2      0      68
                                             29 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     636
                                             29 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     702
                                             34 BANK0      2     2      0
                                              3 BANK1      4     0      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     711
                                             29 BANK0      5     1      4
                                              0 BANK1      3     3      0
 ---------------------------------------------------------------------------------
 (2) _putsXLCD                                             2     2      0     485
                                             33 BANK0      2     2      0
                           _BusyXLCD
                      _WriteDataXLCD
 ---------------------------------------------------------------------------------
 (2) _putrsXLCD                                            2     2      0     122
                                             33 BANK0      2     2      0
                           _BusyXLCD
                      _WriteDataXLCD
 ---------------------------------------------------------------------------------
 (3) _WriteDataXLCD                                        3     3      0      44
                                             30 BANK0      3     3      0
                      _DelayFor18TCY
 ---------------------------------------------------------------------------------
 (1) _getData                                              6     6      0      68
                                             30 BANK0      6     6      0
                         _readEEPROM
 ---------------------------------------------------------------------------------
 (2) _readEEPROM                                           1     1      0      22
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _config                                               0     0      0     274
                            _initLCD
                       _setTransStat
 ---------------------------------------------------------------------------------
 (2) _setTransStat                                         4     2      2      98
                                             29 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (2) _initLCD                                              2     2      0     176
                                              0 BANK1      2     2      0
                           _OpenXLCD
                         _SendCMDLCD
 ---------------------------------------------------------------------------------
 (3) _SendCMDLCD                                           1     1      0      66
                                             33 BANK0      1     1      0
                           _BusyXLCD
                       _WriteCmdXLCD
 ---------------------------------------------------------------------------------
 (3) _OpenXLCD                                             3     3      0     110
                                             33 BANK0      3     3      0
                           _BusyXLCD
                       _DelayPORXLCD
                       _SetDDRamAddr
                       _WriteCmdXLCD
 ---------------------------------------------------------------------------------
 (4) _WriteCmdXLCD                                         3     3      0      44
                                             30 BANK0      3     3      0
                      _DelayFor18TCY
 ---------------------------------------------------------------------------------
 (2) _SetDDRamAddr                                         3     3      0      44
                                             30 BANK0      3     3      0
                      _DelayFor18TCY
 ---------------------------------------------------------------------------------
 (4) _DelayFor18TCY                                        1     1      0       0
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _DelayPORXLCD                                         2     2      0       0
                                             29 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (3) _BusyXLCD                                             2     2      0       0
                                             29 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _inter                                                5     5      0    2497
                                             24 BANK0      5     5      0
                               _time
                          _updateLCD
 ---------------------------------------------------------------------------------
 (7) _updateLCD                                            7     7      0    2225
                                             17 BANK0      7     7      0
                     i1_SetDDRamAddr
                          i1___lwdiv
                          i1___lwmod
                         i1_putsXLCD
                          i1_sprintf
 ---------------------------------------------------------------------------------
 (8) i1_sprintf                                           25    20      5    1517
                                              0 BANK0     17    12      5
                          i1___lwdiv
                          i1___lwmod
                           i1___wmul
                          i1_isdigit
 ---------------------------------------------------------------------------------
 (9) i1_isdigit                                            2     2      0      68
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (9) i1___wmul                                             6     2      4     144
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (9) i1___lwmod                                            6     2      4     263
                                              8 COMMON     6     2      4
                          i1___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (9) i1___lwdiv                                            8     4      4     266
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (8) i1_putsXLCD                                           2     2      0      89
                                              4 COMMON     2     2      0
                         i1_BusyXLCD
                    i1_WriteDataXLCD
 ---------------------------------------------------------------------------------
 (9) i1_WriteDataXLCD                                      3     3      0      44
                                              1 COMMON     3     3      0
                    i1_DelayFor18TCY
 ---------------------------------------------------------------------------------
 (9) i1_BusyXLCD                                           2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (8) i1_SetDDRamAddr                                       3     3      0      44
                                              1 COMMON     3     3      0
                    i1_DelayFor18TCY
 ---------------------------------------------------------------------------------
 (10) i1_DelayFor18TCY                                     1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (7) _time                                                 1     1      0     272
                                              5 COMMON     1     1      0
                          i1_setData
 ---------------------------------------------------------------------------------
 (8) i1_setData                                            4     4      0     272
                                              2 COMMON     3     3      0
                      i1_writeEEPROM
 ---------------------------------------------------------------------------------
 (9) i1_writeEEPROM                                        2     1      1     226
                                              0 COMMON     2     1      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _beep
     ___wmul
   _config
     _initLCD
       _OpenXLCD
         _BusyXLCD
         _DelayPORXLCD
         _SetDDRamAddr
           _DelayFor18TCY
         _WriteCmdXLCD
           _DelayFor18TCY
       _SendCMDLCD
         _BusyXLCD
         _WriteCmdXLCD
           _DelayFor18TCY
     _setTransStat
   _getData
     _readEEPROM
   _lockingScreen
     _SetDDRamAddr
       _DelayFor18TCY
     _putsXLCD
       _BusyXLCD
       _WriteDataXLCD
         _DelayFor18TCY
     _sprintf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
       ___wmul
       _isdigit
   _principalScreen
     _SetDDRamAddr
       _DelayFor18TCY
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)
     _putrsXLCD
       _BusyXLCD
       _WriteDataXLCD
         _DelayFor18TCY
     _putsXLCD
       _BusyXLCD
       _WriteDataXLCD
         _DelayFor18TCY
     _sprintf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
       ___wmul
       _isdigit
   _setFrequency
     _SetDDRamAddr
       _DelayFor18TCY
     _beep
       ___wmul
     _lockingScreen
       _SetDDRamAddr
         _DelayFor18TCY
       _putsXLCD
         _BusyXLCD
         _WriteDataXLCD
           _DelayFor18TCY
       _sprintf
         ___lwdiv
         ___lwmod
           ___lwdiv (ARG)
         ___wmul
         _isdigit
     _putsXLCD
       _BusyXLCD
       _WriteDataXLCD
         _DelayFor18TCY
     _setData
       _writeEEPROM
     _sprintf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
       ___wmul
       _isdigit
     _writeFrequency
       _beep
         ___wmul
       _codFreq
   _start
     _SetDDRamAddr
       _DelayFor18TCY
     _beep
       ___wmul
     _putsXLCD
       _BusyXLCD
       _WriteDataXLCD
         _DelayFor18TCY
     _sprintf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
       ___wmul
       _isdigit
   _writeFrequency
     _beep
       ___wmul
     _codFreq

 _inter (ROOT)
   _time
     i1_setData
       i1_writeEEPROM
   _updateLCD
     i1_SetDDRamAddr
       i1_DelayFor18TCY
     i1___lwdiv
     i1___lwmod
       i1___lwdiv (ARG)
     i1_putsXLCD
       i1_BusyXLCD
       i1_WriteDataXLCD
         i1_DelayFor18TCY
     i1_sprintf
       i1___lwdiv
       i1___lwmod
         i1___lwdiv (ARG)
       i1___wmul
       i1_isdigit

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50     22      45       7       86.3%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     24      33       5       63.8%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      86      12        0.0%
ABS                  0      0      86       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Wed Sep 18 13:05:52 2019

              __CFG_CP$ON 0000          ??i1_SetDDRamAddr 0071                         _i 00A0  
                       pc 0002                _UN_BLOCKED 0812                        l60 0974  
                      l63 097A                        l57 08DA                        l66 0F3B  
                      l69 0E7E               __CFG_CPD$ON 0000                        fsr 0004  
     ___wmul@multiplicand 003F          i1___wmul@product 0074                       l204 0773  
                     l216 0B16                       l225 0584                       l209 07C2  
                     l410 07FD                       l251 0388                       l260 03D4  
                     l261 03E1                       l422 08BE                       l350 17FF  
                     l246 0D0D                       l254 038E                       l263 0456  
                     l255 03F2                       l280 095B                       l248 0D2A  
                     l264 0405                       l256 03A1                       l347 17D8  
                     l419 0A6A                       l283 0FFF                       l275 0498  
                     l268 0438                       l269 0445                       l278 0958  
                     l286 0A9B                       l383 0722                       l392 0D7A  
                     l544 08CB                       l552 0653                       l553 0656  
                     l386 0CDB                       l483 0A10                       l740 0122  
                     l389 0C8C                       l493 0929                       l549 05E6  
                     l751 01DA                       l755 09D0                       l757 09E8  
                     fsr0 0004                       indf 0000     __size_of_WriteCmdXLCD 004F  
         __end_of_BLOCKED 0814              __CFG_FOSC$XT 0000              __CFG_LVP$OFF 0000  
                    l1027 0F9A                      l1037 0BA2                      l1217 0913  
                    l4001 04BF                      l3051 0943                      l4011 04E1  
                    l4003 04C5                      l2501 0C41                      l3053 094B  
                    l3221 0F04                      l3061 0A40                      l4021 04FE  
                    l4005 04CB                      l4101 0793                      l2511 0C5C  
                    l2503 0C52                      l3055 094D                      l3223 0F0F  
                    l3215 0EDD                      l3063 0A4A                      l4031 0520  
                    l4023 0504                      l4007 04D5                      l4111 07B1  
                    l4103 0799                      l2521 0C83                      l2513 0C61  
                    l2505 0C53                      l3225 0F1A                      l3217 0EF3  
                    l3065 0A58                      l4041 053D                      l4033 0526  
                    l4025 050A                      l4017 04E2                      l4009 04DB  
                    l4113 07BB                      l4105 07A7                      l2515 0C76  
                    l2507 0C54                      l3227 0F25                      l3219 0EF5  
                    l2531 0CA1                      l3067 0A5E                      l3059 0A3F  
                    l4051 055F                      l4043 0543                      l4027 0510  
                    l4019 04F8                      l4107 07AA                      l2525 08B2  
                    l2517 0C7B                      l2509 0C59                      l3229 0F30  
                    l2541 0CB0                      l2533 0CA2                      l4061 0583  
                    l4053 0565                      l4045 0549                      l4029 051A  
                    l4117 07C8                      l2519 0C7E                      l2543 0CC5  
                    l2535 0CA3                      l4071 0FDB                      l4063 0F9B  
                    l2631 0969                      l4055 056B                      l4047 054F  
                    l4039 0527                      l2473 17D2                      l2481 0D42  
                    l2801 06EC                      l2545 0CCA                      l2537 0CA8  
                    l2529 0C90                      l2561 0912                      l2553 0903  
                    l4073 0FF3                      l4065 0FA1                      l2633 096C  
                    l4057 0574                      l4049 0555                      l4081 0732  
                    l2491 0D69                      l2483 0D47                      l2475 0D2E  
                    l2811 0712                      l2803 06F2                      l2547 0CCD  
                    l2539 0CAB                      l2555 0904                      l4075 0FF9  
                    l4067 0FA7                      l2635 096D                      l4059 0575  
                    l4091 075D                      l4083 073C                      l2493 0D6C  
                    l2485 0D4A                      l2477 0D40                      l2813 071C  
                    l2805 06FC                      l2821 0921                      l2549 0CD2  
                    l3701 0B9C                      l2557 090A                      l4069 0FC4  
                    l2637 0972                      l2629 095F                      l4093 0768  
                    l4085 0747                      l4077 0723                      l2495 0D71  
                    l2487 0D4F                      l2479 0D41                      l2807 0702  
                    l2751 07EF                      l2559 0910                      l4159 00C4  
                    l2639 0973                      l3711 0D10                      l4095 076E  
                    l4087 074C                      l4079 072D                      l2489 0D64  
                    l2809 070C                      l2761 0666                      l2817 0917  
                    l2753 07F5                      l2745 07D9                      l3801 01D6  
                    l3721 0043                      l3713 0D17                      l3705 0CDC  
                    l4097 077D                      l4089 0757                      l2499 17F4  
                    l2771 0671                      l2763 0667                      l2755 065A  
                    l2819 0917                      l2747 07DA                      l3651 09DE  
                    l3643 09C2                      l3731 0066                      l3723 004A  
                    l3707 0CFF                      l4099 078E                      l2781 0696  
                    l2773 0677                      l2765 066A                      l2757 0664  
                    l3901 0AE5                      l2941 08CF                      l2749 07E4  
                    l3661 0F48                      l3653 09E4                      l3645 09C6  
                    l3733 0089                      l3741 00B0                      l3725 004F  
                    l3717 0038                      l3821 0A95                      l3813 0A6B  
                    l2791 06C2                      l2783 06A0                      l2775 0682  
                    l2767 066B                      l2759 0665                      l3911 0AFD  
                    l3903 0AE7                      l2943 08D3                      l3671 0F75  
                    l3663 0F4D                      l3647 09CA                      l3751 00E3  
                    l3743 00CF                      l3735 009C                      l3727 0052  
                    l3719 003D                      l3815 0A83                      l2951 0E2D  
                    l3831 05A9                      l2793 06CC                      l2785 06AA  
                    l2777 0688                      l2769 066C                      l3921 0B0D  
                    l3913 0B01                      l3905 0AF1                      l2945 08D6  
                    l3673 0F7B                      l3665 0F54                      l3657 0F3C  
                    l3649 09D7                      l3753 00E8                      l3745 00D7  
                    l3737 00A0                      l3729 0062                      l3817 0A89  
                    l2961 0E5A                      l2953 0E31                      l3809 08BF  
                    l3833 05AA                      l3825 0585                      l2795 06D2  
                    l2787 06B2                      l2779 0690                      l3923 0B0E  
                    l3915 0B04                      l3907 0AF5                      l3675 0F7E  
                    l3667 0F5A                      l3659 0F40                      l3691 0B75  
                    l3683 0B5B                      l3771 012D                      l3763 0106  
                    l3747 00DB                      l3819 0A8F                      l2963 0E66  
                    l2955 0E38                      l3851 05E2                      l3843 05BD  
                    l3835 05AB                      l3827 0589                      l3931 0371  
                    l2797 06DC                      l2789 06BC                      l3917 0B05  
                    l3909 0AF9                      l3677 0F86                      l3669 0F60  
                    l3693 0B7B                      l3685 0B63                      l3781 014E  
                    l3773 0139                      l3765 0110                      l3749 00DF  
                    l2965 0E72                      l2957 0E42                      l2949 0E27  
                    l3853 05E9                      l3845 05CF                      l3861 05FB  
                    l3837 05B3                      l3829 05A6                      l3941 03AE  
                    l3933 0377                      l2799 06E2                      l3919 0B0A  
                    l3679 0F8E                      l3695 0B87                      l3687 0B68  
                    l3791 0170                      l3783 015A                      l3775 013D  
                    l3767 0116                      l3759 00EA                      l2959 0E4E  
                    l3871 0638                      l3863 0603                      l3855 05F1  
                    l3847 05D7                      l3839 05B6                      l3951 03EC  
                    l3943 03B9                      l3935 0392                      l3927 0361  
                    l3697 0B8D                      l3689 0B6F                      l3793 01B0  
                    l3785 0160                      l3777 0143                      l3769 011C  
                    l3873 063B                      l3865 0606                      l3857 05F4  
                    l3849 05DA                      l3961 041D                      l3953 03F6  
                    l3945 03C5                      l3937 039B                      l3929 0365  
                    l3891 0A05                      l3883 09E9                      l3699 0B94  
                    l3795 01B7                      l3787 0167                      l3779 014A  
                    l3867 0611                      l3971 045A                      l3963 0429  
                    l3955 03FF                      l3947 03CE                      l3939 03AA  
                    l3885 09EF                      l3797 01BB                      l3789 016B  
                    l3877 0642                      l3869 062A                      l3981 0482  
                    l3973 0468                      l3965 0432                      l3957 040E  
                    l3949 03DD                      l3887 09F9                      l3895 0AD6  
                    l3799 01C4                      l3879 064C                      l3983 0487  
                    l3975 046E                      l3967 0441                      l3959 0412  
                    l3889 09FF                      l3897 0ADE                      l3977 0474  
                    l3969 0450                      l3899 0ADF                      l3979 047F  
                    l3995 049D                      l3987 0499                      l3997 04B3  
                    l3989 0499                      l3999 04B9                      STR_1 0837  
                    STR_2 089D                      STR_3 0837                      STR_4 0859  
                    STR_5 0837                      STR_6 087B                      STR_7 0848  
                    STR_8 086A                      STR_9 0814                      u2100 0A6A  
                    u2101 0A69                      u3000 038E                      u3001 038D  
                    u3010 0392                      u3011 0391                      u3100 0432  
                    u3020 039B                      u3101 0431                      u3021 039A  
                    u3110 0441                      u3030 03AA                      u1335 0D59  
                    u3111 0440                      u3031 03A9                      u2080 094B  
                    u1360 090A                      u3120 0456                      u3040 03CE  
                    u3200 0799                      u1345 0C6B                      u2081 094A  
                    u1361 0909                      u3121 0455                      u3041 03CD  
                    u3201 0798                      u2090 0A4A                      u1370 0910  
                    u3130 045A                      u3050 03DD                      u3210 07B0  
                    u1355 0CBA                      u2091 0A49                      u1371 090F  
                    u3131 0459                      u3051 03DC                      u3211 07AF  
                    u3140 046E                      u3060 03F2                      u3220 07C8  
                    u3141 046D                      u3061 03F1                      u3221 07C7  
                    u1710 07E4                      u1550 097A                      u3070 03F6  
                    u3150 04E1                      u1711 07E3                      u1551 0979  
                    u3071 03F5                      u3151 04E0                      u1800 070C  
                    u1720 07FD                      u3080 03FF                      u3160 0526  
                    u1801 070B                      u1721 07FC                      u3081 03FE  
                    u3161 0525                      u1810 071C                      u1730 06A0  
                    u3090 040E                      u3170 056B                      u1811 071B  
                    u1731 069F                      u3091 040D                      u3171 056A  
                    u3307 055B                      u1740 06AA                      u1820 0921  
                    u2700 0F60                      u3180 075D                      u1741 06A9  
                    u1821 0920                      u2701 0F5F                      u3317 057D  
                    u3181 075C                      u3237 0729                      u1750 06BC  
                    u3190 076E                      u1751 06BB                      u3407 05FF  
                    u3327 03BF                      u3191 076D                      u3247 0738  
                    _PIE1 008C                      u1760 06CC                      u2720 0F75  
                    u2800 0B9C                      u2640 09CA                      u1761 06CB  
                    u2721 0F74                      u2801 0B9B                      u2641 09C9  
                    u3417 0619                      u3337 03E7                      u3257 0763  
                    u1770 06DC                      u2810 0D0C                      u1771 06DB  
                    u3507 068C                      u2715 0F63                      u2811 0D0B  
                    u3427 0632                      u3347 0423                      u3267 07A1  
                    u1780 06EC                      u2740 0F8E                      u2900 012D  
                    u2820 0043                      u3517 17D6                      u1781 06EB  
                    u2741 0F8D                      u2725 0F71                      u2901 012C  
                    u2821 0042                      u3437 0648                      u3357 044B  
                    u3277 07B7                      u1790 06FC                      u2750 0B63  
                    u2670 09E4                      u2910 0143                      u2830 0062  
                    u3527 17FA                      u1791 06FB                      u2735 0F80  
                    u2751 0B62                      u2671 09E3                      u2655 09D1  
                    u2911 0142                      u2831 0061                      u3447 0D14  
                    u2815 0D08                      u3367 0462                      u3287 04D1  
                    u2680 0F48                      u2920 015A                      u2840 00B0  
                    u3537 08B8                      u2681 0F47                      u2665 09D8  
                    u2921 0159                      u2905 0129                      u2841 00AF  
                    u3457 0D1E                      u3377 05AF                      u3297 0516  
                    u2770 0B7B                      u2930 0160                      u2850 00DF  
                    u3467 0953                      u2771 0B7A                      u2931 015F  
                    u2851 00DE                      u3387 05D3                      u2780 0B87  
                    u2940 01C4                      u2860 0105                      u3477 09F5  
                    u2781 0B86                      u2765 0B69                      u2941 01C3  
                    u2861 0104                      u3397 05ED                      u2950 01D6  
                    u2870 0110                      u3487 0A0B                      u2695 0F4E  
                    u2951 01D5                      u2871 010F                      u2880 0116  
                    u2960 05BC                      u3497 067D                      u2785 0B83  
                    u2881 0115                      u2865 0101                      u2961 05BB  
                    u2890 011C                      u2795 0B8E                      u2891 011B  
                    i1l60 093C                      u2980 05E2                      u2981 05E1  
                    u2990 0641                      u2974 05C6                      i1l63 0942  
                    u2991 0640                      u2975 05C3                      i1l69 0DD0  
                    _TXIF 0064              __CFG_WRT$OFF 0000              _stereoEnable 0046  
                    _beep 0CDC                      _days 0049                      _main 0723  
                    _time 0DD1                      btemp 007E    __size_of_WriteDataXLCD 004F  
                    start 0012         ??i1_WriteDataXLCD 0071             __CFG_IESO$OFF 0000  
           __CFG_MCLRE$ON 0000                i1_putsXLCD 097B               _writeEEPROM 095C  
            _WriteCmdXLCD 0C3E          ??_writeFrequency 00C7                     ?_beep 00C3  
      writeEEPROM@address 003D             ?_SetDDRamAddr 0070                     ?_main 0070  
                   _EEADR 010D                     STR_10 0826                     STR_11 088C  
                   STR_12 0814             __CFG_WDTE$OFF 0000                     ?_time 0070  
                   _ANSEL 0188                     _T1CON 0010           __end_of___lwdiv 0F9B  
                   i1l231 0A30                     i1l241 0E24                     i1l233 0A31  
                   i1l410 099C                     i1l243 0E26                     i1l422 17F3  
         __end_of___lwmod 0BA3                     i1l347 17D1                     i1l392 0C3D  
                   i1l386 0BEF                     i1l740 02BA                     i1l751 0360  
                   i1l487 0EDC                     i1l755 09A9                     i1l757 09C1  
                   _RCREG 001A                     _RCSTA 0018                     _TMR1H 000F  
                   _TMR1L 000E                     _SPBRG 0099                     _PORTA 0005  
                   _PORTB 0006                     _PORTC 0007                     _TRISA 0085  
                   _TRISB 0086                     _TRISC 0087                     _TXREG 0019  
         __end_of_codFreq 08CC                     _TXSTA 0098                i1isdigit@c 0071  
         __end_of_getData 0F3C            __CFG_FCMEN$OFF 0000        i1___lwmod@dividend 007A  
         __end_of_initLCD 0A11               ?i1_BusyXLCD 0070           __end_of_dpowers 0810  
    writeFrequency@buffer 00CA                     _level 004D                     _inter 0A11  
         __end_of_isdigit 0914                     _hours 0048           __end_of_setData 0E7F  
                   _start 0499            __CFG_BOREN$OFF 0000                     pclath 000A  
        __end_ofi1___wmul 09C2                     status 0003       i1___wmul@multiplier 0070  
                   wtemp0 007E           __end_of_sprintf 01DB        __size_ofi1___lwdiv 0044  
      __size_ofi1___lwmod 003A  __size_of_principalScreen 0065           __initialization 0015  
   __end_ofi1_writeEEPROM 0943         __end_of_FINAL_DAY 0811              __end_of_beep 0D2B  
            __end_of_main 07D6              __end_of_time 0E27          __end_of_BusyXLCD 08BF  
      __size_ofi1_isdigit 0012        __size_ofi1_setData 0056     __size_of_DelayPORXLCD 000C  
              i1sprintf@c 0030                i1sprintf@f 0020            ??_SetDDRamAddr 003E  
              _SendCMDLCD 0914                    ??_beep 0043          __end_of_OpenXLCD 0723  
                  ??_main 00E2                    ??_time 0075        __size_ofi1_sprintf 0186  
           _WriteDataXLCD 0C8D  __size_ofi1_DelayFor18TCY 0006        _hundredMiliSeconds 0050  
                  _ADCON0 001F                    _ADCON1 009F                    ?_inter 0070  
                  _EEDATA 010C                    _EECON2 018D                    ?_start 0070  
                  _ANSELH 0189                    i1l1027 0B5A                    i1l1037 0AD5  
                  i1l1217 08EC                    i1l3101 0C12                    i1l3103 0C27  
                  i1l3105 0C2C                    i1l3121 0994                    i1l3113 097C  
                  i1l3201 033D                    i1l3107 0C2F                    i1l3115 097D  
                  i1l3203 0341                    i1l3131 01F5                    i1l3123 01DE  
                  i1l3109 0C34                    i1l3117 0987                    u200_25 0AC5  
                  i1l3141 0234                    i1l3133 01F8                    i1l3125 01E3  
                  i1l3205 034A                    i1l3071 0D81                    i1l3119 0990  
                  i1l3151 026F                    i1l3207 035C                    i1l3143 0238  
                  i1l3135 0208                    i1l3127 01E9                    u201_20 0AD1  
                  i1l3081 0DAC                    i1l3073 0D85                    u201_21 0AD0  
                  i1l3153 0273                    i1l3137 020C                    i1l3129 01F0  
                  i1l3083 0DB8                    i1l3075 0D8C                    i1l3091 0C03  
                  i1l3171 02A8                    i1l3155 0277                    i1l3139 0221  
                  i1l3147 0248                    i1l3085 0DC4                    i1l3077 0D94  
                  i1l3069 0D7B                    i1l3421 0DDE                    i1l3093 0C04  
                  i1l3181 02D5                    i1l3173 02AE                    i1l3165 0282  
                  i1l3157 027B                    i1l3149 0267                    i1l3079 0DA0  
                  i1l3431 0DF3                    i1l3423 0DE2                    i1l3415 0DD1  
                  i1l3095 0C05                    i1l3191 02F8                    i1l3183 02DB  
                  i1l3175 02B4                    i1l3159 0280                    u202_20 08E3  
                  i1l3441 0E07                    i1l3433 0DF4                    i1l3425 0DE8  
                  i1l3417 0DD7                    i1l3097 0C0A                    i1l3089 0BF1  
                  u202_21 08E2                    i1l3193 02FF                    i1l3185 02E2  
                  i1l3177 02C5                    i1l3169 029E                    i1l4161 025C  
                  i1l3521 0A23                    i1l3513 0A11                    i1l3451 0E1C  
                  i1l3443 0E0B                    i1l3435 0DF8                    i1l3427 0DE9  
                  i1l3419 0DDD                    i1l2627 17CC                    i1l3099 0C0D  
                  i1l3195 0303                    i1l3187 02E6                    i1l3179 02D1  
                  i1l3523 0A28                    i1l3515 0A16                    i1l3453 0E22  
                  i1l3445 0E11                    i1l3437 0DFE                    i1l3429 0DED  
                  i1l2901 0B50                    i1l3197 0308                    i1l3189 02F2  
                  i1l3461 0EC4                    i1l3517 0A1A                    i1l3525 0A2B  
                  i1l2831 0934                    i1l3447 0E12                    i1l3439 0E06  
                  i1l2903 0B56                    i1l2911 0AA5                    i1l3199 0336  
                  i1l3463 0ECA                    i1l3455 0E7F                    i1l3527 0A2F  
                  i1l3519 0A1E                    u203_20 08E9                    i1l2833 0935  
                  i1l3449 0E16                    i1l2841 0BB5                    i1l2921 0AC4  
                  i1l2913 0AAC                    u203_21 08E8                    i1l3465 0ED0  
                  i1l3457 0E86                    i1l2835 093A                    i1l2827 092B  
                  i1l2851 0BC4                    i1l2843 0BB6                    i1l2923 0ACB  
                  i1l2915 0AB0                    i1l2907 0A9C                    i1l2931 08DD  
                  i1l3467 0ED6                    i1l3459 0EAC                    i1l2837 093B  
                  i1l2829 0931                    u211_25 0C1C                    i1l2853 0BD9  
                  i1l2845 0BB7                    i1l2917 0AB4                    i1l2909 0AA2  
                  i1l2925 0AD1                    i1l2933 08E3                    i1l2863 17EA  
                  i1l2855 0BDE                    i1l2847 0BBC                    i1l2839 0BA4  
                  i1l2919 0ABE                    i1l2871 09A3                    i1l2935 08E9  
                  u212_20 0987                    u220_20 02AE                    i1l2857 0BE1  
                  i1l2849 0BBF                    u212_21 0986                    i1l2881 0B17  
                  i1l2873 09B0                    i1l2937 08EB                    i1l2929 08DC  
                  u220_21 02AD                    i1l2859 0BE6                    i1l2891 0B2D  
                  i1l2883 0B19                    i1l2875 09B7                    i1l2867 099D  
                  i1l2893 0B31                    i1l2885 0B1F                    i1l2877 09BD  
                  i1l2869 099F                    i1l2895 0B42                    i1l2887 0B22  
                  u213_20 099C                    u221_20 02B4                    u213_21 099B  
                  i1l2897 0B48                    i1l2889 0B29                    u221_21 02B3  
                  i1l2899 0B49                    u222_20 02C5                    u214_20 01E9  
                  u222_21 02C4                    u214_21 01E8                    u222_25 02C1  
                  u223_20 02DB                    u215_20 0208                    u223_21 02DA  
                  u215_21 0207                    u224_20 02F2                    u216_20 0248  
                  u224_21 02F1                    u216_21 0247                    u225_20 02F8  
                  u217_20 0277                    _INTCON 000B                    u225_21 02F7  
                  u217_21 0276                    u250_20 0E11                    u226_20 034A  
                  u218_20 029D                    u250_21 0E10                    u226_21 0349  
                  u218_21 029C                    u218_25 0299                    u251_20 0E1C  
                  u227_20 035C                    u219_20 02A8                    u251_21 0E1B  
                  u227_21 035B                    u219_21 02A7                    u252_20 0E22  
                  u260_20 0A2F                    u252_21 0E21                    u260_21 0A2E  
                  u253_20 0E86                    u253_21 0E85                    u246_20 0DDD  
                  u246_21 0DDC                    u190_25 0B23                    u183_20 0942  
                  u247_20 0DE8                    u191_20 0B31                    u183_21 0941  
                  u247_21 0DE7                    u191_21 0B30                    u248_20 0DF3  
                  u248_21 0DF2                    u184_25 0BCE                    u192_25 0B32  
                  u249_20 0E06                    u193_20 0B42                    u185_20 09A3  
                  u249_21 0E05                    u193_21 0B41                    u185_21 09A2  
                  u193_25 0B3E                    u194_25 0B4A                    u186_25 09AA  
                  u354_27 17EE                    u195_20 0B56                    u259_20 0A16  
                  u195_21 0B55                    u259_21 0A15                    u187_25 09B1  
                  u355_27 17CE                    u196_20 0AA2                    u188_20 09BD  
                  u196_21 0AA1                    u188_21 09BC                    u189_20 0B1F  
                  u189_21 0B1E                    u197_25 0AA6                    u198_20 0AB4  
                  u198_21 0AB3                    u199_20 0ABE                    u199_21 0ABD  
                  u199_25 0ABA             i1sprintf@flag 002A             i1sprintf@prec 0029  
          __CFG_PWRTE$OFF 0000              _DelayPORXLCD 17F4               ?i1_putsXLCD 0070  
                  ___wmul 09C2                 ??___lwdiv 0041       __size_ofi1_BusyXLCD 000A  
                  beep@ms 00C3                 ??___lwmod 0042                    _config 0AD6  
               ??_codFreq 003F                 ??_getData 003E                    _months 004A  
          ?_WriteDataXLCD 0070                 ??_initLCD 00C3         __end_ofi1___lwdiv 0B5B  
       __end_ofi1___lwmod 0AD6                 ??_isdigit 003D                 ??_setData 003F  
                  saved_w 007E          __end_of_putsXLCD 07FE                    start@i 00DE  
               ??_sprintf 00CF         __end_ofi1_isdigit 08ED         __end_ofi1_setData 0DD1  
 __end_of__initialization 0031         __end_ofi1_sprintf 0361           writeEEPROM@data 003E  
          __pcstackCOMMON 0070              __pidataBANK0 17E1             __end_of_inter 0A3C  
       ??_principalScreen 00DB             __end_of_start 0585               ?_SendCMDLCD 0070  
               ?i1___wmul 0070      i1SetDDRamAddr@DDaddr 0073               setData@full 0070  
             i1sprintf@ap 0028               i1sprintf@sp 002D    __size_of_lockingScreen 0031  
         i1_WriteDataXLCD 0BA3       __size_ofi1_putsXLCD 0022                   ??_inter 0038  
  __size_of_DelayFor18TCY 0007              sprintf@width 00D7                   ??_start 00DB  
       ??i1_DelayFor18TCY 0070             ?_setFrequency 0070                __pbssBANK0 004D  
              __pbssBANK1 00A0                 ?_BusyXLCD 0070           WriteCmdXLCD@cmd 0040  
    __end_of_SetDDRamAddr 0D7B                 ?_OpenXLCD 0070                __pmaintext 0723  
            ?_writeEEPROM 003D         WriteDataXLCD@data 0040                   ?___wmul 003D  
              __pintentry 0004                   ?_config 0070           ??_WriteDataXLCD 003E  
                 _BAUDCTL 0187                   _BLOCKED 0813            updateLCD@decim 0036  
              ??i1___wmul 0074            updateLCD@integ 0037                _isOnConfig 004E  
           ?_setTransStat 003D        __size_of_updateLCD 005E              ??i1_BusyXLCD 0070  
          ??_setFrequency 00DC                __stringtab 0800        __size_of_putrsXLCD 002F  
              ??_BusyXLCD 003D            i1sprintf@width 002E                _readEEPROM 08CC  
     __size_of_SendCMDLCD 0016                ??_OpenXLCD 0041             _lockingScreen 0A6B  
           _DelayFor18TCY 17D2           __size_of___wmul 0027                 ?_putsXLCD 0070  
                 ___lwdiv 0F3C                   ___lwmod 0B5B           __size_of_config 0041  
      __end_ofi1_BusyXLCD 17F4                 _FINAL_DAY 0810                   _codFreq 08BF  
         putrsXLCD@buffer 0042                   _getData 0EDD                   __ptext1 0499  
                 __ptext2 0361                   __ptext3 0585                   __ptext4 08BF  
                 __ptext5 0CDC                   __ptext6 0E27                   __ptext7 095C  
                 __ptext8 0A6B                   __ptext9 0F9B                   _cntTmr1 0052  
 __end_ofi1_WriteDataXLCD 0BF0                   _initLCD 09E9                 _T1CONbits 0010  
          ??_setTransStat 003F                   _dpowers 0806         i1___lwdiv@divisor 0070  
                 _lineOne 00B2                   _lineTwo 00A1                   _isdigit 0900  
       i1___lwdiv@counter 0077                   _prTmr1H 004B                   _prTmr1L 004C  
                 _setData 0E27                   _minutes 0047   __size_ofi1_SetDDRamAddr 004E  
                 _seconds 0051                   _sprintf 0035                   clrloop0 17DA  
    end_of_initialization 0031        __end_of_UN_BLOCKED 0813            ?_lockingScreen 0070  
            ??i1_putsXLCD 0074         __end_of_updateLCD 0EDD            ?_DelayFor18TCY 0070  
              ??_putsXLCD 0041     i1___wmul@multiplicand 0072         __end_of_putrsXLCD 0A6B  
               _PORTAbits 0005                 _PORTBbits 0006                 _PORTCbits 0007  
               _TRISBbits 0086   __size_of_writeFrequency 00D2     __size_of_SetDDRamAddr 0050  
               i1___lwdiv 0B17                 i1___lwmod 0A9C    __size_ofi1_writeEEPROM 0019  
       readEEPROM@address 003D        __end_ofi1_putsXLCD 099D               ?_readEEPROM 0070  
         _principalScreen 0F9B                 i1_isdigit 08DB                 i1_setData 0D7B  
               i1_sprintf 01DB       __end_of_FINAL_MONTH 0812      __size_of_writeEEPROM 001F  
    __end_of_setFrequency 0499            __end_of___wmul 09E9              ??_SendCMDLCD 0041  
          __end_of_config 0B17         i1___lwmod@divisor 0078         i1___lwmod@counter 007D  
            _SetDDRamAddr 0D2B           i1_DelayFor18TCY 17CC          ?i1_WriteDataXLCD 0070  
      SetDDRamAddr@DDaddr 0040       start_initialization 0015         __size_ofi1___wmul 0025  
              ?i1___lwdiv 0070                ?i1___lwmod 0078         __size_of_BusyXLCD 000D  
              ?i1_isdigit 0070              setData@data0 0040              setData@data1 0041  
         ??_lockingScreen 00DB                ?i1_setData 0070        __end_of_SendCMDLCD 092A  
    __end_of_setTransStat 095C              i1sprintf@val 002B           ??_DelayFor18TCY 003D  
       __size_of_OpenXLCD 00CC                ?i1_sprintf 0020             i1_writeEEPROM 092A  
                ??___wmul 0041                init_fetch0 08ED             ?_WriteCmdXLCD 0070  
                ??_config 0044               __pdataBANK0 0044       __size_of_readEEPROM 000F  
          i1_SetDDRamAddr 0BF0                 ___latbits 0002             __pcstackBANK0 0020  
           __pcstackBANK1 00C3              _isdigit$1166 003D   __end_of_principalScreen 1000  
             sprintf@flag 00D4               sprintf@prec 00D3               _FINAL_MONTH 0811  
          putsXLCD@buffer 0042            i1setData@data0 0073            i1setData@data1 0074  
        ___lwdiv@dividend 003F            ?i1_writeEEPROM 0070   __end_ofi1_DelayFor18TCY 17D2  
          ??_WriteCmdXLCD 003E                  ?___lwdiv 003D                  ?___lwmod 00C6  
                ?_codFreq 003D                  ?_getData 0070             SendCMDLCD@CMD 0041  
               __pstrings 0800         __size_of_putsXLCD 0028     __end_of_WriteDataXLCD 0CDC  
  __end_ofi1_SetDDRamAddr 0C3E                  ?_initLCD 0070                  ?_isdigit 0070  
                ?_setData 0070            _writeFrequency 0585                 _frequency 0044  
     i1WriteDataXLCD@data 0073          ___lwdiv@quotient 00C4               ??i1___lwdiv 0074  
             ??i1___lwmod 007C                 codFreq@fr 003F                  ?_sprintf 00CA  
          __size_of_inter 002B            __size_of_start 00EC            i1_isdigit$1166 0070  
       interrupt_function 0004            ___wmul@product 0041               ??i1_isdigit 0070  
               clear_ram0 17D9               ??i1_setData 0072             ?_DelayPORXLCD 0070  
   __size_of_setFrequency 0138                  _PIR1bits 000C           OpenXLCD@lcdtype 0043  
                _PIR2bits 000D          setTransStat@stat 003D               ??i1_sprintf 0025  
               _updateLCD 0E7F            _functionalStat 004F               __stringbase 0805  
       ___wmul@multiplier 003D                  i1___wmul 099D           ?i1_SetDDRamAddr 0070  
  __end_of_writeFrequency 0657                 _putrsXLCD 0A3C          ?_principalScreen 0070  
            _setFrequency 0361                  _BusyXLCD 08B2     __size_of_setTransStat 0019  
            ??_readEEPROM 003D            ??_DelayPORXLCD 003D                _EECON1bits 018C  
                _OpenXLCD 0657           ??i1_writeEEPROM 0071          ?i1_DelayFor18TCY 0070  
              ?_updateLCD 0070          __size_of___lwdiv 005F          __size_of___lwmod 0048  
    i1writeEEPROM@address 0070        __end_of__stringtab 0806          __size_of_codFreq 000D  
        __size_of_getData 005F           ?_writeFrequency 00C5                sprintf@val 00D5  
              ?_putrsXLCD 0070          __size_of_initLCD 0028        __end_of_readEEPROM 08DB  
            _setTransStat 0943          __size_of_isdigit 0014           ___lwdiv@divisor 003D  
        __size_of_setData 0058           ___lwdiv@counter 00C3                  __ptext10 0035  
                __ptext11 0900                  __ptext20 0AD6                  __ptext12 09C2  
                __ptext21 0943                  __ptext13 0B5B                  __ptext30 0A11  
                __ptext22 09E9                  __ptext14 0F3C                  __ptext31 0E7F  
                __ptext23 0914                  __ptext15 07D6                  __ptext40 0BF0  
                __ptext32 01DB                  __ptext24 0657                  __ptext16 0A3C  
                __ptext41 17CC                  __ptext33 08DB                  __ptext25 0C3E  
                __ptext17 0C8D                  __ptext42 0DD1                  __ptext34 099D  
                __ptext26 0D2B                  __ptext18 0EDD                  __ptext43 0D7B  
                __ptext35 0A9C                  __ptext27 17D2                  __ptext19 08CC  
                __ptext44 092A                  __ptext36 0B17                  __ptext28 17F4  
                __ptext37 097B                  __ptext29 08B2                  __ptext38 0BA3  
                __ptext39 17EA         __CFG_BOR4V$BOR40V 0000      __end_of_WriteCmdXLCD 0C8D  
        __size_of_sprintf 01A6        i1___lwdiv@dividend 0072             __size_of_beep 004F  
       i1writeEEPROM@data 0071                  codFreq@f 003D             __size_of_main 00B3  
           __size_of_time 0056             ??_writeEEPROM 003E                  _putsXLCD 07D6  
         writeFrequency@f 00C5           writeFrequency@r 00CC        i1___lwdiv@quotient 0075  
             getData@aux0 0042               getData@aux1 0043                _INTCONbits 000B  
                init_ram0 08F1                  isdigit@c 003E  __size_ofi1_WriteDataXLCD 004D  
                intlevel1 0000                 sprintf@ap 00D2                 sprintf@sp 00D9  
        ___lwmod@dividend 00C8                 stringcode 0800     __end_of_lockingScreen 0A9C  
   __end_of_DelayFor18TCY 17D9               ??_updateLCD 0031       __end_of_writeEEPROM 097B  
                sprintf@c 00DA                  sprintf@f 00CA      __end_of_DelayPORXLCD 1800  
        i1putsXLCD@buffer 0075               ??_putrsXLCD 0041           ___lwmod@divisor 00C6  
         ___lwmod@counter 0043                  stringdir 0800                  stringtab 0800  
              i1_BusyXLCD 17EA      principalScreen@decim 00E0      principalScreen@integ 00E1  
