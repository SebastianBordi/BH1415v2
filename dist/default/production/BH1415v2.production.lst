

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Fri Aug 23 02:28:33 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	16F886
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	eeprom_data,global,class=EEDATA,space=3,delta=2
     5                           	psect	idataBANK0,global,class=CODE,delta=2
     6                           	psect	strings,global,class=STRING,delta=2
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	inittext,global,class=CODE,delta=2
    12                           	psect	clrtext,global,class=CODE,delta=2
    13                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    14                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    16                           	psect	maintext,global,class=CODE,split=1,delta=2
    17                           	psect	text1,local,class=CODE,merge=1,delta=2
    18                           	psect	text2,local,class=CODE,merge=1,delta=2
    19                           	psect	text3,local,class=CODE,merge=1,delta=2
    20                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    21                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    22                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    23                           	psect	text7,local,class=CODE,merge=1,delta=2
    24                           	psect	text8,local,class=CODE,merge=1,delta=2
    25                           	psect	text9,local,class=CODE,merge=1,delta=2
    26                           	psect	text10,local,class=CODE,merge=1,delta=2
    27                           	psect	text11,local,class=CODE,merge=1,delta=2,group=1
    28                           	psect	text12,local,class=CODE,merge=1,delta=2
    29                           	psect	text13,local,class=CODE,merge=1,delta=2
    30                           	psect	text14,local,class=CODE,merge=1,delta=2
    31                           	psect	text15,local,class=CODE,merge=1,delta=2
    32                           	psect	text16,local,class=CODE,merge=1,delta=2
    33                           	psect	text17,local,class=CODE,merge=1,delta=2
    34                           	psect	text18,local,class=CODE,merge=1,delta=2
    35                           	psect	text19,local,class=CODE,merge=1,delta=2
    36                           	psect	text20,local,class=CODE,merge=1,delta=2
    37                           	psect	text21,local,class=CODE,merge=1,delta=2
    38                           	psect	text22,local,class=CODE,merge=1,delta=2
    39                           	psect	text23,local,class=CODE,merge=1,delta=2
    40                           	psect	text24,local,class=CODE,merge=1,delta=2
    41                           	psect	text25,local,class=CODE,merge=1,delta=2
    42                           	psect	text26,local,class=CODE,merge=1,delta=2
    43                           	psect	text27,local,class=CODE,merge=1,delta=2
    44                           	psect	text28,local,class=CODE,merge=1,delta=2
    45                           	psect	intentry,global,class=CODE,delta=2
    46                           	psect	text29,local,class=CODE,merge=1,delta=2
    47                           	psect	text30,local,class=CODE,merge=1,delta=2
    48                           	psect	text31,local,class=CODE,merge=1,delta=2
    49                           	psect	text32,local,class=CODE,merge=1,delta=2
    50                           	psect	text33,local,class=CODE,merge=1,delta=2
    51                           	psect	text34,local,class=CODE,merge=1,delta=2
    52                           	psect	text35,local,class=CODE,merge=1,delta=2
    53                           	psect	text36,local,class=CODE,merge=1,delta=2
    54                           	psect	text37,local,class=CODE,merge=1,delta=2
    55                           	psect	text38,local,class=CODE,merge=1,delta=2
    56                           	psect	text39,local,class=CODE,merge=1,delta=2
    57                           	psect	text40,local,class=CODE,merge=1,delta=2
    58                           	psect	text41,local,class=CODE,merge=1,delta=2
    59                           	psect	text42,local,class=CODE,merge=1,delta=2
    60                           	dabs	1,0x7E,2
    61  0000                     
    62                           ; Version 2.05
    63                           ; Generated 20/12/2018 GMT
    64                           ; 
    65                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    66                           ; All rights reserved.
    67                           ; 
    68                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    69                           ; 
    70                           ; Redistribution and use in source and binary forms, with or without modification, are
    71                           ; permitted provided that the following conditions are met:
    72                           ; 
    73                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    74                           ;        conditions and the following disclaimer.
    75                           ; 
    76                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    77                           ;        of conditions and the following disclaimer in the documentation and/or other
    78                           ;        materials provided with the distribution.
    79                           ; 
    80                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    81                           ;        software without specific prior written permission.
    82                           ; 
    83                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    84                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    85                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    86                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    87                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    88                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    89                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    90                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    91                           ; 
    92                           ; 
    93                           ; Code-generator required, PIC16F886 Definitions
    94                           ; 
    95                           ; SFR Addresses
    96  0000                     	;# 
    97  0001                     	;# 
    98  0002                     	;# 
    99  0003                     	;# 
   100  0004                     	;# 
   101  0005                     	;# 
   102  0006                     	;# 
   103  0007                     	;# 
   104  0009                     	;# 
   105  000A                     	;# 
   106  000B                     	;# 
   107  000C                     	;# 
   108  000D                     	;# 
   109  000E                     	;# 
   110  000E                     	;# 
   111  000F                     	;# 
   112  0010                     	;# 
   113  0011                     	;# 
   114  0012                     	;# 
   115  0013                     	;# 
   116  0014                     	;# 
   117  0015                     	;# 
   118  0015                     	;# 
   119  0016                     	;# 
   120  0017                     	;# 
   121  0018                     	;# 
   122  0019                     	;# 
   123  001A                     	;# 
   124  001B                     	;# 
   125  001B                     	;# 
   126  001C                     	;# 
   127  001D                     	;# 
   128  001E                     	;# 
   129  001F                     	;# 
   130  0081                     	;# 
   131  0085                     	;# 
   132  0086                     	;# 
   133  0087                     	;# 
   134  0089                     	;# 
   135  008C                     	;# 
   136  008D                     	;# 
   137  008E                     	;# 
   138  008F                     	;# 
   139  0090                     	;# 
   140  0091                     	;# 
   141  0092                     	;# 
   142  0093                     	;# 
   143  0093                     	;# 
   144  0093                     	;# 
   145  0094                     	;# 
   146  0095                     	;# 
   147  0096                     	;# 
   148  0097                     	;# 
   149  0098                     	;# 
   150  0099                     	;# 
   151  009A                     	;# 
   152  009B                     	;# 
   153  009C                     	;# 
   154  009D                     	;# 
   155  009E                     	;# 
   156  009F                     	;# 
   157  0105                     	;# 
   158  0107                     	;# 
   159  0108                     	;# 
   160  0109                     	;# 
   161  010C                     	;# 
   162  010C                     	;# 
   163  010D                     	;# 
   164  010E                     	;# 
   165  010F                     	;# 
   166  0185                     	;# 
   167  0187                     	;# 
   168  0188                     	;# 
   169  0189                     	;# 
   170  018C                     	;# 
   171  018D                     	;# 
   172                           
   173                           	psect	eeprom_data
   174  0000  007E 0003 0000 0000 0000 0000 0001 0000 	db	126,3,0,0,0,0,1,0	;# 
   175  0000                     	;# 
   176  0001                     	;# 
   177  0002                     	;# 
   178  0003                     	;# 
   179  0004                     	;# 
   180  0005                     	;# 
   181  0006                     	;# 
   182  0007                     	;# 
   183  0009                     	;# 
   184  000A                     	;# 
   185  000B                     	;# 
   186  000C                     	;# 
   187  000D                     	;# 
   188  000E                     	;# 
   189  000E                     	;# 
   190  000F                     	;# 
   191  0010                     	;# 
   192  0011                     	;# 
   193  0012                     	;# 
   194  0013                     	;# 
   195  0014                     	;# 
   196  0015                     	;# 
   197  0015                     	;# 
   198  0016                     	;# 
   199  0017                     	;# 
   200  0018                     	;# 
   201  0019                     	;# 
   202  001A                     	;# 
   203  001B                     	;# 
   204  001B                     	;# 
   205  001C                     	;# 
   206  001D                     	;# 
   207  001E                     	;# 
   208  001F                     	;# 
   209  0081                     	;# 
   210  0085                     	;# 
   211  0086                     	;# 
   212  0087                     	;# 
   213  0089                     	;# 
   214  008C                     	;# 
   215  008D                     	;# 
   216  008E                     	;# 
   217  008F                     	;# 
   218  0090                     	;# 
   219  0091                     	;# 
   220  0092                     	;# 
   221  0093                     	;# 
   222  0093                     	;# 
   223  0093                     	;# 
   224  0094                     	;# 
   225  0095                     	;# 
   226  0096                     	;# 
   227  0097                     	;# 
   228  0098                     	;# 
   229  0099                     	;# 
   230  009A                     	;# 
   231  009B                     	;# 
   232  009C                     	;# 
   233  009D                     	;# 
   234  009E                     	;# 
   235  009F                     	;# 
   236  0105                     	;# 
   237  0107                     	;# 
   238  0108                     	;# 
   239  0109                     	;# 
   240  010C                     	;# 
   241  010C                     	;# 
   242  010D                     	;# 
   243  010E                     	;# 
   244  010F                     	;# 
   245  0185                     	;# 
   246  0187                     	;# 
   247  0188                     	;# 
   248  0189                     	;# 
   249  018C                     	;# 
   250  018D                     	;# 
   251  0008  007E 0003 0000 0000 0000 0000 0001 0000 	db	126,3,0,0,0,0,1,0	;# 
   252  0000                     	;# 
   253  0001                     	;# 
   254  0002                     	;# 
   255  0003                     	;# 
   256  0004                     	;# 
   257  0005                     	;# 
   258  0006                     	;# 
   259  0007                     	;# 
   260  0009                     	;# 
   261  000A                     	;# 
   262  000B                     	;# 
   263  000C                     	;# 
   264  000D                     	;# 
   265  000E                     	;# 
   266  000E                     	;# 
   267  000F                     	;# 
   268  0010                     	;# 
   269  0011                     	;# 
   270  0012                     	;# 
   271  0013                     	;# 
   272  0014                     	;# 
   273  0015                     	;# 
   274  0015                     	;# 
   275  0016                     	;# 
   276  0017                     	;# 
   277  0018                     	;# 
   278  0019                     	;# 
   279  001A                     	;# 
   280  001B                     	;# 
   281  001B                     	;# 
   282  001C                     	;# 
   283  001D                     	;# 
   284  001E                     	;# 
   285  001F                     	;# 
   286  0081                     	;# 
   287  0085                     	;# 
   288  0086                     	;# 
   289  0087                     	;# 
   290  0089                     	;# 
   291  008C                     	;# 
   292  008D                     	;# 
   293  008E                     	;# 
   294  008F                     	;# 
   295  0090                     	;# 
   296  0091                     	;# 
   297  0092                     	;# 
   298  0093                     	;# 
   299  0093                     	;# 
   300  0093                     	;# 
   301  0094                     	;# 
   302  0095                     	;# 
   303  0096                     	;# 
   304  0097                     	;# 
   305  0098                     	;# 
   306  0099                     	;# 
   307  009A                     	;# 
   308  009B                     	;# 
   309  009C                     	;# 
   310  009D                     	;# 
   311  009E                     	;# 
   312  009F                     	;# 
   313  0105                     	;# 
   314  0107                     	;# 
   315  0108                     	;# 
   316  0109                     	;# 
   317  010C                     	;# 
   318  010C                     	;# 
   319  010D                     	;# 
   320  010E                     	;# 
   321  010F                     	;# 
   322  0185                     	;# 
   323  0187                     	;# 
   324  0188                     	;# 
   325  0189                     	;# 
   326  018C                     	;# 
   327  018D                     	;# 
   328  0010  007E 0003 0000 0000 0000 0000 0001 0000 	db	126,3,0,0,0,0,1,0	;# 
   329  0000                     	;# 
   330  0001                     	;# 
   331  0002                     	;# 
   332  0003                     	;# 
   333  0004                     	;# 
   334  0005                     	;# 
   335  0006                     	;# 
   336  0007                     	;# 
   337  0009                     	;# 
   338  000A                     	;# 
   339  000B                     	;# 
   340  000C                     	;# 
   341  000D                     	;# 
   342  000E                     	;# 
   343  000E                     	;# 
   344  000F                     	;# 
   345  0010                     	;# 
   346  0011                     	;# 
   347  0012                     	;# 
   348  0013                     	;# 
   349  0014                     	;# 
   350  0015                     	;# 
   351  0015                     	;# 
   352  0016                     	;# 
   353  0017                     	;# 
   354  0018                     	;# 
   355  0019                     	;# 
   356  001A                     	;# 
   357  001B                     	;# 
   358  001B                     	;# 
   359  001C                     	;# 
   360  001D                     	;# 
   361  001E                     	;# 
   362  001F                     	;# 
   363  0081                     	;# 
   364  0085                     	;# 
   365  0086                     	;# 
   366  0087                     	;# 
   367  0089                     	;# 
   368  008C                     	;# 
   369  008D                     	;# 
   370  008E                     	;# 
   371  008F                     	;# 
   372  0090                     	;# 
   373  0091                     	;# 
   374  0092                     	;# 
   375  0093                     	;# 
   376  0093                     	;# 
   377  0093                     	;# 
   378  0094                     	;# 
   379  0095                     	;# 
   380  0096                     	;# 
   381  0097                     	;# 
   382  0098                     	;# 
   383  0099                     	;# 
   384  009A                     	;# 
   385  009B                     	;# 
   386  009C                     	;# 
   387  009D                     	;# 
   388  009E                     	;# 
   389  009F                     	;# 
   390  0105                     	;# 
   391  0107                     	;# 
   392  0108                     	;# 
   393  0109                     	;# 
   394  010C                     	;# 
   395  010C                     	;# 
   396  010D                     	;# 
   397  010E                     	;# 
   398  010F                     	;# 
   399  0185                     	;# 
   400  0187                     	;# 
   401  0188                     	;# 
   402  0189                     	;# 
   403  018C                     	;# 
   404  018D                     	;# 
   405  0018  007E 0003 0000 0000 0000 0000 0001 0000 	db	126,3,0,0,0,0,1,0	;# 
   406  0000                     	;# 
   407  0001                     	;# 
   408  0002                     	;# 
   409  0003                     	;# 
   410  0004                     	;# 
   411  0005                     	;# 
   412  0006                     	;# 
   413  0007                     	;# 
   414  0009                     	;# 
   415  000A                     	;# 
   416  000B                     	;# 
   417  000C                     	;# 
   418  000D                     	;# 
   419  000E                     	;# 
   420  000E                     	;# 
   421  000F                     	;# 
   422  0010                     	;# 
   423  0011                     	;# 
   424  0012                     	;# 
   425  0013                     	;# 
   426  0014                     	;# 
   427  0015                     	;# 
   428  0015                     	;# 
   429  0016                     	;# 
   430  0017                     	;# 
   431  0018                     	;# 
   432  0019                     	;# 
   433  001A                     	;# 
   434  001B                     	;# 
   435  001B                     	;# 
   436  001C                     	;# 
   437  001D                     	;# 
   438  001E                     	;# 
   439  001F                     	;# 
   440  0081                     	;# 
   441  0085                     	;# 
   442  0086                     	;# 
   443  0087                     	;# 
   444  0089                     	;# 
   445  008C                     	;# 
   446  008D                     	;# 
   447  008E                     	;# 
   448  008F                     	;# 
   449  0090                     	;# 
   450  0091                     	;# 
   451  0092                     	;# 
   452  0093                     	;# 
   453  0093                     	;# 
   454  0093                     	;# 
   455  0094                     	;# 
   456  0095                     	;# 
   457  0096                     	;# 
   458  0097                     	;# 
   459  0098                     	;# 
   460  0099                     	;# 
   461  009A                     	;# 
   462  009B                     	;# 
   463  009C                     	;# 
   464  009D                     	;# 
   465  009E                     	;# 
   466  009F                     	;# 
   467  0105                     	;# 
   468  0107                     	;# 
   469  0108                     	;# 
   470  0109                     	;# 
   471  010C                     	;# 
   472  010C                     	;# 
   473  010D                     	;# 
   474  010E                     	;# 
   475  010F                     	;# 
   476  0185                     	;# 
   477  0187                     	;# 
   478  0188                     	;# 
   479  0189                     	;# 
   480  018C                     	;# 
   481  018D                     	;# 
   482  0020  007E 0003 0000 0000 0000 0000 0001 0000 	db	126,3,0,0,0,0,1,0	;# 
   483  0000                     	;# 
   484  0001                     	;# 
   485  0002                     	;# 
   486  0003                     	;# 
   487  0004                     	;# 
   488  0005                     	;# 
   489  0006                     	;# 
   490  0007                     	;# 
   491  0009                     	;# 
   492  000A                     	;# 
   493  000B                     	;# 
   494  000C                     	;# 
   495  000D                     	;# 
   496  000E                     	;# 
   497  000E                     	;# 
   498  000F                     	;# 
   499  0010                     	;# 
   500  0011                     	;# 
   501  0012                     	;# 
   502  0013                     	;# 
   503  0014                     	;# 
   504  0015                     	;# 
   505  0015                     	;# 
   506  0016                     	;# 
   507  0017                     	;# 
   508  0018                     	;# 
   509  0019                     	;# 
   510  001A                     	;# 
   511  001B                     	;# 
   512  001B                     	;# 
   513  001C                     	;# 
   514  001D                     	;# 
   515  001E                     	;# 
   516  001F                     	;# 
   517  0081                     	;# 
   518  0085                     	;# 
   519  0086                     	;# 
   520  0087                     	;# 
   521  0089                     	;# 
   522  008C                     	;# 
   523  008D                     	;# 
   524  008E                     	;# 
   525  008F                     	;# 
   526  0090                     	;# 
   527  0091                     	;# 
   528  0092                     	;# 
   529  0093                     	;# 
   530  0093                     	;# 
   531  0093                     	;# 
   532  0094                     	;# 
   533  0095                     	;# 
   534  0096                     	;# 
   535  0097                     	;# 
   536  0098                     	;# 
   537  0099                     	;# 
   538  009A                     	;# 
   539  009B                     	;# 
   540  009C                     	;# 
   541  009D                     	;# 
   542  009E                     	;# 
   543  009F                     	;# 
   544  0105                     	;# 
   545  0107                     	;# 
   546  0108                     	;# 
   547  0109                     	;# 
   548  010C                     	;# 
   549  010C                     	;# 
   550  010D                     	;# 
   551  010E                     	;# 
   552  010F                     	;# 
   553  0185                     	;# 
   554  0187                     	;# 
   555  0188                     	;# 
   556  0189                     	;# 
   557  018C                     	;# 
   558  018D                     	;# 
   559                           
   560                           	psect	idataBANK0
   561  0971                     __pidataBANK0:	
   562                           
   563                           ;initializer for _stereoEnable
   564  0971  3401               	retlw	1
   565                           
   566                           ;initializer for _minutes
   567  0972  340F               	retlw	15
   568                           
   569                           ;initializer for _hours
   570  0973  3416               	retlw	22
   571                           
   572                           ;initializer for _days
   573  0974  3413               	retlw	19
   574                           
   575                           ;initializer for _months
   576  0975  3403               	retlw	3
   577                           
   578                           ;initializer for _prTmr1H
   579  0976  343C               	retlw	60
   580                           
   581                           ;initializer for _prTmr1L
   582  0977  34B0               	retlw	176
   583                           
   584                           	psect	strings
   585  0800                     __pstrings:	
   586  0800                     stringtab:	
   587  0800                     __stringtab:	
   588  0800                     stringcode:	
   589                           ;	String table - string pointers are 1 byte each
   590                           
   591  0800                     stringdir:	
   592  0800  3008               	movlw	high stringdir
   593  0801  008A               	movwf	10
   594  0802  0804               	movf	4,w
   595  0803  0A84               	incf	4,f
   596  0804  0782               	addwf	2,f
   597  0805                     __stringbase:	
   598  0805  3400               	retlw	0
   599  0806                     __end_of__stringtab:	
   600  0806                     _dpowers:	
   601  0806  3401               	retlw	1
   602  0807  3400               	retlw	0
   603  0808  340A               	retlw	10
   604  0809  3400               	retlw	0
   605  080A  3464               	retlw	100
   606  080B  3400               	retlw	0
   607  080C  34E8               	retlw	232
   608  080D  3403               	retlw	3
   609  080E  3410               	retlw	16
   610  080F  3427               	retlw	39
   611  0810                     __end_of_dpowers:	
   612  0810                     _FINAL_DAY:	
   613  0810  340D               	retlw	13
   614  0811                     __end_of_FINAL_DAY:	
   615  0811                     _FINAL_MONTH:	
   616  0811  3406               	retlw	6
   617  0812                     __end_of_FINAL_MONTH:	
   618  0812                     _UN_BLOCKED:	
   619  0812  3401               	retlw	1
   620  0813                     __end_of_UN_BLOCKED:	
   621  0813                     _BLOCKED:	
   622  0813  3400               	retlw	0
   623  0814                     __end_of_BLOCKED:	
   624  0006                     _PORTBbits	set	6
   625  000E                     _TMR1L	set	14
   626  000F                     _TMR1H	set	15
   627  000C                     _PIR1bits	set	12
   628  0007                     _PORTCbits	set	7
   629  0010                     _T1CONbits	set	16
   630  001F                     _ADCON0	set	31
   631  0010                     _T1CON	set	16
   632  0007                     _PORTC	set	7
   633  0006                     _PORTB	set	6
   634  0005                     _PORTA	set	5
   635  000B                     _INTCON	set	11
   636  0005                     _PORTAbits	set	5
   637  000D                     _PIR2bits	set	13
   638  000B                     _INTCONbits	set	11
   639  0086                     _TRISBbits	set	134
   640  009F                     _ADCON1	set	159
   641  0087                     _TRISC	set	135
   642  0086                     _TRISB	set	134
   643  0085                     _TRISA	set	133
   644  008C                     _PIE1	set	140
   645  010C                     _EEDATA	set	268
   646  010D                     _EEADR	set	269
   647  0189                     _ANSELH	set	393
   648  0188                     _ANSEL	set	392
   649  018D                     _EECON2	set	397
   650  018C                     _EECON1bits	set	396
   651  0814                     STR_2:	
   652  0814  3446               	retlw	70	;'F'
   653  0815  3452               	retlw	82	;'R'
   654  0816  3445               	retlw	69	;'E'
   655  0817  3451               	retlw	81	;'Q'
   656  0818  342E               	retlw	46	;'.'
   657  0819  3420               	retlw	32	;' '
   658  081A  3420               	retlw	32	;' '
   659  081B  3425               	retlw	37	;'%'
   660  081C  3433               	retlw	51	;'3'
   661  081D  3464               	retlw	100	;'d'
   662  081E  342E               	retlw	46	;'.'
   663  081F  3425               	retlw	37	;'%'
   664  0820  3464               	retlw	100	;'d'
   665  0821  3420               	retlw	32	;' '
   666  0822  344D               	retlw	77	;'M'
   667  0823  3448               	retlw	72	;'H'
   668  0824  347A               	retlw	122	;'z'
   669  0825  3400               	retlw	0
   670  0826                     STR_10:	
   671  0826  344C               	retlw	76	;'L'
   672  0827  344F               	retlw	79	;'O'
   673  0828  3443               	retlw	67	;'C'
   674  0829  344B               	retlw	75	;'K'
   675  082A  3449               	retlw	73	;'I'
   676  082B  344E               	retlw	78	;'N'
   677  082C  3447               	retlw	71	;'G'
   678  082D  3420               	retlw	32	;' '
   679  082E  3420               	retlw	32	;' '
   680  082F  3420               	retlw	32	;' '
   681  0830  3420               	retlw	32	;' '
   682  0831  3420               	retlw	32	;' '
   683  0832  3420               	retlw	32	;' '
   684  0833  3420               	retlw	32	;' '
   685  0834  3420               	retlw	32	;' '
   686  0835  3420               	retlw	32	;' '
   687  0836  3400               	retlw	0
   688  0837                     STR_3:	
   689  0837  3454               	retlw	84	;'T'
   690  0838  3445               	retlw	69	;'E'
   691  0839  3453               	retlw	83	;'S'
   692  083A  3454               	retlw	84	;'T'
   693  083B  3449               	retlw	73	;'I'
   694  083C  344E               	retlw	78	;'N'
   695  083D  3447               	retlw	71	;'G'
   696  083E  3420               	retlw	32	;' '
   697  083F  3420               	retlw	32	;' '
   698  0840  3420               	retlw	32	;' '
   699  0841  3420               	retlw	32	;' '
   700  0842  3420               	retlw	32	;' '
   701  0843  3420               	retlw	32	;' '
   702  0844  3420               	retlw	32	;' '
   703  0845  3420               	retlw	32	;' '
   704  0846  3420               	retlw	32	;' '
   705  0847  3400               	retlw	0
   706  0848                     STR_9:	
   707  0848  3453               	retlw	83	;'S'
   708  0849  3445               	retlw	69	;'E'
   709  084A  3454               	retlw	84	;'T'
   710  084B  3420               	retlw	32	;' '
   711  084C  3420               	retlw	32	;' '
   712  084D  3420               	retlw	32	;' '
   713  084E  3446               	retlw	70	;'F'
   714  084F  3452               	retlw	82	;'R'
   715  0850  3445               	retlw	69	;'E'
   716  0851  3451               	retlw	81	;'Q'
   717  0852  3455               	retlw	85	;'U'
   718  0853  3445               	retlw	69	;'E'
   719  0854  344E               	retlw	78	;'N'
   720  0855  3443               	retlw	67	;'C'
   721  0856  3459               	retlw	89	;'Y'
   722  0857  3420               	retlw	32	;' '
   723  0858  3400               	retlw	0
   724  0859                     STR_6:	
   725  0859  3420               	retlw	32	;' '
   726  085A  3420               	retlw	32	;' '
   727  085B  3420               	retlw	32	;' '
   728  085C  3420               	retlw	32	;' '
   729  085D  3420               	retlw	32	;' '
   730  085E  3454               	retlw	84	;'T'
   731  085F  3445               	retlw	69	;'E'
   732  0860  344D               	retlw	77	;'M'
   733  0861  3450               	retlw	80	;'P'
   734  0862  3445               	retlw	69	;'E'
   735  0863  3452               	retlw	82	;'R'
   736  0864  3441               	retlw	65	;'A'
   737  0865  3454               	retlw	84	;'T'
   738  0866  3455               	retlw	85	;'U'
   739  0867  3452               	retlw	82	;'R'
   740  0868  3445               	retlw	69	;'E'
   741  0869  3400               	retlw	0
   742  086A                     STR_1:	
   743  086A  3441               	retlw	65	;'A'
   744  086B  344D               	retlw	77	;'M'
   745  086C  3450               	retlw	80	;'P'
   746  086D  3452               	retlw	82	;'R'
   747  086E  344F               	retlw	79	;'O'
   748  086F  3420               	retlw	32	;' '
   749  0870  3420               	retlw	32	;' '
   750  0871  3420               	retlw	32	;' '
   751  0872  3420               	retlw	32	;' '
   752  0873  3420               	retlw	32	;' '
   753  0874  3420               	retlw	32	;' '
   754  0875  3445               	retlw	69	;'E'
   755  0876  3458               	retlw	88	;'X'
   756  0877  342D               	retlw	45	;'-'
   757  0878  3446               	retlw	70	;'F'
   758  0879  344D               	retlw	77	;'M'
   759  087A  3400               	retlw	0
   760  087B                     STR_8:	
   761  087B  3420               	retlw	32	;' '
   762  087C  3420               	retlw	32	;' '
   763  087D  3420               	retlw	32	;' '
   764  087E  3420               	retlw	32	;' '
   765  087F  3420               	retlw	32	;' '
   766  0880  3420               	retlw	32	;' '
   767  0881  3420               	retlw	32	;' '
   768  0882  3420               	retlw	32	;' '
   769  0883  3420               	retlw	32	;' '
   770  0884  3420               	retlw	32	;' '
   771  0885  3420               	retlw	32	;' '
   772  0886  3420               	retlw	32	;' '
   773  0887  3420               	retlw	32	;' '
   774  0888  3453               	retlw	83	;'S'
   775  0889  3457               	retlw	87	;'W'
   776  088A  3452               	retlw	82	;'R'
   777  088B  3400               	retlw	0
   778  088C                     STR_11:	
   779  088C  3420               	retlw	32	;' '
   780  088D  3420               	retlw	32	;' '
   781  088E  3420               	retlw	32	;' '
   782  088F  3420               	retlw	32	;' '
   783  0890  3420               	retlw	32	;' '
   784  0891  3420               	retlw	32	;' '
   785  0892  3420               	retlw	32	;' '
   786  0893  3446               	retlw	70	;'F'
   787  0894  3452               	retlw	82	;'R'
   788  0895  3445               	retlw	69	;'E'
   789  0896  3451               	retlw	81	;'Q'
   790  0897  3455               	retlw	85	;'U'
   791  0898  3445               	retlw	69	;'E'
   792  0899  344E               	retlw	78	;'N'
   793  089A  3443               	retlw	67	;'C'
   794  089B  3459               	retlw	89	;'Y'
   795  089C  3400               	retlw	0
   796  089D                     STR_4:	
   797  089D  3420               	retlw	32	;' '
   798  089E  3420               	retlw	32	;' '
   799  089F  3420               	retlw	32	;' '
   800  08A0  3420               	retlw	32	;' '
   801  08A1  3420               	retlw	32	;' '
   802  08A2  3420               	retlw	32	;' '
   803  08A3  3420               	retlw	32	;' '
   804  08A4  3420               	retlw	32	;' '
   805  08A5  3420               	retlw	32	;' '
   806  08A6  3420               	retlw	32	;' '
   807  08A7  3453               	retlw	83	;'S'
   808  08A8  3455               	retlw	85	;'U'
   809  08A9  3450               	retlw	80	;'P'
   810  08AA  3450               	retlw	80	;'P'
   811  08AB  344C               	retlw	76	;'L'
   812  08AC  3459               	retlw	89	;'Y'
   813  08AD  3400               	retlw	0
   814  0837                     
   815                           ; #config settings
   816  0000                     
   817                           	psect	cinit
   818  0015                     start_initialization:	
   819  0015                     __initialization:	
   820                           
   821                           ; Initialize objects allocated to BANK0
   822  0015  1383               	bcf	3,7	;select IRP bank0
   823  0016  3053               	movlw	low (__pdataBANK0+7)
   824  0017  00FD               	movwf	btemp+-1
   825  0018  3009               	movlw	high __pidataBANK0
   826  0019  00FE               	movwf	btemp
   827  001A  3071               	movlw	low __pidataBANK0
   828  001B  00FF               	movwf	btemp+1
   829  001C  304C               	movlw	low __pdataBANK0
   830  001D  0084               	movwf	4
   831  001E  120A  158A  21DD  120A  118A  	fcall	init_ram0
   832                           
   833                           ; Clear objects allocated to BANK1
   834  0023  30A0               	movlw	low __pbssBANK1
   835  0024  0084               	movwf	4
   836  0025  30C3               	movlw	low (__pbssBANK1+35)
   837  0026  120A  158A  2178  120A  118A  	fcall	clear_ram0
   838                           
   839                           ; Clear objects allocated to BANK0
   840  002B  3044               	movlw	low __pbssBANK0
   841  002C  0084               	movwf	4
   842  002D  304C               	movlw	low (__pbssBANK0+8)
   843  002E  120A  158A  2178   	fcall	clear_ram0
   844  0031                     end_of_initialization:	
   845                           ;End of C runtime variable initialization code
   846                           
   847  0031                     __end_of__initialization:	
   848  0031  0183               	clrf	3
   849  0032  120A  118A  2D9B   	ljmp	_main	;jump to C main() function
   850                           
   851                           	psect	bssBANK0
   852  0044                     __pbssBANK0:	
   853  0044                     _frequency:	
   854  0044                     	ds	2
   855  0046                     _level:	
   856  0046                     	ds	1
   857  0047                     _isOnConfig:	
   858  0047                     	ds	1
   859  0048                     _functionalStat:	
   860  0048                     	ds	1
   861  0049                     _hundredMiliSeconds:	
   862  0049                     	ds	1
   863  004A                     _seconds:	
   864  004A                     	ds	1
   865  004B                     _cntTmr1:	
   866  004B                     	ds	1
   867                           
   868                           	psect	dataBANK0
   869  004C                     __pdataBANK0:	
   870  004C                     _stereoEnable:	
   871  004C                     	ds	1
   872  004D                     _minutes:	
   873  004D                     	ds	1
   874  004E                     _hours:	
   875  004E                     	ds	1
   876  004F                     _days:	
   877  004F                     	ds	1
   878  0050                     _months:	
   879  0050                     	ds	1
   880  0051                     _prTmr1H:	
   881  0051                     	ds	1
   882  0052                     _prTmr1L:	
   883  0052                     	ds	1
   884                           
   885                           	psect	bssBANK1
   886  00A0                     __pbssBANK1:	
   887  00A0                     _i:	
   888  00A0                     	ds	1
   889  00A1                     _lineTwo:	
   890  00A1                     	ds	17
   891  00B2                     _lineOne:	
   892  00B2                     	ds	17
   893                           
   894                           	psect	inittext
   895  09D9                     init_fetch0:	
   896                           ;	Called with low address in FSR and high address in W
   897                           
   898  09D9  087E               	movf	126,w
   899  09DA  008A               	movwf	10
   900  09DB  087F               	movf	127,w
   901  09DC  0082               	movwf	2
   902  09DD                     init_ram0:	
   903                           ;Called with:
   904                           ;	high address of idata address in btemp 
   905                           ;	low address of idata address in btemp+1 
   906                           ;	low address of data in FSR
   907                           ;	high address + 1 of data in btemp-1
   908                           
   909  09DD  21D9  120A  158A   	fcall	init_fetch0
   910  09E0  0080               	movwf	0
   911  09E1  0A84               	incf	4,f
   912  09E2  0804               	movf	4,w
   913  09E3  067D               	xorwf	125,w
   914  09E4  1903               	btfsc	3,2
   915  09E5  3400               	retlw	0
   916  09E6  0AFF               	incf	127,f
   917  09E7  1903               	btfsc	3,2
   918  09E8  0AFE               	incf	126,f
   919  09E9  29DD               	goto	init_ram0
   920                           
   921                           	psect	clrtext
   922  0978                     clear_ram0:	
   923                           ;	Called with FSR containing the base address, and
   924                           ;	W with the last address+1
   925                           
   926  0978  0064               	clrwdt	;clear the watchdog before getting into this loop
   927  0979                     clrloop0:	
   928  0979  0180               	clrf	0	;clear RAM location pointed to by FSR
   929  097A  0A84               	incf	4,f	;increment pointer
   930  097B  0604               	xorwf	4,w	;XOR with final address
   931  097C  1903               	btfsc	3,2	;have we reached the end yet?
   932  097D  3400               	retlw	0	;all done for this memory range, return
   933  097E  0604               	xorwf	4,w	;XOR again to restore value
   934  097F  2979               	goto	clrloop0	;do the next byte
   935                           
   936                           	psect	cstackBANK1
   937  00C3                     __pcstackBANK1:	
   938  00C3                     ?_beep:	
   939  00C3                     ??_initLCD:	
   940                           ; 1 bytes @ 0x0
   941                           
   942  00C3                     ___lwdiv@counter:	
   943                           ; 1 bytes @ 0x0
   944                           
   945  00C3                     beep@ms:	
   946                           ; 1 bytes @ 0x0
   947                           
   948  00C3                     writeFrequency@buffer:	
   949                           ; 2 bytes @ 0x0
   950                           
   951                           
   952                           ; 2 bytes @ 0x0
   953  00C3                     	ds	1
   954  00C4                     ___lwdiv@quotient:	
   955                           
   956                           ; 2 bytes @ 0x1
   957  00C4                     	ds	1
   958  00C5                     writeFrequency@r:	
   959                           
   960                           ; 2 bytes @ 0x2
   961  00C5                     	ds	1
   962  00C6                     ?___lwmod:	
   963  00C6                     ___lwmod@divisor:	
   964                           ; 2 bytes @ 0x3
   965                           
   966                           
   967                           ; 2 bytes @ 0x3
   968  00C6                     	ds	1
   969  00C7                     writeFrequency@i:	
   970                           
   971                           ; 1 bytes @ 0x4
   972  00C7                     	ds	1
   973  00C8                     ?_setTransStat:	
   974  00C8                     setTransStat@stat:	
   975                           ; 1 bytes @ 0x5
   976                           
   977  00C8                     ___lwmod@dividend:	
   978                           ; 2 bytes @ 0x5
   979                           
   980                           
   981                           ; 2 bytes @ 0x5
   982  00C8                     	ds	2
   983  00CA                     ??_setTransStat:	
   984  00CA                     ?_sprintf:	
   985                           ; 1 bytes @ 0x7
   986                           
   987  00CA                     sprintf@f:	
   988                           ; 2 bytes @ 0x7
   989                           
   990                           
   991                           ; 1 bytes @ 0x7
   992  00CA                     	ds	5
   993  00CF                     ??_sprintf:	
   994                           
   995                           ; 1 bytes @ 0xC
   996  00CF                     	ds	3
   997  00D2                     sprintf@ap:	
   998                           
   999                           ; 1 bytes @ 0xF
  1000  00D2                     	ds	1
  1001  00D3                     sprintf@prec:	
  1002                           
  1003                           ; 1 bytes @ 0x10
  1004  00D3                     	ds	1
  1005  00D4                     sprintf@flag:	
  1006                           
  1007                           ; 1 bytes @ 0x11
  1008  00D4                     	ds	1
  1009  00D5                     sprintf@val:	
  1010                           
  1011                           ; 2 bytes @ 0x12
  1012  00D5                     	ds	2
  1013  00D7                     sprintf@width:	
  1014                           
  1015                           ; 2 bytes @ 0x14
  1016  00D7                     	ds	2
  1017  00D9                     sprintf@sp:	
  1018                           
  1019                           ; 1 bytes @ 0x16
  1020  00D9                     	ds	1
  1021  00DA                     sprintf@c:	
  1022                           
  1023                           ; 1 bytes @ 0x17
  1024  00DA                     	ds	1
  1025  00DB                     ??_setFrequency:	
  1026  00DB                     ??_start:	
  1027                           ; 1 bytes @ 0x18
  1028                           
  1029                           
  1030                           ; 1 bytes @ 0x18
  1031  00DB                     	ds	3
  1032  00DE                     start@i:	
  1033                           
  1034                           ; 1 bytes @ 0x1B
  1035  00DE                     	ds	1
  1036  00DF                     ??_main:	
  1037                           
  1038                           ; 1 bytes @ 0x1C
  1039  00DF                     	ds	5
  1040  00E4                     main@decim:	
  1041                           
  1042                           ; 1 bytes @ 0x21
  1043  00E4                     	ds	1
  1044  00E5                     main@integ:	
  1045                           
  1046                           ; 1 bytes @ 0x22
  1047  00E5                     	ds	1
  1048                           
  1049                           	psect	cstackCOMMON
  1050  0070                     __pcstackCOMMON:	
  1051  0070                     ?_isdigit:	
  1052  0070                     ?i1_isdigit:	
  1053                           ; 1 bit 
  1054                           
  1055  0070                     ?_config:	
  1056                           ; 1 bit 
  1057                           
  1058  0070                     ?_setFrequency:	
  1059                           ; 1 bytes @ 0x0
  1060                           
  1061  0070                     ?_start:	
  1062                           ; 1 bytes @ 0x0
  1063                           
  1064  0070                     ?_SetDDRamAddr:	
  1065                           ; 1 bytes @ 0x0
  1066                           
  1067  0070                     ?_putrsXLCD:	
  1068                           ; 1 bytes @ 0x0
  1069                           
  1070  0070                     ?_putsXLCD:	
  1071                           ; 1 bytes @ 0x0
  1072                           
  1073  0070                     ?_initLCD:	
  1074                           ; 1 bytes @ 0x0
  1075                           
  1076  0070                     ?_time:	
  1077                           ; 1 bytes @ 0x0
  1078                           
  1079  0070                     ?_updateLCD:	
  1080                           ; 1 bytes @ 0x0
  1081                           
  1082  0070                     ?_WriteCmdXLCD:	
  1083                           ; 1 bytes @ 0x0
  1084                           
  1085  0070                     ?_BusyXLCD:	
  1086                           ; 1 bytes @ 0x0
  1087                           
  1088  0070                     ?_SendCMDLCD:	
  1089                           ; 1 bytes @ 0x0
  1090                           
  1091  0070                     ?_readEEPROM:	
  1092                           ; 1 bytes @ 0x0
  1093                           
  1094  0070                     ?_getData:	
  1095                           ; 1 bytes @ 0x0
  1096                           
  1097  0070                     ?_setData:	
  1098                           ; 1 bytes @ 0x0
  1099                           
  1100  0070                     ?_main:	
  1101                           ; 1 bytes @ 0x0
  1102                           
  1103  0070                     ?_inter:	
  1104                           ; 1 bytes @ 0x0
  1105                           
  1106  0070                     ?_DelayFor18TCY:	
  1107                           ; 1 bytes @ 0x0
  1108                           
  1109  0070                     ?_DelayPORXLCD:	
  1110                           ; 1 bytes @ 0x0
  1111                           
  1112  0070                     ?_OpenXLCD:	
  1113                           ; 1 bytes @ 0x0
  1114                           
  1115  0070                     ?_WriteDataXLCD:	
  1116                           ; 1 bytes @ 0x0
  1117                           
  1118  0070                     ?i1_writeEEPROM:	
  1119                           ; 1 bytes @ 0x0
  1120                           
  1121  0070                     ?i1_setData:	
  1122                           ; 1 bytes @ 0x0
  1123                           
  1124  0070                     ?i1_DelayFor18TCY:	
  1125                           ; 1 bytes @ 0x0
  1126                           
  1127  0070                     ??i1_DelayFor18TCY:	
  1128                           ; 1 bytes @ 0x0
  1129                           
  1130  0070                     ?i1_WriteDataXLCD:	
  1131                           ; 1 bytes @ 0x0
  1132                           
  1133  0070                     ?i1_SetDDRamAddr:	
  1134                           ; 1 bytes @ 0x0
  1135                           
  1136  0070                     ?i1_putsXLCD:	
  1137                           ; 1 bytes @ 0x0
  1138                           
  1139  0070                     ?i1_BusyXLCD:	
  1140                           ; 1 bytes @ 0x0
  1141                           
  1142  0070                     ??i1_BusyXLCD:	
  1143                           ; 1 bytes @ 0x0
  1144                           
  1145  0070                     ??i1_isdigit:	
  1146                           ; 1 bytes @ 0x0
  1147                           
  1148  0070                     ?i1___wmul:	
  1149                           ; 1 bytes @ 0x0
  1150                           
  1151  0070                     ?i1___lwdiv:	
  1152                           ; 2 bytes @ 0x0
  1153                           
  1154  0070                     i1writeEEPROM@address:	
  1155                           ; 2 bytes @ 0x0
  1156                           
  1157  0070                     i1_isdigit$1093:	
  1158                           ; 1 bytes @ 0x0
  1159                           
  1160  0070                     i1___wmul@multiplier:	
  1161                           ; 1 bytes @ 0x0
  1162                           
  1163  0070                     i1___lwdiv@divisor:	
  1164                           ; 2 bytes @ 0x0
  1165                           
  1166                           
  1167                           ; 2 bytes @ 0x0
  1168  0070                     	ds	1
  1169  0071                     ??i1_writeEEPROM:	
  1170  0071                     ??i1_WriteDataXLCD:	
  1171                           ; 1 bytes @ 0x1
  1172                           
  1173  0071                     ??i1_SetDDRamAddr:	
  1174                           ; 1 bytes @ 0x1
  1175                           
  1176  0071                     i1writeEEPROM@data:	
  1177                           ; 1 bytes @ 0x1
  1178                           
  1179  0071                     i1isdigit@c:	
  1180                           ; 1 bytes @ 0x1
  1181                           
  1182                           
  1183                           ; 1 bytes @ 0x1
  1184  0071                     	ds	1
  1185  0072                     ??i1_setData:	
  1186  0072                     i1___wmul@multiplicand:	
  1187                           ; 1 bytes @ 0x2
  1188                           
  1189  0072                     i1___lwdiv@dividend:	
  1190                           ; 2 bytes @ 0x2
  1191                           
  1192                           
  1193                           ; 2 bytes @ 0x2
  1194  0072                     	ds	1
  1195  0073                     i1setData@data0:	
  1196  0073                     i1WriteDataXLCD@data:	
  1197                           ; 1 bytes @ 0x3
  1198                           
  1199  0073                     i1SetDDRamAddr@DDaddr:	
  1200                           ; 1 bytes @ 0x3
  1201                           
  1202                           
  1203                           ; 1 bytes @ 0x3
  1204  0073                     	ds	1
  1205  0074                     ??i1_putsXLCD:	
  1206  0074                     ??i1___wmul:	
  1207                           ; 1 bytes @ 0x4
  1208                           
  1209  0074                     ??i1___lwdiv:	
  1210                           ; 1 bytes @ 0x4
  1211                           
  1212  0074                     i1setData@data1:	
  1213                           ; 1 bytes @ 0x4
  1214                           
  1215  0074                     i1___wmul@product:	
  1216                           ; 1 bytes @ 0x4
  1217                           
  1218                           
  1219                           ; 2 bytes @ 0x4
  1220  0074                     	ds	1
  1221  0075                     i1setData@full:	
  1222  0075                     i1putsXLCD@buffer:	
  1223                           ; 1 bytes @ 0x5
  1224                           
  1225  0075                     i1___lwdiv@quotient:	
  1226                           ; 1 bytes @ 0x5
  1227                           
  1228                           
  1229                           ; 2 bytes @ 0x5
  1230  0075                     	ds	1
  1231  0076                     ??_time:	
  1232                           
  1233                           ; 1 bytes @ 0x6
  1234  0076                     	ds	1
  1235  0077                     i1___lwdiv@counter:	
  1236                           
  1237                           ; 1 bytes @ 0x7
  1238  0077                     	ds	1
  1239  0078                     ?i1___lwmod:	
  1240  0078                     i1___lwmod@divisor:	
  1241                           ; 2 bytes @ 0x8
  1242                           
  1243                           
  1244                           ; 2 bytes @ 0x8
  1245  0078                     	ds	2
  1246  007A                     i1___lwmod@dividend:	
  1247                           
  1248                           ; 2 bytes @ 0xA
  1249  007A                     	ds	2
  1250  007C                     ??i1___lwmod:	
  1251                           
  1252                           ; 1 bytes @ 0xC
  1253  007C                     	ds	1
  1254  007D                     i1___lwmod@counter:	
  1255                           
  1256                           ; 1 bytes @ 0xD
  1257  007D                     	ds	1
  1258                           
  1259                           	psect	cstackBANK0
  1260  0020                     __pcstackBANK0:	
  1261  0020                     ?i1_sprintf:	
  1262  0020                     i1sprintf@f:	
  1263                           ; 2 bytes @ 0x0
  1264                           
  1265                           
  1266                           ; 1 bytes @ 0x0
  1267  0020                     	ds	5
  1268  0025                     ??i1_sprintf:	
  1269                           
  1270                           ; 1 bytes @ 0x5
  1271  0025                     	ds	3
  1272  0028                     i1sprintf@ap:	
  1273                           
  1274                           ; 1 bytes @ 0x8
  1275  0028                     	ds	1
  1276  0029                     i1sprintf@prec:	
  1277                           
  1278                           ; 1 bytes @ 0x9
  1279  0029                     	ds	1
  1280  002A                     i1sprintf@flag:	
  1281                           
  1282                           ; 1 bytes @ 0xA
  1283  002A                     	ds	1
  1284  002B                     i1sprintf@val:	
  1285                           
  1286                           ; 2 bytes @ 0xB
  1287  002B                     	ds	2
  1288  002D                     i1sprintf@sp:	
  1289                           
  1290                           ; 1 bytes @ 0xD
  1291  002D                     	ds	1
  1292  002E                     i1sprintf@width:	
  1293                           
  1294                           ; 2 bytes @ 0xE
  1295  002E                     	ds	2
  1296  0030                     i1sprintf@c:	
  1297                           
  1298                           ; 1 bytes @ 0x10
  1299  0030                     	ds	1
  1300  0031                     ??_updateLCD:	
  1301                           
  1302                           ; 1 bytes @ 0x11
  1303  0031                     	ds	5
  1304  0036                     updateLCD@decim:	
  1305                           
  1306                           ; 1 bytes @ 0x16
  1307  0036                     	ds	1
  1308  0037                     updateLCD@integ:	
  1309                           
  1310                           ; 1 bytes @ 0x17
  1311  0037                     	ds	1
  1312  0038                     ??_inter:	
  1313                           
  1314                           ; 1 bytes @ 0x18
  1315  0038                     	ds	5
  1316  003D                     ??_BusyXLCD:	
  1317  003D                     ??_isdigit:	
  1318                           ; 1 bytes @ 0x1D
  1319                           
  1320  003D                     ??_readEEPROM:	
  1321                           ; 1 bytes @ 0x1D
  1322                           
  1323  003D                     ?_writeEEPROM:	
  1324                           ; 1 bytes @ 0x1D
  1325                           
  1326  003D                     ??_DelayFor18TCY:	
  1327                           ; 1 bytes @ 0x1D
  1328                           
  1329  003D                     ??_DelayPORXLCD:	
  1330                           ; 1 bytes @ 0x1D
  1331                           
  1332  003D                     ?_codFreq:	
  1333                           ; 1 bytes @ 0x1D
  1334                           
  1335  003D                     ?___wmul:	
  1336                           ; 2 bytes @ 0x1D
  1337                           
  1338  003D                     ?___lwdiv:	
  1339                           ; 2 bytes @ 0x1D
  1340                           
  1341  003D                     readEEPROM@address:	
  1342                           ; 2 bytes @ 0x1D
  1343                           
  1344  003D                     writeEEPROM@address:	
  1345                           ; 1 bytes @ 0x1D
  1346                           
  1347  003D                     _isdigit$1093:	
  1348                           ; 1 bytes @ 0x1D
  1349                           
  1350  003D                     codFreq@f:	
  1351                           ; 1 bytes @ 0x1D
  1352                           
  1353  003D                     ___wmul@multiplier:	
  1354                           ; 2 bytes @ 0x1D
  1355                           
  1356  003D                     ___lwdiv@divisor:	
  1357                           ; 2 bytes @ 0x1D
  1358                           
  1359                           
  1360                           ; 2 bytes @ 0x1D
  1361  003D                     	ds	1
  1362  003E                     ??_SetDDRamAddr:	
  1363  003E                     ??_WriteCmdXLCD:	
  1364                           ; 1 bytes @ 0x1E
  1365                           
  1366  003E                     ??_writeEEPROM:	
  1367                           ; 1 bytes @ 0x1E
  1368                           
  1369  003E                     ??_getData:	
  1370                           ; 1 bytes @ 0x1E
  1371                           
  1372  003E                     ??_WriteDataXLCD:	
  1373                           ; 1 bytes @ 0x1E
  1374                           
  1375  003E                     writeEEPROM@data:	
  1376                           ; 1 bytes @ 0x1E
  1377                           
  1378  003E                     isdigit@c:	
  1379                           ; 1 bytes @ 0x1E
  1380                           
  1381                           
  1382                           ; 1 bytes @ 0x1E
  1383  003E                     	ds	1
  1384  003F                     ?_writeFrequency:	
  1385  003F                     ??_setData:	
  1386                           ; 1 bytes @ 0x1F
  1387                           
  1388  003F                     ??_codFreq:	
  1389                           ; 1 bytes @ 0x1F
  1390                           
  1391  003F                     writeFrequency@f:	
  1392                           ; 1 bytes @ 0x1F
  1393                           
  1394  003F                     ___wmul@multiplicand:	
  1395                           ; 2 bytes @ 0x1F
  1396                           
  1397  003F                     ___lwdiv@dividend:	
  1398                           ; 2 bytes @ 0x1F
  1399                           
  1400                           
  1401                           ; 2 bytes @ 0x1F
  1402  003F                     	ds	1
  1403  0040                     setData@data0:	
  1404  0040                     WriteDataXLCD@data:	
  1405                           ; 1 bytes @ 0x20
  1406                           
  1407  0040                     WriteCmdXLCD@cmd:	
  1408                           ; 1 bytes @ 0x20
  1409                           
  1410  0040                     SetDDRamAddr@DDaddr:	
  1411                           ; 1 bytes @ 0x20
  1412                           
  1413                           
  1414                           ; 1 bytes @ 0x20
  1415  0040                     	ds	1
  1416  0041                     ??_writeFrequency:	
  1417  0041                     ??_putrsXLCD:	
  1418                           ; 1 bytes @ 0x21
  1419                           
  1420  0041                     ??_putsXLCD:	
  1421                           ; 1 bytes @ 0x21
  1422                           
  1423  0041                     ??_SendCMDLCD:	
  1424                           ; 1 bytes @ 0x21
  1425                           
  1426  0041                     ??_OpenXLCD:	
  1427                           ; 1 bytes @ 0x21
  1428                           
  1429  0041                     ??___wmul:	
  1430                           ; 1 bytes @ 0x21
  1431                           
  1432  0041                     ??___lwdiv:	
  1433                           ; 1 bytes @ 0x21
  1434                           
  1435  0041                     setData@data1:	
  1436                           ; 1 bytes @ 0x21
  1437                           
  1438  0041                     SendCMDLCD@CMD:	
  1439                           ; 1 bytes @ 0x21
  1440                           
  1441  0041                     ___wmul@product:	
  1442                           ; 1 bytes @ 0x21
  1443                           
  1444                           
  1445                           ; 2 bytes @ 0x21
  1446  0041                     	ds	1
  1447  0042                     ??___lwmod:	
  1448  0042                     getData@aux0:	
  1449                           ; 1 bytes @ 0x22
  1450                           
  1451  0042                     setData@full:	
  1452                           ; 1 bytes @ 0x22
  1453                           
  1454  0042                     putsXLCD@buffer:	
  1455                           ; 1 bytes @ 0x22
  1456                           
  1457  0042                     putrsXLCD@buffer:	
  1458                           ; 1 bytes @ 0x22
  1459                           
  1460                           
  1461                           ; 1 bytes @ 0x22
  1462  0042                     	ds	1
  1463  0043                     ??_beep:	
  1464  0043                     getData@aux1:	
  1465                           ; 1 bytes @ 0x23
  1466                           
  1467  0043                     OpenXLCD@lcdtype:	
  1468                           ; 1 bytes @ 0x23
  1469                           
  1470  0043                     ___lwmod@counter:	
  1471                           ; 1 bytes @ 0x23
  1472                           
  1473                           
  1474                           ; 1 bytes @ 0x23
  1475  0043                     	ds	1
  1476  0044                     ??_config:	
  1477                           
  1478                           	psect	maintext
  1479  059B                     __pmaintext:	
  1480                           ; 1 bytes @ 0x24
  1481 ;;
  1482 ;;Main: autosize = 0, tempsize = 5, incstack = 0, save=0
  1483 ;;
  1484 ;; *************** function _main *****************
  1485 ;; Defined at:
  1486 ;;		line 5 in file "main.c"
  1487 ;; Parameters:    Size  Location     Type
  1488 ;;		None
  1489 ;; Auto vars:     Size  Location     Type
  1490 ;;  integ           1   34[BANK1 ] unsigned char 
  1491 ;;  decim           1   33[BANK1 ] unsigned char 
  1492 ;;  index           1    0        unsigned char 
  1493 ;; Return value:  Size  Location     Type
  1494 ;;                  1    wreg      void 
  1495 ;; Registers used:
  1496 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1497 ;; Tracked objects:
  1498 ;;		On entry : B00/0
  1499 ;;		On exit  : 0/0
  1500 ;;		Unchanged: 0/0
  1501 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1502 ;;      Params:         0       0       0       0       0
  1503 ;;      Locals:         0       0       2       0       0
  1504 ;;      Temps:          0       0       5       0       0
  1505 ;;      Totals:         0       0       7       0       0
  1506 ;;Total ram usage:        7 bytes
  1507 ;; Hardware stack levels required when called:   10
  1508 ;; This function calls:
  1509 ;;		_SetDDRamAddr
  1510 ;;		___lwdiv
  1511 ;;		___lwmod
  1512 ;;		_beep
  1513 ;;		_config
  1514 ;;		_getData
  1515 ;;		_putrsXLCD
  1516 ;;		_putsXLCD
  1517 ;;		_setFrequency
  1518 ;;		_setTransStat
  1519 ;;		_sprintf
  1520 ;;		_start
  1521 ;;		_writeFrequency
  1522 ;; This function is called by:
  1523 ;;		Startup code after reset
  1524 ;; This function uses a non-reentrant model
  1525 ;;
  1526                           
  1527                           
  1528                           ;psect for function _main
  1529  059B                     _main:	
  1530                           
  1531                           ;main.c: 6:     unsigned char index;;main.c: 7:     _delay((unsigned long)((100)*(400000
      +                          0/4000.0)));
  1532                           
  1533                           ;incstack = 0
  1534 ;; hardware stack exceeded
  1535                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1536  059B  3082               	movlw	130
  1537  059C  1683               	bsf	3,5	;RP0=1, select bank1
  1538  059D  1303               	bcf	3,6	;RP1=0, select bank1
  1539  059E  00E0               	movwf	(??_main^(0+128)+1)
  1540  059F  30DD               	movlw	221
  1541  05A0  00DF               	movwf	??_main^(0+128)
  1542  05A1                     u3497:	
  1543  05A1  0BDF               	decfsz	??_main^(0+128),f
  1544  05A2  2DA1               	goto	u3497
  1545  05A3  0BE0               	decfsz	(??_main^(0+128)+1),f
  1546  05A4  2DA1               	goto	u3497
  1547                           
  1548                           ;main.c: 8:     config();
  1549  05A5  120A  158A  2318  120A  118A  	fcall	_config
  1550                           
  1551                           ;main.c: 9:     beep(100);
  1552  05AA  3064               	movlw	100
  1553  05AB  1683               	bsf	3,5	;RP0=1, select bank1
  1554  05AC  1303               	bcf	3,6	;RP1=0, select bank1
  1555  05AD  00C3               	movwf	beep@ms^(0+128)
  1556  05AE  3000               	movlw	0
  1557  05AF  00C4               	movwf	(beep@ms^(0+128)+1)
  1558  05B0  120A  158A  24BB  120A  118A  	fcall	_beep
  1559                           
  1560                           ;main.c: 10:     getData();
  1561  05B5  120A  158A  2746  120A  118A  	fcall	_getData
  1562                           
  1563                           ;main.c: 11:     beep(10);
  1564  05BA  300A               	movlw	10
  1565  05BB  1683               	bsf	3,5	;RP0=1, select bank1
  1566  05BC  1303               	bcf	3,6	;RP1=0, select bank1
  1567  05BD  00C3               	movwf	beep@ms^(0+128)
  1568  05BE  3000               	movlw	0
  1569  05BF  00C4               	movwf	(beep@ms^(0+128)+1)
  1570  05C0  120A  158A  24BB  120A  118A  	fcall	_beep
  1571                           
  1572                           ;main.c: 12:     if(!PORTAbits.RA4){
  1573  05C5  1283               	bcf	3,5	;RP0=0, select bank0
  1574  05C6  1303               	bcf	3,6	;RP1=0, select bank0
  1575  05C7  1A05               	btfsc	5,4	;volatile
  1576  05C8  2DDD               	goto	l3936
  1577                           
  1578                           ;main.c: 13:         _delay((unsigned long)((25)*(4000000/4000.0)));
  1579  05C9  3021               	movlw	33
  1580  05CA  1683               	bsf	3,5	;RP0=1, select bank1
  1581  05CB  1303               	bcf	3,6	;RP1=0, select bank1
  1582  05CC  00E0               	movwf	(??_main^(0+128)+1)
  1583  05CD  3075               	movlw	117
  1584  05CE  00DF               	movwf	??_main^(0+128)
  1585  05CF                     u3507:	
  1586  05CF  0BDF               	decfsz	??_main^(0+128),f
  1587  05D0  2DCF               	goto	u3507
  1588  05D1  0BE0               	decfsz	(??_main^(0+128)+1),f
  1589  05D2  2DCF               	goto	u3507
  1590  05D3  2DD4               	nop2
  1591                           
  1592                           ;main.c: 14:         if(!PORTAbits.RA4) setFrequency();
  1593  05D4  1283               	bcf	3,5	;RP0=0, select bank0
  1594  05D5  1303               	bcf	3,6	;RP1=0, select bank0
  1595  05D6  1A05               	btfsc	5,4	;volatile
  1596  05D7  2DDD               	goto	l3936
  1597  05D8  120A  118A  2325  120A  118A  	fcall	_setFrequency
  1598  05DD                     l3936:	
  1599                           
  1600                           ;main.c: 16:     _delay((unsigned long)((100)*(4000000/4000.0)));
  1601  05DD  3082               	movlw	130
  1602  05DE  1683               	bsf	3,5	;RP0=1, select bank1
  1603  05DF  1303               	bcf	3,6	;RP1=0, select bank1
  1604  05E0  00E0               	movwf	(??_main^(0+128)+1)
  1605  05E1  30DD               	movlw	221
  1606  05E2  00DF               	movwf	??_main^(0+128)
  1607  05E3                     u3517:	
  1608  05E3  0BDF               	decfsz	??_main^(0+128),f
  1609  05E4  2DE3               	goto	u3517
  1610  05E5  0BE0               	decfsz	(??_main^(0+128)+1),f
  1611  05E6  2DE3               	goto	u3517
  1612                           
  1613                           ;main.c: 17:     writeFrequency(frequency);
  1614  05E7  1283               	bcf	3,5	;RP0=0, select bank0
  1615  05E8  1303               	bcf	3,6	;RP1=0, select bank0
  1616  05E9  0845               	movf	_frequency+1,w
  1617  05EA  00C0               	movwf	writeFrequency@f+1
  1618  05EB  0844               	movf	_frequency,w
  1619  05EC  00BF               	movwf	writeFrequency@f
  1620  05ED  120A  118A  276C  120A  118A  	fcall	_writeFrequency
  1621                           
  1622                           ;main.c: 18:     start();
  1623  05F2  120A  118A  2471  120A  118A  	fcall	_start
  1624                           
  1625                           ;main.c: 20:     SetDDRamAddr(0x00);
  1626  05F7  3000               	movlw	0
  1627  05F8  120A  158A  25EC  120A  118A  	fcall	_SetDDRamAddr
  1628                           
  1629                           ;main.c: 21:     putrsXLCD("AMPRO      EX-FM");
  1630  05FD  3065               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1631  05FE  120A  158A  22EE  120A  118A  	fcall	_putrsXLCD
  1632                           
  1633                           ;main.c: 22:     unsigned char decim = frequency % 10;
  1634  0603  300A               	movlw	10
  1635  0604  1683               	bsf	3,5	;RP0=1, select bank1
  1636  0605  1303               	bcf	3,6	;RP1=0, select bank1
  1637  0606  00C6               	movwf	___lwmod@divisor^(0+128)
  1638  0607  3000               	movlw	0
  1639  0608  00C7               	movwf	(___lwmod@divisor^(0+128)+1)
  1640  0609  1283               	bcf	3,5	;RP0=0, select bank0
  1641  060A  1303               	bcf	3,6	;RP1=0, select bank0
  1642  060B  0845               	movf	_frequency+1,w
  1643  060C  1683               	bsf	3,5	;RP0=1, select bank1
  1644  060D  1303               	bcf	3,6	;RP1=0, select bank1
  1645  060E  00C9               	movwf	(___lwmod@dividend+1)^(0+128)
  1646  060F  1283               	bcf	3,5	;RP0=0, select bank0
  1647  0610  1303               	bcf	3,6	;RP1=0, select bank0
  1648  0611  0844               	movf	_frequency,w
  1649  0612  1683               	bsf	3,5	;RP0=1, select bank1
  1650  0613  1303               	bcf	3,6	;RP1=0, select bank1
  1651  0614  00C8               	movwf	___lwmod@dividend^(0+128)
  1652  0615  120A  158A  23E8  120A  118A  	fcall	___lwmod
  1653  061A  1683               	bsf	3,5	;RP0=1, select bank1
  1654  061B  1303               	bcf	3,6	;RP1=0, select bank1
  1655  061C  0846               	movf	?___lwmod^(0+128),w
  1656  061D  00DF               	movwf	??_main^(0+128)
  1657  061E  085F               	movf	??_main^(0+128),w
  1658  061F  00E4               	movwf	main@decim^(0+128)
  1659                           
  1660                           ;main.c: 23:     unsigned char integ = frequency / 10;
  1661  0620  300A               	movlw	10
  1662  0621  1283               	bcf	3,5	;RP0=0, select bank0
  1663  0622  1303               	bcf	3,6	;RP1=0, select bank0
  1664  0623  00BD               	movwf	___lwdiv@divisor
  1665  0624  3000               	movlw	0
  1666  0625  00BE               	movwf	___lwdiv@divisor+1
  1667  0626  0845               	movf	_frequency+1,w
  1668  0627  00C0               	movwf	___lwdiv@dividend+1
  1669  0628  0844               	movf	_frequency,w
  1670  0629  00BF               	movwf	___lwdiv@dividend
  1671  062A  120A  158A  263A  120A  118A  	fcall	___lwdiv
  1672  062F  1283               	bcf	3,5	;RP0=0, select bank0
  1673  0630  1303               	bcf	3,6	;RP1=0, select bank0
  1674  0631  083D               	movf	?___lwdiv,w
  1675  0632  1683               	bsf	3,5	;RP0=1, select bank1
  1676  0633  1303               	bcf	3,6	;RP1=0, select bank1
  1677  0634  00DF               	movwf	??_main^(0+128)
  1678  0635  085F               	movf	??_main^(0+128),w
  1679  0636  00E5               	movwf	main@integ^(0+128)
  1680                           
  1681                           ;main.c: 24:     sprintf(lineTwo,"FREQ.  %3d.%d MHz",integ, decim);
  1682  0637  300F               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1683  0638  00DF               	movwf	??_main^(0+128)
  1684  0639  085F               	movf	??_main^(0+128),w
  1685  063A  00CA               	movwf	sprintf@f^(0+128)
  1686  063B  0865               	movf	main@integ^(0+128),w
  1687  063C  00E0               	movwf	(??_main+1)^(0+128)
  1688  063D  01E1               	clrf	((??_main+1)^(0+128)+1)
  1689  063E  0860               	movf	(??_main+1)^(0+128),w
  1690  063F  00CB               	movwf	(?_sprintf^(0+128)+1)
  1691  0640  0861               	movf	(??_main+2)^(0+128),w
  1692  0641  00CC               	movwf	((?_sprintf+1)^(0+128)+1)
  1693  0642  0864               	movf	main@decim^(0+128),w
  1694  0643  00E2               	movwf	(??_main+3)^(0+128)
  1695  0644  01E3               	clrf	((??_main+3)^(0+128)+1)
  1696  0645  0862               	movf	(??_main+3)^(0+128),w
  1697  0646  00CD               	movwf	(?_sprintf^(0+128)+3)
  1698  0647  0863               	movf	(??_main+4)^(0+128),w
  1699  0648  00CE               	movwf	((?_sprintf+1)^(0+128)+3)
  1700  0649  30A1               	movlw	(low (_lineTwo| 0))& (0+255)
  1701  064A  120A  118A  2035  120A  118A  	fcall	_sprintf
  1702                           
  1703                           ;main.c: 25:     SetDDRamAddr(0x40);
  1704  064F  3040               	movlw	64
  1705  0650  120A  158A  25EC  120A  118A  	fcall	_SetDDRamAddr
  1706                           
  1707                           ;main.c: 26:     putsXLCD(lineTwo);
  1708  0655  30A1               	movlw	(low (_lineTwo| 0))& (0+255)
  1709  0656  120A  158A  227F  120A  118A  	fcall	_putsXLCD
  1710                           
  1711                           ;main.c: 28:     writeFrequency(frequency);
  1712  065B  1283               	bcf	3,5	;RP0=0, select bank0
  1713  065C  1303               	bcf	3,6	;RP1=0, select bank0
  1714  065D  0845               	movf	_frequency+1,w
  1715  065E  00C0               	movwf	writeFrequency@f+1
  1716  065F  0844               	movf	_frequency,w
  1717  0660  00BF               	movwf	writeFrequency@f
  1718  0661  120A  118A  276C  120A  118A  	fcall	_writeFrequency
  1719  0666                     l3958:	
  1720  0666  1283               	bcf	3,5	;RP0=0, select bank0
  1721  0667  1303               	bcf	3,6	;RP1=0, select bank0
  1722  0668  0348               	decf	_functionalStat,w
  1723  0669  1D03               	btfss	3,2
  1724  066A  2E72               	goto	l3962
  1725                           
  1726                           ;main.c: 31:             setTransStat(1);
  1727  066B  3001               	movlw	1
  1728  066C  1683               	bsf	3,5	;RP0=1, select bank1
  1729  066D  1303               	bcf	3,6	;RP1=0, select bank1
  1730  066E  00C8               	movwf	setTransStat@stat^(0+128)
  1731  066F  3000               	movlw	0
  1732  0670  00C9               	movwf	(setTransStat@stat^(0+128)+1)
  1733  0671  2E77               	goto	L1
  1734  0672                     l3962:	
  1735                           ;main.c: 32:         }else{
  1736                           
  1737                           
  1738                           ;main.c: 33:             setTransStat(0);
  1739  0672  3000               	movlw	0
  1740  0673  1683               	bsf	3,5	;RP0=1, select bank1
  1741  0674  1303               	bcf	3,6	;RP1=0, select bank1
  1742  0675  00C8               	movwf	setTransStat@stat^(0+128)
  1743  0676  00C9               	movwf	(setTransStat@stat+1)^(0+128)
  1744  0677                     L1:	
  1745  0677  120A  158A  2376  120A  118A  	fcall	_setTransStat
  1746                           
  1747                           ;main.c: 35:         if(!PORTAbits.RA4){
  1748  067C  1283               	bcf	3,5	;RP0=0, select bank0
  1749  067D  1303               	bcf	3,6	;RP1=0, select bank0
  1750  067E  1A05               	btfsc	5,4	;volatile
  1751  067F  2E66               	goto	l3958
  1752                           
  1753                           ;main.c: 36:             _delay((unsigned long)((25)*(4000000/4000.0)));
  1754  0680  3021               	movlw	33
  1755  0681  1683               	bsf	3,5	;RP0=1, select bank1
  1756  0682  1303               	bcf	3,6	;RP1=0, select bank1
  1757  0683  00E0               	movwf	(??_main^(0+128)+1)
  1758  0684  3075               	movlw	117
  1759  0685  00DF               	movwf	??_main^(0+128)
  1760  0686                     u3527:	
  1761  0686  0BDF               	decfsz	??_main^(0+128),f
  1762  0687  2E86               	goto	u3527
  1763  0688  0BE0               	decfsz	(??_main^(0+128)+1),f
  1764  0689  2E86               	goto	u3527
  1765  068A  2E8B               	nop2
  1766  068B                     l3968:	
  1767                           
  1768                           ;main.c: 38:                 for(i = 0; i>100; i++){
  1769  068B  1683               	bsf	3,5	;RP0=1, select bank1
  1770  068C  1303               	bcf	3,6	;RP1=0, select bank1
  1771  068D  01A0               	clrf	_i^(0+128)
  1772  068E                     l3970:	
  1773  068E  3065               	movlw	101
  1774  068F  0220               	subwf	_i^(0+128),w
  1775  0690  1C03               	btfss	3,0
  1776  0691  2EAC               	goto	l200
  1777                           
  1778                           ;main.c: 39:                     if(PORTAbits.RA4){
  1779  0692  1283               	bcf	3,5	;RP0=0, select bank0
  1780  0693  1303               	bcf	3,6	;RP1=0, select bank0
  1781  0694  1E05               	btfss	5,4	;volatile
  1782  0695  2EA5               	goto	l3980
  1783                           
  1784                           ;main.c: 40:                         _delay((unsigned long)((25)*(4000000/4000.0)));
  1785  0696  3021               	movlw	33
  1786  0697  1683               	bsf	3,5	;RP0=1, select bank1
  1787  0698  1303               	bcf	3,6	;RP1=0, select bank1
  1788  0699  00E0               	movwf	(??_main^(0+128)+1)
  1789  069A  3075               	movlw	117
  1790  069B  00DF               	movwf	??_main^(0+128)
  1791  069C                     u3537:	
  1792  069C  0BDF               	decfsz	??_main^(0+128),f
  1793  069D  2E9C               	goto	u3537
  1794  069E  0BE0               	decfsz	(??_main^(0+128)+1),f
  1795  069F  2E9C               	goto	u3537
  1796  06A0  2EA1               	nop2
  1797                           
  1798                           ;main.c: 41:                         if(PORTAbits.RA4)break;
  1799  06A1  1283               	bcf	3,5	;RP0=0, select bank0
  1800  06A2  1303               	bcf	3,6	;RP1=0, select bank0
  1801  06A3  1A05               	btfsc	5,4	;volatile
  1802  06A4  2EAC               	goto	l200
  1803  06A5                     l3980:	
  1804                           
  1805                           ;main.c: 43:                 }
  1806  06A5  3001               	movlw	1
  1807  06A6  1683               	bsf	3,5	;RP0=1, select bank1
  1808  06A7  1303               	bcf	3,6	;RP1=0, select bank1
  1809  06A8  00DF               	movwf	??_main^(0+128)
  1810  06A9  085F               	movf	??_main^(0+128),w
  1811  06AA  07A0               	addwf	_i^(0+128),f
  1812  06AB  2E8E               	goto	l3970
  1813  06AC                     l200:	
  1814                           
  1815                           ;main.c: 44:                 INTCONbits.GIE = 0;
  1816  06AC  138B               	bcf	11,7	;volatile
  1817                           
  1818                           ;main.c: 45:                 setFrequency();
  1819  06AD  120A  118A  2325  120A  118A  	fcall	_setFrequency
  1820                           
  1821                           ;main.c: 46:                 INTCONbits.GIE = 1;
  1822  06B2  178B               	bsf	11,7	;volatile
  1823  06B3  2E8B               	goto	l3968
  1824  06B4                     __end_of_main:	
  1825                           
  1826                           	psect	text1
  1827  0471                     __ptext1:	
  1828 ;; *************** function _start *****************
  1829 ;; Defined at:
  1830 ;;		line 80 in file "main.c"
  1831 ;; Parameters:    Size  Location     Type
  1832 ;;		None
  1833 ;; Auto vars:     Size  Location     Type
  1834 ;;  i               1   27[BANK1 ] unsigned char 
  1835 ;; Return value:  Size  Location     Type
  1836 ;;                  1    wreg      void 
  1837 ;; Registers used:
  1838 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1839 ;; Tracked objects:
  1840 ;;		On entry : 0/0
  1841 ;;		On exit  : 0/0
  1842 ;;		Unchanged: 0/0
  1843 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1844 ;;      Params:         0       0       0       0       0
  1845 ;;      Locals:         0       0       1       0       0
  1846 ;;      Temps:          0       0       3       0       0
  1847 ;;      Totals:         0       0       4       0       0
  1848 ;;Total ram usage:        4 bytes
  1849 ;; Hardware stack levels used:    1
  1850 ;; Hardware stack levels required when called:    8
  1851 ;; This function calls:
  1852 ;;		_SetDDRamAddr
  1853 ;;		_beep
  1854 ;;		_putsXLCD
  1855 ;;		_sprintf
  1856 ;; This function is called by:
  1857 ;;		_main
  1858 ;; This function uses a non-reentrant model
  1859 ;;
  1860                           
  1861                           
  1862                           ;psect for function _start
  1863  0471                     _start:	
  1864                           
  1865                           ;main.c: 82:     INTCONbits.GIE = 0;
  1866                           
  1867                           ;incstack = 0
  1868 ;; hardware stack exceeded
  1869                           ; Regs used in _start: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1870  0471  138B               	bcf	11,7	;volatile
  1871                           
  1872                           ;main.c: 85:     for(i = 0; i < 10; i++){
  1873  0472  1683               	bsf	3,5	;RP0=1, select bank1
  1874  0473  1303               	bcf	3,6	;RP1=0, select bank1
  1875  0474  01DE               	clrf	start@i^(0+128)
  1876                           
  1877                           ;main.c: 86:         PORTCbits.RC1 = !PORTCbits.RC1;
  1878  0475  1003               	clrc
  1879  0476                     L2:	
  1880  0476  1283               	bcf	3,5	;RP0=0, select bank0
  1881  0477  1303               	bcf	3,6	;RP1=0, select bank0
  1882  0478  1C87               	btfss	7,1	;volatile
  1883  0479  1403               	setc
  1884  047A  1C03               	btfss	3,0
  1885  047B  2C80               	goto	u3330
  1886  047C  1283               	bcf	3,5	;RP0=0, select bank0
  1887  047D  1303               	bcf	3,6	;RP1=0, select bank0
  1888  047E  1487               	bsf	7,1	;volatile
  1889  047F  2C83               	goto	l3834
  1890  0480                     u3330:	
  1891  0480  1283               	bcf	3,5	;RP0=0, select bank0
  1892  0481  1303               	bcf	3,6	;RP1=0, select bank0
  1893  0482  1087               	bcf	7,1	;volatile
  1894  0483                     l3834:	
  1895                           
  1896                           ;main.c: 87:         sprintf(lineOne,"TESTING         ");
  1897  0483  3032               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1898  0484  1683               	bsf	3,5	;RP0=1, select bank1
  1899  0485  1303               	bcf	3,6	;RP1=0, select bank1
  1900  0486  00DB               	movwf	??_start^(0+128)
  1901  0487  085B               	movf	??_start^(0+128),w
  1902  0488  00CA               	movwf	sprintf@f^(0+128)
  1903  0489  30B2               	movlw	(low (_lineOne| 0))& (0+255)
  1904  048A  120A  118A  2035  120A  118A  	fcall	_sprintf
  1905                           
  1906                           ;main.c: 88:         sprintf(lineTwo,"          SUPPLY");
  1907  048F  3098               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1908  0490  1683               	bsf	3,5	;RP0=1, select bank1
  1909  0491  1303               	bcf	3,6	;RP1=0, select bank1
  1910  0492  00DB               	movwf	??_start^(0+128)
  1911  0493  085B               	movf	??_start^(0+128),w
  1912  0494  00CA               	movwf	sprintf@f^(0+128)
  1913  0495  30A1               	movlw	(low (_lineTwo| 0))& (0+255)
  1914  0496  120A  118A  2035  120A  118A  	fcall	_sprintf
  1915                           
  1916                           ;main.c: 89:         SetDDRamAddr(0x00);
  1917  049B  3000               	movlw	0
  1918  049C  120A  158A  25EC  120A  118A  	fcall	_SetDDRamAddr
  1919                           
  1920                           ;main.c: 90:         putsXLCD(lineOne);
  1921  04A1  30B2               	movlw	(low (_lineOne| 0))& (0+255)
  1922  04A2  120A  158A  227F  120A  118A  	fcall	_putsXLCD
  1923                           
  1924                           ;main.c: 91:         SetDDRamAddr(0x40);
  1925  04A7  3040               	movlw	64
  1926  04A8  120A  158A  25EC  120A  118A  	fcall	_SetDDRamAddr
  1927                           
  1928                           ;main.c: 92:         putsXLCD(lineTwo);
  1929  04AD  30A1               	movlw	(low (_lineTwo| 0))& (0+255)
  1930  04AE  120A  158A  227F  120A  118A  	fcall	_putsXLCD
  1931                           
  1932                           ;main.c: 93:         _delay((unsigned long)((100)*(4000000/4000.0)));
  1933  04B3  3082               	movlw	130
  1934  04B4  1683               	bsf	3,5	;RP0=1, select bank1
  1935  04B5  1303               	bcf	3,6	;RP1=0, select bank1
  1936  04B6  00DC               	movwf	(??_start^(0+128)+1)
  1937  04B7  30DD               	movlw	221
  1938  04B8  00DB               	movwf	??_start^(0+128)
  1939  04B9                     u3547:	
  1940  04B9  0BDB               	decfsz	??_start^(0+128),f
  1941  04BA  2CB9               	goto	u3547
  1942  04BB  0BDC               	decfsz	(??_start^(0+128)+1),f
  1943  04BC  2CB9               	goto	u3547
  1944                           
  1945                           ;main.c: 94:     }
  1946  04BD  3001               	movlw	1
  1947  04BE  1683               	bsf	3,5	;RP0=1, select bank1
  1948  04BF  1303               	bcf	3,6	;RP1=0, select bank1
  1949  04C0  00DB               	movwf	??_start^(0+128)
  1950  04C1  085B               	movf	??_start^(0+128),w
  1951  04C2  07DE               	addwf	start@i^(0+128),f
  1952  04C3  300A               	movlw	10
  1953  04C4  025E               	subwf	start@i^(0+128),w
  1954  04C5  1C03               	skipc
  1955  04C6  2C76               	goto	L2
  1956                           
  1957                           ;main.c: 95:     PORTCbits.RC1 = 0;
  1958  04C7  1283               	bcf	3,5	;RP0=0, select bank0
  1959  04C8  1303               	bcf	3,6	;RP1=0, select bank0
  1960  04C9  1087               	bcf	7,1	;volatile
  1961                           
  1962                           ;main.c: 97:     for(i = 0; i < 18; i++){
  1963  04CA  1683               	bsf	3,5	;RP0=1, select bank1
  1964  04CB  1303               	bcf	3,6	;RP1=0, select bank1
  1965  04CC  01DE               	clrf	start@i^(0+128)
  1966                           
  1967                           ;main.c: 98:         PORTCbits.RC3 = !PORTCbits.RC3;
  1968  04CD  1003               	clrc
  1969  04CE                     L3:	
  1970  04CE  1283               	bcf	3,5	;RP0=0, select bank0
  1971  04CF  1303               	bcf	3,6	;RP1=0, select bank0
  1972  04D0  1D87               	btfss	7,3	;volatile
  1973  04D1  1403               	setc
  1974  04D2  1C03               	btfss	3,0
  1975  04D3  2CD8               	goto	u3360
  1976  04D4  1283               	bcf	3,5	;RP0=0, select bank0
  1977  04D5  1303               	bcf	3,6	;RP1=0, select bank0
  1978  04D6  1587               	bsf	7,3	;volatile
  1979  04D7  2CDB               	goto	l3860
  1980  04D8                     u3360:	
  1981  04D8  1283               	bcf	3,5	;RP0=0, select bank0
  1982  04D9  1303               	bcf	3,6	;RP1=0, select bank0
  1983  04DA  1187               	bcf	7,3	;volatile
  1984  04DB                     l3860:	
  1985                           
  1986                           ;main.c: 99:         sprintf(lineOne,"TESTING         ");
  1987  04DB  3032               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1988  04DC  1683               	bsf	3,5	;RP0=1, select bank1
  1989  04DD  1303               	bcf	3,6	;RP1=0, select bank1
  1990  04DE  00DB               	movwf	??_start^(0+128)
  1991  04DF  085B               	movf	??_start^(0+128),w
  1992  04E0  00CA               	movwf	sprintf@f^(0+128)
  1993  04E1  30B2               	movlw	(low (_lineOne| 0))& (0+255)
  1994  04E2  120A  118A  2035  120A  118A  	fcall	_sprintf
  1995                           
  1996                           ;main.c: 100:         sprintf(lineTwo,"     TEMPERATURE");
  1997  04E7  3054               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  1998  04E8  1683               	bsf	3,5	;RP0=1, select bank1
  1999  04E9  1303               	bcf	3,6	;RP1=0, select bank1
  2000  04EA  00DB               	movwf	??_start^(0+128)
  2001  04EB  085B               	movf	??_start^(0+128),w
  2002  04EC  00CA               	movwf	sprintf@f^(0+128)
  2003  04ED  30A1               	movlw	(low (_lineTwo| 0))& (0+255)
  2004  04EE  120A  118A  2035  120A  118A  	fcall	_sprintf
  2005                           
  2006                           ;main.c: 101:         SetDDRamAddr(0x00);
  2007  04F3  3000               	movlw	0
  2008  04F4  120A  158A  25EC  120A  118A  	fcall	_SetDDRamAddr
  2009                           
  2010                           ;main.c: 102:         putsXLCD(lineOne);
  2011  04F9  30B2               	movlw	(low (_lineOne| 0))& (0+255)
  2012  04FA  120A  158A  227F  120A  118A  	fcall	_putsXLCD
  2013                           
  2014                           ;main.c: 103:         SetDDRamAddr(0x40);
  2015  04FF  3040               	movlw	64
  2016  0500  120A  158A  25EC  120A  118A  	fcall	_SetDDRamAddr
  2017                           
  2018                           ;main.c: 104:         putsXLCD(lineTwo);
  2019  0505  30A1               	movlw	(low (_lineTwo| 0))& (0+255)
  2020  0506  120A  158A  227F  120A  118A  	fcall	_putsXLCD
  2021                           
  2022                           ;main.c: 105:         _delay((unsigned long)((100)*(4000000/4000.0)));
  2023  050B  3082               	movlw	130
  2024  050C  1683               	bsf	3,5	;RP0=1, select bank1
  2025  050D  1303               	bcf	3,6	;RP1=0, select bank1
  2026  050E  00DC               	movwf	(??_start^(0+128)+1)
  2027  050F  30DD               	movlw	221
  2028  0510  00DB               	movwf	??_start^(0+128)
  2029  0511                     u3557:	
  2030  0511  0BDB               	decfsz	??_start^(0+128),f
  2031  0512  2D11               	goto	u3557
  2032  0513  0BDC               	decfsz	(??_start^(0+128)+1),f
  2033  0514  2D11               	goto	u3557
  2034                           
  2035                           ;main.c: 106:     }
  2036  0515  3001               	movlw	1
  2037  0516  1683               	bsf	3,5	;RP0=1, select bank1
  2038  0517  1303               	bcf	3,6	;RP1=0, select bank1
  2039  0518  00DB               	movwf	??_start^(0+128)
  2040  0519  085B               	movf	??_start^(0+128),w
  2041  051A  07DE               	addwf	start@i^(0+128),f
  2042  051B  3012               	movlw	18
  2043  051C  025E               	subwf	start@i^(0+128),w
  2044  051D  1C03               	skipc
  2045  051E  2CCE               	goto	L3
  2046                           
  2047                           ;main.c: 107:     PORTCbits.RC3 = 0;
  2048  051F  1283               	bcf	3,5	;RP0=0, select bank0
  2049  0520  1303               	bcf	3,6	;RP1=0, select bank0
  2050  0521  1187               	bcf	7,3	;volatile
  2051                           
  2052                           ;main.c: 109:     for(i = 0; i < 15; i++){
  2053  0522  1683               	bsf	3,5	;RP0=1, select bank1
  2054  0523  1303               	bcf	3,6	;RP1=0, select bank1
  2055  0524  01DE               	clrf	start@i^(0+128)
  2056                           
  2057                           ;main.c: 110:         PORTCbits.RC2 = !PORTCbits.RC2;
  2058  0525  1003               	clrc
  2059  0526                     L4:	
  2060  0526  1283               	bcf	3,5	;RP0=0, select bank0
  2061  0527  1303               	bcf	3,6	;RP1=0, select bank0
  2062  0528  1D07               	btfss	7,2	;volatile
  2063  0529  1403               	setc
  2064  052A  1C03               	btfss	3,0
  2065  052B  2D30               	goto	u3390
  2066  052C  1283               	bcf	3,5	;RP0=0, select bank0
  2067  052D  1303               	bcf	3,6	;RP1=0, select bank0
  2068  052E  1507               	bsf	7,2	;volatile
  2069  052F  2D33               	goto	l3886
  2070  0530                     u3390:	
  2071  0530  1283               	bcf	3,5	;RP0=0, select bank0
  2072  0531  1303               	bcf	3,6	;RP1=0, select bank0
  2073  0532  1107               	bcf	7,2	;volatile
  2074  0533                     l3886:	
  2075                           
  2076                           ;main.c: 111:         sprintf(lineOne,"TESTING         ");
  2077  0533  3032               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  2078  0534  1683               	bsf	3,5	;RP0=1, select bank1
  2079  0535  1303               	bcf	3,6	;RP1=0, select bank1
  2080  0536  00DB               	movwf	??_start^(0+128)
  2081  0537  085B               	movf	??_start^(0+128),w
  2082  0538  00CA               	movwf	sprintf@f^(0+128)
  2083  0539  30B2               	movlw	(low (_lineOne| 0))& (0+255)
  2084  053A  120A  118A  2035  120A  118A  	fcall	_sprintf
  2085                           
  2086                           ;main.c: 112:         sprintf(lineTwo,"             SWR");
  2087  053F  3076               	movlw	(low ((STR_8-__stringbase)| (0+32768)))& (0+255)
  2088  0540  1683               	bsf	3,5	;RP0=1, select bank1
  2089  0541  1303               	bcf	3,6	;RP1=0, select bank1
  2090  0542  00DB               	movwf	??_start^(0+128)
  2091  0543  085B               	movf	??_start^(0+128),w
  2092  0544  00CA               	movwf	sprintf@f^(0+128)
  2093  0545  30A1               	movlw	(low (_lineTwo| 0))& (0+255)
  2094  0546  120A  118A  2035  120A  118A  	fcall	_sprintf
  2095                           
  2096                           ;main.c: 113:         SetDDRamAddr(0x00);
  2097  054B  3000               	movlw	0
  2098  054C  120A  158A  25EC  120A  118A  	fcall	_SetDDRamAddr
  2099                           
  2100                           ;main.c: 114:         putsXLCD(lineOne);
  2101  0551  30B2               	movlw	(low (_lineOne| 0))& (0+255)
  2102  0552  120A  158A  227F  120A  118A  	fcall	_putsXLCD
  2103                           
  2104                           ;main.c: 115:         SetDDRamAddr(0x40);
  2105  0557  3040               	movlw	64
  2106  0558  120A  158A  25EC  120A  118A  	fcall	_SetDDRamAddr
  2107                           
  2108                           ;main.c: 116:         putsXLCD(lineTwo);
  2109  055D  30A1               	movlw	(low (_lineTwo| 0))& (0+255)
  2110  055E  120A  158A  227F  120A  118A  	fcall	_putsXLCD
  2111                           
  2112                           ;main.c: 117:         _delay((unsigned long)((100)*(4000000/4000.0)));
  2113  0563  3082               	movlw	130
  2114  0564  1683               	bsf	3,5	;RP0=1, select bank1
  2115  0565  1303               	bcf	3,6	;RP1=0, select bank1
  2116  0566  00DC               	movwf	(??_start^(0+128)+1)
  2117  0567  30DD               	movlw	221
  2118  0568  00DB               	movwf	??_start^(0+128)
  2119  0569                     u3567:	
  2120  0569  0BDB               	decfsz	??_start^(0+128),f
  2121  056A  2D69               	goto	u3567
  2122  056B  0BDC               	decfsz	(??_start^(0+128)+1),f
  2123  056C  2D69               	goto	u3567
  2124                           
  2125                           ;main.c: 118:     }
  2126  056D  3001               	movlw	1
  2127  056E  1683               	bsf	3,5	;RP0=1, select bank1
  2128  056F  1303               	bcf	3,6	;RP1=0, select bank1
  2129  0570  00DB               	movwf	??_start^(0+128)
  2130  0571  085B               	movf	??_start^(0+128),w
  2131  0572  07DE               	addwf	start@i^(0+128),f
  2132  0573  300F               	movlw	15
  2133  0574  025E               	subwf	start@i^(0+128),w
  2134  0575  1C03               	skipc
  2135  0576  2D26               	goto	L4
  2136                           
  2137                           ;main.c: 119:     PORTCbits.RC2 = 0;
  2138  0577  1283               	bcf	3,5	;RP0=0, select bank0
  2139  0578  1303               	bcf	3,6	;RP1=0, select bank0
  2140  0579  1107               	bcf	7,2	;volatile
  2141                           
  2142                           ;main.c: 120:     beep(250);
  2143  057A  30FA               	movlw	250
  2144  057B  1683               	bsf	3,5	;RP0=1, select bank1
  2145  057C  1303               	bcf	3,6	;RP1=0, select bank1
  2146  057D  00C3               	movwf	beep@ms^(0+128)
  2147  057E  3000               	movlw	0
  2148  057F  00C4               	movwf	(beep@ms^(0+128)+1)
  2149  0580  120A  158A  24BB  120A  118A  	fcall	_beep
  2150                           
  2151                           ;main.c: 121:     INTCONbits.GIE = 1;
  2152  0585  178B               	bsf	11,7	;volatile
  2153                           
  2154                           ;main.c: 122:     _delay((unsigned long)((500)*(4000000/4000.0)));
  2155  0586  3003               	movlw	3
  2156  0587  1683               	bsf	3,5	;RP0=1, select bank1
  2157  0588  1303               	bcf	3,6	;RP1=0, select bank1
  2158  0589  00DD               	movwf	(??_start^(0+128)+2)
  2159  058A  308A               	movlw	138
  2160  058B  00DC               	movwf	(??_start^(0+128)+1)
  2161  058C  3055               	movlw	85
  2162  058D  00DB               	movwf	??_start^(0+128)
  2163  058E                     u3577:	
  2164  058E  0BDB               	decfsz	??_start^(0+128),f
  2165  058F  2D8E               	goto	u3577
  2166  0590  0BDC               	decfsz	(??_start^(0+128)+1),f
  2167  0591  2D8E               	goto	u3577
  2168  0592  0BDD               	decfsz	(??_start^(0+128)+2),f
  2169  0593  2D8E               	goto	u3577
  2170                           
  2171                           ;main.c: 123:     PORTCbits.RC1 = 1;
  2172  0594  1283               	bcf	3,5	;RP0=0, select bank0
  2173  0595  1303               	bcf	3,6	;RP1=0, select bank0
  2174  0596  1487               	bsf	7,1	;volatile
  2175                           
  2176                           ;main.c: 124:     PORTCbits.RC3 = 1;
  2177  0597  1587               	bsf	7,3	;volatile
  2178                           
  2179                           ;main.c: 125:     PORTCbits.RC2 = 1;
  2180  0598  1507               	bsf	7,2	;volatile
  2181                           
  2182                           ;main.c: 126:     INTCONbits.GIE = 1;
  2183  0599  178B               	bsf	11,7	;volatile
  2184  059A  0008               	return
  2185  059B                     __end_of_start:	
  2186                           
  2187                           	psect	text2
  2188  0325                     __ptext2:	
  2189 ;; *************** function _setFrequency *****************
  2190 ;; Defined at:
  2191 ;;		line 187 in file "main.c"
  2192 ;; Parameters:    Size  Location     Type
  2193 ;;		None
  2194 ;; Auto vars:     Size  Location     Type
  2195 ;;		None
  2196 ;; Return value:  Size  Location     Type
  2197 ;;                  1    wreg      void 
  2198 ;; Registers used:
  2199 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2200 ;; Tracked objects:
  2201 ;;		On entry : 0/0
  2202 ;;		On exit  : 0/0
  2203 ;;		Unchanged: 0/0
  2204 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2205 ;;      Params:         0       0       0       0       0
  2206 ;;      Locals:         0       0       0       0       0
  2207 ;;      Temps:          0       0       3       0       0
  2208 ;;      Totals:         0       0       3       0       0
  2209 ;;Total ram usage:        3 bytes
  2210 ;; Hardware stack levels used:    1
  2211 ;; Hardware stack levels required when called:    8
  2212 ;; This function calls:
  2213 ;;		_SetDDRamAddr
  2214 ;;		_beep
  2215 ;;		_putsXLCD
  2216 ;;		_setData
  2217 ;;		_sprintf
  2218 ;;		_writeFrequency
  2219 ;; This function is called by:
  2220 ;;		_main
  2221 ;; This function uses a non-reentrant model
  2222 ;;
  2223                           
  2224                           
  2225                           ;psect for function _setFrequency
  2226  0325                     _setFrequency:	
  2227                           
  2228                           ;main.c: 188:     isOnConfig = 1;
  2229                           
  2230                           ;incstack = 0
  2231 ;; hardware stack exceeded
  2232                           ; Regs used in _setFrequency: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2233  0325  1283               	bcf	3,5	;RP0=0, select bank0
  2234  0326  1303               	bcf	3,6	;RP1=0, select bank0
  2235  0327  01C7               	clrf	_isOnConfig
  2236  0328  0AC7               	incf	_isOnConfig,f
  2237                           
  2238                           ;main.c: 189:     sprintf(lineOne,"SET   FREQUENCY ");
  2239  0329  3043               	movlw	(low ((STR_9-__stringbase)| (0+32768)))& (0+255)
  2240  032A  1683               	bsf	3,5	;RP0=1, select bank1
  2241  032B  1303               	bcf	3,6	;RP1=0, select bank1
  2242  032C  00DB               	movwf	??_setFrequency^(0+128)
  2243  032D  085B               	movf	??_setFrequency^(0+128),w
  2244  032E  00CA               	movwf	sprintf@f^(0+128)
  2245  032F  30B2               	movlw	(low (_lineOne| 0))& (0+255)
  2246  0330  120A  118A  2035  120A  118A  	fcall	_sprintf
  2247                           
  2248                           ;main.c: 190:     beep(200);
  2249  0335  30C8               	movlw	200
  2250  0336  1683               	bsf	3,5	;RP0=1, select bank1
  2251  0337  1303               	bcf	3,6	;RP1=0, select bank1
  2252  0338  00C3               	movwf	beep@ms^(0+128)
  2253  0339  3000               	movlw	0
  2254  033A  00C4               	movwf	(beep@ms^(0+128)+1)
  2255  033B  120A  158A  24BB  120A  118A  	fcall	_beep
  2256  0340                     l243:	
  2257                           ;main.c: 191:     while(!PORTAbits.RA4)continue;
  2258                           
  2259  0340  1283               	bcf	3,5	;RP0=0, select bank0
  2260  0341  1303               	bcf	3,6	;RP1=0, select bank0
  2261  0342  1E05               	btfss	5,4	;volatile
  2262  0343  2B40               	goto	l243
  2263  0344                     l246:	
  2264                           ;main.c: 193:     while(1){
  2265                           
  2266                           
  2267                           ;main.c: 194:         if(!PORTAbits.RA3){
  2268  0344  1985               	btfsc	5,3	;volatile
  2269  0345  2B9E               	goto	l247
  2270                           
  2271                           ;main.c: 195:             if(frequency < 1080)frequency++;
  2272  0346  3004               	movlw	4
  2273  0347  0245               	subwf	_frequency+1,w
  2274  0348  3038               	movlw	56
  2275  0349  1903               	skipnz
  2276  034A  0244               	subwf	_frequency,w
  2277  034B  1803               	skipnc
  2278  034C  2B53               	goto	l248
  2279  034D  3001               	movlw	1
  2280  034E  07C4               	addwf	_frequency,f
  2281  034F  1803               	skipnc
  2282  0350  0AC5               	incf	_frequency+1,f
  2283  0351  3000               	movlw	0
  2284  0352  07C5               	addwf	_frequency+1,f
  2285  0353                     l248:	
  2286                           
  2287                           ;main.c: 196:             if(frequency > 1080)frequency = 1080;
  2288  0353  3004               	movlw	4
  2289  0354  0245               	subwf	_frequency+1,w
  2290  0355  3039               	movlw	57
  2291  0356  1903               	skipnz
  2292  0357  0244               	subwf	_frequency,w
  2293  0358  1C03               	skipc
  2294  0359  2B5E               	goto	l3766
  2295  035A  3038               	movlw	56
  2296  035B  00C4               	movwf	_frequency
  2297  035C  3004               	movlw	4
  2298  035D  00C5               	movwf	_frequency+1
  2299  035E                     l3766:	
  2300                           
  2301                           ;main.c: 197:             beep(100);
  2302  035E  3064               	movlw	100
  2303  035F  1683               	bsf	3,5	;RP0=1, select bank1
  2304  0360  1303               	bcf	3,6	;RP1=0, select bank1
  2305  0361  00C3               	movwf	beep@ms^(0+128)
  2306  0362  3000               	movlw	0
  2307  0363  00C4               	movwf	(beep@ms^(0+128)+1)
  2308  0364  120A  158A  24BB  120A  118A  	fcall	_beep
  2309                           
  2310                           ;main.c: 198:             _delay((unsigned long)((500)*(4000000/4000.0)));
  2311  0369  3003               	movlw	3
  2312  036A  1683               	bsf	3,5	;RP0=1, select bank1
  2313  036B  1303               	bcf	3,6	;RP1=0, select bank1
  2314  036C  00DD               	movwf	(??_setFrequency^(0+128)+2)
  2315  036D  308A               	movlw	138
  2316  036E  00DC               	movwf	(??_setFrequency^(0+128)+1)
  2317  036F  3055               	movlw	85
  2318  0370  00DB               	movwf	??_setFrequency^(0+128)
  2319  0371                     u3587:	
  2320  0371  0BDB               	decfsz	??_setFrequency^(0+128),f
  2321  0372  2B71               	goto	u3587
  2322  0373  0BDC               	decfsz	(??_setFrequency^(0+128)+1),f
  2323  0374  2B71               	goto	u3587
  2324  0375  0BDD               	decfsz	(??_setFrequency^(0+128)+2),f
  2325  0376  2B71               	goto	u3587
  2326  0377                     l3776:	
  2327                           ;main.c: 199:             while(!PORTAbits.RA3){
  2328                           
  2329                           
  2330                           ;main.c: 199:             while(!PORTAbits.RA3){
  2331  0377  1283               	bcf	3,5	;RP0=0, select bank0
  2332  0378  1303               	bcf	3,6	;RP1=0, select bank0
  2333  0379  1985               	btfsc	5,3	;volatile
  2334  037A  2B9E               	goto	l247
  2335                           
  2336                           ;main.c: 200:                 if(frequency < 1080)frequency++;
  2337  037B  3004               	movlw	4
  2338  037C  0245               	subwf	_frequency+1,w
  2339  037D  3038               	movlw	56
  2340  037E  1903               	skipnz
  2341  037F  0244               	subwf	_frequency,w
  2342  0380  1803               	skipnc
  2343  0381  2B88               	goto	l252
  2344  0382  3001               	movlw	1
  2345  0383  07C4               	addwf	_frequency,f
  2346  0384  1803               	skipnc
  2347  0385  0AC5               	incf	_frequency+1,f
  2348  0386  3000               	movlw	0
  2349  0387  07C5               	addwf	_frequency+1,f
  2350  0388                     l252:	
  2351                           
  2352                           ;main.c: 201:                 if(frequency > 1080)frequency = 1080;
  2353  0388  3004               	movlw	4
  2354  0389  0245               	subwf	_frequency+1,w
  2355  038A  3039               	movlw	57
  2356  038B  1903               	skipnz
  2357  038C  0244               	subwf	_frequency,w
  2358  038D  1C03               	skipc
  2359  038E  2B93               	goto	l253
  2360  038F  3038               	movlw	56
  2361  0390  00C4               	movwf	_frequency
  2362  0391  3004               	movlw	4
  2363  0392  00C5               	movwf	_frequency+1
  2364  0393                     l253:	
  2365                           
  2366                           ;main.c: 202:                 _delay((unsigned long)((100)*(4000000/4000.0)));
  2367  0393  3082               	movlw	130
  2368  0394  1683               	bsf	3,5	;RP0=1, select bank1
  2369  0395  1303               	bcf	3,6	;RP1=0, select bank1
  2370  0396  00DC               	movwf	(??_setFrequency^(0+128)+1)
  2371  0397  30DD               	movlw	221
  2372  0398  00DB               	movwf	??_setFrequency^(0+128)
  2373  0399                     u3597:	
  2374  0399  0BDB               	decfsz	??_setFrequency^(0+128),f
  2375  039A  2B99               	goto	u3597
  2376  039B  0BDC               	decfsz	(??_setFrequency^(0+128)+1),f
  2377  039C  2B99               	goto	u3597
  2378  039D  2B77               	goto	l3776
  2379  039E                     l247:	
  2380                           ;main.c: 204:         }
  2381                           
  2382                           
  2383                           ;main.c: 206:         if(!PORTAbits.RA5){
  2384  039E  1A85               	btfsc	5,5	;volatile
  2385  039F  2BF8               	goto	l255
  2386                           
  2387                           ;main.c: 207:             if(frequency > 880)frequency--;
  2388  03A0  3003               	movlw	3
  2389  03A1  0245               	subwf	_frequency+1,w
  2390  03A2  3071               	movlw	113
  2391  03A3  1903               	skipnz
  2392  03A4  0244               	subwf	_frequency,w
  2393  03A5  1C03               	skipc
  2394  03A6  2BAD               	goto	l256
  2395  03A7  3001               	movlw	1
  2396  03A8  02C4               	subwf	_frequency,f
  2397  03A9  3000               	movlw	0
  2398  03AA  1C03               	skipc
  2399  03AB  03C5               	decf	_frequency+1,f
  2400  03AC  02C5               	subwf	_frequency+1,f
  2401  03AD                     l256:	
  2402                           
  2403                           ;main.c: 208:             if(frequency < 880)frequency = 880;
  2404  03AD  3003               	movlw	3
  2405  03AE  0245               	subwf	_frequency+1,w
  2406  03AF  3070               	movlw	112
  2407  03B0  1903               	skipnz
  2408  03B1  0244               	subwf	_frequency,w
  2409  03B2  1803               	skipnc
  2410  03B3  2BB8               	goto	l3784
  2411  03B4  3070               	movlw	112
  2412  03B5  00C4               	movwf	_frequency
  2413  03B6  3003               	movlw	3
  2414  03B7  00C5               	movwf	_frequency+1
  2415  03B8                     l3784:	
  2416                           
  2417                           ;main.c: 209:             beep(100);
  2418  03B8  3064               	movlw	100
  2419  03B9  1683               	bsf	3,5	;RP0=1, select bank1
  2420  03BA  1303               	bcf	3,6	;RP1=0, select bank1
  2421  03BB  00C3               	movwf	beep@ms^(0+128)
  2422  03BC  3000               	movlw	0
  2423  03BD  00C4               	movwf	(beep@ms^(0+128)+1)
  2424  03BE  120A  158A  24BB  120A  118A  	fcall	_beep
  2425                           
  2426                           ;main.c: 210:             _delay((unsigned long)((500)*(4000000/4000.0)));
  2427  03C3  3003               	movlw	3
  2428  03C4  1683               	bsf	3,5	;RP0=1, select bank1
  2429  03C5  1303               	bcf	3,6	;RP1=0, select bank1
  2430  03C6  00DD               	movwf	(??_setFrequency^(0+128)+2)
  2431  03C7  308A               	movlw	138
  2432  03C8  00DC               	movwf	(??_setFrequency^(0+128)+1)
  2433  03C9  3055               	movlw	85
  2434  03CA  00DB               	movwf	??_setFrequency^(0+128)
  2435  03CB                     u3607:	
  2436  03CB  0BDB               	decfsz	??_setFrequency^(0+128),f
  2437  03CC  2BCB               	goto	u3607
  2438  03CD  0BDC               	decfsz	(??_setFrequency^(0+128)+1),f
  2439  03CE  2BCB               	goto	u3607
  2440  03CF  0BDD               	decfsz	(??_setFrequency^(0+128)+2),f
  2441  03D0  2BCB               	goto	u3607
  2442  03D1                     l3794:	
  2443                           ;main.c: 211:             while(!PORTAbits.RA5){
  2444                           
  2445                           
  2446                           ;main.c: 211:             while(!PORTAbits.RA5){
  2447  03D1  1283               	bcf	3,5	;RP0=0, select bank0
  2448  03D2  1303               	bcf	3,6	;RP1=0, select bank0
  2449  03D3  1A85               	btfsc	5,5	;volatile
  2450  03D4  2BF8               	goto	l255
  2451                           
  2452                           ;main.c: 212:                 if(frequency > 880)frequency--;
  2453  03D5  3003               	movlw	3
  2454  03D6  0245               	subwf	_frequency+1,w
  2455  03D7  3071               	movlw	113
  2456  03D8  1903               	skipnz
  2457  03D9  0244               	subwf	_frequency,w
  2458  03DA  1C03               	skipc
  2459  03DB  2BE2               	goto	l260
  2460  03DC  3001               	movlw	1
  2461  03DD  02C4               	subwf	_frequency,f
  2462  03DE  3000               	movlw	0
  2463  03DF  1C03               	skipc
  2464  03E0  03C5               	decf	_frequency+1,f
  2465  03E1  02C5               	subwf	_frequency+1,f
  2466  03E2                     l260:	
  2467                           
  2468                           ;main.c: 213:                 if(frequency < 880)frequency = 880;
  2469  03E2  3003               	movlw	3
  2470  03E3  0245               	subwf	_frequency+1,w
  2471  03E4  3070               	movlw	112
  2472  03E5  1903               	skipnz
  2473  03E6  0244               	subwf	_frequency,w
  2474  03E7  1803               	skipnc
  2475  03E8  2BED               	goto	l261
  2476  03E9  3070               	movlw	112
  2477  03EA  00C4               	movwf	_frequency
  2478  03EB  3003               	movlw	3
  2479  03EC  00C5               	movwf	_frequency+1
  2480  03ED                     l261:	
  2481                           
  2482                           ;main.c: 214:                 _delay((unsigned long)((100)*(4000000/4000.0)));
  2483  03ED  3082               	movlw	130
  2484  03EE  1683               	bsf	3,5	;RP0=1, select bank1
  2485  03EF  1303               	bcf	3,6	;RP1=0, select bank1
  2486  03F0  00DC               	movwf	(??_setFrequency^(0+128)+1)
  2487  03F1  30DD               	movlw	221
  2488  03F2  00DB               	movwf	??_setFrequency^(0+128)
  2489  03F3                     u3617:	
  2490  03F3  0BDB               	decfsz	??_setFrequency^(0+128),f
  2491  03F4  2BF3               	goto	u3617
  2492  03F5  0BDC               	decfsz	(??_setFrequency^(0+128)+1),f
  2493  03F6  2BF3               	goto	u3617
  2494  03F7  2BD1               	goto	l3794
  2495  03F8                     l255:	
  2496                           ;main.c: 216:         }
  2497                           
  2498                           
  2499                           ;main.c: 218:         if(!PORTAbits.RA4){
  2500  03F8  1A05               	btfsc	5,4	;volatile
  2501  03F9  2B44               	goto	l246
  2502                           
  2503                           ;main.c: 219:             _delay((unsigned long)((500)*(4000000/4000.0)));
  2504  03FA  3003               	movlw	3
  2505  03FB  1683               	bsf	3,5	;RP0=1, select bank1
  2506  03FC  1303               	bcf	3,6	;RP1=0, select bank1
  2507  03FD  00DD               	movwf	(??_setFrequency^(0+128)+2)
  2508  03FE  308A               	movlw	138
  2509  03FF  00DC               	movwf	(??_setFrequency^(0+128)+1)
  2510  0400  3055               	movlw	85
  2511  0401  00DB               	movwf	??_setFrequency^(0+128)
  2512  0402                     u3627:	
  2513  0402  0BDB               	decfsz	??_setFrequency^(0+128),f
  2514  0403  2C02               	goto	u3627
  2515  0404  0BDC               	decfsz	(??_setFrequency^(0+128)+1),f
  2516  0405  2C02               	goto	u3627
  2517  0406  0BDD               	decfsz	(??_setFrequency^(0+128)+2),f
  2518  0407  2C02               	goto	u3627
  2519                           
  2520                           ;main.c: 220:             if(!PORTAbits.RA4){
  2521  0408  1283               	bcf	3,5	;RP0=0, select bank0
  2522  0409  1303               	bcf	3,6	;RP1=0, select bank0
  2523  040A  1A05               	btfsc	5,4	;volatile
  2524  040B  2B44               	goto	l246
  2525                           
  2526                           ;main.c: 221:                 setData(1);
  2527  040C  3001               	movlw	1
  2528  040D  120A  158A  27A3  120A  118A  	fcall	_setData
  2529                           
  2530                           ;main.c: 222:                 beep(1000);
  2531  0412  30E8               	movlw	232
  2532  0413  1683               	bsf	3,5	;RP0=1, select bank1
  2533  0414  1303               	bcf	3,6	;RP1=0, select bank1
  2534  0415  00C3               	movwf	beep@ms^(0+128)
  2535  0416  3003               	movlw	3
  2536  0417  00C4               	movwf	(beep@ms^(0+128)+1)
  2537  0418  120A  158A  24BB  120A  118A  	fcall	_beep
  2538                           
  2539                           ;main.c: 227:     writeFrequency(frequency);
  2540                           
  2541                           ;main.c: 223:                 break;
  2542  041D  1283               	bcf	3,5	;RP0=0, select bank0
  2543  041E  1303               	bcf	3,6	;RP1=0, select bank0
  2544  041F  0845               	movf	_frequency+1,w
  2545  0420  00C0               	movwf	writeFrequency@f+1
  2546  0421  0844               	movf	_frequency,w
  2547  0422  00BF               	movwf	writeFrequency@f
  2548  0423  120A  118A  276C  120A  118A  	fcall	_writeFrequency
  2549                           
  2550                           ;main.c: 228:     isOnConfig = 0;
  2551  0428  1283               	bcf	3,5	;RP0=0, select bank0
  2552  0429  1303               	bcf	3,6	;RP1=0, select bank0
  2553  042A  01C7               	clrf	_isOnConfig
  2554  042B                     l3822:	
  2555  042B  3019               	movlw	25
  2556  042C  1683               	bsf	3,5	;RP0=1, select bank1
  2557  042D  1303               	bcf	3,6	;RP1=0, select bank1
  2558  042E  0220               	subwf	_i^(0+128),w
  2559  042F  1803               	btfsc	3,0
  2560  0430  0008               	return
  2561                           
  2562                           ;main.c: 231:         sprintf(lineOne,"LOCKING         ");
  2563  0431  3021               	movlw	(low ((STR_10-__stringbase)| (0+32768)))& (0+255)
  2564  0432  00DB               	movwf	??_setFrequency^(0+128)
  2565  0433  085B               	movf	??_setFrequency^(0+128),w
  2566  0434  00CA               	movwf	sprintf@f^(0+128)
  2567  0435  30B2               	movlw	(low (_lineOne| 0))& (0+255)
  2568  0436  120A  118A  2035  120A  118A  	fcall	_sprintf
  2569                           
  2570                           ;main.c: 232:         sprintf(lineTwo,"       FREQUENCY");
  2571  043B  3087               	movlw	(low ((STR_11-__stringbase)| (0+32768)))& (0+255)
  2572  043C  1683               	bsf	3,5	;RP0=1, select bank1
  2573  043D  1303               	bcf	3,6	;RP1=0, select bank1
  2574  043E  00DB               	movwf	??_setFrequency^(0+128)
  2575  043F  085B               	movf	??_setFrequency^(0+128),w
  2576  0440  00CA               	movwf	sprintf@f^(0+128)
  2577  0441  30A1               	movlw	(low (_lineTwo| 0))& (0+255)
  2578  0442  120A  118A  2035  120A  118A  	fcall	_sprintf
  2579                           
  2580                           ;main.c: 233:         SetDDRamAddr(0x00);
  2581  0447  3000               	movlw	0
  2582  0448  120A  158A  25EC  120A  118A  	fcall	_SetDDRamAddr
  2583                           
  2584                           ;main.c: 234:         putsXLCD(lineOne);
  2585  044D  30B2               	movlw	(low (_lineOne| 0))& (0+255)
  2586  044E  120A  158A  227F  120A  118A  	fcall	_putsXLCD
  2587                           
  2588                           ;main.c: 235:         SetDDRamAddr(0x40);
  2589  0453  3040               	movlw	64
  2590  0454  120A  158A  25EC  120A  118A  	fcall	_SetDDRamAddr
  2591                           
  2592                           ;main.c: 236:         putsXLCD(lineTwo);
  2593  0459  30A1               	movlw	(low (_lineTwo| 0))& (0+255)
  2594  045A  120A  158A  227F  120A  118A  	fcall	_putsXLCD
  2595                           
  2596                           ;main.c: 237:         _delay((unsigned long)((90)*(4000000/4000.0)));
  2597  045F  3075               	movlw	117
  2598  0460  1683               	bsf	3,5	;RP0=1, select bank1
  2599  0461  1303               	bcf	3,6	;RP1=0, select bank1
  2600  0462  00DC               	movwf	(??_setFrequency^(0+128)+1)
  2601  0463  30E0               	movlw	224
  2602  0464  00DB               	movwf	??_setFrequency^(0+128)
  2603  0465                     u3637:	
  2604  0465  0BDB               	decfsz	??_setFrequency^(0+128),f
  2605  0466  2C65               	goto	u3637
  2606  0467  0BDC               	decfsz	(??_setFrequency^(0+128)+1),f
  2607  0468  2C65               	goto	u3637
  2608  0469  0000               	nop
  2609                           
  2610                           ;main.c: 238:     }
  2611  046A  3001               	movlw	1
  2612  046B  1683               	bsf	3,5	;RP0=1, select bank1
  2613  046C  1303               	bcf	3,6	;RP1=0, select bank1
  2614  046D  00DB               	movwf	??_setFrequency^(0+128)
  2615  046E  085B               	movf	??_setFrequency^(0+128),w
  2616  046F  07A0               	addwf	_i^(0+128),f
  2617  0470  2C2B               	goto	l3822
  2618  0471                     __end_of_setFrequency:	
  2619                           
  2620                           	psect	text3
  2621  0035                     __ptext3:	
  2622 ;; *************** function _sprintf *****************
  2623 ;; Defined at:
  2624 ;;		line 500 in file "/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt.c"
  2625 ;; Parameters:    Size  Location     Type
  2626 ;;  sp              1    wreg     PTR unsigned char 
  2627 ;;		 -> lineOne(17), lineTwo(17), 
  2628 ;;  f               1    7[BANK1 ] PTR const unsigned char 
  2629 ;;		 -> STR_12(18), STR_11(17), STR_10(17), STR_9(17), 
  2630 ;;		 -> STR_8(17), STR_7(17), STR_6(17), STR_5(17), 
  2631 ;;		 -> STR_4(17), STR_3(17), STR_2(18), 
  2632 ;; Auto vars:     Size  Location     Type
  2633 ;;  sp              1   22[BANK1 ] PTR unsigned char 
  2634 ;;		 -> lineOne(17), lineTwo(17), 
  2635 ;;  tmpval          4    0        struct .
  2636 ;;  width           2   20[BANK1 ] int 
  2637 ;;  val             2   18[BANK1 ] unsigned int 
  2638 ;;  cp              2    0        PTR const unsigned char 
  2639 ;;  len             2    0        unsigned int 
  2640 ;;  c               1   23[BANK1 ] unsigned char 
  2641 ;;  flag            1   17[BANK1 ] unsigned char 
  2642 ;;  prec            1   16[BANK1 ] char 
  2643 ;;  ap              1   15[BANK1 ] PTR void [1]
  2644 ;;		 -> ?_sprintf(2), 
  2645 ;; Return value:  Size  Location     Type
  2646 ;;                  2    7[BANK1 ] int 
  2647 ;; Registers used:
  2648 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2649 ;; Tracked objects:
  2650 ;;		On entry : 0/0
  2651 ;;		On exit  : 0/0
  2652 ;;		Unchanged: 0/0
  2653 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2654 ;;      Params:         0       0       5       0       0
  2655 ;;      Locals:         0       0       9       0       0
  2656 ;;      Temps:          0       0       3       0       0
  2657 ;;      Totals:         0       0      17       0       0
  2658 ;;Total ram usage:       17 bytes
  2659 ;; Hardware stack levels used:    1
  2660 ;; Hardware stack levels required when called:    6
  2661 ;; This function calls:
  2662 ;;		___lwdiv
  2663 ;;		___lwmod
  2664 ;;		___wmul
  2665 ;;		_isdigit
  2666 ;; This function is called by:
  2667 ;;		_main
  2668 ;;		_start
  2669 ;;		_setFrequency
  2670 ;; This function uses a non-reentrant model
  2671 ;;
  2672                           
  2673                           
  2674                           ;psect for function _sprintf
  2675  0035                     _sprintf:	
  2676                           
  2677                           ;incstack = 0
  2678 ;; using string table level
  2679                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2680                           ;sprintf@sp stored from wreg
  2681  0035  1683               	bsf	3,5	;RP0=1, select bank1
  2682  0036  1303               	bcf	3,6	;RP1=0, select bank1
  2683  0037  00D9               	movwf	sprintf@sp^(0+128)
  2684                           
  2685                           ;/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt.c: 500: sprintf(char * sp, const
      +                           char * f, ...);/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt.c: 501: {;/opt/mi
      +                          crochip/xc8/v2.05/pic/sources/c90/common/doprnt.c: 502:  va_list ap;;/opt/microchip/xc8/
      +                          v2.05/pic/sources/c90/common/doprnt.c: 507:  char c;;/opt/microchip/xc8/v2.05/pic/source
      +                          s/c90/common/doprnt.c: 509:  int width;;/opt/microchip/xc8/v2.05/pic/sources/c90/common/
      +                          doprnt.c: 516:  signed char prec;;/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt
      +                          .c: 520:  unsigned char flag;
  2686  0038  30CB               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  2687  0039  00CF               	movwf	??_sprintf^(0+128)
  2688  003A  084F               	movf	??_sprintf^(0+128),w
  2689  003B  00D2               	movwf	sprintf@ap^(0+128)
  2690  003C                     l3692:	
  2691                           ;/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt.c: 548:  while((c = *f++)) {
  2692                           
  2693                           
  2694                           ;/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt.c: 548:  while((c = *f++)) {
  2695  003C  3001               	movlw	1
  2696  003D  07CA               	addwf	sprintf@f^(0+128),f
  2697  003E  30FF               	movlw	-1
  2698  003F  074A               	addwf	sprintf@f^(0+128),w
  2699  0040  0084               	movwf	4
  2700  0041  120A  158A  2000  120A  118A  	fcall	stringdir
  2701  0046  00CF               	movwf	??_sprintf^(0+128)
  2702  0047  084F               	movf	??_sprintf^(0+128),w
  2703  0048  00DA               	movwf	sprintf@c^(0+128)
  2704  0049  085A               	movf	sprintf@c^(0+128),w
  2705  004A  1903               	btfsc	3,2
  2706  004B  29B8               	goto	l3694
  2707                           
  2708                           ;/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt.c: 550:   if(c != '%')
  2709  004C  3025               	movlw	37
  2710  004D  065A               	xorwf	sprintf@c^(0+128),w
  2711  004E  1903               	btfsc	3,2
  2712  004F  285C               	goto	l3618
  2713                           
  2714                           ;/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt.c: 552:   {;/opt/microchip/xc8/v
      +                          2.05/pic/sources/c90/common/doprnt.c: 553:    ((*sp++ = (c)));
  2715  0050  085A               	movf	sprintf@c^(0+128),w
  2716  0051  00CF               	movwf	??_sprintf^(0+128)
  2717  0052  0859               	movf	sprintf@sp^(0+128),w
  2718  0053  0084               	movwf	4
  2719  0054  084F               	movf	??_sprintf^(0+128),w
  2720  0055  1383               	bcf	3,7	;select IRP bank0
  2721  0056  0080               	movwf	0
  2722  0057  3001               	movlw	1
  2723  0058  00CF               	movwf	??_sprintf^(0+128)
  2724  0059  084F               	movf	??_sprintf^(0+128),w
  2725  005A  07D9               	addwf	sprintf@sp^(0+128),f
  2726                           
  2727                           ;/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt.c: 554:    continue;
  2728  005B  283C               	goto	l3692
  2729  005C                     l3618:	
  2730                           
  2731                           ;/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt.c: 558:   width = 0;
  2732  005C  01D7               	clrf	sprintf@width^(0+128)
  2733  005D  01D8               	clrf	(sprintf@width+1)^(0+128)
  2734                           
  2735                           ;/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt.c: 560:   flag = 0;
  2736  005E  01D4               	clrf	sprintf@flag^(0+128)
  2737                           
  2738                           ;/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt.c: 609:   if(isdigit((unsigned)*
      +                          f)) {
  2739  005F  084A               	movf	sprintf@f^(0+128),w
  2740  0060  0084               	movwf	4
  2741  0061  120A  158A  2000  120A  118A  	fcall	stringdir
  2742  0066  120A  158A  21C9  120A  118A  	fcall	_isdigit
  2743  006B  1C03               	btfss	3,0
  2744  006C  28B9               	goto	l3634
  2745                           
  2746                           ;/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt.c: 610:    width = 0;
  2747  006D  1683               	bsf	3,5	;RP0=1, select bank1
  2748  006E  1303               	bcf	3,6	;RP1=0, select bank1
  2749  006F  01D7               	clrf	sprintf@width^(0+128)
  2750  0070  01D8               	clrf	(sprintf@width+1)^(0+128)
  2751  0071                     l3624:	
  2752                           
  2753                           ;/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt.c: 612:     width *= 10;
  2754  0071  300A               	movlw	10
  2755  0072  1283               	bcf	3,5	;RP0=0, select bank0
  2756  0073  1303               	bcf	3,6	;RP1=0, select bank0
  2757  0074  00BD               	movwf	___wmul@multiplier
  2758  0075  3000               	movlw	0
  2759  0076  00BE               	movwf	___wmul@multiplier+1
  2760  0077  1683               	bsf	3,5	;RP0=1, select bank1
  2761  0078  1303               	bcf	3,6	;RP1=0, select bank1
  2762  0079  0858               	movf	(sprintf@width+1)^(0+128),w
  2763  007A  1283               	bcf	3,5	;RP0=0, select bank0
  2764  007B  1303               	bcf	3,6	;RP1=0, select bank0
  2765  007C  00C0               	movwf	___wmul@multiplicand+1
  2766  007D  1683               	bsf	3,5	;RP0=1, select bank1
  2767  007E  1303               	bcf	3,6	;RP1=0, select bank1
  2768  007F  0857               	movf	sprintf@width^(0+128),w
  2769  0080  1283               	bcf	3,5	;RP0=0, select bank0
  2770  0081  1303               	bcf	3,6	;RP1=0, select bank0
  2771  0082  00BF               	movwf	___wmul@multiplicand
  2772  0083  120A  158A  225C  120A  118A  	fcall	___wmul
  2773  0088  1283               	bcf	3,5	;RP0=0, select bank0
  2774  0089  1303               	bcf	3,6	;RP1=0, select bank0
  2775  008A  083E               	movf	?___wmul+1,w
  2776  008B  1683               	bsf	3,5	;RP0=1, select bank1
  2777  008C  1303               	bcf	3,6	;RP1=0, select bank1
  2778  008D  00D8               	movwf	(sprintf@width+1)^(0+128)
  2779  008E  1283               	bcf	3,5	;RP0=0, select bank0
  2780  008F  1303               	bcf	3,6	;RP1=0, select bank0
  2781  0090  083D               	movf	?___wmul,w
  2782  0091  1683               	bsf	3,5	;RP0=1, select bank1
  2783  0092  1303               	bcf	3,6	;RP1=0, select bank1
  2784  0093  00D7               	movwf	sprintf@width^(0+128)
  2785                           
  2786                           ;/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt.c: 613:        width += *f++ - '
      +                          0';
  2787  0094  084A               	movf	sprintf@f^(0+128),w
  2788  0095  0084               	movwf	4
  2789  0096  120A  158A  2000  120A  118A  	fcall	stringdir
  2790  009B  3ED0               	addlw	208
  2791  009C  00CF               	movwf	??_sprintf^(0+128)
  2792  009D  30FF               	movlw	255
  2793  009E  1803               	skipnc
  2794  009F  3000               	movlw	0
  2795  00A0  00D0               	movwf	(??_sprintf^(0+128)+1)
  2796  00A1  084F               	movf	??_sprintf^(0+128),w
  2797  00A2  07D7               	addwf	sprintf@width^(0+128),f
  2798  00A3  1803               	skipnc
  2799  00A4  0AD8               	incf	(sprintf@width+1)^(0+128),f
  2800  00A5  0850               	movf	(??_sprintf+1)^(0+128),w
  2801  00A6  07D8               	addwf	(sprintf@width+1)^(0+128),f
  2802  00A7  3001               	movlw	1
  2803  00A8  00CF               	movwf	??_sprintf^(0+128)
  2804  00A9  084F               	movf	??_sprintf^(0+128),w
  2805  00AA  07CA               	addwf	sprintf@f^(0+128),f
  2806                           
  2807                           ;/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt.c: 614:    } while(isdigit((unsi
      +                          gned)*f));
  2808  00AB  084A               	movf	sprintf@f^(0+128),w
  2809  00AC  0084               	movwf	4
  2810  00AD  120A  158A  2000  120A  118A  	fcall	stringdir
  2811  00B2  120A  158A  21C9  120A  118A  	fcall	_isdigit
  2812  00B7  1803               	btfsc	3,0
  2813  00B8  2871               	goto	l3624
  2814  00B9                     l3634:	
  2815  00B9  3001               	movlw	1
  2816  00BA  1683               	bsf	3,5	;RP0=1, select bank1
  2817  00BB  1303               	bcf	3,6	;RP1=0, select bank1
  2818  00BC  07CA               	addwf	sprintf@f^(0+128),f
  2819  00BD  30FF               	movlw	-1
  2820  00BE  074A               	addwf	sprintf@f^(0+128),w
  2821  00BF  0084               	movwf	4
  2822  00C0  120A  158A  2000  120A  118A  	fcall	stringdir
  2823  00C5  00DA               	movwf	sprintf@c^(0+128)
  2824  00C6  00CF               	movwf	??_sprintf^(0+128)
  2825  00C7  01D0               	clrf	(??_sprintf^(0+128)+1)
  2826                           
  2827                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2828                           ; Switch size 1, requested type "simple"
  2829                           ; Number of cases is 1, Range of values is 0 to 0
  2830                           ; switch strategies available:
  2831                           ; Name         Instructions Cycles
  2832                           ; simple_byte            4     3 (average)
  2833                           ; direct_byte           11     8 (fixed)
  2834                           ; jumptable            260     6 (fixed)
  2835                           ;	Chosen strategy is simple_byte
  2836  00C8  0850               	movf	(??_sprintf+1)^(0+128),w
  2837  00C9  3A00               	xorlw	0	; case 0
  2838  00CA  1903               	skipnz
  2839  00CB  28CD               	goto	l4028
  2840  00CC  283C               	goto	l3692
  2841  00CD                     l4028:	
  2842                           
  2843                           ; Switch size 1, requested type "simple"
  2844                           ; Number of cases is 3, Range of values is 0 to 105
  2845                           ; switch strategies available:
  2846                           ; Name         Instructions Cycles
  2847                           ; simple_byte           10     6 (average)
  2848                           ; jumptable            260     6 (fixed)
  2849                           ;	Chosen strategy is simple_byte
  2850  00CD  084F               	movf	??_sprintf^(0+128),w
  2851  00CE  3A00               	xorlw	0	; case 0
  2852  00CF  1903               	skipnz
  2853  00D0  29B8               	goto	l3694
  2854  00D1  3A64               	xorlw	100	; case 100
  2855  00D2  1903               	skipnz
  2856  00D3  28D8               	goto	l3636
  2857  00D4  3A0D               	xorlw	13	; case 105
  2858  00D5  1903               	skipnz
  2859  00D6  28D8               	goto	l3636
  2860  00D7  283C               	goto	l3692
  2861  00D8                     l3636:	
  2862                           
  2863                           ;/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt.c: 1272:   {;/opt/microchip/xc8/
      +                          v2.05/pic/sources/c90/common/doprnt.c: 1278:     val = (int)(*(int *)__va_arg((*(int **)
      +                          ap), (int)0));
  2864  00D8  0852               	movf	sprintf@ap^(0+128),w
  2865  00D9  0084               	movwf	4
  2866  00DA  1383               	bcf	3,7	;select IRP bank0
  2867  00DB  0800               	movf	0,w
  2868  00DC  00D5               	movwf	sprintf@val^(0+128)
  2869  00DD  0A84               	incf	4,f
  2870  00DE  0800               	movf	0,w
  2871  00DF  00D6               	movwf	(sprintf@val+1)^(0+128)
  2872  00E0  3002               	movlw	2
  2873  00E1  00CF               	movwf	??_sprintf^(0+128)
  2874  00E2  084F               	movf	??_sprintf^(0+128),w
  2875  00E3  07D2               	addwf	sprintf@ap^(0+128),f
  2876                           
  2877                           ;/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt.c: 1280:    if((int)val < 0) {
  2878  00E4  1FD6               	btfss	(sprintf@val+1)^(0+128),7
  2879  00E5  28EF               	goto	l3646
  2880                           
  2881                           ;/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt.c: 1281:     flag |= 0x03;
  2882  00E6  3003               	movlw	3
  2883  00E7  00CF               	movwf	??_sprintf^(0+128)
  2884  00E8  084F               	movf	??_sprintf^(0+128),w
  2885  00E9  04D4               	iorwf	sprintf@flag^(0+128),f
  2886                           
  2887                           ;/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt.c: 1282:     val = -val;
  2888  00EA  09D5               	comf	sprintf@val^(0+128),f
  2889  00EB  09D6               	comf	(sprintf@val+1)^(0+128),f
  2890  00EC  0AD5               	incf	sprintf@val^(0+128),f
  2891  00ED  1903               	skipnz
  2892  00EE  0AD6               	incf	(sprintf@val+1)^(0+128),f
  2893  00EF                     l3646:	
  2894                           
  2895                           ;/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt.c: 1285:   };/opt/microchip/xc8/
      +                          v2.05/pic/sources/c90/common/doprnt.c: 1324:    for(c = 1 ; c != sizeof dpowers/sizeof d
      +                          powers[0] ; c++)
  2896  00EF  01DA               	clrf	sprintf@c^(0+128)
  2897  00F0  0ADA               	incf	sprintf@c^(0+128),f
  2898  00F1                     l3652:	
  2899                           
  2900                           ;/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt.c: 1325:     if(val < dpowers[c]
      +                          )
  2901  00F1  085A               	movf	sprintf@c^(0+128),w
  2902  00F2  00CF               	movwf	??_sprintf^(0+128)
  2903  00F3  074F               	addwf	??_sprintf^(0+128),w
  2904  00F4  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2905  00F5  0084               	movwf	4
  2906  00F6  120A  158A  2000  120A  118A  	fcall	stringdir
  2907  00FB  00D0               	movwf	(??_sprintf+1)^(0+128)
  2908  00FC  120A  158A  2000  120A  118A  	fcall	stringdir
  2909  0101  00D1               	movwf	((??_sprintf+1)^(0+128)+1)
  2910  0102  0851               	movf	(??_sprintf+2)^(0+128),w
  2911  0103  0256               	subwf	(sprintf@val+1)^(0+128),w
  2912  0104  1D03               	skipz
  2913  0105  2908               	goto	u3065
  2914  0106  0850               	movf	(??_sprintf+1)^(0+128),w
  2915  0107  0255               	subwf	sprintf@val^(0+128),w
  2916  0108                     u3065:	
  2917  0108  1C03               	btfss	3,0
  2918  0109  2912               	goto	l3658
  2919  010A  3001               	movlw	1
  2920  010B  00CF               	movwf	??_sprintf^(0+128)
  2921  010C  084F               	movf	??_sprintf^(0+128),w
  2922  010D  07DA               	addwf	sprintf@c^(0+128),f
  2923  010E  3005               	movlw	5
  2924  010F  065A               	xorwf	sprintf@c^(0+128),w
  2925  0110  1D03               	btfss	3,2
  2926  0111  28F1               	goto	l3652
  2927  0112                     l3658:	
  2928                           
  2929                           ;/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt.c: 1364:   if(width && flag & 0x
      +                          03)
  2930  0112  0857               	movf	sprintf@width^(0+128),w
  2931  0113  0458               	iorwf	(sprintf@width+1)^(0+128),w
  2932  0114  1903               	btfsc	3,2
  2933  0115  2920               	goto	l650
  2934  0116  0854               	movf	sprintf@flag^(0+128),w
  2935  0117  3903               	andlw	3
  2936  0118  1903               	btfsc	3,2
  2937  0119  2920               	goto	l650
  2938                           
  2939                           ;/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt.c: 1365:    width--;
  2940  011A  30FF               	movlw	255
  2941  011B  07D7               	addwf	sprintf@width^(0+128),f
  2942  011C  1803               	skipnc
  2943  011D  0AD8               	incf	(sprintf@width+1)^(0+128),f
  2944  011E  30FF               	movlw	255
  2945  011F  07D8               	addwf	(sprintf@width+1)^(0+128),f
  2946  0120                     l650:	
  2947                           
  2948                           ;/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt.c: 1400:   if(width > c)
  2949  0120  0858               	movf	(sprintf@width+1)^(0+128),w
  2950  0121  3A80               	xorlw	128
  2951  0122  3C80               	sublw	128
  2952  0123  1D03               	skipz
  2953  0124  2927               	goto	u3105
  2954  0125  0857               	movf	sprintf@width^(0+128),w
  2955  0126  025A               	subwf	sprintf@c^(0+128),w
  2956  0127                     u3105:	
  2957  0127  1803               	skipnc
  2958  0128  2935               	goto	l3666
  2959                           
  2960                           ;/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt.c: 1401:    width -= c;
  2961  0129  1683               	bsf	3,5	;RP0=1, select bank1
  2962  012A  1303               	bcf	3,6	;RP1=0, select bank1
  2963  012B  085A               	movf	sprintf@c^(0+128),w
  2964  012C  00CF               	movwf	??_sprintf^(0+128)
  2965  012D  01D0               	clrf	(??_sprintf^(0+128)+1)
  2966  012E  084F               	movf	??_sprintf^(0+128),w
  2967  012F  02D7               	subwf	sprintf@width^(0+128),f
  2968  0130  0850               	movf	(??_sprintf+1)^(0+128),w
  2969  0131  1C03               	skipc
  2970  0132  03D8               	decf	(sprintf@width+1)^(0+128),f
  2971  0133  02D8               	subwf	(sprintf@width+1)^(0+128),f
  2972  0134  2939               	goto	l3668
  2973  0135                     l3666:	
  2974                           
  2975                           ;/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt.c: 1403:    width = 0;
  2976  0135  1683               	bsf	3,5	;RP0=1, select bank1
  2977  0136  1303               	bcf	3,6	;RP1=0, select bank1
  2978  0137  01D7               	clrf	sprintf@width^(0+128)
  2979  0138  01D8               	clrf	(sprintf@width+1)^(0+128)
  2980  0139                     l3668:	
  2981                           
  2982                           ;/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt.c: 1441:   {;/opt/microchip/xc8/
      +                          v2.05/pic/sources/c90/common/doprnt.c: 1443:    if(width
  2983  0139  0857               	movf	sprintf@width^(0+128),w
  2984  013A  0458               	iorwf	(sprintf@width+1)^(0+128),w
  2985  013B  1903               	btfsc	3,2
  2986  013C  2952               	goto	l3676
  2987  013D                     l3670:	
  2988                           
  2989                           ;/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt.c: 1449:      ((*sp++ = (' ')));
  2990  013D  3020               	movlw	32
  2991  013E  00CF               	movwf	??_sprintf^(0+128)
  2992  013F  0859               	movf	sprintf@sp^(0+128),w
  2993  0140  0084               	movwf	4
  2994  0141  084F               	movf	??_sprintf^(0+128),w
  2995  0142  1383               	bcf	3,7	;select IRP bank0
  2996  0143  0080               	movwf	0
  2997  0144  3001               	movlw	1
  2998  0145  00CF               	movwf	??_sprintf^(0+128)
  2999  0146  084F               	movf	??_sprintf^(0+128),w
  3000  0147  07D9               	addwf	sprintf@sp^(0+128),f
  3001  0148  30FF               	movlw	255
  3002  0149  07D7               	addwf	sprintf@width^(0+128),f
  3003  014A  1803               	skipnc
  3004  014B  0AD8               	incf	(sprintf@width+1)^(0+128),f
  3005  014C  30FF               	movlw	255
  3006  014D  07D8               	addwf	(sprintf@width+1)^(0+128),f
  3007  014E  0857               	movf	sprintf@width^(0+128),w
  3008  014F  0458               	iorwf	(sprintf@width+1)^(0+128),w
  3009  0150  1D03               	btfss	3,2
  3010  0151  293D               	goto	l3670
  3011  0152                     l3676:	
  3012                           
  3013                           ;/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt.c: 1457:    if(flag & 0x03)
  3014  0152  0854               	movf	sprintf@flag^(0+128),w
  3015  0153  3903               	andlw	3
  3016  0154  1903               	btfsc	3,2
  3017  0155  2961               	goto	l3682
  3018                           
  3019                           ;/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt.c: 1458:     ((*sp++ = ('-')));
  3020  0156  302D               	movlw	45
  3021  0157  00CF               	movwf	??_sprintf^(0+128)
  3022  0158  0859               	movf	sprintf@sp^(0+128),w
  3023  0159  0084               	movwf	4
  3024  015A  084F               	movf	??_sprintf^(0+128),w
  3025  015B  1383               	bcf	3,7	;select IRP bank0
  3026  015C  0080               	movwf	0
  3027  015D  3001               	movlw	1
  3028  015E  00CF               	movwf	??_sprintf^(0+128)
  3029  015F  084F               	movf	??_sprintf^(0+128),w
  3030  0160  07D9               	addwf	sprintf@sp^(0+128),f
  3031  0161                     l3682:	
  3032                           
  3033                           ;/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt.c: 1488:   };/opt/microchip/xc8/
      +                          v2.05/pic/sources/c90/common/doprnt.c: 1491:   prec = c;
  3034  0161  085A               	movf	sprintf@c^(0+128),w
  3035  0162  00CF               	movwf	??_sprintf^(0+128)
  3036  0163  084F               	movf	??_sprintf^(0+128),w
  3037  0164  00D3               	movwf	sprintf@prec^(0+128)
  3038  0165                     l3690:	
  3039                           ;/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt.c: 1493:   while(prec--) {
  3040                           
  3041                           
  3042                           ;/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt.c: 1493:   while(prec--) {
  3043  0165  30FF               	movlw	255
  3044  0166  00CF               	movwf	??_sprintf^(0+128)
  3045  0167  084F               	movf	??_sprintf^(0+128),w
  3046  0168  07D3               	addwf	sprintf@prec^(0+128),f
  3047  0169  0A53               	incf	sprintf@prec^(0+128),w
  3048  016A  1903               	btfsc	3,2
  3049  016B  283C               	goto	l3692
  3050                           
  3051                           ;/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt.c: 1497:    {;/opt/microchip/xc8
      +                          /v2.05/pic/sources/c90/common/doprnt.c: 1508:     c = (val / dpowers[prec]) % 10 + '0';
  3052  016C  300A               	movlw	10
  3053  016D  00C6               	movwf	___lwmod@divisor^(0+128)
  3054  016E  3000               	movlw	0
  3055  016F  00C7               	movwf	(___lwmod@divisor^(0+128)+1)
  3056  0170  0853               	movf	sprintf@prec^(0+128),w
  3057  0171  00CF               	movwf	??_sprintf^(0+128)
  3058  0172  074F               	addwf	??_sprintf^(0+128),w
  3059  0173  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  3060  0174  0084               	movwf	4
  3061  0175  120A  158A  2000  120A  118A  	fcall	stringdir
  3062  017A  1283               	bcf	3,5	;RP0=0, select bank0
  3063  017B  1303               	bcf	3,6	;RP1=0, select bank0
  3064  017C  00BD               	movwf	___lwdiv@divisor
  3065  017D  120A  158A  2000  120A  118A  	fcall	stringdir
  3066  0182  00BE               	movwf	___lwdiv@divisor+1
  3067  0183  1683               	bsf	3,5	;RP0=1, select bank1
  3068  0184  1303               	bcf	3,6	;RP1=0, select bank1
  3069  0185  0856               	movf	(sprintf@val+1)^(0+128),w
  3070  0186  1283               	bcf	3,5	;RP0=0, select bank0
  3071  0187  1303               	bcf	3,6	;RP1=0, select bank0
  3072  0188  00C0               	movwf	___lwdiv@dividend+1
  3073  0189  1683               	bsf	3,5	;RP0=1, select bank1
  3074  018A  1303               	bcf	3,6	;RP1=0, select bank1
  3075  018B  0855               	movf	sprintf@val^(0+128),w
  3076  018C  1283               	bcf	3,5	;RP0=0, select bank0
  3077  018D  1303               	bcf	3,6	;RP1=0, select bank0
  3078  018E  00BF               	movwf	___lwdiv@dividend
  3079  018F  120A  158A  263A  120A  118A  	fcall	___lwdiv
  3080  0194  1283               	bcf	3,5	;RP0=0, select bank0
  3081  0195  1303               	bcf	3,6	;RP1=0, select bank0
  3082  0196  083E               	movf	?___lwdiv+1,w
  3083  0197  1683               	bsf	3,5	;RP0=1, select bank1
  3084  0198  1303               	bcf	3,6	;RP1=0, select bank1
  3085  0199  00C9               	movwf	(___lwmod@dividend+1)^(0+128)
  3086  019A  1283               	bcf	3,5	;RP0=0, select bank0
  3087  019B  1303               	bcf	3,6	;RP1=0, select bank0
  3088  019C  083D               	movf	?___lwdiv,w
  3089  019D  1683               	bsf	3,5	;RP0=1, select bank1
  3090  019E  1303               	bcf	3,6	;RP1=0, select bank1
  3091  019F  00C8               	movwf	___lwmod@dividend^(0+128)
  3092  01A0  120A  158A  23E8  120A  118A  	fcall	___lwmod
  3093  01A5  1683               	bsf	3,5	;RP0=1, select bank1
  3094  01A6  1303               	bcf	3,6	;RP1=0, select bank1
  3095  01A7  0846               	movf	?___lwmod^(0+128),w
  3096  01A8  3E30               	addlw	48
  3097  01A9  00D0               	movwf	(??_sprintf+1)^(0+128)
  3098  01AA  0850               	movf	(??_sprintf+1)^(0+128),w
  3099  01AB  00DA               	movwf	sprintf@c^(0+128)
  3100                           
  3101                           ;/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt.c: 1542:    };/opt/microchip/xc8
      +                          /v2.05/pic/sources/c90/common/doprnt.c: 1543:    ((*sp++ = (c)));
  3102  01AC  085A               	movf	sprintf@c^(0+128),w
  3103  01AD  00CF               	movwf	??_sprintf^(0+128)
  3104  01AE  0859               	movf	sprintf@sp^(0+128),w
  3105  01AF  0084               	movwf	4
  3106  01B0  084F               	movf	??_sprintf^(0+128),w
  3107  01B1  1383               	bcf	3,7	;select IRP bank0
  3108  01B2  0080               	movwf	0
  3109  01B3  3001               	movlw	1
  3110  01B4  00CF               	movwf	??_sprintf^(0+128)
  3111  01B5  084F               	movf	??_sprintf^(0+128),w
  3112  01B6  07D9               	addwf	sprintf@sp^(0+128),f
  3113  01B7  2965               	goto	l3690
  3114  01B8                     l3694:	
  3115                           
  3116                           ;/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt.c: 1557:  *sp = 0;
  3117  01B8  0859               	movf	sprintf@sp^(0+128),w
  3118  01B9  0084               	movwf	4
  3119  01BA  1383               	bcf	3,7	;select IRP bank0
  3120  01BB  0180               	clrf	0
  3121  01BC  0008               	return
  3122  01BD                     __end_of_sprintf:	
  3123                           
  3124                           	psect	text4
  3125  09C9                     __ptext4:	
  3126 ;; *************** function _isdigit *****************
  3127 ;; Defined at:
  3128 ;;		line 8 in file "/opt/microchip/xc8/v2.05/pic/sources/c90/common/isdigit.c"
  3129 ;; Parameters:    Size  Location     Type
  3130 ;;  c               1    wreg     unsigned char 
  3131 ;; Auto vars:     Size  Location     Type
  3132 ;;  c               1   30[BANK0 ] unsigned char 
  3133 ;; Return value:  Size  Location     Type
  3134 ;;		None               void
  3135 ;; Registers used:
  3136 ;;		wreg, status,2, status,0
  3137 ;; Tracked objects:
  3138 ;;		On entry : 0/0
  3139 ;;		On exit  : 0/0
  3140 ;;		Unchanged: 0/0
  3141 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3142 ;;      Params:         0       0       0       0       0
  3143 ;;      Locals:         0       2       0       0       0
  3144 ;;      Temps:          0       0       0       0       0
  3145 ;;      Totals:         0       2       0       0       0
  3146 ;;Total ram usage:        2 bytes
  3147 ;; Hardware stack levels used:    1
  3148 ;; Hardware stack levels required when called:    5
  3149 ;; This function calls:
  3150 ;;		Nothing
  3151 ;; This function is called by:
  3152 ;;		_sprintf
  3153 ;; This function uses a non-reentrant model
  3154 ;;
  3155                           
  3156                           
  3157                           ;psect for function _isdigit
  3158  09C9                     _isdigit:	
  3159                           
  3160                           ;incstack = 0
  3161                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  3162                           ;isdigit@c stored from wreg
  3163  09C9  1283               	bcf	3,5	;RP0=0, select bank0
  3164  09CA  1303               	bcf	3,6	;RP1=0, select bank0
  3165  09CB  00BE               	movwf	isdigit@c
  3166  09CC  01BD               	clrf	_isdigit$1093
  3167  09CD  303A               	movlw	58
  3168  09CE  023E               	subwf	isdigit@c,w
  3169  09CF  1803               	skipnc
  3170  09D0  29D7               	goto	l2554
  3171  09D1  3030               	movlw	48
  3172  09D2  023E               	subwf	isdigit@c,w
  3173  09D3  1C03               	skipc
  3174  09D4  29D7               	goto	l2554
  3175  09D5  01BD               	clrf	_isdigit$1093
  3176  09D6  0ABD               	incf	_isdigit$1093,f
  3177  09D7                     l2554:	
  3178  09D7  0C3D               	rrf	_isdigit$1093,w
  3179  09D8  0008               	return
  3180  09D9                     __end_of_isdigit:	
  3181                           
  3182                           	psect	text5
  3183  0BE8                     __ptext5:	
  3184 ;; *************** function ___lwmod *****************
  3185 ;; Defined at:
  3186 ;;		line 5 in file "/opt/microchip/xc8/v2.05/pic/sources/c90/common/lwmod.c"
  3187 ;; Parameters:    Size  Location     Type
  3188 ;;  divisor         2    3[BANK1 ] unsigned int 
  3189 ;;  dividend        2    5[BANK1 ] unsigned int 
  3190 ;; Auto vars:     Size  Location     Type
  3191 ;;  counter         1   35[BANK0 ] unsigned char 
  3192 ;; Return value:  Size  Location     Type
  3193 ;;                  2    3[BANK1 ] unsigned int 
  3194 ;; Registers used:
  3195 ;;		wreg, status,2, status,0
  3196 ;; Tracked objects:
  3197 ;;		On entry : 0/0
  3198 ;;		On exit  : 0/0
  3199 ;;		Unchanged: 0/0
  3200 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3201 ;;      Params:         0       0       4       0       0
  3202 ;;      Locals:         0       1       0       0       0
  3203 ;;      Temps:          0       1       0       0       0
  3204 ;;      Totals:         0       2       4       0       0
  3205 ;;Total ram usage:        6 bytes
  3206 ;; Hardware stack levels used:    1
  3207 ;; Hardware stack levels required when called:    5
  3208 ;; This function calls:
  3209 ;;		Nothing
  3210 ;; This function is called by:
  3211 ;;		_main
  3212 ;;		_sprintf
  3213 ;; This function uses a non-reentrant model
  3214 ;;
  3215                           
  3216                           
  3217                           ;psect for function ___lwmod
  3218  0BE8                     ___lwmod:	
  3219                           
  3220                           ;incstack = 0
  3221                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  3222  0BE8  1683               	bsf	3,5	;RP0=1, select bank1
  3223  0BE9  1303               	bcf	3,6	;RP1=0, select bank1
  3224  0BEA  0846               	movf	___lwmod@divisor^(0+128),w
  3225  0BEB  0447               	iorwf	(___lwmod@divisor+1)^(0+128),w
  3226  0BEC  1903               	btfsc	3,2
  3227  0BED  2C21               	goto	l3594
  3228  0BEE  1283               	bcf	3,5	;RP0=0, select bank0
  3229  0BEF  1303               	bcf	3,6	;RP1=0, select bank0
  3230  0BF0  01C3               	clrf	___lwmod@counter
  3231  0BF1  0AC3               	incf	___lwmod@counter,f
  3232  0BF2                     l3584:	
  3233  0BF2  1683               	bsf	3,5	;RP0=1, select bank1
  3234  0BF3  1303               	bcf	3,6	;RP1=0, select bank1
  3235  0BF4  1BC7               	btfsc	(___lwmod@divisor+1)^(0+128),7
  3236  0BF5  2C04               	goto	l3586
  3237  0BF6  3001               	movlw	1
  3238  0BF7                     u2965:	
  3239  0BF7  1003               	clrc
  3240  0BF8  0DC6               	rlf	___lwmod@divisor^(0+128),f
  3241  0BF9  0DC7               	rlf	(___lwmod@divisor+1)^(0+128),f
  3242  0BFA  3EFF               	addlw	-1
  3243  0BFB  1D03               	skipz
  3244  0BFC  2BF7               	goto	u2965
  3245  0BFD  3001               	movlw	1
  3246  0BFE  1283               	bcf	3,5	;RP0=0, select bank0
  3247  0BFF  1303               	bcf	3,6	;RP1=0, select bank0
  3248  0C00  00C2               	movwf	??___lwmod
  3249  0C01  0842               	movf	??___lwmod,w
  3250  0C02  07C3               	addwf	___lwmod@counter,f
  3251  0C03  2BF2               	goto	l3584
  3252  0C04                     l3586:	
  3253  0C04  1683               	bsf	3,5	;RP0=1, select bank1
  3254  0C05  1303               	bcf	3,6	;RP1=0, select bank1
  3255  0C06  0847               	movf	(___lwmod@divisor+1)^(0+128),w
  3256  0C07  0249               	subwf	(___lwmod@dividend+1)^(0+128),w
  3257  0C08  1D03               	skipz
  3258  0C09  2C0C               	goto	u2985
  3259  0C0A  0846               	movf	___lwmod@divisor^(0+128),w
  3260  0C0B  0248               	subwf	___lwmod@dividend^(0+128),w
  3261  0C0C                     u2985:	
  3262  0C0C  1C03               	skipc
  3263  0C0D  2C14               	goto	l3590
  3264  0C0E  0846               	movf	___lwmod@divisor^(0+128),w
  3265  0C0F  02C8               	subwf	___lwmod@dividend^(0+128),f
  3266  0C10  0847               	movf	(___lwmod@divisor+1)^(0+128),w
  3267  0C11  1C03               	skipc
  3268  0C12  03C9               	decf	(___lwmod@dividend+1)^(0+128),f
  3269  0C13  02C9               	subwf	(___lwmod@dividend+1)^(0+128),f
  3270  0C14                     l3590:	
  3271  0C14  3001               	movlw	1
  3272  0C15                     u2995:	
  3273  0C15  1003               	clrc
  3274  0C16  0CC7               	rrf	(___lwmod@divisor+1)^(0+128),f
  3275  0C17  0CC6               	rrf	___lwmod@divisor^(0+128),f
  3276  0C18  3EFF               	addlw	-1
  3277  0C19  1D03               	skipz
  3278  0C1A  2C15               	goto	u2995
  3279  0C1B  3001               	movlw	1
  3280  0C1C  1283               	bcf	3,5	;RP0=0, select bank0
  3281  0C1D  1303               	bcf	3,6	;RP1=0, select bank0
  3282  0C1E  02C3               	subwf	___lwmod@counter,f
  3283  0C1F  1D03               	btfss	3,2
  3284  0C20  2C04               	goto	l3586
  3285  0C21                     l3594:	
  3286  0C21  1683               	bsf	3,5	;RP0=1, select bank1
  3287  0C22  1303               	bcf	3,6	;RP1=0, select bank1
  3288  0C23  0849               	movf	(___lwmod@dividend+1)^(0+128),w
  3289  0C24  00C7               	movwf	(?___lwmod+1)^(0+128)
  3290  0C25  0848               	movf	___lwmod@dividend^(0+128),w
  3291  0C26  00C6               	movwf	?___lwmod^(0+128)
  3292  0C27  0008               	return
  3293  0C28                     __end_of___lwmod:	
  3294                           
  3295                           	psect	text6
  3296  0E3A                     __ptext6:	
  3297 ;; *************** function ___lwdiv *****************
  3298 ;; Defined at:
  3299 ;;		line 5 in file "/opt/microchip/xc8/v2.05/pic/sources/c90/common/lwdiv.c"
  3300 ;; Parameters:    Size  Location     Type
  3301 ;;  divisor         2   29[BANK0 ] unsigned int 
  3302 ;;  dividend        2   31[BANK0 ] unsigned int 
  3303 ;; Auto vars:     Size  Location     Type
  3304 ;;  quotient        2    1[BANK1 ] unsigned int 
  3305 ;;  counter         1    0[BANK1 ] unsigned char 
  3306 ;; Return value:  Size  Location     Type
  3307 ;;                  2   29[BANK0 ] unsigned int 
  3308 ;; Registers used:
  3309 ;;		wreg, status,2, status,0
  3310 ;; Tracked objects:
  3311 ;;		On entry : 0/0
  3312 ;;		On exit  : 0/0
  3313 ;;		Unchanged: 0/0
  3314 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3315 ;;      Params:         0       4       0       0       0
  3316 ;;      Locals:         0       0       3       0       0
  3317 ;;      Temps:          0       1       0       0       0
  3318 ;;      Totals:         0       5       3       0       0
  3319 ;;Total ram usage:        8 bytes
  3320 ;; Hardware stack levels used:    1
  3321 ;; Hardware stack levels required when called:    5
  3322 ;; This function calls:
  3323 ;;		Nothing
  3324 ;; This function is called by:
  3325 ;;		_main
  3326 ;;		_sprintf
  3327 ;; This function uses a non-reentrant model
  3328 ;;
  3329                           
  3330                           
  3331                           ;psect for function ___lwdiv
  3332  0E3A                     ___lwdiv:	
  3333                           
  3334                           ;incstack = 0
  3335                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  3336  0E3A  1683               	bsf	3,5	;RP0=1, select bank1
  3337  0E3B  1303               	bcf	3,6	;RP1=0, select bank1
  3338  0E3C  01C4               	clrf	___lwdiv@quotient^(0+128)
  3339  0E3D  01C5               	clrf	(___lwdiv@quotient+1)^(0+128)
  3340  0E3E  1283               	bcf	3,5	;RP0=0, select bank0
  3341  0E3F  1303               	bcf	3,6	;RP1=0, select bank0
  3342  0E40  083D               	movf	___lwdiv@divisor,w
  3343  0E41  043E               	iorwf	___lwdiv@divisor+1,w
  3344  0E42  1903               	btfsc	3,2
  3345  0E43  2E84               	goto	l3572
  3346  0E44  1683               	bsf	3,5	;RP0=1, select bank1
  3347  0E45  1303               	bcf	3,6	;RP1=0, select bank1
  3348  0E46  01C3               	clrf	___lwdiv@counter^(0+128)
  3349  0E47  0AC3               	incf	___lwdiv@counter^(0+128),f
  3350  0E48                     l3560:	
  3351  0E48  1283               	bcf	3,5	;RP0=0, select bank0
  3352  0E49  1303               	bcf	3,6	;RP1=0, select bank0
  3353  0E4A  1BBE               	btfsc	___lwdiv@divisor+1,7
  3354  0E4B  2E5A               	goto	l3562
  3355  0E4C  3001               	movlw	1
  3356  0E4D                     u2895:	
  3357  0E4D  1003               	clrc
  3358  0E4E  0DBD               	rlf	___lwdiv@divisor,f
  3359  0E4F  0DBE               	rlf	___lwdiv@divisor+1,f
  3360  0E50  3EFF               	addlw	-1
  3361  0E51  1D03               	skipz
  3362  0E52  2E4D               	goto	u2895
  3363  0E53  3001               	movlw	1
  3364  0E54  00C1               	movwf	??___lwdiv
  3365  0E55  0841               	movf	??___lwdiv,w
  3366  0E56  1683               	bsf	3,5	;RP0=1, select bank1
  3367  0E57  1303               	bcf	3,6	;RP1=0, select bank1
  3368  0E58  07C3               	addwf	___lwdiv@counter^(0+128),f
  3369  0E59  2E48               	goto	l3560
  3370  0E5A                     l3562:	
  3371  0E5A  3001               	movlw	1
  3372  0E5B  1683               	bsf	3,5	;RP0=1, select bank1
  3373  0E5C  1303               	bcf	3,6	;RP1=0, select bank1
  3374  0E5D                     u2915:	
  3375  0E5D  1003               	clrc
  3376  0E5E  0DC4               	rlf	___lwdiv@quotient^(0+128),f
  3377  0E5F  0DC5               	rlf	(___lwdiv@quotient+1)^(0+128),f
  3378  0E60  3EFF               	addlw	-1
  3379  0E61  1D03               	skipz
  3380  0E62  2E5D               	goto	u2915
  3381  0E63  1283               	bcf	3,5	;RP0=0, select bank0
  3382  0E64  1303               	bcf	3,6	;RP1=0, select bank0
  3383  0E65  083E               	movf	___lwdiv@divisor+1,w
  3384  0E66  0240               	subwf	___lwdiv@dividend+1,w
  3385  0E67  1D03               	skipz
  3386  0E68  2E6B               	goto	u2925
  3387  0E69  083D               	movf	___lwdiv@divisor,w
  3388  0E6A  023F               	subwf	___lwdiv@dividend,w
  3389  0E6B                     u2925:	
  3390  0E6B  1C03               	skipc
  3391  0E6C  2E76               	goto	l3568
  3392  0E6D  083D               	movf	___lwdiv@divisor,w
  3393  0E6E  02BF               	subwf	___lwdiv@dividend,f
  3394  0E6F  083E               	movf	___lwdiv@divisor+1,w
  3395  0E70  1C03               	skipc
  3396  0E71  03C0               	decf	___lwdiv@dividend+1,f
  3397  0E72  02C0               	subwf	___lwdiv@dividend+1,f
  3398  0E73  1683               	bsf	3,5	;RP0=1, select bank1
  3399  0E74  1303               	bcf	3,6	;RP1=0, select bank1
  3400  0E75  1444               	bsf	___lwdiv@quotient^(0+128),0
  3401  0E76                     l3568:	
  3402  0E76  3001               	movlw	1
  3403  0E77  1283               	bcf	3,5	;RP0=0, select bank0
  3404  0E78                     u2935:	
  3405  0E78  1003               	clrc
  3406  0E79  0CBE               	rrf	___lwdiv@divisor+1,f
  3407  0E7A  0CBD               	rrf	___lwdiv@divisor,f
  3408  0E7B  3EFF               	addlw	-1
  3409  0E7C  1D03               	skipz
  3410  0E7D  2E78               	goto	u2935
  3411  0E7E  3001               	movlw	1
  3412  0E7F  1683               	bsf	3,5	;RP0=1, select bank1
  3413  0E80  1303               	bcf	3,6	;RP1=0, select bank1
  3414  0E81  02C3               	subwf	___lwdiv@counter^(0+128),f
  3415  0E82  1D03               	btfss	3,2
  3416  0E83  2E5A               	goto	l3562
  3417  0E84                     l3572:	
  3418  0E84  1683               	bsf	3,5	;RP0=1, select bank1
  3419  0E85  1303               	bcf	3,6	;RP1=0, select bank1
  3420  0E86  0845               	movf	(___lwdiv@quotient+1)^(0+128),w
  3421  0E87  1283               	bcf	3,5	;RP0=0, select bank0
  3422  0E88  1303               	bcf	3,6	;RP1=0, select bank0
  3423  0E89  00BE               	movwf	?___lwdiv+1
  3424  0E8A  1683               	bsf	3,5	;RP0=1, select bank1
  3425  0E8B  1303               	bcf	3,6	;RP1=0, select bank1
  3426  0E8C  0844               	movf	___lwdiv@quotient^(0+128),w
  3427  0E8D  1283               	bcf	3,5	;RP0=0, select bank0
  3428  0E8E  1303               	bcf	3,6	;RP1=0, select bank0
  3429  0E8F  00BD               	movwf	?___lwdiv
  3430  0E90  0008               	return
  3431  0E91                     __end_of___lwdiv:	
  3432                           
  3433                           	psect	text7
  3434  0FA3                     __ptext7:	
  3435 ;; *************** function _setData *****************
  3436 ;; Defined at:
  3437 ;;		line 44 in file "eeprom.c"
  3438 ;; Parameters:    Size  Location     Type
  3439 ;;  full            1    wreg     unsigned char 
  3440 ;; Auto vars:     Size  Location     Type
  3441 ;;  full            1   34[BANK0 ] unsigned char 
  3442 ;;  data1           1   33[BANK0 ] unsigned char 
  3443 ;;  data0           1   32[BANK0 ] unsigned char 
  3444 ;; Return value:  Size  Location     Type
  3445 ;;                  1    wreg      void 
  3446 ;; Registers used:
  3447 ;;		wreg, status,2, status,0, pclath, cstack
  3448 ;; Tracked objects:
  3449 ;;		On entry : 0/0
  3450 ;;		On exit  : 0/0
  3451 ;;		Unchanged: 0/0
  3452 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3453 ;;      Params:         0       0       0       0       0
  3454 ;;      Locals:         0       3       0       0       0
  3455 ;;      Temps:          0       1       0       0       0
  3456 ;;      Totals:         0       4       0       0       0
  3457 ;;Total ram usage:        4 bytes
  3458 ;; Hardware stack levels used:    1
  3459 ;; Hardware stack levels required when called:    6
  3460 ;; This function calls:
  3461 ;;		_writeEEPROM
  3462 ;; This function is called by:
  3463 ;;		_setFrequency
  3464 ;; This function uses a non-reentrant model
  3465 ;;
  3466                           
  3467                           
  3468                           ;psect for function _setData
  3469  0FA3                     _setData:	
  3470                           
  3471                           ;incstack = 0
  3472                           ; Regs used in _setData: [wreg+status,2+status,0+pclath+cstack]
  3473                           ;setData@full stored from wreg
  3474  0FA3  1283               	bcf	3,5	;RP0=0, select bank0
  3475  0FA4  1303               	bcf	3,6	;RP1=0, select bank0
  3476  0FA5  00C2               	movwf	setData@full
  3477                           
  3478                           ;eeprom.c: 45:     unsigned char data0 = frequency & 0x00FF;
  3479  0FA6  0844               	movf	_frequency,w
  3480  0FA7  00BF               	movwf	??_setData
  3481  0FA8  083F               	movf	??_setData,w
  3482  0FA9  00C0               	movwf	setData@data0
  3483                           
  3484                           ;eeprom.c: 46:     unsigned char data1 = frequency >> 8;
  3485  0FAA  0845               	movf	_frequency+1,w
  3486  0FAB  00BF               	movwf	??_setData
  3487  0FAC  083F               	movf	??_setData,w
  3488  0FAD  00C1               	movwf	setData@data1
  3489                           
  3490                           ;eeprom.c: 47:     if(full)writeEEPROM(data0 ,0);
  3491  0FAE  0842               	movf	setData@full,w
  3492  0FAF  1903               	btfsc	3,2
  3493  0FB0  2FB8               	goto	l2750
  3494  0FB1  01BD               	clrf	writeEEPROM@address
  3495  0FB2  0840               	movf	setData@data0,w
  3496  0FB3  120A  158A  221E  120A  158A  	fcall	_writeEEPROM
  3497  0FB8                     l2750:	
  3498                           
  3499                           ;eeprom.c: 48:     if(full)writeEEPROM(data1 ,1);
  3500  0FB8  1283               	bcf	3,5	;RP0=0, select bank0
  3501  0FB9  1303               	bcf	3,6	;RP1=0, select bank0
  3502  0FBA  0842               	movf	setData@full,w
  3503  0FBB  1903               	btfsc	3,2
  3504  0FBC  2FC5               	goto	l70
  3505  0FBD  01BD               	clrf	writeEEPROM@address
  3506  0FBE  0ABD               	incf	writeEEPROM@address,f
  3507  0FBF  0841               	movf	setData@data1,w
  3508  0FC0  120A  158A  221E  120A  158A  	fcall	_writeEEPROM
  3509  0FC5                     l70:	
  3510                           
  3511                           ;eeprom.c: 49:     writeEEPROM(months ,2);
  3512  0FC5  3002               	movlw	2
  3513  0FC6  1283               	bcf	3,5	;RP0=0, select bank0
  3514  0FC7  1303               	bcf	3,6	;RP1=0, select bank0
  3515  0FC8  00BF               	movwf	??_setData
  3516  0FC9  083F               	movf	??_setData,w
  3517  0FCA  00BD               	movwf	writeEEPROM@address
  3518  0FCB  0850               	movf	_months,w
  3519  0FCC  120A  158A  221E  120A  158A  	fcall	_writeEEPROM
  3520                           
  3521                           ;eeprom.c: 50:     writeEEPROM(days ,3);
  3522  0FD1  3003               	movlw	3
  3523  0FD2  1283               	bcf	3,5	;RP0=0, select bank0
  3524  0FD3  1303               	bcf	3,6	;RP1=0, select bank0
  3525  0FD4  00BF               	movwf	??_setData
  3526  0FD5  083F               	movf	??_setData,w
  3527  0FD6  00BD               	movwf	writeEEPROM@address
  3528  0FD7  084F               	movf	_days,w
  3529  0FD8  120A  158A  221E  120A  158A  	fcall	_writeEEPROM
  3530                           
  3531                           ;eeprom.c: 51:     writeEEPROM(hours ,4);
  3532  0FDD  3004               	movlw	4
  3533  0FDE  1283               	bcf	3,5	;RP0=0, select bank0
  3534  0FDF  1303               	bcf	3,6	;RP1=0, select bank0
  3535  0FE0  00BF               	movwf	??_setData
  3536  0FE1  083F               	movf	??_setData,w
  3537  0FE2  00BD               	movwf	writeEEPROM@address
  3538  0FE3  084E               	movf	_hours,w
  3539  0FE4  120A  158A  221E  120A  158A  	fcall	_writeEEPROM
  3540                           
  3541                           ;eeprom.c: 52:     writeEEPROM(minutes ,5);
  3542  0FE9  3005               	movlw	5
  3543  0FEA  1283               	bcf	3,5	;RP0=0, select bank0
  3544  0FEB  1303               	bcf	3,6	;RP1=0, select bank0
  3545  0FEC  00BF               	movwf	??_setData
  3546  0FED  083F               	movf	??_setData,w
  3547  0FEE  00BD               	movwf	writeEEPROM@address
  3548  0FEF  084D               	movf	_minutes,w
  3549  0FF0  120A  158A  221E  120A  158A  	fcall	_writeEEPROM
  3550                           
  3551                           ;eeprom.c: 53:     writeEEPROM(functionalStat ,6);
  3552  0FF5  3006               	movlw	6
  3553  0FF6  1283               	bcf	3,5	;RP0=0, select bank0
  3554  0FF7  1303               	bcf	3,6	;RP1=0, select bank0
  3555  0FF8  00BF               	movwf	??_setData
  3556  0FF9  083F               	movf	??_setData,w
  3557  0FFA  00BD               	movwf	writeEEPROM@address
  3558  0FFB  0848               	movf	_functionalStat,w
  3559  0FFC  120A  158A  221E   	fcall	_writeEEPROM
  3560  0FFF  0008               	return
  3561  1000                     __end_of_setData:	
  3562                           
  3563                           	psect	text8
  3564  0A1E                     __ptext8:	
  3565 ;; *************** function _writeEEPROM *****************
  3566 ;; Defined at:
  3567 ;;		line 14 in file "eeprom.c"
  3568 ;; Parameters:    Size  Location     Type
  3569 ;;  data            1    wreg     unsigned char 
  3570 ;;  address         1   29[BANK0 ] unsigned char 
  3571 ;; Auto vars:     Size  Location     Type
  3572 ;;  data            1   30[BANK0 ] unsigned char 
  3573 ;; Return value:  Size  Location     Type
  3574 ;;                  1    wreg      void 
  3575 ;; Registers used:
  3576 ;;		wreg
  3577 ;; Tracked objects:
  3578 ;;		On entry : 0/0
  3579 ;;		On exit  : 0/0
  3580 ;;		Unchanged: 0/0
  3581 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3582 ;;      Params:         0       1       0       0       0
  3583 ;;      Locals:         0       1       0       0       0
  3584 ;;      Temps:          0       0       0       0       0
  3585 ;;      Totals:         0       2       0       0       0
  3586 ;;Total ram usage:        2 bytes
  3587 ;; Hardware stack levels used:    1
  3588 ;; Hardware stack levels required when called:    5
  3589 ;; This function calls:
  3590 ;;		Nothing
  3591 ;; This function is called by:
  3592 ;;		_setData
  3593 ;; This function uses a non-reentrant model
  3594 ;;
  3595                           
  3596                           
  3597                           ;psect for function _writeEEPROM
  3598  0A1E                     _writeEEPROM:	
  3599                           
  3600                           ;incstack = 0
  3601                           ; Regs used in _writeEEPROM: [wreg]
  3602                           ;writeEEPROM@data stored from wreg
  3603  0A1E  1283               	bcf	3,5	;RP0=0, select bank0
  3604  0A1F  1303               	bcf	3,6	;RP1=0, select bank0
  3605  0A20  00BE               	movwf	writeEEPROM@data
  3606                           
  3607                           ;eeprom.c: 15:     EEADR = address;
  3608  0A21  083D               	movf	writeEEPROM@address,w
  3609  0A22  1283               	bcf	3,5	;RP0=0, select bank2
  3610  0A23  1703               	bsf	3,6	;RP1=1, select bank2
  3611  0A24  008D               	movwf	13	;volatile
  3612                           
  3613                           ;eeprom.c: 16:     EEDATA = data;
  3614  0A25  1283               	bcf	3,5	;RP0=0, select bank0
  3615  0A26  1303               	bcf	3,6	;RP1=0, select bank0
  3616  0A27  083E               	movf	writeEEPROM@data,w
  3617  0A28  1283               	bcf	3,5	;RP0=0, select bank2
  3618  0A29  1703               	bsf	3,6	;RP1=1, select bank2
  3619  0A2A  008C               	movwf	12	;volatile
  3620                           
  3621                           ;eeprom.c: 18:     EECON1bits.EEPGD = 0;
  3622  0A2B  1683               	bsf	3,5	;RP0=1, select bank3
  3623  0A2C  1703               	bsf	3,6	;RP1=1, select bank3
  3624  0A2D  138C               	bcf	12,7	;volsfr
  3625                           
  3626                           ;eeprom.c: 19:     EECON1bits.WREN = 1;
  3627  0A2E  150C               	bsf	12,2	;volsfr
  3628                           
  3629                           ;eeprom.c: 21:     INTCONbits.GIE = 0;
  3630  0A2F  138B               	bcf	11,7	;volatile
  3631                           
  3632                           ;eeprom.c: 22:     EECON2 = 0x55;
  3633  0A30  3055               	movlw	85
  3634  0A31  008D               	movwf	13	;volsfr
  3635                           
  3636                           ;eeprom.c: 23:     EECON2 = 0xAA;
  3637  0A32  30AA               	movlw	170
  3638  0A33  008D               	movwf	13	;volsfr
  3639                           
  3640                           ;eeprom.c: 24:     EECON1bits.WR = 1;
  3641  0A34  148C               	bsf	12,1	;volsfr
  3642                           
  3643                           ;eeprom.c: 25:     INTCONbits.GIE = 1;
  3644  0A35  178B               	bsf	11,7	;volatile
  3645  0A36                     l60:	
  3646                           ;eeprom.c: 27:     while(PIR2bits.EEIF == 0) continue;
  3647                           
  3648  0A36  1283               	bcf	3,5	;RP0=0, select bank0
  3649  0A37  1303               	bcf	3,6	;RP1=0, select bank0
  3650  0A38  1A0D               	btfsc	13,4	;volatile
  3651  0A39  0008               	return
  3652  0A3A  2A36               	goto	l60
  3653  0A3B                     __end_of_writeEEPROM:	
  3654                           
  3655                           	psect	text9
  3656  0A7F                     __ptext9:	
  3657 ;; *************** function _putsXLCD *****************
  3658 ;; Defined at:
  3659 ;;		line 419 in file "lcd_pic16.c"
  3660 ;; Parameters:    Size  Location     Type
  3661 ;;  buffer          1    wreg     PTR unsigned char 
  3662 ;;		 -> lineOne(17), lineTwo(17), 
  3663 ;; Auto vars:     Size  Location     Type
  3664 ;;  buffer          1   34[BANK0 ] PTR unsigned char 
  3665 ;;		 -> lineOne(17), lineTwo(17), 
  3666 ;; Return value:  Size  Location     Type
  3667 ;;                  1    wreg      void 
  3668 ;; Registers used:
  3669 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3670 ;; Tracked objects:
  3671 ;;		On entry : 0/0
  3672 ;;		On exit  : 0/0
  3673 ;;		Unchanged: 0/0
  3674 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3675 ;;      Params:         0       0       0       0       0
  3676 ;;      Locals:         0       1       0       0       0
  3677 ;;      Temps:          0       1       0       0       0
  3678 ;;      Totals:         0       2       0       0       0
  3679 ;;Total ram usage:        2 bytes
  3680 ;; Hardware stack levels used:    1
  3681 ;; Hardware stack levels required when called:    7
  3682 ;; This function calls:
  3683 ;;		_BusyXLCD
  3684 ;;		_WriteDataXLCD
  3685 ;; This function is called by:
  3686 ;;		_main
  3687 ;;		_start
  3688 ;;		_setFrequency
  3689 ;; This function uses a non-reentrant model
  3690 ;;
  3691                           
  3692                           
  3693                           ;psect for function _putsXLCD
  3694  0A7F                     _putsXLCD:	
  3695                           
  3696                           ;incstack = 0
  3697 ;; hardware stack exceeded
  3698                           ; Regs used in _putsXLCD: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3699                           ;putsXLCD@buffer stored from wreg
  3700  0A7F  1283               	bcf	3,5	;RP0=0, select bank0
  3701  0A80  1303               	bcf	3,6	;RP1=0, select bank0
  3702  0A81  00C2               	movwf	putsXLCD@buffer
  3703  0A82                     l2868:	
  3704                           ;lcd_pic16.c: 419: void putsXLCD(char *buffer);lcd_pic16.c: 420: {;lcd_pic16.c: 421:    
      +                               while(*buffer)
  3705                           
  3706                           
  3707                           ;lcd_pic16.c: 421:         while(*buffer)
  3708  0A82  0842               	movf	putsXLCD@buffer,w
  3709  0A83  0084               	movwf	4
  3710  0A84  1383               	bcf	3,7	;select IRP bank0
  3711  0A85  0800               	movf	0,w
  3712  0A86  1903               	btfsc	3,2
  3713  0A87  0008               	return
  3714  0A88                     l2862:	
  3715  0A88  120A  158A  219F  120A  158A  	fcall	_BusyXLCD
  3716  0A8D  3A00               	xorlw	0
  3717  0A8E  1D03               	skipz
  3718  0A8F  2A88               	goto	l2862
  3719                           
  3720                           ;lcd_pic16.c: 424:                 WriteDataXLCD(*buffer);
  3721  0A90  1283               	bcf	3,5	;RP0=0, select bank0
  3722  0A91  1303               	bcf	3,6	;RP1=0, select bank0
  3723  0A92  0842               	movf	putsXLCD@buffer,w
  3724  0A93  0084               	movwf	4
  3725  0A94  1383               	bcf	3,7	;select IRP bank0
  3726  0A95  0800               	movf	0,w
  3727  0A96  120A  158A  259F  120A  158A  	fcall	_WriteDataXLCD
  3728                           
  3729                           ;lcd_pic16.c: 425:                 buffer++;
  3730  0A9B  3001               	movlw	1
  3731  0A9C  1283               	bcf	3,5	;RP0=0, select bank0
  3732  0A9D  1303               	bcf	3,6	;RP1=0, select bank0
  3733  0A9E  00C1               	movwf	??_putsXLCD
  3734  0A9F  0841               	movf	??_putsXLCD,w
  3735  0AA0  07C2               	addwf	putsXLCD@buffer,f
  3736  0AA1  2A82               	goto	l2868
  3737  0AA2                     __end_of_putsXLCD:	
  3738                           
  3739                           	psect	text10
  3740  0CBB                     __ptext10:	
  3741 ;; *************** function _beep *****************
  3742 ;; Defined at:
  3743 ;;		line 176 in file "main.c"
  3744 ;; Parameters:    Size  Location     Type
  3745 ;;  ms              2    0[BANK1 ] int 
  3746 ;; Auto vars:     Size  Location     Type
  3747 ;;		None
  3748 ;; Return value:  Size  Location     Type
  3749 ;;                  1    wreg      void 
  3750 ;; Registers used:
  3751 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  3752 ;; Tracked objects:
  3753 ;;		On entry : 0/0
  3754 ;;		On exit  : 0/0
  3755 ;;		Unchanged: 0/0
  3756 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3757 ;;      Params:         0       0       2       0       0
  3758 ;;      Locals:         0       0       0       0       0
  3759 ;;      Temps:          0       1       0       0       0
  3760 ;;      Totals:         0       1       2       0       0
  3761 ;;Total ram usage:        3 bytes
  3762 ;; Hardware stack levels used:    1
  3763 ;; Hardware stack levels required when called:    6
  3764 ;; This function calls:
  3765 ;;		___wmul
  3766 ;; This function is called by:
  3767 ;;		_main
  3768 ;;		_start
  3769 ;;		_setFrequency
  3770 ;; This function uses a non-reentrant model
  3771 ;;
  3772                           
  3773                           
  3774                           ;psect for function _beep
  3775  0CBB                     _beep:	
  3776                           
  3777                           ;main.c: 177:     ms *= 5;
  3778                           
  3779                           ;incstack = 0
  3780                           ; Regs used in _beep: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  3781  0CBB  3005               	movlw	5
  3782  0CBC  1283               	bcf	3,5	;RP0=0, select bank0
  3783  0CBD  1303               	bcf	3,6	;RP1=0, select bank0
  3784  0CBE  00BD               	movwf	___wmul@multiplier
  3785  0CBF  3000               	movlw	0
  3786  0CC0  00BE               	movwf	___wmul@multiplier+1
  3787  0CC1  1683               	bsf	3,5	;RP0=1, select bank1
  3788  0CC2  1303               	bcf	3,6	;RP1=0, select bank1
  3789  0CC3  0844               	movf	(beep@ms+1)^(0+128),w
  3790  0CC4  1283               	bcf	3,5	;RP0=0, select bank0
  3791  0CC5  1303               	bcf	3,6	;RP1=0, select bank0
  3792  0CC6  00C0               	movwf	___wmul@multiplicand+1
  3793  0CC7  1683               	bsf	3,5	;RP0=1, select bank1
  3794  0CC8  1303               	bcf	3,6	;RP1=0, select bank1
  3795  0CC9  0843               	movf	beep@ms^(0+128),w
  3796  0CCA  1283               	bcf	3,5	;RP0=0, select bank0
  3797  0CCB  1303               	bcf	3,6	;RP1=0, select bank0
  3798  0CCC  00BF               	movwf	___wmul@multiplicand
  3799  0CCD  120A  158A  225C  120A  158A  	fcall	___wmul
  3800  0CD2  1283               	bcf	3,5	;RP0=0, select bank0
  3801  0CD3  1303               	bcf	3,6	;RP1=0, select bank0
  3802  0CD4  083E               	movf	?___wmul+1,w
  3803  0CD5  1683               	bsf	3,5	;RP0=1, select bank1
  3804  0CD6  1303               	bcf	3,6	;RP1=0, select bank1
  3805  0CD7  00C4               	movwf	(beep@ms+1)^(0+128)
  3806  0CD8  1283               	bcf	3,5	;RP0=0, select bank0
  3807  0CD9  1303               	bcf	3,6	;RP1=0, select bank0
  3808  0CDA  083D               	movf	?___wmul,w
  3809  0CDB  1683               	bsf	3,5	;RP0=1, select bank1
  3810  0CDC  1303               	bcf	3,6	;RP1=0, select bank1
  3811  0CDD  00C3               	movwf	beep@ms^(0+128)
  3812  0CDE                     l3600:	
  3813  0CDE  0844               	movf	(beep@ms+1)^(0+128),w
  3814  0CDF  3A80               	xorlw	128
  3815  0CE0  00FF               	movwf	127
  3816  0CE1  3080               	movlw	128
  3817  0CE2  027F               	subwf	127,w
  3818  0CE3  1D03               	skipz
  3819  0CE4  2CE7               	goto	u3015
  3820  0CE5  3001               	movlw	1
  3821  0CE6  0243               	subwf	beep@ms^(0+128),w
  3822  0CE7                     u3015:	
  3823  0CE7  1C03               	btfss	3,0
  3824  0CE8  0008               	return
  3825                           
  3826                           ;main.c: 179:         PORTBbits.RB0 = 1;
  3827  0CE9  1283               	bcf	3,5	;RP0=0, select bank0
  3828  0CEA  1303               	bcf	3,6	;RP1=0, select bank0
  3829  0CEB  1406               	bsf	6,0	;volatile
  3830                           
  3831                           ;main.c: 180:         _delay((unsigned long)((100)*(4000000/4000000.0)));
  3832  0CEC  3020               	movlw	32
  3833  0CED  1283               	bcf	3,5	;RP0=0, select bank0
  3834  0CEE  1303               	bcf	3,6	;RP1=0, select bank0
  3835  0CEF  00C3               	movwf	??_beep
  3836  0CF0                     u3647:	
  3837  0CF0  0BC3               	decfsz	??_beep,f
  3838  0CF1  2CF0               	goto	u3647
  3839  0CF2  0000               	nop
  3840                           
  3841                           ;main.c: 181:         PORTBbits.RB0 = 0;
  3842  0CF3  1283               	bcf	3,5	;RP0=0, select bank0
  3843  0CF4  1303               	bcf	3,6	;RP1=0, select bank0
  3844  0CF5  1006               	bcf	6,0	;volatile
  3845                           
  3846                           ;main.c: 182:         _delay((unsigned long)((100)*(4000000/4000000.0)));
  3847  0CF6  3020               	movlw	32
  3848  0CF7  1283               	bcf	3,5	;RP0=0, select bank0
  3849  0CF8  1303               	bcf	3,6	;RP1=0, select bank0
  3850  0CF9  00C3               	movwf	??_beep
  3851  0CFA                     u3657:	
  3852  0CFA  0BC3               	decfsz	??_beep,f
  3853  0CFB  2CFA               	goto	u3657
  3854  0CFC  0000               	nop
  3855                           
  3856                           ;main.c: 183:     }
  3857  0CFD  30FF               	movlw	255
  3858  0CFE  1683               	bsf	3,5	;RP0=1, select bank1
  3859  0CFF  1303               	bcf	3,6	;RP1=0, select bank1
  3860  0D00  07C3               	addwf	beep@ms^(0+128),f
  3861  0D01  1803               	skipnc
  3862  0D02  0AC4               	incf	(beep@ms+1)^(0+128),f
  3863  0D03  30FF               	movlw	255
  3864  0D04  07C4               	addwf	(beep@ms+1)^(0+128),f
  3865  0D05  2CDE               	goto	l3600
  3866  0D06                     __end_of_beep:	
  3867                           
  3868                           	psect	text11
  3869  0A5C                     __ptext11:	
  3870 ;; *************** function ___wmul *****************
  3871 ;; Defined at:
  3872 ;;		line 15 in file "/opt/microchip/xc8/v2.05/pic/sources/c90/common/Umul16.c"
  3873 ;; Parameters:    Size  Location     Type
  3874 ;;  multiplier      2   29[BANK0 ] unsigned int 
  3875 ;;  multiplicand    2   31[BANK0 ] unsigned int 
  3876 ;; Auto vars:     Size  Location     Type
  3877 ;;  product         2   33[BANK0 ] unsigned int 
  3878 ;; Return value:  Size  Location     Type
  3879 ;;                  2   29[BANK0 ] unsigned int 
  3880 ;; Registers used:
  3881 ;;		wreg, status,2, status,0
  3882 ;; Tracked objects:
  3883 ;;		On entry : 0/0
  3884 ;;		On exit  : 0/0
  3885 ;;		Unchanged: 0/0
  3886 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3887 ;;      Params:         0       4       0       0       0
  3888 ;;      Locals:         0       2       0       0       0
  3889 ;;      Temps:          0       0       0       0       0
  3890 ;;      Totals:         0       6       0       0       0
  3891 ;;Total ram usage:        6 bytes
  3892 ;; Hardware stack levels used:    1
  3893 ;; Hardware stack levels required when called:    5
  3894 ;; This function calls:
  3895 ;;		Nothing
  3896 ;; This function is called by:
  3897 ;;		_beep
  3898 ;;		_sprintf
  3899 ;; This function uses a non-reentrant model
  3900 ;;
  3901                           
  3902                           
  3903                           ;psect for function ___wmul
  3904  0A5C                     ___wmul:	
  3905                           
  3906                           ;incstack = 0
  3907                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  3908  0A5C  1283               	bcf	3,5	;RP0=0, select bank0
  3909  0A5D  1303               	bcf	3,6	;RP1=0, select bank0
  3910  0A5E  01C1               	clrf	___wmul@product
  3911  0A5F  01C2               	clrf	___wmul@product+1
  3912  0A60                     l2560:	
  3913  0A60  1C3D               	btfss	___wmul@multiplier,0
  3914  0A61  2A68               	goto	l665
  3915  0A62  083F               	movf	___wmul@multiplicand,w
  3916  0A63  07C1               	addwf	___wmul@product,f
  3917  0A64  1803               	skipnc
  3918  0A65  0AC2               	incf	___wmul@product+1,f
  3919  0A66  0840               	movf	___wmul@multiplicand+1,w
  3920  0A67  07C2               	addwf	___wmul@product+1,f
  3921  0A68                     l665:	
  3922  0A68  3001               	movlw	1
  3923  0A69                     u1635:	
  3924  0A69  1003               	clrc
  3925  0A6A  0DBF               	rlf	___wmul@multiplicand,f
  3926  0A6B  0DC0               	rlf	___wmul@multiplicand+1,f
  3927  0A6C  3EFF               	addlw	-1
  3928  0A6D  1D03               	skipz
  3929  0A6E  2A69               	goto	u1635
  3930  0A6F  3001               	movlw	1
  3931  0A70                     u1645:	
  3932  0A70  1003               	clrc
  3933  0A71  0CBE               	rrf	___wmul@multiplier+1,f
  3934  0A72  0CBD               	rrf	___wmul@multiplier,f
  3935  0A73  3EFF               	addlw	-1
  3936  0A74  1D03               	skipz
  3937  0A75  2A70               	goto	u1645
  3938  0A76  083D               	movf	___wmul@multiplier,w
  3939  0A77  043E               	iorwf	___wmul@multiplier+1,w
  3940  0A78  1D03               	btfss	3,2
  3941  0A79  2A60               	goto	l2560
  3942  0A7A  0842               	movf	___wmul@product+1,w
  3943  0A7B  00BE               	movwf	?___wmul+1
  3944  0A7C  0841               	movf	___wmul@product,w
  3945  0A7D  00BD               	movwf	?___wmul
  3946  0A7E  0008               	return
  3947  0A7F                     __end_of___wmul:	
  3948                           
  3949                           	psect	text12
  3950  0AEE                     __ptext12:	
  3951 ;; *************** function _putrsXLCD *****************
  3952 ;; Defined at:
  3953 ;;		line 435 in file "lcd_pic16.c"
  3954 ;; Parameters:    Size  Location     Type
  3955 ;;  buffer          1    wreg     PTR const unsigned char 
  3956 ;;		 -> STR_1(17), 
  3957 ;; Auto vars:     Size  Location     Type
  3958 ;;  buffer          1   34[BANK0 ] PTR const unsigned char 
  3959 ;;		 -> STR_1(17), 
  3960 ;; Return value:  Size  Location     Type
  3961 ;;                  1    wreg      void 
  3962 ;; Registers used:
  3963 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3964 ;; Tracked objects:
  3965 ;;		On entry : 0/0
  3966 ;;		On exit  : 0/0
  3967 ;;		Unchanged: 0/0
  3968 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3969 ;;      Params:         0       0       0       0       0
  3970 ;;      Locals:         0       1       0       0       0
  3971 ;;      Temps:          0       1       0       0       0
  3972 ;;      Totals:         0       2       0       0       0
  3973 ;;Total ram usage:        2 bytes
  3974 ;; Hardware stack levels used:    1
  3975 ;; Hardware stack levels required when called:    7
  3976 ;; This function calls:
  3977 ;;		_BusyXLCD
  3978 ;;		_WriteDataXLCD
  3979 ;; This function is called by:
  3980 ;;		_main
  3981 ;; This function uses a non-reentrant model
  3982 ;;
  3983                           
  3984                           
  3985                           ;psect for function _putrsXLCD
  3986  0AEE                     _putrsXLCD:	
  3987                           
  3988                           ;incstack = 0
  3989 ;; using string table level
  3990                           ; Regs used in _putrsXLCD: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3991                           ;putrsXLCD@buffer stored from wreg
  3992  0AEE  1283               	bcf	3,5	;RP0=0, select bank0
  3993  0AEF  1303               	bcf	3,6	;RP1=0, select bank0
  3994  0AF0  00C2               	movwf	putrsXLCD@buffer
  3995  0AF1                     l3252:	
  3996                           ;lcd_pic16.c: 435: void putrsXLCD(const char *buffer);lcd_pic16.c: 436: {;lcd_pic16.c: 4
      +                          37:         while(*buffer)
  3997                           
  3998                           
  3999                           ;lcd_pic16.c: 437:         while(*buffer)
  4000  0AF1  0842               	movf	putrsXLCD@buffer,w
  4001  0AF2  0084               	movwf	4
  4002  0AF3  120A  158A  2000  120A  158A  	fcall	stringdir
  4003  0AF8  3A00               	xorlw	0
  4004  0AF9  1903               	btfsc	3,2
  4005  0AFA  0008               	return
  4006  0AFB                     l3246:	
  4007  0AFB  120A  158A  219F  120A  158A  	fcall	_BusyXLCD
  4008  0B00  3A00               	xorlw	0
  4009  0B01  1D03               	skipz
  4010  0B02  2AFB               	goto	l3246
  4011                           
  4012                           ;lcd_pic16.c: 440:                 WriteDataXLCD(*buffer);
  4013  0B03  1283               	bcf	3,5	;RP0=0, select bank0
  4014  0B04  1303               	bcf	3,6	;RP1=0, select bank0
  4015  0B05  0842               	movf	putrsXLCD@buffer,w
  4016  0B06  0084               	movwf	4
  4017  0B07  120A  158A  2000  120A  158A  	fcall	stringdir
  4018  0B0C  120A  158A  259F  120A  158A  	fcall	_WriteDataXLCD
  4019                           
  4020                           ;lcd_pic16.c: 441:                 buffer++;
  4021  0B11  3001               	movlw	1
  4022  0B12  1283               	bcf	3,5	;RP0=0, select bank0
  4023  0B13  1303               	bcf	3,6	;RP1=0, select bank0
  4024  0B14  00C1               	movwf	??_putrsXLCD
  4025  0B15  0841               	movf	??_putrsXLCD,w
  4026  0B16  07C2               	addwf	putrsXLCD@buffer,f
  4027  0B17  2AF1               	goto	l3252
  4028  0B18                     __end_of_putrsXLCD:	
  4029                           
  4030                           	psect	text13
  4031  0D9F                     __ptext13:	
  4032 ;; *************** function _WriteDataXLCD *****************
  4033 ;; Defined at:
  4034 ;;		line 110 in file "lcd_pic16.c"
  4035 ;; Parameters:    Size  Location     Type
  4036 ;;  data            1    wreg     unsigned char 
  4037 ;; Auto vars:     Size  Location     Type
  4038 ;;  data            1   32[BANK0 ] unsigned char 
  4039 ;; Return value:  Size  Location     Type
  4040 ;;                  1    wreg      void 
  4041 ;; Registers used:
  4042 ;;		wreg, status,2, status,0, pclath, cstack
  4043 ;; Tracked objects:
  4044 ;;		On entry : 0/0
  4045 ;;		On exit  : 0/0
  4046 ;;		Unchanged: 0/0
  4047 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4048 ;;      Params:         0       0       0       0       0
  4049 ;;      Locals:         0       1       0       0       0
  4050 ;;      Temps:          0       2       0       0       0
  4051 ;;      Totals:         0       3       0       0       0
  4052 ;;Total ram usage:        3 bytes
  4053 ;; Hardware stack levels used:    1
  4054 ;; Hardware stack levels required when called:    6
  4055 ;; This function calls:
  4056 ;;		_DelayFor18TCY
  4057 ;; This function is called by:
  4058 ;;		_putsXLCD
  4059 ;;		_putrsXLCD
  4060 ;; This function uses a non-reentrant model
  4061 ;;
  4062                           
  4063                           
  4064                           ;psect for function _WriteDataXLCD
  4065  0D9F                     _WriteDataXLCD:	
  4066                           
  4067                           ;incstack = 0
  4068 ;; hardware stack exceeded
  4069                           ; Regs used in _WriteDataXLCD: [wreg+status,2+status,0+pclath+cstack]
  4070                           ;WriteDataXLCD@data stored from wreg
  4071  0D9F  1283               	bcf	3,5	;RP0=0, select bank0
  4072  0DA0  1303               	bcf	3,6	;RP1=0, select bank0
  4073  0DA1  00C0               	movwf	WriteDataXLCD@data
  4074                           
  4075                           ;lcd_pic16.c: 110: void WriteDataXLCD(char data);lcd_pic16.c: 111: {;lcd_pic16.c: 125:  
      +                                 TRISB &= 0x0f;
  4076  0DA2  300F               	movlw	15
  4077  0DA3  00BE               	movwf	??_WriteDataXLCD
  4078  0DA4  083E               	movf	??_WriteDataXLCD,w
  4079  0DA5  1683               	bsf	3,5	;RP0=1, select bank1
  4080  0DA6  1303               	bcf	3,6	;RP1=0, select bank1
  4081  0DA7  0586               	andwf	6,f	;volatile
  4082                           
  4083                           ;lcd_pic16.c: 126:         PORTB &= 0x0f;
  4084  0DA8  300F               	movlw	15
  4085  0DA9  1283               	bcf	3,5	;RP0=0, select bank0
  4086  0DAA  1303               	bcf	3,6	;RP1=0, select bank0
  4087  0DAB  00BE               	movwf	??_WriteDataXLCD
  4088  0DAC  083E               	movf	??_WriteDataXLCD,w
  4089  0DAD  0586               	andwf	6,f	;volatile
  4090                           
  4091                           ;lcd_pic16.c: 127:         PORTB |= data&0xf0;
  4092  0DAE  0840               	movf	WriteDataXLCD@data,w
  4093  0DAF  39F0               	andlw	240
  4094  0DB0  00BE               	movwf	??_WriteDataXLCD
  4095  0DB1  083E               	movf	??_WriteDataXLCD,w
  4096  0DB2  0486               	iorwf	6,f	;volatile
  4097                           
  4098                           ;lcd_pic16.c: 133:         PORTBbits.RB1 = 1;
  4099  0DB3  1486               	bsf	6,1	;volatile
  4100                           
  4101                           ;lcd_pic16.c: 134:         PORTBbits.RB2 = 0;
  4102  0DB4  1106               	bcf	6,2	;volatile
  4103                           
  4104                           ;lcd_pic16.c: 135:         DelayFor18TCY();
  4105  0DB5  120A  158A  216A  120A  158A  	fcall	_DelayFor18TCY
  4106                           
  4107                           ;lcd_pic16.c: 136:         PORTBbits.RB3 = 1;
  4108  0DBA  1283               	bcf	3,5	;RP0=0, select bank0
  4109  0DBB  1303               	bcf	3,6	;RP1=0, select bank0
  4110  0DBC  1586               	bsf	6,3	;volatile
  4111                           
  4112                           ;lcd_pic16.c: 137:         DelayFor18TCY();
  4113  0DBD  120A  158A  216A  120A  158A  	fcall	_DelayFor18TCY
  4114                           
  4115                           ;lcd_pic16.c: 138:         PORTBbits.RB3 = 0;
  4116  0DC2  1283               	bcf	3,5	;RP0=0, select bank0
  4117  0DC3  1303               	bcf	3,6	;RP1=0, select bank0
  4118  0DC4  1186               	bcf	6,3	;volatile
  4119                           
  4120                           ;lcd_pic16.c: 140:         PORTB &= 0x0f;
  4121  0DC5  300F               	movlw	15
  4122  0DC6  00BE               	movwf	??_WriteDataXLCD
  4123  0DC7  083E               	movf	??_WriteDataXLCD,w
  4124  0DC8  0586               	andwf	6,f	;volatile
  4125                           
  4126                           ;lcd_pic16.c: 141:         PORTB |= ((data<<4)&0xf0);
  4127  0DC9  0840               	movf	WriteDataXLCD@data,w
  4128  0DCA  00BE               	movwf	??_WriteDataXLCD
  4129  0DCB  3003               	movlw	3
  4130  0DCC                     u1585:	
  4131  0DCC  1003               	clrc
  4132  0DCD  0DBE               	rlf	??_WriteDataXLCD,f
  4133  0DCE  3EFF               	addlw	-1
  4134  0DCF  1D03               	skipz
  4135  0DD0  2DCC               	goto	u1585
  4136  0DD1  1003               	clrc
  4137  0DD2  0D3E               	rlf	??_WriteDataXLCD,w
  4138  0DD3  39F0               	andlw	240
  4139  0DD4  00BF               	movwf	??_WriteDataXLCD+1
  4140  0DD5  083F               	movf	??_WriteDataXLCD+1,w
  4141  0DD6  0486               	iorwf	6,f	;volatile
  4142                           
  4143                           ;lcd_pic16.c: 146:         DelayFor18TCY();
  4144  0DD7  120A  158A  216A  120A  158A  	fcall	_DelayFor18TCY
  4145                           
  4146                           ;lcd_pic16.c: 147:         PORTBbits.RB3 = 1;
  4147  0DDC  1283               	bcf	3,5	;RP0=0, select bank0
  4148  0DDD  1303               	bcf	3,6	;RP1=0, select bank0
  4149  0DDE  1586               	bsf	6,3	;volatile
  4150                           
  4151                           ;lcd_pic16.c: 148:         DelayFor18TCY();
  4152  0DDF  120A  158A  216A   	fcall	_DelayFor18TCY
  4153                           
  4154                           ;lcd_pic16.c: 149:         PORTBbits.RB3 = 0;
  4155  0DE2  1283               	bcf	3,5	;RP0=0, select bank0
  4156  0DE3  1303               	bcf	3,6	;RP1=0, select bank0
  4157  0DE4  1186               	bcf	6,3	;volatile
  4158                           
  4159                           ;lcd_pic16.c: 151:         TRISB |= 0xf0;
  4160  0DE5  30F0               	movlw	240
  4161  0DE6  00BE               	movwf	??_WriteDataXLCD
  4162  0DE7  083E               	movf	??_WriteDataXLCD,w
  4163  0DE8  1683               	bsf	3,5	;RP0=1, select bank1
  4164  0DE9  1303               	bcf	3,6	;RP1=0, select bank1
  4165  0DEA  0486               	iorwf	6,f	;volatile
  4166  0DEB  0008               	return
  4167  0DEC                     __end_of_WriteDataXLCD:	
  4168                           
  4169                           	psect	text14
  4170  0F46                     __ptext14:	
  4171 ;; *************** function _getData *****************
  4172 ;; Defined at:
  4173 ;;		line 31 in file "eeprom.c"
  4174 ;; Parameters:    Size  Location     Type
  4175 ;;		None
  4176 ;; Auto vars:     Size  Location     Type
  4177 ;;  aux1            1   35[BANK0 ] unsigned char 
  4178 ;;  aux0            1   34[BANK0 ] unsigned char 
  4179 ;; Return value:  Size  Location     Type
  4180 ;;                  1    wreg      void 
  4181 ;; Registers used:
  4182 ;;		wreg, status,2, btemp+1, pclath, cstack
  4183 ;; Tracked objects:
  4184 ;;		On entry : 0/0
  4185 ;;		On exit  : 0/0
  4186 ;;		Unchanged: 0/0
  4187 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4188 ;;      Params:         0       0       0       0       0
  4189 ;;      Locals:         0       2       0       0       0
  4190 ;;      Temps:          0       4       0       0       0
  4191 ;;      Totals:         0       6       0       0       0
  4192 ;;Total ram usage:        6 bytes
  4193 ;; Hardware stack levels used:    1
  4194 ;; Hardware stack levels required when called:    6
  4195 ;; This function calls:
  4196 ;;		_readEEPROM
  4197 ;; This function is called by:
  4198 ;;		_main
  4199 ;; This function uses a non-reentrant model
  4200 ;;
  4201                           
  4202                           
  4203                           ;psect for function _getData
  4204  0F46                     _getData:	
  4205                           
  4206                           ;eeprom.c: 32:     unsigned char aux0 = readEEPROM(0);
  4207                           
  4208                           ;incstack = 0
  4209                           ; Regs used in _getData: [wreg+status,2+btemp+1+pclath+cstack]
  4210  0F46  3000               	movlw	0
  4211  0F47  120A  158A  21BA  120A  158A  	fcall	_readEEPROM
  4212  0F4C  1283               	bcf	3,5	;RP0=0, select bank0
  4213  0F4D  1303               	bcf	3,6	;RP1=0, select bank0
  4214  0F4E  00BE               	movwf	??_getData
  4215  0F4F  083E               	movf	??_getData,w
  4216  0F50  00C2               	movwf	getData@aux0
  4217                           
  4218                           ;eeprom.c: 33:     unsigned char aux1 = readEEPROM(1);
  4219  0F51  3001               	movlw	1
  4220  0F52  120A  158A  21BA  120A  158A  	fcall	_readEEPROM
  4221  0F57  1283               	bcf	3,5	;RP0=0, select bank0
  4222  0F58  1303               	bcf	3,6	;RP1=0, select bank0
  4223  0F59  00BE               	movwf	??_getData
  4224  0F5A  083E               	movf	??_getData,w
  4225  0F5B  00C3               	movwf	getData@aux1
  4226                           
  4227                           ;eeprom.c: 34:     frequency = 0;
  4228  0F5C  01C4               	clrf	_frequency
  4229  0F5D  01C5               	clrf	_frequency+1
  4230                           
  4231                           ;eeprom.c: 35:     frequency = (aux1 << 8) | aux0;
  4232  0F5E  0842               	movf	getData@aux0,w
  4233  0F5F  00BE               	movwf	??_getData
  4234  0F60  01BF               	clrf	??_getData+1
  4235  0F61  0843               	movf	getData@aux1,w
  4236  0F62  00C0               	movwf	??_getData+2
  4237  0F63  01C1               	clrf	??_getData+3
  4238  0F64  0840               	movf	??_getData+2,w
  4239  0F65  00C1               	movwf	??_getData+3
  4240  0F66  01C0               	clrf	??_getData+2
  4241  0F67  083E               	movf	??_getData,w
  4242  0F68  0440               	iorwf	??_getData+2,w
  4243  0F69  00C4               	movwf	_frequency
  4244  0F6A  083F               	movf	??_getData+1,w
  4245  0F6B  0441               	iorwf	??_getData+3,w
  4246  0F6C  00C5               	movwf	_frequency+1
  4247                           
  4248                           ;eeprom.c: 36:     months = readEEPROM(2);
  4249  0F6D  3002               	movlw	2
  4250  0F6E  120A  158A  21BA  120A  158A  	fcall	_readEEPROM
  4251  0F73  1283               	bcf	3,5	;RP0=0, select bank0
  4252  0F74  1303               	bcf	3,6	;RP1=0, select bank0
  4253  0F75  00BE               	movwf	??_getData
  4254  0F76  083E               	movf	??_getData,w
  4255  0F77  00D0               	movwf	_months
  4256                           
  4257                           ;eeprom.c: 37:     days = readEEPROM(3);
  4258  0F78  3003               	movlw	3
  4259  0F79  120A  158A  21BA  120A  158A  	fcall	_readEEPROM
  4260  0F7E  1283               	bcf	3,5	;RP0=0, select bank0
  4261  0F7F  1303               	bcf	3,6	;RP1=0, select bank0
  4262  0F80  00BE               	movwf	??_getData
  4263  0F81  083E               	movf	??_getData,w
  4264  0F82  00CF               	movwf	_days
  4265                           
  4266                           ;eeprom.c: 38:     hours = readEEPROM(4);
  4267  0F83  3004               	movlw	4
  4268  0F84  120A  158A  21BA  120A  158A  	fcall	_readEEPROM
  4269  0F89  1283               	bcf	3,5	;RP0=0, select bank0
  4270  0F8A  1303               	bcf	3,6	;RP1=0, select bank0
  4271  0F8B  00BE               	movwf	??_getData
  4272  0F8C  083E               	movf	??_getData,w
  4273  0F8D  00CE               	movwf	_hours
  4274                           
  4275                           ;eeprom.c: 39:     minutes = readEEPROM(5);
  4276  0F8E  3005               	movlw	5
  4277  0F8F  120A  158A  21BA  120A  158A  	fcall	_readEEPROM
  4278  0F94  1283               	bcf	3,5	;RP0=0, select bank0
  4279  0F95  1303               	bcf	3,6	;RP1=0, select bank0
  4280  0F96  00BE               	movwf	??_getData
  4281  0F97  083E               	movf	??_getData,w
  4282  0F98  00CD               	movwf	_minutes
  4283                           
  4284                           ;eeprom.c: 40:     functionalStat = readEEPROM(6);
  4285  0F99  3006               	movlw	6
  4286  0F9A  120A  158A  21BA   	fcall	_readEEPROM
  4287  0F9D  1283               	bcf	3,5	;RP0=0, select bank0
  4288  0F9E  1303               	bcf	3,6	;RP1=0, select bank0
  4289  0F9F  00BE               	movwf	??_getData
  4290  0FA0  083E               	movf	??_getData,w
  4291  0FA1  00C8               	movwf	_functionalStat
  4292  0FA2  0008               	return
  4293  0FA3                     __end_of_getData:	
  4294                           
  4295                           	psect	text15
  4296  09BA                     __ptext15:	
  4297 ;; *************** function _readEEPROM *****************
  4298 ;; Defined at:
  4299 ;;		line 7 in file "eeprom.c"
  4300 ;; Parameters:    Size  Location     Type
  4301 ;;  address         1    wreg     unsigned char 
  4302 ;; Auto vars:     Size  Location     Type
  4303 ;;  address         1   29[BANK0 ] unsigned char 
  4304 ;; Return value:  Size  Location     Type
  4305 ;;                  1    wreg      unsigned char 
  4306 ;; Registers used:
  4307 ;;		wreg
  4308 ;; Tracked objects:
  4309 ;;		On entry : 0/0
  4310 ;;		On exit  : 0/0
  4311 ;;		Unchanged: 0/0
  4312 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4313 ;;      Params:         0       0       0       0       0
  4314 ;;      Locals:         0       1       0       0       0
  4315 ;;      Temps:          0       0       0       0       0
  4316 ;;      Totals:         0       1       0       0       0
  4317 ;;Total ram usage:        1 bytes
  4318 ;; Hardware stack levels used:    1
  4319 ;; Hardware stack levels required when called:    5
  4320 ;; This function calls:
  4321 ;;		Nothing
  4322 ;; This function is called by:
  4323 ;;		_getData
  4324 ;; This function uses a non-reentrant model
  4325 ;;
  4326                           
  4327                           
  4328                           ;psect for function _readEEPROM
  4329  09BA                     _readEEPROM:	
  4330                           
  4331                           ;incstack = 0
  4332                           ; Regs used in _readEEPROM: [wreg]
  4333                           ;readEEPROM@address stored from wreg
  4334  09BA  1283               	bcf	3,5	;RP0=0, select bank0
  4335  09BB  1303               	bcf	3,6	;RP1=0, select bank0
  4336  09BC  00BD               	movwf	readEEPROM@address
  4337                           
  4338                           ;eeprom.c: 8:     EEADR = address;
  4339  09BD  083D               	movf	readEEPROM@address,w
  4340  09BE  1283               	bcf	3,5	;RP0=0, select bank2
  4341  09BF  1703               	bsf	3,6	;RP1=1, select bank2
  4342  09C0  008D               	movwf	13	;volatile
  4343                           
  4344                           ;eeprom.c: 9:     EECON1bits.EEPGD = 0;
  4345  09C1  1683               	bsf	3,5	;RP0=1, select bank3
  4346  09C2  1703               	bsf	3,6	;RP1=1, select bank3
  4347  09C3  138C               	bcf	12,7	;volsfr
  4348                           
  4349                           ;eeprom.c: 10:     EECON1bits.RD = 1;
  4350  09C4  140C               	bsf	12,0	;volsfr
  4351                           
  4352                           ;eeprom.c: 11:     return EEDATA;
  4353  09C5  1283               	bcf	3,5	;RP0=0, select bank2
  4354  09C6  1703               	bsf	3,6	;RP1=1, select bank2
  4355  09C7  080C               	movf	12,w	;volatile
  4356  09C8  0008               	return
  4357  09C9                     __end_of_readEEPROM:	
  4358                           
  4359                           	psect	text16
  4360  0B18                     __ptext16:	
  4361 ;; *************** function _config *****************
  4362 ;; Defined at:
  4363 ;;		line 52 in file "main.c"
  4364 ;; Parameters:    Size  Location     Type
  4365 ;;		None
  4366 ;; Auto vars:     Size  Location     Type
  4367 ;;		None
  4368 ;; Return value:  Size  Location     Type
  4369 ;;                  1    wreg      void 
  4370 ;; Registers used:
  4371 ;;		wreg, status,2, status,0, pclath, cstack
  4372 ;; Tracked objects:
  4373 ;;		On entry : 0/0
  4374 ;;		On exit  : 0/0
  4375 ;;		Unchanged: 0/0
  4376 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4377 ;;      Params:         0       0       0       0       0
  4378 ;;      Locals:         0       0       0       0       0
  4379 ;;      Temps:          0       0       0       0       0
  4380 ;;      Totals:         0       0       0       0       0
  4381 ;;Total ram usage:        0 bytes
  4382 ;; Hardware stack levels used:    1
  4383 ;; Hardware stack levels required when called:    9
  4384 ;; This function calls:
  4385 ;;		_initLCD
  4386 ;;		_setTransStat
  4387 ;; This function is called by:
  4388 ;;		_main
  4389 ;; This function uses a non-reentrant model
  4390 ;;
  4391                           
  4392                           
  4393                           ;psect for function _config
  4394  0B18                     _config:	
  4395                           
  4396                           ;main.c: 54:     INTCON = 0b01000000;
  4397                           
  4398                           ;incstack = 0
  4399 ;; hardware stack exceeded
  4400                           ; Regs used in _config: [wreg+status,2+status,0+pclath+cstack]
  4401  0B18  3040               	movlw	64
  4402  0B19  008B               	movwf	11	;volatile
  4403                           
  4404                           ;main.c: 55:     PIE1 = 0b00000001;
  4405  0B1A  3001               	movlw	1
  4406  0B1B  1683               	bsf	3,5	;RP0=1, select bank1
  4407  0B1C  1303               	bcf	3,6	;RP1=0, select bank1
  4408  0B1D  008C               	movwf	12	;volatile
  4409                           
  4410                           ;main.c: 57:     TRISA = 0b00111000;
  4411  0B1E  3038               	movlw	56
  4412  0B1F  0085               	movwf	5	;volatile
  4413                           
  4414                           ;main.c: 58:     TRISB = 0b00000000;
  4415  0B20  0186               	clrf	6	;volatile
  4416                           
  4417                           ;main.c: 59:     TRISC = 0b00000000;
  4418  0B21  0187               	clrf	7	;volatile
  4419                           
  4420                           ;main.c: 60:     PORTA = 0x00;
  4421  0B22  1283               	bcf	3,5	;RP0=0, select bank0
  4422  0B23  1303               	bcf	3,6	;RP1=0, select bank0
  4423  0B24  0185               	clrf	5	;volatile
  4424                           
  4425                           ;main.c: 61:     PORTB = 0x00;
  4426  0B25  0186               	clrf	6	;volatile
  4427                           
  4428                           ;main.c: 62:     PORTC = 0x0E;
  4429  0B26  300E               	movlw	14
  4430  0B27  0087               	movwf	7	;volatile
  4431                           
  4432                           ;main.c: 64:     T1CON = 0b00010001;
  4433  0B28  3011               	movlw	17
  4434  0B29  0090               	movwf	16	;volatile
  4435                           
  4436                           ;main.c: 66:     ADCON0 = 0b00000000;
  4437  0B2A  019F               	clrf	31	;volatile
  4438                           
  4439                           ;main.c: 67:     ADCON1 = 0b00000000;
  4440  0B2B  1683               	bsf	3,5	;RP0=1, select bank1
  4441  0B2C  1303               	bcf	3,6	;RP1=0, select bank1
  4442  0B2D  019F               	clrf	31	;volatile
  4443                           
  4444                           ;main.c: 68:     ANSEL = 0b00000000;
  4445  0B2E  1683               	bsf	3,5	;RP0=1, select bank3
  4446  0B2F  1703               	bsf	3,6	;RP1=1, select bank3
  4447  0B30  0188               	clrf	8	;volatile
  4448                           
  4449                           ;main.c: 69:     ANSELH = 0b00000000;
  4450  0B31  0189               	clrf	9	;volatile
  4451                           
  4452                           ;main.c: 71:     initLCD();
  4453  0B32  120A  158A  22C6  120A  158A  	fcall	_initLCD
  4454                           
  4455                           ;main.c: 73:     T1CONbits.TMR1ON = 1;
  4456  0B37  1283               	bcf	3,5	;RP0=0, select bank0
  4457  0B38  1303               	bcf	3,6	;RP1=0, select bank0
  4458  0B39  1410               	bsf	16,0	;volatile
  4459                           
  4460                           ;main.c: 74:     INTCONbits.GIE = 1;
  4461  0B3A  178B               	bsf	11,7	;volatile
  4462                           
  4463                           ;main.c: 76:     setTransStat(0);
  4464  0B3B  3000               	movlw	0
  4465  0B3C  1683               	bsf	3,5	;RP0=1, select bank1
  4466  0B3D  1303               	bcf	3,6	;RP1=0, select bank1
  4467  0B3E  00C8               	movwf	setTransStat@stat^(0+128)
  4468  0B3F  00C9               	movwf	(setTransStat@stat+1)^(0+128)
  4469  0B40  120A  158A  2376   	fcall	_setTransStat
  4470  0B43  0008               	return
  4471  0B44                     __end_of_config:	
  4472                           
  4473                           	psect	text17
  4474  0B76                     __ptext17:	
  4475 ;; *************** function _setTransStat *****************
  4476 ;; Defined at:
  4477 ;;		line 242 in file "main.c"
  4478 ;; Parameters:    Size  Location     Type
  4479 ;;  stat            2    5[BANK1 ] int 
  4480 ;; Auto vars:     Size  Location     Type
  4481 ;;		None
  4482 ;; Return value:  Size  Location     Type
  4483 ;;                  1    wreg      void 
  4484 ;; Registers used:
  4485 ;;		wreg, status,2, status,0, pclath, cstack
  4486 ;; Tracked objects:
  4487 ;;		On entry : 0/0
  4488 ;;		On exit  : 0/0
  4489 ;;		Unchanged: 0/0
  4490 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4491 ;;      Params:         0       0       2       0       0
  4492 ;;      Locals:         0       0       0       0       0
  4493 ;;      Temps:          0       0       2       0       0
  4494 ;;      Totals:         0       0       4       0       0
  4495 ;;Total ram usage:        4 bytes
  4496 ;; Hardware stack levels used:    1
  4497 ;; Hardware stack levels required when called:    7
  4498 ;; This function calls:
  4499 ;;		_writeFrequency
  4500 ;; This function is called by:
  4501 ;;		_main
  4502 ;;		_config
  4503 ;; This function uses a non-reentrant model
  4504 ;;
  4505                           
  4506                           
  4507                           ;psect for function _setTransStat
  4508  0B76                     _setTransStat:	
  4509                           
  4510                           ;main.c: 243:     if(stat == 1){
  4511                           
  4512                           ;incstack = 0
  4513                           ; Regs used in _setTransStat: [wreg+status,2+status,0+pclath+cstack]
  4514  0B76  1683               	bsf	3,5	;RP0=1, select bank1
  4515  0B77  1303               	bcf	3,6	;RP1=0, select bank1
  4516  0B78  0348               	decf	setTransStat@stat^(0+128),w
  4517  0B79  0449               	iorwf	(setTransStat@stat+1)^(0+128),w
  4518  0B7A  1D03               	btfss	3,2
  4519  0B7B  2B94               	goto	l273
  4520                           
  4521                           ;main.c: 244:         PORTCbits.RC0 = 1;
  4522  0B7C  1283               	bcf	3,5	;RP0=0, select bank0
  4523  0B7D  1303               	bcf	3,6	;RP1=0, select bank0
  4524  0B7E  1407               	bsf	7,0	;volatile
  4525                           
  4526                           ;main.c: 245:         PORTCbits.RC4 = 0;
  4527  0B7F  1207               	bcf	7,4	;volatile
  4528                           
  4529                           ;main.c: 246:         _delay((unsigned long)((2)*(4000000/4000.0)));
  4530  0B80  3003               	movlw	3
  4531  0B81  1683               	bsf	3,5	;RP0=1, select bank1
  4532  0B82  1303               	bcf	3,6	;RP1=0, select bank1
  4533  0B83  00CB               	movwf	(??_setTransStat^(0+128)+1)
  4534  0B84  3097               	movlw	151
  4535  0B85  00CA               	movwf	??_setTransStat^(0+128)
  4536  0B86                     u3667:	
  4537  0B86  0BCA               	decfsz	??_setTransStat^(0+128),f
  4538  0B87  2B86               	goto	u3667
  4539  0B88  0BCB               	decfsz	(??_setTransStat^(0+128)+1),f
  4540  0B89  2B86               	goto	u3667
  4541                           
  4542                           ;main.c: 247:         writeFrequency(frequency);
  4543  0B8A  1283               	bcf	3,5	;RP0=0, select bank0
  4544  0B8B  1303               	bcf	3,6	;RP1=0, select bank0
  4545  0B8C  0845               	movf	_frequency+1,w
  4546  0B8D  00C0               	movwf	writeFrequency@f+1
  4547  0B8E  0844               	movf	_frequency,w
  4548  0B8F  00BF               	movwf	writeFrequency@f
  4549  0B90  120A  118A  276C   	fcall	_writeFrequency
  4550                           
  4551                           ;main.c: 248:     }else{
  4552  0B93  0008               	return
  4553  0B94                     l273:	
  4554                           
  4555                           ;main.c: 249:         PORTCbits.RC0 = 0;
  4556  0B94  1283               	bcf	3,5	;RP0=0, select bank0
  4557  0B95  1303               	bcf	3,6	;RP1=0, select bank0
  4558  0B96  1007               	bcf	7,0	;volatile
  4559                           
  4560                           ;main.c: 250:         PORTCbits.RC4 = 1;
  4561  0B97  1607               	bsf	7,4	;volatile
  4562                           
  4563                           ;main.c: 251:         _delay((unsigned long)((2)*(4000000/4000.0)));
  4564  0B98  3003               	movlw	3
  4565  0B99  1683               	bsf	3,5	;RP0=1, select bank1
  4566  0B9A  1303               	bcf	3,6	;RP1=0, select bank1
  4567  0B9B  00CB               	movwf	(??_setTransStat^(0+128)+1)
  4568  0B9C  3097               	movlw	151
  4569  0B9D  00CA               	movwf	??_setTransStat^(0+128)
  4570  0B9E                     u3677:	
  4571  0B9E  0BCA               	decfsz	??_setTransStat^(0+128),f
  4572  0B9F  2B9E               	goto	u3677
  4573  0BA0  0BCB               	decfsz	(??_setTransStat^(0+128)+1),f
  4574  0BA1  2B9E               	goto	u3677
  4575                           
  4576                           ;main.c: 252:         writeFrequency(730);
  4577  0BA2  30DA               	movlw	218
  4578  0BA3  1283               	bcf	3,5	;RP0=0, select bank0
  4579  0BA4  1303               	bcf	3,6	;RP1=0, select bank0
  4580  0BA5  00BF               	movwf	writeFrequency@f
  4581  0BA6  3002               	movlw	2
  4582  0BA7  00C0               	movwf	writeFrequency@f+1
  4583  0BA8  120A  118A  276C   	fcall	_writeFrequency
  4584  0BAB  0008               	return
  4585  0BAC                     __end_of_setTransStat:	
  4586                           
  4587                           	psect	text18
  4588  076C                     __ptext18:	
  4589 ;; *************** function _writeFrequency *****************
  4590 ;; Defined at:
  4591 ;;		line 15 in file "bh1514.c"
  4592 ;; Parameters:    Size  Location     Type
  4593 ;;  f               2   31[BANK0 ] unsigned int 
  4594 ;; Auto vars:     Size  Location     Type
  4595 ;;  r               2    2[BANK1 ] unsigned int 
  4596 ;;  buffer          2    0[BANK1 ] unsigned int 
  4597 ;;  i               1    4[BANK1 ] unsigned char 
  4598 ;; Return value:  Size  Location     Type
  4599 ;;                  1    wreg      void 
  4600 ;; Registers used:
  4601 ;;		wreg, status,2, status,0, pclath, cstack
  4602 ;; Tracked objects:
  4603 ;;		On entry : 0/0
  4604 ;;		On exit  : 0/0
  4605 ;;		Unchanged: 0/0
  4606 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4607 ;;      Params:         0       2       0       0       0
  4608 ;;      Locals:         0       0       5       0       0
  4609 ;;      Temps:          0       2       0       0       0
  4610 ;;      Totals:         0       4       5       0       0
  4611 ;;Total ram usage:        9 bytes
  4612 ;; Hardware stack levels used:    1
  4613 ;; Hardware stack levels required when called:    6
  4614 ;; This function calls:
  4615 ;;		_codFreq
  4616 ;; This function is called by:
  4617 ;;		_main
  4618 ;;		_setFrequency
  4619 ;;		_setTransStat
  4620 ;; This function uses a non-reentrant model
  4621 ;;
  4622                           
  4623                           
  4624                           ;psect for function _writeFrequency
  4625  076C                     _writeFrequency:	
  4626                           
  4627                           ;bh1514.c: 16:     unsigned int buffer;;bh1514.c: 17:     unsigned int r;;bh1514.c: 18: 
      +                              unsigned char i;;bh1514.c: 20:     buffer = codFreq(f);
  4628                           
  4629                           ;incstack = 0
  4630                           ; Regs used in _writeFrequency: [wreg+status,2+status,0+pclath+cstack]
  4631  076C  1283               	bcf	3,5	;RP0=0, select bank0
  4632  076D  1303               	bcf	3,6	;RP1=0, select bank0
  4633  076E  0840               	movf	writeFrequency@f+1,w
  4634  076F  00BE               	movwf	codFreq@f+1
  4635  0770  083F               	movf	writeFrequency@f,w
  4636  0771  00BD               	movwf	codFreq@f
  4637  0772  120A  158A  2180  120A  118A  	fcall	_codFreq
  4638  0777  1283               	bcf	3,5	;RP0=0, select bank0
  4639  0778  1303               	bcf	3,6	;RP1=0, select bank0
  4640  0779  083E               	movf	?_codFreq+1,w
  4641  077A  1683               	bsf	3,5	;RP0=1, select bank1
  4642  077B  1303               	bcf	3,6	;RP1=0, select bank1
  4643  077C  00C4               	movwf	(writeFrequency@buffer+1)^(0+128)
  4644  077D  1283               	bcf	3,5	;RP0=0, select bank0
  4645  077E  1303               	bcf	3,6	;RP1=0, select bank0
  4646  077F  083D               	movf	?_codFreq,w
  4647  0780  1683               	bsf	3,5	;RP0=1, select bank1
  4648  0781  1303               	bcf	3,6	;RP1=0, select bank1
  4649  0782  00C3               	movwf	writeFrequency@buffer^(0+128)
  4650                           
  4651                           ;bh1514.c: 22:     PORTCbits.RC5 = 1;
  4652  0783  1283               	bcf	3,5	;RP0=0, select bank0
  4653  0784  1303               	bcf	3,6	;RP1=0, select bank0
  4654  0785  1687               	bsf	7,5	;volatile
  4655                           
  4656                           ;bh1514.c: 23:     _delay((unsigned long)((1)*(4000000/4000.0)));
  4657  0786  30C7               	movlw	199
  4658  0787  1283               	bcf	3,5	;RP0=0, select bank0
  4659  0788  1303               	bcf	3,6	;RP1=0, select bank0
  4660  0789  00C1               	movwf	??_writeFrequency
  4661  078A                     u3687:	
  4662  078A  2F8B               	nop2
  4663  078B  0BC1               	decfsz	??_writeFrequency,f
  4664  078C  2F8A               	goto	u3687
  4665  078D  2F8E               	nop2
  4666                           
  4667                           ;bh1514.c: 24:     for(i = 0; i < 16; i++){
  4668  078E  1683               	bsf	3,5	;RP0=1, select bank1
  4669  078F  1303               	bcf	3,6	;RP1=0, select bank1
  4670  0790  01C7               	clrf	writeFrequency@i^(0+128)
  4671  0791                     l3530:	
  4672                           
  4673                           ;bh1514.c: 25:         r = (buffer >> i) & 0x0001;
  4674  0791  0844               	movf	(writeFrequency@buffer+1)^(0+128),w
  4675  0792  1283               	bcf	3,5	;RP0=0, select bank0
  4676  0793  1303               	bcf	3,6	;RP1=0, select bank0
  4677  0794  00C2               	movwf	??_writeFrequency+1
  4678  0795  1683               	bsf	3,5	;RP0=1, select bank1
  4679  0796  1303               	bcf	3,6	;RP1=0, select bank1
  4680  0797  0843               	movf	writeFrequency@buffer^(0+128),w
  4681  0798  1283               	bcf	3,5	;RP0=0, select bank0
  4682  0799  1303               	bcf	3,6	;RP1=0, select bank0
  4683  079A  00C1               	movwf	??_writeFrequency
  4684  079B  1683               	bsf	3,5	;RP0=1, select bank1
  4685  079C  1303               	bcf	3,6	;RP1=0, select bank1
  4686  079D  0A47               	incf	writeFrequency@i^(0+128),w
  4687  079E  2FA4               	goto	u2854
  4688  079F                     u2855:	
  4689  079F  1283               	bcf	3,5	;RP0=0, select bank0
  4690  07A0  1303               	bcf	3,6	;RP1=0, select bank0
  4691  07A1  1003               	clrc
  4692  07A2  0CC2               	rrf	??_writeFrequency+1,f
  4693  07A3  0CC1               	rrf	??_writeFrequency,f
  4694  07A4                     u2854:	
  4695  07A4  3EFF               	addlw	-1
  4696  07A5  1D03               	skipz
  4697  07A6  2F9F               	goto	u2855
  4698  07A7  3001               	movlw	1
  4699  07A8  0541               	andwf	??_writeFrequency,w
  4700  07A9  1683               	bsf	3,5	;RP0=1, select bank1
  4701  07AA  1303               	bcf	3,6	;RP1=0, select bank1
  4702  07AB  00C5               	movwf	writeFrequency@r^(0+128)
  4703  07AC  3000               	movlw	0
  4704  07AD  1283               	bcf	3,5	;RP0=0, select bank0
  4705  07AE  1303               	bcf	3,6	;RP1=0, select bank0
  4706  07AF  0542               	andwf	??_writeFrequency+1,w
  4707  07B0  1683               	bsf	3,5	;RP0=1, select bank1
  4708  07B1  1303               	bcf	3,6	;RP1=0, select bank1
  4709  07B2  00C6               	movwf	(writeFrequency@r+1)^(0+128)
  4710                           
  4711                           ;bh1514.c: 26:         if(r == 1){
  4712  07B3  0345               	decf	writeFrequency@r^(0+128),w
  4713  07B4  0446               	iorwf	(writeFrequency@r+1)^(0+128),w
  4714  07B5  1D03               	btfss	3,2
  4715  07B6  2FBB               	goto	l538
  4716                           
  4717                           ;bh1514.c: 27:             PORTCbits.RC7 = 1;
  4718  07B7  1283               	bcf	3,5	;RP0=0, select bank0
  4719  07B8  1303               	bcf	3,6	;RP1=0, select bank0
  4720  07B9  1787               	bsf	7,7	;volatile
  4721                           
  4722                           ;bh1514.c: 28:         }else{
  4723  07BA  2FBE               	goto	l3534
  4724  07BB                     l538:	
  4725                           
  4726                           ;bh1514.c: 29:             PORTCbits.RC7 = 0;
  4727  07BB  1283               	bcf	3,5	;RP0=0, select bank0
  4728  07BC  1303               	bcf	3,6	;RP1=0, select bank0
  4729  07BD  1387               	bcf	7,7	;volatile
  4730  07BE                     l3534:	
  4731                           
  4732                           ;bh1514.c: 31:         _delay((unsigned long)((1)*(4000000/4000.0)));
  4733  07BE  30C7               	movlw	199
  4734  07BF  1283               	bcf	3,5	;RP0=0, select bank0
  4735  07C0  1303               	bcf	3,6	;RP1=0, select bank0
  4736  07C1  00C1               	movwf	??_writeFrequency
  4737  07C2                     u3697:	
  4738  07C2  2FC3               	nop2
  4739  07C3  0BC1               	decfsz	??_writeFrequency,f
  4740  07C4  2FC2               	goto	u3697
  4741  07C5  2FC6               	nop2
  4742                           
  4743                           ;bh1514.c: 32:         PORTCbits.RC6 = 1;
  4744  07C6  1283               	bcf	3,5	;RP0=0, select bank0
  4745  07C7  1303               	bcf	3,6	;RP1=0, select bank0
  4746  07C8  1707               	bsf	7,6	;volatile
  4747                           
  4748                           ;bh1514.c: 33:         _delay((unsigned long)((1)*(4000000/4000.0)));
  4749  07C9  30C7               	movlw	199
  4750  07CA  1283               	bcf	3,5	;RP0=0, select bank0
  4751  07CB  1303               	bcf	3,6	;RP1=0, select bank0
  4752  07CC  00C1               	movwf	??_writeFrequency
  4753  07CD                     u3707:	
  4754  07CD  2FCE               	nop2
  4755  07CE  0BC1               	decfsz	??_writeFrequency,f
  4756  07CF  2FCD               	goto	u3707
  4757  07D0  2FD1               	nop2
  4758                           
  4759                           ;bh1514.c: 34:         PORTCbits.RC6 = 0;
  4760  07D1  1283               	bcf	3,5	;RP0=0, select bank0
  4761  07D2  1303               	bcf	3,6	;RP1=0, select bank0
  4762  07D3  1307               	bcf	7,6	;volatile
  4763                           
  4764                           ;bh1514.c: 35:     }
  4765  07D4  3001               	movlw	1
  4766  07D5  00C1               	movwf	??_writeFrequency
  4767  07D6  0841               	movf	??_writeFrequency,w
  4768  07D7  1683               	bsf	3,5	;RP0=1, select bank1
  4769  07D8  1303               	bcf	3,6	;RP1=0, select bank1
  4770  07D9  07C7               	addwf	writeFrequency@i^(0+128),f
  4771  07DA  3010               	movlw	16
  4772  07DB  0247               	subwf	writeFrequency@i^(0+128),w
  4773  07DC  1C03               	skipc
  4774  07DD  2F91               	goto	l3530
  4775                           
  4776                           ;bh1514.c: 36:     _delay((unsigned long)((1)*(4000000/4000.0)));
  4777  07DE  30C7               	movlw	199
  4778  07DF  1283               	bcf	3,5	;RP0=0, select bank0
  4779  07E0  1303               	bcf	3,6	;RP1=0, select bank0
  4780  07E1  00C1               	movwf	??_writeFrequency
  4781  07E2                     u3717:	
  4782  07E2  2FE3               	nop2
  4783  07E3  0BC1               	decfsz	??_writeFrequency,f
  4784  07E4  2FE2               	goto	u3717
  4785  07E5  2FE6               	nop2
  4786                           
  4787                           ;bh1514.c: 37:     PORTCbits.RC5 = 0;
  4788  07E6  1283               	bcf	3,5	;RP0=0, select bank0
  4789  07E7  1303               	bcf	3,6	;RP1=0, select bank0
  4790  07E8  1287               	bcf	7,5	;volatile
  4791  07E9  0008               	return
  4792  07EA                     __end_of_writeFrequency:	
  4793                           
  4794                           	psect	text19
  4795  0980                     __ptext19:	
  4796 ;; *************** function _codFreq *****************
  4797 ;; Defined at:
  4798 ;;		line 6 in file "bh1514.c"
  4799 ;; Parameters:    Size  Location     Type
  4800 ;;  f               2   29[BANK0 ] unsigned int 
  4801 ;; Auto vars:     Size  Location     Type
  4802 ;;		None
  4803 ;; Return value:  Size  Location     Type
  4804 ;;                  2   29[BANK0 ] unsigned int 
  4805 ;; Registers used:
  4806 ;;		wreg
  4807 ;; Tracked objects:
  4808 ;;		On entry : 0/0
  4809 ;;		On exit  : 0/0
  4810 ;;		Unchanged: 0/0
  4811 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4812 ;;      Params:         0       2       0       0       0
  4813 ;;      Locals:         0       0       0       0       0
  4814 ;;      Temps:          0       0       0       0       0
  4815 ;;      Totals:         0       2       0       0       0
  4816 ;;Total ram usage:        2 bytes
  4817 ;; Hardware stack levels used:    1
  4818 ;; Hardware stack levels required when called:    5
  4819 ;; This function calls:
  4820 ;;		Nothing
  4821 ;; This function is called by:
  4822 ;;		_writeFrequency
  4823 ;; This function uses a non-reentrant model
  4824 ;;
  4825                           
  4826                           
  4827                           ;psect for function _codFreq
  4828  0980                     _codFreq:	
  4829                           
  4830                           ;bh1514.c: 8:         f = f | 0b0100100000000000;
  4831                           
  4832                           ;incstack = 0
  4833                           ; Regs used in _codFreq: [wreg]
  4834  0980  3000               	movlw	0
  4835  0981  1283               	bcf	3,5	;RP0=0, select bank0
  4836  0982  1303               	bcf	3,6	;RP1=0, select bank0
  4837  0983  043D               	iorwf	codFreq@f,w
  4838  0984  00BD               	movwf	codFreq@f
  4839  0985  3048               	movlw	72
  4840  0986  043E               	iorwf	codFreq@f+1,w
  4841  0987  00BE               	movwf	codFreq@f+1
  4842                           
  4843                           ;bh1514.c: 12:     return f;
  4844                           
  4845                           ;bh1514.c: 9:     }else{
  4846  0988  0008               	return
  4847  0989                     __end_of_codFreq:	
  4848                           
  4849                           	psect	text20
  4850  0AC6                     __ptext20:	
  4851 ;; *************** function _initLCD *****************
  4852 ;; Defined at:
  4853 ;;		line 5 in file "lcd.c"
  4854 ;; Parameters:    Size  Location     Type
  4855 ;;		None
  4856 ;; Auto vars:     Size  Location     Type
  4857 ;;		None
  4858 ;; Return value:  Size  Location     Type
  4859 ;;                  1    wreg      void 
  4860 ;; Registers used:
  4861 ;;		wreg, status,2, status,0, pclath, cstack
  4862 ;; Tracked objects:
  4863 ;;		On entry : 0/0
  4864 ;;		On exit  : 0/0
  4865 ;;		Unchanged: 0/0
  4866 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4867 ;;      Params:         0       0       0       0       0
  4868 ;;      Locals:         0       0       0       0       0
  4869 ;;      Temps:          0       0       2       0       0
  4870 ;;      Totals:         0       0       2       0       0
  4871 ;;Total ram usage:        2 bytes
  4872 ;; Hardware stack levels used:    1
  4873 ;; Hardware stack levels required when called:    8
  4874 ;; This function calls:
  4875 ;;		_OpenXLCD
  4876 ;;		_SendCMDLCD
  4877 ;; This function is called by:
  4878 ;;		_config
  4879 ;; This function uses a non-reentrant model
  4880 ;;
  4881                           
  4882                           
  4883                           ;psect for function _initLCD
  4884  0AC6                     _initLCD:	
  4885                           
  4886                           ;lcd.c: 6:     OpenXLCD(0b00101100 & 0b00111000);
  4887                           
  4888                           ;incstack = 0
  4889 ;; hardware stack exceeded
  4890                           ; Regs used in _initLCD: [wreg+status,2+status,0+pclath+cstack]
  4891  0AC6  3028               	movlw	40
  4892  0AC7  120A  118A  26B4  120A  158A  	fcall	_OpenXLCD
  4893                           
  4894                           ;lcd.c: 7:     _delay((unsigned long)((100)*(4000000/4000.0)));
  4895  0ACC  3082               	movlw	130
  4896  0ACD  1683               	bsf	3,5	;RP0=1, select bank1
  4897  0ACE  1303               	bcf	3,6	;RP1=0, select bank1
  4898  0ACF  00C4               	movwf	(??_initLCD^(0+128)+1)
  4899  0AD0  30DD               	movlw	221
  4900  0AD1  00C3               	movwf	??_initLCD^(0+128)
  4901  0AD2                     u3727:	
  4902  0AD2  0BC3               	decfsz	??_initLCD^(0+128),f
  4903  0AD3  2AD2               	goto	u3727
  4904  0AD4  0BC4               	decfsz	(??_initLCD^(0+128)+1),f
  4905  0AD5  2AD2               	goto	u3727
  4906                           
  4907                           ;lcd.c: 8:     SendCMDLCD(0b00001101);
  4908  0AD6  300D               	movlw	13
  4909  0AD7  120A  118A  27EA  120A  158A  	fcall	_SendCMDLCD
  4910                           
  4911                           ;lcd.c: 9:     SendCMDLCD(0b00000110);
  4912  0ADC  3006               	movlw	6
  4913  0ADD  120A  118A  27EA  120A  158A  	fcall	_SendCMDLCD
  4914                           
  4915                           ;lcd.c: 10:     _delay((unsigned long)((50)*(4000000/4000.0)));
  4916  0AE2  3041               	movlw	65
  4917  0AE3  1683               	bsf	3,5	;RP0=1, select bank1
  4918  0AE4  1303               	bcf	3,6	;RP1=0, select bank1
  4919  0AE5  00C4               	movwf	(??_initLCD^(0+128)+1)
  4920  0AE6  30ED               	movlw	237
  4921  0AE7  00C3               	movwf	??_initLCD^(0+128)
  4922  0AE8                     u3737:	
  4923  0AE8  0BC3               	decfsz	??_initLCD^(0+128),f
  4924  0AE9  2AE8               	goto	u3737
  4925  0AEA  0BC4               	decfsz	(??_initLCD^(0+128)+1),f
  4926  0AEB  2AE8               	goto	u3737
  4927  0AEC  2AED               	nop2
  4928  0AED  0008               	return
  4929  0AEE                     __end_of_initLCD:	
  4930                           
  4931                           	psect	text21
  4932  07EA                     __ptext21:	
  4933 ;; *************** function _SendCMDLCD *****************
  4934 ;; Defined at:
  4935 ;;		line 27 in file "lcd.c"
  4936 ;; Parameters:    Size  Location     Type
  4937 ;;  CMD             1    wreg     unsigned char 
  4938 ;; Auto vars:     Size  Location     Type
  4939 ;;  CMD             1   33[BANK0 ] unsigned char 
  4940 ;; Return value:  Size  Location     Type
  4941 ;;                  1    wreg      void 
  4942 ;; Registers used:
  4943 ;;		wreg, status,2, status,0, pclath, cstack
  4944 ;; Tracked objects:
  4945 ;;		On entry : 0/0
  4946 ;;		On exit  : 0/0
  4947 ;;		Unchanged: 0/0
  4948 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4949 ;;      Params:         0       0       0       0       0
  4950 ;;      Locals:         0       1       0       0       0
  4951 ;;      Temps:          0       0       0       0       0
  4952 ;;      Totals:         0       1       0       0       0
  4953 ;;Total ram usage:        1 bytes
  4954 ;; Hardware stack levels used:    1
  4955 ;; Hardware stack levels required when called:    7
  4956 ;; This function calls:
  4957 ;;		_BusyXLCD
  4958 ;;		_WriteCmdXLCD
  4959 ;; This function is called by:
  4960 ;;		_initLCD
  4961 ;; This function uses a non-reentrant model
  4962 ;;
  4963                           
  4964                           
  4965                           ;psect for function _SendCMDLCD
  4966  07EA                     _SendCMDLCD:	
  4967                           
  4968                           ;incstack = 0
  4969 ;; hardware stack exceeded
  4970                           ; Regs used in _SendCMDLCD: [wreg+status,2+status,0+pclath+cstack]
  4971                           ;SendCMDLCD@CMD stored from wreg
  4972  07EA  1283               	bcf	3,5	;RP0=0, select bank0
  4973  07EB  1303               	bcf	3,6	;RP1=0, select bank0
  4974  07EC  00C1               	movwf	SendCMDLCD@CMD
  4975  07ED                     l2542:	
  4976                           ;lcd.c: 28:     while(BusyXLCD())continue;
  4977                           
  4978  07ED  120A  158A  219F  120A  118A  	fcall	_BusyXLCD
  4979  07F2  3A00               	xorlw	0
  4980  07F3  1D03               	skipz
  4981  07F4  2FED               	goto	l2542
  4982                           
  4983                           ;lcd.c: 29:     WriteCmdXLCD(CMD);
  4984  07F5  1283               	bcf	3,5	;RP0=0, select bank0
  4985  07F6  1303               	bcf	3,6	;RP1=0, select bank0
  4986  07F7  0841               	movf	SendCMDLCD@CMD,w
  4987  07F8  120A  158A  2552   	fcall	_WriteCmdXLCD
  4988  07FB  0008               	return
  4989  07FC                     __end_of_SendCMDLCD:	
  4990                           
  4991                           	psect	text22
  4992  06B4                     __ptext22:	
  4993 ;; *************** function _OpenXLCD *****************
  4994 ;; Defined at:
  4995 ;;		line 40 in file "lcd_pic16.c"
  4996 ;; Parameters:    Size  Location     Type
  4997 ;;  lcdtype         1    wreg     unsigned char 
  4998 ;; Auto vars:     Size  Location     Type
  4999 ;;  lcdtype         1   35[BANK0 ] unsigned char 
  5000 ;; Return value:  Size  Location     Type
  5001 ;;                  1    wreg      void 
  5002 ;; Registers used:
  5003 ;;		wreg, status,2, status,0, pclath, cstack
  5004 ;; Tracked objects:
  5005 ;;		On entry : 0/0
  5006 ;;		On exit  : 0/0
  5007 ;;		Unchanged: 0/0
  5008 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5009 ;;      Params:         0       0       0       0       0
  5010 ;;      Locals:         0       1       0       0       0
  5011 ;;      Temps:          0       2       0       0       0
  5012 ;;      Totals:         0       3       0       0       0
  5013 ;;Total ram usage:        3 bytes
  5014 ;; Hardware stack levels used:    1
  5015 ;; Hardware stack levels required when called:    7
  5016 ;; This function calls:
  5017 ;;		_BusyXLCD
  5018 ;;		_DelayPORXLCD
  5019 ;;		_SetDDRamAddr
  5020 ;;		_WriteCmdXLCD
  5021 ;; This function is called by:
  5022 ;;		_initLCD
  5023 ;; This function uses a non-reentrant model
  5024 ;;
  5025                           
  5026                           
  5027                           ;psect for function _OpenXLCD
  5028  06B4                     _OpenXLCD:	
  5029                           
  5030                           ;incstack = 0
  5031 ;; hardware stack exceeded
  5032                           ; Regs used in _OpenXLCD: [wreg+status,2+status,0+pclath+cstack]
  5033                           ;OpenXLCD@lcdtype stored from wreg
  5034  06B4  1283               	bcf	3,5	;RP0=0, select bank0
  5035  06B5  1303               	bcf	3,6	;RP1=0, select bank0
  5036  06B6  00C3               	movwf	OpenXLCD@lcdtype
  5037                           
  5038                           ;lcd_pic16.c: 40: void OpenXLCD(unsigned char lcdtype);lcd_pic16.c: 41: {;lcd_pic16.c: 4
      +                          7:         PORTB &= 0x0f;
  5039  06B7  300F               	movlw	15
  5040  06B8  00C1               	movwf	??_OpenXLCD
  5041  06B9  0841               	movf	??_OpenXLCD,w
  5042  06BA  0586               	andwf	6,f	;volatile
  5043                           
  5044                           ;lcd_pic16.c: 48:         TRISB &= 0x0F;
  5045  06BB  300F               	movlw	15
  5046  06BC  00C1               	movwf	??_OpenXLCD
  5047  06BD  0841               	movf	??_OpenXLCD,w
  5048  06BE  1683               	bsf	3,5	;RP0=1, select bank1
  5049  06BF  1303               	bcf	3,6	;RP1=0, select bank1
  5050  06C0  0586               	andwf	6,f	;volatile
  5051                           
  5052                           ;lcd_pic16.c: 54:         TRISBbits.TRISB2 = 0;
  5053  06C1  1106               	bcf	6,2	;volatile
  5054                           
  5055                           ;lcd_pic16.c: 55:         TRISBbits.TRISB1 = 0;
  5056  06C2  1086               	bcf	6,1	;volatile
  5057                           
  5058                           ;lcd_pic16.c: 56:         TRISBbits.TRISB3 = 0;
  5059  06C3  1186               	bcf	6,3	;volatile
  5060                           
  5061                           ;lcd_pic16.c: 57:         PORTBbits.RB2 = 0;
  5062  06C4  1283               	bcf	3,5	;RP0=0, select bank0
  5063  06C5  1303               	bcf	3,6	;RP1=0, select bank0
  5064  06C6  1106               	bcf	6,2	;volatile
  5065                           
  5066                           ;lcd_pic16.c: 58:         PORTBbits.RB1 = 0;
  5067  06C7  1086               	bcf	6,1	;volatile
  5068                           
  5069                           ;lcd_pic16.c: 59:         PORTBbits.RB3 = 0;
  5070  06C8  1186               	bcf	6,3	;volatile
  5071                           
  5072                           ;lcd_pic16.c: 62:         DelayPORXLCD();
  5073  06C9  120A  158A  2193  120A  118A  	fcall	_DelayPORXLCD
  5074                           
  5075                           ;lcd_pic16.c: 64:        WriteCmdXLCD(0x30);
  5076  06CE  3030               	movlw	48
  5077  06CF  120A  158A  2552  120A  118A  	fcall	_WriteCmdXLCD
  5078                           
  5079                           ;lcd_pic16.c: 65:          _delay((unsigned long)((5)*(4000000/4000.0)));
  5080  06D4  3007               	movlw	7
  5081  06D5  1283               	bcf	3,5	;RP0=0, select bank0
  5082  06D6  1303               	bcf	3,6	;RP1=0, select bank0
  5083  06D7  00C2               	movwf	??_OpenXLCD+1
  5084  06D8  307C               	movlw	124
  5085  06D9  00C1               	movwf	??_OpenXLCD
  5086  06DA                     u3747:	
  5087  06DA  0BC1               	decfsz	??_OpenXLCD,f
  5088  06DB  2EDA               	goto	u3747
  5089  06DC  0BC2               	decfsz	??_OpenXLCD+1,f
  5090  06DD  2EDA               	goto	u3747
  5091  06DE  0000               	nop
  5092                           
  5093                           ;lcd_pic16.c: 67:        WriteCmdXLCD(0x30);
  5094  06DF  3030               	movlw	48
  5095  06E0  120A  158A  2552  120A  118A  	fcall	_WriteCmdXLCD
  5096                           
  5097                           ;lcd_pic16.c: 68:          _delay((unsigned long)((1)*(4000000/4000.0)));
  5098  06E5  30C7               	movlw	199
  5099  06E6  1283               	bcf	3,5	;RP0=0, select bank0
  5100  06E7  1303               	bcf	3,6	;RP1=0, select bank0
  5101  06E8  00C1               	movwf	??_OpenXLCD
  5102  06E9                     u3757:	
  5103  06E9  2EEA               	nop2
  5104  06EA  0BC1               	decfsz	??_OpenXLCD,f
  5105  06EB  2EE9               	goto	u3757
  5106  06EC  2EED               	nop2
  5107                           
  5108                           ;lcd_pic16.c: 71:        WriteCmdXLCD(0x32);
  5109  06ED  3032               	movlw	50
  5110  06EE  120A  158A  2552  120A  118A  	fcall	_WriteCmdXLCD
  5111  06F3                     l2480:	
  5112                           ;lcd_pic16.c: 72:       while( BusyXLCD() );
  5113                           
  5114  06F3  120A  158A  219F  120A  118A  	fcall	_BusyXLCD
  5115  06F8  3A00               	xorlw	0
  5116  06F9  1D03               	skipz
  5117  06FA  2EF3               	goto	l2480
  5118  06FB                     l2482:	
  5119  06FB  120A  158A  219F  120A  118A  	fcall	_BusyXLCD
  5120  0700  3A00               	xorlw	0
  5121  0701  1D03               	skipz
  5122  0702  2EFB               	goto	l2482
  5123                           
  5124                           ;lcd_pic16.c: 78:         WriteCmdXLCD(lcdtype);
  5125  0703  1283               	bcf	3,5	;RP0=0, select bank0
  5126  0704  1303               	bcf	3,6	;RP1=0, select bank0
  5127  0705  0843               	movf	OpenXLCD@lcdtype,w
  5128  0706  120A  158A  2552  120A  118A  	fcall	_WriteCmdXLCD
  5129  070B                     l2486:	
  5130                           ;lcd_pic16.c: 81:         while(BusyXLCD());
  5131                           
  5132  070B  120A  158A  219F  120A  118A  	fcall	_BusyXLCD
  5133  0710  3A00               	xorlw	0
  5134  0711  1D03               	skipz
  5135  0712  2F0B               	goto	l2486
  5136                           
  5137                           ;lcd_pic16.c: 82:         WriteCmdXLCD(0b00001011&0b00001101&0b00001110);
  5138  0713  3008               	movlw	8
  5139  0714  120A  158A  2552  120A  118A  	fcall	_WriteCmdXLCD
  5140  0719                     l2490:	
  5141                           ;lcd_pic16.c: 83:         while(BusyXLCD());
  5142                           
  5143  0719  120A  158A  219F  120A  118A  	fcall	_BusyXLCD
  5144  071E  3A00               	xorlw	0
  5145  071F  1D03               	skipz
  5146  0720  2F19               	goto	l2490
  5147                           
  5148                           ;lcd_pic16.c: 84:         WriteCmdXLCD(0b00001111&0b00001111&0b00001111);
  5149  0721  300F               	movlw	15
  5150  0722  120A  158A  2552  120A  118A  	fcall	_WriteCmdXLCD
  5151  0727                     l2494:	
  5152                           ;lcd_pic16.c: 87:         while(BusyXLCD());
  5153                           
  5154  0727  120A  158A  219F  120A  118A  	fcall	_BusyXLCD
  5155  072C  3A00               	xorlw	0
  5156  072D  1D03               	skipz
  5157  072E  2F27               	goto	l2494
  5158                           
  5159                           ;lcd_pic16.c: 88:         WriteCmdXLCD(0x01);
  5160  072F  3001               	movlw	1
  5161  0730  120A  158A  2552  120A  118A  	fcall	_WriteCmdXLCD
  5162  0735                     l2498:	
  5163                           ;lcd_pic16.c: 91:         while(BusyXLCD());
  5164                           
  5165  0735  120A  158A  219F  120A  118A  	fcall	_BusyXLCD
  5166  073A  3A00               	xorlw	0
  5167  073B  1D03               	skipz
  5168  073C  2F35               	goto	l2498
  5169                           
  5170                           ;lcd_pic16.c: 92:         WriteCmdXLCD(0b00000101);
  5171  073D  3005               	movlw	5
  5172  073E  120A  158A  2552  120A  118A  	fcall	_WriteCmdXLCD
  5173  0743                     l2502:	
  5174                           ;lcd_pic16.c: 94:    while(BusyXLCD());
  5175                           
  5176  0743  120A  158A  219F  120A  118A  	fcall	_BusyXLCD
  5177  0748  3A00               	xorlw	0
  5178  0749  1D03               	skipz
  5179  074A  2F43               	goto	l2502
  5180                           
  5181                           ;lcd_pic16.c: 95:         WriteCmdXLCD(0x06);
  5182  074B  3006               	movlw	6
  5183  074C  120A  158A  2552  120A  118A  	fcall	_WriteCmdXLCD
  5184  0751                     l2506:	
  5185                           ;lcd_pic16.c: 97:         while(BusyXLCD());
  5186                           
  5187  0751  120A  158A  219F  120A  118A  	fcall	_BusyXLCD
  5188  0756  3A00               	xorlw	0
  5189  0757  1D03               	skipz
  5190  0758  2F51               	goto	l2506
  5191                           
  5192                           ;lcd_pic16.c: 98:         SetDDRamAddr(0x80);
  5193  0759  3080               	movlw	128
  5194  075A  120A  158A  25EC  120A  118A  	fcall	_SetDDRamAddr
  5195  075F                     l2510:	
  5196                           ;lcd_pic16.c: 100:         while(BusyXLCD());
  5197                           
  5198  075F  120A  158A  219F  120A  118A  	fcall	_BusyXLCD
  5199  0764  3A00               	xorlw	0
  5200  0765  1D03               	skipz
  5201  0766  2F5F               	goto	l2510
  5202                           
  5203                           ;lcd_pic16.c: 101:         WriteCmdXLCD(0b00001101);
  5204  0767  300D               	movlw	13
  5205  0768  120A  158A  2552   	fcall	_WriteCmdXLCD
  5206  076B  0008               	return
  5207  076C                     __end_of_OpenXLCD:	
  5208                           
  5209                           	psect	text23
  5210  0D52                     __ptext23:	
  5211 ;; *************** function _WriteCmdXLCD *****************
  5212 ;; Defined at:
  5213 ;;		line 164 in file "lcd_pic16.c"
  5214 ;; Parameters:    Size  Location     Type
  5215 ;;  cmd             1    wreg     unsigned char 
  5216 ;; Auto vars:     Size  Location     Type
  5217 ;;  cmd             1   32[BANK0 ] unsigned char 
  5218 ;; Return value:  Size  Location     Type
  5219 ;;                  1    wreg      void 
  5220 ;; Registers used:
  5221 ;;		wreg, status,2, status,0, pclath, cstack
  5222 ;; Tracked objects:
  5223 ;;		On entry : 0/0
  5224 ;;		On exit  : 0/0
  5225 ;;		Unchanged: 0/0
  5226 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5227 ;;      Params:         0       0       0       0       0
  5228 ;;      Locals:         0       1       0       0       0
  5229 ;;      Temps:          0       2       0       0       0
  5230 ;;      Totals:         0       3       0       0       0
  5231 ;;Total ram usage:        3 bytes
  5232 ;; Hardware stack levels used:    1
  5233 ;; Hardware stack levels required when called:    6
  5234 ;; This function calls:
  5235 ;;		_DelayFor18TCY
  5236 ;; This function is called by:
  5237 ;;		_OpenXLCD
  5238 ;;		_SendCMDLCD
  5239 ;; This function uses a non-reentrant model
  5240 ;;
  5241                           
  5242                           
  5243                           ;psect for function _WriteCmdXLCD
  5244  0D52                     _WriteCmdXLCD:	
  5245                           
  5246                           ;incstack = 0
  5247 ;; hardware stack exceeded
  5248                           ; Regs used in _WriteCmdXLCD: [wreg+status,2+status,0+pclath+cstack]
  5249                           ;WriteCmdXLCD@cmd stored from wreg
  5250  0D52  1283               	bcf	3,5	;RP0=0, select bank0
  5251  0D53  1303               	bcf	3,6	;RP1=0, select bank0
  5252  0D54  00C0               	movwf	WriteCmdXLCD@cmd
  5253                           
  5254                           ;lcd_pic16.c: 178:         TRISB &= 0x0f;
  5255  0D55  300F               	movlw	15
  5256  0D56  00BE               	movwf	??_WriteCmdXLCD
  5257  0D57  083E               	movf	??_WriteCmdXLCD,w
  5258  0D58  1683               	bsf	3,5	;RP0=1, select bank1
  5259  0D59  1303               	bcf	3,6	;RP1=0, select bank1
  5260  0D5A  0586               	andwf	6,f	;volatile
  5261                           
  5262                           ;lcd_pic16.c: 179:         PORTB &= 0x0f;
  5263  0D5B  300F               	movlw	15
  5264  0D5C  1283               	bcf	3,5	;RP0=0, select bank0
  5265  0D5D  1303               	bcf	3,6	;RP1=0, select bank0
  5266  0D5E  00BE               	movwf	??_WriteCmdXLCD
  5267  0D5F  083E               	movf	??_WriteCmdXLCD,w
  5268  0D60  0586               	andwf	6,f	;volatile
  5269                           
  5270                           ;lcd_pic16.c: 180:         PORTB |= cmd&0xf0;
  5271  0D61  0840               	movf	WriteCmdXLCD@cmd,w
  5272  0D62  39F0               	andlw	240
  5273  0D63  00BE               	movwf	??_WriteCmdXLCD
  5274  0D64  083E               	movf	??_WriteCmdXLCD,w
  5275  0D65  0486               	iorwf	6,f	;volatile
  5276                           
  5277                           ;lcd_pic16.c: 186:         PORTBbits.RB2 = 0;
  5278  0D66  1106               	bcf	6,2	;volatile
  5279                           
  5280                           ;lcd_pic16.c: 187:         PORTBbits.RB1 = 0;
  5281  0D67  1086               	bcf	6,1	;volatile
  5282                           
  5283                           ;lcd_pic16.c: 188:         DelayFor18TCY();
  5284  0D68  120A  158A  216A  120A  158A  	fcall	_DelayFor18TCY
  5285                           
  5286                           ;lcd_pic16.c: 189:         PORTBbits.RB3 = 1;
  5287  0D6D  1283               	bcf	3,5	;RP0=0, select bank0
  5288  0D6E  1303               	bcf	3,6	;RP1=0, select bank0
  5289  0D6F  1586               	bsf	6,3	;volatile
  5290                           
  5291                           ;lcd_pic16.c: 190:         DelayFor18TCY();
  5292  0D70  120A  158A  216A  120A  158A  	fcall	_DelayFor18TCY
  5293                           
  5294                           ;lcd_pic16.c: 191:         PORTBbits.RB3 = 0;
  5295  0D75  1283               	bcf	3,5	;RP0=0, select bank0
  5296  0D76  1303               	bcf	3,6	;RP1=0, select bank0
  5297  0D77  1186               	bcf	6,3	;volatile
  5298                           
  5299                           ;lcd_pic16.c: 193:         PORTB &= 0x0f;
  5300  0D78  300F               	movlw	15
  5301  0D79  00BE               	movwf	??_WriteCmdXLCD
  5302  0D7A  083E               	movf	??_WriteCmdXLCD,w
  5303  0D7B  0586               	andwf	6,f	;volatile
  5304                           
  5305                           ;lcd_pic16.c: 194:         PORTB |= (cmd<<4)&0xf0;
  5306  0D7C  0840               	movf	WriteCmdXLCD@cmd,w
  5307  0D7D  00BE               	movwf	??_WriteCmdXLCD
  5308  0D7E  3003               	movlw	3
  5309  0D7F                     u1445:	
  5310  0D7F  1003               	clrc
  5311  0D80  0DBE               	rlf	??_WriteCmdXLCD,f
  5312  0D81  3EFF               	addlw	-1
  5313  0D82  1D03               	skipz
  5314  0D83  2D7F               	goto	u1445
  5315  0D84  1003               	clrc
  5316  0D85  0D3E               	rlf	??_WriteCmdXLCD,w
  5317  0D86  39F0               	andlw	240
  5318  0D87  00BF               	movwf	??_WriteCmdXLCD+1
  5319  0D88  083F               	movf	??_WriteCmdXLCD+1,w
  5320  0D89  0486               	iorwf	6,f	;volatile
  5321                           
  5322                           ;lcd_pic16.c: 199:         DelayFor18TCY();
  5323  0D8A  120A  158A  216A  120A  158A  	fcall	_DelayFor18TCY
  5324                           
  5325                           ;lcd_pic16.c: 200:         PORTBbits.RB3 = 1;
  5326  0D8F  1283               	bcf	3,5	;RP0=0, select bank0
  5327  0D90  1303               	bcf	3,6	;RP1=0, select bank0
  5328  0D91  1586               	bsf	6,3	;volatile
  5329                           
  5330                           ;lcd_pic16.c: 201:         DelayFor18TCY();
  5331  0D92  120A  158A  216A   	fcall	_DelayFor18TCY
  5332                           
  5333                           ;lcd_pic16.c: 202:         PORTBbits.RB3 = 0;
  5334  0D95  1283               	bcf	3,5	;RP0=0, select bank0
  5335  0D96  1303               	bcf	3,6	;RP1=0, select bank0
  5336  0D97  1186               	bcf	6,3	;volatile
  5337                           
  5338                           ;lcd_pic16.c: 204:         TRISB |= 0xf0;
  5339  0D98  30F0               	movlw	240
  5340  0D99  00BE               	movwf	??_WriteCmdXLCD
  5341  0D9A  083E               	movf	??_WriteCmdXLCD,w
  5342  0D9B  1683               	bsf	3,5	;RP0=1, select bank1
  5343  0D9C  1303               	bcf	3,6	;RP1=0, select bank1
  5344  0D9D  0486               	iorwf	6,f	;volatile
  5345  0D9E  0008               	return
  5346  0D9F                     __end_of_WriteCmdXLCD:	
  5347                           
  5348                           	psect	text24
  5349  0DEC                     __ptext24:	
  5350 ;; *************** function _SetDDRamAddr *****************
  5351 ;; Defined at:
  5352 ;;		line 217 in file "lcd_pic16.c"
  5353 ;; Parameters:    Size  Location     Type
  5354 ;;  DDaddr          1    wreg     unsigned char 
  5355 ;; Auto vars:     Size  Location     Type
  5356 ;;  DDaddr          1   32[BANK0 ] unsigned char 
  5357 ;; Return value:  Size  Location     Type
  5358 ;;                  1    wreg      void 
  5359 ;; Registers used:
  5360 ;;		wreg, status,2, status,0, pclath, cstack
  5361 ;; Tracked objects:
  5362 ;;		On entry : 0/0
  5363 ;;		On exit  : 0/0
  5364 ;;		Unchanged: 0/0
  5365 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5366 ;;      Params:         0       0       0       0       0
  5367 ;;      Locals:         0       1       0       0       0
  5368 ;;      Temps:          0       2       0       0       0
  5369 ;;      Totals:         0       3       0       0       0
  5370 ;;Total ram usage:        3 bytes
  5371 ;; Hardware stack levels used:    1
  5372 ;; Hardware stack levels required when called:    6
  5373 ;; This function calls:
  5374 ;;		_DelayFor18TCY
  5375 ;; This function is called by:
  5376 ;;		_main
  5377 ;;		_start
  5378 ;;		_setFrequency
  5379 ;;		_OpenXLCD
  5380 ;; This function uses a non-reentrant model
  5381 ;;
  5382                           
  5383                           
  5384                           ;psect for function _SetDDRamAddr
  5385  0DEC                     _SetDDRamAddr:	
  5386                           
  5387                           ;incstack = 0
  5388                           ; Regs used in _SetDDRamAddr: [wreg+status,2+status,0+pclath+cstack]
  5389                           ;SetDDRamAddr@DDaddr stored from wreg
  5390  0DEC  1283               	bcf	3,5	;RP0=0, select bank0
  5391  0DED  1303               	bcf	3,6	;RP1=0, select bank0
  5392  0DEE  00C0               	movwf	SetDDRamAddr@DDaddr
  5393                           
  5394                           ;lcd_pic16.c: 217: void SetDDRamAddr(unsigned char DDaddr);lcd_pic16.c: 218: {;lcd_pic16
      +                          .c: 232:         TRISB &= 0x0f;
  5395  0DEF  300F               	movlw	15
  5396  0DF0  00BE               	movwf	??_SetDDRamAddr
  5397  0DF1  083E               	movf	??_SetDDRamAddr,w
  5398  0DF2  1683               	bsf	3,5	;RP0=1, select bank1
  5399  0DF3  1303               	bcf	3,6	;RP1=0, select bank1
  5400  0DF4  0586               	andwf	6,f	;volatile
  5401                           
  5402                           ;lcd_pic16.c: 233:         PORTB &= 0x0f;
  5403  0DF5  300F               	movlw	15
  5404  0DF6  1283               	bcf	3,5	;RP0=0, select bank0
  5405  0DF7  1303               	bcf	3,6	;RP1=0, select bank0
  5406  0DF8  00BE               	movwf	??_SetDDRamAddr
  5407  0DF9  083E               	movf	??_SetDDRamAddr,w
  5408  0DFA  0586               	andwf	6,f	;volatile
  5409                           
  5410                           ;lcd_pic16.c: 234:         PORTB |= ((DDaddr | 0b10000000) & 0xf0);
  5411  0DFB  0840               	movf	SetDDRamAddr@DDaddr,w
  5412  0DFC  3880               	iorlw	128
  5413  0DFD  39F0               	andlw	240
  5414  0DFE  00BE               	movwf	??_SetDDRamAddr
  5415  0DFF  083E               	movf	??_SetDDRamAddr,w
  5416  0E00  0486               	iorwf	6,f	;volatile
  5417                           
  5418                           ;lcd_pic16.c: 240:         PORTBbits.RB2 = 0;
  5419  0E01  1106               	bcf	6,2	;volatile
  5420                           
  5421                           ;lcd_pic16.c: 241:         PORTBbits.RB1 = 0;
  5422  0E02  1086               	bcf	6,1	;volatile
  5423                           
  5424                           ;lcd_pic16.c: 242:         DelayFor18TCY();
  5425  0E03  120A  158A  216A  120A  158A  	fcall	_DelayFor18TCY
  5426                           
  5427                           ;lcd_pic16.c: 243:         PORTBbits.RB3 = 1;
  5428  0E08  1283               	bcf	3,5	;RP0=0, select bank0
  5429  0E09  1303               	bcf	3,6	;RP1=0, select bank0
  5430  0E0A  1586               	bsf	6,3	;volatile
  5431                           
  5432                           ;lcd_pic16.c: 244:         DelayFor18TCY();
  5433  0E0B  120A  158A  216A  120A  158A  	fcall	_DelayFor18TCY
  5434                           
  5435                           ;lcd_pic16.c: 245:         PORTBbits.RB3 = 0;
  5436  0E10  1283               	bcf	3,5	;RP0=0, select bank0
  5437  0E11  1303               	bcf	3,6	;RP1=0, select bank0
  5438  0E12  1186               	bcf	6,3	;volatile
  5439                           
  5440                           ;lcd_pic16.c: 247:         PORTB &= 0x0f;
  5441  0E13  300F               	movlw	15
  5442  0E14  00BE               	movwf	??_SetDDRamAddr
  5443  0E15  083E               	movf	??_SetDDRamAddr,w
  5444  0E16  0586               	andwf	6,f	;volatile
  5445                           
  5446                           ;lcd_pic16.c: 248:         PORTB |= ((DDaddr<<4)&0xf0);
  5447  0E17  0840               	movf	SetDDRamAddr@DDaddr,w
  5448  0E18  00BE               	movwf	??_SetDDRamAddr
  5449  0E19  3003               	movlw	3
  5450  0E1A                     u1435:	
  5451  0E1A  1003               	clrc
  5452  0E1B  0DBE               	rlf	??_SetDDRamAddr,f
  5453  0E1C  3EFF               	addlw	-1
  5454  0E1D  1D03               	skipz
  5455  0E1E  2E1A               	goto	u1435
  5456  0E1F  1003               	clrc
  5457  0E20  0D3E               	rlf	??_SetDDRamAddr,w
  5458  0E21  39F0               	andlw	240
  5459  0E22  00BF               	movwf	??_SetDDRamAddr+1
  5460  0E23  083F               	movf	??_SetDDRamAddr+1,w
  5461  0E24  0486               	iorwf	6,f	;volatile
  5462                           
  5463                           ;lcd_pic16.c: 253:         DelayFor18TCY();
  5464  0E25  120A  158A  216A  120A  158A  	fcall	_DelayFor18TCY
  5465                           
  5466                           ;lcd_pic16.c: 254:         PORTBbits.RB3 = 1;
  5467  0E2A  1283               	bcf	3,5	;RP0=0, select bank0
  5468  0E2B  1303               	bcf	3,6	;RP1=0, select bank0
  5469  0E2C  1586               	bsf	6,3	;volatile
  5470                           
  5471                           ;lcd_pic16.c: 255:         DelayFor18TCY();
  5472  0E2D  120A  158A  216A   	fcall	_DelayFor18TCY
  5473                           
  5474                           ;lcd_pic16.c: 256:         PORTBbits.RB3 = 0;
  5475  0E30  1283               	bcf	3,5	;RP0=0, select bank0
  5476  0E31  1303               	bcf	3,6	;RP1=0, select bank0
  5477  0E32  1186               	bcf	6,3	;volatile
  5478                           
  5479                           ;lcd_pic16.c: 258:         TRISB |= 0xf0;
  5480  0E33  30F0               	movlw	240
  5481  0E34  00BE               	movwf	??_SetDDRamAddr
  5482  0E35  083E               	movf	??_SetDDRamAddr,w
  5483  0E36  1683               	bsf	3,5	;RP0=1, select bank1
  5484  0E37  1303               	bcf	3,6	;RP1=0, select bank1
  5485  0E38  0486               	iorwf	6,f	;volatile
  5486  0E39  0008               	return
  5487  0E3A                     __end_of_SetDDRamAddr:	
  5488                           
  5489                           	psect	text25
  5490  096A                     __ptext25:	
  5491 ;; *************** function _DelayFor18TCY *****************
  5492 ;; Defined at:
  5493 ;;		line 22 in file "lcd_pic16.c"
  5494 ;; Parameters:    Size  Location     Type
  5495 ;;		None
  5496 ;; Auto vars:     Size  Location     Type
  5497 ;;		None
  5498 ;; Return value:  Size  Location     Type
  5499 ;;                  1    wreg      void 
  5500 ;; Registers used:
  5501 ;;		wreg
  5502 ;; Tracked objects:
  5503 ;;		On entry : 0/0
  5504 ;;		On exit  : 0/0
  5505 ;;		Unchanged: 0/0
  5506 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5507 ;;      Params:         0       0       0       0       0
  5508 ;;      Locals:         0       0       0       0       0
  5509 ;;      Temps:          0       1       0       0       0
  5510 ;;      Totals:         0       1       0       0       0
  5511 ;;Total ram usage:        1 bytes
  5512 ;; Hardware stack levels used:    1
  5513 ;; Hardware stack levels required when called:    5
  5514 ;; This function calls:
  5515 ;;		Nothing
  5516 ;; This function is called by:
  5517 ;;		_WriteDataXLCD
  5518 ;;		_WriteCmdXLCD
  5519 ;;		_SetDDRamAddr
  5520 ;;		_SetCGRamAddr
  5521 ;;		_ReadDataXLCD
  5522 ;;		_ReadAddrXLCD
  5523 ;; This function uses a non-reentrant model
  5524 ;;
  5525                           
  5526                           
  5527                           ;psect for function _DelayFor18TCY
  5528  096A                     _DelayFor18TCY:	
  5529                           
  5530                           ;lcd_pic16.c: 24:    _delay((unsigned long)((18)*(4000000/4000000.0)));
  5531                           
  5532                           ;incstack = 0
  5533 ;; hardware stack exceeded
  5534                           ; Regs used in _DelayFor18TCY: [wreg]
  5535  096A  3005               	movlw	5
  5536  096B  1283               	bcf	3,5	;RP0=0, select bank0
  5537  096C  1303               	bcf	3,6	;RP1=0, select bank0
  5538  096D  00BD               	movwf	??_DelayFor18TCY
  5539  096E                     u3767:	
  5540  096E  0BBD               	decfsz	??_DelayFor18TCY,f
  5541  096F  296E               	goto	u3767
  5542  0970  0008               	return
  5543  0971                     __end_of_DelayFor18TCY:	
  5544                           
  5545                           	psect	text26
  5546  0993                     __ptext26:	
  5547 ;; *************** function _DelayPORXLCD *****************
  5548 ;; Defined at:
  5549 ;;		line 27 in file "lcd_pic16.c"
  5550 ;; Parameters:    Size  Location     Type
  5551 ;;		None
  5552 ;; Auto vars:     Size  Location     Type
  5553 ;;		None
  5554 ;; Return value:  Size  Location     Type
  5555 ;;                  1    wreg      void 
  5556 ;; Registers used:
  5557 ;;		wreg
  5558 ;; Tracked objects:
  5559 ;;		On entry : 0/0
  5560 ;;		On exit  : 0/0
  5561 ;;		Unchanged: 0/0
  5562 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5563 ;;      Params:         0       0       0       0       0
  5564 ;;      Locals:         0       0       0       0       0
  5565 ;;      Temps:          0       2       0       0       0
  5566 ;;      Totals:         0       2       0       0       0
  5567 ;;Total ram usage:        2 bytes
  5568 ;; Hardware stack levels used:    1
  5569 ;; Hardware stack levels required when called:    5
  5570 ;; This function calls:
  5571 ;;		Nothing
  5572 ;; This function is called by:
  5573 ;;		_OpenXLCD
  5574 ;; This function uses a non-reentrant model
  5575 ;;
  5576                           
  5577                           
  5578                           ;psect for function _DelayPORXLCD
  5579  0993                     _DelayPORXLCD:	
  5580                           
  5581                           ;lcd_pic16.c: 29:    _delay((unsigned long)((20)*(4000000/4000.0)));
  5582                           
  5583                           ;incstack = 0
  5584 ;; hardware stack exceeded
  5585                           ; Regs used in _DelayPORXLCD: [wreg]
  5586  0993  301A               	movlw	26
  5587  0994  1283               	bcf	3,5	;RP0=0, select bank0
  5588  0995  1303               	bcf	3,6	;RP1=0, select bank0
  5589  0996  00BE               	movwf	??_DelayPORXLCD+1
  5590  0997  30F7               	movlw	247
  5591  0998  00BD               	movwf	??_DelayPORXLCD
  5592  0999                     u3777:	
  5593  0999  0BBD               	decfsz	??_DelayPORXLCD,f
  5594  099A  2999               	goto	u3777
  5595  099B  0BBE               	decfsz	??_DelayPORXLCD+1,f
  5596  099C  2999               	goto	u3777
  5597  099D  299E               	nop2
  5598  099E  0008               	return
  5599  099F                     __end_of_DelayPORXLCD:	
  5600                           
  5601                           	psect	text27
  5602  099F                     __ptext27:	
  5603 ;; *************** function _BusyXLCD *****************
  5604 ;; Defined at:
  5605 ;;		line 451 in file "lcd_pic16.c"
  5606 ;; Parameters:    Size  Location     Type
  5607 ;;		None
  5608 ;; Auto vars:     Size  Location     Type
  5609 ;;		None
  5610 ;; Return value:  Size  Location     Type
  5611 ;;                  1    wreg      unsigned char 
  5612 ;; Registers used:
  5613 ;;		wreg
  5614 ;; Tracked objects:
  5615 ;;		On entry : 0/0
  5616 ;;		On exit  : 0/0
  5617 ;;		Unchanged: 0/0
  5618 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5619 ;;      Params:         0       0       0       0       0
  5620 ;;      Locals:         0       0       0       0       0
  5621 ;;      Temps:          0       2       0       0       0
  5622 ;;      Totals:         0       2       0       0       0
  5623 ;;Total ram usage:        2 bytes
  5624 ;; Hardware stack levels used:    1
  5625 ;; Hardware stack levels required when called:    5
  5626 ;; This function calls:
  5627 ;;		Nothing
  5628 ;; This function is called by:
  5629 ;;		_OpenXLCD
  5630 ;;		_putsXLCD
  5631 ;;		_putrsXLCD
  5632 ;;		_SendCMDLCD
  5633 ;; This function uses a non-reentrant model
  5634 ;;
  5635                           
  5636                           
  5637                           ;psect for function _BusyXLCD
  5638  099F                     _BusyXLCD:	
  5639                           
  5640                           ;lcd_pic16.c: 504:         _delay((unsigned long)((5)*(4000000/4000.0)));
  5641                           
  5642                           ;incstack = 0
  5643                           ; Regs used in _BusyXLCD: [wreg]
  5644  099F  3007               	movlw	7
  5645  09A0  1283               	bcf	3,5	;RP0=0, select bank0
  5646  09A1  1303               	bcf	3,6	;RP1=0, select bank0
  5647  09A2  00BE               	movwf	??_BusyXLCD+1
  5648  09A3  307C               	movlw	124
  5649  09A4  00BD               	movwf	??_BusyXLCD
  5650  09A5                     u3787:	
  5651  09A5  0BBD               	decfsz	??_BusyXLCD,f
  5652  09A6  29A5               	goto	u3787
  5653  09A7  0BBE               	decfsz	??_BusyXLCD+1,f
  5654  09A8  29A5               	goto	u3787
  5655  09A9  0000               	nop
  5656                           
  5657                           ;lcd_pic16.c: 505:         return 0;
  5658  09AA  3000               	movlw	0
  5659  09AB  0008               	return
  5660  09AC                     __end_of_BusyXLCD:	
  5661                           
  5662                           	psect	text28
  5663  0AA2                     __ptext28:	
  5664 ;; *************** function _inter *****************
  5665 ;; Defined at:
  5666 ;;		line 129 in file "main.c"
  5667 ;; Parameters:    Size  Location     Type
  5668 ;;		None
  5669 ;; Auto vars:     Size  Location     Type
  5670 ;;		None
  5671 ;; Return value:  Size  Location     Type
  5672 ;;                  1    wreg      void 
  5673 ;; Registers used:
  5674 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5675 ;; Tracked objects:
  5676 ;;		On entry : 0/0
  5677 ;;		On exit  : 0/0
  5678 ;;		Unchanged: 0/0
  5679 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5680 ;;      Params:         0       0       0       0       0
  5681 ;;      Locals:         0       0       0       0       0
  5682 ;;      Temps:          0       5       0       0       0
  5683 ;;      Totals:         0       5       0       0       0
  5684 ;;Total ram usage:        5 bytes
  5685 ;; Hardware stack levels used:    1
  5686 ;; Hardware stack levels required when called:    4
  5687 ;; This function calls:
  5688 ;;		_time
  5689 ;;		_updateLCD
  5690 ;; This function is called by:
  5691 ;;		Interrupt level 1
  5692 ;; This function uses a non-reentrant model
  5693 ;;
  5694                           
  5695                           
  5696                           ;psect for function _inter
  5697  0AA2                     _inter:	
  5698                           
  5699                           ;main.c: 131:     INTCONbits.GIE = 0;
  5700  0AA2  138B               	bcf	11,7	;volatile
  5701                           
  5702                           ;main.c: 133:     if(PIR1bits.TMR1IF == 1){
  5703  0AA3  1C0C               	btfss	12,0	;volatile
  5704  0AA4  2ABA               	goto	i1l3392
  5705                           
  5706                           ;main.c: 134:         TMR1H = prTmr1H;
  5707  0AA5  0851               	movf	_prTmr1H,w
  5708  0AA6  008F               	movwf	15	;volatile
  5709                           
  5710                           ;main.c: 135:         TMR1L = prTmr1L;
  5711  0AA7  0852               	movf	_prTmr1L,w
  5712  0AA8  008E               	movwf	14	;volatile
  5713                           
  5714                           ;main.c: 136:         cntTmr1++;
  5715  0AA9  3001               	movlw	1
  5716  0AAA  00B8               	movwf	??_inter
  5717  0AAB  0838               	movf	??_inter,w
  5718  0AAC  07CB               	addwf	_cntTmr1,f
  5719                           
  5720                           ;main.c: 137:         time();
  5721  0AAD  120A  158A  2428  120A  158A  	fcall	_time
  5722                           
  5723                           ;main.c: 138:         updateLCD();
  5724  0AB2  120A  158A  2691  120A  158A  	fcall	_updateLCD
  5725                           
  5726                           ;main.c: 139:         PIR1bits.TMR1IF = 0;
  5727  0AB7  1283               	bcf	3,5	;RP0=0, select bank0
  5728  0AB8  1303               	bcf	3,6	;RP1=0, select bank0
  5729  0AB9  100C               	bcf	12,0	;volatile
  5730  0ABA                     i1l3392:	
  5731                           
  5732                           ;main.c: 141:     INTCONbits.GIE = 1;
  5733  0ABA  178B               	bsf	11,7	;volatile
  5734  0ABB  083C               	movf	??_inter+4,w
  5735  0ABC  00FF               	movwf	127
  5736  0ABD  083B               	movf	??_inter+3,w
  5737  0ABE  008A               	movwf	10
  5738  0ABF  083A               	movf	??_inter+2,w
  5739  0AC0  0084               	movwf	4
  5740  0AC1  0E39               	swapf	(??_inter+1)^0,w
  5741  0AC2  0083               	movwf	3
  5742  0AC3  0EFE               	swapf	126,f
  5743  0AC4  0E7E               	swapf	126,w
  5744  0AC5  0009               	retfie
  5745  0AC6                     __end_of_inter:	
  5746                           
  5747                           	psect	intentry
  5748  0004                     __pintentry:	
  5749                           ;incstack = 0
  5750 ;; hardware stack exceeded
  5751                           ; Regs used in _inter: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5752                           
  5753  0004                     interrupt_function:	
  5754  007E                     saved_w	set	btemp
  5755  0004  00FE               	movwf	btemp
  5756  0005  0E03               	swapf	3,w
  5757  0006  1283               	bcf	3,5	;RP0=0, select bank0
  5758  0007  1303               	bcf	3,6	;RP1=0, select bank0
  5759  0008  00B9               	movwf	??_inter+1
  5760  0009  0804               	movf	4,w
  5761  000A  00BA               	movwf	??_inter+2
  5762  000B  080A               	movf	10,w
  5763  000C  00BB               	movwf	??_inter+3
  5764  000D  087F               	movf	btemp+1,w
  5765  000E  00BC               	movwf	??_inter+4
  5766  000F  120A  158A  2AA2   	ljmp	_inter
  5767                           
  5768                           	psect	text29
  5769  0E91                     __ptext29:	
  5770 ;; *************** function _updateLCD *****************
  5771 ;; Defined at:
  5772 ;;		line 14 in file "lcd.c"
  5773 ;; Parameters:    Size  Location     Type
  5774 ;;		None
  5775 ;; Auto vars:     Size  Location     Type
  5776 ;;  integ           1   23[BANK0 ] unsigned char 
  5777 ;;  decim           1   22[BANK0 ] unsigned char 
  5778 ;; Return value:  Size  Location     Type
  5779 ;;                  1    wreg      void 
  5780 ;; Registers used:
  5781 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5782 ;; Tracked objects:
  5783 ;;		On entry : 0/0
  5784 ;;		On exit  : 0/0
  5785 ;;		Unchanged: 0/0
  5786 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5787 ;;      Params:         0       0       0       0       0
  5788 ;;      Locals:         0       2       0       0       0
  5789 ;;      Temps:          0       5       0       0       0
  5790 ;;      Totals:         0       7       0       0       0
  5791 ;;Total ram usage:        7 bytes
  5792 ;; Hardware stack levels used:    1
  5793 ;; Hardware stack levels required when called:    3
  5794 ;; This function calls:
  5795 ;;		i1_SetDDRamAddr
  5796 ;;		i1___lwdiv
  5797 ;;		i1___lwmod
  5798 ;;		i1_putsXLCD
  5799 ;;		i1_sprintf
  5800 ;; This function is called by:
  5801 ;;		_inter
  5802 ;; This function uses a non-reentrant model
  5803 ;;
  5804                           
  5805                           
  5806                           ;psect for function _updateLCD
  5807  0E91                     _updateLCD:	
  5808                           
  5809                           ;lcd.c: 15:     if(isOnConfig){
  5810                           
  5811                           ;incstack = 0
  5812 ;; hardware stack exceeded
  5813                           ; Regs used in _updateLCD: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5814  0E91  1283               	bcf	3,5	;RP0=0, select bank0
  5815  0E92  1303               	bcf	3,6	;RP1=0, select bank0
  5816  0E93  0847               	movf	_isOnConfig,w
  5817  0E94  1903               	btfsc	3,2
  5818  0E95  0008               	return
  5819                           
  5820                           ;lcd.c: 16:         unsigned char decim = frequency % 10;
  5821  0E96  300A               	movlw	10
  5822  0E97  00F8               	movwf	i1___lwmod@divisor
  5823  0E98  3000               	movlw	0
  5824  0E99  00F9               	movwf	i1___lwmod@divisor+1
  5825  0E9A  0845               	movf	_frequency+1,w
  5826  0E9B  00FB               	movwf	i1___lwmod@dividend+1
  5827  0E9C  0844               	movf	_frequency,w
  5828  0E9D  00FA               	movwf	i1___lwmod@dividend
  5829  0E9E  120A  158A  2344  120A  158A  	fcall	i1___lwmod
  5830  0EA3  0878               	movf	?i1___lwmod,w
  5831  0EA4  1283               	bcf	3,5	;RP0=0, select bank0
  5832  0EA5  1303               	bcf	3,6	;RP1=0, select bank0
  5833  0EA6  00B1               	movwf	??_updateLCD
  5834  0EA7  0831               	movf	??_updateLCD,w
  5835  0EA8  00B6               	movwf	updateLCD@decim
  5836                           
  5837                           ;lcd.c: 17:         unsigned char integ = frequency / 10;
  5838  0EA9  300A               	movlw	10
  5839  0EAA  00F0               	movwf	i1___lwdiv@divisor
  5840  0EAB  3000               	movlw	0
  5841  0EAC  00F1               	movwf	i1___lwdiv@divisor+1
  5842  0EAD  0845               	movf	_frequency+1,w
  5843  0EAE  00F3               	movwf	i1___lwdiv@dividend+1
  5844  0EAF  0844               	movf	_frequency,w
  5845  0EB0  00F2               	movwf	i1___lwdiv@dividend
  5846  0EB1  120A  158A  23AC  120A  158A  	fcall	i1___lwdiv
  5847  0EB6  0870               	movf	?i1___lwdiv,w
  5848  0EB7  1283               	bcf	3,5	;RP0=0, select bank0
  5849  0EB8  1303               	bcf	3,6	;RP1=0, select bank0
  5850  0EB9  00B1               	movwf	??_updateLCD
  5851  0EBA  0831               	movf	??_updateLCD,w
  5852  0EBB  00B7               	movwf	updateLCD@integ
  5853                           
  5854                           ;lcd.c: 18:         sprintf(lineTwo,"FREQ.  %3d.%d MHz",integ, decim);
  5855  0EBC  300F               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  5856  0EBD  00B1               	movwf	??_updateLCD
  5857  0EBE  0831               	movf	??_updateLCD,w
  5858  0EBF  00A0               	movwf	i1sprintf@f
  5859  0EC0  0837               	movf	updateLCD@integ,w
  5860  0EC1  00B2               	movwf	??_updateLCD+1
  5861  0EC2  01B3               	clrf	??_updateLCD+2
  5862  0EC3  0832               	movf	??_updateLCD+1,w
  5863  0EC4  00A1               	movwf	?i1_sprintf+1
  5864  0EC5  0833               	movf	??_updateLCD+2,w
  5865  0EC6  00A2               	movwf	?i1_sprintf+2
  5866  0EC7  0836               	movf	updateLCD@decim,w
  5867  0EC8  00B4               	movwf	??_updateLCD+3
  5868  0EC9  01B5               	clrf	??_updateLCD+4
  5869  0ECA  0834               	movf	??_updateLCD+3,w
  5870  0ECB  00A3               	movwf	?i1_sprintf+3
  5871  0ECC  0835               	movf	??_updateLCD+4,w
  5872  0ECD  00A4               	movwf	?i1_sprintf+4
  5873  0ECE  30A1               	movlw	(low (_lineTwo| 0))& (0+255)
  5874  0ECF  120A  118A  21BD  120A  158A  	fcall	i1_sprintf
  5875                           
  5876                           ;lcd.c: 19:         SetDDRamAddr(0x40);
  5877  0ED4  3040               	movlw	64
  5878  0ED5  120A  158A  2506  120A  158A  	fcall	i1_SetDDRamAddr
  5879                           
  5880                           ;lcd.c: 20:         putsXLCD(lineTwo);
  5881  0EDA  30A1               	movlw	(low (_lineTwo| 0))& (0+255)
  5882  0EDB  120A  158A  2201  120A  158A  	fcall	i1_putsXLCD
  5883                           
  5884                           ;lcd.c: 21:         SetDDRamAddr(0x00);
  5885  0EE0  3000               	movlw	0
  5886  0EE1  120A  158A  2506  120A  158A  	fcall	i1_SetDDRamAddr
  5887                           
  5888                           ;lcd.c: 22:         putsXLCD(lineOne);
  5889  0EE6  30B2               	movlw	(low (_lineOne| 0))& (0+255)
  5890  0EE7  120A  158A  2201   	fcall	i1_putsXLCD
  5891  0EEA  0008               	return
  5892  0EEB                     __end_of_updateLCD:	
  5893                           
  5894                           	psect	text30
  5895  01BD                     __ptext30:	
  5896 ;; *************** function i1_sprintf *****************
  5897 ;; Defined at:
  5898 ;;		line 500 in file "/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt.c"
  5899 ;; Parameters:    Size  Location     Type
  5900 ;;  sp              1    wreg     PTR unsigned char 
  5901 ;;		 -> lineOne(17), lineTwo(17), 
  5902 ;;  f               1    0[BANK0 ] PTR const unsigned char 
  5903 ;;		 -> STR_12(18), STR_11(17), STR_10(17), STR_9(17), 
  5904 ;;		 -> STR_8(17), STR_7(17), STR_6(17), STR_5(17), 
  5905 ;;		 -> STR_4(17), STR_3(17), STR_2(18), 
  5906 ;; Auto vars:     Size  Location     Type
  5907 ;;  sp              1   13[BANK0 ] PTR unsigned char 
  5908 ;;		 -> lineOne(17), lineTwo(17), 
  5909 ;;  sprintf         4    0        struct .
  5910 ;;  sprintf         2   14[BANK0 ] int 
  5911 ;;  sprintf         2   11[BANK0 ] unsigned int 
  5912 ;;  sprintf         2    0        PTR const unsigned char 
  5913 ;;  sprintf         2    0        unsigned int 
  5914 ;;  sprintf         1   16[BANK0 ] unsigned char 
  5915 ;;  sprintf         1   10[BANK0 ] unsigned char 
  5916 ;;  sprintf         1    9[BANK0 ] char 
  5917 ;;  sprintf         1    8[BANK0 ] PTR void [1]
  5918 ;;		 -> ?i1_sprintf(2), ?_sprintf(2), 
  5919 ;; Return value:  Size  Location     Type
  5920 ;;                  2    0[BANK0 ] int 
  5921 ;; Registers used:
  5922 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5923 ;; Tracked objects:
  5924 ;;		On entry : 0/0
  5925 ;;		On exit  : 0/0
  5926 ;;		Unchanged: 0/0
  5927 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5928 ;;      Params:         0       5       0       0       0
  5929 ;;      Locals:         0       9       0       0       0
  5930 ;;      Temps:          0       3       0       0       0
  5931 ;;      Totals:         0      17       0       0       0
  5932 ;;Total ram usage:       17 bytes
  5933 ;; Hardware stack levels used:    1
  5934 ;; Hardware stack levels required when called:    1
  5935 ;; This function calls:
  5936 ;;		i1___lwdiv
  5937 ;;		i1___lwmod
  5938 ;;		i1___wmul
  5939 ;;		i1_isdigit
  5940 ;; This function is called by:
  5941 ;;		_updateLCD
  5942 ;; This function uses a non-reentrant model
  5943 ;;
  5944                           
  5945                           
  5946                           ;psect for function i1_sprintf
  5947  01BD                     i1_sprintf:	
  5948                           
  5949                           ;incstack = 0
  5950 ;; hardware stack exceeded
  5951                           ; Regs used in i1_sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5952                           ;i1sprintf@sp stored from wreg
  5953  01BD  1283               	bcf	3,5	;RP0=0, select bank0
  5954  01BE  1303               	bcf	3,6	;RP1=0, select bank0
  5955  01BF  00AD               	movwf	i1sprintf@sp
  5956                           
  5957                           ;/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt.c: 500: sprintf(char * sp, const
      +                           char * f, ...);/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt.c: 501: {;/opt/mi
      +                          crochip/xc8/v2.05/pic/sources/c90/common/doprnt.c: 502:  va_list ap;;/opt/microchip/xc8/
      +                          v2.05/pic/sources/c90/common/doprnt.c: 507:  char c;;/opt/microchip/xc8/v2.05/pic/source
      +                          s/c90/common/doprnt.c: 509:  int width;;/opt/microchip/xc8/v2.05/pic/sources/c90/common/
      +                          doprnt.c: 516:  signed char prec;;/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt
      +                          .c: 520:  unsigned char flag;
  5958  01C0  3021               	movlw	(low ((?i1_sprintf| 0+1)))& (0+255)
  5959  01C1  00A5               	movwf	??i1_sprintf
  5960  01C2  0825               	movf	??i1_sprintf,w
  5961  01C3  00A8               	movwf	i1sprintf@ap
  5962  01C4                     i1l3024:	
  5963                           ;/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt.c: 548:  while((c = *f++)) {
  5964                           
  5965                           
  5966                           ;/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt.c: 548:  while((c = *f++)) {
  5967  01C4  3001               	movlw	1
  5968  01C5  07A0               	addwf	i1sprintf@f,f
  5969  01C6  30FF               	movlw	-1
  5970  01C7  0720               	addwf	i1sprintf@f,w
  5971  01C8  0084               	movwf	4
  5972  01C9  120A  158A  2000  120A  118A  	fcall	stringdir
  5973  01CE  00A5               	movwf	??i1_sprintf
  5974  01CF  0825               	movf	??i1_sprintf,w
  5975  01D0  00B0               	movwf	i1sprintf@c
  5976  01D1  0830               	movf	i1sprintf@c,w
  5977  01D2  1903               	btfsc	3,2
  5978  01D3  2B20               	goto	i1l3026
  5979                           
  5980                           ;/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt.c: 550:   if(c != '%')
  5981  01D4  3025               	movlw	37
  5982  01D5  0630               	xorwf	i1sprintf@c,w
  5983  01D6  1903               	btfsc	3,2
  5984  01D7  29E4               	goto	i1l2950
  5985                           
  5986                           ;/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt.c: 552:   {;/opt/microchip/xc8/v
      +                          2.05/pic/sources/c90/common/doprnt.c: 553:    ((*sp++ = (c)));
  5987  01D8  0830               	movf	i1sprintf@c,w
  5988  01D9  00A5               	movwf	??i1_sprintf
  5989  01DA  082D               	movf	i1sprintf@sp,w
  5990  01DB  0084               	movwf	4
  5991  01DC  0825               	movf	??i1_sprintf,w
  5992  01DD  1383               	bcf	3,7	;select IRP bank0
  5993  01DE  0080               	movwf	0
  5994  01DF  3001               	movlw	1
  5995  01E0  00A5               	movwf	??i1_sprintf
  5996  01E1  0825               	movf	??i1_sprintf,w
  5997  01E2  07AD               	addwf	i1sprintf@sp,f
  5998                           
  5999                           ;/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt.c: 554:    continue;
  6000  01E3  29C4               	goto	i1l3024
  6001  01E4                     i1l2950:	
  6002                           
  6003                           ;/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt.c: 558:   width = 0;
  6004  01E4  01AE               	clrf	i1sprintf@width
  6005  01E5  01AF               	clrf	i1sprintf@width+1
  6006                           
  6007                           ;/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt.c: 560:   flag = 0;
  6008  01E6  01AA               	clrf	i1sprintf@flag
  6009                           
  6010                           ;/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt.c: 609:   if(isdigit((unsigned)*
      +                          f)) {
  6011  01E7  0820               	movf	i1sprintf@f,w
  6012  01E8  0084               	movwf	4
  6013  01E9  120A  158A  2000  120A  118A  	fcall	stringdir
  6014  01EE  120A  158A  21AC  120A  118A  	fcall	i1_isdigit
  6015  01F3  1C03               	btfss	3,0
  6016  01F4  2A33               	goto	i1l2966
  6017                           
  6018                           ;/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt.c: 610:    width = 0;
  6019  01F5  1283               	bcf	3,5	;RP0=0, select bank0
  6020  01F6  1303               	bcf	3,6	;RP1=0, select bank0
  6021  01F7  01AE               	clrf	i1sprintf@width
  6022  01F8  01AF               	clrf	i1sprintf@width+1
  6023  01F9                     i1l2956:	
  6024                           
  6025                           ;/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt.c: 612:     width *= 10;
  6026  01F9  300A               	movlw	10
  6027  01FA  00F0               	movwf	i1___wmul@multiplier
  6028  01FB  3000               	movlw	0
  6029  01FC  00F1               	movwf	i1___wmul@multiplier+1
  6030  01FD  1283               	bcf	3,5	;RP0=0, select bank0
  6031  01FE  1303               	bcf	3,6	;RP1=0, select bank0
  6032  01FF  082F               	movf	i1sprintf@width+1,w
  6033  0200  00F3               	movwf	i1___wmul@multiplicand+1
  6034  0201  082E               	movf	i1sprintf@width,w
  6035  0202  00F2               	movwf	i1___wmul@multiplicand
  6036  0203  120A  158A  223B  120A  118A  	fcall	i1___wmul
  6037  0208  0871               	movf	?i1___wmul+1,w
  6038  0209  1283               	bcf	3,5	;RP0=0, select bank0
  6039  020A  1303               	bcf	3,6	;RP1=0, select bank0
  6040  020B  00AF               	movwf	i1sprintf@width+1
  6041  020C  0870               	movf	?i1___wmul,w
  6042  020D  00AE               	movwf	i1sprintf@width
  6043                           
  6044                           ;/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt.c: 613:        width += *f++ - '
      +                          0';
  6045  020E  0820               	movf	i1sprintf@f,w
  6046  020F  0084               	movwf	4
  6047  0210  120A  158A  2000  120A  118A  	fcall	stringdir
  6048  0215  3ED0               	addlw	208
  6049  0216  00A5               	movwf	??i1_sprintf
  6050  0217  30FF               	movlw	255
  6051  0218  1803               	skipnc
  6052  0219  3000               	movlw	0
  6053  021A  00A6               	movwf	??i1_sprintf+1
  6054  021B  0825               	movf	??i1_sprintf,w
  6055  021C  07AE               	addwf	i1sprintf@width,f
  6056  021D  1803               	skipnc
  6057  021E  0AAF               	incf	i1sprintf@width+1,f
  6058  021F  0826               	movf	??i1_sprintf+1,w
  6059  0220  07AF               	addwf	i1sprintf@width+1,f
  6060  0221  3001               	movlw	1
  6061  0222  00A5               	movwf	??i1_sprintf
  6062  0223  0825               	movf	??i1_sprintf,w
  6063  0224  07A0               	addwf	i1sprintf@f,f
  6064                           
  6065                           ;/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt.c: 614:    } while(isdigit((unsi
      +                          gned)*f));
  6066  0225  0820               	movf	i1sprintf@f,w
  6067  0226  0084               	movwf	4
  6068  0227  120A  158A  2000  120A  118A  	fcall	stringdir
  6069  022C  120A  158A  21AC  120A  118A  	fcall	i1_isdigit
  6070  0231  1803               	btfsc	3,0
  6071  0232  29F9               	goto	i1l2956
  6072  0233                     i1l2966:	
  6073  0233  3001               	movlw	1
  6074  0234  1283               	bcf	3,5	;RP0=0, select bank0
  6075  0235  1303               	bcf	3,6	;RP1=0, select bank0
  6076  0236  07A0               	addwf	i1sprintf@f,f
  6077  0237  30FF               	movlw	-1
  6078  0238  0720               	addwf	i1sprintf@f,w
  6079  0239  0084               	movwf	4
  6080  023A  120A  158A  2000  120A  118A  	fcall	stringdir
  6081  023F  00B0               	movwf	i1sprintf@c
  6082  0240  00A5               	movwf	??i1_sprintf
  6083  0241  01A6               	clrf	??i1_sprintf+1
  6084                           
  6085                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6086                           ; Switch size 1, requested type "simple"
  6087                           ; Number of cases is 1, Range of values is 0 to 0
  6088                           ; switch strategies available:
  6089                           ; Name         Instructions Cycles
  6090                           ; simple_byte            4     3 (average)
  6091                           ; direct_byte           11     8 (fixed)
  6092                           ; jumptable            260     6 (fixed)
  6093                           ;	Chosen strategy is simple_byte
  6094  0242  0826               	movf	??i1_sprintf+1,w
  6095  0243  3A00               	xorlw	0	; case 0
  6096  0244  1903               	skipnz
  6097  0245  2A47               	goto	i1l4030
  6098  0246  29C4               	goto	i1l3024
  6099  0247                     i1l4030:	
  6100                           
  6101                           ; Switch size 1, requested type "simple"
  6102                           ; Number of cases is 3, Range of values is 0 to 105
  6103                           ; switch strategies available:
  6104                           ; Name         Instructions Cycles
  6105                           ; simple_byte           10     6 (average)
  6106                           ; jumptable            260     6 (fixed)
  6107                           ;	Chosen strategy is simple_byte
  6108  0247  0825               	movf	??i1_sprintf,w
  6109  0248  3A00               	xorlw	0	; case 0
  6110  0249  1903               	skipnz
  6111  024A  2B20               	goto	i1l3026
  6112  024B  3A64               	xorlw	100	; case 100
  6113  024C  1903               	skipnz
  6114  024D  2A52               	goto	i1l2968
  6115  024E  3A0D               	xorlw	13	; case 105
  6116  024F  1903               	skipnz
  6117  0250  2A52               	goto	i1l2968
  6118  0251  29C4               	goto	i1l3024
  6119  0252                     i1l2968:	
  6120                           
  6121                           ;/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt.c: 1272:   {;/opt/microchip/xc8/
      +                          v2.05/pic/sources/c90/common/doprnt.c: 1278:     val = (int)(*(int *)__va_arg((*(int **)
      +                          ap), (int)0));
  6122  0252  0828               	movf	i1sprintf@ap,w
  6123  0253  0084               	movwf	4
  6124  0254  1383               	bcf	3,7	;select IRP bank0
  6125  0255  0800               	movf	0,w
  6126  0256  00AB               	movwf	i1sprintf@val
  6127  0257  0A84               	incf	4,f
  6128  0258  0800               	movf	0,w
  6129  0259  00AC               	movwf	i1sprintf@val+1
  6130  025A  3002               	movlw	2
  6131  025B  00A5               	movwf	??i1_sprintf
  6132  025C  0825               	movf	??i1_sprintf,w
  6133  025D  07A8               	addwf	i1sprintf@ap,f
  6134                           
  6135                           ;/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt.c: 1280:    if((int)val < 0) {
  6136  025E  1FAC               	btfss	i1sprintf@val+1,7
  6137  025F  2A69               	goto	i1l2978
  6138                           
  6139                           ;/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt.c: 1281:     flag |= 0x03;
  6140  0260  3003               	movlw	3
  6141  0261  00A5               	movwf	??i1_sprintf
  6142  0262  0825               	movf	??i1_sprintf,w
  6143  0263  04AA               	iorwf	i1sprintf@flag,f
  6144                           
  6145                           ;/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt.c: 1282:     val = -val;
  6146  0264  09AB               	comf	i1sprintf@val,f
  6147  0265  09AC               	comf	i1sprintf@val+1,f
  6148  0266  0AAB               	incf	i1sprintf@val,f
  6149  0267  1903               	skipnz
  6150  0268  0AAC               	incf	i1sprintf@val+1,f
  6151  0269                     i1l2978:	
  6152                           
  6153                           ;/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt.c: 1285:   };/opt/microchip/xc8/
      +                          v2.05/pic/sources/c90/common/doprnt.c: 1324:    for(c = 1 ; c != sizeof dpowers/sizeof d
      +                          powers[0] ; c++)
  6154  0269  01B0               	clrf	i1sprintf@c
  6155  026A  0AB0               	incf	i1sprintf@c,f
  6156  026B                     i1l2984:	
  6157                           
  6158                           ;/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt.c: 1325:     if(val < dpowers[c]
      +                          )
  6159  026B  0830               	movf	i1sprintf@c,w
  6160  026C  00A5               	movwf	??i1_sprintf
  6161  026D  0725               	addwf	??i1_sprintf,w
  6162  026E  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  6163  026F  0084               	movwf	4
  6164  0270  120A  158A  2000  120A  118A  	fcall	stringdir
  6165  0275  00A6               	movwf	??i1_sprintf+1
  6166  0276  120A  158A  2000  120A  118A  	fcall	stringdir
  6167  027B  00A7               	movwf	??i1_sprintf+2
  6168  027C  0827               	movf	??i1_sprintf+2,w
  6169  027D  022C               	subwf	i1sprintf@val+1,w
  6170  027E  1D03               	skipz
  6171  027F  2A82               	goto	u229_25
  6172  0280  0826               	movf	??i1_sprintf+1,w
  6173  0281  022B               	subwf	i1sprintf@val,w
  6174  0282                     u229_25:	
  6175  0282  1C03               	btfss	3,0
  6176  0283  2A8C               	goto	i1l2990
  6177  0284  3001               	movlw	1
  6178  0285  00A5               	movwf	??i1_sprintf
  6179  0286  0825               	movf	??i1_sprintf,w
  6180  0287  07B0               	addwf	i1sprintf@c,f
  6181  0288  3005               	movlw	5
  6182  0289  0630               	xorwf	i1sprintf@c,w
  6183  028A  1D03               	btfss	3,2
  6184  028B  2A6B               	goto	i1l2984
  6185  028C                     i1l2990:	
  6186                           
  6187                           ;/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt.c: 1364:   if(width && flag & 0x
      +                          03)
  6188  028C  082E               	movf	i1sprintf@width,w
  6189  028D  042F               	iorwf	i1sprintf@width+1,w
  6190  028E  1903               	btfsc	3,2
  6191  028F  2A9A               	goto	i1l650
  6192  0290  082A               	movf	i1sprintf@flag,w
  6193  0291  3903               	andlw	3
  6194  0292  1903               	btfsc	3,2
  6195  0293  2A9A               	goto	i1l650
  6196                           
  6197                           ;/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt.c: 1365:    width--;
  6198  0294  30FF               	movlw	255
  6199  0295  07AE               	addwf	i1sprintf@width,f
  6200  0296  1803               	skipnc
  6201  0297  0AAF               	incf	i1sprintf@width+1,f
  6202  0298  30FF               	movlw	255
  6203  0299  07AF               	addwf	i1sprintf@width+1,f
  6204  029A                     i1l650:	
  6205                           
  6206                           ;/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt.c: 1400:   if(width > c)
  6207  029A  082F               	movf	i1sprintf@width+1,w
  6208  029B  3A80               	xorlw	128
  6209  029C  3C80               	sublw	128
  6210  029D  1D03               	skipz
  6211  029E  2AA1               	goto	u233_25
  6212  029F  082E               	movf	i1sprintf@width,w
  6213  02A0  0230               	subwf	i1sprintf@c,w
  6214  02A1                     u233_25:	
  6215  02A1  1803               	skipnc
  6216  02A2  2AAF               	goto	i1l2998
  6217                           
  6218                           ;/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt.c: 1401:    width -= c;
  6219  02A3  1283               	bcf	3,5	;RP0=0, select bank0
  6220  02A4  1303               	bcf	3,6	;RP1=0, select bank0
  6221  02A5  0830               	movf	i1sprintf@c,w
  6222  02A6  00A5               	movwf	??i1_sprintf
  6223  02A7  01A6               	clrf	??i1_sprintf+1
  6224  02A8  0825               	movf	??i1_sprintf,w
  6225  02A9  02AE               	subwf	i1sprintf@width,f
  6226  02AA  0826               	movf	??i1_sprintf+1,w
  6227  02AB  1C03               	skipc
  6228  02AC  03AF               	decf	i1sprintf@width+1,f
  6229  02AD  02AF               	subwf	i1sprintf@width+1,f
  6230  02AE  2AB3               	goto	i1l3000
  6231  02AF                     i1l2998:	
  6232                           
  6233                           ;/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt.c: 1403:    width = 0;
  6234  02AF  1283               	bcf	3,5	;RP0=0, select bank0
  6235  02B0  1303               	bcf	3,6	;RP1=0, select bank0
  6236  02B1  01AE               	clrf	i1sprintf@width
  6237  02B2  01AF               	clrf	i1sprintf@width+1
  6238  02B3                     i1l3000:	
  6239                           
  6240                           ;/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt.c: 1441:   {;/opt/microchip/xc8/
      +                          v2.05/pic/sources/c90/common/doprnt.c: 1443:    if(width
  6241  02B3  082E               	movf	i1sprintf@width,w
  6242  02B4  042F               	iorwf	i1sprintf@width+1,w
  6243  02B5  1903               	btfsc	3,2
  6244  02B6  2ACC               	goto	i1l3008
  6245  02B7                     i1l3002:	
  6246                           
  6247                           ;/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt.c: 1449:      ((*sp++ = (' ')));
  6248  02B7  3020               	movlw	32
  6249  02B8  00A5               	movwf	??i1_sprintf
  6250  02B9  082D               	movf	i1sprintf@sp,w
  6251  02BA  0084               	movwf	4
  6252  02BB  0825               	movf	??i1_sprintf,w
  6253  02BC  1383               	bcf	3,7	;select IRP bank0
  6254  02BD  0080               	movwf	0
  6255  02BE  3001               	movlw	1
  6256  02BF  00A5               	movwf	??i1_sprintf
  6257  02C0  0825               	movf	??i1_sprintf,w
  6258  02C1  07AD               	addwf	i1sprintf@sp,f
  6259  02C2  30FF               	movlw	255
  6260  02C3  07AE               	addwf	i1sprintf@width,f
  6261  02C4  1803               	skipnc
  6262  02C5  0AAF               	incf	i1sprintf@width+1,f
  6263  02C6  30FF               	movlw	255
  6264  02C7  07AF               	addwf	i1sprintf@width+1,f
  6265  02C8  082E               	movf	i1sprintf@width,w
  6266  02C9  042F               	iorwf	i1sprintf@width+1,w
  6267  02CA  1D03               	btfss	3,2
  6268  02CB  2AB7               	goto	i1l3002
  6269  02CC                     i1l3008:	
  6270                           
  6271                           ;/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt.c: 1457:    if(flag & 0x03)
  6272  02CC  082A               	movf	i1sprintf@flag,w
  6273  02CD  3903               	andlw	3
  6274  02CE  1903               	btfsc	3,2
  6275  02CF  2ADB               	goto	i1l3014
  6276                           
  6277                           ;/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt.c: 1458:     ((*sp++ = ('-')));
  6278  02D0  302D               	movlw	45
  6279  02D1  00A5               	movwf	??i1_sprintf
  6280  02D2  082D               	movf	i1sprintf@sp,w
  6281  02D3  0084               	movwf	4
  6282  02D4  0825               	movf	??i1_sprintf,w
  6283  02D5  1383               	bcf	3,7	;select IRP bank0
  6284  02D6  0080               	movwf	0
  6285  02D7  3001               	movlw	1
  6286  02D8  00A5               	movwf	??i1_sprintf
  6287  02D9  0825               	movf	??i1_sprintf,w
  6288  02DA  07AD               	addwf	i1sprintf@sp,f
  6289  02DB                     i1l3014:	
  6290                           
  6291                           ;/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt.c: 1488:   };/opt/microchip/xc8/
      +                          v2.05/pic/sources/c90/common/doprnt.c: 1491:   prec = c;
  6292  02DB  0830               	movf	i1sprintf@c,w
  6293  02DC  00A5               	movwf	??i1_sprintf
  6294  02DD  0825               	movf	??i1_sprintf,w
  6295  02DE  00A9               	movwf	i1sprintf@prec
  6296  02DF                     i1l3022:	
  6297                           ;/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt.c: 1493:   while(prec--) {
  6298                           
  6299                           
  6300                           ;/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt.c: 1493:   while(prec--) {
  6301  02DF  30FF               	movlw	255
  6302  02E0  00A5               	movwf	??i1_sprintf
  6303  02E1  0825               	movf	??i1_sprintf,w
  6304  02E2  07A9               	addwf	i1sprintf@prec,f
  6305  02E3  0A29               	incf	i1sprintf@prec,w
  6306  02E4  1903               	btfsc	3,2
  6307  02E5  29C4               	goto	i1l3024
  6308                           
  6309                           ;/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt.c: 1497:    {;/opt/microchip/xc8
      +                          /v2.05/pic/sources/c90/common/doprnt.c: 1508:     c = (val / dpowers[prec]) % 10 + '0';
  6310  02E6  300A               	movlw	10
  6311  02E7  00F8               	movwf	i1___lwmod@divisor
  6312  02E8  3000               	movlw	0
  6313  02E9  00F9               	movwf	i1___lwmod@divisor+1
  6314  02EA  0829               	movf	i1sprintf@prec,w
  6315  02EB  00A5               	movwf	??i1_sprintf
  6316  02EC  0725               	addwf	??i1_sprintf,w
  6317  02ED  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  6318  02EE  0084               	movwf	4
  6319  02EF  120A  158A  2000  120A  118A  	fcall	stringdir
  6320  02F4  00F0               	movwf	i1___lwdiv@divisor
  6321  02F5  120A  158A  2000  120A  118A  	fcall	stringdir
  6322  02FA  00F1               	movwf	i1___lwdiv@divisor+1
  6323  02FB  082C               	movf	i1sprintf@val+1,w
  6324  02FC  00F3               	movwf	i1___lwdiv@dividend+1
  6325  02FD  082B               	movf	i1sprintf@val,w
  6326  02FE  00F2               	movwf	i1___lwdiv@dividend
  6327  02FF  120A  158A  23AC  120A  118A  	fcall	i1___lwdiv
  6328  0304  0871               	movf	?i1___lwdiv+1,w
  6329  0305  00FB               	movwf	i1___lwmod@dividend+1
  6330  0306  0870               	movf	?i1___lwdiv,w
  6331  0307  00FA               	movwf	i1___lwmod@dividend
  6332  0308  120A  158A  2344  120A  118A  	fcall	i1___lwmod
  6333  030D  0878               	movf	?i1___lwmod,w
  6334  030E  3E30               	addlw	48
  6335  030F  1283               	bcf	3,5	;RP0=0, select bank0
  6336  0310  1303               	bcf	3,6	;RP1=0, select bank0
  6337  0311  00A6               	movwf	??i1_sprintf+1
  6338  0312  0826               	movf	??i1_sprintf+1,w
  6339  0313  00B0               	movwf	i1sprintf@c
  6340                           
  6341                           ;/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt.c: 1542:    };/opt/microchip/xc8
      +                          /v2.05/pic/sources/c90/common/doprnt.c: 1543:    ((*sp++ = (c)));
  6342  0314  0830               	movf	i1sprintf@c,w
  6343  0315  00A5               	movwf	??i1_sprintf
  6344  0316  082D               	movf	i1sprintf@sp,w
  6345  0317  0084               	movwf	4
  6346  0318  0825               	movf	??i1_sprintf,w
  6347  0319  1383               	bcf	3,7	;select IRP bank0
  6348  031A  0080               	movwf	0
  6349  031B  3001               	movlw	1
  6350  031C  00A5               	movwf	??i1_sprintf
  6351  031D  0825               	movf	??i1_sprintf,w
  6352  031E  07AD               	addwf	i1sprintf@sp,f
  6353  031F  2ADF               	goto	i1l3022
  6354  0320                     i1l3026:	
  6355                           
  6356                           ;/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt.c: 1557:  *sp = 0;
  6357  0320  082D               	movf	i1sprintf@sp,w
  6358  0321  0084               	movwf	4
  6359  0322  1383               	bcf	3,7	;select IRP bank0
  6360  0323  0180               	clrf	0
  6361  0324  0008               	return
  6362  0325                     __end_ofi1_sprintf:	
  6363                           
  6364                           	psect	text31
  6365  09AC                     __ptext31:	
  6366 ;; *************** function i1_isdigit *****************
  6367 ;; Defined at:
  6368 ;;		line 8 in file "/opt/microchip/xc8/v2.05/pic/sources/c90/common/isdigit.c"
  6369 ;; Parameters:    Size  Location     Type
  6370 ;;  c               1    wreg     unsigned char 
  6371 ;; Auto vars:     Size  Location     Type
  6372 ;;  c               1    1[COMMON] unsigned char 
  6373 ;; Return value:  Size  Location     Type
  6374 ;;		None               void
  6375 ;; Registers used:
  6376 ;;		wreg, status,2, status,0
  6377 ;; Tracked objects:
  6378 ;;		On entry : 0/0
  6379 ;;		On exit  : 0/0
  6380 ;;		Unchanged: 0/0
  6381 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6382 ;;      Params:         0       0       0       0       0
  6383 ;;      Locals:         2       0       0       0       0
  6384 ;;      Temps:          0       0       0       0       0
  6385 ;;      Totals:         2       0       0       0       0
  6386 ;;Total ram usage:        2 bytes
  6387 ;; Hardware stack levels used:    1
  6388 ;; This function calls:
  6389 ;;		Nothing
  6390 ;; This function is called by:
  6391 ;;		i1_sprintf
  6392 ;; This function uses a non-reentrant model
  6393 ;;
  6394                           
  6395                           
  6396                           ;psect for function i1_isdigit
  6397  09AC                     i1_isdigit:	
  6398                           
  6399                           ;incstack = 0
  6400 ;; hardware stack exceeded
  6401                           ; Regs used in i1_isdigit: [wreg+status,2+status,0]
  6402                           ;i1isdigit@c stored from wreg
  6403  09AC  00F1               	movwf	i1isdigit@c
  6404  09AD  01F0               	clrf	i1_isdigit$1093
  6405  09AE  303A               	movlw	58
  6406  09AF  0271               	subwf	i1isdigit@c,w
  6407  09B0  1803               	skipnc
  6408  09B1  29B8               	goto	i1l2730
  6409  09B2  3030               	movlw	48
  6410  09B3  0271               	subwf	i1isdigit@c,w
  6411  09B4  1C03               	skipc
  6412  09B5  29B8               	goto	i1l2730
  6413  09B6  01F0               	clrf	i1_isdigit$1093
  6414  09B7  0AF0               	incf	i1_isdigit$1093,f
  6415  09B8                     i1l2730:	
  6416  09B8  0C70               	rrf	i1_isdigit$1093,w
  6417  09B9  0008               	return
  6418  09BA                     __end_ofi1_isdigit:	
  6419                           
  6420                           	psect	text32
  6421  0A3B                     __ptext32:	
  6422 ;; *************** function i1___wmul *****************
  6423 ;; Defined at:
  6424 ;;		line 15 in file "/opt/microchip/xc8/v2.05/pic/sources/c90/common/Umul16.c"
  6425 ;; Parameters:    Size  Location     Type
  6426 ;;  multiplier      2    0[COMMON] unsigned int 
  6427 ;;  multiplicand    2    2[COMMON] unsigned int 
  6428 ;; Auto vars:     Size  Location     Type
  6429 ;;  __wmul          2    4[COMMON] unsigned int 
  6430 ;; Return value:  Size  Location     Type
  6431 ;;                  2    0[COMMON] unsigned int 
  6432 ;; Registers used:
  6433 ;;		wreg, status,2, status,0
  6434 ;; Tracked objects:
  6435 ;;		On entry : 0/0
  6436 ;;		On exit  : 0/0
  6437 ;;		Unchanged: 0/0
  6438 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6439 ;;      Params:         4       0       0       0       0
  6440 ;;      Locals:         2       0       0       0       0
  6441 ;;      Temps:          0       0       0       0       0
  6442 ;;      Totals:         6       0       0       0       0
  6443 ;;Total ram usage:        6 bytes
  6444 ;; Hardware stack levels used:    1
  6445 ;; This function calls:
  6446 ;;		Nothing
  6447 ;; This function is called by:
  6448 ;;		i1_sprintf
  6449 ;; This function uses a non-reentrant model
  6450 ;;
  6451                           
  6452                           
  6453                           ;psect for function i1___wmul
  6454  0A3B                     i1___wmul:	
  6455                           
  6456                           ;incstack = 0
  6457 ;; hardware stack exceeded
  6458                           ; Regs used in i1___wmul: [wreg+status,2+status,0]
  6459  0A3B  01F4               	clrf	i1___wmul@product
  6460  0A3C  01F5               	clrf	i1___wmul@product+1
  6461  0A3D                     i1l2662:	
  6462  0A3D  1C70               	btfss	i1___wmul@multiplier,0
  6463  0A3E  2A45               	goto	i1l665
  6464  0A3F  0872               	movf	i1___wmul@multiplicand,w
  6465  0A40  07F4               	addwf	i1___wmul@product,f
  6466  0A41  1803               	skipnc
  6467  0A42  0AF5               	incf	i1___wmul@product+1,f
  6468  0A43  0873               	movf	i1___wmul@multiplicand+1,w
  6469  0A44  07F5               	addwf	i1___wmul@product+1,f
  6470  0A45                     i1l665:	
  6471  0A45  3001               	movlw	1
  6472  0A46                     u182_25:	
  6473  0A46  1003               	clrc
  6474  0A47  0DF2               	rlf	i1___wmul@multiplicand,f
  6475  0A48  0DF3               	rlf	i1___wmul@multiplicand+1,f
  6476  0A49  3EFF               	addlw	-1
  6477  0A4A  1D03               	skipz
  6478  0A4B  2A46               	goto	u182_25
  6479  0A4C  3001               	movlw	1
  6480  0A4D                     u183_25:	
  6481  0A4D  1003               	clrc
  6482  0A4E  0CF1               	rrf	i1___wmul@multiplier+1,f
  6483  0A4F  0CF0               	rrf	i1___wmul@multiplier,f
  6484  0A50  3EFF               	addlw	-1
  6485  0A51  1D03               	skipz
  6486  0A52  2A4D               	goto	u183_25
  6487  0A53  0870               	movf	i1___wmul@multiplier,w
  6488  0A54  0471               	iorwf	i1___wmul@multiplier+1,w
  6489  0A55  1D03               	btfss	3,2
  6490  0A56  2A3D               	goto	i1l2662
  6491  0A57  0875               	movf	i1___wmul@product+1,w
  6492  0A58  00F1               	movwf	?i1___wmul+1
  6493  0A59  0874               	movf	i1___wmul@product,w
  6494  0A5A  00F0               	movwf	?i1___wmul
  6495  0A5B  0008               	return
  6496  0A5C                     __end_ofi1___wmul:	
  6497                           
  6498                           	psect	text33
  6499  0B44                     __ptext33:	
  6500 ;; *************** function i1___lwmod *****************
  6501 ;; Defined at:
  6502 ;;		line 5 in file "/opt/microchip/xc8/v2.05/pic/sources/c90/common/lwmod.c"
  6503 ;; Parameters:    Size  Location     Type
  6504 ;;  divisor         2    8[COMMON] unsigned int 
  6505 ;;  dividend        2   10[COMMON] unsigned int 
  6506 ;; Auto vars:     Size  Location     Type
  6507 ;;  __lwmod         1   13[COMMON] unsigned char 
  6508 ;; Return value:  Size  Location     Type
  6509 ;;                  2    8[COMMON] unsigned int 
  6510 ;; Registers used:
  6511 ;;		wreg, status,2, status,0
  6512 ;; Tracked objects:
  6513 ;;		On entry : 0/0
  6514 ;;		On exit  : 0/0
  6515 ;;		Unchanged: 0/0
  6516 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6517 ;;      Params:         4       0       0       0       0
  6518 ;;      Locals:         1       0       0       0       0
  6519 ;;      Temps:          1       0       0       0       0
  6520 ;;      Totals:         6       0       0       0       0
  6521 ;;Total ram usage:        6 bytes
  6522 ;; Hardware stack levels used:    1
  6523 ;; This function calls:
  6524 ;;		Nothing
  6525 ;; This function is called by:
  6526 ;;		_updateLCD
  6527 ;;		i1_sprintf
  6528 ;; This function uses a non-reentrant model
  6529 ;;
  6530                           
  6531                           
  6532                           ;psect for function i1___lwmod
  6533  0B44                     i1___lwmod:	
  6534                           
  6535                           ;incstack = 0
  6536 ;; hardware stack exceeded
  6537                           ; Regs used in i1___lwmod: [wreg+status,2+status,0]
  6538  0B44  0878               	movf	i1___lwmod@divisor,w
  6539  0B45  0479               	iorwf	i1___lwmod@divisor+1,w
  6540  0B46  1903               	btfsc	3,2
  6541  0B47  2B71               	goto	i1l2718
  6542  0B48  01FD               	clrf	i1___lwmod@counter
  6543  0B49  0AFD               	incf	i1___lwmod@counter,f
  6544  0B4A                     i1l2708:	
  6545  0B4A  1BF9               	btfsc	i1___lwmod@divisor+1,7
  6546  0B4B  2B58               	goto	i1l2710
  6547  0B4C  3001               	movlw	1
  6548  0B4D                     u193_25:	
  6549  0B4D  1003               	clrc
  6550  0B4E  0DF8               	rlf	i1___lwmod@divisor,f
  6551  0B4F  0DF9               	rlf	i1___lwmod@divisor+1,f
  6552  0B50  3EFF               	addlw	-1
  6553  0B51  1D03               	skipz
  6554  0B52  2B4D               	goto	u193_25
  6555  0B53  3001               	movlw	1
  6556  0B54  00FC               	movwf	??i1___lwmod
  6557  0B55  087C               	movf	??i1___lwmod,w
  6558  0B56  07FD               	addwf	i1___lwmod@counter,f
  6559  0B57  2B4A               	goto	i1l2708
  6560  0B58                     i1l2710:	
  6561  0B58  0879               	movf	i1___lwmod@divisor+1,w
  6562  0B59  027B               	subwf	i1___lwmod@dividend+1,w
  6563  0B5A  1D03               	skipz
  6564  0B5B  2B5E               	goto	u195_25
  6565  0B5C  0878               	movf	i1___lwmod@divisor,w
  6566  0B5D  027A               	subwf	i1___lwmod@dividend,w
  6567  0B5E                     u195_25:	
  6568  0B5E  1C03               	skipc
  6569  0B5F  2B66               	goto	i1l2714
  6570  0B60  0878               	movf	i1___lwmod@divisor,w
  6571  0B61  02FA               	subwf	i1___lwmod@dividend,f
  6572  0B62  0879               	movf	i1___lwmod@divisor+1,w
  6573  0B63  1C03               	skipc
  6574  0B64  03FB               	decf	i1___lwmod@dividend+1,f
  6575  0B65  02FB               	subwf	i1___lwmod@dividend+1,f
  6576  0B66                     i1l2714:	
  6577  0B66  3001               	movlw	1
  6578  0B67                     u196_25:	
  6579  0B67  1003               	clrc
  6580  0B68  0CF9               	rrf	i1___lwmod@divisor+1,f
  6581  0B69  0CF8               	rrf	i1___lwmod@divisor,f
  6582  0B6A  3EFF               	addlw	-1
  6583  0B6B  1D03               	skipz
  6584  0B6C  2B67               	goto	u196_25
  6585  0B6D  3001               	movlw	1
  6586  0B6E  02FD               	subwf	i1___lwmod@counter,f
  6587  0B6F  1D03               	btfss	3,2
  6588  0B70  2B58               	goto	i1l2710
  6589  0B71                     i1l2718:	
  6590  0B71  087B               	movf	i1___lwmod@dividend+1,w
  6591  0B72  00F9               	movwf	?i1___lwmod+1
  6592  0B73  087A               	movf	i1___lwmod@dividend,w
  6593  0B74  00F8               	movwf	?i1___lwmod
  6594  0B75  0008               	return
  6595  0B76                     __end_ofi1___lwmod:	
  6596                           
  6597                           	psect	text34
  6598  0BAC                     __ptext34:	
  6599 ;; *************** function i1___lwdiv *****************
  6600 ;; Defined at:
  6601 ;;		line 5 in file "/opt/microchip/xc8/v2.05/pic/sources/c90/common/lwdiv.c"
  6602 ;; Parameters:    Size  Location     Type
  6603 ;;  divisor         2    0[COMMON] unsigned int 
  6604 ;;  dividend        2    2[COMMON] unsigned int 
  6605 ;; Auto vars:     Size  Location     Type
  6606 ;;  __lwdiv         2    5[COMMON] unsigned int 
  6607 ;;  __lwdiv         1    7[COMMON] unsigned char 
  6608 ;; Return value:  Size  Location     Type
  6609 ;;                  2    0[COMMON] unsigned int 
  6610 ;; Registers used:
  6611 ;;		wreg, status,2, status,0
  6612 ;; Tracked objects:
  6613 ;;		On entry : 0/0
  6614 ;;		On exit  : 0/0
  6615 ;;		Unchanged: 0/0
  6616 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6617 ;;      Params:         4       0       0       0       0
  6618 ;;      Locals:         3       0       0       0       0
  6619 ;;      Temps:          1       0       0       0       0
  6620 ;;      Totals:         8       0       0       0       0
  6621 ;;Total ram usage:        8 bytes
  6622 ;; Hardware stack levels used:    1
  6623 ;; This function calls:
  6624 ;;		Nothing
  6625 ;; This function is called by:
  6626 ;;		_updateLCD
  6627 ;;		i1_sprintf
  6628 ;; This function uses a non-reentrant model
  6629 ;;
  6630                           
  6631                           
  6632                           ;psect for function i1___lwdiv
  6633  0BAC                     i1___lwdiv:	
  6634                           
  6635                           ;incstack = 0
  6636 ;; hardware stack exceeded
  6637                           ; Regs used in i1___lwdiv: [wreg+status,2+status,0]
  6638  0BAC  01F5               	clrf	i1___lwdiv@quotient
  6639  0BAD  01F6               	clrf	i1___lwdiv@quotient+1
  6640  0BAE  0870               	movf	i1___lwdiv@divisor,w
  6641  0BAF  0471               	iorwf	i1___lwdiv@divisor+1,w
  6642  0BB0  1903               	btfsc	3,2
  6643  0BB1  2BE3               	goto	i1l2696
  6644  0BB2  01F7               	clrf	i1___lwdiv@counter
  6645  0BB3  0AF7               	incf	i1___lwdiv@counter,f
  6646  0BB4                     i1l2684:	
  6647  0BB4  1BF1               	btfsc	i1___lwdiv@divisor+1,7
  6648  0BB5  2BC2               	goto	i1l2686
  6649  0BB6  3001               	movlw	1
  6650  0BB7                     u186_25:	
  6651  0BB7  1003               	clrc
  6652  0BB8  0DF0               	rlf	i1___lwdiv@divisor,f
  6653  0BB9  0DF1               	rlf	i1___lwdiv@divisor+1,f
  6654  0BBA  3EFF               	addlw	-1
  6655  0BBB  1D03               	skipz
  6656  0BBC  2BB7               	goto	u186_25
  6657  0BBD  3001               	movlw	1
  6658  0BBE  00F4               	movwf	??i1___lwdiv
  6659  0BBF  0874               	movf	??i1___lwdiv,w
  6660  0BC0  07F7               	addwf	i1___lwdiv@counter,f
  6661  0BC1  2BB4               	goto	i1l2684
  6662  0BC2                     i1l2686:	
  6663  0BC2  3001               	movlw	1
  6664  0BC3                     u188_25:	
  6665  0BC3  1003               	clrc
  6666  0BC4  0DF5               	rlf	i1___lwdiv@quotient,f
  6667  0BC5  0DF6               	rlf	i1___lwdiv@quotient+1,f
  6668  0BC6  3EFF               	addlw	-1
  6669  0BC7  1D03               	skipz
  6670  0BC8  2BC3               	goto	u188_25
  6671  0BC9  0871               	movf	i1___lwdiv@divisor+1,w
  6672  0BCA  0273               	subwf	i1___lwdiv@dividend+1,w
  6673  0BCB  1D03               	skipz
  6674  0BCC  2BCF               	goto	u189_25
  6675  0BCD  0870               	movf	i1___lwdiv@divisor,w
  6676  0BCE  0272               	subwf	i1___lwdiv@dividend,w
  6677  0BCF                     u189_25:	
  6678  0BCF  1C03               	skipc
  6679  0BD0  2BD8               	goto	i1l2692
  6680  0BD1  0870               	movf	i1___lwdiv@divisor,w
  6681  0BD2  02F2               	subwf	i1___lwdiv@dividend,f
  6682  0BD3  0871               	movf	i1___lwdiv@divisor+1,w
  6683  0BD4  1C03               	skipc
  6684  0BD5  03F3               	decf	i1___lwdiv@dividend+1,f
  6685  0BD6  02F3               	subwf	i1___lwdiv@dividend+1,f
  6686  0BD7  1475               	bsf	i1___lwdiv@quotient,0
  6687  0BD8                     i1l2692:	
  6688  0BD8  3001               	movlw	1
  6689  0BD9                     u190_25:	
  6690  0BD9  1003               	clrc
  6691  0BDA  0CF1               	rrf	i1___lwdiv@divisor+1,f
  6692  0BDB  0CF0               	rrf	i1___lwdiv@divisor,f
  6693  0BDC  3EFF               	addlw	-1
  6694  0BDD  1D03               	skipz
  6695  0BDE  2BD9               	goto	u190_25
  6696  0BDF  3001               	movlw	1
  6697  0BE0  02F7               	subwf	i1___lwdiv@counter,f
  6698  0BE1  1D03               	btfss	3,2
  6699  0BE2  2BC2               	goto	i1l2686
  6700  0BE3                     i1l2696:	
  6701  0BE3  0876               	movf	i1___lwdiv@quotient+1,w
  6702  0BE4  00F1               	movwf	?i1___lwdiv+1
  6703  0BE5  0875               	movf	i1___lwdiv@quotient,w
  6704  0BE6  00F0               	movwf	?i1___lwdiv
  6705  0BE7  0008               	return
  6706  0BE8                     __end_ofi1___lwdiv:	
  6707                           
  6708                           	psect	text35
  6709  0A01                     __ptext35:	
  6710 ;; *************** function i1_putsXLCD *****************
  6711 ;; Defined at:
  6712 ;;		line 419 in file "lcd_pic16.c"
  6713 ;; Parameters:    Size  Location     Type
  6714 ;;  buffer          1    wreg     PTR unsigned char 
  6715 ;;		 -> lineOne(17), lineTwo(17), 
  6716 ;; Auto vars:     Size  Location     Type
  6717 ;;  buffer          1    5[COMMON] PTR unsigned char 
  6718 ;;		 -> lineOne(17), lineTwo(17), 
  6719 ;; Return value:  Size  Location     Type
  6720 ;;                  1    wreg      void 
  6721 ;; Registers used:
  6722 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6723 ;; Tracked objects:
  6724 ;;		On entry : 0/0
  6725 ;;		On exit  : 0/0
  6726 ;;		Unchanged: 0/0
  6727 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6728 ;;      Params:         0       0       0       0       0
  6729 ;;      Locals:         1       0       0       0       0
  6730 ;;      Temps:          1       0       0       0       0
  6731 ;;      Totals:         2       0       0       0       0
  6732 ;;Total ram usage:        2 bytes
  6733 ;; Hardware stack levels used:    1
  6734 ;; Hardware stack levels required when called:    2
  6735 ;; This function calls:
  6736 ;;		i1_BusyXLCD
  6737 ;;		i1_WriteDataXLCD
  6738 ;; This function is called by:
  6739 ;;		_updateLCD
  6740 ;; This function uses a non-reentrant model
  6741 ;;
  6742                           
  6743                           
  6744                           ;psect for function i1_putsXLCD
  6745  0A01                     i1_putsXLCD:	
  6746                           
  6747                           ;incstack = 0
  6748 ;; hardware stack exceeded
  6749                           ; Regs used in i1_putsXLCD: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6750                           ;i1putsXLCD@buffer stored from wreg
  6751  0A01  00F5               	movwf	i1putsXLCD@buffer
  6752  0A02                     i1l2940:	
  6753                           ;lcd_pic16.c: 419: void putsXLCD(char *buffer);lcd_pic16.c: 420: {;lcd_pic16.c: 421:    
      +                               while(*buffer)
  6754                           
  6755                           
  6756                           ;lcd_pic16.c: 421:         while(*buffer)
  6757  0A02  0875               	movf	i1putsXLCD@buffer,w
  6758  0A03  0084               	movwf	4
  6759  0A04  1383               	bcf	3,7	;select IRP bank0
  6760  0A05  0800               	movf	0,w
  6761  0A06  1903               	btfsc	3,2
  6762  0A07  0008               	return
  6763  0A08                     i1l2934:	
  6764  0A08  120A  158A  2189  120A  158A  	fcall	i1_BusyXLCD
  6765  0A0D  3A00               	xorlw	0
  6766  0A0E  1D03               	skipz
  6767  0A0F  2A08               	goto	i1l2934
  6768                           
  6769                           ;lcd_pic16.c: 424:                 WriteDataXLCD(*buffer);
  6770  0A10  0875               	movf	i1putsXLCD@buffer,w
  6771  0A11  0084               	movwf	4
  6772  0A12  1383               	bcf	3,7	;select IRP bank0
  6773  0A13  0800               	movf	0,w
  6774  0A14  120A  158A  2470  120A  158A  	fcall	i1_WriteDataXLCD
  6775                           
  6776                           ;lcd_pic16.c: 425:                 buffer++;
  6777  0A19  3001               	movlw	1
  6778  0A1A  00F4               	movwf	??i1_putsXLCD
  6779  0A1B  0874               	movf	??i1_putsXLCD,w
  6780  0A1C  07F5               	addwf	i1putsXLCD@buffer,f
  6781  0A1D  2A02               	goto	i1l2940
  6782  0A1E                     __end_ofi1_putsXLCD:	
  6783                           
  6784                           	psect	text36
  6785  0C70                     __ptext36:	
  6786 ;; *************** function i1_WriteDataXLCD *****************
  6787 ;; Defined at:
  6788 ;;		line 110 in file "lcd_pic16.c"
  6789 ;; Parameters:    Size  Location     Type
  6790 ;;  data            1    wreg     unsigned char 
  6791 ;; Auto vars:     Size  Location     Type
  6792 ;;  data            1    3[COMMON] unsigned char 
  6793 ;; Return value:  Size  Location     Type
  6794 ;;                  1    wreg      void 
  6795 ;; Registers used:
  6796 ;;		wreg, status,2, status,0, pclath, cstack
  6797 ;; Tracked objects:
  6798 ;;		On entry : 0/0
  6799 ;;		On exit  : 0/0
  6800 ;;		Unchanged: 0/0
  6801 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6802 ;;      Params:         0       0       0       0       0
  6803 ;;      Locals:         1       0       0       0       0
  6804 ;;      Temps:          2       0       0       0       0
  6805 ;;      Totals:         3       0       0       0       0
  6806 ;;Total ram usage:        3 bytes
  6807 ;; Hardware stack levels used:    1
  6808 ;; Hardware stack levels required when called:    1
  6809 ;; This function calls:
  6810 ;;		i1_DelayFor18TCY
  6811 ;; This function is called by:
  6812 ;;		i1_putsXLCD
  6813 ;; This function uses a non-reentrant model
  6814 ;;
  6815                           
  6816                           
  6817                           ;psect for function i1_WriteDataXLCD
  6818  0C70                     i1_WriteDataXLCD:	
  6819                           
  6820                           ;incstack = 0
  6821 ;; hardware stack exceeded
  6822                           ; Regs used in i1_WriteDataXLCD: [wreg+status,2+status,0+pclath+cstack]
  6823                           ;i1WriteDataXLCD@data stored from wreg
  6824  0C70  00F3               	movwf	i1WriteDataXLCD@data
  6825                           
  6826                           ;lcd_pic16.c: 110: void WriteDataXLCD(char data);lcd_pic16.c: 111: {;lcd_pic16.c: 125:  
      +                                 TRISB &= 0x0f;
  6827  0C71  300F               	movlw	15
  6828  0C72  00F1               	movwf	??i1_WriteDataXLCD
  6829  0C73  0871               	movf	??i1_WriteDataXLCD,w
  6830  0C74  1683               	bsf	3,5	;RP0=1, select bank1
  6831  0C75  1303               	bcf	3,6	;RP1=0, select bank1
  6832  0C76  0586               	andwf	6,f	;volatile
  6833                           
  6834                           ;lcd_pic16.c: 126:         PORTB &= 0x0f;
  6835  0C77  300F               	movlw	15
  6836  0C78  00F1               	movwf	??i1_WriteDataXLCD
  6837  0C79  0871               	movf	??i1_WriteDataXLCD,w
  6838  0C7A  1283               	bcf	3,5	;RP0=0, select bank0
  6839  0C7B  1303               	bcf	3,6	;RP1=0, select bank0
  6840  0C7C  0586               	andwf	6,f	;volatile
  6841                           
  6842                           ;lcd_pic16.c: 127:         PORTB |= data&0xf0;
  6843  0C7D  0873               	movf	i1WriteDataXLCD@data,w
  6844  0C7E  39F0               	andlw	240
  6845  0C7F  00F1               	movwf	??i1_WriteDataXLCD
  6846  0C80  0871               	movf	??i1_WriteDataXLCD,w
  6847  0C81  0486               	iorwf	6,f	;volatile
  6848                           
  6849                           ;lcd_pic16.c: 133:         PORTBbits.RB1 = 1;
  6850  0C82  1486               	bsf	6,1	;volatile
  6851                           
  6852                           ;lcd_pic16.c: 134:         PORTBbits.RB2 = 0;
  6853  0C83  1106               	bcf	6,2	;volatile
  6854                           
  6855                           ;lcd_pic16.c: 135:         DelayFor18TCY();
  6856  0C84  120A  158A  2164  120A  158A  	fcall	i1_DelayFor18TCY
  6857                           
  6858                           ;lcd_pic16.c: 136:         PORTBbits.RB3 = 1;
  6859  0C89  1283               	bcf	3,5	;RP0=0, select bank0
  6860  0C8A  1303               	bcf	3,6	;RP1=0, select bank0
  6861  0C8B  1586               	bsf	6,3	;volatile
  6862                           
  6863                           ;lcd_pic16.c: 137:         DelayFor18TCY();
  6864  0C8C  120A  158A  2164  120A  158A  	fcall	i1_DelayFor18TCY
  6865                           
  6866                           ;lcd_pic16.c: 138:         PORTBbits.RB3 = 0;
  6867  0C91  1283               	bcf	3,5	;RP0=0, select bank0
  6868  0C92  1303               	bcf	3,6	;RP1=0, select bank0
  6869  0C93  1186               	bcf	6,3	;volatile
  6870                           
  6871                           ;lcd_pic16.c: 140:         PORTB &= 0x0f;
  6872  0C94  300F               	movlw	15
  6873  0C95  00F1               	movwf	??i1_WriteDataXLCD
  6874  0C96  0871               	movf	??i1_WriteDataXLCD,w
  6875  0C97  0586               	andwf	6,f	;volatile
  6876                           
  6877                           ;lcd_pic16.c: 141:         PORTB |= ((data<<4)&0xf0);
  6878  0C98  0873               	movf	i1WriteDataXLCD@data,w
  6879  0C99  00F1               	movwf	??i1_WriteDataXLCD
  6880  0C9A  3003               	movlw	3
  6881  0C9B                     u180_25:	
  6882  0C9B  1003               	clrc
  6883  0C9C  0DF1               	rlf	??i1_WriteDataXLCD,f
  6884  0C9D  3EFF               	addlw	-1
  6885  0C9E  1D03               	skipz
  6886  0C9F  2C9B               	goto	u180_25
  6887  0CA0  1003               	clrc
  6888  0CA1  0D71               	rlf	??i1_WriteDataXLCD,w
  6889  0CA2  39F0               	andlw	240
  6890  0CA3  00F2               	movwf	??i1_WriteDataXLCD+1
  6891  0CA4  0872               	movf	??i1_WriteDataXLCD+1,w
  6892  0CA5  0486               	iorwf	6,f	;volatile
  6893                           
  6894                           ;lcd_pic16.c: 146:         DelayFor18TCY();
  6895  0CA6  120A  158A  2164  120A  158A  	fcall	i1_DelayFor18TCY
  6896                           
  6897                           ;lcd_pic16.c: 147:         PORTBbits.RB3 = 1;
  6898  0CAB  1283               	bcf	3,5	;RP0=0, select bank0
  6899  0CAC  1303               	bcf	3,6	;RP1=0, select bank0
  6900  0CAD  1586               	bsf	6,3	;volatile
  6901                           
  6902                           ;lcd_pic16.c: 148:         DelayFor18TCY();
  6903  0CAE  120A  158A  2164   	fcall	i1_DelayFor18TCY
  6904                           
  6905                           ;lcd_pic16.c: 149:         PORTBbits.RB3 = 0;
  6906  0CB1  1283               	bcf	3,5	;RP0=0, select bank0
  6907  0CB2  1303               	bcf	3,6	;RP1=0, select bank0
  6908  0CB3  1186               	bcf	6,3	;volatile
  6909                           
  6910                           ;lcd_pic16.c: 151:         TRISB |= 0xf0;
  6911  0CB4  30F0               	movlw	240
  6912  0CB5  00F1               	movwf	??i1_WriteDataXLCD
  6913  0CB6  0871               	movf	??i1_WriteDataXLCD,w
  6914  0CB7  1683               	bsf	3,5	;RP0=1, select bank1
  6915  0CB8  1303               	bcf	3,6	;RP1=0, select bank1
  6916  0CB9  0486               	iorwf	6,f	;volatile
  6917  0CBA  0008               	return
  6918  0CBB                     __end_ofi1_WriteDataXLCD:	
  6919                           
  6920                           	psect	text37
  6921  0989                     __ptext37:	
  6922 ;; *************** function i1_BusyXLCD *****************
  6923 ;; Defined at:
  6924 ;;		line 451 in file "lcd_pic16.c"
  6925 ;; Parameters:    Size  Location     Type
  6926 ;;		None
  6927 ;; Auto vars:     Size  Location     Type
  6928 ;;		None
  6929 ;; Return value:  Size  Location     Type
  6930 ;;                  1    wreg      unsigned char 
  6931 ;; Registers used:
  6932 ;;		wreg
  6933 ;; Tracked objects:
  6934 ;;		On entry : 0/0
  6935 ;;		On exit  : 0/0
  6936 ;;		Unchanged: 0/0
  6937 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6938 ;;      Params:         0       0       0       0       0
  6939 ;;      Locals:         0       0       0       0       0
  6940 ;;      Temps:          2       0       0       0       0
  6941 ;;      Totals:         2       0       0       0       0
  6942 ;;Total ram usage:        2 bytes
  6943 ;; Hardware stack levels used:    1
  6944 ;; This function calls:
  6945 ;;		Nothing
  6946 ;; This function is called by:
  6947 ;;		i1_putsXLCD
  6948 ;; This function uses a non-reentrant model
  6949 ;;
  6950                           
  6951                           
  6952                           ;psect for function i1_BusyXLCD
  6953  0989                     i1_BusyXLCD:	
  6954                           
  6955                           ;lcd_pic16.c: 504:         _delay((unsigned long)((5)*(4000000/4000.0)));
  6956                           
  6957                           ;incstack = 0
  6958 ;; hardware stack exceeded
  6959                           ; Regs used in i1_BusyXLCD: [wreg]
  6960  0989  3007               	movlw	7
  6961  098A  00F1               	movwf	??i1_BusyXLCD+1
  6962  098B  307D               	movlw	125
  6963  098C  00F0               	movwf	??i1_BusyXLCD
  6964  098D                     u379_27:	
  6965  098D  0BF0               	decfsz	??i1_BusyXLCD,f
  6966  098E  298D               	goto	u379_27
  6967  098F  0BF1               	decfsz	??i1_BusyXLCD+1,f
  6968  0990  298D               	goto	u379_27
  6969                           
  6970                           ;lcd_pic16.c: 505:         return 0;
  6971  0991  3000               	movlw	0
  6972  0992  0008               	return
  6973  0993                     __end_ofi1_BusyXLCD:	
  6974                           
  6975                           	psect	text38
  6976  0D06                     __ptext38:	
  6977 ;; *************** function i1_SetDDRamAddr *****************
  6978 ;; Defined at:
  6979 ;;		line 217 in file "lcd_pic16.c"
  6980 ;; Parameters:    Size  Location     Type
  6981 ;;  DDaddr          1    wreg     unsigned char 
  6982 ;; Auto vars:     Size  Location     Type
  6983 ;;  DDaddr          1    3[COMMON] unsigned char 
  6984 ;; Return value:  Size  Location     Type
  6985 ;;                  1    wreg      void 
  6986 ;; Registers used:
  6987 ;;		wreg, status,2, status,0, pclath, cstack
  6988 ;; Tracked objects:
  6989 ;;		On entry : 0/0
  6990 ;;		On exit  : 0/0
  6991 ;;		Unchanged: 0/0
  6992 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6993 ;;      Params:         0       0       0       0       0
  6994 ;;      Locals:         1       0       0       0       0
  6995 ;;      Temps:          2       0       0       0       0
  6996 ;;      Totals:         3       0       0       0       0
  6997 ;;Total ram usage:        3 bytes
  6998 ;; Hardware stack levels used:    1
  6999 ;; Hardware stack levels required when called:    1
  7000 ;; This function calls:
  7001 ;;		i1_DelayFor18TCY
  7002 ;; This function is called by:
  7003 ;;		_updateLCD
  7004 ;; This function uses a non-reentrant model
  7005 ;;
  7006                           
  7007                           
  7008                           ;psect for function i1_SetDDRamAddr
  7009  0D06                     i1_SetDDRamAddr:	
  7010                           
  7011                           ;incstack = 0
  7012 ;; hardware stack exceeded
  7013                           ; Regs used in i1_SetDDRamAddr: [wreg+status,2+status,0+pclath+cstack]
  7014                           ;i1SetDDRamAddr@DDaddr stored from wreg
  7015  0D06  00F3               	movwf	i1SetDDRamAddr@DDaddr
  7016                           
  7017                           ;lcd_pic16.c: 217: void SetDDRamAddr(unsigned char DDaddr);lcd_pic16.c: 218: {;lcd_pic16
      +                          .c: 232:         TRISB &= 0x0f;
  7018  0D07  300F               	movlw	15
  7019  0D08  00F1               	movwf	??i1_SetDDRamAddr
  7020  0D09  0871               	movf	??i1_SetDDRamAddr,w
  7021  0D0A  1683               	bsf	3,5	;RP0=1, select bank1
  7022  0D0B  1303               	bcf	3,6	;RP1=0, select bank1
  7023  0D0C  0586               	andwf	6,f	;volatile
  7024                           
  7025                           ;lcd_pic16.c: 233:         PORTB &= 0x0f;
  7026  0D0D  300F               	movlw	15
  7027  0D0E  00F1               	movwf	??i1_SetDDRamAddr
  7028  0D0F  0871               	movf	??i1_SetDDRamAddr,w
  7029  0D10  1283               	bcf	3,5	;RP0=0, select bank0
  7030  0D11  1303               	bcf	3,6	;RP1=0, select bank0
  7031  0D12  0586               	andwf	6,f	;volatile
  7032                           
  7033                           ;lcd_pic16.c: 234:         PORTB |= ((DDaddr | 0b10000000) & 0xf0);
  7034  0D13  0873               	movf	i1SetDDRamAddr@DDaddr,w
  7035  0D14  3880               	iorlw	128
  7036  0D15  39F0               	andlw	240
  7037  0D16  00F1               	movwf	??i1_SetDDRamAddr
  7038  0D17  0871               	movf	??i1_SetDDRamAddr,w
  7039  0D18  0486               	iorwf	6,f	;volatile
  7040                           
  7041                           ;lcd_pic16.c: 240:         PORTBbits.RB2 = 0;
  7042  0D19  1106               	bcf	6,2	;volatile
  7043                           
  7044                           ;lcd_pic16.c: 241:         PORTBbits.RB1 = 0;
  7045  0D1A  1086               	bcf	6,1	;volatile
  7046                           
  7047                           ;lcd_pic16.c: 242:         DelayFor18TCY();
  7048  0D1B  120A  158A  2164  120A  158A  	fcall	i1_DelayFor18TCY
  7049                           
  7050                           ;lcd_pic16.c: 243:         PORTBbits.RB3 = 1;
  7051  0D20  1283               	bcf	3,5	;RP0=0, select bank0
  7052  0D21  1303               	bcf	3,6	;RP1=0, select bank0
  7053  0D22  1586               	bsf	6,3	;volatile
  7054                           
  7055                           ;lcd_pic16.c: 244:         DelayFor18TCY();
  7056  0D23  120A  158A  2164  120A  158A  	fcall	i1_DelayFor18TCY
  7057                           
  7058                           ;lcd_pic16.c: 245:         PORTBbits.RB3 = 0;
  7059  0D28  1283               	bcf	3,5	;RP0=0, select bank0
  7060  0D29  1303               	bcf	3,6	;RP1=0, select bank0
  7061  0D2A  1186               	bcf	6,3	;volatile
  7062                           
  7063                           ;lcd_pic16.c: 247:         PORTB &= 0x0f;
  7064  0D2B  300F               	movlw	15
  7065  0D2C  00F1               	movwf	??i1_SetDDRamAddr
  7066  0D2D  0871               	movf	??i1_SetDDRamAddr,w
  7067  0D2E  0586               	andwf	6,f	;volatile
  7068                           
  7069                           ;lcd_pic16.c: 248:         PORTB |= ((DDaddr<<4)&0xf0);
  7070  0D2F  0873               	movf	i1SetDDRamAddr@DDaddr,w
  7071  0D30  00F1               	movwf	??i1_SetDDRamAddr
  7072  0D31  3003               	movlw	3
  7073  0D32                     u222_25:	
  7074  0D32  1003               	clrc
  7075  0D33  0DF1               	rlf	??i1_SetDDRamAddr,f
  7076  0D34  3EFF               	addlw	-1
  7077  0D35  1D03               	skipz
  7078  0D36  2D32               	goto	u222_25
  7079  0D37  1003               	clrc
  7080  0D38  0D71               	rlf	??i1_SetDDRamAddr,w
  7081  0D39  39F0               	andlw	240
  7082  0D3A  00F2               	movwf	??i1_SetDDRamAddr+1
  7083  0D3B  0872               	movf	??i1_SetDDRamAddr+1,w
  7084  0D3C  0486               	iorwf	6,f	;volatile
  7085                           
  7086                           ;lcd_pic16.c: 253:         DelayFor18TCY();
  7087  0D3D  120A  158A  2164  120A  158A  	fcall	i1_DelayFor18TCY
  7088                           
  7089                           ;lcd_pic16.c: 254:         PORTBbits.RB3 = 1;
  7090  0D42  1283               	bcf	3,5	;RP0=0, select bank0
  7091  0D43  1303               	bcf	3,6	;RP1=0, select bank0
  7092  0D44  1586               	bsf	6,3	;volatile
  7093                           
  7094                           ;lcd_pic16.c: 255:         DelayFor18TCY();
  7095  0D45  120A  158A  2164   	fcall	i1_DelayFor18TCY
  7096                           
  7097                           ;lcd_pic16.c: 256:         PORTBbits.RB3 = 0;
  7098  0D48  1283               	bcf	3,5	;RP0=0, select bank0
  7099  0D49  1303               	bcf	3,6	;RP1=0, select bank0
  7100  0D4A  1186               	bcf	6,3	;volatile
  7101                           
  7102                           ;lcd_pic16.c: 258:         TRISB |= 0xf0;
  7103  0D4B  30F0               	movlw	240
  7104  0D4C  00F1               	movwf	??i1_SetDDRamAddr
  7105  0D4D  0871               	movf	??i1_SetDDRamAddr,w
  7106  0D4E  1683               	bsf	3,5	;RP0=1, select bank1
  7107  0D4F  1303               	bcf	3,6	;RP1=0, select bank1
  7108  0D50  0486               	iorwf	6,f	;volatile
  7109  0D51  0008               	return
  7110  0D52                     __end_ofi1_SetDDRamAddr:	
  7111                           
  7112                           	psect	text39
  7113  0964                     __ptext39:	
  7114 ;; *************** function i1_DelayFor18TCY *****************
  7115 ;; Defined at:
  7116 ;;		line 22 in file "lcd_pic16.c"
  7117 ;; Parameters:    Size  Location     Type
  7118 ;;		None
  7119 ;; Auto vars:     Size  Location     Type
  7120 ;;		None
  7121 ;; Return value:  Size  Location     Type
  7122 ;;                  1    wreg      void 
  7123 ;; Registers used:
  7124 ;;		wreg
  7125 ;; Tracked objects:
  7126 ;;		On entry : 0/0
  7127 ;;		On exit  : 0/0
  7128 ;;		Unchanged: 0/0
  7129 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7130 ;;      Params:         0       0       0       0       0
  7131 ;;      Locals:         0       0       0       0       0
  7132 ;;      Temps:          1       0       0       0       0
  7133 ;;      Totals:         1       0       0       0       0
  7134 ;;Total ram usage:        1 bytes
  7135 ;; Hardware stack levels used:    1
  7136 ;; This function calls:
  7137 ;;		Nothing
  7138 ;; This function is called by:
  7139 ;;		i1_WriteDataXLCD
  7140 ;;		i1_SetDDRamAddr
  7141 ;; This function uses a non-reentrant model
  7142 ;;
  7143                           
  7144                           
  7145                           ;psect for function i1_DelayFor18TCY
  7146  0964                     i1_DelayFor18TCY:	
  7147                           
  7148                           ;lcd_pic16.c: 24:    _delay((unsigned long)((18)*(4000000/4000000.0)));
  7149                           
  7150                           ;incstack = 0
  7151 ;; hardware stack exceeded
  7152                           ; Regs used in i1_DelayFor18TCY: [wreg]
  7153  0964  3005               	movlw	5
  7154  0965  00F0               	movwf	??i1_DelayFor18TCY
  7155  0966                     u380_27:	
  7156  0966  0BF0               	decfsz	??i1_DelayFor18TCY,f
  7157  0967  2966               	goto	u380_27
  7158  0968  2969               	nop2
  7159  0969  0008               	return
  7160  096A                     __end_ofi1_DelayFor18TCY:	
  7161                           
  7162                           	psect	text40
  7163  0C28                     __ptext40:	
  7164 ;; *************** function _time *****************
  7165 ;; Defined at:
  7166 ;;		line 146 in file "main.c"
  7167 ;; Parameters:    Size  Location     Type
  7168 ;;		None
  7169 ;; Auto vars:     Size  Location     Type
  7170 ;;		None
  7171 ;; Return value:  Size  Location     Type
  7172 ;;                  1    wreg      void 
  7173 ;; Registers used:
  7174 ;;		wreg, status,2, status,0, pclath, cstack
  7175 ;; Tracked objects:
  7176 ;;		On entry : 0/0
  7177 ;;		On exit  : 0/0
  7178 ;;		Unchanged: 0/0
  7179 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7180 ;;      Params:         0       0       0       0       0
  7181 ;;      Locals:         0       0       0       0       0
  7182 ;;      Temps:          1       0       0       0       0
  7183 ;;      Totals:         1       0       0       0       0
  7184 ;;Total ram usage:        1 bytes
  7185 ;; Hardware stack levels used:    1
  7186 ;; Hardware stack levels required when called:    2
  7187 ;; This function calls:
  7188 ;;		i1_setData
  7189 ;; This function is called by:
  7190 ;;		_inter
  7191 ;; This function uses a non-reentrant model
  7192 ;;
  7193                           
  7194                           
  7195                           ;psect for function _time
  7196  0C28                     _time:	
  7197                           
  7198                           ;main.c: 147:     hundredMiliSeconds++;
  7199                           
  7200                           ;incstack = 0
  7201 ;; hardware stack exceeded
  7202                           ; Regs used in _time: [wreg+status,2+status,0+pclath+cstack]
  7203  0C28  3001               	movlw	1
  7204  0C29  00F6               	movwf	??_time
  7205  0C2A  0876               	movf	??_time,w
  7206  0C2B  1283               	bcf	3,5	;RP0=0, select bank0
  7207  0C2C  1303               	bcf	3,6	;RP1=0, select bank0
  7208  0C2D  07C9               	addwf	_hundredMiliSeconds,f
  7209                           
  7210                           ;main.c: 148:     if(hundredMiliSeconds >= 10){
  7211  0C2E  300A               	movlw	10
  7212  0C2F  0249               	subwf	_hundredMiliSeconds,w
  7213  0C30  1C03               	skipc
  7214  0C31  0008               	return
  7215                           
  7216                           ;main.c: 149:         hundredMiliSeconds = 0;
  7217  0C32  01C9               	clrf	_hundredMiliSeconds
  7218                           
  7219                           ;main.c: 150:         seconds++;
  7220  0C33  3001               	movlw	1
  7221  0C34  00F6               	movwf	??_time
  7222  0C35  0876               	movf	??_time,w
  7223  0C36  07CA               	addwf	_seconds,f
  7224                           
  7225                           ;main.c: 151:         if(seconds >= 60){
  7226  0C37  303C               	movlw	60
  7227  0C38  024A               	subwf	_seconds,w
  7228  0C39  1C03               	skipc
  7229  0C3A  0008               	return
  7230                           
  7231                           ;main.c: 152:             seconds = 0;
  7232  0C3B  01CA               	clrf	_seconds
  7233                           
  7234                           ;main.c: 153:             minutes++;
  7235  0C3C  3001               	movlw	1
  7236  0C3D  00F6               	movwf	??_time
  7237  0C3E  0876               	movf	??_time,w
  7238  0C3F  07CD               	addwf	_minutes,f
  7239                           
  7240                           ;main.c: 154:             setData(0);
  7241  0C40  3000               	movlw	0
  7242  0C41  120A  158A  26EB  120A  158A  	fcall	i1_setData
  7243                           
  7244                           ;main.c: 155:             if(minutes >= 60){
  7245  0C46  303C               	movlw	60
  7246  0C47  1283               	bcf	3,5	;RP0=0, select bank0
  7247  0C48  1303               	bcf	3,6	;RP1=0, select bank0
  7248  0C49  024D               	subwf	_minutes,w
  7249  0C4A  1C03               	skipc
  7250  0C4B  0008               	return
  7251                           
  7252                           ;main.c: 156:                 minutes = 0;
  7253  0C4C  01CD               	clrf	_minutes
  7254                           
  7255                           ;main.c: 157:                 hours++;
  7256  0C4D  3001               	movlw	1
  7257  0C4E  00F6               	movwf	??_time
  7258  0C4F  0876               	movf	??_time,w
  7259  0C50  07CE               	addwf	_hours,f
  7260                           
  7261                           ;main.c: 158:                 if(hours >= 24){
  7262  0C51  3018               	movlw	24
  7263  0C52  024E               	subwf	_hours,w
  7264  0C53  1C03               	skipc
  7265  0C54  0008               	return
  7266                           
  7267                           ;main.c: 159:                     hours = 0;
  7268  0C55  01CE               	clrf	_hours
  7269                           
  7270                           ;main.c: 160:                     days++;
  7271  0C56  3001               	movlw	1
  7272  0C57  00F6               	movwf	??_time
  7273  0C58  0876               	movf	??_time,w
  7274  0C59  07CF               	addwf	_days,f
  7275                           
  7276                           ;main.c: 161:                     if(days >= 30){
  7277  0C5A  301E               	movlw	30
  7278  0C5B  024F               	subwf	_days,w
  7279  0C5C  1C03               	skipc
  7280  0C5D  2C63               	goto	i1l3288
  7281                           
  7282                           ;main.c: 162:                         days = 0;
  7283  0C5E  01CF               	clrf	_days
  7284                           
  7285                           ;main.c: 163:                         months++;
  7286  0C5F  3001               	movlw	1
  7287  0C60  00F6               	movwf	??_time
  7288  0C61  0876               	movf	??_time,w
  7289  0C62  07D0               	addwf	_months,f
  7290  0C63                     i1l3288:	
  7291  0C63  300D               	movlw	13
  7292  0C64  064F               	xorwf	_days,w
  7293  0C65  1D03               	btfss	3,2
  7294  0C66  2C6D               	goto	i1l233
  7295  0C67  3006               	movlw	6
  7296  0C68  0650               	xorwf	_months,w
  7297  0C69  1D03               	btfss	3,2
  7298  0C6A  2C6D               	goto	i1l233
  7299  0C6B  01C8               	clrf	_functionalStat
  7300                           
  7301                           ;main.c: 167:                     }else{
  7302  0C6C  0008               	return
  7303  0C6D                     i1l233:	
  7304  0C6D  01C8               	clrf	_functionalStat
  7305  0C6E  0AC8               	incf	_functionalStat,f
  7306  0C6F  0008               	return
  7307  0C70                     __end_of_time:	
  7308                           
  7309                           	psect	text41
  7310  0EEB                     __ptext41:	
  7311 ;; *************** function i1_setData *****************
  7312 ;; Defined at:
  7313 ;;		line 44 in file "eeprom.c"
  7314 ;; Parameters:    Size  Location     Type
  7315 ;;  full            1    wreg     unsigned char 
  7316 ;; Auto vars:     Size  Location     Type
  7317 ;;  full            1    5[COMMON] unsigned char 
  7318 ;;  setData         1    4[COMMON] unsigned char 
  7319 ;;  setData         1    3[COMMON] unsigned char 
  7320 ;; Return value:  Size  Location     Type
  7321 ;;                  1    wreg      void 
  7322 ;; Registers used:
  7323 ;;		wreg, status,2, status,0, pclath, cstack
  7324 ;; Tracked objects:
  7325 ;;		On entry : 0/0
  7326 ;;		On exit  : 0/0
  7327 ;;		Unchanged: 0/0
  7328 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7329 ;;      Params:         0       0       0       0       0
  7330 ;;      Locals:         3       0       0       0       0
  7331 ;;      Temps:          1       0       0       0       0
  7332 ;;      Totals:         4       0       0       0       0
  7333 ;;Total ram usage:        4 bytes
  7334 ;; Hardware stack levels used:    1
  7335 ;; Hardware stack levels required when called:    1
  7336 ;; This function calls:
  7337 ;;		i1_writeEEPROM
  7338 ;; This function is called by:
  7339 ;;		_time
  7340 ;; This function uses a non-reentrant model
  7341 ;;
  7342                           
  7343                           
  7344                           ;psect for function i1_setData
  7345  0EEB                     i1_setData:	
  7346                           
  7347                           ;incstack = 0
  7348 ;; hardware stack exceeded
  7349                           ; Regs used in i1_setData: [wreg+status,2+status,0+pclath+cstack]
  7350                           ;i1setData@full stored from wreg
  7351  0EEB  00F5               	movwf	i1setData@full
  7352                           
  7353                           ;eeprom.c: 45:     unsigned char data0 = frequency & 0x00FF;
  7354  0EEC  1283               	bcf	3,5	;RP0=0, select bank0
  7355  0EED  1303               	bcf	3,6	;RP1=0, select bank0
  7356  0EEE  0844               	movf	_frequency,w
  7357  0EEF  00F2               	movwf	??i1_setData
  7358  0EF0  0872               	movf	??i1_setData,w
  7359  0EF1  00F3               	movwf	i1setData@data0
  7360                           
  7361                           ;eeprom.c: 46:     unsigned char data1 = frequency >> 8;
  7362  0EF2  0845               	movf	_frequency+1,w
  7363  0EF3  00F2               	movwf	??i1_setData
  7364  0EF4  0872               	movf	??i1_setData,w
  7365  0EF5  00F4               	movwf	i1setData@data1
  7366                           
  7367                           ;eeprom.c: 47:     if(full)writeEEPROM(data0 ,0);
  7368  0EF6  0875               	movf	i1setData@full,w
  7369  0EF7  1903               	btfsc	3,2
  7370  0EF8  2F00               	goto	i1l2902
  7371  0EF9  01F0               	clrf	i1writeEEPROM@address
  7372  0EFA  0873               	movf	i1setData@data0,w
  7373  0EFB  120A  158A  21EA  120A  158A  	fcall	i1_writeEEPROM
  7374  0F00                     i1l2902:	
  7375                           
  7376                           ;eeprom.c: 48:     if(full)writeEEPROM(data1 ,1);
  7377  0F00  0875               	movf	i1setData@full,w
  7378  0F01  1903               	btfsc	3,2
  7379  0F02  2F0B               	goto	i1l70
  7380  0F03  01F0               	clrf	i1writeEEPROM@address
  7381  0F04  0AF0               	incf	i1writeEEPROM@address,f
  7382  0F05  0874               	movf	i1setData@data1,w
  7383  0F06  120A  158A  21EA  120A  158A  	fcall	i1_writeEEPROM
  7384  0F0B                     i1l70:	
  7385                           
  7386                           ;eeprom.c: 49:     writeEEPROM(months ,2);
  7387  0F0B  3002               	movlw	2
  7388  0F0C  00F2               	movwf	??i1_setData
  7389  0F0D  0872               	movf	??i1_setData,w
  7390  0F0E  00F0               	movwf	i1writeEEPROM@address
  7391  0F0F  1283               	bcf	3,5	;RP0=0, select bank0
  7392  0F10  1303               	bcf	3,6	;RP1=0, select bank0
  7393  0F11  0850               	movf	_months,w
  7394  0F12  120A  158A  21EA  120A  158A  	fcall	i1_writeEEPROM
  7395                           
  7396                           ;eeprom.c: 50:     writeEEPROM(days ,3);
  7397  0F17  3003               	movlw	3
  7398  0F18  00F2               	movwf	??i1_setData
  7399  0F19  0872               	movf	??i1_setData,w
  7400  0F1A  00F0               	movwf	i1writeEEPROM@address
  7401  0F1B  1283               	bcf	3,5	;RP0=0, select bank0
  7402  0F1C  1303               	bcf	3,6	;RP1=0, select bank0
  7403  0F1D  084F               	movf	_days,w
  7404  0F1E  120A  158A  21EA  120A  158A  	fcall	i1_writeEEPROM
  7405                           
  7406                           ;eeprom.c: 51:     writeEEPROM(hours ,4);
  7407  0F23  3004               	movlw	4
  7408  0F24  00F2               	movwf	??i1_setData
  7409  0F25  0872               	movf	??i1_setData,w
  7410  0F26  00F0               	movwf	i1writeEEPROM@address
  7411  0F27  1283               	bcf	3,5	;RP0=0, select bank0
  7412  0F28  1303               	bcf	3,6	;RP1=0, select bank0
  7413  0F29  084E               	movf	_hours,w
  7414  0F2A  120A  158A  21EA  120A  158A  	fcall	i1_writeEEPROM
  7415                           
  7416                           ;eeprom.c: 52:     writeEEPROM(minutes ,5);
  7417  0F2F  3005               	movlw	5
  7418  0F30  00F2               	movwf	??i1_setData
  7419  0F31  0872               	movf	??i1_setData,w
  7420  0F32  00F0               	movwf	i1writeEEPROM@address
  7421  0F33  1283               	bcf	3,5	;RP0=0, select bank0
  7422  0F34  1303               	bcf	3,6	;RP1=0, select bank0
  7423  0F35  084D               	movf	_minutes,w
  7424  0F36  120A  158A  21EA  120A  158A  	fcall	i1_writeEEPROM
  7425                           
  7426                           ;eeprom.c: 53:     writeEEPROM(functionalStat ,6);
  7427  0F3B  3006               	movlw	6
  7428  0F3C  00F2               	movwf	??i1_setData
  7429  0F3D  0872               	movf	??i1_setData,w
  7430  0F3E  00F0               	movwf	i1writeEEPROM@address
  7431  0F3F  1283               	bcf	3,5	;RP0=0, select bank0
  7432  0F40  1303               	bcf	3,6	;RP1=0, select bank0
  7433  0F41  0848               	movf	_functionalStat,w
  7434  0F42  120A  158A  21EA   	fcall	i1_writeEEPROM
  7435  0F45  0008               	return
  7436  0F46                     __end_ofi1_setData:	
  7437                           
  7438                           	psect	text42
  7439  09EA                     __ptext42:	
  7440 ;; *************** function i1_writeEEPROM *****************
  7441 ;; Defined at:
  7442 ;;		line 14 in file "eeprom.c"
  7443 ;; Parameters:    Size  Location     Type
  7444 ;;  data            1    wreg     unsigned char 
  7445 ;;  address         1    0[COMMON] unsigned char 
  7446 ;; Auto vars:     Size  Location     Type
  7447 ;;  data            1    1[COMMON] unsigned char 
  7448 ;; Return value:  Size  Location     Type
  7449 ;;                  1    wreg      void 
  7450 ;; Registers used:
  7451 ;;		wreg
  7452 ;; Tracked objects:
  7453 ;;		On entry : 0/0
  7454 ;;		On exit  : 0/0
  7455 ;;		Unchanged: 0/0
  7456 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7457 ;;      Params:         1       0       0       0       0
  7458 ;;      Locals:         1       0       0       0       0
  7459 ;;      Temps:          0       0       0       0       0
  7460 ;;      Totals:         2       0       0       0       0
  7461 ;;Total ram usage:        2 bytes
  7462 ;; Hardware stack levels used:    1
  7463 ;; This function calls:
  7464 ;;		Nothing
  7465 ;; This function is called by:
  7466 ;;		i1_setData
  7467 ;; This function uses a non-reentrant model
  7468 ;;
  7469                           
  7470                           
  7471                           ;psect for function i1_writeEEPROM
  7472  09EA                     i1_writeEEPROM:	
  7473                           
  7474                           ;incstack = 0
  7475 ;; hardware stack exceeded
  7476                           ; Regs used in i1_writeEEPROM: [wreg]
  7477                           ;i1writeEEPROM@data stored from wreg
  7478  09EA  00F1               	movwf	i1writeEEPROM@data
  7479                           
  7480                           ;eeprom.c: 15:     EEADR = address;
  7481  09EB  0870               	movf	i1writeEEPROM@address,w
  7482  09EC  1283               	bcf	3,5	;RP0=0, select bank2
  7483  09ED  1703               	bsf	3,6	;RP1=1, select bank2
  7484  09EE  008D               	movwf	13	;volatile
  7485                           
  7486                           ;eeprom.c: 16:     EEDATA = data;
  7487  09EF  0871               	movf	i1writeEEPROM@data,w
  7488  09F0  008C               	movwf	12	;volatile
  7489                           
  7490                           ;eeprom.c: 18:     EECON1bits.EEPGD = 0;
  7491  09F1  1683               	bsf	3,5	;RP0=1, select bank3
  7492  09F2  1703               	bsf	3,6	;RP1=1, select bank3
  7493  09F3  138C               	bcf	12,7	;volsfr
  7494                           
  7495                           ;eeprom.c: 19:     EECON1bits.WREN = 1;
  7496  09F4  150C               	bsf	12,2	;volsfr
  7497                           
  7498                           ;eeprom.c: 21:     INTCONbits.GIE = 0;
  7499  09F5  138B               	bcf	11,7	;volatile
  7500                           
  7501                           ;eeprom.c: 22:     EECON2 = 0x55;
  7502  09F6  3055               	movlw	85
  7503  09F7  008D               	movwf	13	;volsfr
  7504                           
  7505                           ;eeprom.c: 23:     EECON2 = 0xAA;
  7506  09F8  30AA               	movlw	170
  7507  09F9  008D               	movwf	13	;volsfr
  7508                           
  7509                           ;eeprom.c: 24:     EECON1bits.WR = 1;
  7510  09FA  148C               	bsf	12,1	;volsfr
  7511                           
  7512                           ;eeprom.c: 25:     INTCONbits.GIE = 1;
  7513  09FB  178B               	bsf	11,7	;volatile
  7514  09FC                     i1l60:	
  7515                           ;eeprom.c: 27:     while(PIR2bits.EEIF == 0) continue;
  7516                           
  7517  09FC  1283               	bcf	3,5	;RP0=0, select bank0
  7518  09FD  1303               	bcf	3,6	;RP1=0, select bank0
  7519  09FE  1A0D               	btfsc	13,4	;volatile
  7520  09FF  0008               	return
  7521  0A00  29FC               	goto	i1l60
  7522  0A01                     __end_ofi1_writeEEPROM:	
  7523  007E                     btemp	set	126	;btemp
  7524  007E                     wtemp0	set	126


Data Sizes:
    Strings     154
    Constant    14
    Data        7
    BSS         43
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     36      51
    BANK1            80     35      70
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 18
		 -> STR_12(CODE[18]), STR_11(CODE[17]), STR_10(CODE[17]), STR_9(CODE[17]), 
		 -> STR_8(CODE[17]), STR_7(CODE[17]), STR_6(CODE[17]), STR_5(CODE[17]), 
		 -> STR_4(CODE[17]), STR_3(CODE[17]), STR_2(CODE[18]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 17
		 -> lineOne(BANK1[17]), lineTwo(BANK1[17]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK1[2]), 

    putrsXLCD@buffer	PTR const unsigned char  size(1) Largest target is 17
		 -> STR_1(CODE[17]), 

    putsXLCD@buffer	PTR unsigned char  size(1) Largest target is 17
		 -> lineOne(BANK1[17]), lineTwo(BANK1[17]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _inter in COMMON

    _updateLCD->i1___lwmod
    i1_sprintf->i1___lwmod
    i1___lwmod->i1___lwdiv
    i1_putsXLCD->i1_WriteDataXLCD
    i1_WriteDataXLCD->i1_DelayFor18TCY
    i1_SetDDRamAddr->i1_DelayFor18TCY
    _time->i1_setData
    i1_setData->i1_writeEEPROM

Critical Paths under _main in BANK0

    _main->___lwmod
    _main->_beep
    _main->_getData
    _start->_beep
    _setFrequency->_beep
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _setData->_writeEEPROM
    _putsXLCD->_WriteDataXLCD
    _beep->___wmul
    _putrsXLCD->_WriteDataXLCD
    _WriteDataXLCD->_DelayFor18TCY
    _getData->_readEEPROM
    _setTransStat->_writeFrequency
    _writeFrequency->_codFreq
    _initLCD->_OpenXLCD
    _SendCMDLCD->_WriteCmdXLCD
    _OpenXLCD->_SetDDRamAddr
    _OpenXLCD->_WriteCmdXLCD
    _WriteCmdXLCD->_DelayFor18TCY
    _SetDDRamAddr->_DelayFor18TCY

Critical Paths under _inter in BANK0

    _inter->_updateLCD
    _updateLCD->i1_sprintf

Critical Paths under _main in BANK1

    _main->_start
    _start->_sprintf
    _setFrequency->_sprintf
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _config->_setTransStat
    _setTransStat->_writeFrequency

Critical Paths under _inter in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _inter in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _inter in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 8     8      0   24502
                                             28 BANK1      7     7      0
                       _SetDDRamAddr
                            ___lwdiv
                            ___lwmod
                               _beep
                             _config
                            _getData
                          _putrsXLCD
                           _putsXLCD
                       _setFrequency
                       _setTransStat
                            _sprintf
                              _start
                     _writeFrequency
 ---------------------------------------------------------------------------------
 (1) _start                                                4     4      0    6151
                                             24 BANK1      4     4      0
                       _SetDDRamAddr
                               _beep
                           _putsXLCD
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _setFrequency                                         3     3      0    7447
                                             24 BANK1      3     3      0
                       _SetDDRamAddr
                               _beep
                           _putsXLCD
                            _setData
                            _sprintf
                     _writeFrequency
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             25    20      5    4323
                                              7 BANK1     17    12      5
                            ___lwdiv
                            ___lwmod
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (3) _isdigit                                              2     2      0      68
                                             29 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     702
                                             34 BANK0      2     2      0
                                              3 BANK1      4     0      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     711
                                             29 BANK0      5     1      4
                                              0 BANK1      3     3      0
 ---------------------------------------------------------------------------------
 (2) _setData                                              4     4      0     666
                                             31 BANK0      4     4      0
                        _writeEEPROM
 ---------------------------------------------------------------------------------
 (3) _writeEEPROM                                          2     1      1     576
                                             29 BANK0      2     1      1
 ---------------------------------------------------------------------------------
 (2) _putsXLCD                                             2     2      0     452
                                             33 BANK0      2     2      0
                           _BusyXLCD
                      _WriteDataXLCD
 ---------------------------------------------------------------------------------
 (2) _beep                                                 3     1      2    1125
                                             35 BANK0      1     1      0
                                              0 BANK1      2     0      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     396
                                             29 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) _putrsXLCD                                            2     2      0     122
                                             33 BANK0      2     2      0
                           _BusyXLCD
                      _WriteDataXLCD
 ---------------------------------------------------------------------------------
 (3) _WriteDataXLCD                                        3     3      0      44
                                             30 BANK0      3     3      0
                      _DelayFor18TCY
 ---------------------------------------------------------------------------------
 (1) _getData                                              6     6      0      68
                                             30 BANK0      6     6      0
                         _readEEPROM
 ---------------------------------------------------------------------------------
 (2) _readEEPROM                                           1     1      0      22
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _config                                               0     0      0    1314
                            _initLCD
                       _setTransStat
 ---------------------------------------------------------------------------------
 (1) _setTransStat                                         4     2      2    1138
                                              5 BANK1      4     2      2
                     _writeFrequency
 ---------------------------------------------------------------------------------
 (1) _writeFrequency                                       9     7      2     837
                                             31 BANK0      4     2      2
                                              0 BANK1      5     5      0
                            _codFreq
 ---------------------------------------------------------------------------------
 (2) _codFreq                                              2     0      2     189
                                             29 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _initLCD                                              2     2      0     176
                                              0 BANK1      2     2      0
                           _OpenXLCD
                         _SendCMDLCD
 ---------------------------------------------------------------------------------
 (3) _SendCMDLCD                                           1     1      0      66
                                             33 BANK0      1     1      0
                           _BusyXLCD
                       _WriteCmdXLCD
 ---------------------------------------------------------------------------------
 (3) _OpenXLCD                                             3     3      0     110
                                             33 BANK0      3     3      0
                           _BusyXLCD
                       _DelayPORXLCD
                       _SetDDRamAddr
                       _WriteCmdXLCD
 ---------------------------------------------------------------------------------
 (4) _WriteCmdXLCD                                         3     3      0      44
                                             30 BANK0      3     3      0
                      _DelayFor18TCY
 ---------------------------------------------------------------------------------
 (2) _SetDDRamAddr                                         3     3      0      44
                                             30 BANK0      3     3      0
                      _DelayFor18TCY
 ---------------------------------------------------------------------------------
 (4) _DelayFor18TCY                                        1     1      0       0
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _DelayPORXLCD                                         2     2      0       0
                                             29 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (3) _BusyXLCD                                             2     2      0       0
                                             29 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _inter                                                5     5      0    2541
                                             24 BANK0      5     5      0
                               _time
                          _updateLCD
 ---------------------------------------------------------------------------------
 (7) _updateLCD                                            7     7      0    2225
                                             17 BANK0      7     7      0
                     i1_SetDDRamAddr
                          i1___lwdiv
                          i1___lwmod
                         i1_putsXLCD
                          i1_sprintf
 ---------------------------------------------------------------------------------
 (8) i1_sprintf                                           25    20      5    1517
                                              0 BANK0     17    12      5
                          i1___lwdiv
                          i1___lwmod
                           i1___wmul
                          i1_isdigit
 ---------------------------------------------------------------------------------
 (9) i1_isdigit                                            2     2      0      68
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (9) i1___wmul                                             6     2      4     144
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (9) i1___lwmod                                            6     2      4     263
                                              8 COMMON     6     2      4
                          i1___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (9) i1___lwdiv                                            8     4      4     266
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (8) i1_putsXLCD                                           2     2      0      89
                                              4 COMMON     2     2      0
                         i1_BusyXLCD
                    i1_WriteDataXLCD
 ---------------------------------------------------------------------------------
 (9) i1_WriteDataXLCD                                      3     3      0      44
                                              1 COMMON     3     3      0
                    i1_DelayFor18TCY
 ---------------------------------------------------------------------------------
 (9) i1_BusyXLCD                                           2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (8) i1_SetDDRamAddr                                       3     3      0      44
                                              1 COMMON     3     3      0
                    i1_DelayFor18TCY
 ---------------------------------------------------------------------------------
 (10) i1_DelayFor18TCY                                     1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (7) _time                                                 1     1      0     316
                                              6 COMMON     1     1      0
                          i1_setData
 ---------------------------------------------------------------------------------
 (8) i1_setData                                            4     4      0     316
                                              2 COMMON     4     4      0
                      i1_writeEEPROM
 ---------------------------------------------------------------------------------
 (9) i1_writeEEPROM                                        2     1      1     226
                                              0 COMMON     2     1      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SetDDRamAddr
     _DelayFor18TCY
   ___lwdiv
   ___lwmod
     ___lwdiv (ARG)
   _beep
     ___wmul
   _config
     _initLCD
       _OpenXLCD
         _BusyXLCD
         _DelayPORXLCD
         _SetDDRamAddr
           _DelayFor18TCY
         _WriteCmdXLCD
           _DelayFor18TCY
       _SendCMDLCD
         _BusyXLCD
         _WriteCmdXLCD
           _DelayFor18TCY
     _setTransStat
       _writeFrequency
         _codFreq
   _getData
     _readEEPROM
   _putrsXLCD
     _BusyXLCD
     _WriteDataXLCD
       _DelayFor18TCY
   _putsXLCD
     _BusyXLCD
     _WriteDataXLCD
       _DelayFor18TCY
   _setFrequency
     _SetDDRamAddr
       _DelayFor18TCY
     _beep
       ___wmul
     _putsXLCD
       _BusyXLCD
       _WriteDataXLCD
         _DelayFor18TCY
     _setData
       _writeEEPROM
     _sprintf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
       ___wmul
       _isdigit
     _writeFrequency
       _codFreq
   _setTransStat
     _writeFrequency
       _codFreq
   _sprintf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)
     ___wmul
     _isdigit
   _start
     _SetDDRamAddr
       _DelayFor18TCY
     _beep
       ___wmul
     _putsXLCD
       _BusyXLCD
       _WriteDataXLCD
         _DelayFor18TCY
     _sprintf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
       ___wmul
       _isdigit
   _writeFrequency
     _codFreq

 _inter (ROOT)
   _time
     i1_setData
       i1_writeEEPROM
   _updateLCD
     i1_SetDDRamAddr
       i1_DelayFor18TCY
     i1___lwdiv
     i1___lwmod
       i1___lwdiv (ARG)
     i1_putsXLCD
       i1_BusyXLCD
       i1_WriteDataXLCD
         i1_DelayFor18TCY
     i1_sprintf
       i1___lwdiv
       i1___lwmod
         i1___lwdiv (ARG)
       i1___wmul
       i1_isdigit

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50     23      46       7       87.5%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     24      33       5       63.8%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      87      12        0.0%
ABS                  0      0      87       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Fri Aug 23 02:28:33 2019

              __CFG_CP$ON 0000          ??i1_SetDDRamAddr 0071                         _i 00A0  
                       pc 0002                _UN_BLOCKED 0812                        l60 0A36  
                      l70 0FC5               __CFG_CPD$ON 0000                        fsr 0004  
     ___wmul@multiplicand 003F          i1___wmul@product 0074                       l200 06AC  
                     l243 0340                       l260 03E2                       l252 0388  
                     l261 03ED                       l253 0393                       l246 0344  
                     l255 03F8                       l247 039E                       l256 03AD  
                     l248 0353                       l273 0B94                       l538 07BB  
                     l650 0120                       l665 0A68                       fsr0 0004  
                     indf 0000     __size_of_WriteCmdXLCD 004D           __end_of_BLOCKED 0814  
            __CFG_FOSC$XT 0000              __CFG_LVP$OFF 0000                      l2510 075F  
                    l2502 0743                      l2506 0751                      l3252 0AF1  
                    l4028 00CD                      l2542 07ED                      l3246 0AFB  
                    l2480 06F3                      l2560 0A60                      l3600 0CDE  
                    l2490 0719                      l2482 06FB                      l3530 0791  
                    l2554 09D7                      l2494 0727                      l2486 070B  
                    l3534 07BE                      l2750 0FB8                      l3560 0E48  
                    l3624 0071                      l2498 0735                      l3562 0E5A  
                    l3634 00B9                      l3618 005C                      l3572 0E84  
                    l3652 00F1                      l3636 00D8                      l2862 0A88  
                    l3590 0C14                      l3670 013D                      l3646 00EF  
                    l3822 042B                      l3568 0E76                      l3584 0BF2  
                    l3586 0C04                      l3594 0C21                      l3690 0165  
                    l3682 0161                      l3666 0135                      l3658 0112  
                    l3834 0483                      l2868 0A82                      l3676 0152  
                    l3668 0139                      l3692 003C                      l3860 04DB  
                    l3694 01B8                      l3766 035E                      l3784 03B8  
                    l3776 0377                      l3936 05DD                      l3794 03D1  
                    l3970 068E                      l3962 0672                      l3980 06A5  
                    l3886 0533                      l3958 0666                      l3968 068B  
                    STR_1 086A                      STR_2 0814                      STR_3 0837  
                    STR_4 089D                      STR_5 0837                      STR_6 0859  
                    STR_7 0837                      STR_8 087B                      STR_9 0848  
                    u3015 0CE7                      u3105 0127                      u1435 0E1A  
                    u1445 0D7F                      u3065 0108                      u3330 0480  
                    u1635 0A69                      u1645 0A70                      _PIE1 008C  
                    u3360 04D8                      u1585 0DCC                      u3507 05CF  
                    u3517 05E3                      u3390 0530                      u3607 03CB  
                    u3527 0686                      u3617 03F3                      u3537 069C  
                    u3707 07CD                      u2915 0E5D                      u3627 0402  
                    u3547 04B9                      u3717 07E2                      u2925 0E6B  
                    u3637 0465                      u3557 0511                      u2854 07A4  
                    u3727 0AD2                      u2855 079F                      u3647 0CF0  
                    u2935 0E78                      u3567 0569                      u3737 0AE8  
                    u3657 0CFA                      u3577 058E                      u3497 05A1  
                    u3747 06DA                      u3667 0B86                      u3587 0371  
                    i1l60 09FC                      u3757 06E9                      u3677 0B9E  
                    u2965 0BF7                      u3597 0399                      i1l70 0F0B  
                    u3767 096E                      u3687 078A                      u2895 0E4D  
                    u3777 0999                      u3697 07C2                      u2985 0C0C  
                    u3787 09A5                      u2995 0C15              __CFG_WRT$OFF 0000  
            _stereoEnable 004C                      _beep 0CBB                      _days 004F  
                    _main 059B                      _time 0C28                      btemp 007E  
  __size_of_WriteDataXLCD 004D                      start 0012         ??i1_WriteDataXLCD 0071  
           __CFG_IESO$OFF 0000             __CFG_MCLRE$ON 0000                i1_putsXLCD 0A01  
             _writeEEPROM 0A1E              _WriteCmdXLCD 0D52          ??_writeFrequency 0041  
                   ?_beep 00C3        writeEEPROM@address 003D             ?_SetDDRamAddr 0070  
                   ?_main 0070                     _EEADR 010D                     STR_10 0826  
                   STR_11 088C                     STR_12 0814             __CFG_WDTE$OFF 0000  
                   ?_time 0070                     _ANSEL 0188                     _T1CON 0010  
         __end_of___lwdiv 0E91                     i1l233 0C6D           __end_of___lwmod 0C28  
                   i1l650 029A                     i1l665 0A45                     _TMR1H 000F  
                   _TMR1L 000E                     _PORTA 0005                     _PORTB 0006  
                   _PORTC 0007                     _TRISA 0085                     _TRISB 0086  
                   _TRISC 0087           __end_of_codFreq 0989                i1isdigit@c 0071  
         __end_of_getData 0FA3            __CFG_FCMEN$OFF 0000        i1___lwmod@dividend 007A  
         __end_of_initLCD 0AEE               ?i1_BusyXLCD 0070           __end_of_dpowers 0810  
    writeFrequency@buffer 00C3                     _level 0046                     _inter 0AA2  
         __end_of_isdigit 09D9                     _hours 004E           __end_of_setData 1000  
                   _start 0471            __CFG_BOREN$OFF 0000                     pclath 000A  
        __end_ofi1___wmul 0A5C                     status 0003       i1___wmul@multiplier 0070  
                   wtemp0 007E           __end_of_sprintf 01BD        __size_ofi1___lwdiv 003C  
      __size_ofi1___lwmod 0032           __initialization 0015     __end_ofi1_writeEEPROM 0A01  
       __end_of_FINAL_DAY 0811              __end_of_beep 0D06              __end_of_main 06B4  
            __end_of_time 0C70          __end_of_BusyXLCD 09AC        __size_ofi1_isdigit 000E  
      __size_ofi1_setData 005B     __size_of_DelayPORXLCD 000C                i1sprintf@c 0030  
              i1sprintf@f 0020            ??_SetDDRamAddr 003E                _SendCMDLCD 07EA  
                  ??_beep 0043          __end_of_OpenXLCD 076C                    ??_main 00DF  
                  ??_time 0076        __size_ofi1_sprintf 0168             _WriteDataXLCD 0D9F  
__size_ofi1_DelayFor18TCY 0006        _hundredMiliSeconds 0049                    _ADCON0 001F  
                  _ADCON1 009F                    ?_inter 0070                    _EEDATA 010C  
                  _EECON2 018D                    ?_start 0070                    _ANSELH 0189  
                  i1l3000 02B3                    i1l3002 02B7                    i1l3022 02DF  
                  i1l3014 02DB                    i1l3008 02CC                    i1l3024 01C4  
                  i1l3026 0320                    i1l4030 0247                    i1l2710 0B58  
                  i1l2714 0B66                    i1l2730 09B8                    i1l2708 0B4A  
                  i1l2902 0F00                    i1l2718 0B71                    i1l2662 0A3D  
                  i1l3288 0C63                    i1l3392 0ABA                    i1l2940 0A02  
                  i1l2692 0BD8                    i1l2684 0BB4                    i1l2934 0A08  
                  i1l2686 0BC2                    i1l2950 01E4                    i1l2696 0BE3  
                  i1l2956 01F9                    i1l2990 028C                    i1l2966 0233  
                  i1l2984 026B                    i1l2968 0252                    i1l2978 0269  
                  i1l2998 02AF                    u222_25 0D32                    _INTCON 000B  
                  u233_25 02A1                    u180_25 0C9B                    u229_25 0282  
                  u190_25 0BD9                    u182_25 0A46                    u183_25 0A4D  
                  u193_25 0B4D                    u186_25 0BB7                    u195_25 0B5E  
                  u188_25 0BC3                    u196_25 0B67                    u380_27 0966  
                  u189_25 0BCF                    u379_27 098D             i1sprintf@flag 002A  
           i1sprintf@prec 0029            __CFG_PWRTE$OFF 0000              _DelayPORXLCD 0993  
             ?i1_putsXLCD 0070                    ___wmul 0A5C                 ??___lwdiv 0041  
     __size_ofi1_BusyXLCD 000A                    beep@ms 00C3                 ??___lwmod 0042  
                  _config 0B18                 ??_codFreq 003F                 ??_getData 003E  
                  _months 0050            ?_WriteDataXLCD 0070                 ??_initLCD 00C3  
       __end_ofi1___lwdiv 0BE8         __end_ofi1___lwmod 0B76                 ??_isdigit 003D  
               ??_setData 003F                    saved_w 007E          __end_of_putsXLCD 0AA2  
                  start@i 00DE                 ??_sprintf 00CF         __end_ofi1_isdigit 09BA  
       __end_ofi1_setData 0F46   __end_of__initialization 0031         __end_ofi1_sprintf 0325  
         writeEEPROM@data 003E            __pcstackCOMMON 0070              __pidataBANK0 0971  
           __end_of_inter 0AC6             __end_of_start 059B               ?_SendCMDLCD 0070  
               ?i1___wmul 0070      i1SetDDRamAddr@DDaddr 0073               setData@full 0042  
             i1sprintf@ap 0028               i1sprintf@sp 002D           i1_WriteDataXLCD 0C70  
     __size_ofi1_putsXLCD 001D                   ??_inter 0038    __size_of_DelayFor18TCY 0007  
            sprintf@width 00D7                   ??_start 00DB         ??i1_DelayFor18TCY 0070  
           ?_setFrequency 0070                __pbssBANK0 0044                __pbssBANK1 00A0  
               ?_BusyXLCD 0070           WriteCmdXLCD@cmd 0040      __end_of_SetDDRamAddr 0E3A  
               ?_OpenXLCD 0070                __pmaintext 059B              ?_writeEEPROM 003D  
       WriteDataXLCD@data 0040                   ?___wmul 003D                __pintentry 0004  
                 ?_config 0070           ??_WriteDataXLCD 003E                   _BLOCKED 0813  
          updateLCD@decim 0036                ??i1___wmul 0074            updateLCD@integ 0037  
              _isOnConfig 0047             ?_setTransStat 00C8        __size_of_updateLCD 005A  
            ??i1_BusyXLCD 0070            ??_setFrequency 00DB                __stringtab 0800  
      __size_of_putrsXLCD 002A                ??_BusyXLCD 003D            i1sprintf@width 002E  
              _readEEPROM 09BA       __size_of_SendCMDLCD 0012                ??_OpenXLCD 0041  
           _DelayFor18TCY 096A           __size_of___wmul 0023                 ?_putsXLCD 0070  
                 ___lwdiv 0E3A                   ___lwmod 0BE8           __size_of_config 002C  
      __end_ofi1_BusyXLCD 0993                 _FINAL_DAY 0810                   _codFreq 0980  
         putrsXLCD@buffer 0042                   _getData 0F46                   __ptext1 0471  
                 __ptext2 0325                   __ptext3 0035                   __ptext4 09C9  
                 __ptext5 0BE8                   __ptext6 0E3A                   __ptext7 0FA3  
                 __ptext8 0A1E                   __ptext9 0A7F                   _cntTmr1 004B  
 __end_ofi1_WriteDataXLCD 0CBB                   _initLCD 0AC6                 _T1CONbits 0010  
          ??_setTransStat 00CA                   _dpowers 0806         i1___lwdiv@divisor 0070  
                 _lineOne 00B2                   _lineTwo 00A1                   _isdigit 09C9  
       i1___lwdiv@counter 0077                   _prTmr1H 0051                   _prTmr1L 0052  
                 _setData 0FA3                   _minutes 004D   __size_ofi1_SetDDRamAddr 004C  
                 _seconds 004A                   _sprintf 0035                   clrloop0 0979  
    end_of_initialization 0031        __end_of_UN_BLOCKED 0813              ??i1_putsXLCD 0074  
       __end_of_updateLCD 0EEB            ?_DelayFor18TCY 0070                ??_putsXLCD 0041  
   i1___wmul@multiplicand 0072         __end_of_putrsXLCD 0B18                 _PORTAbits 0005  
               _PORTBbits 0006                 _PORTCbits 0007                 _TRISBbits 0086  
 __size_of_writeFrequency 007E     __size_of_SetDDRamAddr 004E                 i1___lwdiv 0BAC  
               i1___lwmod 0B44    __size_ofi1_writeEEPROM 0017         readEEPROM@address 003D  
      __end_ofi1_putsXLCD 0A1E               ?_readEEPROM 0070                 i1_isdigit 09AC  
               i1_setData 0EEB                 i1_sprintf 01BD       __end_of_FINAL_MONTH 0812  
    __size_of_writeEEPROM 001D      __end_of_setFrequency 0471            __end_of___wmul 0A7F  
            ??_SendCMDLCD 0041            __end_of_config 0B44         i1___lwmod@divisor 0078  
       i1___lwmod@counter 007D              _SetDDRamAddr 0DEC           i1_DelayFor18TCY 0964  
        ?i1_WriteDataXLCD 0070        SetDDRamAddr@DDaddr 0040       start_initialization 0015  
       __size_ofi1___wmul 0021                ?i1___lwdiv 0070                ?i1___lwmod 0078  
       __size_of_BusyXLCD 000D                ?i1_isdigit 0070              setData@data0 0040  
            setData@data1 0041                ?i1_setData 0070        __end_of_SendCMDLCD 07FC  
    __end_of_setTransStat 0BAC              i1sprintf@val 002B           ??_DelayFor18TCY 003D  
       __size_of_OpenXLCD 00B8                ?i1_sprintf 0020             i1_writeEEPROM 09EA  
                ??___wmul 0041                init_fetch0 09D9             ?_WriteCmdXLCD 0070  
                ??_config 0044               __pdataBANK0 004C       __size_of_readEEPROM 000F  
          i1_SetDDRamAddr 0D06                 ___latbits 0002             __pcstackBANK0 0020  
           __pcstackBANK1 00C3              _isdigit$1093 003D               sprintf@flag 00D4  
             sprintf@prec 00D3               _FINAL_MONTH 0811            putsXLCD@buffer 0042  
          i1setData@data0 0073            i1setData@data1 0074          ___lwdiv@dividend 003F  
          ?i1_writeEEPROM 0070   __end_ofi1_DelayFor18TCY 096A            ??_WriteCmdXLCD 003E  
                ?___lwdiv 003D                  ?___lwmod 00C6                  ?_codFreq 003D  
                ?_getData 0070             SendCMDLCD@CMD 0041                 __pstrings 0800  
       __size_of_putsXLCD 0023     __end_of_WriteDataXLCD 0DEC    __end_ofi1_SetDDRamAddr 0D52  
                ?_initLCD 0070                  ?_isdigit 0070                  ?_setData 0070  
          _writeFrequency 076C                 _frequency 0044       i1WriteDataXLCD@data 0073  
        ___lwdiv@quotient 00C4               ??i1___lwdiv 0074               ??i1___lwmod 007C  
                ?_sprintf 00CA            __size_of_inter 0024            __size_of_start 012A  
          i1_isdigit$1093 0070         interrupt_function 0004            ___wmul@product 0041  
             ??i1_isdigit 0070                 clear_ram0 0978               ??i1_setData 0072  
           ?_DelayPORXLCD 0070     __size_of_setFrequency 014C                  _PIR1bits 000C  
         OpenXLCD@lcdtype 0043                  _PIR2bits 000D          setTransStat@stat 00C8  
             ??i1_sprintf 0025                 _updateLCD 0E91            _functionalStat 0048  
             __stringbase 0805         ___wmul@multiplier 003D                  i1___wmul 0A3B  
         ?i1_SetDDRamAddr 0070    __end_of_writeFrequency 07EA                 main@decim 00E4  
               _putrsXLCD 0AEE                 main@integ 00E5              _setFrequency 0325  
                _BusyXLCD 099F     __size_of_setTransStat 0036              ??_readEEPROM 003D  
          ??_DelayPORXLCD 003D                _EECON1bits 018C                  _OpenXLCD 06B4  
         ??i1_writeEEPROM 0071          ?i1_DelayFor18TCY 0070                ?_updateLCD 0070  
        __size_of___lwdiv 0057          __size_of___lwmod 0040      i1writeEEPROM@address 0070  
      __end_of__stringtab 0806          __size_of_codFreq 0009          __size_of_getData 005D  
         ?_writeFrequency 003F                sprintf@val 00D5                ?_putrsXLCD 0070  
        __size_of_initLCD 0028        __end_of_readEEPROM 09C9              _setTransStat 0B76  
        __size_of_isdigit 0010           ___lwdiv@divisor 003D          __size_of_setData 005D  
           i1setData@full 0075           ___lwdiv@counter 00C3                  __ptext10 0CBB  
                __ptext11 0A5C                  __ptext20 0AC6                  __ptext12 0AEE  
                __ptext21 07EA                  __ptext13 0D9F                  __ptext30 01BD  
                __ptext22 06B4                  __ptext14 0F46                  __ptext31 09AC  
                __ptext23 0D52                  __ptext15 09BA                  __ptext40 0C28  
                __ptext32 0A3B                  __ptext24 0DEC                  __ptext16 0B18  
                __ptext41 0EEB                  __ptext33 0B44                  __ptext25 096A  
                __ptext17 0B76                  __ptext42 09EA                  __ptext34 0BAC  
                __ptext26 0993                  __ptext18 076C                  __ptext35 0A01  
                __ptext27 099F                  __ptext19 0980                  __ptext36 0C70  
                __ptext28 0AA2                  __ptext37 0989                  __ptext29 0E91  
                __ptext38 0D06                  __ptext39 0964         __CFG_BOR4V$BOR40V 0000  
    __end_of_WriteCmdXLCD 0D9F          __size_of_sprintf 0188        i1___lwdiv@dividend 0072  
           __size_of_beep 004B         i1writeEEPROM@data 0071                  codFreq@f 003D  
           __size_of_main 0119             __size_of_time 0048             ??_writeEEPROM 003E  
                _putsXLCD 0A7F           writeFrequency@f 003F           writeFrequency@i 00C7  
         writeFrequency@r 00C5        i1___lwdiv@quotient 0075               getData@aux0 0042  
             getData@aux1 0043                _INTCONbits 000B                  init_ram0 09DD  
                isdigit@c 003E  __size_ofi1_WriteDataXLCD 004B                  intlevel1 0000  
               sprintf@ap 00D2                 sprintf@sp 00D9          ___lwmod@dividend 00C8  
               stringcode 0800     __end_of_DelayFor18TCY 0971               ??_updateLCD 0031  
     __end_of_writeEEPROM 0A3B                  sprintf@c 00DA                  sprintf@f 00CA  
    __end_of_DelayPORXLCD 099F          i1putsXLCD@buffer 0075               ??_putrsXLCD 0041  
         ___lwmod@divisor 00C6           ___lwmod@counter 0043                  stringdir 0800  
                stringtab 0800                i1_BusyXLCD 0989  
