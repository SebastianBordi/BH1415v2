

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Wed Aug  7 13:08:57 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	18F452
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	eeprom_data,global,class=EEDATA,delta=1,noexec
     6                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     8                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    16                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    17                           	psect	text0,global,reloc=2,class=CODE,delta=1
    18                           	psect	text1,global,reloc=2,class=CODE,delta=1
    19                           	psect	text2,global,reloc=2,class=CODE,delta=1
    20                           	psect	text3,global,reloc=2,class=CODE,delta=1
    21                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=2
    22                           	psect	text5,global,reloc=2,class=CODE,delta=1
    23                           	psect	text6,global,reloc=2,class=CODE,delta=1
    24                           	psect	text7,global,reloc=2,class=CODE,delta=1
    25                           	psect	text8,global,reloc=2,class=CODE,delta=1
    26                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=2
    27                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=2
    28                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    29                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    30                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=2
    31                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=1
    32                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=1
    33                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=2
    34                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=2
    35                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=2
    36                           	psect	text19,global,reloc=2,class=CODE,delta=1
    37                           	psect	text20,global,reloc=2,class=CODE,delta=1
    38                           	psect	text21,global,reloc=2,class=CODE,delta=1
    39                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=1
    40                           	psect	text23,global,reloc=2,class=CODE,delta=1
    41                           	psect	text24,global,reloc=2,class=CODE,delta=1
    42                           	psect	text25,global,reloc=2,class=CODE,delta=1
    43                           	psect	text26,global,reloc=2,class=CODE,delta=1
    44                           	psect	text27,global,reloc=2,class=CODE,delta=1
    45                           	psect	text28,global,reloc=2,class=CODE,delta=1
    46                           	psect	text29,global,reloc=2,class=CODE,delta=1
    47                           	psect	text30,global,reloc=2,class=CODE,delta=1
    48                           	psect	text31,global,reloc=2,class=CODE,delta=1
    49                           	psect	text32,global,reloc=2,class=CODE,delta=1
    50                           	psect	text33,global,reloc=2,class=CODE,delta=1
    51                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    52                           	psect	text35,global,reloc=2,class=CODE,delta=1
    53                           	psect	text36,global,reloc=2,class=CODE,delta=1
    54                           	psect	text37,global,reloc=2,class=CODE,delta=1
    55                           	psect	text38,global,reloc=2,class=CODE,delta=1
    56                           	psect	text39,global,reloc=2,class=CODE,delta=1
    57                           	psect	text40,global,reloc=2,class=CODE,delta=1
    58                           	psect	text41,global,reloc=2,class=CODE,delta=1
    59                           	psect	text42,global,reloc=2,class=CODE,delta=1
    60                           	psect	text43,global,reloc=2,class=CODE,delta=1
    61                           	psect	text44,global,reloc=2,class=CODE,delta=1
    62                           	psect	text45,global,reloc=2,class=CODE,delta=1
    63                           	psect	text46,global,reloc=2,class=CODE,delta=1
    64                           	psect	text47,global,reloc=2,class=CODE,delta=1
    65                           	psect	text48,global,reloc=2,class=CODE,delta=1
    66                           	psect	text49,global,reloc=2,class=CODE,delta=1
    67                           	psect	text50,global,reloc=2,class=CODE,delta=1
    68                           	psect	text51,global,reloc=2,class=CODE,delta=1
    69                           	psect	text52,global,reloc=2,class=CODE,delta=1
    70                           	psect	text53,global,reloc=2,class=CODE,delta=1
    71                           	psect	text54,global,reloc=2,class=CODE,delta=1
    72                           	psect	text55,global,reloc=2,class=CODE,delta=1
    73                           	psect	text56,global,reloc=2,class=CODE,delta=1
    74                           	psect	text57,global,reloc=2,class=CODE,delta=1
    75                           	psect	text58,global,reloc=2,class=CODE,delta=1,group=1
    76                           	psect	text59,global,reloc=2,class=CODE,delta=1,group=1
    77                           	psect	text60,global,reloc=2,class=CODE,delta=1
    78                           	psect	text61,global,reloc=2,class=CODE,delta=1
    79                           	psect	text62,global,reloc=2,class=CODE,delta=1
    80                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    81                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    82                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    83  0000                     
    84                           ; Version 2.05
    85                           ; Generated 20/12/2018 GMT
    86                           ; 
    87                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    88                           ; All rights reserved.
    89                           ; 
    90                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    91                           ; 
    92                           ; Redistribution and use in source and binary forms, with or without modification, are
    93                           ; permitted provided that the following conditions are met:
    94                           ; 
    95                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    96                           ;        conditions and the following disclaimer.
    97                           ; 
    98                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    99                           ;        of conditions and the following disclaimer in the documentation and/or other
   100                           ;        materials provided with the distribution.
   101                           ; 
   102                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   103                           ;        software without specific prior written permission.
   104                           ; 
   105                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   106                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   107                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   108                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   109                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   110                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   111                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   112                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   113                           ; 
   114                           ; 
   115                           ; Code-generator required, PIC18F452 Definitions
   116                           ; 
   117                           ; SFR Addresses
   118  0000                     
   119                           	psect	eeprom_data
   120  F00000  7E 03 00 00 00 00 01 00 	db	126,3,0,0,0,0,1,0	;# 
   121  F00008  7E 03 00 00 00 00 01 00 	db	126,3,0,0,0,0,1,0	;# 
   122  F00010  7E 03 00 00 00 00 01 00 	db	126,3,0,0,0,0,1,0	;# 
   123  F00018  7E 03 00 00 00 00 01 00 	db	126,3,0,0,0,0,1,0	;# 
   124  F00020  7E 03 00 00 00 00 01 00 	db	126,3,0,0,0,0,1,0	;# 
   125                           
   126                           	psect	idataCOMRAM
   127  002AA3                     __pidataCOMRAM:
   128                           	opt callstack 0
   129                           
   130                           ;initializer for _prTmr0H
   131  002AA3  C5                 	db	197
   132                           
   133                           ;initializer for _prTmr0L
   134  002AA4  68                 	db	104
   135                           
   136                           ;initializer for _prTmr1H
   137  002AA5  6D                 	db	109
   138                           
   139                           ;initializer for _prTmr1L
   140  002AA6  84                 	db	132
   141                           
   142                           	psect	idataBANK0
   143  002A9E                     __pidataBANK0:
   144                           	opt callstack 0
   145                           
   146                           ;initializer for _stereoEnable
   147  002A9E  01                 	db	1
   148                           
   149                           ;initializer for _minutes
   150  002A9F  0F                 	db	15
   151                           
   152                           ;initializer for _hours
   153  002AA0  16                 	db	22
   154                           
   155                           ;initializer for _days
   156  002AA1  13                 	db	19
   157                           
   158                           ;initializer for _months
   159  002AA2  03                 	db	3
   160                           
   161                           	psect	smallconst
   162  000600                     __psmallconst:
   163                           	opt callstack 0
   164  000600  00                 	db	0
   165  000601  0D                 	db	13
   166  000602                     __end_of_FINAL_DAY:
   167                           	opt callstack 0
   168  000602  06                 	db	6
   169  000603                     __end_of_FINAL_MONTH:
   170                           	opt callstack 0
   171  000603  01                 	db	1
   172  000604                     __end_of_UN_BLOCKED:
   173                           	opt callstack 0
   174  000604  00                 	db	0
   175  000605                     __end_of_BLOCKED:
   176                           	opt callstack 0
   177  0000                     _PORTEbits	set	3972
   178  0000                     _TRISDbits	set	3989
   179  0000                     _PORTD	set	3971
   180  0000                     _PORTDbits	set	3971
   181  0000                     _PORTB	set	3969
   182  0000                     _ADRESH	set	4036
   183  0000                     _TMR0L	set	4054
   184  0000                     _TMR0H	set	4055
   185  0000                     _TMR1L	set	4046
   186  0000                     _TMR1H	set	4047
   187  0000                     _PIR1bits	set	3998
   188  0000                     _T1CONbits	set	4045
   189  0000                     _ADCON0bits	set	4034
   190  0000                     _ADCON1	set	4033
   191  0000                     _ADCON0	set	4034
   192  0000                     _T0CON	set	4053
   193  0000                     _T1CON	set	4045
   194  0000                     _TRISE	set	3990
   195  0000                     _TRISD	set	3989
   196  0000                     _TRISC	set	3988
   197  0000                     _TRISB	set	3987
   198  0000                     _TRISA	set	3986
   199  0000                     _PIE1	set	3997
   200  0000                     _INTCON	set	4082
   201  0000                     _OSCCON	set	4051
   202  0000                     _PORTCbits	set	3970
   203  0000                     _PORTAbits	set	3968
   204  0000                     _PIR2bits	set	4001
   205  0000                     _EECON2	set	4007
   206  0000                     _INTCONbits	set	4082
   207  0000                     _EEDATA	set	4008
   208  0000                     _EECON1bits	set	4006
   209  0000                     _EEADR	set	4009
   210  000605                     STR_4:
   211  000605  46                 	db	70	;'F'
   212  000606  63                 	db	99	;'c'
   213  000607  69                 	db	105	;'i'
   214  000608  61                 	db	97	;'a'
   215  000609  2E                 	db	46
   216  00060A  20                 	db	32
   217  00060B  20                 	db	32
   218  00060C  25                 	db	37
   219  00060D  33                 	db	51	;'3'
   220  00060E  64                 	db	100	;'d'
   221  00060F  2E                 	db	46
   222  000610  25                 	db	37
   223  000611  64                 	db	100	;'d'
   224  000612  20                 	db	32
   225  000613  4D                 	db	77	;'M'
   226  000614  48                 	db	72	;'H'
   227  000615  7A                 	db	122	;'z'
   228  000616  00                 	db	0
   229  000617                     STR_1:
   230  000617  46                 	db	70	;'F'
   231  000618  69                 	db	105	;'i'
   232  000619  6A                 	db	106	;'j'
   233  00061A  61                 	db	97	;'a'
   234  00061B  6E                 	db	110	;'n'
   235  00061C  64                 	db	100	;'d'
   236  00061D  6F                 	db	111	;'o'
   237  00061E  20                 	db	32
   238  00061F  46                 	db	70	;'F'
   239  000620  63                 	db	99	;'c'
   240  000621  69                 	db	105	;'i'
   241  000622  61                 	db	97	;'a'
   242  000623  2E                 	db	46
   243  000624  20                 	db	32
   244  000625  20                 	db	32
   245  000626  20                 	db	32
   246  000627  00                 	db	0
   247  000628                     STR_3:
   248  000628  53                 	db	83	;'S'
   249  000629  65                 	db	101	;'e'
   250  00062A  6C                 	db	108	;'l'
   251  00062B  65                 	db	101	;'e'
   252  00062C  63                 	db	99	;'c'
   253  00062D  63                 	db	99	;'c'
   254  00062E  69                 	db	105	;'i'
   255  00062F  6F                 	db	111	;'o'
   256  000630  6E                 	db	110	;'n'
   257  000631  65                 	db	101	;'e'
   258  000632  20                 	db	32
   259  000633  46                 	db	70	;'F'
   260  000634  63                 	db	99	;'c'
   261  000635  69                 	db	105	;'i'
   262  000636  61                 	db	97	;'a'
   263  000637  2E                 	db	46
   264  000638  00                 	db	0
   265  000639                     STR_2:
   266  000639  41                 	db	65	;'A'
   267  00063A  4D                 	db	77	;'M'
   268  00063B  50                 	db	80	;'P'
   269  00063C  52                 	db	82	;'R'
   270  00063D  4F                 	db	79	;'O'
   271  00063E  20                 	db	32
   272  00063F  20                 	db	32
   273  000640  20                 	db	32
   274  000641  20                 	db	32
   275  000642  20                 	db	32
   276  000643  20                 	db	32
   277  000644  45                 	db	69	;'E'
   278  000645  58                 	db	88	;'X'
   279  000646  2D                 	db	45
   280  000647  46                 	db	70	;'F'
   281  000648  4D                 	db	77	;'M'
   282  000649  00                 	db	0
   283                           
   284                           ; #config settings
   285  00064A  00                 	db	0	; dummy byte at the end
   286  0000                     
   287                           	psect	cinit
   288  00220A                     __pcinit:
   289                           	opt callstack 0
   290  00220A                     start_initialization:
   291                           	opt callstack 0
   292  00220A                     __initialization:
   293                           	opt callstack 0
   294                           
   295                           ; Initialize objects allocated to BANK0 (5 bytes)
   296                           ; load TBLPTR registers with __pidataBANK0
   297  00220A  0E9E               	movlw	low __pidataBANK0
   298  00220C  6EF6               	movwf	tblptrl,c
   299  00220E  0E2A               	movlw	high __pidataBANK0
   300  002210  6EF7               	movwf	tblptrh,c
   301  002212  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   302  002214  6EF8               	movwf	tblptru,c
   303  002216  EE00  F0FB         	lfsr	0,__pdataBANK0
   304  00221A  EE10 F005          	lfsr	1,5
   305  00221E                     copy_data0:
   306  00221E  0009               	tblrd		*+
   307  002220  CFF5 FFEE          	movff	tablat,postinc0
   308  002224  50E5               	movf	postdec1,w,c
   309  002226  50E1               	movf	fsr1l,w,c
   310  002228  E1FA               	bnz	copy_data0
   311                           
   312                           ; Initialize objects allocated to COMRAM (4 bytes)
   313                           ; load TBLPTR registers with __pidataCOMRAM
   314  00222A  0EA3               	movlw	low __pidataCOMRAM
   315  00222C  6EF6               	movwf	tblptrl,c
   316  00222E  0E2A               	movlw	high __pidataCOMRAM
   317  002230  6EF7               	movwf	tblptrh,c
   318  002232  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   319  002234  6EF8               	movwf	tblptru,c
   320  002236  EE00  F07A         	lfsr	0,__pdataCOMRAM
   321  00223A  EE10 F004          	lfsr	1,4
   322  00223E                     copy_data1:
   323  00223E  0009               	tblrd		*+
   324  002240  CFF5 FFEE          	movff	tablat,postinc0
   325  002244  50E5               	movf	postdec1,w,c
   326  002246  50E1               	movf	fsr1l,w,c
   327  002248  E1FA               	bnz	copy_data1
   328                           
   329                           ; Clear objects allocated to BANK1 (66 bytes)
   330  00224A  EE01  F000         	lfsr	0,__pbssBANK1
   331  00224E  0E42               	movlw	66
   332  002250                     clear_0:
   333  002250  6AEE               	clrf	postinc0,c
   334  002252  06E8               	decf	wreg,f,c
   335  002254  E1FD               	bnz	clear_0
   336                           
   337                           ; Clear objects allocated to BANK0 (13 bytes)
   338  002256  EE00  F0EE         	lfsr	0,__pbssBANK0
   339  00225A  0E0D               	movlw	13
   340  00225C                     clear_1:
   341  00225C  6AEE               	clrf	postinc0,c
   342  00225E  06E8               	decf	wreg,f,c
   343  002260  E1FD               	bnz	clear_1
   344                           
   345                           ; Clear objects allocated to COMRAM (1 bytes)
   346  002262  6A7E               	clrf	__pbssCOMRAM& (0+255),c
   347  002264                     end_of_initialization:
   348                           	opt callstack 0
   349  002264                     __end_of__initialization:
   350                           	opt callstack 0
   351  002264  907F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   352  002266  927F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   353  002268  0E00               	movlw	low (__Lmediumconst shr (0+16))
   354  00226A  6EF8               	movwf	tblptru,c
   355  00226C  0100               	movlb	0
   356  00226E  EF6A  F00D         	goto	_main	;jump to C main() function
   357                           
   358                           	psect	bssCOMRAM
   359  00007E                     __pbssCOMRAM:
   360                           	opt callstack 0
   361  00007E                     _cntTmr1:
   362                           	opt callstack 0
   363  00007E                     	ds	1
   364                           
   365                           	psect	dataCOMRAM
   366  00007A                     __pdataCOMRAM:
   367                           	opt callstack 0
   368  00007A                     _prTmr0H:
   369                           	opt callstack 0
   370  00007A                     	ds	1
   371  00007B                     _prTmr0L:
   372                           	opt callstack 0
   373  00007B                     	ds	1
   374  00007C                     _prTmr1H:
   375                           	opt callstack 0
   376  00007C                     	ds	1
   377  00007D                     _prTmr1L:
   378                           	opt callstack 0
   379  00007D                     	ds	1
   380                           
   381                           	psect	bssBANK0
   382  0000EE                     __pbssBANK0:
   383                           	opt callstack 0
   384  0000EE                     _nout:
   385                           	opt callstack 0
   386  0000EE                     	ds	2
   387  0000F0                     _width:
   388                           	opt callstack 0
   389  0000F0                     	ds	2
   390  0000F2                     _prec:
   391                           	opt callstack 0
   392  0000F2                     	ds	2
   393  0000F4                     _flags:
   394                           	opt callstack 0
   395  0000F4                     	ds	2
   396  0000F6                     _frequency:
   397                           	opt callstack 0
   398  0000F6                     	ds	2
   399  0000F8                     _functionalStat:
   400                           	opt callstack 0
   401  0000F8                     	ds	1
   402  0000F9                     _hundredMiliSeconds:
   403                           	opt callstack 0
   404  0000F9                     	ds	1
   405  0000FA                     _seconds:
   406                           	opt callstack 0
   407  0000FA                     	ds	1
   408                           
   409                           	psect	dataBANK0
   410  0000FB                     __pdataBANK0:
   411                           	opt callstack 0
   412  0000FB                     _stereoEnable:
   413                           	opt callstack 0
   414  0000FB                     	ds	1
   415  0000FC                     _minutes:
   416                           	opt callstack 0
   417  0000FC                     	ds	1
   418  0000FD                     _hours:
   419                           	opt callstack 0
   420  0000FD                     	ds	1
   421  0000FE                     _days:
   422                           	opt callstack 0
   423  0000FE                     	ds	1
   424  0000FF                     _months:
   425                           	opt callstack 0
   426  0000FF                     	ds	1
   427                           
   428                           	psect	bssBANK1
   429  000100                     __pbssBANK1:
   430                           	opt callstack 0
   431  000100                     _dbuf:
   432                           	opt callstack 0
   433  000100                     	ds	32
   434  000120                     _lineTwo:
   435                           	opt callstack 0
   436  000120                     	ds	17
   437  000131                     _lineOne:
   438                           	opt callstack 0
   439  000131                     	ds	17
   440                           
   441                           	psect	cstackBANK0
   442  000080                     __pcstackBANK0:
   443                           	opt callstack 0
   444  000080                     ??_BusyXLCD:
   445  000080                     ??_DelayPORXLCD:
   446  000080                     ?_strlen:
   447                           	opt callstack 0
   448  000080                     ?_isdigit:
   449                           	opt callstack 0
   450  000080                     ?_isspace:
   451                           	opt callstack 0
   452  000080                     ?_codFreq:
   453                           	opt callstack 0
   454  000080                     ?___wmul:
   455                           	opt callstack 0
   456  000080                     ?___aodiv:
   457                           	opt callstack 0
   458  000080                     ?___aomod:
   459                           	opt callstack 0
   460  000080                     readEEPROM@address:
   461                           	opt callstack 0
   462  000080                     writeEEPROM@address:
   463                           	opt callstack 0
   464  000080                     WriteCmdXLCD@cmd:
   465                           	opt callstack 0
   466  000080                     SetDDRamAddr@DDaddr:
   467                           	opt callstack 0
   468  000080                     codFreq@f:
   469                           	opt callstack 0
   470  000080                     ___wmul@multiplier:
   471                           	opt callstack 0
   472  000080                     isdigit@c:
   473                           	opt callstack 0
   474  000080                     isspace@c:
   475                           	opt callstack 0
   476  000080                     fputc@c:
   477                           	opt callstack 0
   478  000080                     strlen@s:
   479                           	opt callstack 0
   480  000080                     ___aodiv@dividend:
   481                           	opt callstack 0
   482  000080                     ___aomod@dividend:
   483                           	opt callstack 0
   484                           
   485                           ; 8 bytes @ 0x0
   486  000080                     	ds	1
   487  000081                     ??_getData:
   488  000081                     ??_OpenXLCD:
   489  000081                     writeEEPROM@data:
   490                           	opt callstack 0
   491  000081                     SendCMDLCD@CMD:
   492                           	opt callstack 0
   493                           
   494                           ; 1 bytes @ 0x1
   495  000081                     	ds	1
   496  000082                     ??_isdigit:
   497  000082                     ??_isspace:
   498  000082                     setData@data0:
   499                           	opt callstack 0
   500  000082                     OpenXLCD@lcdtype:
   501                           	opt callstack 0
   502  000082                     writeFrequency@f:
   503                           	opt callstack 0
   504  000082                     ___wmul@multiplicand:
   505                           	opt callstack 0
   506  000082                     fputc@fp:
   507                           	opt callstack 0
   508  000082                     strlen@a:
   509                           	opt callstack 0
   510                           
   511                           ; 2 bytes @ 0x2
   512  000082                     	ds	1
   513  000083                     ??_initLCD:
   514  000083                     getData@aux0:
   515                           	opt callstack 0
   516  000083                     setData@data1:
   517                           	opt callstack 0
   518                           
   519                           ; 1 bytes @ 0x3
   520  000083                     	ds	1
   521  000084                     ??_writeFrequency:
   522  000084                     ??_fputc:
   523  000084                     getData@aux1:
   524                           	opt callstack 0
   525  000084                     setData@full:
   526                           	opt callstack 0
   527  000084                     ___wmul@product:
   528                           	opt callstack 0
   529                           
   530                           ; 2 bytes @ 0x4
   531  000084                     	ds	1
   532  000085                     
   533                           ; 1 bytes @ 0x5
   534  000085                     	ds	1
   535  000086                     _isspace$1517:
   536                           	opt callstack 0
   537  000086                     beep@ms:
   538                           	opt callstack 0
   539                           
   540                           ; 2 bytes @ 0x6
   541  000086                     	ds	1
   542  000087                     ?_atoi:
   543                           	opt callstack 0
   544  000087                     writeFrequency@buffer:
   545                           	opt callstack 0
   546  000087                     atoi@s:
   547                           	opt callstack 0
   548                           
   549                           ; 2 bytes @ 0x7
   550  000087                     	ds	1
   551  000088                     ___aodiv@divisor:
   552                           	opt callstack 0
   553  000088                     ___aomod@divisor:
   554                           	opt callstack 0
   555                           
   556                           ; 8 bytes @ 0x8
   557  000088                     	ds	1
   558  000089                     ??_atoi:
   559  000089                     writeFrequency@r:
   560                           	opt callstack 0
   561  000089                     fputs@s:
   562                           	opt callstack 0
   563                           
   564                           ; 2 bytes @ 0x9
   565  000089                     	ds	2
   566  00008B                     writeFrequency@i:
   567                           	opt callstack 0
   568  00008B                     fputs@fp:
   569                           	opt callstack 0
   570                           
   571                           ; 2 bytes @ 0xB
   572  00008B                     	ds	2
   573  00008D                     fputs@c:
   574                           	opt callstack 0
   575  00008D                     atoi@neg:
   576                           	opt callstack 0
   577                           
   578                           ; 2 bytes @ 0xD
   579  00008D                     	ds	1
   580  00008E                     fputs@i:
   581                           	opt callstack 0
   582                           
   583                           ; 2 bytes @ 0xE
   584  00008E                     	ds	1
   585  00008F                     _atoi$1499:
   586                           	opt callstack 0
   587                           
   588                           ; 2 bytes @ 0xF
   589  00008F                     	ds	1
   590  000090                     ?_pad:
   591                           	opt callstack 0
   592  000090                     ___aodiv@counter:
   593                           	opt callstack 0
   594  000090                     ___aomod@counter:
   595                           	opt callstack 0
   596  000090                     pad@fp:
   597                           	opt callstack 0
   598                           
   599                           ; 2 bytes @ 0x10
   600  000090                     	ds	1
   601  000091                     ___aodiv@sign:
   602                           	opt callstack 0
   603  000091                     ___aomod@sign:
   604                           	opt callstack 0
   605  000091                     _atoi$1501:
   606                           	opt callstack 0
   607                           
   608                           ; 2 bytes @ 0x11
   609  000091                     	ds	1
   610  000092                     ?_abs:
   611                           	opt callstack 0
   612  000092                     pad@buf:
   613                           	opt callstack 0
   614  000092                     abs@a:
   615                           	opt callstack 0
   616  000092                     ___aodiv@quotient:
   617                           	opt callstack 0
   618                           
   619                           ; 8 bytes @ 0x12
   620  000092                     	ds	1
   621  000093                     _atoi$1500:
   622                           	opt callstack 0
   623                           
   624                           ; 1 bytes @ 0x13
   625  000093                     	ds	1
   626  000094                     ??_abs:
   627  000094                     pad@p:
   628                           	opt callstack 0
   629  000094                     atoi@n:
   630                           	opt callstack 0
   631                           
   632                           ; 2 bytes @ 0x14
   633  000094                     	ds	2
   634  000096                     ??_pad:
   635                           
   636                           ; 1 bytes @ 0x16
   637  000096                     	ds	1
   638  000097                     pad@i:
   639                           	opt callstack 0
   640                           
   641                           ; 2 bytes @ 0x17
   642  000097                     	ds	2
   643  000099                     pad@w:
   644                           	opt callstack 0
   645                           
   646                           ; 2 bytes @ 0x19
   647  000099                     	ds	2
   648  00009B                     ?_dtoa:
   649                           	opt callstack 0
   650  00009B                     dtoa@fp:
   651                           	opt callstack 0
   652                           
   653                           ; 2 bytes @ 0x1B
   654  00009B                     	ds	2
   655  00009D                     dtoa@d:
   656                           	opt callstack 0
   657                           
   658                           ; 8 bytes @ 0x1D
   659  00009D                     	ds	8
   660  0000A5                     ??_dtoa:
   661                           
   662                           ; 1 bytes @ 0x25
   663  0000A5                     	ds	8
   664  0000AD                     _dtoa$1027:
   665                           	opt callstack 0
   666                           
   667                           ; 2 bytes @ 0x2D
   668  0000AD                     	ds	2
   669  0000AF                     dtoa@p:
   670                           	opt callstack 0
   671                           
   672                           ; 2 bytes @ 0x2F
   673  0000AF                     	ds	2
   674  0000B1                     dtoa@w:
   675                           	opt callstack 0
   676                           
   677                           ; 2 bytes @ 0x31
   678  0000B1                     	ds	2
   679  0000B3                     dtoa@s:
   680                           	opt callstack 0
   681                           
   682                           ; 2 bytes @ 0x33
   683  0000B3                     	ds	2
   684  0000B5                     dtoa@n:
   685                           	opt callstack 0
   686                           
   687                           ; 8 bytes @ 0x35
   688  0000B5                     	ds	8
   689  0000BD                     dtoa@i:
   690                           	opt callstack 0
   691                           
   692                           ; 2 bytes @ 0x3D
   693  0000BD                     	ds	2
   694  0000BF                     ?_vfpfcnvrt:
   695                           	opt callstack 0
   696  0000BF                     vfpfcnvrt@fp:
   697                           	opt callstack 0
   698                           
   699                           ; 2 bytes @ 0x3F
   700  0000BF                     	ds	2
   701  0000C1                     vfpfcnvrt@fmt:
   702                           	opt callstack 0
   703                           
   704                           ; 2 bytes @ 0x41
   705  0000C1                     	ds	2
   706  0000C3                     vfpfcnvrt@ap:
   707                           	opt callstack 0
   708                           
   709                           ; 2 bytes @ 0x43
   710  0000C3                     	ds	2
   711  0000C5                     ??_vfpfcnvrt:
   712                           
   713                           ; 1 bytes @ 0x45
   714  0000C5                     	ds	4
   715  0000C9                     vfpfcnvrt@ll:
   716                           	opt callstack 0
   717                           
   718                           ; 8 bytes @ 0x49
   719  0000C9                     	ds	8
   720  0000D1                     _vfpfcnvrt$1042:
   721                           	opt callstack 0
   722                           
   723                           ; 2 bytes @ 0x51
   724  0000D1                     	ds	2
   725  0000D3                     ?_vfprintf:
   726                           	opt callstack 0
   727  0000D3                     vfprintf@fp:
   728                           	opt callstack 0
   729                           
   730                           ; 2 bytes @ 0x53
   731  0000D3                     	ds	2
   732  0000D5                     vfprintf@fmt:
   733                           	opt callstack 0
   734                           
   735                           ; 2 bytes @ 0x55
   736  0000D5                     	ds	2
   737  0000D7                     vfprintf@ap:
   738                           	opt callstack 0
   739                           
   740                           ; 2 bytes @ 0x57
   741  0000D7                     	ds	2
   742  0000D9                     vfprintf@cfmt:
   743                           	opt callstack 0
   744                           
   745                           ; 2 bytes @ 0x59
   746  0000D9                     	ds	2
   747  0000DB                     ?_sprintf:
   748                           	opt callstack 0
   749  0000DB                     sprintf@s:
   750                           	opt callstack 0
   751                           
   752                           ; 2 bytes @ 0x5B
   753  0000DB                     	ds	2
   754  0000DD                     sprintf@fmt:
   755                           	opt callstack 0
   756                           
   757                           ; 2 bytes @ 0x5D
   758  0000DD                     	ds	2
   759  0000DF                     
   760                           ; 1 bytes @ 0x5F
   761  0000DF                     	ds	2
   762  0000E1                     sprintf@ap:
   763                           	opt callstack 0
   764                           
   765                           ; 2 bytes @ 0x61
   766  0000E1                     	ds	2
   767  0000E3                     sprintf@f:
   768                           	opt callstack 0
   769                           
   770                           ; 6 bytes @ 0x63
   771  0000E3                     	ds	6
   772  0000E9                     ??_setFrequency:
   773                           
   774                           ; 1 bytes @ 0x69
   775  0000E9                     	ds	2
   776  0000EB                     ??_main:
   777                           
   778                           ; 1 bytes @ 0x6B
   779  0000EB                     	ds	2
   780  0000ED                     main@i:
   781                           	opt callstack 0
   782                           
   783                           ; 1 bytes @ 0x6D
   784  0000ED                     	ds	1
   785                           
   786                           	psect	cstackCOMRAM
   787  000001                     __pcstackCOMRAM:
   788                           	opt callstack 0
   789  000001                     ??_vumeter:
   790  000001                     ??i2_BusyXLCD:
   791  000001                     ?___lwdiv:
   792                           	opt callstack 0
   793  000001                     ?___lwmod:
   794                           	opt callstack 0
   795  000001                     ?i2___wmul:
   796                           	opt callstack 0
   797  000001                     ?i2_isdigit:
   798                           	opt callstack 0
   799  000001                     ?i2_isspace:
   800                           	opt callstack 0
   801  000001                     ?i2_strlen:
   802                           	opt callstack 0
   803  000001                     ?i2___aodiv:
   804                           	opt callstack 0
   805  000001                     ?i2___aomod:
   806                           	opt callstack 0
   807  000001                     WriteDataXLCD@data:
   808                           	opt callstack 0
   809  000001                     i2writeEEPROM@address:
   810                           	opt callstack 0
   811  000001                     i2SetDDRamAddr@DDaddr:
   812                           	opt callstack 0
   813  000001                     ___lwdiv@dividend:
   814                           	opt callstack 0
   815  000001                     ___lwmod@dividend:
   816                           	opt callstack 0
   817  000001                     i2___wmul@multiplier:
   818                           	opt callstack 0
   819  000001                     i2isdigit@c:
   820                           	opt callstack 0
   821  000001                     i2isspace@c:
   822                           	opt callstack 0
   823  000001                     i2fputc@c:
   824                           	opt callstack 0
   825  000001                     i2strlen@s:
   826                           	opt callstack 0
   827  000001                     i2___aodiv@dividend:
   828                           	opt callstack 0
   829  000001                     i2___aomod@dividend:
   830                           	opt callstack 0
   831                           
   832                           ; 8 bytes @ 0x0
   833  000001                     	ds	1
   834  000002                     i2writeEEPROM@data:
   835                           	opt callstack 0
   836  000002                     putsXLCD@buffer:
   837                           	opt callstack 0
   838                           
   839                           ; 2 bytes @ 0x1
   840  000002                     	ds	1
   841  000003                     ??i2_isdigit:
   842  000003                     ??i2_isspace:
   843  000003                     i2setData@data0:
   844                           	opt callstack 0
   845  000003                     ___lwdiv@divisor:
   846                           	opt callstack 0
   847  000003                     ___lwmod@divisor:
   848                           	opt callstack 0
   849  000003                     i2___wmul@multiplicand:
   850                           	opt callstack 0
   851  000003                     i2fputc@fp:
   852                           	opt callstack 0
   853  000003                     i2strlen@a:
   854                           	opt callstack 0
   855                           
   856                           ; 2 bytes @ 0x2
   857  000003                     	ds	1
   858  000004                     vumeter@level:
   859                           	opt callstack 0
   860  000004                     i2setData@data1:
   861                           	opt callstack 0
   862                           
   863                           ; 1 bytes @ 0x3
   864  000004                     	ds	1
   865  000005                     ??i2_fputc:
   866  000005                     vumeter@vumLevel:
   867                           	opt callstack 0
   868  000005                     ___lwmod@counter:
   869                           	opt callstack 0
   870  000005                     i2setData@full:
   871                           	opt callstack 0
   872  000005                     ___lwdiv@quotient:
   873                           	opt callstack 0
   874  000005                     i2___wmul@product:
   875                           	opt callstack 0
   876                           
   877                           ; 2 bytes @ 0x4
   878  000005                     	ds	1
   879  000006                     
   880                           ; 1 bytes @ 0x5
   881  000006                     	ds	1
   882  000007                     ___lwdiv@counter:
   883                           	opt callstack 0
   884  000007                     i2_isspace$1517:
   885                           	opt callstack 0
   886                           
   887                           ; 1 bytes @ 0x6
   888  000007                     	ds	1
   889  000008                     ?i2_atoi:
   890                           	opt callstack 0
   891  000008                     i2atoi@s:
   892                           	opt callstack 0
   893                           
   894                           ; 2 bytes @ 0x7
   895  000008                     	ds	1
   896  000009                     i2___aodiv@divisor:
   897                           	opt callstack 0
   898  000009                     i2___aomod@divisor:
   899                           	opt callstack 0
   900                           
   901                           ; 8 bytes @ 0x8
   902  000009                     	ds	1
   903  00000A                     ??i2_atoi:
   904  00000A                     i2fputs@s:
   905                           	opt callstack 0
   906                           
   907                           ; 2 bytes @ 0x9
   908  00000A                     	ds	2
   909  00000C                     i2fputs@fp:
   910                           	opt callstack 0
   911                           
   912                           ; 2 bytes @ 0xB
   913  00000C                     	ds	2
   914  00000E                     i2fputs@c:
   915                           	opt callstack 0
   916  00000E                     i2atoi@neg:
   917                           	opt callstack 0
   918                           
   919                           ; 2 bytes @ 0xD
   920  00000E                     	ds	1
   921  00000F                     i2fputs@i:
   922                           	opt callstack 0
   923                           
   924                           ; 2 bytes @ 0xE
   925  00000F                     	ds	1
   926  000010                     i2_atoi$1499:
   927                           	opt callstack 0
   928                           
   929                           ; 2 bytes @ 0xF
   930  000010                     	ds	1
   931  000011                     ?i2_pad:
   932                           	opt callstack 0
   933  000011                     i2___aodiv@counter:
   934                           	opt callstack 0
   935  000011                     i2___aomod@counter:
   936                           	opt callstack 0
   937  000011                     i2pad@fp:
   938                           	opt callstack 0
   939                           
   940                           ; 2 bytes @ 0x10
   941  000011                     	ds	1
   942  000012                     i2___aodiv@sign:
   943                           	opt callstack 0
   944  000012                     i2___aomod@sign:
   945                           	opt callstack 0
   946  000012                     i2_atoi$1501:
   947                           	opt callstack 0
   948                           
   949                           ; 2 bytes @ 0x11
   950  000012                     	ds	1
   951  000013                     ?i2_abs:
   952                           	opt callstack 0
   953  000013                     i2pad@buf:
   954                           	opt callstack 0
   955  000013                     i2abs@a:
   956                           	opt callstack 0
   957  000013                     i2___aodiv@quotient:
   958                           	opt callstack 0
   959                           
   960                           ; 8 bytes @ 0x12
   961  000013                     	ds	1
   962  000014                     i2_atoi$1500:
   963                           	opt callstack 0
   964                           
   965                           ; 1 bytes @ 0x13
   966  000014                     	ds	1
   967  000015                     ??i2_abs:
   968  000015                     i2pad@p:
   969                           	opt callstack 0
   970  000015                     i2atoi@n:
   971                           	opt callstack 0
   972                           
   973                           ; 2 bytes @ 0x14
   974  000015                     	ds	2
   975  000017                     ??i2_pad:
   976                           
   977                           ; 1 bytes @ 0x16
   978  000017                     	ds	1
   979  000018                     i2pad@i:
   980                           	opt callstack 0
   981                           
   982                           ; 2 bytes @ 0x17
   983  000018                     	ds	2
   984  00001A                     i2pad@w:
   985                           	opt callstack 0
   986                           
   987                           ; 2 bytes @ 0x19
   988  00001A                     	ds	2
   989  00001C                     ?i2_dtoa:
   990                           	opt callstack 0
   991  00001C                     i2dtoa@fp:
   992                           	opt callstack 0
   993                           
   994                           ; 2 bytes @ 0x1B
   995  00001C                     	ds	2
   996  00001E                     i2dtoa@d:
   997                           	opt callstack 0
   998                           
   999                           ; 8 bytes @ 0x1D
  1000  00001E                     	ds	8
  1001  000026                     ??i2_dtoa:
  1002                           
  1003                           ; 1 bytes @ 0x25
  1004  000026                     	ds	8
  1005  00002E                     i2_dtoa$1027:
  1006                           	opt callstack 0
  1007                           
  1008                           ; 2 bytes @ 0x2D
  1009  00002E                     	ds	2
  1010  000030                     i2dtoa@p:
  1011                           	opt callstack 0
  1012                           
  1013                           ; 2 bytes @ 0x2F
  1014  000030                     	ds	2
  1015  000032                     i2dtoa@w:
  1016                           	opt callstack 0
  1017                           
  1018                           ; 2 bytes @ 0x31
  1019  000032                     	ds	2
  1020  000034                     i2dtoa@s:
  1021                           	opt callstack 0
  1022                           
  1023                           ; 2 bytes @ 0x33
  1024  000034                     	ds	2
  1025  000036                     i2dtoa@n:
  1026                           	opt callstack 0
  1027                           
  1028                           ; 8 bytes @ 0x35
  1029  000036                     	ds	8
  1030  00003E                     i2dtoa@i:
  1031                           	opt callstack 0
  1032                           
  1033                           ; 2 bytes @ 0x3D
  1034  00003E                     	ds	2
  1035  000040                     ?i2_vfpfcnvrt:
  1036                           	opt callstack 0
  1037  000040                     i2vfpfcnvrt@fp:
  1038                           	opt callstack 0
  1039                           
  1040                           ; 2 bytes @ 0x3F
  1041  000040                     	ds	2
  1042  000042                     i2vfpfcnvrt@fmt:
  1043                           	opt callstack 0
  1044                           
  1045                           ; 2 bytes @ 0x41
  1046  000042                     	ds	2
  1047  000044                     i2vfpfcnvrt@ap:
  1048                           	opt callstack 0
  1049                           
  1050                           ; 2 bytes @ 0x43
  1051  000044                     	ds	2
  1052  000046                     ??i2_vfpfcnvrt:
  1053                           
  1054                           ; 1 bytes @ 0x45
  1055  000046                     	ds	4
  1056  00004A                     i2vfpfcnvrt@ll:
  1057                           	opt callstack 0
  1058                           
  1059                           ; 8 bytes @ 0x49
  1060  00004A                     	ds	8
  1061  000052                     i2_vfpfcnvrt$1042:
  1062                           	opt callstack 0
  1063                           
  1064                           ; 2 bytes @ 0x51
  1065  000052                     	ds	2
  1066  000054                     ?i2_vfprintf:
  1067                           	opt callstack 0
  1068  000054                     i2vfprintf@fp:
  1069                           	opt callstack 0
  1070                           
  1071                           ; 2 bytes @ 0x53
  1072  000054                     	ds	2
  1073  000056                     i2vfprintf@fmt:
  1074                           	opt callstack 0
  1075                           
  1076                           ; 2 bytes @ 0x55
  1077  000056                     	ds	2
  1078  000058                     i2vfprintf@ap:
  1079                           	opt callstack 0
  1080                           
  1081                           ; 2 bytes @ 0x57
  1082  000058                     	ds	2
  1083  00005A                     i2vfprintf@cfmt:
  1084                           	opt callstack 0
  1085                           
  1086                           ; 2 bytes @ 0x59
  1087  00005A                     	ds	2
  1088  00005C                     ?i2_sprintf:
  1089                           	opt callstack 0
  1090  00005C                     i2sprintf@s:
  1091                           	opt callstack 0
  1092                           
  1093                           ; 2 bytes @ 0x5B
  1094  00005C                     	ds	2
  1095  00005E                     i2sprintf@fmt:
  1096                           	opt callstack 0
  1097                           
  1098                           ; 2 bytes @ 0x5D
  1099  00005E                     	ds	6
  1100  000064                     
  1101                           ; 1 bytes @ 0x63
  1102  000064                     	ds	2
  1103  000066                     i2sprintf@ap:
  1104                           	opt callstack 0
  1105                           
  1106                           ; 2 bytes @ 0x65
  1107  000066                     	ds	2
  1108  000068                     i2sprintf@f:
  1109                           	opt callstack 0
  1110                           
  1111                           ; 6 bytes @ 0x67
  1112  000068                     	ds	6
  1113  00006E                     updateLCD@integ:
  1114                           	opt callstack 0
  1115                           
  1116                           ; 1 bytes @ 0x6D
  1117  00006E                     	ds	1
  1118  00006F                     updateLCD@decim:
  1119                           	opt callstack 0
  1120                           
  1121                           ; 1 bytes @ 0x6E
  1122  00006F                     	ds	1
  1123  000070                     ??_inter:
  1124                           
  1125                           ; 1 bytes @ 0x6F
  1126  000070                     	ds	10
  1127                           
  1128 ;;
  1129 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1130 ;;
  1131 ;; *************** function _main *****************
  1132 ;; Defined at:
  1133 ;;		line 5 in file "main.c"
  1134 ;; Parameters:    Size  Location     Type
  1135 ;;		None
  1136 ;; Auto vars:     Size  Location     Type
  1137 ;;  i               1  109[BANK0 ] unsigned char 
  1138 ;; Return value:  Size  Location     Type
  1139 ;;                  1    wreg      void 
  1140 ;; Registers used:
  1141 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1142 ;; Tracked objects:
  1143 ;;		On entry : 0/0
  1144 ;;		On exit  : 0/0
  1145 ;;		Unchanged: 0/0
  1146 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1147 ;;      Params:         0       0       0       0       0       0       0
  1148 ;;      Locals:         0       1       0       0       0       0       0
  1149 ;;      Temps:          0       2       0       0       0       0       0
  1150 ;;      Totals:         0       3       0       0       0       0       0
  1151 ;;Total ram usage:        3 bytes
  1152 ;; Hardware stack levels required when called:   19
  1153 ;; This function calls:
  1154 ;;		_beep
  1155 ;;		_config
  1156 ;;		_getData
  1157 ;;		_setFrequency
  1158 ;;		_sprintf
  1159 ;;		_writeFrequency
  1160 ;; This function is called by:
  1161 ;;		Startup code after reset
  1162 ;; This function uses a non-reentrant model
  1163 ;;
  1164                           
  1165                           	psect	text0
  1166  001AD4                     __ptext0:
  1167                           	opt callstack 0
  1168  001AD4                     _main:
  1169                           	opt callstack 0
  1170  001AD4  FFFF               	dw	65535	; assembler added errata NOP
  1171                           
  1172                           ;main.c: 6:     char i = 0;
  1173                           
  1174                           ;incstack = 0
  1175  001AD6  0E00               	movlw	0
  1176  001AD8  0100               	movlb	0	; () banked
  1177  001ADA  6FED               	movwf	main@i& (0+255),b
  1178                           
  1179                           ; BSR set to: 0
  1180                           ;main.c: 7:     PORTAbits.RA5 = 0;
  1181  001ADC  9A80               	bcf	3968,5,c	;volatile
  1182                           
  1183                           ; BSR set to: 0
  1184                           ;main.c: 8:     _delay((unsigned long)((100)*(12000000/4000.0)));
  1185  001ADE  0E02               	movlw	2
  1186  001AE0  0100               	movlb	0	; () banked
  1187  001AE2  6FEC               	movwf	(??_main+1)& (0+255),b
  1188  001AE4  0E25               	movlw	37
  1189  001AE6  6FEB               	movwf	??_main& (0+255),b
  1190  001AE8  0E63               	movlw	99
  1191  001AEA                     u3707:
  1192  001AEA  FFFF               	dw	65535	; errata NOP
  1193  001AEC  2EE8               	decfsz	wreg,f,c
  1194  001AEE  D7FD               	bra	u3707
  1195  001AF0  2FEB               	decfsz	??_main& (0+255),f,b
  1196  001AF2  D7FB               	bra	u3707
  1197  001AF4  2FEC               	decfsz	(??_main+1)& (0+255),f,b
  1198  001AF6  D7F9               	bra	u3707
  1199  001AF8  F000               	nop	
  1200                           
  1201                           ;main.c: 9:     config();
  1202  001AFA  ECCA  F013         	call	_config	;wreg free
  1203                           
  1204                           ;main.c: 10:     getData();
  1205  001AFE  ECD0  F010         	call	_getData	;wreg free
  1206                           
  1207                           ;main.c: 11:     beep(10);
  1208  001B02  0E00               	movlw	0
  1209  001B04  0100               	movlb	0	; () banked
  1210  001B06  6F87               	movwf	(beep@ms+1)& (0+255),b
  1211  001B08  0E0A               	movlw	10
  1212  001B0A  6F86               	movwf	beep@ms& (0+255),b
  1213  001B0C  ECC9  F011         	call	_beep	;wreg free
  1214                           
  1215                           ;main.c: 12:     if(!PORTCbits.RC0){
  1216  001B10  B082               	btfsc	3970,0,c	;volatile
  1217  001B12  D00D               	goto	l4042
  1218                           
  1219                           ;main.c: 13:         _delay((unsigned long)((25)*(12000000/4000.0)));
  1220  001B14  0E4A               	movlw	74
  1221  001B16  0100               	movlb	0	; () banked
  1222  001B18  6FEB               	movwf	??_main& (0+255),b
  1223  001B1A  0E18               	movlw	24
  1224  001B1C                     u3717:
  1225  001B1C  FFFF               	dw	65535	; errata NOP
  1226  001B1E  2EE8               	decfsz	wreg,f,c
  1227  001B20  D7FD               	bra	u3717
  1228  001B22  2FEB               	decfsz	??_main& (0+255),f,b
  1229  001B24  D7FB               	bra	u3717
  1230  001B26  F000               	nop	
  1231                           
  1232                           ;main.c: 14:         if(!PORTCbits.RC0) setFrequency();
  1233  001B28  A082               	btfss	3970,0,c	;volatile
  1234  001B2A  EC15  F008         	call	_setFrequency	;wreg free
  1235  001B2E                     l4042:
  1236  001B2E  FFFF               	dw	65535	; assembler added errata NOP
  1237                           
  1238                           ;main.c: 16:     beep(100);
  1239  001B30  0E00               	movlw	0
  1240  001B32  0100               	movlb	0	; () banked
  1241  001B34  6F87               	movwf	(beep@ms+1)& (0+255),b
  1242  001B36  0E64               	movlw	100
  1243  001B38  6F86               	movwf	beep@ms& (0+255),b
  1244  001B3A  ECC9  F011         	call	_beep	;wreg free
  1245  001B3E                     l4048:
  1246  001B3E  FFFF               	dw	65535	; assembler added errata NOP
  1247                           
  1248                           ;main.c: 18:         sprintf(lineOne,"Fijando Fcia.   ");
  1249  001B40  0E31               	movlw	low _lineOne
  1250  001B42  0100               	movlb	0	; () banked
  1251  001B44  6FDB               	movwf	sprintf@s& (0+255),b
  1252  001B46  0E01               	movlw	high _lineOne
  1253  001B48  6FDC               	movwf	(sprintf@s+1)& (0+255),b
  1254  001B4A  0E17               	movlw	low STR_1
  1255  001B4C  6FDD               	movwf	sprintf@fmt& (0+255),b
  1256  001B4E  0E06               	movlw	high STR_1
  1257  001B50  6FDE               	movwf	(sprintf@fmt+1)& (0+255),b
  1258  001B52  ECF5  F011         	call	_sprintf	;wreg free
  1259                           
  1260                           ;main.c: 19:         _delay((unsigned long)((90)*(12000000/4000.0)));
  1261  001B56  0E02               	movlw	2
  1262  001B58  0100               	movlb	0	; () banked
  1263  001B5A  6FEC               	movwf	(??_main+1)& (0+255),b
  1264  001B5C  0E08               	movlw	8
  1265  001B5E  6FEB               	movwf	??_main& (0+255),b
  1266  001B60  0E25               	movlw	37
  1267  001B62                     u3727:
  1268  001B62  FFFF               	dw	65535	; errata NOP
  1269  001B64  2EE8               	decfsz	wreg,f,c
  1270  001B66  D7FD               	bra	u3727
  1271  001B68  2FEB               	decfsz	??_main& (0+255),f,b
  1272  001B6A  D7FB               	bra	u3727
  1273  001B6C  2FEC               	decfsz	(??_main+1)& (0+255),f,b
  1274  001B6E  D7F9               	bra	u3727
  1275  001B70  D000               	nop2	
  1276  001B72  F000               	nop	
  1277                           
  1278                           ;main.c: 20:     }
  1279  001B74  0100               	movlb	0	; () banked
  1280  001B76  2BED               	incf	main@i& (0+255),f,b
  1281                           
  1282                           ; BSR set to: 0
  1283  001B78  0E31               	movlw	49
  1284  001B7A  65ED               	cpfsgt	main@i& (0+255),b
  1285  001B7C  D7E0               	goto	l4048
  1286                           
  1287                           ; BSR set to: 0
  1288                           ;main.c: 22:     sprintf(lineOne,"AMPRO      EX-FM");
  1289  001B7E  0E31               	movlw	low _lineOne
  1290  001B80  6FDB               	movwf	sprintf@s& (0+255),b
  1291  001B82  0E01               	movlw	high _lineOne
  1292  001B84  6FDC               	movwf	(sprintf@s+1)& (0+255),b
  1293  001B86  0E39               	movlw	low STR_2
  1294  001B88  6FDD               	movwf	sprintf@fmt& (0+255),b
  1295  001B8A  0E06               	movlw	high STR_2
  1296  001B8C  6FDE               	movwf	(sprintf@fmt+1)& (0+255),b
  1297  001B8E  ECF5  F011         	call	_sprintf	;wreg free
  1298  001B92                     l4058:
  1299  001B92  FFFF               	dw	65535	; assembler added errata NOP
  1300  001B94  0100               	movlb	0	; () banked
  1301  001B96  05F8               	decf	_functionalStat& (0+255),w,b
  1302  001B98  A4D8               	btfss	status,2,c
  1303  001B9A  D002               	goto	l193
  1304                           
  1305                           ; BSR set to: 0
  1306                           ;main.c: 25:             PORTAbits.RA5 = 1;
  1307  001B9C  8A80               	bsf	3968,5,c	;volatile
  1308                           
  1309                           ;main.c: 26:         }else{
  1310  001B9E  D002               	goto	l4062
  1311  001BA0                     l193:
  1312  001BA0  FFFF               	dw	65535	; assembler added errata NOP
  1313                           
  1314                           ; BSR set to: 0
  1315                           ;main.c: 27:             PORTAbits.RA5 = 0;
  1316  001BA2  9A80               	bcf	3968,5,c	;volatile
  1317  001BA4                     l4062:
  1318  001BA4  FFFF               	dw	65535	; assembler added errata NOP
  1319                           
  1320                           ; BSR set to: 0
  1321                           ;main.c: 29:         writeFrequency(frequency);
  1322  001BA6  C0F6  F082         	movff	_frequency,writeFrequency@f
  1323  001BAA  C0F7  F083         	movff	_frequency+1,writeFrequency@f+1
  1324  001BAE  ECE4  F00D         	call	_writeFrequency	;wreg free
  1325                           
  1326                           ;main.c: 30:         _delay((unsigned long)((10)*(12000000/4000.0)));
  1327  001BB2  0E1E               	movlw	30
  1328  001BB4  0100               	movlb	0	; () banked
  1329  001BB6  6FEB               	movwf	??_main& (0+255),b
  1330  001BB8  0E3C               	movlw	60
  1331  001BBA                     u3737:
  1332  001BBA  FFFF               	dw	65535	; errata NOP
  1333  001BBC  2EE8               	decfsz	wreg,f,c
  1334  001BBE  D7FD               	bra	u3737
  1335  001BC0  2FEB               	decfsz	??_main& (0+255),f,b
  1336  001BC2  D7FB               	bra	u3737
  1337  001BC4  F000               	nop	
  1338  001BC6  D7E5               	goto	l4058
  1339  001BC8                     __end_of_main:
  1340                           	opt callstack 0
  1341                           
  1342 ;; *************** function _setFrequency *****************
  1343 ;; Defined at:
  1344 ;;		line 147 in file "main.c"
  1345 ;; Parameters:    Size  Location     Type
  1346 ;;		None
  1347 ;; Auto vars:     Size  Location     Type
  1348 ;;		None
  1349 ;; Return value:  Size  Location     Type
  1350 ;;                  1    wreg      void 
  1351 ;; Registers used:
  1352 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1353 ;; Tracked objects:
  1354 ;;		On entry : 0/0
  1355 ;;		On exit  : 0/0
  1356 ;;		Unchanged: 0/0
  1357 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1358 ;;      Params:         0       0       0       0       0       0       0
  1359 ;;      Locals:         0       0       0       0       0       0       0
  1360 ;;      Temps:          0       2       0       0       0       0       0
  1361 ;;      Totals:         0       2       0       0       0       0       0
  1362 ;;Total ram usage:        2 bytes
  1363 ;; Hardware stack levels used:    1
  1364 ;; Hardware stack levels required when called:   18
  1365 ;; This function calls:
  1366 ;;		_beep
  1367 ;;		_setData
  1368 ;;		_sprintf
  1369 ;;		_writeFrequency
  1370 ;; This function is called by:
  1371 ;;		_main
  1372 ;; This function uses a non-reentrant model
  1373 ;;
  1374                           
  1375                           	psect	text1
  1376  00102A                     __ptext1:
  1377                           	opt callstack 0
  1378  00102A                     _setFrequency:
  1379                           	opt callstack 0
  1380  00102A  FFFF               	dw	65535	; assembler added errata NOP
  1381                           
  1382                           ;main.c: 148:     sprintf(lineOne,"Seleccione Fcia.");
  1383                           
  1384                           ;incstack = 0
  1385  00102C  0E31               	movlw	low _lineOne
  1386  00102E  0100               	movlb	0	; () banked
  1387  001030  6FDB               	movwf	sprintf@s& (0+255),b
  1388  001032  0E01               	movlw	high _lineOne
  1389  001034  6FDC               	movwf	(sprintf@s+1)& (0+255),b
  1390  001036  0E28               	movlw	low STR_3
  1391  001038  6FDD               	movwf	sprintf@fmt& (0+255),b
  1392  00103A  0E06               	movlw	high STR_3
  1393  00103C  6FDE               	movwf	(sprintf@fmt+1)& (0+255),b
  1394  00103E  ECF5  F011         	call	_sprintf	;wreg free
  1395                           
  1396                           ;main.c: 149:     beep(200);
  1397  001042  0E00               	movlw	0
  1398  001044  0100               	movlb	0	; () banked
  1399  001046  6F87               	movwf	(beep@ms+1)& (0+255),b
  1400  001048  0EC8               	movlw	200
  1401  00104A  6F86               	movwf	beep@ms& (0+255),b
  1402  00104C  ECC9  F011         	call	_beep	;wreg free
  1403  001050                     l244:
  1404  001050  FFFF               	dw	65535	; assembler added errata NOP
  1405  001052  A082               	btfss	3970,0,c	;volatile
  1406  001054  D7FD               	goto	l244
  1407  001056                     u3390:
  1408  001056  FFFF               	dw	65535	; assembler added errata NOP
  1409                           
  1410                           ;main.c: 153:         if(!PORTCbits.RC1){
  1411                           
  1412                           ;main.c: 152:     while(1){
  1413  001058  B282               	btfsc	3970,1,c	;volatile
  1414  00105A  D04A               	goto	u3450
  1415                           
  1416                           ;main.c: 154:             if(frequency < 1080)frequency++;
  1417  00105C  0E38               	movlw	56
  1418  00105E  0100               	movlb	0	; () banked
  1419  001060  5DF6               	subwf	_frequency& (0+255),w,b
  1420  001062  0E04               	movlw	4
  1421  001064  59F7               	subwfb	(_frequency+1)& (0+255),w,b
  1422  001066  B0D8               	btfsc	status,0,c
  1423  001068  D002               	goto	l3910
  1424                           
  1425                           ; BSR set to: 0
  1426  00106A  4BF6               	infsnz	_frequency& (0+255),f,b
  1427  00106C  2BF7               	incf	(_frequency+1)& (0+255),f,b
  1428  00106E                     l3910:
  1429  00106E  FFFF               	dw	65535	; assembler added errata NOP
  1430                           
  1431                           ; BSR set to: 0
  1432                           ;main.c: 155:             if(frequency > 1080)frequency = 1080;
  1433  001070  0E39               	movlw	57
  1434  001072  5DF6               	subwf	_frequency& (0+255),w,b
  1435  001074  0E04               	movlw	4
  1436  001076  59F7               	subwfb	(_frequency+1)& (0+255),w,b
  1437  001078  A0D8               	btfss	status,0,c
  1438  00107A  D004               	goto	l3914
  1439                           
  1440                           ; BSR set to: 0
  1441  00107C  0E04               	movlw	4
  1442  00107E  6FF7               	movwf	(_frequency+1)& (0+255),b
  1443  001080  0E38               	movlw	56
  1444  001082  6FF6               	movwf	_frequency& (0+255),b
  1445  001084                     l3914:
  1446  001084  FFFF               	dw	65535	; assembler added errata NOP
  1447                           
  1448                           ; BSR set to: 0
  1449                           ;main.c: 156:             beep(100);
  1450  001086  0E00               	movlw	0
  1451  001088  6F87               	movwf	(beep@ms+1)& (0+255),b
  1452  00108A  0E64               	movlw	100
  1453  00108C  6F86               	movwf	beep@ms& (0+255),b
  1454  00108E  ECC9  F011         	call	_beep	;wreg free
  1455                           
  1456                           ;main.c: 157:             _delay((unsigned long)((500)*(12000000/4000.0)));
  1457  001092  0E06               	movlw	6
  1458  001094  0100               	movlb	0	; () banked
  1459  001096  6FEA               	movwf	(??_setFrequency+1)& (0+255),b
  1460  001098  0EB6               	movlw	182
  1461  00109A  6FE9               	movwf	??_setFrequency& (0+255),b
  1462  00109C  0EF8               	movlw	248
  1463  00109E                     u3747:
  1464  00109E  FFFF               	dw	65535	; errata NOP
  1465  0010A0  2EE8               	decfsz	wreg,f,c
  1466  0010A2  D7FD               	bra	u3747
  1467  0010A4  2FE9               	decfsz	??_setFrequency& (0+255),f,b
  1468  0010A6  D7FB               	bra	u3747
  1469  0010A8  2FEA               	decfsz	(??_setFrequency+1)& (0+255),f,b
  1470  0010AA  D7F9               	bra	u3747
  1471  0010AC  D000               	nop2	
  1472  0010AE  F000               	nop	
  1473                           
  1474                           ;main.c: 158:             while(!PORTCbits.RC1){
  1475  0010B0  D01C               	goto	l3928
  1476  0010B2                     l3918:
  1477  0010B2  FFFF               	dw	65535	; assembler added errata NOP
  1478                           
  1479                           ;main.c: 159:                 if(frequency < 1080)frequency++;
  1480  0010B4  0E38               	movlw	56
  1481  0010B6  0100               	movlb	0	; () banked
  1482  0010B8  5DF6               	subwf	_frequency& (0+255),w,b
  1483  0010BA  0E04               	movlw	4
  1484  0010BC  59F7               	subwfb	(_frequency+1)& (0+255),w,b
  1485  0010BE  B0D8               	btfsc	status,0,c
  1486  0010C0  D002               	goto	l3922
  1487                           
  1488                           ; BSR set to: 0
  1489  0010C2  4BF6               	infsnz	_frequency& (0+255),f,b
  1490  0010C4  2BF7               	incf	(_frequency+1)& (0+255),f,b
  1491  0010C6                     l3922:
  1492  0010C6  FFFF               	dw	65535	; assembler added errata NOP
  1493                           
  1494                           ; BSR set to: 0
  1495                           ;main.c: 160:                 if(frequency > 1080)frequency = 1080;
  1496  0010C8  0E39               	movlw	57
  1497  0010CA  5DF6               	subwf	_frequency& (0+255),w,b
  1498  0010CC  0E04               	movlw	4
  1499  0010CE  59F7               	subwfb	(_frequency+1)& (0+255),w,b
  1500  0010D0  A0D8               	btfss	status,0,c
  1501  0010D2  D004               	goto	l3926
  1502                           
  1503                           ; BSR set to: 0
  1504  0010D4  0E04               	movlw	4
  1505  0010D6  6FF7               	movwf	(_frequency+1)& (0+255),b
  1506  0010D8  0E38               	movlw	56
  1507  0010DA  6FF6               	movwf	_frequency& (0+255),b
  1508  0010DC                     l3926:
  1509  0010DC  FFFF               	dw	65535	; assembler added errata NOP
  1510                           
  1511                           ; BSR set to: 0
  1512                           ;main.c: 161:                 beep(100);
  1513  0010DE  0E00               	movlw	0
  1514  0010E0  6F87               	movwf	(beep@ms+1)& (0+255),b
  1515  0010E2  0E64               	movlw	100
  1516  0010E4  6F86               	movwf	beep@ms& (0+255),b
  1517  0010E6  ECC9  F011         	call	_beep	;wreg free
  1518  0010EA                     l3928:
  1519  0010EA  FFFF               	dw	65535	; assembler added errata NOP
  1520                           
  1521                           ;main.c: 158:             while(!PORTCbits.RC1){
  1522  0010EC  A282               	btfss	3970,1,c	;volatile
  1523  0010EE  D7E1               	goto	l3918
  1524  0010F0                     u3450:
  1525  0010F0  FFFF               	dw	65535	; assembler added errata NOP
  1526                           
  1527                           ;main.c: 165:         if(!PORTCbits.RC2){
  1528                           
  1529                           ;main.c: 163:         }
  1530  0010F2  B482               	btfsc	3970,2,c	;volatile
  1531  0010F4  D04C               	goto	u3510
  1532                           
  1533                           ;main.c: 166:             if(frequency > 880)frequency--;
  1534  0010F6  0E71               	movlw	113
  1535  0010F8  0100               	movlb	0	; () banked
  1536  0010FA  5DF6               	subwf	_frequency& (0+255),w,b
  1537  0010FC  0E03               	movlw	3
  1538  0010FE  59F7               	subwfb	(_frequency+1)& (0+255),w,b
  1539  001100  A0D8               	btfss	status,0,c
  1540  001102  D003               	goto	l3934
  1541                           
  1542                           ; BSR set to: 0
  1543  001104  07F6               	decf	_frequency& (0+255),f,b
  1544  001106  A0D8               	btfss	status,0,c
  1545  001108  07F7               	decf	(_frequency+1)& (0+255),f,b
  1546  00110A                     l3934:
  1547  00110A  FFFF               	dw	65535	; assembler added errata NOP
  1548                           
  1549                           ; BSR set to: 0
  1550                           ;main.c: 167:             if(frequency < 880)frequency = 880;
  1551  00110C  0E70               	movlw	112
  1552  00110E  5DF6               	subwf	_frequency& (0+255),w,b
  1553  001110  0E03               	movlw	3
  1554  001112  59F7               	subwfb	(_frequency+1)& (0+255),w,b
  1555  001114  B0D8               	btfsc	status,0,c
  1556  001116  D004               	goto	l3938
  1557                           
  1558                           ; BSR set to: 0
  1559  001118  0E03               	movlw	3
  1560  00111A  6FF7               	movwf	(_frequency+1)& (0+255),b
  1561  00111C  0E70               	movlw	112
  1562  00111E  6FF6               	movwf	_frequency& (0+255),b
  1563  001120                     l3938:
  1564  001120  FFFF               	dw	65535	; assembler added errata NOP
  1565                           
  1566                           ; BSR set to: 0
  1567                           ;main.c: 168:             beep(100);
  1568  001122  0E00               	movlw	0
  1569  001124  6F87               	movwf	(beep@ms+1)& (0+255),b
  1570  001126  0E64               	movlw	100
  1571  001128  6F86               	movwf	beep@ms& (0+255),b
  1572  00112A  ECC9  F011         	call	_beep	;wreg free
  1573                           
  1574                           ;main.c: 169:             _delay((unsigned long)((500)*(12000000/4000.0)));
  1575  00112E  0E06               	movlw	6
  1576  001130  0100               	movlb	0	; () banked
  1577  001132  6FEA               	movwf	(??_setFrequency+1)& (0+255),b
  1578  001134  0EB6               	movlw	182
  1579  001136  6FE9               	movwf	??_setFrequency& (0+255),b
  1580  001138  0EF8               	movlw	248
  1581  00113A                     u3757:
  1582  00113A  FFFF               	dw	65535	; errata NOP
  1583  00113C  2EE8               	decfsz	wreg,f,c
  1584  00113E  D7FD               	bra	u3757
  1585  001140  2FE9               	decfsz	??_setFrequency& (0+255),f,b
  1586  001142  D7FB               	bra	u3757
  1587  001144  2FEA               	decfsz	(??_setFrequency+1)& (0+255),f,b
  1588  001146  D7F9               	bra	u3757
  1589  001148  D000               	nop2	
  1590  00114A  F000               	nop	
  1591                           
  1592                           ;main.c: 170:             while(!PORTCbits.RC2){
  1593  00114C  D01D               	goto	l3952
  1594  00114E                     l3942:
  1595  00114E  FFFF               	dw	65535	; assembler added errata NOP
  1596                           
  1597                           ;main.c: 171:                 if(frequency > 880)frequency--;
  1598  001150  0E71               	movlw	113
  1599  001152  0100               	movlb	0	; () banked
  1600  001154  5DF6               	subwf	_frequency& (0+255),w,b
  1601  001156  0E03               	movlw	3
  1602  001158  59F7               	subwfb	(_frequency+1)& (0+255),w,b
  1603  00115A  A0D8               	btfss	status,0,c
  1604  00115C  D003               	goto	l3946
  1605                           
  1606                           ; BSR set to: 0
  1607  00115E  07F6               	decf	_frequency& (0+255),f,b
  1608  001160  A0D8               	btfss	status,0,c
  1609  001162  07F7               	decf	(_frequency+1)& (0+255),f,b
  1610  001164                     l3946:
  1611  001164  FFFF               	dw	65535	; assembler added errata NOP
  1612                           
  1613                           ; BSR set to: 0
  1614                           ;main.c: 172:                 if(frequency < 880)frequency = 880;
  1615  001166  0E70               	movlw	112
  1616  001168  5DF6               	subwf	_frequency& (0+255),w,b
  1617  00116A  0E03               	movlw	3
  1618  00116C  59F7               	subwfb	(_frequency+1)& (0+255),w,b
  1619  00116E  B0D8               	btfsc	status,0,c
  1620  001170  D004               	goto	l3950
  1621                           
  1622                           ; BSR set to: 0
  1623  001172  0E03               	movlw	3
  1624  001174  6FF7               	movwf	(_frequency+1)& (0+255),b
  1625  001176  0E70               	movlw	112
  1626  001178  6FF6               	movwf	_frequency& (0+255),b
  1627  00117A                     l3950:
  1628  00117A  FFFF               	dw	65535	; assembler added errata NOP
  1629                           
  1630                           ; BSR set to: 0
  1631                           ;main.c: 173:                 beep(100);
  1632  00117C  0E00               	movlw	0
  1633  00117E  6F87               	movwf	(beep@ms+1)& (0+255),b
  1634  001180  0E64               	movlw	100
  1635  001182  6F86               	movwf	beep@ms& (0+255),b
  1636  001184  ECC9  F011         	call	_beep	;wreg free
  1637  001188                     l3952:
  1638  001188  FFFF               	dw	65535	; assembler added errata NOP
  1639                           
  1640                           ;main.c: 170:             while(!PORTCbits.RC2){
  1641  00118A  A482               	btfss	3970,2,c	;volatile
  1642  00118C  D7E0               	goto	l3942
  1643  00118E                     u3510:
  1644  00118E  FFFF               	dw	65535	; assembler added errata NOP
  1645                           
  1646                           ;main.c: 177:         if(!PORTCbits.RC0){
  1647                           
  1648                           ;main.c: 175:         }
  1649  001190  B082               	btfsc	3970,0,c	;volatile
  1650  001192  D761               	goto	u3390
  1651                           
  1652                           ;main.c: 178:             _delay((unsigned long)((500)*(12000000/4000.0)));
  1653  001194  0E06               	movlw	6
  1654  001196  0100               	movlb	0	; () banked
  1655  001198  6FEA               	movwf	(??_setFrequency+1)& (0+255),b
  1656  00119A  0EB6               	movlw	182
  1657  00119C  6FE9               	movwf	??_setFrequency& (0+255),b
  1658  00119E  0EF8               	movlw	248
  1659  0011A0                     u3767:
  1660  0011A0  FFFF               	dw	65535	; errata NOP
  1661  0011A2  2EE8               	decfsz	wreg,f,c
  1662  0011A4  D7FD               	bra	u3767
  1663  0011A6  2FE9               	decfsz	??_setFrequency& (0+255),f,b
  1664  0011A8  D7FB               	bra	u3767
  1665  0011AA  2FEA               	decfsz	(??_setFrequency+1)& (0+255),f,b
  1666  0011AC  D7F9               	bra	u3767
  1667  0011AE  D000               	nop2	
  1668  0011B0  F000               	nop	
  1669                           
  1670                           ;main.c: 179:             if(!PORTCbits.RC0){
  1671  0011B2  B082               	btfsc	3970,0,c	;volatile
  1672  0011B4  D750               	goto	u3390
  1673                           
  1674                           ;main.c: 180:                 setData(1);
  1675  0011B6  0E01               	movlw	1
  1676  0011B8  EC25  F010         	call	_setData
  1677                           
  1678                           ;main.c: 181:                 beep(1000);
  1679  0011BC  0E03               	movlw	3
  1680  0011BE  0100               	movlb	0	; () banked
  1681  0011C0  6F87               	movwf	(beep@ms+1)& (0+255),b
  1682  0011C2  0EE8               	movlw	232
  1683  0011C4  6F86               	movwf	beep@ms& (0+255),b
  1684  0011C6  ECC9  F011         	call	_beep	;wreg free
  1685                           
  1686                           ;main.c: 186:     writeFrequency(frequency);
  1687                           
  1688                           ;main.c: 182:                 break;
  1689  0011CA  C0F6  F082         	movff	_frequency,writeFrequency@f
  1690  0011CE  C0F7  F083         	movff	_frequency+1,writeFrequency@f+1
  1691  0011D2  ECE4  F00D         	call	_writeFrequency	;wreg free
  1692  0011D6  0012               	return		;funcret
  1693  0011D8  FFFF               	dw	65535	; errata NOP
  1694  0011DA                     __end_of_setFrequency:
  1695                           	opt callstack 0
  1696                           
  1697 ;; *************** function _writeFrequency *****************
  1698 ;; Defined at:
  1699 ;;		line 15 in file "bh1514.c"
  1700 ;; Parameters:    Size  Location     Type
  1701 ;;  f               2    2[BANK0 ] unsigned int 
  1702 ;; Auto vars:     Size  Location     Type
  1703 ;;  r               2    9[BANK0 ] unsigned int 
  1704 ;;  buffer          2    7[BANK0 ] unsigned int 
  1705 ;;  i               1   11[BANK0 ] unsigned char 
  1706 ;; Return value:  Size  Location     Type
  1707 ;;                  1    wreg      void 
  1708 ;; Registers used:
  1709 ;;		wreg, status,2, status,0, cstack
  1710 ;; Tracked objects:
  1711 ;;		On entry : 0/0
  1712 ;;		On exit  : 0/0
  1713 ;;		Unchanged: 0/0
  1714 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1715 ;;      Params:         0       2       0       0       0       0       0
  1716 ;;      Locals:         0       5       0       0       0       0       0
  1717 ;;      Temps:          0       3       0       0       0       0       0
  1718 ;;      Totals:         0      10       0       0       0       0       0
  1719 ;;Total ram usage:       10 bytes
  1720 ;; Hardware stack levels used:    1
  1721 ;; Hardware stack levels required when called:   11
  1722 ;; This function calls:
  1723 ;;		_codFreq
  1724 ;; This function is called by:
  1725 ;;		_main
  1726 ;;		_setFrequency
  1727 ;; This function uses a non-reentrant model
  1728 ;;
  1729                           
  1730                           	psect	text2
  1731  001BC8                     __ptext2:
  1732                           	opt callstack 0
  1733  001BC8                     _writeFrequency:
  1734                           	opt callstack 0
  1735  001BC8  FFFF               	dw	65535	; assembler added errata NOP
  1736                           
  1737                           ;bh1514.c: 16:     unsigned int buffer;;bh1514.c: 17:     unsigned int r;;bh1514.c: 18: 
      +                              unsigned char i;;bh1514.c: 20:     buffer = codFreq(f);
  1738                           
  1739                           ;incstack = 0
  1740  001BCA  C082  F080         	movff	writeFrequency@f,codFreq@f
  1741  001BCE  C083  F081         	movff	writeFrequency@f+1,codFreq@f+1
  1742  001BD2  EC06  F015         	call	_codFreq	;wreg free
  1743  001BD6  C080  F087         	movff	?_codFreq,writeFrequency@buffer
  1744  001BDA  C081  F088         	movff	?_codFreq+1,writeFrequency@buffer+1
  1745                           
  1746                           ;bh1514.c: 22:     PORTEbits.RE0 = 1;
  1747  001BDE  8084               	bsf	3972,0,c	;volatile
  1748                           
  1749                           ;bh1514.c: 23:     _delay((unsigned long)((1)*(12000000/4000.0)));
  1750  001BE0  0E03               	movlw	3
  1751  001BE2  0100               	movlb	0	; () banked
  1752  001BE4  6F84               	movwf	??_writeFrequency& (0+255),b
  1753  001BE6  0EEB               	movlw	235
  1754  001BE8                     u3777:
  1755  001BE8  FFFF               	dw	65535	; errata NOP
  1756  001BEA  2EE8               	decfsz	wreg,f,c
  1757  001BEC  D7FD               	bra	u3777
  1758  001BEE  2F84               	decfsz	??_writeFrequency& (0+255),f,b
  1759  001BF0  D7FB               	bra	u3777
  1760  001BF2  D000               	nop2	
  1761  001BF4  F000               	nop	
  1762                           
  1763                           ;bh1514.c: 24:     for(i = 0; i < 16; i++){
  1764  001BF6  0E00               	movlw	0
  1765  001BF8  0100               	movlb	0	; () banked
  1766  001BFA  6F8B               	movwf	writeFrequency@i& (0+255),b
  1767  001BFC                     l3742:
  1768  001BFC  FFFF               	dw	65535	; assembler added errata NOP
  1769                           
  1770                           ; BSR set to: 0
  1771                           ;bh1514.c: 25:         r = (buffer >> i) & 0x0001;
  1772  001BFE  C08B  F084         	movff	writeFrequency@i,??_writeFrequency
  1773  001C02  C087  F085         	movff	writeFrequency@buffer,??_writeFrequency+1
  1774  001C06  C088  F086         	movff	writeFrequency@buffer+1,??_writeFrequency+2
  1775  001C0A  2B84               	incf	??_writeFrequency& (0+255),f,b
  1776  001C0C  D004               	goto	u3264
  1777  001C0E                     u3265:
  1778  001C0E  FFFF               	dw	65535	; assembler added errata NOP
  1779  001C10  90D8               	bcf	status,0,c
  1780  001C12  3386               	rrcf	(??_writeFrequency+2)& (0+255),f,b
  1781  001C14  3385               	rrcf	(??_writeFrequency+1)& (0+255),f,b
  1782  001C16                     u3264:
  1783  001C16  FFFF               	dw	65535	; assembler added errata NOP
  1784  001C18  2F84               	decfsz	??_writeFrequency& (0+255),f,b
  1785  001C1A  D7F9               	goto	u3265
  1786  001C1C  0E01               	movlw	1
  1787  001C1E  0100               	movlb	0	; () banked
  1788  001C20  1585               	andwf	(??_writeFrequency+1)& (0+255),w,b
  1789  001C22  6F89               	movwf	writeFrequency@r& (0+255),b
  1790  001C24  6B8A               	clrf	(writeFrequency@r+1)& (0+255),b
  1791                           
  1792                           ;bh1514.c: 26:         if(r == 1){
  1793  001C26  0589               	decf	writeFrequency@r& (0+255),w,b
  1794  001C28  118A               	iorwf	(writeFrequency@r+1)& (0+255),w,b
  1795  001C2A  A4D8               	btfss	status,2,c
  1796  001C2C  D002               	goto	l524
  1797                           
  1798                           ; BSR set to: 0
  1799                           ;bh1514.c: 27:             PORTEbits.RE2 = 1;
  1800  001C2E  8484               	bsf	3972,2,c	;volatile
  1801                           
  1802                           ;bh1514.c: 28:         }else{
  1803  001C30  D002               	goto	l3746
  1804  001C32                     l524:
  1805  001C32  FFFF               	dw	65535	; assembler added errata NOP
  1806                           
  1807                           ; BSR set to: 0
  1808                           ;bh1514.c: 29:             PORTEbits.RE2 = 0;
  1809  001C34  9484               	bcf	3972,2,c	;volatile
  1810  001C36                     l3746:
  1811  001C36  FFFF               	dw	65535	; assembler added errata NOP
  1812                           
  1813                           ; BSR set to: 0
  1814                           ;bh1514.c: 31:         _delay((unsigned long)((1)*(12000000/4000.0)));
  1815  001C38  0E03               	movlw	3
  1816  001C3A  0100               	movlb	0	; () banked
  1817  001C3C  6F84               	movwf	??_writeFrequency& (0+255),b
  1818  001C3E  0EEB               	movlw	235
  1819  001C40                     u3787:
  1820  001C40  FFFF               	dw	65535	; errata NOP
  1821  001C42  2EE8               	decfsz	wreg,f,c
  1822  001C44  D7FD               	bra	u3787
  1823  001C46  2F84               	decfsz	??_writeFrequency& (0+255),f,b
  1824  001C48  D7FB               	bra	u3787
  1825  001C4A  D000               	nop2	
  1826  001C4C  F000               	nop	
  1827                           
  1828                           ;bh1514.c: 32:         PORTEbits.RE1 = 1;
  1829  001C4E  8284               	bsf	3972,1,c	;volatile
  1830                           
  1831                           ;bh1514.c: 33:         _delay((unsigned long)((1)*(12000000/4000.0)));
  1832  001C50  0E03               	movlw	3
  1833  001C52  0100               	movlb	0	; () banked
  1834  001C54  6F84               	movwf	??_writeFrequency& (0+255),b
  1835  001C56  0EEB               	movlw	235
  1836  001C58                     u3797:
  1837  001C58  FFFF               	dw	65535	; errata NOP
  1838  001C5A  2EE8               	decfsz	wreg,f,c
  1839  001C5C  D7FD               	bra	u3797
  1840  001C5E  2F84               	decfsz	??_writeFrequency& (0+255),f,b
  1841  001C60  D7FB               	bra	u3797
  1842  001C62  D000               	nop2	
  1843  001C64  F000               	nop	
  1844                           
  1845                           ;bh1514.c: 34:         PORTEbits.RE1 = 0;
  1846  001C66  9284               	bcf	3972,1,c	;volatile
  1847                           
  1848                           ;bh1514.c: 35:     }
  1849  001C68  0100               	movlb	0	; () banked
  1850  001C6A  2B8B               	incf	writeFrequency@i& (0+255),f,b
  1851  001C6C  0E0F               	movlw	15
  1852  001C6E  658B               	cpfsgt	writeFrequency@i& (0+255),b
  1853  001C70  D7C5               	goto	l3742
  1854                           
  1855                           ; BSR set to: 0
  1856                           ;bh1514.c: 36:     _delay((unsigned long)((1)*(12000000/4000.0)));
  1857  001C72  0E03               	movlw	3
  1858  001C74  0100               	movlb	0	; () banked
  1859  001C76  6F84               	movwf	??_writeFrequency& (0+255),b
  1860  001C78  0EEB               	movlw	235
  1861  001C7A                     u3807:
  1862  001C7A  FFFF               	dw	65535	; errata NOP
  1863  001C7C  2EE8               	decfsz	wreg,f,c
  1864  001C7E  D7FD               	bra	u3807
  1865  001C80  2F84               	decfsz	??_writeFrequency& (0+255),f,b
  1866  001C82  D7FB               	bra	u3807
  1867  001C84  D000               	nop2	
  1868  001C86  F000               	nop	
  1869                           
  1870                           ;bh1514.c: 37:     PORTEbits.RE0 = 0;
  1871  001C88  9084               	bcf	3972,0,c	;volatile
  1872  001C8A  0012               	return		;funcret
  1873  001C8C  FFFF               	dw	65535	; errata NOP
  1874  001C8E                     __end_of_writeFrequency:
  1875                           	opt callstack 0
  1876                           
  1877 ;; *************** function _codFreq *****************
  1878 ;; Defined at:
  1879 ;;		line 6 in file "bh1514.c"
  1880 ;; Parameters:    Size  Location     Type
  1881 ;;  f               2    0[BANK0 ] unsigned int 
  1882 ;; Auto vars:     Size  Location     Type
  1883 ;;		None
  1884 ;; Return value:  Size  Location     Type
  1885 ;;                  2    0[BANK0 ] unsigned int 
  1886 ;; Registers used:
  1887 ;;		wreg, status,2, status,0
  1888 ;; Tracked objects:
  1889 ;;		On entry : 0/0
  1890 ;;		On exit  : 0/0
  1891 ;;		Unchanged: 0/0
  1892 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1893 ;;      Params:         0       2       0       0       0       0       0
  1894 ;;      Locals:         0       0       0       0       0       0       0
  1895 ;;      Temps:          0       0       0       0       0       0       0
  1896 ;;      Totals:         0       2       0       0       0       0       0
  1897 ;;Total ram usage:        2 bytes
  1898 ;; Hardware stack levels used:    1
  1899 ;; Hardware stack levels required when called:   10
  1900 ;; This function calls:
  1901 ;;		Nothing
  1902 ;; This function is called by:
  1903 ;;		_writeFrequency
  1904 ;; This function uses a non-reentrant model
  1905 ;;
  1906                           
  1907                           	psect	text3
  1908  002A0C                     __ptext3:
  1909                           	opt callstack 0
  1910  002A0C                     _codFreq:
  1911                           	opt callstack 0
  1912  002A0C  FFFF               	dw	65535	; assembler added errata NOP
  1913                           
  1914                           ;bh1514.c: 8:         f = f | 0b0100100000000000;
  1915                           
  1916                           ;incstack = 0
  1917  002A0E  0E00               	movlw	0
  1918  002A10  0100               	movlb	0	; () banked
  1919  002A12  1180               	iorwf	codFreq@f& (0+255),w,b
  1920  002A14  6F80               	movwf	codFreq@f& (0+255),b
  1921  002A16  0E48               	movlw	72
  1922  002A18  1181               	iorwf	(codFreq@f+1)& (0+255),w,b
  1923  002A1A  6F81               	movwf	(codFreq@f+1)& (0+255),b
  1924                           
  1925                           ; BSR set to: 0
  1926                           ;bh1514.c: 12:     return f;
  1927                           
  1928                           ;bh1514.c: 9:     }else{
  1929  002A1C  C080  F080         	movff	codFreq@f,?_codFreq
  1930  002A20  C081  F081         	movff	codFreq@f+1,?_codFreq+1
  1931                           
  1932                           ; BSR set to: 0
  1933  002A24  0012               	return		;funcret
  1934  002A26  FFFF               	dw	65535	; errata NOP
  1935  002A28                     __end_of_codFreq:
  1936                           	opt callstack 0
  1937                           
  1938 ;; *************** function _sprintf *****************
  1939 ;; Defined at:
  1940 ;;		line 9 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/nf_sprintf.c"
  1941 ;; Parameters:    Size  Location     Type
  1942 ;;  s               2   91[BANK0 ] PTR unsigned char 
  1943 ;;		 -> lineTwo(17), lineOne(17), 
  1944 ;;  fmt             2   93[BANK0 ] PTR const unsigned char 
  1945 ;;		 -> STR_4(18), STR_3(17), STR_2(17), STR_1(17), 
  1946 ;; Auto vars:     Size  Location     Type
  1947 ;;  f               6   99[BANK0 ] struct _IO_FILE
  1948 ;;  ap              2   97[BANK0 ] PTR void [1]
  1949 ;;		 -> ?_sprintf(2), 
  1950 ;;  ret             2    0        int 
  1951 ;; Return value:  Size  Location     Type
  1952 ;;                  2   91[BANK0 ] int 
  1953 ;; Registers used:
  1954 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1955 ;; Tracked objects:
  1956 ;;		On entry : 0/0
  1957 ;;		On exit  : 0/0
  1958 ;;		Unchanged: 0/0
  1959 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1960 ;;      Params:         0       4       0       0       0       0       0
  1961 ;;      Locals:         0      10       0       0       0       0       0
  1962 ;;      Temps:          0       0       0       0       0       0       0
  1963 ;;      Totals:         0      14       0       0       0       0       0
  1964 ;;Total ram usage:       14 bytes
  1965 ;; Hardware stack levels used:    1
  1966 ;; Hardware stack levels required when called:   17
  1967 ;; This function calls:
  1968 ;;		_vfprintf
  1969 ;; This function is called by:
  1970 ;;		_main
  1971 ;;		_setFrequency
  1972 ;; This function uses a non-reentrant model
  1973 ;;
  1974                           
  1975                           	psect	text4
  1976  0023EA                     __ptext4:
  1977                           	opt callstack 0
  1978  0023EA                     _sprintf:
  1979                           	opt callstack 0
  1980  0023EA  FFFF               	dw	65535	; assembler added errata NOP
  1981                           
  1982                           ; BSR set to: 0
  1983                           ;incstack = 0
  1984  0023EC  0EDF               	movlw	low (?_sprintf+4)
  1985  0023EE  0100               	movlb	0	; () banked
  1986  0023F0  6FE1               	movwf	sprintf@ap& (0+255),b
  1987  0023F2  0E00               	movlw	high (?_sprintf+4)
  1988  0023F4  6FE2               	movwf	(sprintf@ap+1)& (0+255),b
  1989  0023F6  C0DB  F0E3         	movff	sprintf@s,sprintf@f
  1990  0023FA  C0DC  F0E4         	movff	sprintf@s+1,sprintf@f+1
  1991                           
  1992                           ; BSR set to: 0
  1993  0023FE  0E00               	movlw	0
  1994  002400  6FE6               	movwf	(sprintf@f+3)& (0+255),b
  1995  002402  0E00               	movlw	0
  1996  002404  6FE5               	movwf	(sprintf@f+2)& (0+255),b
  1997                           
  1998                           ; BSR set to: 0
  1999  002406  0E00               	movlw	0
  2000  002408  6FE8               	movwf	(sprintf@f+5)& (0+255),b
  2001  00240A  0E00               	movlw	0
  2002  00240C  6FE7               	movwf	(sprintf@f+4)& (0+255),b
  2003                           
  2004                           ; BSR set to: 0
  2005  00240E  0EE3               	movlw	low sprintf@f
  2006  002410  6FD3               	movwf	vfprintf@fp& (0+255),b
  2007  002412  0E00               	movlw	high sprintf@f
  2008  002414  6FD4               	movwf	(vfprintf@fp+1)& (0+255),b
  2009  002416  C0DD  F0D5         	movff	sprintf@fmt,vfprintf@fmt
  2010  00241A  C0DE  F0D6         	movff	sprintf@fmt+1,vfprintf@fmt+1
  2011  00241E  0EE1               	movlw	low sprintf@ap
  2012  002420  6FD7               	movwf	vfprintf@ap& (0+255),b
  2013  002422  0E00               	movlw	high sprintf@ap
  2014  002424  6FD8               	movwf	(vfprintf@ap+1)& (0+255),b
  2015  002426  EC39  F011         	call	_vfprintf	;wreg free
  2016  00242A  0100               	movlb	0	; () banked
  2017  00242C  51E5               	movf	(sprintf@f+2)& (0+255),w,b
  2018  00242E  25DB               	addwf	sprintf@s& (0+255),w,b
  2019  002430  6ED9               	movwf	fsr2l,c
  2020  002432  51E6               	movf	(sprintf@f+3)& (0+255),w,b
  2021  002434  21DC               	addwfc	(sprintf@s+1)& (0+255),w,b
  2022  002436  6EDA               	movwf	fsr2h,c
  2023  002438  0E00               	movlw	0
  2024  00243A  6EDF               	movwf	indf2,c
  2025                           
  2026                           ; BSR set to: 0
  2027  00243C  0012               	return		;funcret
  2028  00243E  FFFF               	dw	65535	; errata NOP
  2029  002440                     __end_of_sprintf:
  2030                           	opt callstack 0
  2031                           
  2032 ;; *************** function _vfprintf *****************
  2033 ;; Defined at:
  2034 ;;		line 1368 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  2035 ;; Parameters:    Size  Location     Type
  2036 ;;  fp              2   83[BANK0 ] PTR struct _IO_FILE
  2037 ;;		 -> sprintf@f(6), 
  2038 ;;  fmt             2   85[BANK0 ] PTR const unsigned char 
  2039 ;;		 -> STR_4(18), STR_3(17), STR_2(17), STR_1(17), 
  2040 ;;  ap              2   87[BANK0 ] PTR PTR void 
  2041 ;;		 -> sprintf@ap(2), 
  2042 ;; Auto vars:     Size  Location     Type
  2043 ;;  cfmt            2   89[BANK0 ] PTR unsigned char 
  2044 ;;		 -> STR_4(18), STR_3(17), STR_2(17), STR_1(17), 
  2045 ;; Return value:  Size  Location     Type
  2046 ;;                  2   83[BANK0 ] int 
  2047 ;; Registers used:
  2048 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2049 ;; Tracked objects:
  2050 ;;		On entry : 0/0
  2051 ;;		On exit  : 0/0
  2052 ;;		Unchanged: 0/0
  2053 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2054 ;;      Params:         0       6       0       0       0       0       0
  2055 ;;      Locals:         0       2       0       0       0       0       0
  2056 ;;      Temps:          0       0       0       0       0       0       0
  2057 ;;      Totals:         0       8       0       0       0       0       0
  2058 ;;Total ram usage:        8 bytes
  2059 ;; Hardware stack levels used:    1
  2060 ;; Hardware stack levels required when called:   16
  2061 ;; This function calls:
  2062 ;;		_vfpfcnvrt
  2063 ;; This function is called by:
  2064 ;;		_sprintf
  2065 ;; This function uses a non-reentrant model
  2066 ;;
  2067                           
  2068                           	psect	text5
  2069  002272                     __ptext5:
  2070                           	opt callstack 0
  2071  002272                     _vfprintf:
  2072                           	opt callstack 0
  2073  002272  FFFF               	dw	65535	; assembler added errata NOP
  2074                           
  2075                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1368: int vfprintf(FILE *fp, 
      +                          const char *fmt, va_list ap);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1
      +                          369: {;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1371:     char *cfmt;;/
      +                          opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1373:     cfmt = (char *)fmt;
  2076                           
  2077                           ; BSR set to: 0
  2078                           ;incstack = 0
  2079  002274  C0D5  F0D9         	movff	vfprintf@fmt,vfprintf@cfmt
  2080  002278  C0D6  F0DA         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  2081                           
  2082                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1374:     nout = 0;
  2083  00227C  0E00               	movlw	0
  2084  00227E  0100               	movlb	0	; () banked
  2085  002280  6FEF               	movwf	(_nout+1)& (0+255),b
  2086  002282  0E00               	movlw	0
  2087  002284  6FEE               	movwf	_nout& (0+255),b
  2088                           
  2089                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
  2090  002286  D014               	goto	l3646
  2091  002288                     l3644:
  2092  002288  FFFF               	dw	65535	; assembler added errata NOP
  2093                           
  2094                           ; BSR set to: 0
  2095                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1376:         nout += vfpfcnv
      +                          rt(fp, &cfmt, ap);
  2096  00228A  C0D3  F0BF         	movff	vfprintf@fp,vfpfcnvrt@fp
  2097  00228E  C0D4  F0C0         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  2098  002292  0ED9               	movlw	low vfprintf@cfmt
  2099  002294  6FC1               	movwf	vfpfcnvrt@fmt& (0+255),b
  2100  002296  0E00               	movlw	high vfprintf@cfmt
  2101  002298  6FC2               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
  2102  00229A  C0D7  F0C3         	movff	vfprintf@ap,vfpfcnvrt@ap
  2103  00229E  C0D8  F0C4         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  2104  0022A2  EC26  F003         	call	_vfpfcnvrt	;wreg free
  2105  0022A6  0100               	movlb	0	; () banked
  2106  0022A8  51BF               	movf	?_vfpfcnvrt& (0+255),w,b
  2107  0022AA  27EE               	addwf	_nout& (0+255),f,b
  2108  0022AC  51C0               	movf	(?_vfpfcnvrt+1)& (0+255),w,b
  2109  0022AE  23EF               	addwfc	(_nout+1)& (0+255),f,b
  2110  0022B0                     l3646:
  2111  0022B0  FFFF               	dw	65535	; assembler added errata NOP
  2112                           
  2113                           ; BSR set to: 0
  2114                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
  2115  0022B2  C0D9  FFF6         	movff	vfprintf@cfmt,tblptrl
  2116  0022B6  C0DA  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  2117  0022BA                     	if	0	;tblptru may be non-zero
  2118  0022BA                     	endif
  2119  0022BA                     	if	0	;tblptru may be non-zero
  2120  0022BA                     	endif
  2121  0022BA  0008               	tblrd		*
  2122  0022BC  FFFF               	dw	65535	; errata NOP
  2123  0022BE  50F5               	movf	tablat,w,c
  2124  0022C0  0900               	iorlw	0
  2125  0022C2  A4D8               	btfss	status,2,c
  2126  0022C4  D7E1               	goto	l3644
  2127                           
  2128                           ; BSR set to: 0
  2129                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1378:     return nout;
  2130  0022C6  C0EE  F0D3         	movff	_nout,?_vfprintf
  2131  0022CA  C0EF  F0D4         	movff	_nout+1,?_vfprintf+1
  2132                           
  2133                           ; BSR set to: 0
  2134  0022CE  0012               	return		;funcret
  2135  0022D0  FFFF               	dw	65535	; errata NOP
  2136  0022D2                     __end_of_vfprintf:
  2137                           	opt callstack 0
  2138                           
  2139 ;; *************** function _vfpfcnvrt *****************
  2140 ;; Defined at:
  2141 ;;		line 670 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  2142 ;; Parameters:    Size  Location     Type
  2143 ;;  fp              2   63[BANK0 ] PTR struct _IO_FILE
  2144 ;;		 -> sprintf@f(6), 
  2145 ;;  fmt             2   65[BANK0 ] PTR PTR unsigned char 
  2146 ;;		 -> vfprintf@cfmt(2), 
  2147 ;;  ap              2   67[BANK0 ] PTR PTR void 
  2148 ;;		 -> sprintf@ap(2), 
  2149 ;; Auto vars:     Size  Location     Type
  2150 ;;  ll              8   73[BANK0 ] long long 
  2151 ;;  llu             8    0        unsigned long long 
  2152 ;;  f               4    0        unsigned long long 
  2153 ;;  vp              3    0        PTR void 
  2154 ;;  ct              3    0        unsigned char [3]
  2155 ;;  cp              3    0        PTR unsigned char 
  2156 ;;  i               2    0        int 
  2157 ;;  done            2    0        int 
  2158 ;;  c               1    0        unsigned char 
  2159 ;; Return value:  Size  Location     Type
  2160 ;;                  2   63[BANK0 ] int 
  2161 ;; Registers used:
  2162 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2163 ;; Tracked objects:
  2164 ;;		On entry : 0/0
  2165 ;;		On exit  : 0/0
  2166 ;;		Unchanged: 0/0
  2167 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2168 ;;      Params:         0       6       0       0       0       0       0
  2169 ;;      Locals:         0      10       0       0       0       0       0
  2170 ;;      Temps:          0       4       0       0       0       0       0
  2171 ;;      Totals:         0      20       0       0       0       0       0
  2172 ;;Total ram usage:       20 bytes
  2173 ;; Hardware stack levels used:    1
  2174 ;; Hardware stack levels required when called:   15
  2175 ;; This function calls:
  2176 ;;		_atoi
  2177 ;;		_dtoa
  2178 ;;		_fputc
  2179 ;;		_isdigit
  2180 ;; This function is called by:
  2181 ;;		_vfprintf
  2182 ;; This function uses a non-reentrant model
  2183 ;;
  2184                           
  2185                           	psect	text6
  2186  00064C                     __ptext6:
  2187                           	opt callstack 0
  2188  00064C                     _vfpfcnvrt:
  2189                           	opt callstack 0
  2190  00064C  FFFF               	dw	65535	; assembler added errata NOP
  2191                           
  2192                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 670: static int vfpfcnvrt(FIL
      +                          E *fp, char *fmt[], va_list ap);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c
      +                          : 671: {;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 672:     char c, *cp,
      +                           ct[3];;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 673:     int done, i;;
      +                          /opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 674:     long long ll;;/opt/mi
      +                          crochip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 675:     unsigned long long llu;
  2193                           
  2194                           ; BSR set to: 0
  2195                           ;incstack = 0
  2196  00064E  C0C1  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2197  000652  C0C2  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2198  000656  CFDE FFF6          	movff	postinc2,tblptrl
  2199  00065A  CFDD FFF7          	movff	postdec2,tblptrh
  2200  00065E                     	if	0	;tblptru may be non-zero
  2201  00065E                     	endif
  2202  00065E                     	if	0	;tblptru may be non-zero
  2203  00065E                     	endif
  2204  00065E  0008               	tblrd		*
  2205  000660  FFFF               	dw	65535	; errata NOP
  2206  000662  50F5               	movf	tablat,w,c
  2207  000664  0A25               	xorlw	37
  2208  000666  A4D8               	btfss	status,2,c
  2209  000668  D114               	goto	l3454
  2210                           
  2211                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 681:         ++*fmt;
  2212  00066A  C0C1  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2213  00066E  C0C2  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2214  000672  2ADE               	incf	postinc2,f,c
  2215  000674  0E00               	movlw	0
  2216  000676  22DD               	addwfc	postdec2,f,c
  2217                           
  2218                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 683:         flags = width = 
      +                          0;
  2219  000678  0E00               	movlw	0
  2220  00067A  0100               	movlb	0	; () banked
  2221  00067C  6FF1               	movwf	(_width+1)& (0+255),b
  2222  00067E  0E00               	movlw	0
  2223  000680  6FF0               	movwf	_width& (0+255),b
  2224  000682  C0F0  F0F4         	movff	_width,_flags
  2225  000686  C0F1  F0F5         	movff	_width+1,_flags+1
  2226                           
  2227                           ; BSR set to: 0
  2228                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 684:         prec = -1;
  2229  00068A  69F2               	setf	_prec& (0+255),b
  2230  00068C  69F3               	setf	(_prec+1)& (0+255),b
  2231                           
  2232                           ; BSR set to: 0
  2233                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 723:         if ((*fmt)[0] ==
      +                           '*') {
  2234  00068E  C0C1  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2235  000692  C0C2  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2236  000696  CFDE FFF6          	movff	postinc2,tblptrl
  2237  00069A  CFDD FFF7          	movff	postdec2,tblptrh
  2238  00069E                     	if	0	;tblptru may be non-zero
  2239  00069E                     	endif
  2240  00069E                     	if	0	;tblptru may be non-zero
  2241  00069E                     	endif
  2242  00069E  0008               	tblrd		*
  2243  0006A0  FFFF               	dw	65535	; errata NOP
  2244  0006A2  50F5               	movf	tablat,w,c
  2245  0006A4  0A2A               	xorlw	42
  2246  0006A6  A4D8               	btfss	status,2,c
  2247  0006A8  D023               	goto	l3418
  2248                           
  2249                           ; BSR set to: 0
  2250                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 724:             ++*fmt;
  2251  0006AA  C0C1  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2252  0006AE  C0C2  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2253  0006B2  2ADE               	incf	postinc2,f,c
  2254  0006B4  0E00               	movlw	0
  2255  0006B6  22DD               	addwfc	postdec2,f,c
  2256                           
  2257                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 725:             width = (*(i
      +                          nt *)__va_arg(*(int **)ap, (int)0));
  2258  0006B8  C0C3  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2259  0006BC  C0C4  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2260  0006C0  CFDF F0C5          	movff	indf2,??_vfpfcnvrt
  2261  0006C4  0E02               	movlw	2
  2262  0006C6  26DE               	addwf	postinc2,f,c
  2263  0006C8  CFDF F0C6          	movff	indf2,??_vfpfcnvrt+1
  2264  0006CC  0E00               	movlw	0
  2265  0006CE  22DD               	addwfc	postdec2,f,c
  2266  0006D0  C0C5  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2267  0006D4  C0C6  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2268  0006D8  CFDE F0F0          	movff	postinc2,_width
  2269  0006DC  CFDD F0F1          	movff	postdec2,_width+1
  2270                           
  2271                           ; BSR set to: 0
  2272                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 726:             if (width < 
      +                          0) {
  2273  0006E0  AFF1               	btfss	(_width+1)& (0+255),7,b
  2274  0006E2  D046               	goto	u2950
  2275                           
  2276                           ; BSR set to: 0
  2277                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 727:                 flags |=
      +                           (1 << 0);
  2278  0006E4  81F4               	bsf	_flags& (0+255),0,b
  2279                           
  2280                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 728:                 width = 
      +                          -width;
  2281  0006E6  6DF0               	negf	_width& (0+255),b
  2282  0006E8  1FF1               	comf	(_width+1)& (0+255),f,b
  2283  0006EA  B0D8               	btfsc	status,0,c
  2284  0006EC  2BF1               	incf	(_width+1)& (0+255),f,b
  2285  0006EE  D040               	goto	u2950
  2286  0006F0                     l3418:
  2287  0006F0  FFFF               	dw	65535	; assembler added errata NOP
  2288                           
  2289                           ; BSR set to: 0
  2290                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 731:             width = atoi
      +                          (*fmt);
  2291  0006F2  C0C1  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2292  0006F6  C0C2  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2293  0006FA  CFDE F087          	movff	postinc2,atoi@s
  2294  0006FE  CFDD F088          	movff	postdec2,atoi@s+1
  2295  000702  ECED  F008         	call	_atoi	;wreg free
  2296  000706  C087  F0F0         	movff	?_atoi,_width
  2297  00070A  C088  F0F1         	movff	?_atoi+1,_width+1
  2298                           
  2299                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 732:             while ((0 ? 
      +                          isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  2300  00070E  D008               	goto	l3422
  2301  000710                     l3420:
  2302  000710  FFFF               	dw	65535	; assembler added errata NOP
  2303                           
  2304                           ; BSR set to: 0
  2305                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 733:                 ++*fmt;
  2306  000712  C0C1  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2307  000716  C0C2  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2308  00071A  2ADE               	incf	postinc2,f,c
  2309  00071C  0E00               	movlw	0
  2310  00071E  22DD               	addwfc	postdec2,f,c
  2311  000720                     l3422:
  2312  000720  FFFF               	dw	65535	; assembler added errata NOP
  2313  000722  0ED0               	movlw	208
  2314  000724  0100               	movlb	0	; () banked
  2315  000726  6FC5               	movwf	??_vfpfcnvrt& (0+255),b
  2316  000728  0EFF               	movlw	255
  2317  00072A  6FC6               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  2318  00072C  C0C1  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2319  000730  C0C2  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2320  000734  CFDE FFF6          	movff	postinc2,tblptrl
  2321  000738  CFDD FFF7          	movff	postdec2,tblptrh
  2322  00073C                     	if	0	;tblptru may be non-zero
  2323  00073C                     	endif
  2324  00073C                     	if	0	;tblptru may be non-zero
  2325  00073C                     	endif
  2326  00073C  0008               	tblrd		*
  2327  00073E  FFFF               	dw	65535	; errata NOP
  2328  000740  50F5               	movf	tablat,w,c
  2329  000742  6FC7               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  2330  000744  6BC8               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  2331  000746  51C5               	movf	??_vfpfcnvrt& (0+255),w,b
  2332  000748  27C7               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  2333  00074A  51C6               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  2334  00074C  23C8               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  2335  00074E  51C8               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  2336  000750  E106               	bnz	u2930
  2337  000752  0E0A               	movlw	10
  2338  000754  5DC7               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  2339  000756  B0D8               	btfsc	status,0,c
  2340  000758  D002               	goto	u2930
  2341  00075A  0E01               	movlw	1
  2342  00075C  D002               	goto	u2940
  2343  00075E                     u2930:
  2344  00075E  FFFF               	dw	65535	; assembler added errata NOP
  2345  000760  0E00               	movlw	0
  2346  000762                     u2940:
  2347  000762  FFFF               	dw	65535	; assembler added errata NOP
  2348  000764  6FD1               	movwf	_vfpfcnvrt$1042& (0+255),b
  2349  000766  6BD2               	clrf	(_vfpfcnvrt$1042+1)& (0+255),b
  2350                           
  2351                           ; BSR set to: 0
  2352  000768  51D1               	movf	_vfpfcnvrt$1042& (0+255),w,b
  2353  00076A  11D2               	iorwf	(_vfpfcnvrt$1042+1)& (0+255),w,b
  2354  00076C  A4D8               	btfss	status,2,c
  2355  00076E  D7D0               	goto	l3420
  2356  000770                     u2950:
  2357  000770  FFFF               	dw	65535	; assembler added errata NOP
  2358                           
  2359                           ; BSR set to: 0
  2360                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 825:         if ((*fmt[0] == 
      +                          'd') || (*fmt[0] == 'i')) {
  2361  000772  C0C1  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2362  000776  C0C2  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2363  00077A  CFDE FFF6          	movff	postinc2,tblptrl
  2364  00077E  CFDD FFF7          	movff	postdec2,tblptrh
  2365  000782                     	if	0	;tblptru may be non-zero
  2366  000782                     	endif
  2367  000782                     	if	0	;tblptru may be non-zero
  2368  000782                     	endif
  2369  000782  0008               	tblrd		*
  2370  000784  FFFF               	dw	65535	; errata NOP
  2371  000786  50F5               	movf	tablat,w,c
  2372  000788  0A64               	xorlw	100
  2373  00078A  B4D8               	btfsc	status,2,c
  2374  00078C  D00E               	goto	u2970
  2375                           
  2376                           ; BSR set to: 0
  2377  00078E  C0C1  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2378  000792  C0C2  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2379  000796  CFDE FFF6          	movff	postinc2,tblptrl
  2380  00079A  CFDD FFF7          	movff	postdec2,tblptrh
  2381  00079E                     	if	0	;tblptru may be non-zero
  2382  00079E                     	endif
  2383  00079E                     	if	0	;tblptru may be non-zero
  2384  00079E                     	endif
  2385  00079E  0008               	tblrd		*
  2386  0007A0  FFFF               	dw	65535	; errata NOP
  2387  0007A2  50F5               	movf	tablat,w,c
  2388  0007A4  0A69               	xorlw	105
  2389  0007A6  A4D8               	btfss	status,2,c
  2390  0007A8  D040               	goto	l3438
  2391  0007AA                     u2970:
  2392  0007AA  FFFF               	dw	65535	; assembler added errata NOP
  2393                           
  2394                           ; BSR set to: 0
  2395                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 827:             ++*fmt;
  2396  0007AC  C0C1  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2397  0007B0  C0C2  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2398  0007B4  2ADE               	incf	postinc2,f,c
  2399  0007B6  0E00               	movlw	0
  2400  0007B8  22DD               	addwfc	postdec2,f,c
  2401                           
  2402                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 828:             ll = (long l
      +                          ong)(*(int *)__va_arg(*(int **)ap, (int)0));
  2403  0007BA  C0C3  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2404  0007BE  C0C4  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2405  0007C2  CFDF F0C5          	movff	indf2,??_vfpfcnvrt
  2406  0007C6  0E02               	movlw	2
  2407  0007C8  26DE               	addwf	postinc2,f,c
  2408  0007CA  CFDF F0C6          	movff	indf2,??_vfpfcnvrt+1
  2409  0007CE  0E00               	movlw	0
  2410  0007D0  22DD               	addwfc	postdec2,f,c
  2411  0007D2  C0C5  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2412  0007D6  C0C6  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2413  0007DA  CFDE F0C9          	movff	postinc2,vfpfcnvrt@ll
  2414  0007DE  CFDD F0CA          	movff	postdec2,vfpfcnvrt@ll+1
  2415  0007E2  0E00               	movlw	0
  2416  0007E4  BFCA               	btfsc	(vfpfcnvrt@ll+1)& (0+255),7,b
  2417  0007E6  0EFF               	movlw	-1
  2418  0007E8  6FCB               	movwf	(vfpfcnvrt@ll+2)& (0+255),b
  2419  0007EA  6FCC               	movwf	(vfpfcnvrt@ll+3)& (0+255),b
  2420  0007EC  6FCD               	movwf	(vfpfcnvrt@ll+4)& (0+255),b
  2421  0007EE  6FCE               	movwf	(vfpfcnvrt@ll+5)& (0+255),b
  2422  0007F0  6FCF               	movwf	(vfpfcnvrt@ll+6)& (0+255),b
  2423  0007F2  6FD0               	movwf	(vfpfcnvrt@ll+7)& (0+255),b
  2424                           
  2425                           ; BSR set to: 0
  2426                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 830:             return dtoa(
      +                          fp, ll);
  2427  0007F4  C0BF  F09B         	movff	vfpfcnvrt@fp,dtoa@fp
  2428  0007F8  C0C0  F09C         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  2429  0007FC  C0C9  F09D         	movff	vfpfcnvrt@ll,dtoa@d
  2430  000800  C0CA  F09E         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  2431  000804  C0CB  F09F         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  2432  000808  C0CC  F0A0         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  2433  00080C  C0CD  F0A1         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  2434  000810  C0CE  F0A2         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  2435  000814  C0CF  F0A3         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  2436  000818  C0D0  F0A4         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  2437  00081C  ECA9  F005         	call	_dtoa	;wreg free
  2438  000820  C09B  F0BF         	movff	?_dtoa,?_vfpfcnvrt
  2439  000824  C09C  F0C0         	movff	?_dtoa+1,?_vfpfcnvrt+1
  2440  000828  D051               	goto	l605
  2441  00082A                     l3438:
  2442  00082A  FFFF               	dw	65535	; assembler added errata NOP
  2443                           
  2444                           ; BSR set to: 0
  2445                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1350:         if ((*fmt)[0] =
      +                          = '%') {
  2446  00082C  C0C1  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2447  000830  C0C2  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2448  000834  CFDE FFF6          	movff	postinc2,tblptrl
  2449  000838  CFDD FFF7          	movff	postdec2,tblptrh
  2450  00083C                     	if	0	;tblptru may be non-zero
  2451  00083C                     	endif
  2452  00083C                     	if	0	;tblptru may be non-zero
  2453  00083C                     	endif
  2454  00083C  0008               	tblrd		*
  2455  00083E  FFFF               	dw	65535	; errata NOP
  2456  000840  50F5               	movf	tablat,w,c
  2457  000842  0A25               	xorlw	37
  2458  000844  A4D8               	btfss	status,2,c
  2459  000846  D017               	goto	l3448
  2460                           
  2461                           ; BSR set to: 0
  2462                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1351:             ++*fmt;
  2463  000848  C0C1  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2464  00084C  C0C2  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2465  000850  2ADE               	incf	postinc2,f,c
  2466  000852  0E00               	movlw	0
  2467  000854  22DD               	addwfc	postdec2,f,c
  2468                           
  2469                           ; BSR set to: 0
  2470                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1352:             fputc((int)
      +                          '%', fp);
  2471  000856  0E00               	movlw	0
  2472  000858  6F81               	movwf	(fputc@c+1)& (0+255),b
  2473  00085A  0E25               	movlw	37
  2474  00085C  6F80               	movwf	fputc@c& (0+255),b
  2475  00085E  C0BF  F082         	movff	vfpfcnvrt@fp,fputc@fp
  2476  000862  C0C0  F083         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2477  000866  EC9E  F00E         	call	_fputc	;wreg free
  2478  00086A                     l3444:
  2479  00086A  FFFF               	dw	65535	; assembler added errata NOP
  2480                           
  2481                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1353:             return 1;
  2482  00086C  0E00               	movlw	0
  2483  00086E  0100               	movlb	0	; () banked
  2484  000870  6FC0               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  2485  000872  0E01               	movlw	1
  2486  000874  D00B               	goto	L1
  2487  000876                     l3448:
  2488  000876  FFFF               	dw	65535	; assembler added errata NOP
  2489                           
  2490                           ; BSR set to: 0
  2491                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1357:         ++*fmt;
  2492  000878  C0C1  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2493  00087C  C0C2  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2494  000880  2ADE               	incf	postinc2,f,c
  2495  000882  0E00               	movlw	0
  2496  000884  22DD               	addwfc	postdec2,f,c
  2497                           
  2498                           ; BSR set to: 0
  2499                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1358:         return 0;
  2500  000886  0E00               	movlw	0
  2501  000888  6FC0               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  2502  00088A  0E00               	movlw	0
  2503  00088C                     L1:
  2504  00088C  FFFF               	dw	65535	; assembler added errata NOP
  2505  00088E  6FBF               	movwf	?_vfpfcnvrt& (0+255),b
  2506  000890  D01D               	goto	l605
  2507  000892                     l3454:
  2508  000892  FFFF               	dw	65535	; assembler added errata NOP
  2509                           
  2510                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1362:     fputc((int)(*fmt)[0
      +                          ], fp);
  2511  000894  C0C1  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2512  000898  C0C2  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2513  00089C  CFDE FFF6          	movff	postinc2,tblptrl
  2514  0008A0  CFDD FFF7          	movff	postdec2,tblptrh
  2515  0008A4                     	if	0	;tblptru may be non-zero
  2516  0008A4                     	endif
  2517  0008A4                     	if	0	;tblptru may be non-zero
  2518  0008A4                     	endif
  2519  0008A4  0008               	tblrd		*
  2520  0008A6  FFFF               	dw	65535	; errata NOP
  2521  0008A8  50F5               	movf	tablat,w,c
  2522  0008AA  0100               	movlb	0	; () banked
  2523  0008AC  6F80               	movwf	fputc@c& (0+255),b
  2524  0008AE  6B81               	clrf	(fputc@c+1)& (0+255),b
  2525  0008B0  C0BF  F082         	movff	vfpfcnvrt@fp,fputc@fp
  2526  0008B4  C0C0  F083         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2527  0008B8  EC9E  F00E         	call	_fputc	;wreg free
  2528                           
  2529                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1363:     ++*fmt;
  2530  0008BC  C0C1  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2531  0008C0  C0C2  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2532  0008C4  2ADE               	incf	postinc2,f,c
  2533  0008C6  0E00               	movlw	0
  2534  0008C8  22DD               	addwfc	postdec2,f,c
  2535  0008CA  D7CF               	goto	l3444
  2536  0008CC                     l605:
  2537  0008CC  FFFF               	dw	65535	; assembler added errata NOP
  2538  0008CE  0012               	return		;funcret
  2539  0008D0  FFFF               	dw	65535	; errata NOP
  2540  0008D2                     __end_of_vfpfcnvrt:
  2541                           	opt callstack 0
  2542                           
  2543 ;; *************** function _dtoa *****************
  2544 ;; Defined at:
  2545 ;;		line 274 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  2546 ;; Parameters:    Size  Location     Type
  2547 ;;  fp              2   27[BANK0 ] PTR struct _IO_FILE
  2548 ;;		 -> sprintf@f(6), 
  2549 ;;  d               8   29[BANK0 ] long long 
  2550 ;; Auto vars:     Size  Location     Type
  2551 ;;  n               8   53[BANK0 ] long long 
  2552 ;;  i               2   61[BANK0 ] int 
  2553 ;;  s               2   51[BANK0 ] int 
  2554 ;;  w               2   49[BANK0 ] int 
  2555 ;;  p               2   47[BANK0 ] int 
  2556 ;; Return value:  Size  Location     Type
  2557 ;;                  2   27[BANK0 ] int 
  2558 ;; Registers used:
  2559 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2560 ;; Tracked objects:
  2561 ;;		On entry : 0/0
  2562 ;;		On exit  : 0/0
  2563 ;;		Unchanged: 0/0
  2564 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2565 ;;      Params:         0      10       0       0       0       0       0
  2566 ;;      Locals:         0      18       0       0       0       0       0
  2567 ;;      Temps:          0       8       0       0       0       0       0
  2568 ;;      Totals:         0      36       0       0       0       0       0
  2569 ;;Total ram usage:       36 bytes
  2570 ;; Hardware stack levels used:    1
  2571 ;; Hardware stack levels required when called:   14
  2572 ;; This function calls:
  2573 ;;		___aodiv
  2574 ;;		___aomod
  2575 ;;		_abs
  2576 ;;		_pad
  2577 ;; This function is called by:
  2578 ;;		_vfpfcnvrt
  2579 ;; This function uses a non-reentrant model
  2580 ;;
  2581                           
  2582                           	psect	text7
  2583  000B52                     __ptext7:
  2584                           	opt callstack 0
  2585  000B52                     _dtoa:
  2586                           	opt callstack 0
  2587  000B52  FFFF               	dw	65535	; assembler added errata NOP
  2588                           
  2589                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 274: static int dtoa(FILE *fp
      +                          , long long d);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 275: {;/opt/mic
      +                          rochip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 276:     int i, p, s, w;;/opt/microchi
      +                          p/xc8/v2.05/pic/sources/c99/common/doprnt.c: 277:     long long n;;/opt/microchip/xc8/v2
      +                          .05/pic/sources/c99/common/doprnt.c: 280:     n = d;
  2590                           
  2591                           ;incstack = 0
  2592  000B54  C09D  F0B5         	movff	dtoa@d,dtoa@n
  2593  000B58  C09E  F0B6         	movff	dtoa@d+1,dtoa@n+1
  2594  000B5C  C09F  F0B7         	movff	dtoa@d+2,dtoa@n+2
  2595  000B60  C0A0  F0B8         	movff	dtoa@d+3,dtoa@n+3
  2596  000B64  C0A1  F0B9         	movff	dtoa@d+4,dtoa@n+4
  2597  000B68  C0A2  F0BA         	movff	dtoa@d+5,dtoa@n+5
  2598  000B6C  C0A3  F0BB         	movff	dtoa@d+6,dtoa@n+6
  2599  000B70  C0A4  F0BC         	movff	dtoa@d+7,dtoa@n+7
  2600                           
  2601                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 281:     s = n < 0 ? 1 : 0;
  2602  000B74  0100               	movlb	0	; () banked
  2603  000B76  AFBC               	btfss	(dtoa@n+7)& (0+255),7,b
  2604  000B78  D002               	goto	u2460
  2605  000B7A  0E01               	movlw	1
  2606  000B7C  D002               	goto	u2470
  2607  000B7E                     u2460:
  2608  000B7E  FFFF               	dw	65535	; assembler added errata NOP
  2609  000B80  0E00               	movlw	0
  2610  000B82                     u2470:
  2611  000B82  FFFF               	dw	65535	; assembler added errata NOP
  2612  000B84  6FB3               	movwf	dtoa@s& (0+255),b
  2613  000B86  6BB4               	clrf	(dtoa@s+1)& (0+255),b
  2614                           
  2615                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 282:     if (s) {
  2616  000B88  51B3               	movf	dtoa@s& (0+255),w,b
  2617  000B8A  11B4               	iorwf	(dtoa@s+1)& (0+255),w,b
  2618  000B8C  B4D8               	btfsc	status,2,c
  2619  000B8E  D010               	goto	l3146
  2620                           
  2621                           ; BSR set to: 0
  2622                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 283:         n = -n;
  2623  000B90  1FBC               	comf	(dtoa@n+7)& (0+255),f,b
  2624  000B92  1FBB               	comf	(dtoa@n+6)& (0+255),f,b
  2625  000B94  1FBA               	comf	(dtoa@n+5)& (0+255),f,b
  2626  000B96  1FB9               	comf	(dtoa@n+4)& (0+255),f,b
  2627  000B98  1FB8               	comf	(dtoa@n+3)& (0+255),f,b
  2628  000B9A  1FB7               	comf	(dtoa@n+2)& (0+255),f,b
  2629  000B9C  1FB6               	comf	(dtoa@n+1)& (0+255),f,b
  2630  000B9E  6DB5               	negf	dtoa@n& (0+255),b
  2631  000BA0  0E00               	movlw	0
  2632  000BA2  23B6               	addwfc	(dtoa@n+1)& (0+255),f,b
  2633  000BA4  23B7               	addwfc	(dtoa@n+2)& (0+255),f,b
  2634  000BA6  23B8               	addwfc	(dtoa@n+3)& (0+255),f,b
  2635  000BA8  23B9               	addwfc	(dtoa@n+4)& (0+255),f,b
  2636  000BAA  23BA               	addwfc	(dtoa@n+5)& (0+255),f,b
  2637  000BAC  23BB               	addwfc	(dtoa@n+6)& (0+255),f,b
  2638  000BAE  23BC               	addwfc	(dtoa@n+7)& (0+255),f,b
  2639  000BB0                     l3146:
  2640  000BB0  FFFF               	dw	65535	; assembler added errata NOP
  2641                           
  2642                           ; BSR set to: 0
  2643                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 287:     if (!(prec < 0)) {
  2644  000BB2  AFF3               	btfss	(_prec+1)& (0+255),7,b
  2645                           
  2646                           ; BSR set to: 0
  2647                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 288:         flags &= ~(1 << 
      +                          1);
  2648  000BB4  93F4               	bcf	_flags& (0+255),1,b
  2649                           
  2650                           ; BSR set to: 0
  2651                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 290:     p = (0 < prec) ? pre
      +                          c : 1;
  2652  000BB6  BFF3               	btfsc	(_prec+1)& (0+255),7,b
  2653  000BB8  D005               	goto	u2500
  2654  000BBA  51F3               	movf	(_prec+1)& (0+255),w,b
  2655  000BBC  E109               	bnz	l568
  2656  000BBE  05F2               	decf	_prec& (0+255),w,b
  2657  000BC0  B0D8               	btfsc	status,0,c
  2658  000BC2  D006               	goto	l568
  2659  000BC4                     u2500:
  2660  000BC4  FFFF               	dw	65535	; assembler added errata NOP
  2661                           
  2662                           ; BSR set to: 0
  2663  000BC6  0E00               	movlw	0
  2664  000BC8  6FB0               	movwf	(dtoa@p+1)& (0+255),b
  2665  000BCA  0E01               	movlw	1
  2666  000BCC  6FAF               	movwf	dtoa@p& (0+255),b
  2667  000BCE  D005               	goto	l570
  2668  000BD0                     l568:
  2669  000BD0  FFFF               	dw	65535	; assembler added errata NOP
  2670                           
  2671                           ; BSR set to: 0
  2672  000BD2  C0F2  F0AF         	movff	_prec,dtoa@p
  2673  000BD6  C0F3  F0B0         	movff	_prec+1,dtoa@p+1
  2674  000BDA                     l570:
  2675  000BDA  FFFF               	dw	65535	; assembler added errata NOP
  2676                           
  2677                           ; BSR set to: 0
  2678                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 291:     w = width;
  2679  000BDC  C0F0  F0B1         	movff	_width,dtoa@w
  2680  000BE0  C0F1  F0B2         	movff	_width+1,dtoa@w+1
  2681                           
  2682                           ; BSR set to: 0
  2683                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 292:     if (s || (flags & (1
      +                           << 2))) {
  2684  000BE4  51B3               	movf	dtoa@s& (0+255),w,b
  2685  000BE6  11B4               	iorwf	(dtoa@s+1)& (0+255),w,b
  2686  000BE8  A4D8               	btfss	status,2,c
  2687  000BEA  D002               	goto	u2520
  2688                           
  2689                           ; BSR set to: 0
  2690  000BEC  A5F4               	btfss	_flags& (0+255),2,b
  2691  000BEE  D004               	goto	l3160
  2692  000BF0                     u2520:
  2693  000BF0  FFFF               	dw	65535	; assembler added errata NOP
  2694                           
  2695                           ; BSR set to: 0
  2696                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 293:         --w;
  2697  000BF2  07B1               	decf	dtoa@w& (0+255),f,b
  2698  000BF4  A0D8               	btfss	status,0,c
  2699  000BF6  07B2               	decf	(dtoa@w+1)& (0+255),f,b
  2700  000BF8                     l3160:
  2701  000BF8  FFFF               	dw	65535	; assembler added errata NOP
  2702                           
  2703                           ; BSR set to: 0
  2704                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 297:     i = sizeof(dbuf) - 1
      +                          ;
  2705  000BFA  0E00               	movlw	0
  2706  000BFC  6FBE               	movwf	(dtoa@i+1)& (0+255),b
  2707  000BFE  0E1F               	movlw	31
  2708  000C00  6FBD               	movwf	dtoa@i& (0+255),b
  2709                           
  2710                           ; BSR set to: 0
  2711                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 298:     dbuf[i] = '\0';
  2712  000C02  0E00               	movlw	0
  2713  000C04  0101               	movlb	1	; () banked
  2714  000C06  6F1F               	movwf	(_dbuf+31)& (0+255),b
  2715                           
  2716                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  2717  000C08  D07E               	goto	l3174
  2718  000C0A                     l3164:
  2719  000C0A  FFFF               	dw	65535	; assembler added errata NOP
  2720                           
  2721                           ; BSR set to: 0
  2722                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 300:         --i;
  2723  000C0C  07BD               	decf	dtoa@i& (0+255),f,b
  2724  000C0E  A0D8               	btfss	status,0,c
  2725  000C10  07BE               	decf	(dtoa@i+1)& (0+255),f,b
  2726                           
  2727                           ; BSR set to: 0
  2728                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 301:         dbuf[i] = '0' + 
      +                          abs(n % 10);
  2729  000C12  0E00               	movlw	low _dbuf
  2730  000C14  25BD               	addwf	dtoa@i& (0+255),w,b
  2731  000C16  6ED9               	movwf	fsr2l,c
  2732  000C18  0E01               	movlw	high _dbuf
  2733  000C1A  21BE               	addwfc	(dtoa@i+1)& (0+255),w,b
  2734  000C1C  6EDA               	movwf	fsr2h,c
  2735  000C1E  C0B5  F080         	movff	dtoa@n,___aomod@dividend
  2736  000C22  C0B6  F081         	movff	dtoa@n+1,___aomod@dividend+1
  2737  000C26  C0B7  F082         	movff	dtoa@n+2,___aomod@dividend+2
  2738  000C2A  C0B8  F083         	movff	dtoa@n+3,___aomod@dividend+3
  2739  000C2E  C0B9  F084         	movff	dtoa@n+4,___aomod@dividend+4
  2740  000C32  C0BA  F085         	movff	dtoa@n+5,___aomod@dividend+5
  2741  000C36  C0BB  F086         	movff	dtoa@n+6,___aomod@dividend+6
  2742  000C3A  C0BC  F087         	movff	dtoa@n+7,___aomod@dividend+7
  2743  000C3E  0E0A               	movlw	10
  2744  000C40  6F88               	movwf	___aomod@divisor& (0+255),b
  2745  000C42  0E00               	movlw	0
  2746  000C44  6F89               	movwf	(___aomod@divisor+1)& (0+255),b
  2747  000C46  0E00               	movlw	0
  2748  000C48  6F8A               	movwf	(___aomod@divisor+2)& (0+255),b
  2749  000C4A  0E00               	movlw	0
  2750  000C4C  6F8B               	movwf	(___aomod@divisor+3)& (0+255),b
  2751  000C4E  0E00               	movlw	0
  2752  000C50  6F8C               	movwf	(___aomod@divisor+4)& (0+255),b
  2753  000C52  0E00               	movlw	0
  2754  000C54  6F8D               	movwf	(___aomod@divisor+5)& (0+255),b
  2755  000C56  0E00               	movlw	0
  2756  000C58  6F8E               	movwf	(___aomod@divisor+6)& (0+255),b
  2757  000C5A  0E00               	movlw	0
  2758  000C5C  6F8F               	movwf	(___aomod@divisor+7)& (0+255),b
  2759  000C5E  ECB2  F00B         	call	___aomod	;wreg free
  2760  000C62  C080  F0A5         	movff	?___aomod,??_dtoa
  2761  000C66  C081  F0A6         	movff	?___aomod+1,??_dtoa+1
  2762  000C6A  C082  F0A7         	movff	?___aomod+2,??_dtoa+2
  2763  000C6E  C083  F0A8         	movff	?___aomod+3,??_dtoa+3
  2764  000C72  C084  F0A9         	movff	?___aomod+4,??_dtoa+4
  2765  000C76  C085  F0AA         	movff	?___aomod+5,??_dtoa+5
  2766  000C7A  C086  F0AB         	movff	?___aomod+6,??_dtoa+6
  2767  000C7E  C087  F0AC         	movff	?___aomod+7,??_dtoa+7
  2768  000C82  C0A5  F092         	movff	??_dtoa,abs@a
  2769  000C86  C0A7  F093         	movff	??_dtoa+2,abs@a+1
  2770  000C8A  ECAB  F013         	call	_abs	;wreg free
  2771  000C8E  0100               	movlb	0	; () banked
  2772  000C90  5192               	movf	?_abs& (0+255),w,b
  2773  000C92  0F30               	addlw	48
  2774  000C94  6EDF               	movwf	indf2,c
  2775                           
  2776                           ; BSR set to: 0
  2777                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 302:         --p;
  2778  000C96  07AF               	decf	dtoa@p& (0+255),f,b
  2779  000C98  A0D8               	btfss	status,0,c
  2780  000C9A  07B0               	decf	(dtoa@p+1)& (0+255),f,b
  2781                           
  2782                           ; BSR set to: 0
  2783                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 303:         --w;
  2784  000C9C  07B1               	decf	dtoa@w& (0+255),f,b
  2785  000C9E  A0D8               	btfss	status,0,c
  2786  000CA0  07B2               	decf	(dtoa@w+1)& (0+255),f,b
  2787                           
  2788                           ; BSR set to: 0
  2789                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 304:         n = n / 10;
  2790  000CA2  C0B5  F080         	movff	dtoa@n,___aodiv@dividend
  2791  000CA6  C0B6  F081         	movff	dtoa@n+1,___aodiv@dividend+1
  2792  000CAA  C0B7  F082         	movff	dtoa@n+2,___aodiv@dividend+2
  2793  000CAE  C0B8  F083         	movff	dtoa@n+3,___aodiv@dividend+3
  2794  000CB2  C0B9  F084         	movff	dtoa@n+4,___aodiv@dividend+4
  2795  000CB6  C0BA  F085         	movff	dtoa@n+5,___aodiv@dividend+5
  2796  000CBA  C0BB  F086         	movff	dtoa@n+6,___aodiv@dividend+6
  2797  000CBE  C0BC  F087         	movff	dtoa@n+7,___aodiv@dividend+7
  2798  000CC2  0E0A               	movlw	10
  2799  000CC4  6F88               	movwf	___aodiv@divisor& (0+255),b
  2800  000CC6  0E00               	movlw	0
  2801  000CC8  6F89               	movwf	(___aodiv@divisor+1)& (0+255),b
  2802  000CCA  0E00               	movlw	0
  2803  000CCC  6F8A               	movwf	(___aodiv@divisor+2)& (0+255),b
  2804  000CCE  0E00               	movlw	0
  2805  000CD0  6F8B               	movwf	(___aodiv@divisor+3)& (0+255),b
  2806  000CD2  0E00               	movlw	0
  2807  000CD4  6F8C               	movwf	(___aodiv@divisor+4)& (0+255),b
  2808  000CD6  0E00               	movlw	0
  2809  000CD8  6F8D               	movwf	(___aodiv@divisor+5)& (0+255),b
  2810  000CDA  0E00               	movlw	0
  2811  000CDC  6F8E               	movwf	(___aodiv@divisor+6)& (0+255),b
  2812  000CDE  0E00               	movlw	0
  2813  000CE0  6F8F               	movwf	(___aodiv@divisor+7)& (0+255),b
  2814  000CE2  EC55  F00A         	call	___aodiv	;wreg free
  2815  000CE6  C080  F0B5         	movff	?___aodiv,dtoa@n
  2816  000CEA  C081  F0B6         	movff	?___aodiv+1,dtoa@n+1
  2817  000CEE  C082  F0B7         	movff	?___aodiv+2,dtoa@n+2
  2818  000CF2  C083  F0B8         	movff	?___aodiv+3,dtoa@n+3
  2819  000CF6  C084  F0B9         	movff	?___aodiv+4,dtoa@n+4
  2820  000CFA  C085  F0BA         	movff	?___aodiv+5,dtoa@n+5
  2821  000CFE  C086  F0BB         	movff	?___aodiv+6,dtoa@n+6
  2822  000D02  C087  F0BC         	movff	?___aodiv+7,dtoa@n+7
  2823  000D06                     l3174:
  2824  000D06  FFFF               	dw	65535	; assembler added errata NOP
  2825                           
  2826                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  2827  000D08  0100               	movlb	0	; () banked
  2828  000D0A  BFBE               	btfsc	(dtoa@i+1)& (0+255),7,b
  2829  000D0C  D020               	goto	u2570
  2830  000D0E  51BE               	movf	(dtoa@i+1)& (0+255),w,b
  2831  000D10  E103               	bnz	u2530
  2832  000D12  05BD               	decf	dtoa@i& (0+255),w,b
  2833  000D14  A0D8               	btfss	status,0,c
  2834  000D16  D01B               	goto	u2570
  2835  000D18                     u2530:
  2836                           
  2837                           ; BSR set to: 0
  2838  000D18  51B5               	movf	dtoa@n& (0+255),w,b
  2839  000D1A  11B6               	iorwf	(dtoa@n+1)& (0+255),w,b
  2840  000D1C  11B7               	iorwf	(dtoa@n+2)& (0+255),w,b
  2841  000D1E  11B8               	iorwf	(dtoa@n+3)& (0+255),w,b
  2842  000D20  11B9               	iorwf	(dtoa@n+4)& (0+255),w,b
  2843  000D22  11BA               	iorwf	(dtoa@n+5)& (0+255),w,b
  2844  000D24  11BB               	iorwf	(dtoa@n+6)& (0+255),w,b
  2845  000D26  11BC               	iorwf	(dtoa@n+7)& (0+255),w,b
  2846  000D28  A4D8               	btfss	status,2,c
  2847  000D2A  D76F               	goto	l3164
  2848                           
  2849                           ; BSR set to: 0
  2850  000D2C  BFB0               	btfsc	(dtoa@p+1)& (0+255),7,b
  2851  000D2E  D005               	goto	u2550
  2852  000D30  51B0               	movf	(dtoa@p+1)& (0+255),w,b
  2853  000D32  E102               	bnz	u2551
  2854  000D34  05AF               	decf	dtoa@p& (0+255),w,b
  2855  000D36  B0D8               	btfsc	status,0,c
  2856  000D38                     u2551:
  2857  000D38  D768               	goto	l3164
  2858  000D3A                     u2550:
  2859  000D3A  FFFF               	dw	65535	; assembler added errata NOP
  2860                           
  2861                           ; BSR set to: 0
  2862  000D3C  BFB2               	btfsc	(dtoa@w+1)& (0+255),7,b
  2863  000D3E  D007               	goto	u2570
  2864  000D40  51B2               	movf	(dtoa@w+1)& (0+255),w,b
  2865  000D42  E103               	bnz	u2560
  2866  000D44  05B1               	decf	dtoa@w& (0+255),w,b
  2867  000D46  A0D8               	btfss	status,0,c
  2868  000D48  D002               	goto	u2570
  2869  000D4A                     u2560:
  2870                           
  2871                           ; BSR set to: 0
  2872  000D4A  B3F4               	btfsc	_flags& (0+255),1,b
  2873  000D4C  D75E               	goto	l3164
  2874  000D4E                     u2570:
  2875  000D4E  FFFF               	dw	65535	; assembler added errata NOP
  2876                           
  2877                           ; BSR set to: 0
  2878                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 308:     if (s || (flags & (1
      +                           << 2))) {
  2879  000D50  51B3               	movf	dtoa@s& (0+255),w,b
  2880  000D52  11B4               	iorwf	(dtoa@s+1)& (0+255),w,b
  2881  000D54  A4D8               	btfss	status,2,c
  2882  000D56  D002               	goto	u2590
  2883                           
  2884                           ; BSR set to: 0
  2885  000D58  A5F4               	btfss	_flags& (0+255),2,b
  2886  000D5A  D01A               	goto	l3198
  2887  000D5C                     u2590:
  2888  000D5C  FFFF               	dw	65535	; assembler added errata NOP
  2889                           
  2890                           ; BSR set to: 0
  2891                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 309:         --i;
  2892  000D5E  07BD               	decf	dtoa@i& (0+255),f,b
  2893  000D60  A0D8               	btfss	status,0,c
  2894  000D62  07BE               	decf	(dtoa@i+1)& (0+255),f,b
  2895                           
  2896                           ; BSR set to: 0
  2897                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 310:         dbuf[i] = s ? '-
      +                          ' : '+';
  2898  000D64  51B3               	movf	dtoa@s& (0+255),w,b
  2899  000D66  11B4               	iorwf	(dtoa@s+1)& (0+255),w,b
  2900  000D68  A4D8               	btfss	status,2,c
  2901  000D6A  D004               	goto	l3194
  2902                           
  2903                           ; BSR set to: 0
  2904  000D6C  0E00               	movlw	0
  2905  000D6E  6FAE               	movwf	(_dtoa$1027+1)& (0+255),b
  2906  000D70  0E2B               	movlw	43
  2907  000D72  D004               	goto	L2
  2908  000D74                     l3194:
  2909  000D74  FFFF               	dw	65535	; assembler added errata NOP
  2910                           
  2911                           ; BSR set to: 0
  2912  000D76  0E00               	movlw	0
  2913  000D78  6FAE               	movwf	(_dtoa$1027+1)& (0+255),b
  2914  000D7A  0E2D               	movlw	45
  2915  000D7C                     L2:
  2916  000D7C  FFFF               	dw	65535	; assembler added errata NOP
  2917  000D7E  6FAD               	movwf	_dtoa$1027& (0+255),b
  2918                           
  2919                           ; BSR set to: 0
  2920  000D80  0E00               	movlw	low _dbuf
  2921  000D82  25BD               	addwf	dtoa@i& (0+255),w,b
  2922  000D84  6ED9               	movwf	fsr2l,c
  2923  000D86  0E01               	movlw	high _dbuf
  2924  000D88  21BE               	addwfc	(dtoa@i+1)& (0+255),w,b
  2925  000D8A  6EDA               	movwf	fsr2h,c
  2926  000D8C  C0AD  FFDF         	movff	_dtoa$1027,indf2
  2927  000D90                     l3198:
  2928  000D90  FFFF               	dw	65535	; assembler added errata NOP
  2929                           
  2930                           ; BSR set to: 0
  2931                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 314:     return pad(fp, &dbuf
      +                          [i], w);
  2932  000D92  C09B  F090         	movff	dtoa@fp,pad@fp
  2933  000D96  C09C  F091         	movff	dtoa@fp+1,pad@fp+1
  2934  000D9A  0E00               	movlw	low _dbuf
  2935  000D9C  25BD               	addwf	dtoa@i& (0+255),w,b
  2936  000D9E  6F92               	movwf	pad@buf& (0+255),b
  2937  000DA0  0E01               	movlw	high _dbuf
  2938  000DA2  21BE               	addwfc	(dtoa@i+1)& (0+255),w,b
  2939  000DA4  6F93               	movwf	(pad@buf+1)& (0+255),b
  2940  000DA6  C0B1  F094         	movff	dtoa@w,pad@p
  2941  000DAA  C0B2  F095         	movff	dtoa@w+1,pad@p+1
  2942  000DAE  EC47  F00E         	call	_pad	;wreg free
  2943  000DB2  C090  F09B         	movff	?_pad,?_dtoa
  2944  000DB6  C091  F09C         	movff	?_pad+1,?_dtoa+1
  2945  000DBA  0012               	return		;funcret
  2946  000DBC  FFFF               	dw	65535	; errata NOP
  2947  000DBE                     __end_of_dtoa:
  2948                           	opt callstack 0
  2949                           
  2950 ;; *************** function _pad *****************
  2951 ;; Defined at:
  2952 ;;		line 72 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  2953 ;; Parameters:    Size  Location     Type
  2954 ;;  fp              2   16[BANK0 ] PTR struct _IO_FILE
  2955 ;;		 -> sprintf@f(6), 
  2956 ;;  buf             2   18[BANK0 ] PTR unsigned char 
  2957 ;;		 -> dbuf(32), 
  2958 ;;  p               2   20[BANK0 ] int 
  2959 ;; Auto vars:     Size  Location     Type
  2960 ;;  w               2   25[BANK0 ] int 
  2961 ;;  i               2   23[BANK0 ] int 
  2962 ;; Return value:  Size  Location     Type
  2963 ;;                  2   16[BANK0 ] int 
  2964 ;; Registers used:
  2965 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2966 ;; Tracked objects:
  2967 ;;		On entry : 0/0
  2968 ;;		On exit  : 0/0
  2969 ;;		Unchanged: 0/0
  2970 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2971 ;;      Params:         0       6       0       0       0       0       0
  2972 ;;      Locals:         0       4       0       0       0       0       0
  2973 ;;      Temps:          0       1       0       0       0       0       0
  2974 ;;      Totals:         0      11       0       0       0       0       0
  2975 ;;Total ram usage:       11 bytes
  2976 ;; Hardware stack levels used:    1
  2977 ;; Hardware stack levels required when called:   13
  2978 ;; This function calls:
  2979 ;;		_fputc
  2980 ;;		_fputs
  2981 ;;		_strlen
  2982 ;; This function is called by:
  2983 ;;		_dtoa
  2984 ;; This function uses a non-reentrant model
  2985 ;;
  2986                           
  2987                           	psect	text8
  2988  001C8E                     __ptext8:
  2989                           	opt callstack 0
  2990  001C8E                     _pad:
  2991                           	opt callstack 0
  2992  001C8E  FFFF               	dw	65535	; assembler added errata NOP
  2993                           
  2994                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 72: static int pad(FILE *fp, 
      +                          char *buf, int p);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 73: {;/opt/m
      +                          icrochip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 74:     int i, w;;/opt/microchip/xc8
      +                          /v2.05/pic/sources/c99/common/doprnt.c: 77:     if (flags & (1 << 0)) {
  2995                           
  2996                           ;incstack = 0
  2997  001C90  0100               	movlb	0	; () banked
  2998  001C92  A1F4               	btfss	_flags& (0+255),0,b
  2999  001C94  D00A               	goto	l2886
  3000                           
  3001                           ; BSR set to: 0
  3002                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 78:         fputs((const char
      +                           *)buf, fp);
  3003  001C96  C092  F089         	movff	pad@buf,fputs@s
  3004  001C9A  C093  F08A         	movff	pad@buf+1,fputs@s+1
  3005  001C9E  C090  F08B         	movff	pad@fp,fputs@fp
  3006  001CA2  C091  F08C         	movff	pad@fp+1,fputs@fp+1
  3007  001CA6  ECDF  F012         	call	_fputs	;wreg free
  3008  001CAA                     l2886:
  3009  001CAA  FFFF               	dw	65535	; assembler added errata NOP
  3010                           
  3011                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 82:     w = (p < 0) ? 0 : p;
  3012  001CAC  0100               	movlb	0	; () banked
  3013  001CAE  BF95               	btfsc	(pad@p+1)& (0+255),7,b
  3014  001CB0  D005               	goto	l2890
  3015                           
  3016                           ; BSR set to: 0
  3017  001CB2  C094  F099         	movff	pad@p,pad@w
  3018  001CB6  C095  F09A         	movff	pad@p+1,pad@w+1
  3019  001CBA  D005               	goto	l557
  3020  001CBC                     l2890:
  3021  001CBC  FFFF               	dw	65535	; assembler added errata NOP
  3022                           
  3023                           ; BSR set to: 0
  3024  001CBE  0E00               	movlw	0
  3025  001CC0  6F9A               	movwf	(pad@w+1)& (0+255),b
  3026  001CC2  0E00               	movlw	0
  3027  001CC4  6F99               	movwf	pad@w& (0+255),b
  3028  001CC6                     l557:
  3029  001CC6  FFFF               	dw	65535	; assembler added errata NOP
  3030                           
  3031                           ; BSR set to: 0
  3032                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 83:     i = 0;
  3033  001CC8  0E00               	movlw	0
  3034  001CCA  6F98               	movwf	(pad@i+1)& (0+255),b
  3035  001CCC  0E00               	movlw	0
  3036  001CCE  6F97               	movwf	pad@i& (0+255),b
  3037                           
  3038                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
  3039  001CD0  D00E               	goto	l2896
  3040  001CD2                     l2892:
  3041  001CD2  FFFF               	dw	65535	; assembler added errata NOP
  3042                           
  3043                           ; BSR set to: 0
  3044                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 85:         fputc(' ', fp);
  3045  001CD4  0E00               	movlw	0
  3046  001CD6  6F81               	movwf	(fputc@c+1)& (0+255),b
  3047  001CD8  0E20               	movlw	32
  3048  001CDA  6F80               	movwf	fputc@c& (0+255),b
  3049  001CDC  C090  F082         	movff	pad@fp,fputc@fp
  3050  001CE0  C091  F083         	movff	pad@fp+1,fputc@fp+1
  3051  001CE4  EC9E  F00E         	call	_fputc	;wreg free
  3052                           
  3053                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 86:         ++i;
  3054  001CE8  0100               	movlb	0	; () banked
  3055  001CEA  4B97               	infsnz	pad@i& (0+255),f,b
  3056  001CEC  2B98               	incf	(pad@i+1)& (0+255),f,b
  3057  001CEE                     l2896:
  3058  001CEE  FFFF               	dw	65535	; assembler added errata NOP
  3059                           
  3060                           ; BSR set to: 0
  3061                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
  3062  001CF0  5199               	movf	pad@w& (0+255),w,b
  3063  001CF2  5D97               	subwf	pad@i& (0+255),w,b
  3064  001CF4  5198               	movf	(pad@i+1)& (0+255),w,b
  3065  001CF6  0A80               	xorlw	128
  3066  001CF8  6F96               	movwf	??_pad& (0+255),b
  3067  001CFA  519A               	movf	(pad@w+1)& (0+255),w,b
  3068  001CFC  0A80               	xorlw	128
  3069  001CFE  5996               	subwfb	??_pad& (0+255),w,b
  3070  001D00  A0D8               	btfss	status,0,c
  3071  001D02  D7E7               	goto	l2892
  3072                           
  3073                           ; BSR set to: 0
  3074                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 90:     if (!(flags & (1 << 0
      +                          ))) {
  3075  001D04  B1F4               	btfsc	_flags& (0+255),0,b
  3076  001D06  D00A               	goto	l2900
  3077                           
  3078                           ; BSR set to: 0
  3079                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 91:         fputs((const char
      +                           *)buf, fp);
  3080  001D08  C092  F089         	movff	pad@buf,fputs@s
  3081  001D0C  C093  F08A         	movff	pad@buf+1,fputs@s+1
  3082  001D10  C090  F08B         	movff	pad@fp,fputs@fp
  3083  001D14  C091  F08C         	movff	pad@fp+1,fputs@fp+1
  3084  001D18  ECDF  F012         	call	_fputs	;wreg free
  3085  001D1C                     l2900:
  3086  001D1C  FFFF               	dw	65535	; assembler added errata NOP
  3087                           
  3088                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 94:     return strlen(buf) + 
      +                          w;
  3089  001D1E  C092  F080         	movff	pad@buf,strlen@s
  3090  001D22  C093  F081         	movff	pad@buf+1,strlen@s+1
  3091  001D26  EC5C  F014         	call	_strlen	;wreg free
  3092  001D2A  0100               	movlb	0	; () banked
  3093  001D2C  5199               	movf	pad@w& (0+255),w,b
  3094  001D2E  2580               	addwf	?_strlen& (0+255),w,b
  3095  001D30  6F90               	movwf	?_pad& (0+255),b
  3096  001D32  519A               	movf	(pad@w+1)& (0+255),w,b
  3097  001D34  2181               	addwfc	(?_strlen+1)& (0+255),w,b
  3098  001D36  6F91               	movwf	(?_pad+1)& (0+255),b
  3099                           
  3100                           ; BSR set to: 0
  3101  001D38  0012               	return		;funcret
  3102  001D3A  FFFF               	dw	65535	; errata NOP
  3103  001D3C                     __end_of_pad:
  3104                           	opt callstack 0
  3105                           
  3106 ;; *************** function _strlen *****************
  3107 ;; Defined at:
  3108 ;;		line 12 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/strlen.c"
  3109 ;; Parameters:    Size  Location     Type
  3110 ;;  s               2    0[BANK0 ] PTR const unsigned char 
  3111 ;;		 -> dbuf(32), 
  3112 ;; Auto vars:     Size  Location     Type
  3113 ;;  a               2    2[BANK0 ] PTR const unsigned char 
  3114 ;;		 -> dbuf(32), 
  3115 ;; Return value:  Size  Location     Type
  3116 ;;                  2    0[BANK0 ] unsigned int 
  3117 ;; Registers used:
  3118 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3119 ;; Tracked objects:
  3120 ;;		On entry : 0/0
  3121 ;;		On exit  : 0/0
  3122 ;;		Unchanged: 0/0
  3123 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3124 ;;      Params:         0       2       0       0       0       0       0
  3125 ;;      Locals:         0       2       0       0       0       0       0
  3126 ;;      Temps:          0       0       0       0       0       0       0
  3127 ;;      Totals:         0       4       0       0       0       0       0
  3128 ;;Total ram usage:        4 bytes
  3129 ;; Hardware stack levels used:    1
  3130 ;; Hardware stack levels required when called:   10
  3131 ;; This function calls:
  3132 ;;		Nothing
  3133 ;; This function is called by:
  3134 ;;		_pad
  3135 ;; This function uses a non-reentrant model
  3136 ;;
  3137                           
  3138                           	psect	text9
  3139  0028B8                     __ptext9:
  3140                           	opt callstack 0
  3141  0028B8                     _strlen:
  3142                           	opt callstack 0
  3143  0028B8  FFFF               	dw	65535	; assembler added errata NOP
  3144                           
  3145                           ; BSR set to: 0
  3146                           ;incstack = 0
  3147  0028BA  C080  F082         	movff	strlen@s,strlen@a
  3148  0028BE  C081  F083         	movff	strlen@s+1,strlen@a+1
  3149  0028C2  D004               	goto	l2858
  3150  0028C4                     l2856:
  3151  0028C4  FFFF               	dw	65535	; assembler added errata NOP
  3152  0028C6  0100               	movlb	0	; () banked
  3153  0028C8  4B80               	infsnz	strlen@s& (0+255),f,b
  3154  0028CA  2B81               	incf	(strlen@s+1)& (0+255),f,b
  3155  0028CC                     l2858:
  3156  0028CC  FFFF               	dw	65535	; assembler added errata NOP
  3157  0028CE  C080  FFD9         	movff	strlen@s,fsr2l
  3158  0028D2  C081  FFDA         	movff	strlen@s+1,fsr2h
  3159  0028D6  50DF               	movf	indf2,w,c
  3160  0028D8  A4D8               	btfss	status,2,c
  3161  0028DA  D7F4               	goto	l2856
  3162  0028DC  0100               	movlb	0	; () banked
  3163  0028DE  5182               	movf	strlen@a& (0+255),w,b
  3164  0028E0  5D80               	subwf	strlen@s& (0+255),w,b
  3165  0028E2  6F80               	movwf	?_strlen& (0+255),b
  3166  0028E4  5183               	movf	(strlen@a+1)& (0+255),w,b
  3167  0028E6  5981               	subwfb	(strlen@s+1)& (0+255),w,b
  3168  0028E8  6F81               	movwf	(?_strlen+1)& (0+255),b
  3169                           
  3170                           ; BSR set to: 0
  3171  0028EA  0012               	return		;funcret
  3172  0028EC  FFFF               	dw	65535	; errata NOP
  3173  0028EE                     __end_of_strlen:
  3174                           	opt callstack 0
  3175                           
  3176 ;; *************** function _fputs *****************
  3177 ;; Defined at:
  3178 ;;		line 8 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/nf_fputs.c"
  3179 ;; Parameters:    Size  Location     Type
  3180 ;;  s               2    9[BANK0 ] PTR const unsigned char 
  3181 ;;		 -> dbuf(32), 
  3182 ;;  fp              2   11[BANK0 ] PTR struct _IO_FILE
  3183 ;;		 -> sprintf@f(6), 
  3184 ;; Auto vars:     Size  Location     Type
  3185 ;;  i               2   14[BANK0 ] int 
  3186 ;;  c               1   13[BANK0 ] unsigned char 
  3187 ;; Return value:  Size  Location     Type
  3188 ;;                  2    9[BANK0 ] int 
  3189 ;; Registers used:
  3190 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3191 ;; Tracked objects:
  3192 ;;		On entry : 0/0
  3193 ;;		On exit  : 0/0
  3194 ;;		Unchanged: 0/0
  3195 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3196 ;;      Params:         0       4       0       0       0       0       0
  3197 ;;      Locals:         0       3       0       0       0       0       0
  3198 ;;      Temps:          0       0       0       0       0       0       0
  3199 ;;      Totals:         0       7       0       0       0       0       0
  3200 ;;Total ram usage:        7 bytes
  3201 ;; Hardware stack levels used:    1
  3202 ;; Hardware stack levels required when called:   12
  3203 ;; This function calls:
  3204 ;;		_fputc
  3205 ;; This function is called by:
  3206 ;;		_pad
  3207 ;; This function uses a non-reentrant model
  3208 ;;
  3209                           
  3210                           	psect	text10
  3211  0025BE                     __ptext10:
  3212                           	opt callstack 0
  3213  0025BE                     _fputs:
  3214                           	opt callstack 0
  3215  0025BE  FFFF               	dw	65535	; assembler added errata NOP
  3216                           
  3217                           ; BSR set to: 0
  3218                           ;incstack = 0
  3219  0025C0  0E00               	movlw	0
  3220  0025C2  0100               	movlb	0	; () banked
  3221  0025C4  6F8F               	movwf	(fputs@i+1)& (0+255),b
  3222  0025C6  0E00               	movlw	0
  3223  0025C8  6F8E               	movwf	fputs@i& (0+255),b
  3224  0025CA  D00D               	goto	l2852
  3225  0025CC                     l2848:
  3226  0025CC  FFFF               	dw	65535	; assembler added errata NOP
  3227                           
  3228                           ; BSR set to: 0
  3229  0025CE  C08D  F080         	movff	fputs@c,fputc@c
  3230  0025D2  6B81               	clrf	(fputc@c+1)& (0+255),b
  3231  0025D4  C08B  F082         	movff	fputs@fp,fputc@fp
  3232  0025D8  C08C  F083         	movff	fputs@fp+1,fputc@fp+1
  3233  0025DC  EC9E  F00E         	call	_fputc	;wreg free
  3234  0025E0  0100               	movlb	0	; () banked
  3235  0025E2  4B8E               	infsnz	fputs@i& (0+255),f,b
  3236  0025E4  2B8F               	incf	(fputs@i+1)& (0+255),f,b
  3237  0025E6                     l2852:
  3238  0025E6  FFFF               	dw	65535	; assembler added errata NOP
  3239                           
  3240                           ; BSR set to: 0
  3241  0025E8  518E               	movf	fputs@i& (0+255),w,b
  3242  0025EA  2589               	addwf	fputs@s& (0+255),w,b
  3243  0025EC  6ED9               	movwf	fsr2l,c
  3244  0025EE  518F               	movf	(fputs@i+1)& (0+255),w,b
  3245  0025F0  218A               	addwfc	(fputs@s+1)& (0+255),w,b
  3246  0025F2  6EDA               	movwf	fsr2h,c
  3247  0025F4  50DF               	movf	indf2,w,c
  3248  0025F6  6F8D               	movwf	fputs@c& (0+255),b
  3249  0025F8  518D               	movf	fputs@c& (0+255),w,b
  3250  0025FA  B4D8               	btfsc	status,2,c
  3251                           
  3252                           ; BSR set to: 0
  3253  0025FC  0012               	return		;funcret
  3254  0025FE  FFFF               	dw	65535	; assembler added errata NOP
  3255  002600  D7E5               	goto	l2848
  3256  002602  FFFF               	dw	65535	; errata NOP
  3257  002604                     __end_of_fputs:
  3258                           	opt callstack 0
  3259                           
  3260 ;; *************** function _fputc *****************
  3261 ;; Defined at:
  3262 ;;		line 8 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/nf_fputc.c"
  3263 ;; Parameters:    Size  Location     Type
  3264 ;;  c               2    0[BANK0 ] int 
  3265 ;;  fp              2    2[BANK0 ] PTR struct _IO_FILE
  3266 ;;		 -> sprintf@f(6), 
  3267 ;; Auto vars:     Size  Location     Type
  3268 ;;		None
  3269 ;; Return value:  Size  Location     Type
  3270 ;;                  2    0[BANK0 ] int 
  3271 ;; Registers used:
  3272 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3273 ;; Tracked objects:
  3274 ;;		On entry : 0/0
  3275 ;;		On exit  : 0/0
  3276 ;;		Unchanged: 0/0
  3277 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3278 ;;      Params:         0       4       0       0       0       0       0
  3279 ;;      Locals:         0       0       0       0       0       0       0
  3280 ;;      Temps:          0       5       0       0       0       0       0
  3281 ;;      Totals:         0       9       0       0       0       0       0
  3282 ;;Total ram usage:        9 bytes
  3283 ;; Hardware stack levels used:    1
  3284 ;; Hardware stack levels required when called:   11
  3285 ;; This function calls:
  3286 ;;		_putch
  3287 ;; This function is called by:
  3288 ;;		_pad
  3289 ;;		_vfpfcnvrt
  3290 ;;		_fputs
  3291 ;; This function uses a non-reentrant model
  3292 ;;
  3293                           
  3294                           	psect	text11
  3295  001D3C                     __ptext11:
  3296                           	opt callstack 0
  3297  001D3C                     _fputc:
  3298                           	opt callstack 0
  3299  001D3C  FFFF               	dw	65535	; assembler added errata NOP
  3300                           
  3301                           ; BSR set to: 0
  3302                           ;incstack = 0
  3303  001D3E  0100               	movlb	0	; () banked
  3304  001D40  5182               	movf	fputc@fp& (0+255),w,b
  3305  001D42  1183               	iorwf	(fputc@fp+1)& (0+255),w,b
  3306  001D44  B4D8               	btfsc	status,2,c
  3307  001D46  D004               	goto	u1910
  3308                           
  3309                           ; BSR set to: 0
  3310  001D48  5182               	movf	fputc@fp& (0+255),w,b
  3311  001D4A  1183               	iorwf	(fputc@fp+1)& (0+255),w,b
  3312  001D4C  A4D8               	btfss	status,2,c
  3313  001D4E  D005               	goto	l2824
  3314  001D50                     u1910:
  3315  001D50  FFFF               	dw	65535	; assembler added errata NOP
  3316                           
  3317                           ; BSR set to: 0
  3318  001D52  5180               	movf	fputc@c& (0+255),w,b
  3319  001D54  EC49  F015         	call	_putch
  3320  001D58  D045               	goto	l1350
  3321  001D5A                     l2824:
  3322  001D5A  FFFF               	dw	65535	; assembler added errata NOP
  3323                           
  3324                           ; BSR set to: 0
  3325  001D5C  EE20 F004          	lfsr	2,4
  3326  001D60  5182               	movf	fputc@fp& (0+255),w,b
  3327  001D62  26D9               	addwf	fsr2l,f,c
  3328  001D64  5183               	movf	(fputc@fp+1)& (0+255),w,b
  3329  001D66  22DA               	addwfc	fsr2h,f,c
  3330  001D68  50DE               	movf	postinc2,w,c
  3331  001D6A  10DE               	iorwf	postinc2,w,c
  3332  001D6C  B4D8               	btfsc	status,2,c
  3333  001D6E  D016               	goto	u1930
  3334                           
  3335                           ; BSR set to: 0
  3336  001D70  EE20 F004          	lfsr	2,4
  3337  001D74  5182               	movf	fputc@fp& (0+255),w,b
  3338  001D76  26D9               	addwf	fsr2l,f,c
  3339  001D78  5183               	movf	(fputc@fp+1)& (0+255),w,b
  3340  001D7A  22DA               	addwfc	fsr2h,f,c
  3341  001D7C  EE10 F002          	lfsr	1,2
  3342  001D80  5182               	movf	fputc@fp& (0+255),w,b
  3343  001D82  26E1               	addwf	fsr1l,f,c
  3344  001D84  5183               	movf	(fputc@fp+1)& (0+255),w,b
  3345  001D86  22E2               	addwfc	fsr1h,f,c
  3346  001D88  50DE               	movf	postinc2,w,c
  3347  001D8A  5CE6               	subwf	postinc1,w,c
  3348  001D8C  50E6               	movf	postinc1,w,c
  3349  001D8E  0A80               	xorlw	128
  3350  001D90  6F88               	movwf	(??_fputc+4)& (0+255),b
  3351  001D92  50DE               	movf	postinc2,w,c
  3352  001D94  0A80               	xorlw	128
  3353  001D96  5988               	subwfb	(??_fputc+4)& (0+255),w,b
  3354  001D98  B0D8               	btfsc	status,0,c
  3355  001D9A  D024               	goto	l1350
  3356  001D9C                     u1930:
  3357  001D9C  FFFF               	dw	65535	; assembler added errata NOP
  3358                           
  3359                           ; BSR set to: 0
  3360  001D9E  EE20 F002          	lfsr	2,2
  3361  001DA2  5182               	movf	fputc@fp& (0+255),w,b
  3362  001DA4  26D9               	addwf	fsr2l,f,c
  3363  001DA6  5183               	movf	(fputc@fp+1)& (0+255),w,b
  3364  001DA8  22DA               	addwfc	fsr2h,f,c
  3365  001DAA  CFDE F084          	movff	postinc2,??_fputc
  3366  001DAE  CFDD F085          	movff	postdec2,??_fputc+1
  3367  001DB2  C082  FFD9         	movff	fputc@fp,fsr2l
  3368  001DB6  C083  FFDA         	movff	fputc@fp+1,fsr2h
  3369  001DBA  CFDE F086          	movff	postinc2,??_fputc+2
  3370  001DBE  CFDD F087          	movff	postdec2,??_fputc+3
  3371  001DC2  5184               	movf	??_fputc& (0+255),w,b
  3372  001DC4  2586               	addwf	(??_fputc+2)& (0+255),w,b
  3373  001DC6  6ED9               	movwf	fsr2l,c
  3374  001DC8  5185               	movf	(??_fputc+1)& (0+255),w,b
  3375  001DCA  2187               	addwfc	(??_fputc+3)& (0+255),w,b
  3376  001DCC  6EDA               	movwf	fsr2h,c
  3377  001DCE  C080  FFDF         	movff	fputc@c,indf2
  3378  001DD2  EE20 F002          	lfsr	2,2
  3379  001DD6  5182               	movf	fputc@fp& (0+255),w,b
  3380  001DD8  26D9               	addwf	fsr2l,f,c
  3381  001DDA  5183               	movf	(fputc@fp+1)& (0+255),w,b
  3382  001DDC  22DA               	addwfc	fsr2h,f,c
  3383  001DDE  2ADE               	incf	postinc2,f,c
  3384  001DE0  0E00               	movlw	0
  3385  001DE2  22DD               	addwfc	postdec2,f,c
  3386  001DE4                     l1350:
  3387  001DE4  FFFF               	dw	65535	; assembler added errata NOP
  3388  001DE6  0012               	return		;funcret
  3389  001DE8  FFFF               	dw	65535	; errata NOP
  3390  001DEA                     __end_of_fputc:
  3391                           	opt callstack 0
  3392                           
  3393 ;; *************** function _putch *****************
  3394 ;; Defined at:
  3395 ;;		line 7 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/putch.c"
  3396 ;; Parameters:    Size  Location     Type
  3397 ;;  c               1    wreg     unsigned char 
  3398 ;; Auto vars:     Size  Location     Type
  3399 ;;  c               1    0[COMRAM] unsigned char 
  3400 ;; Return value:  Size  Location     Type
  3401 ;;                  1    wreg      void 
  3402 ;; Registers used:
  3403 ;;		wreg
  3404 ;; Tracked objects:
  3405 ;;		On entry : 0/0
  3406 ;;		On exit  : 0/0
  3407 ;;		Unchanged: 0/0
  3408 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3409 ;;      Params:         0       0       0       0       0       0       0
  3410 ;;      Locals:         0       0       0       0       0       0       0
  3411 ;;      Temps:          0       0       0       0       0       0       0
  3412 ;;      Totals:         0       0       0       0       0       0       0
  3413 ;;Total ram usage:        0 bytes
  3414 ;; Hardware stack levels used:    1
  3415 ;; Hardware stack levels required when called:   10
  3416 ;; This function calls:
  3417 ;;		Nothing
  3418 ;; This function is called by:
  3419 ;;		_fputc
  3420 ;; This function uses a non-reentrant model
  3421 ;;
  3422                           
  3423                           	psect	text12
  3424  002A92                     __ptext12:
  3425                           	opt callstack 0
  3426  002A92                     _putch:
  3427                           	opt callstack 0
  3428  002A92  FFFF               	dw	65535	; assembler added errata NOP
  3429                           
  3430                           ;incstack = 0
  3431  002A94  0012               	return		;funcret
  3432  002A96  FFFF               	dw	65535	; errata NOP
  3433  002A98                     __end_of_putch:
  3434                           	opt callstack 0
  3435                           
  3436 ;; *************** function _abs *****************
  3437 ;; Defined at:
  3438 ;;		line 1 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/abs.c"
  3439 ;; Parameters:    Size  Location     Type
  3440 ;;  a               2   18[BANK0 ] int 
  3441 ;; Auto vars:     Size  Location     Type
  3442 ;;		None
  3443 ;; Return value:  Size  Location     Type
  3444 ;;                  2   18[BANK0 ] int 
  3445 ;; Registers used:
  3446 ;;		wreg, status,2, status,0
  3447 ;; Tracked objects:
  3448 ;;		On entry : 0/0
  3449 ;;		On exit  : 0/0
  3450 ;;		Unchanged: 0/0
  3451 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3452 ;;      Params:         0       2       0       0       0       0       0
  3453 ;;      Locals:         0       0       0       0       0       0       0
  3454 ;;      Temps:          0       2       0       0       0       0       0
  3455 ;;      Totals:         0       4       0       0       0       0       0
  3456 ;;Total ram usage:        4 bytes
  3457 ;; Hardware stack levels used:    1
  3458 ;; Hardware stack levels required when called:   10
  3459 ;; This function calls:
  3460 ;;		Nothing
  3461 ;; This function is called by:
  3462 ;;		_dtoa
  3463 ;; This function uses a non-reentrant model
  3464 ;;
  3465                           
  3466                           	psect	text13
  3467  002756                     __ptext13:
  3468                           	opt callstack 0
  3469  002756                     _abs:
  3470                           	opt callstack 0
  3471  002756  FFFF               	dw	65535	; assembler added errata NOP
  3472                           
  3473                           ;incstack = 0
  3474  002758  0100               	movlb	0	; () banked
  3475  00275A  BF93               	btfsc	(abs@a+1)& (0+255),7,b
  3476  00275C  D005               	goto	u2060
  3477  00275E  5193               	movf	(abs@a+1)& (0+255),w,b
  3478  002760  E111               	bnz	l1290
  3479  002762  0592               	decf	abs@a& (0+255),w,b
  3480  002764  B0D8               	btfsc	status,0,c
  3481  002766  D00E               	goto	l1290
  3482  002768                     u2060:
  3483  002768  FFFF               	dw	65535	; assembler added errata NOP
  3484                           
  3485                           ; BSR set to: 0
  3486  00276A  C092  F094         	movff	abs@a,??_abs
  3487  00276E  C093  F095         	movff	abs@a+1,??_abs+1
  3488  002772  1F94               	comf	??_abs& (0+255),f,b
  3489  002774  1F95               	comf	(??_abs+1)& (0+255),f,b
  3490  002776  4B94               	infsnz	??_abs& (0+255),f,b
  3491  002778  2B95               	incf	(??_abs+1)& (0+255),f,b
  3492  00277A  C094  F092         	movff	??_abs,?_abs
  3493  00277E  C095  F093         	movff	??_abs+1,?_abs+1
  3494  002782  D005               	goto	l1293
  3495  002784                     l1290:
  3496  002784  FFFF               	dw	65535	; assembler added errata NOP
  3497                           
  3498                           ; BSR set to: 0
  3499  002786  C092  F092         	movff	abs@a,?_abs
  3500  00278A  C093  F093         	movff	abs@a+1,?_abs+1
  3501  00278E                     l1293:
  3502  00278E  FFFF               	dw	65535	; assembler added errata NOP
  3503                           
  3504                           ; BSR set to: 0
  3505  002790  0012               	return		;funcret
  3506  002792  FFFF               	dw	65535	; errata NOP
  3507  002794                     __end_of_abs:
  3508                           	opt callstack 0
  3509                           
  3510 ;; *************** function ___aomod *****************
  3511 ;; Defined at:
  3512 ;;		line 9 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/aomod.c"
  3513 ;; Parameters:    Size  Location     Type
  3514 ;;  dividend        8    0[BANK0 ] long long 
  3515 ;;  divisor         8    8[BANK0 ] long long 
  3516 ;; Auto vars:     Size  Location     Type
  3517 ;;  sign            1   17[BANK0 ] unsigned char 
  3518 ;;  counter         1   16[BANK0 ] unsigned char 
  3519 ;; Return value:  Size  Location     Type
  3520 ;;                  8    0[BANK0 ] long long 
  3521 ;; Registers used:
  3522 ;;		wreg, status,2, status,0
  3523 ;; Tracked objects:
  3524 ;;		On entry : 0/0
  3525 ;;		On exit  : 0/0
  3526 ;;		Unchanged: 0/0
  3527 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3528 ;;      Params:         0      16       0       0       0       0       0
  3529 ;;      Locals:         0       2       0       0       0       0       0
  3530 ;;      Temps:          0       0       0       0       0       0       0
  3531 ;;      Totals:         0      18       0       0       0       0       0
  3532 ;;Total ram usage:       18 bytes
  3533 ;; Hardware stack levels used:    1
  3534 ;; Hardware stack levels required when called:   10
  3535 ;; This function calls:
  3536 ;;		Nothing
  3537 ;; This function is called by:
  3538 ;;		_dtoa
  3539 ;; This function uses a non-reentrant model
  3540 ;;
  3541                           
  3542                           	psect	text14
  3543  001764                     __ptext14:
  3544                           	opt callstack 0
  3545  001764                     ___aomod:
  3546                           	opt callstack 0
  3547  001764  FFFF               	dw	65535	; assembler added errata NOP
  3548                           
  3549                           ; BSR set to: 0
  3550                           ;incstack = 0
  3551  001766  0E00               	movlw	0
  3552  001768  0100               	movlb	0	; () banked
  3553  00176A  6F91               	movwf	___aomod@sign& (0+255),b
  3554                           
  3555                           ; BSR set to: 0
  3556  00176C  AF87               	btfss	(___aomod@dividend+7)& (0+255),7,b
  3557  00176E  D012               	goto	l2970
  3558                           
  3559                           ; BSR set to: 0
  3560  001770  1F87               	comf	(___aomod@dividend+7)& (0+255),f,b
  3561  001772  1F86               	comf	(___aomod@dividend+6)& (0+255),f,b
  3562  001774  1F85               	comf	(___aomod@dividend+5)& (0+255),f,b
  3563  001776  1F84               	comf	(___aomod@dividend+4)& (0+255),f,b
  3564  001778  1F83               	comf	(___aomod@dividend+3)& (0+255),f,b
  3565  00177A  1F82               	comf	(___aomod@dividend+2)& (0+255),f,b
  3566  00177C  1F81               	comf	(___aomod@dividend+1)& (0+255),f,b
  3567  00177E  6D80               	negf	___aomod@dividend& (0+255),b
  3568  001780  0E00               	movlw	0
  3569  001782  2381               	addwfc	(___aomod@dividend+1)& (0+255),f,b
  3570  001784  2382               	addwfc	(___aomod@dividend+2)& (0+255),f,b
  3571  001786  2383               	addwfc	(___aomod@dividend+3)& (0+255),f,b
  3572  001788  2384               	addwfc	(___aomod@dividend+4)& (0+255),f,b
  3573  00178A  2385               	addwfc	(___aomod@dividend+5)& (0+255),f,b
  3574  00178C  2386               	addwfc	(___aomod@dividend+6)& (0+255),f,b
  3575  00178E  2387               	addwfc	(___aomod@dividend+7)& (0+255),f,b
  3576                           
  3577                           ; BSR set to: 0
  3578  001790  0E01               	movlw	1
  3579  001792  6F91               	movwf	___aomod@sign& (0+255),b
  3580  001794                     l2970:
  3581  001794  FFFF               	dw	65535	; assembler added errata NOP
  3582                           
  3583                           ; BSR set to: 0
  3584  001796  AF8F               	btfss	(___aomod@divisor+7)& (0+255),7,b
  3585  001798  D010               	goto	l2974
  3586                           
  3587                           ; BSR set to: 0
  3588  00179A  1F8F               	comf	(___aomod@divisor+7)& (0+255),f,b
  3589  00179C  1F8E               	comf	(___aomod@divisor+6)& (0+255),f,b
  3590  00179E  1F8D               	comf	(___aomod@divisor+5)& (0+255),f,b
  3591  0017A0  1F8C               	comf	(___aomod@divisor+4)& (0+255),f,b
  3592  0017A2  1F8B               	comf	(___aomod@divisor+3)& (0+255),f,b
  3593  0017A4  1F8A               	comf	(___aomod@divisor+2)& (0+255),f,b
  3594  0017A6  1F89               	comf	(___aomod@divisor+1)& (0+255),f,b
  3595  0017A8  6D88               	negf	___aomod@divisor& (0+255),b
  3596  0017AA  0E00               	movlw	0
  3597  0017AC  2389               	addwfc	(___aomod@divisor+1)& (0+255),f,b
  3598  0017AE  238A               	addwfc	(___aomod@divisor+2)& (0+255),f,b
  3599  0017B0  238B               	addwfc	(___aomod@divisor+3)& (0+255),f,b
  3600  0017B2  238C               	addwfc	(___aomod@divisor+4)& (0+255),f,b
  3601  0017B4  238D               	addwfc	(___aomod@divisor+5)& (0+255),f,b
  3602  0017B6  238E               	addwfc	(___aomod@divisor+6)& (0+255),f,b
  3603  0017B8  238F               	addwfc	(___aomod@divisor+7)& (0+255),f,b
  3604  0017BA                     l2974:
  3605  0017BA  FFFF               	dw	65535	; assembler added errata NOP
  3606                           
  3607                           ; BSR set to: 0
  3608  0017BC  5188               	movf	___aomod@divisor& (0+255),w,b
  3609  0017BE  1189               	iorwf	(___aomod@divisor+1)& (0+255),w,b
  3610  0017C0  118A               	iorwf	(___aomod@divisor+2)& (0+255),w,b
  3611  0017C2  118B               	iorwf	(___aomod@divisor+3)& (0+255),w,b
  3612  0017C4  118C               	iorwf	(___aomod@divisor+4)& (0+255),w,b
  3613  0017C6  118D               	iorwf	(___aomod@divisor+5)& (0+255),w,b
  3614  0017C8  118E               	iorwf	(___aomod@divisor+6)& (0+255),w,b
  3615  0017CA  118F               	iorwf	(___aomod@divisor+7)& (0+255),w,b
  3616  0017CC  B4D8               	btfsc	status,2,c
  3617  0017CE  D040               	goto	l2990
  3618                           
  3619                           ; BSR set to: 0
  3620  0017D0  0E01               	movlw	1
  3621  0017D2  6F90               	movwf	___aomod@counter& (0+255),b
  3622  0017D4  D00B               	goto	l2980
  3623  0017D6                     l2978:
  3624  0017D6  FFFF               	dw	65535	; assembler added errata NOP
  3625                           
  3626                           ; BSR set to: 0
  3627  0017D8  90D8               	bcf	status,0,c
  3628  0017DA  3788               	rlcf	___aomod@divisor& (0+255),f,b
  3629  0017DC  3789               	rlcf	(___aomod@divisor+1)& (0+255),f,b
  3630  0017DE  378A               	rlcf	(___aomod@divisor+2)& (0+255),f,b
  3631  0017E0  378B               	rlcf	(___aomod@divisor+3)& (0+255),f,b
  3632  0017E2  378C               	rlcf	(___aomod@divisor+4)& (0+255),f,b
  3633  0017E4  378D               	rlcf	(___aomod@divisor+5)& (0+255),f,b
  3634  0017E6  378E               	rlcf	(___aomod@divisor+6)& (0+255),f,b
  3635  0017E8  378F               	rlcf	(___aomod@divisor+7)& (0+255),f,b
  3636  0017EA  2B90               	incf	___aomod@counter& (0+255),f,b
  3637  0017EC                     l2980:
  3638  0017EC  FFFF               	dw	65535	; assembler added errata NOP
  3639                           
  3640                           ; BSR set to: 0
  3641  0017EE  AF8F               	btfss	(___aomod@divisor+7)& (0+255),7,b
  3642  0017F0  D7F2               	goto	l2978
  3643  0017F2                     u2190:
  3644  0017F2  FFFF               	dw	65535	; assembler added errata NOP
  3645                           
  3646                           ; BSR set to: 0
  3647  0017F4  5188               	movf	___aomod@divisor& (0+255),w,b
  3648  0017F6  5D80               	subwf	___aomod@dividend& (0+255),w,b
  3649  0017F8  5189               	movf	(___aomod@divisor+1)& (0+255),w,b
  3650  0017FA  5981               	subwfb	(___aomod@dividend+1)& (0+255),w,b
  3651  0017FC  518A               	movf	(___aomod@divisor+2)& (0+255),w,b
  3652  0017FE  5982               	subwfb	(___aomod@dividend+2)& (0+255),w,b
  3653  001800  518B               	movf	(___aomod@divisor+3)& (0+255),w,b
  3654  001802  5983               	subwfb	(___aomod@dividend+3)& (0+255),w,b
  3655  001804  518C               	movf	(___aomod@divisor+4)& (0+255),w,b
  3656  001806  5984               	subwfb	(___aomod@dividend+4)& (0+255),w,b
  3657  001808  518D               	movf	(___aomod@divisor+5)& (0+255),w,b
  3658  00180A  5985               	subwfb	(___aomod@dividend+5)& (0+255),w,b
  3659  00180C  518E               	movf	(___aomod@divisor+6)& (0+255),w,b
  3660  00180E  5986               	subwfb	(___aomod@dividend+6)& (0+255),w,b
  3661  001810  518F               	movf	(___aomod@divisor+7)& (0+255),w,b
  3662  001812  5987               	subwfb	(___aomod@dividend+7)& (0+255),w,b
  3663  001814  A0D8               	btfss	status,0,c
  3664  001816  D010               	goto	l2986
  3665                           
  3666                           ; BSR set to: 0
  3667  001818  5188               	movf	___aomod@divisor& (0+255),w,b
  3668  00181A  5F80               	subwf	___aomod@dividend& (0+255),f,b
  3669  00181C  5189               	movf	(___aomod@divisor+1)& (0+255),w,b
  3670  00181E  5B81               	subwfb	(___aomod@dividend+1)& (0+255),f,b
  3671  001820  518A               	movf	(___aomod@divisor+2)& (0+255),w,b
  3672  001822  5B82               	subwfb	(___aomod@dividend+2)& (0+255),f,b
  3673  001824  518B               	movf	(___aomod@divisor+3)& (0+255),w,b
  3674  001826  5B83               	subwfb	(___aomod@dividend+3)& (0+255),f,b
  3675  001828  518C               	movf	(___aomod@divisor+4)& (0+255),w,b
  3676  00182A  5B84               	subwfb	(___aomod@dividend+4)& (0+255),f,b
  3677  00182C  518D               	movf	(___aomod@divisor+5)& (0+255),w,b
  3678  00182E  5B85               	subwfb	(___aomod@dividend+5)& (0+255),f,b
  3679  001830  518E               	movf	(___aomod@divisor+6)& (0+255),w,b
  3680  001832  5B86               	subwfb	(___aomod@dividend+6)& (0+255),f,b
  3681  001834  518F               	movf	(___aomod@divisor+7)& (0+255),w,b
  3682  001836  5B87               	subwfb	(___aomod@dividend+7)& (0+255),f,b
  3683  001838                     l2986:
  3684  001838  FFFF               	dw	65535	; assembler added errata NOP
  3685                           
  3686                           ; BSR set to: 0
  3687  00183A  90D8               	bcf	status,0,c
  3688  00183C  338F               	rrcf	(___aomod@divisor+7)& (0+255),f,b
  3689  00183E  338E               	rrcf	(___aomod@divisor+6)& (0+255),f,b
  3690  001840  338D               	rrcf	(___aomod@divisor+5)& (0+255),f,b
  3691  001842  338C               	rrcf	(___aomod@divisor+4)& (0+255),f,b
  3692  001844  338B               	rrcf	(___aomod@divisor+3)& (0+255),f,b
  3693  001846  338A               	rrcf	(___aomod@divisor+2)& (0+255),f,b
  3694  001848  3389               	rrcf	(___aomod@divisor+1)& (0+255),f,b
  3695  00184A  3388               	rrcf	___aomod@divisor& (0+255),f,b
  3696                           
  3697                           ; BSR set to: 0
  3698  00184C  2F90               	decfsz	___aomod@counter& (0+255),f,b
  3699  00184E  D7D1               	goto	u2190
  3700  001850                     l2990:
  3701  001850  FFFF               	dw	65535	; assembler added errata NOP
  3702                           
  3703                           ; BSR set to: 0
  3704  001852  5191               	movf	___aomod@sign& (0+255),w,b
  3705  001854  B4D8               	btfsc	status,2,c
  3706  001856  D010               	goto	l2994
  3707                           
  3708                           ; BSR set to: 0
  3709  001858  1F87               	comf	(___aomod@dividend+7)& (0+255),f,b
  3710  00185A  1F86               	comf	(___aomod@dividend+6)& (0+255),f,b
  3711  00185C  1F85               	comf	(___aomod@dividend+5)& (0+255),f,b
  3712  00185E  1F84               	comf	(___aomod@dividend+4)& (0+255),f,b
  3713  001860  1F83               	comf	(___aomod@dividend+3)& (0+255),f,b
  3714  001862  1F82               	comf	(___aomod@dividend+2)& (0+255),f,b
  3715  001864  1F81               	comf	(___aomod@dividend+1)& (0+255),f,b
  3716  001866  6D80               	negf	___aomod@dividend& (0+255),b
  3717  001868  0E00               	movlw	0
  3718  00186A  2381               	addwfc	(___aomod@dividend+1)& (0+255),f,b
  3719  00186C  2382               	addwfc	(___aomod@dividend+2)& (0+255),f,b
  3720  00186E  2383               	addwfc	(___aomod@dividend+3)& (0+255),f,b
  3721  001870  2384               	addwfc	(___aomod@dividend+4)& (0+255),f,b
  3722  001872  2385               	addwfc	(___aomod@dividend+5)& (0+255),f,b
  3723  001874  2386               	addwfc	(___aomod@dividend+6)& (0+255),f,b
  3724  001876  2387               	addwfc	(___aomod@dividend+7)& (0+255),f,b
  3725  001878                     l2994:
  3726  001878  FFFF               	dw	65535	; assembler added errata NOP
  3727                           
  3728                           ; BSR set to: 0
  3729  00187A  C080  F080         	movff	___aomod@dividend,?___aomod
  3730  00187E  C081  F081         	movff	___aomod@dividend+1,?___aomod+1
  3731  001882  C082  F082         	movff	___aomod@dividend+2,?___aomod+2
  3732  001886  C083  F083         	movff	___aomod@dividend+3,?___aomod+3
  3733  00188A  C084  F084         	movff	___aomod@dividend+4,?___aomod+4
  3734  00188E  C085  F085         	movff	___aomod@dividend+5,?___aomod+5
  3735  001892  C086  F086         	movff	___aomod@dividend+6,?___aomod+6
  3736  001896  C087  F087         	movff	___aomod@dividend+7,?___aomod+7
  3737                           
  3738                           ; BSR set to: 0
  3739  00189A  0012               	return		;funcret
  3740  00189C  FFFF               	dw	65535	; errata NOP
  3741  00189E                     __end_of___aomod:
  3742                           	opt callstack 0
  3743                           
  3744 ;; *************** function ___aodiv *****************
  3745 ;; Defined at:
  3746 ;;		line 9 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/aodiv.c"
  3747 ;; Parameters:    Size  Location     Type
  3748 ;;  dividend        8    0[BANK0 ] long long 
  3749 ;;  divisor         8    8[BANK0 ] long long 
  3750 ;; Auto vars:     Size  Location     Type
  3751 ;;  quotient        8   18[BANK0 ] long long 
  3752 ;;  sign            1   17[BANK0 ] unsigned char 
  3753 ;;  counter         1   16[BANK0 ] unsigned char 
  3754 ;; Return value:  Size  Location     Type
  3755 ;;                  8    0[BANK0 ] long long 
  3756 ;; Registers used:
  3757 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3758 ;; Tracked objects:
  3759 ;;		On entry : 0/0
  3760 ;;		On exit  : 0/0
  3761 ;;		Unchanged: 0/0
  3762 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3763 ;;      Params:         0      16       0       0       0       0       0
  3764 ;;      Locals:         0      10       0       0       0       0       0
  3765 ;;      Temps:          0       0       0       0       0       0       0
  3766 ;;      Totals:         0      26       0       0       0       0       0
  3767 ;;Total ram usage:       26 bytes
  3768 ;; Hardware stack levels used:    1
  3769 ;; Hardware stack levels required when called:   10
  3770 ;; This function calls:
  3771 ;;		Nothing
  3772 ;; This function is called by:
  3773 ;;		_dtoa
  3774 ;; This function uses a non-reentrant model
  3775 ;;
  3776                           
  3777                           	psect	text15
  3778  0014AA                     __ptext15:
  3779                           	opt callstack 0
  3780  0014AA                     ___aodiv:
  3781                           	opt callstack 0
  3782  0014AA  FFFF               	dw	65535	; assembler added errata NOP
  3783                           
  3784                           ; BSR set to: 0
  3785                           ;incstack = 0
  3786  0014AC  0E00               	movlw	0
  3787  0014AE  0100               	movlb	0	; () banked
  3788  0014B0  6F91               	movwf	___aodiv@sign& (0+255),b
  3789                           
  3790                           ; BSR set to: 0
  3791  0014B2  AF8F               	btfss	(___aodiv@divisor+7)& (0+255),7,b
  3792  0014B4  D012               	goto	l2926
  3793                           
  3794                           ; BSR set to: 0
  3795  0014B6  1F8F               	comf	(___aodiv@divisor+7)& (0+255),f,b
  3796  0014B8  1F8E               	comf	(___aodiv@divisor+6)& (0+255),f,b
  3797  0014BA  1F8D               	comf	(___aodiv@divisor+5)& (0+255),f,b
  3798  0014BC  1F8C               	comf	(___aodiv@divisor+4)& (0+255),f,b
  3799  0014BE  1F8B               	comf	(___aodiv@divisor+3)& (0+255),f,b
  3800  0014C0  1F8A               	comf	(___aodiv@divisor+2)& (0+255),f,b
  3801  0014C2  1F89               	comf	(___aodiv@divisor+1)& (0+255),f,b
  3802  0014C4  6D88               	negf	___aodiv@divisor& (0+255),b
  3803  0014C6  0E00               	movlw	0
  3804  0014C8  2389               	addwfc	(___aodiv@divisor+1)& (0+255),f,b
  3805  0014CA  238A               	addwfc	(___aodiv@divisor+2)& (0+255),f,b
  3806  0014CC  238B               	addwfc	(___aodiv@divisor+3)& (0+255),f,b
  3807  0014CE  238C               	addwfc	(___aodiv@divisor+4)& (0+255),f,b
  3808  0014D0  238D               	addwfc	(___aodiv@divisor+5)& (0+255),f,b
  3809  0014D2  238E               	addwfc	(___aodiv@divisor+6)& (0+255),f,b
  3810  0014D4  238F               	addwfc	(___aodiv@divisor+7)& (0+255),f,b
  3811                           
  3812                           ; BSR set to: 0
  3813  0014D6  0E01               	movlw	1
  3814  0014D8  6F91               	movwf	___aodiv@sign& (0+255),b
  3815  0014DA                     l2926:
  3816  0014DA  FFFF               	dw	65535	; assembler added errata NOP
  3817                           
  3818                           ; BSR set to: 0
  3819  0014DC  AF87               	btfss	(___aodiv@dividend+7)& (0+255),7,b
  3820  0014DE  D012               	goto	l2932
  3821                           
  3822                           ; BSR set to: 0
  3823  0014E0  1F87               	comf	(___aodiv@dividend+7)& (0+255),f,b
  3824  0014E2  1F86               	comf	(___aodiv@dividend+6)& (0+255),f,b
  3825  0014E4  1F85               	comf	(___aodiv@dividend+5)& (0+255),f,b
  3826  0014E6  1F84               	comf	(___aodiv@dividend+4)& (0+255),f,b
  3827  0014E8  1F83               	comf	(___aodiv@dividend+3)& (0+255),f,b
  3828  0014EA  1F82               	comf	(___aodiv@dividend+2)& (0+255),f,b
  3829  0014EC  1F81               	comf	(___aodiv@dividend+1)& (0+255),f,b
  3830  0014EE  6D80               	negf	___aodiv@dividend& (0+255),b
  3831  0014F0  0E00               	movlw	0
  3832  0014F2  2381               	addwfc	(___aodiv@dividend+1)& (0+255),f,b
  3833  0014F4  2382               	addwfc	(___aodiv@dividend+2)& (0+255),f,b
  3834  0014F6  2383               	addwfc	(___aodiv@dividend+3)& (0+255),f,b
  3835  0014F8  2384               	addwfc	(___aodiv@dividend+4)& (0+255),f,b
  3836  0014FA  2385               	addwfc	(___aodiv@dividend+5)& (0+255),f,b
  3837  0014FC  2386               	addwfc	(___aodiv@dividend+6)& (0+255),f,b
  3838  0014FE  2387               	addwfc	(___aodiv@dividend+7)& (0+255),f,b
  3839                           
  3840                           ; BSR set to: 0
  3841  001500  0E01               	movlw	1
  3842  001502  1B91               	xorwf	___aodiv@sign& (0+255),f,b
  3843  001504                     l2932:
  3844  001504  FFFF               	dw	65535	; assembler added errata NOP
  3845                           
  3846                           ; BSR set to: 0
  3847  001506  EE20  F092         	lfsr	2,___aodiv@quotient
  3848  00150A  0E07               	movlw	7
  3849  00150C                     u2111:
  3850  00150C  6ADE               	clrf	postinc2,c
  3851  00150E  06E8               	decf	wreg,f,c
  3852  001510  E2FD               	bc	u2111
  3853                           
  3854                           ; BSR set to: 0
  3855  001512  5188               	movf	___aodiv@divisor& (0+255),w,b
  3856  001514  1189               	iorwf	(___aodiv@divisor+1)& (0+255),w,b
  3857  001516  118A               	iorwf	(___aodiv@divisor+2)& (0+255),w,b
  3858  001518  118B               	iorwf	(___aodiv@divisor+3)& (0+255),w,b
  3859  00151A  118C               	iorwf	(___aodiv@divisor+4)& (0+255),w,b
  3860  00151C  118D               	iorwf	(___aodiv@divisor+5)& (0+255),w,b
  3861  00151E  118E               	iorwf	(___aodiv@divisor+6)& (0+255),w,b
  3862  001520  118F               	iorwf	(___aodiv@divisor+7)& (0+255),w,b
  3863  001522  B4D8               	btfsc	status,2,c
  3864  001524  D04A               	goto	l2954
  3865                           
  3866                           ; BSR set to: 0
  3867  001526  0E01               	movlw	1
  3868  001528  6F90               	movwf	___aodiv@counter& (0+255),b
  3869  00152A  D00B               	goto	l2940
  3870  00152C                     l2938:
  3871  00152C  FFFF               	dw	65535	; assembler added errata NOP
  3872                           
  3873                           ; BSR set to: 0
  3874  00152E  90D8               	bcf	status,0,c
  3875  001530  3788               	rlcf	___aodiv@divisor& (0+255),f,b
  3876  001532  3789               	rlcf	(___aodiv@divisor+1)& (0+255),f,b
  3877  001534  378A               	rlcf	(___aodiv@divisor+2)& (0+255),f,b
  3878  001536  378B               	rlcf	(___aodiv@divisor+3)& (0+255),f,b
  3879  001538  378C               	rlcf	(___aodiv@divisor+4)& (0+255),f,b
  3880  00153A  378D               	rlcf	(___aodiv@divisor+5)& (0+255),f,b
  3881  00153C  378E               	rlcf	(___aodiv@divisor+6)& (0+255),f,b
  3882  00153E  378F               	rlcf	(___aodiv@divisor+7)& (0+255),f,b
  3883  001540  2B90               	incf	___aodiv@counter& (0+255),f,b
  3884  001542                     l2940:
  3885  001542  FFFF               	dw	65535	; assembler added errata NOP
  3886                           
  3887                           ; BSR set to: 0
  3888  001544  AF8F               	btfss	(___aodiv@divisor+7)& (0+255),7,b
  3889  001546  D7F2               	goto	l2938
  3890  001548                     u2130:
  3891  001548  FFFF               	dw	65535	; assembler added errata NOP
  3892                           
  3893                           ; BSR set to: 0
  3894  00154A  90D8               	bcf	status,0,c
  3895  00154C  3792               	rlcf	___aodiv@quotient& (0+255),f,b
  3896  00154E  3793               	rlcf	(___aodiv@quotient+1)& (0+255),f,b
  3897  001550  3794               	rlcf	(___aodiv@quotient+2)& (0+255),f,b
  3898  001552  3795               	rlcf	(___aodiv@quotient+3)& (0+255),f,b
  3899  001554  3796               	rlcf	(___aodiv@quotient+4)& (0+255),f,b
  3900  001556  3797               	rlcf	(___aodiv@quotient+5)& (0+255),f,b
  3901  001558  3798               	rlcf	(___aodiv@quotient+6)& (0+255),f,b
  3902  00155A  3799               	rlcf	(___aodiv@quotient+7)& (0+255),f,b
  3903                           
  3904                           ; BSR set to: 0
  3905  00155C  5188               	movf	___aodiv@divisor& (0+255),w,b
  3906  00155E  5D80               	subwf	___aodiv@dividend& (0+255),w,b
  3907  001560  5189               	movf	(___aodiv@divisor+1)& (0+255),w,b
  3908  001562  5981               	subwfb	(___aodiv@dividend+1)& (0+255),w,b
  3909  001564  518A               	movf	(___aodiv@divisor+2)& (0+255),w,b
  3910  001566  5982               	subwfb	(___aodiv@dividend+2)& (0+255),w,b
  3911  001568  518B               	movf	(___aodiv@divisor+3)& (0+255),w,b
  3912  00156A  5983               	subwfb	(___aodiv@dividend+3)& (0+255),w,b
  3913  00156C  518C               	movf	(___aodiv@divisor+4)& (0+255),w,b
  3914  00156E  5984               	subwfb	(___aodiv@dividend+4)& (0+255),w,b
  3915  001570  518D               	movf	(___aodiv@divisor+5)& (0+255),w,b
  3916  001572  5985               	subwfb	(___aodiv@dividend+5)& (0+255),w,b
  3917  001574  518E               	movf	(___aodiv@divisor+6)& (0+255),w,b
  3918  001576  5986               	subwfb	(___aodiv@dividend+6)& (0+255),w,b
  3919  001578  518F               	movf	(___aodiv@divisor+7)& (0+255),w,b
  3920  00157A  5987               	subwfb	(___aodiv@dividend+7)& (0+255),w,b
  3921  00157C  A0D8               	btfss	status,0,c
  3922  00157E  D011               	goto	l2950
  3923                           
  3924                           ; BSR set to: 0
  3925  001580  5188               	movf	___aodiv@divisor& (0+255),w,b
  3926  001582  5F80               	subwf	___aodiv@dividend& (0+255),f,b
  3927  001584  5189               	movf	(___aodiv@divisor+1)& (0+255),w,b
  3928  001586  5B81               	subwfb	(___aodiv@dividend+1)& (0+255),f,b
  3929  001588  518A               	movf	(___aodiv@divisor+2)& (0+255),w,b
  3930  00158A  5B82               	subwfb	(___aodiv@dividend+2)& (0+255),f,b
  3931  00158C  518B               	movf	(___aodiv@divisor+3)& (0+255),w,b
  3932  00158E  5B83               	subwfb	(___aodiv@dividend+3)& (0+255),f,b
  3933  001590  518C               	movf	(___aodiv@divisor+4)& (0+255),w,b
  3934  001592  5B84               	subwfb	(___aodiv@dividend+4)& (0+255),f,b
  3935  001594  518D               	movf	(___aodiv@divisor+5)& (0+255),w,b
  3936  001596  5B85               	subwfb	(___aodiv@dividend+5)& (0+255),f,b
  3937  001598  518E               	movf	(___aodiv@divisor+6)& (0+255),w,b
  3938  00159A  5B86               	subwfb	(___aodiv@dividend+6)& (0+255),f,b
  3939  00159C  518F               	movf	(___aodiv@divisor+7)& (0+255),w,b
  3940  00159E  5B87               	subwfb	(___aodiv@dividend+7)& (0+255),f,b
  3941                           
  3942                           ; BSR set to: 0
  3943  0015A0  8192               	bsf	___aodiv@quotient& (0+255),0,b
  3944  0015A2                     l2950:
  3945  0015A2  FFFF               	dw	65535	; assembler added errata NOP
  3946                           
  3947                           ; BSR set to: 0
  3948  0015A4  90D8               	bcf	status,0,c
  3949  0015A6  338F               	rrcf	(___aodiv@divisor+7)& (0+255),f,b
  3950  0015A8  338E               	rrcf	(___aodiv@divisor+6)& (0+255),f,b
  3951  0015AA  338D               	rrcf	(___aodiv@divisor+5)& (0+255),f,b
  3952  0015AC  338C               	rrcf	(___aodiv@divisor+4)& (0+255),f,b
  3953  0015AE  338B               	rrcf	(___aodiv@divisor+3)& (0+255),f,b
  3954  0015B0  338A               	rrcf	(___aodiv@divisor+2)& (0+255),f,b
  3955  0015B2  3389               	rrcf	(___aodiv@divisor+1)& (0+255),f,b
  3956  0015B4  3388               	rrcf	___aodiv@divisor& (0+255),f,b
  3957                           
  3958                           ; BSR set to: 0
  3959  0015B6  2F90               	decfsz	___aodiv@counter& (0+255),f,b
  3960  0015B8  D7C7               	goto	u2130
  3961  0015BA                     l2954:
  3962  0015BA  FFFF               	dw	65535	; assembler added errata NOP
  3963                           
  3964                           ; BSR set to: 0
  3965  0015BC  5191               	movf	___aodiv@sign& (0+255),w,b
  3966  0015BE  B4D8               	btfsc	status,2,c
  3967  0015C0  D010               	goto	l2958
  3968                           
  3969                           ; BSR set to: 0
  3970  0015C2  1F99               	comf	(___aodiv@quotient+7)& (0+255),f,b
  3971  0015C4  1F98               	comf	(___aodiv@quotient+6)& (0+255),f,b
  3972  0015C6  1F97               	comf	(___aodiv@quotient+5)& (0+255),f,b
  3973  0015C8  1F96               	comf	(___aodiv@quotient+4)& (0+255),f,b
  3974  0015CA  1F95               	comf	(___aodiv@quotient+3)& (0+255),f,b
  3975  0015CC  1F94               	comf	(___aodiv@quotient+2)& (0+255),f,b
  3976  0015CE  1F93               	comf	(___aodiv@quotient+1)& (0+255),f,b
  3977  0015D0  6D92               	negf	___aodiv@quotient& (0+255),b
  3978  0015D2  0E00               	movlw	0
  3979  0015D4  2393               	addwfc	(___aodiv@quotient+1)& (0+255),f,b
  3980  0015D6  2394               	addwfc	(___aodiv@quotient+2)& (0+255),f,b
  3981  0015D8  2395               	addwfc	(___aodiv@quotient+3)& (0+255),f,b
  3982  0015DA  2396               	addwfc	(___aodiv@quotient+4)& (0+255),f,b
  3983  0015DC  2397               	addwfc	(___aodiv@quotient+5)& (0+255),f,b
  3984  0015DE  2398               	addwfc	(___aodiv@quotient+6)& (0+255),f,b
  3985  0015E0  2399               	addwfc	(___aodiv@quotient+7)& (0+255),f,b
  3986  0015E2                     l2958:
  3987  0015E2  FFFF               	dw	65535	; assembler added errata NOP
  3988                           
  3989                           ; BSR set to: 0
  3990  0015E4  C092  F080         	movff	___aodiv@quotient,?___aodiv
  3991  0015E8  C093  F081         	movff	___aodiv@quotient+1,?___aodiv+1
  3992  0015EC  C094  F082         	movff	___aodiv@quotient+2,?___aodiv+2
  3993  0015F0  C095  F083         	movff	___aodiv@quotient+3,?___aodiv+3
  3994  0015F4  C096  F084         	movff	___aodiv@quotient+4,?___aodiv+4
  3995  0015F8  C097  F085         	movff	___aodiv@quotient+5,?___aodiv+5
  3996  0015FC  C098  F086         	movff	___aodiv@quotient+6,?___aodiv+6
  3997  001600  C099  F087         	movff	___aodiv@quotient+7,?___aodiv+7
  3998                           
  3999                           ; BSR set to: 0
  4000  001604  0012               	return		;funcret
  4001  001606  FFFF               	dw	65535	; errata NOP
  4002  001608                     __end_of___aodiv:
  4003                           	opt callstack 0
  4004                           
  4005 ;; *************** function _atoi *****************
  4006 ;; Defined at:
  4007 ;;		line 4 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/atoi.c"
  4008 ;; Parameters:    Size  Location     Type
  4009 ;;  s               2    7[BANK0 ] PTR const unsigned char 
  4010 ;;		 -> STR_4(18), STR_3(17), STR_2(17), STR_1(17), 
  4011 ;; Auto vars:     Size  Location     Type
  4012 ;;  n               2   20[BANK0 ] int 
  4013 ;;  neg             2   13[BANK0 ] int 
  4014 ;; Return value:  Size  Location     Type
  4015 ;;                  2    7[BANK0 ] int 
  4016 ;; Registers used:
  4017 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4018 ;; Tracked objects:
  4019 ;;		On entry : 0/0
  4020 ;;		On exit  : 0/0
  4021 ;;		Unchanged: 0/0
  4022 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4023 ;;      Params:         0       2       0       0       0       0       0
  4024 ;;      Locals:         0       9       0       0       0       0       0
  4025 ;;      Temps:          0       4       0       0       0       0       0
  4026 ;;      Totals:         0      15       0       0       0       0       0
  4027 ;;Total ram usage:       15 bytes
  4028 ;; Hardware stack levels used:    1
  4029 ;; Hardware stack levels required when called:   11
  4030 ;; This function calls:
  4031 ;;		___wmul
  4032 ;;		_isdigit
  4033 ;;		_isspace
  4034 ;; This function is called by:
  4035 ;;		_vfpfcnvrt
  4036 ;; This function uses a non-reentrant model
  4037 ;;
  4038                           
  4039                           	psect	text16
  4040  0011DA                     __ptext16:
  4041                           	opt callstack 0
  4042  0011DA                     _atoi:
  4043                           	opt callstack 0
  4044  0011DA  FFFF               	dw	65535	; assembler added errata NOP
  4045                           
  4046                           ; BSR set to: 0
  4047                           ;incstack = 0
  4048  0011DC  0E00               	movlw	0
  4049  0011DE  0100               	movlb	0	; () banked
  4050  0011E0  6F95               	movwf	(atoi@n+1)& (0+255),b
  4051  0011E2  0E00               	movlw	0
  4052  0011E4  6F94               	movwf	atoi@n& (0+255),b
  4053  0011E6  0E00               	movlw	0
  4054  0011E8  6F8E               	movwf	(atoi@neg+1)& (0+255),b
  4055  0011EA  0E00               	movlw	0
  4056  0011EC  6F8D               	movwf	atoi@neg& (0+255),b
  4057  0011EE  D003               	goto	l3206
  4058  0011F0                     l3204:
  4059  0011F0  FFFF               	dw	65535	; assembler added errata NOP
  4060                           
  4061                           ; BSR set to: 0
  4062  0011F2  4B87               	infsnz	atoi@s& (0+255),f,b
  4063  0011F4  2B88               	incf	(atoi@s+1)& (0+255),f,b
  4064  0011F6                     l3206:
  4065  0011F6  FFFF               	dw	65535	; assembler added errata NOP
  4066                           
  4067                           ; BSR set to: 0
  4068  0011F8  0E01               	movlw	1
  4069  0011FA  6F93               	movwf	_atoi$1500& (0+255),b
  4070                           
  4071                           ; BSR set to: 0
  4072  0011FC  C087  FFF6         	movff	atoi@s,tblptrl
  4073  001200  C088  FFF7         	movff	atoi@s+1,tblptrh
  4074  001204                     	if	0	;tblptru may be non-zero
  4075  001204                     	endif
  4076  001204                     	if	0	;tblptru may be non-zero
  4077  001204                     	endif
  4078  001204  0008               	tblrd		*
  4079  001206  FFFF               	dw	65535	; errata NOP
  4080  001208  50F5               	movf	tablat,w,c
  4081  00120A  0A20               	xorlw	32
  4082  00120C  B4D8               	btfsc	status,2,c
  4083  00120E  D019               	goto	l3214
  4084                           
  4085                           ; BSR set to: 0
  4086  001210  0EF7               	movlw	247
  4087  001212  6F89               	movwf	??_atoi& (0+255),b
  4088  001214  0EFF               	movlw	255
  4089  001216  6F8A               	movwf	(??_atoi+1)& (0+255),b
  4090  001218  C087  FFF6         	movff	atoi@s,tblptrl
  4091  00121C  C088  FFF7         	movff	atoi@s+1,tblptrh
  4092  001220                     	if	0	;tblptru may be non-zero
  4093  001220                     	endif
  4094  001220                     	if	0	;tblptru may be non-zero
  4095  001220                     	endif
  4096  001220  0008               	tblrd		*
  4097  001222  FFFF               	dw	65535	; errata NOP
  4098  001224  50F5               	movf	tablat,w,c
  4099  001226  6F8B               	movwf	(??_atoi+2)& (0+255),b
  4100  001228  6B8C               	clrf	(??_atoi+3)& (0+255),b
  4101  00122A  5189               	movf	??_atoi& (0+255),w,b
  4102  00122C  278B               	addwf	(??_atoi+2)& (0+255),f,b
  4103  00122E  518A               	movf	(??_atoi+1)& (0+255),w,b
  4104  001230  238C               	addwfc	(??_atoi+3)& (0+255),f,b
  4105  001232  518C               	movf	(??_atoi+3)& (0+255),w,b
  4106  001234  E104               	bnz	u2620
  4107  001236  0E05               	movlw	5
  4108  001238  5D8B               	subwf	(??_atoi+2)& (0+255),w,b
  4109  00123A  A0D8               	btfss	status,0,c
  4110  00123C  D002               	goto	l3214
  4111  00123E                     u2620:
  4112                           
  4113                           ; BSR set to: 0
  4114  00123E  0E00               	movlw	0
  4115  001240  6F93               	movwf	_atoi$1500& (0+255),b
  4116  001242                     l3214:
  4117  001242  FFFF               	dw	65535	; assembler added errata NOP
  4118                           
  4119                           ; BSR set to: 0
  4120  001244  C093  F08F         	movff	_atoi$1500,_atoi$1499
  4121  001248  6B90               	clrf	(_atoi$1499+1)& (0+255),b
  4122                           
  4123                           ; BSR set to: 0
  4124  00124A  518F               	movf	_atoi$1499& (0+255),w,b
  4125  00124C  1190               	iorwf	(_atoi$1499+1)& (0+255),w,b
  4126  00124E  B4D8               	btfsc	status,2,c
  4127  001250  D00A               	goto	l3224
  4128  001252  D7CE               	goto	l3204
  4129  001254                     l3220:
  4130  001254  FFFF               	dw	65535	; assembler added errata NOP
  4131                           
  4132                           ; BSR set to: 0
  4133  001256  0E00               	movlw	0
  4134  001258  6F8E               	movwf	(atoi@neg+1)& (0+255),b
  4135  00125A  0E01               	movlw	1
  4136  00125C  6F8D               	movwf	atoi@neg& (0+255),b
  4137  00125E                     l3222:
  4138  00125E  FFFF               	dw	65535	; assembler added errata NOP
  4139                           
  4140                           ; BSR set to: 0
  4141  001260  4B87               	infsnz	atoi@s& (0+255),f,b
  4142  001262  2B88               	incf	(atoi@s+1)& (0+255),f,b
  4143  001264  D033               	goto	l3230
  4144  001266                     l3224:
  4145  001266  FFFF               	dw	65535	; assembler added errata NOP
  4146                           
  4147                           ; BSR set to: 0
  4148  001268  C087  FFF6         	movff	atoi@s,tblptrl
  4149  00126C  C088  FFF7         	movff	atoi@s+1,tblptrh
  4150  001270                     	if	0	;tblptru may be non-zero
  4151  001270                     	endif
  4152  001270                     	if	0	;tblptru may be non-zero
  4153  001270                     	endif
  4154  001270  0008               	tblrd		*
  4155  001272  FFFF               	dw	65535	; errata NOP
  4156  001274  50F5               	movf	tablat,w,c
  4157  001276  6F89               	movwf	??_atoi& (0+255),b
  4158  001278  6B8A               	clrf	(??_atoi+1)& (0+255),b
  4159                           
  4160                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4161                           ; Switch size 1, requested type "simple"
  4162                           ; Number of cases is 1, Range of values is 0 to 0
  4163                           ; switch strategies available:
  4164                           ; Name         Instructions Cycles
  4165                           ; simple_byte            4     3 (average)
  4166                           ;	Chosen strategy is simple_byte
  4167  00127A  518A               	movf	(??_atoi+1)& (0+255),w,b
  4168  00127C  0A00               	xorlw	0	; case 0
  4169  00127E  A4D8               	btfss	status,2,c
  4170  001280  D025               	goto	l3230
  4171                           
  4172                           ; BSR set to: 0
  4173                           ; Switch size 1, requested type "simple"
  4174                           ; Number of cases is 2, Range of values is 43 to 45
  4175                           ; switch strategies available:
  4176                           ; Name         Instructions Cycles
  4177                           ; simple_byte            7     4 (average)
  4178                           ;	Chosen strategy is simple_byte
  4179  001282  5189               	movf	??_atoi& (0+255),w,b
  4180  001284  0A2B               	xorlw	43	; case 43
  4181  001286  B4D8               	btfsc	status,2,c
  4182  001288  D7EA               	goto	l3222
  4183  00128A  0A06               	xorlw	6	; case 45
  4184  00128C  B4D8               	btfsc	status,2,c
  4185  00128E  D7E2               	goto	l3220
  4186  001290  D01D               	goto	l3230
  4187  001292                     l3226:
  4188  001292  FFFF               	dw	65535	; assembler added errata NOP
  4189                           
  4190                           ; BSR set to: 0
  4191  001294  C094  F080         	movff	atoi@n,___wmul@multiplier
  4192  001298  C095  F081         	movff	atoi@n+1,___wmul@multiplier+1
  4193  00129C  0E00               	movlw	0
  4194  00129E  6F83               	movwf	(___wmul@multiplicand+1)& (0+255),b
  4195  0012A0  0E0A               	movlw	10
  4196  0012A2  6F82               	movwf	___wmul@multiplicand& (0+255),b
  4197  0012A4  ECA7  F014         	call	___wmul	;wreg free
  4198  0012A8  C087  FFF6         	movff	atoi@s,tblptrl
  4199  0012AC  C088  FFF7         	movff	atoi@s+1,tblptrh
  4200  0012B0                     	if	0	;tblptru may be non-zero
  4201  0012B0                     	endif
  4202  0012B0                     	if	0	;tblptru may be non-zero
  4203  0012B0                     	endif
  4204  0012B0  0008               	tblrd		*
  4205  0012B2  FFFF               	dw	65535	; errata NOP
  4206  0012B4  50F5               	movf	tablat,w,c
  4207  0012B6  0100               	movlb	0	; () banked
  4208  0012B8  5F80               	subwf	?___wmul& (0+255),f,b
  4209  0012BA  0E00               	movlw	0
  4210  0012BC  5B81               	subwfb	(?___wmul+1)& (0+255),f,b
  4211  0012BE  0E30               	movlw	48
  4212  0012C0  2580               	addwf	?___wmul& (0+255),w,b
  4213  0012C2  6F94               	movwf	atoi@n& (0+255),b
  4214  0012C4  0E00               	movlw	0
  4215  0012C6  2181               	addwfc	(?___wmul+1)& (0+255),w,b
  4216  0012C8  6F95               	movwf	(atoi@n+1)& (0+255),b
  4217  0012CA  D7C9               	goto	l3222
  4218  0012CC                     l3230:
  4219  0012CC  FFFF               	dw	65535	; assembler added errata NOP
  4220                           
  4221                           ; BSR set to: 0
  4222  0012CE  0ED0               	movlw	208
  4223  0012D0  6F89               	movwf	??_atoi& (0+255),b
  4224  0012D2  0EFF               	movlw	255
  4225  0012D4  6F8A               	movwf	(??_atoi+1)& (0+255),b
  4226  0012D6  C087  FFF6         	movff	atoi@s,tblptrl
  4227  0012DA  C088  FFF7         	movff	atoi@s+1,tblptrh
  4228  0012DE                     	if	0	;tblptru may be non-zero
  4229  0012DE                     	endif
  4230  0012DE                     	if	0	;tblptru may be non-zero
  4231  0012DE                     	endif
  4232  0012DE  0008               	tblrd		*
  4233  0012E0  FFFF               	dw	65535	; errata NOP
  4234  0012E2  50F5               	movf	tablat,w,c
  4235  0012E4  6F8B               	movwf	(??_atoi+2)& (0+255),b
  4236  0012E6  6B8C               	clrf	(??_atoi+3)& (0+255),b
  4237  0012E8  5189               	movf	??_atoi& (0+255),w,b
  4238  0012EA  278B               	addwf	(??_atoi+2)& (0+255),f,b
  4239  0012EC  518A               	movf	(??_atoi+1)& (0+255),w,b
  4240  0012EE  238C               	addwfc	(??_atoi+3)& (0+255),f,b
  4241  0012F0  518C               	movf	(??_atoi+3)& (0+255),w,b
  4242  0012F2  E106               	bnz	u2640
  4243  0012F4  0E0A               	movlw	10
  4244  0012F6  5D8B               	subwf	(??_atoi+2)& (0+255),w,b
  4245  0012F8  B0D8               	btfsc	status,0,c
  4246  0012FA  D002               	goto	u2640
  4247  0012FC  0E01               	movlw	1
  4248  0012FE  D002               	goto	u2650
  4249  001300                     u2640:
  4250  001300  FFFF               	dw	65535	; assembler added errata NOP
  4251  001302  0E00               	movlw	0
  4252  001304                     u2650:
  4253  001304  FFFF               	dw	65535	; assembler added errata NOP
  4254  001306  6F91               	movwf	_atoi$1501& (0+255),b
  4255  001308  6B92               	clrf	(_atoi$1501+1)& (0+255),b
  4256                           
  4257                           ; BSR set to: 0
  4258  00130A  5191               	movf	_atoi$1501& (0+255),w,b
  4259  00130C  1192               	iorwf	(_atoi$1501+1)& (0+255),w,b
  4260  00130E  A4D8               	btfss	status,2,c
  4261  001310  D7C0               	goto	l3226
  4262                           
  4263                           ; BSR set to: 0
  4264  001312  518D               	movf	atoi@neg& (0+255),w,b
  4265  001314  118E               	iorwf	(atoi@neg+1)& (0+255),w,b
  4266  001316  A4D8               	btfss	status,2,c
  4267  001318  D00D               	goto	l1321
  4268                           
  4269                           ; BSR set to: 0
  4270  00131A  C094  F089         	movff	atoi@n,??_atoi
  4271  00131E  C095  F08A         	movff	atoi@n+1,??_atoi+1
  4272  001322  1F89               	comf	??_atoi& (0+255),f,b
  4273  001324  1F8A               	comf	(??_atoi+1)& (0+255),f,b
  4274  001326  4B89               	infsnz	??_atoi& (0+255),f,b
  4275  001328  2B8A               	incf	(??_atoi+1)& (0+255),f,b
  4276  00132A  C089  F087         	movff	??_atoi,?_atoi
  4277  00132E  C08A  F088         	movff	??_atoi+1,?_atoi+1
  4278  001332  D005               	goto	l1324
  4279  001334                     l1321:
  4280  001334  FFFF               	dw	65535	; assembler added errata NOP
  4281                           
  4282                           ; BSR set to: 0
  4283  001336  C094  F087         	movff	atoi@n,?_atoi
  4284  00133A  C095  F088         	movff	atoi@n+1,?_atoi+1
  4285  00133E                     l1324:
  4286  00133E  FFFF               	dw	65535	; assembler added errata NOP
  4287                           
  4288                           ; BSR set to: 0
  4289  001340  0012               	return		;funcret
  4290  001342  FFFF               	dw	65535	; errata NOP
  4291  001344                     __end_of_atoi:
  4292                           	opt callstack 0
  4293                           
  4294 ;; *************** function _isspace *****************
  4295 ;; Defined at:
  4296 ;;		line 5 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/isspace.c"
  4297 ;; Parameters:    Size  Location     Type
  4298 ;;  c               2    0[BANK0 ] int 
  4299 ;; Auto vars:     Size  Location     Type
  4300 ;;		None
  4301 ;; Return value:  Size  Location     Type
  4302 ;;                  2    0[BANK0 ] int 
  4303 ;; Registers used:
  4304 ;;		wreg, status,2, status,0
  4305 ;; Tracked objects:
  4306 ;;		On entry : 0/0
  4307 ;;		On exit  : 0/0
  4308 ;;		Unchanged: 0/0
  4309 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4310 ;;      Params:         0       2       0       0       0       0       0
  4311 ;;      Locals:         0       1       0       0       0       0       0
  4312 ;;      Temps:          0       4       0       0       0       0       0
  4313 ;;      Totals:         0       7       0       0       0       0       0
  4314 ;;Total ram usage:        7 bytes
  4315 ;; Hardware stack levels used:    1
  4316 ;; Hardware stack levels required when called:   10
  4317 ;; This function calls:
  4318 ;;		Nothing
  4319 ;; This function is called by:
  4320 ;;		_atoi
  4321 ;; This function uses a non-reentrant model
  4322 ;;
  4323                           
  4324                           	psect	text17
  4325  002604                     __ptext17:
  4326                           	opt callstack 0
  4327  002604                     _isspace:
  4328                           	opt callstack 0
  4329  002604  FFFF               	dw	65535	; assembler added errata NOP
  4330                           
  4331                           ; BSR set to: 0
  4332                           ;incstack = 0
  4333  002606  0E01               	movlw	1
  4334  002608  0100               	movlb	0	; () banked
  4335  00260A  6F86               	movwf	_isspace$1517& (0+255),b
  4336                           
  4337                           ; BSR set to: 0
  4338  00260C  0E20               	movlw	32
  4339  00260E  1980               	xorwf	isspace@c& (0+255),w,b
  4340  002610  1181               	iorwf	(isspace@c+1)& (0+255),w,b
  4341  002612  B4D8               	btfsc	status,2,c
  4342  002614  D014               	goto	l3006
  4343                           
  4344                           ; BSR set to: 0
  4345  002616  0EF7               	movlw	247
  4346  002618  6F82               	movwf	??_isspace& (0+255),b
  4347  00261A  0EFF               	movlw	255
  4348  00261C  6F83               	movwf	(??_isspace+1)& (0+255),b
  4349  00261E  C080  F084         	movff	isspace@c,??_isspace+2
  4350  002622  C081  F085         	movff	isspace@c+1,??_isspace+3
  4351  002626  5182               	movf	??_isspace& (0+255),w,b
  4352  002628  2784               	addwf	(??_isspace+2)& (0+255),f,b
  4353  00262A  5183               	movf	(??_isspace+1)& (0+255),w,b
  4354  00262C  2385               	addwfc	(??_isspace+3)& (0+255),f,b
  4355  00262E  5185               	movf	(??_isspace+3)& (0+255),w,b
  4356  002630  E104               	bnz	u2230
  4357  002632  0E05               	movlw	5
  4358  002634  5D84               	subwf	(??_isspace+2)& (0+255),w,b
  4359  002636  A0D8               	btfss	status,0,c
  4360  002638  D002               	goto	l3006
  4361  00263A                     u2230:
  4362                           
  4363                           ; BSR set to: 0
  4364  00263A  0E00               	movlw	0
  4365  00263C  6F86               	movwf	_isspace$1517& (0+255),b
  4366  00263E                     l3006:
  4367  00263E  FFFF               	dw	65535	; assembler added errata NOP
  4368                           
  4369                           ; BSR set to: 0
  4370  002640  C086  F080         	movff	_isspace$1517,?_isspace
  4371  002644  6B81               	clrf	(?_isspace+1)& (0+255),b
  4372                           
  4373                           ; BSR set to: 0
  4374  002646  0012               	return		;funcret
  4375  002648  FFFF               	dw	65535	; errata NOP
  4376  00264A                     __end_of_isspace:
  4377                           	opt callstack 0
  4378                           
  4379 ;; *************** function _isdigit *****************
  4380 ;; Defined at:
  4381 ;;		line 5 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/isdigit.c"
  4382 ;; Parameters:    Size  Location     Type
  4383 ;;  c               2    0[BANK0 ] int 
  4384 ;; Auto vars:     Size  Location     Type
  4385 ;;		None
  4386 ;; Return value:  Size  Location     Type
  4387 ;;                  2    0[BANK0 ] int 
  4388 ;; Registers used:
  4389 ;;		wreg, status,2, status,0
  4390 ;; Tracked objects:
  4391 ;;		On entry : 0/0
  4392 ;;		On exit  : 0/0
  4393 ;;		Unchanged: 0/0
  4394 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4395 ;;      Params:         0       2       0       0       0       0       0
  4396 ;;      Locals:         0       0       0       0       0       0       0
  4397 ;;      Temps:          0       4       0       0       0       0       0
  4398 ;;      Totals:         0       6       0       0       0       0       0
  4399 ;;Total ram usage:        6 bytes
  4400 ;; Hardware stack levels used:    1
  4401 ;; Hardware stack levels required when called:   10
  4402 ;; This function calls:
  4403 ;;		Nothing
  4404 ;; This function is called by:
  4405 ;;		_vfpfcnvrt
  4406 ;;		_atoi
  4407 ;; This function uses a non-reentrant model
  4408 ;;
  4409                           
  4410                           	psect	text18
  4411  00280E                     __ptext18:
  4412                           	opt callstack 0
  4413  00280E                     _isdigit:
  4414                           	opt callstack 0
  4415  00280E  FFFF               	dw	65535	; assembler added errata NOP
  4416                           
  4417                           ; BSR set to: 0
  4418                           ;incstack = 0
  4419  002810  0ED0               	movlw	208
  4420  002812  0100               	movlb	0	; () banked
  4421  002814  6F82               	movwf	??_isdigit& (0+255),b
  4422  002816  0EFF               	movlw	255
  4423  002818  6F83               	movwf	(??_isdigit+1)& (0+255),b
  4424  00281A  C080  F084         	movff	isdigit@c,??_isdigit+2
  4425  00281E  C081  F085         	movff	isdigit@c+1,??_isdigit+3
  4426  002822  5182               	movf	??_isdigit& (0+255),w,b
  4427  002824  2784               	addwf	(??_isdigit+2)& (0+255),f,b
  4428  002826  5183               	movf	(??_isdigit+1)& (0+255),w,b
  4429  002828  2385               	addwfc	(??_isdigit+3)& (0+255),f,b
  4430  00282A  5185               	movf	(??_isdigit+3)& (0+255),w,b
  4431  00282C  E106               	bnz	u2070
  4432  00282E  0E0A               	movlw	10
  4433  002830  5D84               	subwf	(??_isdigit+2)& (0+255),w,b
  4434  002832  B0D8               	btfsc	status,0,c
  4435  002834  D002               	goto	u2070
  4436  002836  0E01               	movlw	1
  4437  002838  D002               	goto	u2080
  4438  00283A                     u2070:
  4439  00283A  FFFF               	dw	65535	; assembler added errata NOP
  4440  00283C  0E00               	movlw	0
  4441  00283E                     u2080:
  4442  00283E  FFFF               	dw	65535	; assembler added errata NOP
  4443  002840  6F80               	movwf	?_isdigit& (0+255),b
  4444  002842  6B81               	clrf	(?_isdigit+1)& (0+255),b
  4445                           
  4446                           ; BSR set to: 0
  4447  002844  0012               	return		;funcret
  4448  002846  FFFF               	dw	65535	; errata NOP
  4449  002848                     __end_of_isdigit:
  4450                           	opt callstack 0
  4451                           
  4452 ;; *************** function _setData *****************
  4453 ;; Defined at:
  4454 ;;		line 46 in file "eeprom.c"
  4455 ;; Parameters:    Size  Location     Type
  4456 ;;  full            1    wreg     unsigned char 
  4457 ;; Auto vars:     Size  Location     Type
  4458 ;;  full            1    4[BANK0 ] unsigned char 
  4459 ;;  data1           1    3[BANK0 ] unsigned char 
  4460 ;;  data0           1    2[BANK0 ] unsigned char 
  4461 ;; Return value:  Size  Location     Type
  4462 ;;                  1    wreg      void 
  4463 ;; Registers used:
  4464 ;;		wreg, status,2, cstack
  4465 ;; Tracked objects:
  4466 ;;		On entry : 0/0
  4467 ;;		On exit  : 0/0
  4468 ;;		Unchanged: 0/0
  4469 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4470 ;;      Params:         0       0       0       0       0       0       0
  4471 ;;      Locals:         0       3       0       0       0       0       0
  4472 ;;      Temps:          0       0       0       0       0       0       0
  4473 ;;      Totals:         0       3       0       0       0       0       0
  4474 ;;Total ram usage:        3 bytes
  4475 ;; Hardware stack levels used:    1
  4476 ;; Hardware stack levels required when called:   11
  4477 ;; This function calls:
  4478 ;;		_writeEEPROM
  4479 ;; This function is called by:
  4480 ;;		_setFrequency
  4481 ;; This function uses a non-reentrant model
  4482 ;;
  4483                           
  4484                           	psect	text19
  4485  00204A                     __ptext19:
  4486                           	opt callstack 0
  4487  00204A                     _setData:
  4488                           	opt callstack 0
  4489  00204A  FFFF               	dw	65535	; assembler added errata NOP
  4490                           
  4491                           ; BSR set to: 0
  4492                           ;incstack = 0
  4493                           ;setData@full stored from wreg
  4494  00204C  0100               	movlb	0	; () banked
  4495  00204E  6F84               	movwf	setData@full& (0+255),b
  4496                           
  4497                           ;eeprom.c: 47:     unsigned char data0 = frequency & 0x00FF;
  4498  002050  C0F6  F082         	movff	_frequency,setData@data0
  4499                           
  4500                           ;eeprom.c: 48:     unsigned char data1 = frequency >> 8;
  4501  002054  0100               	movlb	0	; () banked
  4502  002056  51F7               	movf	(_frequency+1)& (0+255),w,b
  4503  002058  6F83               	movwf	setData@data1& (0+255),b
  4504                           
  4505                           ; BSR set to: 0
  4506                           ;eeprom.c: 49:     if(full)writeEEPROM(data0 ,0);
  4507  00205A  5184               	movf	setData@full& (0+255),w,b
  4508  00205C  B4D8               	btfsc	status,2,c
  4509  00205E  D005               	goto	l3700
  4510                           
  4511                           ; BSR set to: 0
  4512  002060  0E00               	movlw	0
  4513  002062  6F80               	movwf	writeEEPROM@address& (0+255),b
  4514  002064  5182               	movf	setData@data0& (0+255),w,b
  4515  002066  EC90  F014         	call	_writeEEPROM
  4516  00206A                     l3700:
  4517  00206A  FFFF               	dw	65535	; assembler added errata NOP
  4518                           
  4519                           ;eeprom.c: 50:     if(full)writeEEPROM(data1 ,1);
  4520  00206C  0100               	movlb	0	; () banked
  4521  00206E  5184               	movf	setData@full& (0+255),w,b
  4522  002070  B4D8               	btfsc	status,2,c
  4523  002072  D005               	goto	l68
  4524                           
  4525                           ; BSR set to: 0
  4526  002074  0E01               	movlw	1
  4527  002076  6F80               	movwf	writeEEPROM@address& (0+255),b
  4528  002078  5183               	movf	setData@data1& (0+255),w,b
  4529  00207A  EC90  F014         	call	_writeEEPROM
  4530  00207E                     l68:
  4531  00207E  FFFF               	dw	65535	; assembler added errata NOP
  4532                           
  4533                           ;eeprom.c: 51:     writeEEPROM(months ,2);
  4534  002080  0E02               	movlw	2
  4535  002082  0100               	movlb	0	; () banked
  4536  002084  6F80               	movwf	writeEEPROM@address& (0+255),b
  4537  002086  51FF               	movf	_months& (0+255),w,b
  4538  002088  EC90  F014         	call	_writeEEPROM
  4539                           
  4540                           ;eeprom.c: 52:     writeEEPROM(days ,3);
  4541  00208C  0E03               	movlw	3
  4542  00208E  0100               	movlb	0	; () banked
  4543  002090  6F80               	movwf	writeEEPROM@address& (0+255),b
  4544  002092  51FE               	movf	_days& (0+255),w,b
  4545  002094  EC90  F014         	call	_writeEEPROM
  4546                           
  4547                           ;eeprom.c: 53:     writeEEPROM(hours ,4);
  4548  002098  0E04               	movlw	4
  4549  00209A  0100               	movlb	0	; () banked
  4550  00209C  6F80               	movwf	writeEEPROM@address& (0+255),b
  4551  00209E  51FD               	movf	_hours& (0+255),w,b
  4552  0020A0  EC90  F014         	call	_writeEEPROM
  4553                           
  4554                           ;eeprom.c: 54:     writeEEPROM(minutes ,5);
  4555  0020A4  0E05               	movlw	5
  4556  0020A6  0100               	movlb	0	; () banked
  4557  0020A8  6F80               	movwf	writeEEPROM@address& (0+255),b
  4558  0020AA  51FC               	movf	_minutes& (0+255),w,b
  4559  0020AC  EC90  F014         	call	_writeEEPROM
  4560                           
  4561                           ;eeprom.c: 55:     writeEEPROM(functionalStat ,6);
  4562  0020B0  0E06               	movlw	6
  4563  0020B2  0100               	movlb	0	; () banked
  4564  0020B4  6F80               	movwf	writeEEPROM@address& (0+255),b
  4565  0020B6  51F8               	movf	_functionalStat& (0+255),w,b
  4566  0020B8  EC90  F014         	call	_writeEEPROM
  4567  0020BC  0012               	return		;funcret
  4568  0020BE  FFFF               	dw	65535	; errata NOP
  4569  0020C0                     __end_of_setData:
  4570                           	opt callstack 0
  4571                           
  4572 ;; *************** function _writeEEPROM *****************
  4573 ;; Defined at:
  4574 ;;		line 15 in file "eeprom.c"
  4575 ;; Parameters:    Size  Location     Type
  4576 ;;  data            1    wreg     unsigned char 
  4577 ;;  address         1    0[BANK0 ] unsigned char 
  4578 ;; Auto vars:     Size  Location     Type
  4579 ;;  data            1    1[BANK0 ] unsigned char 
  4580 ;; Return value:  Size  Location     Type
  4581 ;;                  1    wreg      void 
  4582 ;; Registers used:
  4583 ;;		wreg, status,2
  4584 ;; Tracked objects:
  4585 ;;		On entry : 0/0
  4586 ;;		On exit  : 0/0
  4587 ;;		Unchanged: 0/0
  4588 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4589 ;;      Params:         0       1       0       0       0       0       0
  4590 ;;      Locals:         0       1       0       0       0       0       0
  4591 ;;      Temps:          0       0       0       0       0       0       0
  4592 ;;      Totals:         0       2       0       0       0       0       0
  4593 ;;Total ram usage:        2 bytes
  4594 ;; Hardware stack levels used:    1
  4595 ;; Hardware stack levels required when called:   10
  4596 ;; This function calls:
  4597 ;;		Nothing
  4598 ;; This function is called by:
  4599 ;;		_setData
  4600 ;; This function uses a non-reentrant model
  4601 ;;
  4602                           
  4603                           	psect	text20
  4604  002920                     __ptext20:
  4605                           	opt callstack 0
  4606  002920                     _writeEEPROM:
  4607                           	opt callstack 0
  4608  002920  FFFF               	dw	65535	; assembler added errata NOP
  4609                           
  4610                           ;incstack = 0
  4611                           ;writeEEPROM@data stored from wreg
  4612  002922  0100               	movlb	0	; () banked
  4613  002924  6F81               	movwf	writeEEPROM@data& (0+255),b
  4614                           
  4615                           ;eeprom.c: 16:     EEADR = address;
  4616  002926  C080  FFA9         	movff	writeEEPROM@address,4009	;volatile
  4617                           
  4618                           ;eeprom.c: 17:     EEDATA = data;
  4619  00292A  C081  FFA8         	movff	writeEEPROM@data,4008	;volatile
  4620                           
  4621                           ;eeprom.c: 19:     EECON1bits.EEPGD = 0;
  4622  00292E  9EA6               	bcf	4006,7,c	;volsfr
  4623                           
  4624                           ;eeprom.c: 20:     EECON1bits.CFGS = 0;
  4625  002930  9CA6               	bcf	4006,6,c	;volsfr
  4626                           
  4627                           ;eeprom.c: 21:     EECON1bits.WREN = 1;
  4628  002932  84A6               	bsf	4006,2,c	;volsfr
  4629                           
  4630                           ;eeprom.c: 23:     INTCONbits.GIE = 0;
  4631  002934  9EF2               	bcf	4082,7,c	;volatile
  4632                           
  4633                           ;eeprom.c: 24:     EECON2 = 0x55;
  4634  002936  0E55               	movlw	85
  4635  002938  6EA7               	movwf	4007,c	;volsfr
  4636                           
  4637                           ;eeprom.c: 25:     EECON2 = 0xAA;
  4638  00293A  0EAA               	movlw	170
  4639  00293C  6EA7               	movwf	4007,c	;volsfr
  4640                           
  4641                           ;eeprom.c: 26:     EECON1bits.WR = 1;
  4642  00293E  82A6               	bsf	4006,1,c	;volsfr
  4643                           
  4644                           ;eeprom.c: 27:     INTCONbits.GIE = 1;
  4645  002940  8EF2               	bsf	4082,7,c	;volatile
  4646  002942                     l58:
  4647  002942  FFFF               	dw	65535	; assembler added errata NOP
  4648  002944  B8A1               	btfsc	4001,4,c	;volatile
  4649  002946  0012               	return		;funcret
  4650  002948  FFFF               	dw	65535	; assembler added errata NOP
  4651  00294A  D7FB               	goto	l58
  4652  00294C  FFFF               	dw	65535	; errata NOP
  4653  00294E                     __end_of_writeEEPROM:
  4654                           	opt callstack 0
  4655                           
  4656 ;; *************** function _beep *****************
  4657 ;; Defined at:
  4658 ;;		line 136 in file "main.c"
  4659 ;; Parameters:    Size  Location     Type
  4660 ;;  ms              2    6[BANK0 ] int 
  4661 ;; Auto vars:     Size  Location     Type
  4662 ;;		None
  4663 ;; Return value:  Size  Location     Type
  4664 ;;                  1    wreg      void 
  4665 ;; Registers used:
  4666 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  4667 ;; Tracked objects:
  4668 ;;		On entry : 0/0
  4669 ;;		On exit  : 0/0
  4670 ;;		Unchanged: 0/0
  4671 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4672 ;;      Params:         0       2       0       0       0       0       0
  4673 ;;      Locals:         0       0       0       0       0       0       0
  4674 ;;      Temps:          0       0       0       0       0       0       0
  4675 ;;      Totals:         0       2       0       0       0       0       0
  4676 ;;Total ram usage:        2 bytes
  4677 ;; Hardware stack levels used:    1
  4678 ;; Hardware stack levels required when called:   11
  4679 ;; This function calls:
  4680 ;;		___wmul
  4681 ;; This function is called by:
  4682 ;;		_main
  4683 ;;		_setFrequency
  4684 ;; This function uses a non-reentrant model
  4685 ;;
  4686                           
  4687                           	psect	text21
  4688  002392                     __ptext21:
  4689                           	opt callstack 0
  4690  002392                     _beep:
  4691                           	opt callstack 0
  4692  002392  FFFF               	dw	65535	; assembler added errata NOP
  4693                           
  4694                           ;main.c: 137:     ms *= 5;
  4695                           
  4696                           ;incstack = 0
  4697  002394  C086  F080         	movff	beep@ms,___wmul@multiplier
  4698  002398  C087  F081         	movff	beep@ms+1,___wmul@multiplier+1
  4699  00239C  0E00               	movlw	0
  4700  00239E  0100               	movlb	0	; () banked
  4701  0023A0  6F83               	movwf	(___wmul@multiplicand+1)& (0+255),b
  4702  0023A2  0E05               	movlw	5
  4703  0023A4  6F82               	movwf	___wmul@multiplicand& (0+255),b
  4704  0023A6  ECA7  F014         	call	___wmul	;wreg free
  4705  0023AA  C080  F086         	movff	?___wmul,beep@ms
  4706  0023AE  C081  F087         	movff	?___wmul+1,beep@ms+1
  4707  0023B2  0100               	movlb	0	; () banked
  4708  0023B4  D00F               	goto	L3
  4709  0023B6                     l239:
  4710  0023B6  FFFF               	dw	65535	; assembler added errata NOP
  4711                           
  4712                           ; BSR set to: 0
  4713                           ;main.c: 139:         PORTDbits.RD0 = 1;
  4714  0023B8  8083               	bsf	3971,0,c	;volatile
  4715                           
  4716                           ; BSR set to: 0
  4717                           ;main.c: 140:         _delay((unsigned long)((100)*(12000000/4000000.0)));
  4718  0023BA  0E4B               	movlw	75
  4719  0023BC                     u3817:
  4720  0023BC  FFFF               	dw	65535	; errata NOP
  4721  0023BE  2EE8               	decfsz	wreg,f,c
  4722  0023C0  D7FD               	bra	u3817
  4723                           
  4724                           ;main.c: 141:         PORTDbits.RD0 = 0;
  4725  0023C2  9083               	bcf	3971,0,c	;volatile
  4726                           
  4727                           ;main.c: 142:         _delay((unsigned long)((100)*(12000000/4000000.0)));
  4728  0023C4  0E4B               	movlw	75
  4729  0023C6                     u3827:
  4730  0023C6  FFFF               	dw	65535	; errata NOP
  4731  0023C8  2EE8               	decfsz	wreg,f,c
  4732  0023CA  D7FD               	bra	u3827
  4733                           
  4734                           ;main.c: 143:     }
  4735  0023CC  0100               	movlb	0	; () banked
  4736  0023CE  0786               	decf	beep@ms& (0+255),f,b
  4737  0023D0  A0D8               	btfss	status,0,c
  4738  0023D2  0787               	decf	(beep@ms+1)& (0+255),f,b
  4739  0023D4                     L3:
  4740  0023D4  FFFF               	dw	65535	; assembler added errata NOP
  4741  0023D6  BF87               	btfsc	(beep@ms+1)& (0+255),7,b
  4742  0023D8  D005               	goto	u3250
  4743  0023DA  5187               	movf	(beep@ms+1)& (0+255),w,b
  4744  0023DC  E1EC               	bnz	l239
  4745  0023DE  0586               	decf	beep@ms& (0+255),w,b
  4746  0023E0  B0D8               	btfsc	status,0,c
  4747  0023E2  D7E9               	goto	l239
  4748  0023E4                     u3250:
  4749  0023E4  FFFF               	dw	65535	; assembler added errata NOP
  4750                           
  4751                           ; BSR set to: 0
  4752  0023E6  0012               	return		;funcret
  4753  0023E8  FFFF               	dw	65535	; errata NOP
  4754  0023EA                     __end_of_beep:
  4755                           	opt callstack 0
  4756                           
  4757 ;; *************** function ___wmul *****************
  4758 ;; Defined at:
  4759 ;;		line 15 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/Umul16.c"
  4760 ;; Parameters:    Size  Location     Type
  4761 ;;  multiplier      2    0[BANK0 ] unsigned int 
  4762 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  4763 ;; Auto vars:     Size  Location     Type
  4764 ;;  product         2    4[BANK0 ] unsigned int 
  4765 ;; Return value:  Size  Location     Type
  4766 ;;                  2    0[BANK0 ] unsigned int 
  4767 ;; Registers used:
  4768 ;;		wreg, status,2, status,0, prodl, prodh
  4769 ;; Tracked objects:
  4770 ;;		On entry : 0/0
  4771 ;;		On exit  : 0/0
  4772 ;;		Unchanged: 0/0
  4773 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4774 ;;      Params:         0       4       0       0       0       0       0
  4775 ;;      Locals:         0       2       0       0       0       0       0
  4776 ;;      Temps:          0       0       0       0       0       0       0
  4777 ;;      Totals:         0       6       0       0       0       0       0
  4778 ;;Total ram usage:        6 bytes
  4779 ;; Hardware stack levels used:    1
  4780 ;; Hardware stack levels required when called:   10
  4781 ;; This function calls:
  4782 ;;		Nothing
  4783 ;; This function is called by:
  4784 ;;		_beep
  4785 ;;		_atoi
  4786 ;; This function uses a non-reentrant model
  4787 ;;
  4788                           
  4789                           	psect	text22
  4790  00294E                     __ptext22:
  4791                           	opt callstack 0
  4792  00294E                     ___wmul:
  4793                           	opt callstack 0
  4794  00294E  FFFF               	dw	65535	; assembler added errata NOP
  4795                           
  4796                           ; BSR set to: 0
  4797                           ;incstack = 0
  4798  002950  0100               	movlb	0	; () banked
  4799  002952  5180               	movf	___wmul@multiplier& (0+255),w,b
  4800  002954  0382               	mulwf	___wmul@multiplicand& (0+255),b
  4801  002956  CFF3 F084          	movff	prodl,___wmul@product
  4802  00295A  CFF4 F085          	movff	prodh,___wmul@product+1
  4803  00295E  5180               	movf	___wmul@multiplier& (0+255),w,b
  4804  002960  0383               	mulwf	(___wmul@multiplicand+1)& (0+255),b
  4805  002962  50F3               	movf	prodl,w,c
  4806  002964  2785               	addwf	(___wmul@product+1)& (0+255),f,b
  4807  002966  5181               	movf	(___wmul@multiplier+1)& (0+255),w,b
  4808  002968  0382               	mulwf	___wmul@multiplicand& (0+255),b
  4809  00296A  50F3               	movf	prodl,w,c
  4810  00296C  2785               	addwf	(___wmul@product+1)& (0+255),f,b
  4811                           
  4812                           ; BSR set to: 0
  4813  00296E  C084  F080         	movff	___wmul@product,?___wmul
  4814  002972  C085  F081         	movff	___wmul@product+1,?___wmul+1
  4815                           
  4816                           ; BSR set to: 0
  4817  002976  0012               	return		;funcret
  4818  002978  FFFF               	dw	65535	; errata NOP
  4819  00297A                     __end_of___wmul:
  4820                           	opt callstack 0
  4821                           
  4822 ;; *************** function _getData *****************
  4823 ;; Defined at:
  4824 ;;		line 33 in file "eeprom.c"
  4825 ;; Parameters:    Size  Location     Type
  4826 ;;		None
  4827 ;; Auto vars:     Size  Location     Type
  4828 ;;  aux1            1    4[BANK0 ] unsigned char 
  4829 ;;  aux0            1    3[BANK0 ] unsigned char 
  4830 ;; Return value:  Size  Location     Type
  4831 ;;                  1    wreg      void 
  4832 ;; Registers used:
  4833 ;;		wreg, status,2, status,0, cstack
  4834 ;; Tracked objects:
  4835 ;;		On entry : 0/0
  4836 ;;		On exit  : 0/0
  4837 ;;		Unchanged: 0/0
  4838 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4839 ;;      Params:         0       0       0       0       0       0       0
  4840 ;;      Locals:         0       2       0       0       0       0       0
  4841 ;;      Temps:          0       2       0       0       0       0       0
  4842 ;;      Totals:         0       4       0       0       0       0       0
  4843 ;;Total ram usage:        4 bytes
  4844 ;; Hardware stack levels used:    1
  4845 ;; Hardware stack levels required when called:   11
  4846 ;; This function calls:
  4847 ;;		_readEEPROM
  4848 ;; This function is called by:
  4849 ;;		_main
  4850 ;; This function uses a non-reentrant model
  4851 ;;
  4852                           
  4853                           	psect	text23
  4854  0021A0                     __ptext23:
  4855                           	opt callstack 0
  4856  0021A0                     _getData:
  4857                           	opt callstack 0
  4858  0021A0  FFFF               	dw	65535	; assembler added errata NOP
  4859                           
  4860                           ;eeprom.c: 34:     unsigned char aux0 = readEEPROM(0);
  4861                           
  4862                           ; BSR set to: 0
  4863                           ;incstack = 0
  4864  0021A2  0E00               	movlw	0
  4865  0021A4  EC2E  F015         	call	_readEEPROM
  4866  0021A8  0100               	movlb	0	; () banked
  4867  0021AA  6F83               	movwf	getData@aux0& (0+255),b
  4868                           
  4869                           ;eeprom.c: 35:     unsigned char aux1 = readEEPROM(1);
  4870  0021AC  0E01               	movlw	1
  4871  0021AE  EC2E  F015         	call	_readEEPROM
  4872  0021B2  0100               	movlb	0	; () banked
  4873  0021B4  6F84               	movwf	getData@aux1& (0+255),b
  4874                           
  4875                           ; BSR set to: 0
  4876                           ;eeprom.c: 36:     frequency = 0;
  4877  0021B6  0E00               	movlw	0
  4878  0021B8  6FF7               	movwf	(_frequency+1)& (0+255),b
  4879  0021BA  0E00               	movlw	0
  4880  0021BC  6FF6               	movwf	_frequency& (0+255),b
  4881                           
  4882                           ; BSR set to: 0
  4883                           ;eeprom.c: 37:     frequency = (aux1 << 8) | aux0;
  4884  0021BE  5183               	movf	getData@aux0& (0+255),w,b
  4885  0021C0  C084  F081         	movff	getData@aux1,??_getData
  4886  0021C4  6B82               	clrf	(??_getData+1)& (0+255),b
  4887  0021C6  C081  F082         	movff	??_getData,??_getData+1
  4888  0021CA  6B81               	clrf	??_getData& (0+255),b
  4889  0021CC  1181               	iorwf	??_getData& (0+255),w,b
  4890  0021CE  6FF6               	movwf	_frequency& (0+255),b
  4891  0021D0  5182               	movf	(??_getData+1)& (0+255),w,b
  4892  0021D2  6FF7               	movwf	(_frequency+1)& (0+255),b
  4893                           
  4894                           ; BSR set to: 0
  4895                           ;eeprom.c: 38:     months = readEEPROM(2);
  4896  0021D4  0E02               	movlw	2
  4897  0021D6  EC2E  F015         	call	_readEEPROM
  4898  0021DA  0100               	movlb	0	; () banked
  4899  0021DC  6FFF               	movwf	_months& (0+255),b
  4900                           
  4901                           ; BSR set to: 0
  4902                           ;eeprom.c: 39:     days = readEEPROM(3);
  4903  0021DE  0E03               	movlw	3
  4904  0021E0  EC2E  F015         	call	_readEEPROM
  4905  0021E4  0100               	movlb	0	; () banked
  4906  0021E6  6FFE               	movwf	_days& (0+255),b
  4907                           
  4908                           ; BSR set to: 0
  4909                           ;eeprom.c: 40:     hours = readEEPROM(4);
  4910  0021E8  0E04               	movlw	4
  4911  0021EA  EC2E  F015         	call	_readEEPROM
  4912  0021EE  0100               	movlb	0	; () banked
  4913  0021F0  6FFD               	movwf	_hours& (0+255),b
  4914                           
  4915                           ; BSR set to: 0
  4916                           ;eeprom.c: 41:     minutes = readEEPROM(5);
  4917  0021F2  0E05               	movlw	5
  4918  0021F4  EC2E  F015         	call	_readEEPROM
  4919  0021F8  0100               	movlb	0	; () banked
  4920  0021FA  6FFC               	movwf	_minutes& (0+255),b
  4921                           
  4922                           ; BSR set to: 0
  4923                           ;eeprom.c: 42:     functionalStat = readEEPROM(6);
  4924  0021FC  0E06               	movlw	6
  4925  0021FE  EC2E  F015         	call	_readEEPROM
  4926  002202  0100               	movlb	0	; () banked
  4927  002204  6FF8               	movwf	_functionalStat& (0+255),b
  4928                           
  4929                           ; BSR set to: 0
  4930  002206  0012               	return		;funcret
  4931  002208  FFFF               	dw	65535	; errata NOP
  4932  00220A                     __end_of_getData:
  4933                           	opt callstack 0
  4934                           
  4935 ;; *************** function _readEEPROM *****************
  4936 ;; Defined at:
  4937 ;;		line 7 in file "eeprom.c"
  4938 ;; Parameters:    Size  Location     Type
  4939 ;;  address         1    wreg     unsigned char 
  4940 ;; Auto vars:     Size  Location     Type
  4941 ;;  address         1    0[BANK0 ] unsigned char 
  4942 ;; Return value:  Size  Location     Type
  4943 ;;                  1    wreg      unsigned char 
  4944 ;; Registers used:
  4945 ;;		wreg, status,2
  4946 ;; Tracked objects:
  4947 ;;		On entry : 0/0
  4948 ;;		On exit  : 0/0
  4949 ;;		Unchanged: 0/0
  4950 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4951 ;;      Params:         0       0       0       0       0       0       0
  4952 ;;      Locals:         0       1       0       0       0       0       0
  4953 ;;      Temps:          0       0       0       0       0       0       0
  4954 ;;      Totals:         0       1       0       0       0       0       0
  4955 ;;Total ram usage:        1 bytes
  4956 ;; Hardware stack levels used:    1
  4957 ;; Hardware stack levels required when called:   10
  4958 ;; This function calls:
  4959 ;;		Nothing
  4960 ;; This function is called by:
  4961 ;;		_getData
  4962 ;; This function uses a non-reentrant model
  4963 ;;
  4964                           
  4965                           	psect	text24
  4966  002A5C                     __ptext24:
  4967                           	opt callstack 0
  4968  002A5C                     _readEEPROM:
  4969                           	opt callstack 0
  4970  002A5C  FFFF               	dw	65535	; assembler added errata NOP
  4971                           
  4972                           ; BSR set to: 0
  4973                           ;incstack = 0
  4974                           ;readEEPROM@address stored from wreg
  4975  002A5E  0100               	movlb	0	; () banked
  4976  002A60  6F80               	movwf	readEEPROM@address& (0+255),b
  4977                           
  4978                           ;eeprom.c: 8:     EEADR = address;
  4979  002A62  C080  FFA9         	movff	readEEPROM@address,4009	;volatile
  4980                           
  4981                           ;eeprom.c: 9:     EECON1bits.EEPGD = 0;
  4982  002A66  9EA6               	bcf	4006,7,c	;volsfr
  4983                           
  4984                           ;eeprom.c: 10:     EECON1bits.CFGS = 0;
  4985  002A68  9CA6               	bcf	4006,6,c	;volsfr
  4986                           
  4987                           ;eeprom.c: 11:     EECON1bits.RD = 1;
  4988  002A6A  80A6               	bsf	4006,0,c	;volsfr
  4989                           
  4990                           ;eeprom.c: 12:     return EEDATA;
  4991  002A6C  50A8               	movf	4008,w,c	;volatile
  4992  002A6E  0012               	return		;funcret
  4993  002A70  FFFF               	dw	65535	; errata NOP
  4994  002A72                     __end_of_readEEPROM:
  4995                           	opt callstack 0
  4996                           
  4997 ;; *************** function _config *****************
  4998 ;; Defined at:
  4999 ;;		line 34 in file "main.c"
  5000 ;; Parameters:    Size  Location     Type
  5001 ;;		None
  5002 ;; Auto vars:     Size  Location     Type
  5003 ;;		None
  5004 ;; Return value:  Size  Location     Type
  5005 ;;                  1    wreg      void 
  5006 ;; Registers used:
  5007 ;;		wreg, status,2, status,0, cstack
  5008 ;; Tracked objects:
  5009 ;;		On entry : 0/0
  5010 ;;		On exit  : 0/0
  5011 ;;		Unchanged: 0/0
  5012 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5013 ;;      Params:         0       0       0       0       0       0       0
  5014 ;;      Locals:         0       0       0       0       0       0       0
  5015 ;;      Temps:          0       0       0       0       0       0       0
  5016 ;;      Totals:         0       0       0       0       0       0       0
  5017 ;;Total ram usage:        0 bytes
  5018 ;; Hardware stack levels used:    1
  5019 ;; Hardware stack levels required when called:   14
  5020 ;; This function calls:
  5021 ;;		_initLCD
  5022 ;; This function is called by:
  5023 ;;		_main
  5024 ;; This function uses a non-reentrant model
  5025 ;;
  5026                           
  5027                           	psect	text25
  5028  002794                     __ptext25:
  5029                           	opt callstack 0
  5030  002794                     _config:
  5031                           	opt callstack 0
  5032  002794  FFFF               	dw	65535	; assembler added errata NOP
  5033                           
  5034                           ;main.c: 36:     OSCCON = 0b00000000;
  5035                           
  5036                           ;incstack = 0
  5037  002796  0E00               	movlw	0
  5038  002798  6ED3               	movwf	4051,c	;volatile
  5039                           
  5040                           ;main.c: 38:     INTCON = 0b01100000;
  5041  00279A  0E60               	movlw	96
  5042  00279C  6EF2               	movwf	4082,c	;volatile
  5043                           
  5044                           ;main.c: 39:     PIE1 = 0b00000011;
  5045  00279E  0E03               	movlw	3
  5046  0027A0  6E9D               	movwf	3997,c	;volatile
  5047                           
  5048                           ;main.c: 41:     TRISA = 0b00011111;
  5049  0027A2  0E1F               	movlw	31
  5050  0027A4  6E92               	movwf	3986,c	;volatile
  5051                           
  5052                           ;main.c: 42:     TRISB = 0b00000000;
  5053  0027A6  0E00               	movlw	0
  5054  0027A8  6E93               	movwf	3987,c	;volatile
  5055                           
  5056                           ;main.c: 43:     TRISC = 0b11111111;
  5057  0027AA  6894               	setf	3988,c	;volatile
  5058                           
  5059                           ;main.c: 44:     TRISD = 0b00000000;
  5060  0027AC  0E00               	movlw	0
  5061  0027AE  6E95               	movwf	3989,c	;volatile
  5062                           
  5063                           ;main.c: 45:     TRISE = 0b00001000;
  5064  0027B0  0E08               	movlw	8
  5065  0027B2  6E96               	movwf	3990,c	;volatile
  5066                           
  5067                           ;main.c: 47:     T1CON = 0b10110001;
  5068  0027B4  0EB1               	movlw	177
  5069  0027B6  6ECD               	movwf	4045,c	;volatile
  5070                           
  5071                           ;main.c: 49:     T0CON = 0b10000000;
  5072  0027B8  0E80               	movlw	128
  5073  0027BA  6ED5               	movwf	4053,c	;volatile
  5074                           
  5075                           ;main.c: 51:     ADCON0 = 0b11000001;
  5076  0027BC  0EC1               	movlw	193
  5077  0027BE  6EC2               	movwf	4034,c	;volatile
  5078                           
  5079                           ;main.c: 52:     ADCON1 = 0b01001110;
  5080  0027C0  0E4E               	movlw	78
  5081  0027C2  6EC1               	movwf	4033,c	;volatile
  5082                           
  5083                           ;main.c: 54:     initLCD();
  5084  0027C4  EC71  F012         	call	_initLCD	;wreg free
  5085                           
  5086                           ;main.c: 56:     ADCON0bits.GO = 1;
  5087  0027C8  84C2               	bsf	4034,2,c	;volatile
  5088                           
  5089                           ;main.c: 57:     T1CONbits.TMR1ON = 1;
  5090  0027CA  80CD               	bsf	4045,0,c	;volatile
  5091                           
  5092                           ;main.c: 58:     INTCONbits.GIE = 1;
  5093  0027CC  8EF2               	bsf	4082,7,c	;volatile
  5094  0027CE  0012               	return		;funcret
  5095  0027D0  FFFF               	dw	65535	; errata NOP
  5096  0027D2                     __end_of_config:
  5097                           	opt callstack 0
  5098                           
  5099 ;; *************** function _initLCD *****************
  5100 ;; Defined at:
  5101 ;;		line 5 in file "lcd.c"
  5102 ;; Parameters:    Size  Location     Type
  5103 ;;		None
  5104 ;; Auto vars:     Size  Location     Type
  5105 ;;		None
  5106 ;; Return value:  Size  Location     Type
  5107 ;;                  1    wreg      void 
  5108 ;; Registers used:
  5109 ;;		wreg, status,2, status,0, cstack
  5110 ;; Tracked objects:
  5111 ;;		On entry : 0/0
  5112 ;;		On exit  : 0/0
  5113 ;;		Unchanged: 0/0
  5114 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5115 ;;      Params:         0       0       0       0       0       0       0
  5116 ;;      Locals:         0       0       0       0       0       0       0
  5117 ;;      Temps:          0       2       0       0       0       0       0
  5118 ;;      Totals:         0       2       0       0       0       0       0
  5119 ;;Total ram usage:        2 bytes
  5120 ;; Hardware stack levels used:    1
  5121 ;; Hardware stack levels required when called:   13
  5122 ;; This function calls:
  5123 ;;		_OpenXLCD
  5124 ;;		_SendCMDLCD
  5125 ;; This function is called by:
  5126 ;;		_config
  5127 ;; This function uses a non-reentrant model
  5128 ;;
  5129                           
  5130                           	psect	text26
  5131  0024E2                     __ptext26:
  5132                           	opt callstack 0
  5133  0024E2                     _initLCD:
  5134                           	opt callstack 0
  5135  0024E2  FFFF               	dw	65535	; assembler added errata NOP
  5136                           
  5137                           ;lcd.c: 6:     OpenXLCD(0b00101100 & 0b00111000);
  5138                           
  5139                           ;incstack = 0
  5140  0024E4  0E28               	movlw	40
  5141  0024E6  ECEB  F00C         	call	_OpenXLCD
  5142                           
  5143                           ;lcd.c: 7:     _delay((unsigned long)((100)*(12000000/4000.0)));
  5144  0024EA  0E02               	movlw	2
  5145  0024EC  0100               	movlb	0	; () banked
  5146  0024EE  6F84               	movwf	(??_initLCD+1)& (0+255),b
  5147  0024F0  0E25               	movlw	37
  5148  0024F2  6F83               	movwf	??_initLCD& (0+255),b
  5149  0024F4  0E63               	movlw	99
  5150  0024F6                     u3837:
  5151  0024F6  FFFF               	dw	65535	; errata NOP
  5152  0024F8  2EE8               	decfsz	wreg,f,c
  5153  0024FA  D7FD               	bra	u3837
  5154  0024FC  2F83               	decfsz	??_initLCD& (0+255),f,b
  5155  0024FE  D7FB               	bra	u3837
  5156  002500  2F84               	decfsz	(??_initLCD+1)& (0+255),f,b
  5157  002502  D7F9               	bra	u3837
  5158  002504  F000               	nop	
  5159                           
  5160                           ;lcd.c: 8:     SendCMDLCD(0b00001101);
  5161  002506  0E0D               	movlw	13
  5162  002508  ECE8  F014         	call	_SendCMDLCD
  5163                           
  5164                           ;lcd.c: 9:     SendCMDLCD(0b00000110);
  5165  00250C  0E06               	movlw	6
  5166  00250E  ECE8  F014         	call	_SendCMDLCD
  5167                           
  5168                           ;lcd.c: 10:     _delay((unsigned long)((50)*(12000000/4000.0)));
  5169  002512  0E93               	movlw	147
  5170  002514  0100               	movlb	0	; () banked
  5171  002516  6F83               	movwf	??_initLCD& (0+255),b
  5172  002518  0E31               	movlw	49
  5173  00251A                     u3847:
  5174  00251A  FFFF               	dw	65535	; errata NOP
  5175  00251C  2EE8               	decfsz	wreg,f,c
  5176  00251E  D7FD               	bra	u3847
  5177  002520  2F83               	decfsz	??_initLCD& (0+255),f,b
  5178  002522  D7FB               	bra	u3847
  5179  002524  D000               	nop2	
  5180  002526  F000               	nop	
  5181  002528  0012               	return		;funcret
  5182  00252A  FFFF               	dw	65535	; errata NOP
  5183  00252C                     __end_of_initLCD:
  5184                           	opt callstack 0
  5185                           
  5186 ;; *************** function _SendCMDLCD *****************
  5187 ;; Defined at:
  5188 ;;		line 25 in file "lcd.c"
  5189 ;; Parameters:    Size  Location     Type
  5190 ;;  CMD             1    wreg     unsigned char 
  5191 ;; Auto vars:     Size  Location     Type
  5192 ;;  CMD             1    1[BANK0 ] unsigned char 
  5193 ;; Return value:  Size  Location     Type
  5194 ;;                  1    wreg      void 
  5195 ;; Registers used:
  5196 ;;		wreg, status,2, status,0, cstack
  5197 ;; Tracked objects:
  5198 ;;		On entry : 0/0
  5199 ;;		On exit  : 0/0
  5200 ;;		Unchanged: 0/0
  5201 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5202 ;;      Params:         0       0       0       0       0       0       0
  5203 ;;      Locals:         0       1       0       0       0       0       0
  5204 ;;      Temps:          0       0       0       0       0       0       0
  5205 ;;      Totals:         0       1       0       0       0       0       0
  5206 ;;Total ram usage:        1 bytes
  5207 ;; Hardware stack levels used:    1
  5208 ;; Hardware stack levels required when called:   12
  5209 ;; This function calls:
  5210 ;;		_BusyXLCD
  5211 ;;		_WriteCmdXLCD
  5212 ;; This function is called by:
  5213 ;;		_initLCD
  5214 ;; This function uses a non-reentrant model
  5215 ;;
  5216                           
  5217                           	psect	text27
  5218  0029D0                     __ptext27:
  5219                           	opt callstack 0
  5220  0029D0                     _SendCMDLCD:
  5221                           	opt callstack 0
  5222  0029D0  FFFF               	dw	65535	; assembler added errata NOP
  5223                           
  5224                           ;incstack = 0
  5225                           ;SendCMDLCD@CMD stored from wreg
  5226  0029D2  0100               	movlb	0	; () banked
  5227  0029D4  6F81               	movwf	SendCMDLCD@CMD& (0+255),b
  5228  0029D6  FFFF               	dw	65535	; assembler added errata NOP
  5229                           
  5230                           ;lcd.c: 26:     while(BusyXLCD())continue;
  5231  0029D8  ECF7  F014         	call	_BusyXLCD	;wreg free
  5232  0029DC  0900               	iorlw	0
  5233  0029DE  A4D8               	btfss	status,2,c
  5234  0029E0  D7FA               	goto	l3626
  5235                           
  5236                           ;lcd.c: 27:     WriteCmdXLCD(CMD);
  5237  0029E2  0100               	movlb	0	; () banked
  5238  0029E4  5181               	movf	SendCMDLCD@CMD& (0+255),w,b
  5239  0029E6  ECBB  F012         	call	_WriteCmdXLCD
  5240  0029EA  0012               	return		;funcret
  5241  0029EC  FFFF               	dw	65535	; errata NOP
  5242  0029EE                     __end_of_SendCMDLCD:
  5243                           	opt callstack 0
  5244                           
  5245 ;; *************** function _OpenXLCD *****************
  5246 ;; Defined at:
  5247 ;;		line 40 in file "lcd_pic16.c"
  5248 ;; Parameters:    Size  Location     Type
  5249 ;;  lcdtype         1    wreg     unsigned char 
  5250 ;; Auto vars:     Size  Location     Type
  5251 ;;  lcdtype         1    2[BANK0 ] unsigned char 
  5252 ;; Return value:  Size  Location     Type
  5253 ;;                  1    wreg      void 
  5254 ;; Registers used:
  5255 ;;		wreg, status,2, status,0, cstack
  5256 ;; Tracked objects:
  5257 ;;		On entry : 0/0
  5258 ;;		On exit  : 0/0
  5259 ;;		Unchanged: 0/0
  5260 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5261 ;;      Params:         0       0       0       0       0       0       0
  5262 ;;      Locals:         0       1       0       0       0       0       0
  5263 ;;      Temps:          0       1       0       0       0       0       0
  5264 ;;      Totals:         0       2       0       0       0       0       0
  5265 ;;Total ram usage:        2 bytes
  5266 ;; Hardware stack levels used:    1
  5267 ;; Hardware stack levels required when called:   12
  5268 ;; This function calls:
  5269 ;;		_BusyXLCD
  5270 ;;		_DelayPORXLCD
  5271 ;;		_SetDDRamAddr
  5272 ;;		_WriteCmdXLCD
  5273 ;; This function is called by:
  5274 ;;		_initLCD
  5275 ;; This function uses a non-reentrant model
  5276 ;;
  5277                           
  5278                           	psect	text28
  5279  0019D6                     __ptext28:
  5280                           	opt callstack 0
  5281  0019D6                     _OpenXLCD:
  5282                           	opt callstack 0
  5283  0019D6  FFFF               	dw	65535	; assembler added errata NOP
  5284                           
  5285                           ;incstack = 0
  5286                           ;OpenXLCD@lcdtype stored from wreg
  5287  0019D8  0100               	movlb	0	; () banked
  5288  0019DA  6F82               	movwf	OpenXLCD@lcdtype& (0+255),b
  5289                           
  5290                           ;lcd_pic16.c: 40: void OpenXLCD(unsigned char lcdtype);lcd_pic16.c: 41: {;lcd_pic16.c: 4
      +                          7:         PORTD &= 0x0f;
  5291  0019DC  0E0F               	movlw	15
  5292  0019DE  1683               	andwf	3971,f,c	;volatile
  5293                           
  5294                           ;lcd_pic16.c: 48:         TRISD &= 0x0F;
  5295  0019E0  0E0F               	movlw	15
  5296  0019E2  1695               	andwf	3989,f,c	;volatile
  5297                           
  5298                           ;lcd_pic16.c: 54:         TRISDbits.TRISD2 = 0;
  5299  0019E4  9495               	bcf	3989,2,c	;volatile
  5300                           
  5301                           ;lcd_pic16.c: 55:         TRISDbits.TRISD3 = 0;
  5302  0019E6  9695               	bcf	3989,3,c	;volatile
  5303                           
  5304                           ;lcd_pic16.c: 56:         TRISDbits.TRISD1 = 0;
  5305  0019E8  9295               	bcf	3989,1,c	;volatile
  5306                           
  5307                           ;lcd_pic16.c: 57:         PORTDbits.RD2 = 0;
  5308  0019EA  9483               	bcf	3971,2,c	;volatile
  5309                           
  5310                           ;lcd_pic16.c: 58:         PORTDbits.RD3 = 0;
  5311  0019EC  9683               	bcf	3971,3,c	;volatile
  5312                           
  5313                           ;lcd_pic16.c: 59:         PORTDbits.RD1 = 0;
  5314  0019EE  9283               	bcf	3971,1,c	;volatile
  5315                           
  5316                           ;lcd_pic16.c: 62:         DelayPORXLCD();
  5317  0019F0  EC14  F015         	call	_DelayPORXLCD	;wreg free
  5318                           
  5319                           ;lcd_pic16.c: 64:        WriteCmdXLCD(0x30);
  5320  0019F4  0E30               	movlw	48
  5321  0019F6  ECBB  F012         	call	_WriteCmdXLCD
  5322                           
  5323                           ;lcd_pic16.c: 65:          _delay((unsigned long)((5)*(12000000/4000.0)));
  5324  0019FA  0E0F               	movlw	15
  5325  0019FC  0100               	movlb	0	; () banked
  5326  0019FE  6F81               	movwf	??_OpenXLCD& (0+255),b
  5327  001A00  0E9D               	movlw	157
  5328  001A02                     u3857:
  5329  001A02  FFFF               	dw	65535	; errata NOP
  5330  001A04  2EE8               	decfsz	wreg,f,c
  5331  001A06  D7FD               	bra	u3857
  5332  001A08  2F81               	decfsz	??_OpenXLCD& (0+255),f,b
  5333  001A0A  D7FB               	bra	u3857
  5334  001A0C  D000               	nop2	
  5335  001A0E  F000               	nop	
  5336                           
  5337                           ;lcd_pic16.c: 67:        WriteCmdXLCD(0x30);
  5338  001A10  0E30               	movlw	48
  5339  001A12  ECBB  F012         	call	_WriteCmdXLCD
  5340                           
  5341                           ;lcd_pic16.c: 68:          _delay((unsigned long)((1)*(12000000/4000.0)));
  5342  001A16  0E03               	movlw	3
  5343  001A18  0100               	movlb	0	; () banked
  5344  001A1A  6F81               	movwf	??_OpenXLCD& (0+255),b
  5345  001A1C  0EEB               	movlw	235
  5346  001A1E                     u3867:
  5347  001A1E  FFFF               	dw	65535	; errata NOP
  5348  001A20  2EE8               	decfsz	wreg,f,c
  5349  001A22  D7FD               	bra	u3867
  5350  001A24  2F81               	decfsz	??_OpenXLCD& (0+255),f,b
  5351  001A26  D7FB               	bra	u3867
  5352  001A28  D000               	nop2	
  5353  001A2A  F000               	nop	
  5354                           
  5355                           ;lcd_pic16.c: 71:        WriteCmdXLCD(0x32);
  5356  001A2C  0E32               	movlw	50
  5357  001A2E  ECBB  F012         	call	_WriteCmdXLCD
  5358  001A32                     l3566:
  5359  001A32  FFFF               	dw	65535	; assembler added errata NOP
  5360  001A34  ECF7  F014         	call	_BusyXLCD	;wreg free
  5361  001A38  0900               	iorlw	0
  5362  001A3A  A4D8               	btfss	status,2,c
  5363  001A3C  D7FA               	goto	l3566
  5364  001A3E                     u3090:
  5365  001A3E  FFFF               	dw	65535	; assembler added errata NOP
  5366  001A40  ECF7  F014         	call	_BusyXLCD	;wreg free
  5367  001A44  0900               	iorlw	0
  5368  001A46  A4D8               	btfss	status,2,c
  5369  001A48  D7FA               	goto	u3090
  5370                           
  5371                           ;lcd_pic16.c: 78:         WriteCmdXLCD(lcdtype);
  5372  001A4A  0100               	movlb	0	; () banked
  5373  001A4C  5182               	movf	OpenXLCD@lcdtype& (0+255),w,b
  5374  001A4E  ECBB  F012         	call	_WriteCmdXLCD
  5375  001A52                     l3572:
  5376  001A52  FFFF               	dw	65535	; assembler added errata NOP
  5377  001A54  ECF7  F014         	call	_BusyXLCD	;wreg free
  5378  001A58  0900               	iorlw	0
  5379  001A5A  A4D8               	btfss	status,2,c
  5380  001A5C  D7FA               	goto	l3572
  5381                           
  5382                           ;lcd_pic16.c: 82:         WriteCmdXLCD(0b00001011&0b00001101&0b00001110);
  5383  001A5E  0E08               	movlw	8
  5384  001A60  ECBB  F012         	call	_WriteCmdXLCD
  5385  001A64                     l3576:
  5386  001A64  FFFF               	dw	65535	; assembler added errata NOP
  5387  001A66  ECF7  F014         	call	_BusyXLCD	;wreg free
  5388  001A6A  0900               	iorlw	0
  5389  001A6C  A4D8               	btfss	status,2,c
  5390  001A6E  D7FA               	goto	l3576
  5391                           
  5392                           ;lcd_pic16.c: 84:         WriteCmdXLCD(0b00001111&0b00001111&0b00001111);
  5393  001A70  0E0F               	movlw	15
  5394  001A72  ECBB  F012         	call	_WriteCmdXLCD
  5395  001A76                     l3580:
  5396  001A76  FFFF               	dw	65535	; assembler added errata NOP
  5397  001A78  ECF7  F014         	call	_BusyXLCD	;wreg free
  5398  001A7C  0900               	iorlw	0
  5399  001A7E  A4D8               	btfss	status,2,c
  5400  001A80  D7FA               	goto	l3580
  5401                           
  5402                           ;lcd_pic16.c: 88:         WriteCmdXLCD(0x01);
  5403  001A82  0E01               	movlw	1
  5404  001A84  ECBB  F012         	call	_WriteCmdXLCD
  5405  001A88                     l3584:
  5406  001A88  FFFF               	dw	65535	; assembler added errata NOP
  5407  001A8A  ECF7  F014         	call	_BusyXLCD	;wreg free
  5408  001A8E  0900               	iorlw	0
  5409  001A90  A4D8               	btfss	status,2,c
  5410  001A92  D7FA               	goto	l3584
  5411                           
  5412                           ;lcd_pic16.c: 92:         WriteCmdXLCD(0b00000101);
  5413  001A94  0E05               	movlw	5
  5414  001A96  ECBB  F012         	call	_WriteCmdXLCD
  5415  001A9A                     l3588:
  5416  001A9A  FFFF               	dw	65535	; assembler added errata NOP
  5417  001A9C  ECF7  F014         	call	_BusyXLCD	;wreg free
  5418  001AA0  0900               	iorlw	0
  5419  001AA2  A4D8               	btfss	status,2,c
  5420  001AA4  D7FA               	goto	l3588
  5421                           
  5422                           ;lcd_pic16.c: 95:         WriteCmdXLCD(0x06);
  5423  001AA6  0E06               	movlw	6
  5424  001AA8  ECBB  F012         	call	_WriteCmdXLCD
  5425  001AAC                     l3592:
  5426  001AAC  FFFF               	dw	65535	; assembler added errata NOP
  5427  001AAE  ECF7  F014         	call	_BusyXLCD	;wreg free
  5428  001AB2  0900               	iorlw	0
  5429  001AB4  A4D8               	btfss	status,2,c
  5430  001AB6  D7FA               	goto	l3592
  5431                           
  5432                           ;lcd_pic16.c: 98:         SetDDRamAddr(0x80);
  5433  001AB8  0E80               	movlw	128
  5434  001ABA  EC96  F012         	call	_SetDDRamAddr
  5435  001ABE                     l3596:
  5436  001ABE  FFFF               	dw	65535	; assembler added errata NOP
  5437  001AC0  ECF7  F014         	call	_BusyXLCD	;wreg free
  5438  001AC4  0900               	iorlw	0
  5439  001AC6  A4D8               	btfss	status,2,c
  5440  001AC8  D7FA               	goto	l3596
  5441                           
  5442                           ;lcd_pic16.c: 101:         WriteCmdXLCD(0b00001101);
  5443  001ACA  0E0D               	movlw	13
  5444  001ACC  ECBB  F012         	call	_WriteCmdXLCD
  5445  001AD0  0012               	return		;funcret
  5446  001AD2  FFFF               	dw	65535	; errata NOP
  5447  001AD4                     __end_of_OpenXLCD:
  5448                           	opt callstack 0
  5449                           
  5450 ;; *************** function _WriteCmdXLCD *****************
  5451 ;; Defined at:
  5452 ;;		line 164 in file "lcd_pic16.c"
  5453 ;; Parameters:    Size  Location     Type
  5454 ;;  cmd             1    wreg     unsigned char 
  5455 ;; Auto vars:     Size  Location     Type
  5456 ;;  cmd             1    0[BANK0 ] unsigned char 
  5457 ;; Return value:  Size  Location     Type
  5458 ;;                  1    wreg      void 
  5459 ;; Registers used:
  5460 ;;		wreg, status,2, status,0, cstack
  5461 ;; Tracked objects:
  5462 ;;		On entry : 0/0
  5463 ;;		On exit  : 0/0
  5464 ;;		Unchanged: 0/0
  5465 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5466 ;;      Params:         0       0       0       0       0       0       0
  5467 ;;      Locals:         0       1       0       0       0       0       0
  5468 ;;      Temps:          0       0       0       0       0       0       0
  5469 ;;      Totals:         0       1       0       0       0       0       0
  5470 ;;Total ram usage:        1 bytes
  5471 ;; Hardware stack levels used:    1
  5472 ;; Hardware stack levels required when called:   11
  5473 ;; This function calls:
  5474 ;;		_DelayFor18TCY
  5475 ;; This function is called by:
  5476 ;;		_OpenXLCD
  5477 ;;		_SendCMDLCD
  5478 ;; This function uses a non-reentrant model
  5479 ;;
  5480                           
  5481                           	psect	text29
  5482  002576                     __ptext29:
  5483                           	opt callstack 0
  5484  002576                     _WriteCmdXLCD:
  5485                           	opt callstack 0
  5486  002576  FFFF               	dw	65535	; assembler added errata NOP
  5487                           
  5488                           ;incstack = 0
  5489                           ;WriteCmdXLCD@cmd stored from wreg
  5490  002578  0100               	movlb	0	; () banked
  5491  00257A  6F80               	movwf	WriteCmdXLCD@cmd& (0+255),b
  5492                           
  5493                           ;lcd_pic16.c: 178:         TRISD &= 0x0f;
  5494  00257C  0E0F               	movlw	15
  5495  00257E  1695               	andwf	3989,f,c	;volatile
  5496                           
  5497                           ;lcd_pic16.c: 179:         PORTD &= 0x0f;
  5498  002580  0E0F               	movlw	15
  5499  002582  1683               	andwf	3971,f,c	;volatile
  5500                           
  5501                           ;lcd_pic16.c: 180:         PORTD |= cmd&0xf0;
  5502  002584  0100               	movlb	0	; () banked
  5503  002586  5180               	movf	WriteCmdXLCD@cmd& (0+255),w,b
  5504  002588  0BF0               	andlw	240
  5505  00258A  1283               	iorwf	3971,f,c	;volatile
  5506                           
  5507                           ; BSR set to: 0
  5508                           ;lcd_pic16.c: 186:         PORTDbits.RD2 = 0;
  5509  00258C  9483               	bcf	3971,2,c	;volatile
  5510                           
  5511                           ; BSR set to: 0
  5512                           ;lcd_pic16.c: 187:         PORTDbits.RD3 = 0;
  5513  00258E  9683               	bcf	3971,3,c	;volatile
  5514                           
  5515                           ; BSR set to: 0
  5516                           ;lcd_pic16.c: 188:         DelayFor18TCY();
  5517  002590  EC39  F015         	call	_DelayFor18TCY	;wreg free
  5518                           
  5519                           ;lcd_pic16.c: 189:         PORTDbits.RD1 = 1;
  5520  002594  8283               	bsf	3971,1,c	;volatile
  5521                           
  5522                           ;lcd_pic16.c: 190:         DelayFor18TCY();
  5523  002596  EC39  F015         	call	_DelayFor18TCY	;wreg free
  5524                           
  5525                           ;lcd_pic16.c: 191:         PORTDbits.RD1 = 0;
  5526  00259A  9283               	bcf	3971,1,c	;volatile
  5527                           
  5528                           ;lcd_pic16.c: 193:         PORTD &= 0x0f;
  5529  00259C  0E0F               	movlw	15
  5530  00259E  1683               	andwf	3971,f,c	;volatile
  5531                           
  5532                           ;lcd_pic16.c: 194:         PORTD |= (cmd<<4)&0xf0;
  5533  0025A0  0100               	movlb	0	; () banked
  5534  0025A2  3980               	swapf	WriteCmdXLCD@cmd& (0+255),w,b
  5535  0025A4  0BF0               	andlw	240
  5536  0025A6  0BF0               	andlw	240
  5537  0025A8  1283               	iorwf	3971,f,c	;volatile
  5538                           
  5539                           ; BSR set to: 0
  5540                           ;lcd_pic16.c: 199:         DelayFor18TCY();
  5541  0025AA  EC39  F015         	call	_DelayFor18TCY	;wreg free
  5542                           
  5543                           ;lcd_pic16.c: 200:         PORTDbits.RD1 = 1;
  5544  0025AE  8283               	bsf	3971,1,c	;volatile
  5545                           
  5546                           ;lcd_pic16.c: 201:         DelayFor18TCY();
  5547  0025B0  EC39  F015         	call	_DelayFor18TCY	;wreg free
  5548                           
  5549                           ;lcd_pic16.c: 202:         PORTDbits.RD1 = 0;
  5550  0025B4  9283               	bcf	3971,1,c	;volatile
  5551                           
  5552                           ;lcd_pic16.c: 204:         TRISD |= 0xf0;
  5553  0025B6  0EF0               	movlw	240
  5554  0025B8  1295               	iorwf	3989,f,c	;volatile
  5555  0025BA  0012               	return		;funcret
  5556  0025BC  FFFF               	dw	65535	; errata NOP
  5557  0025BE                     __end_of_WriteCmdXLCD:
  5558                           	opt callstack 0
  5559                           
  5560 ;; *************** function _SetDDRamAddr *****************
  5561 ;; Defined at:
  5562 ;;		line 217 in file "lcd_pic16.c"
  5563 ;; Parameters:    Size  Location     Type
  5564 ;;  DDaddr          1    wreg     unsigned char 
  5565 ;; Auto vars:     Size  Location     Type
  5566 ;;  DDaddr          1    0[BANK0 ] unsigned char 
  5567 ;; Return value:  Size  Location     Type
  5568 ;;                  1    wreg      void 
  5569 ;; Registers used:
  5570 ;;		wreg, status,2, status,0, cstack
  5571 ;; Tracked objects:
  5572 ;;		On entry : 0/0
  5573 ;;		On exit  : 0/0
  5574 ;;		Unchanged: 0/0
  5575 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5576 ;;      Params:         0       0       0       0       0       0       0
  5577 ;;      Locals:         0       1       0       0       0       0       0
  5578 ;;      Temps:          0       0       0       0       0       0       0
  5579 ;;      Totals:         0       1       0       0       0       0       0
  5580 ;;Total ram usage:        1 bytes
  5581 ;; Hardware stack levels used:    1
  5582 ;; Hardware stack levels required when called:   11
  5583 ;; This function calls:
  5584 ;;		_DelayFor18TCY
  5585 ;; This function is called by:
  5586 ;;		_OpenXLCD
  5587 ;; This function uses a non-reentrant model
  5588 ;;
  5589                           
  5590                           	psect	text30
  5591  00252C                     __ptext30:
  5592                           	opt callstack 0
  5593  00252C                     _SetDDRamAddr:
  5594                           	opt callstack 0
  5595  00252C  FFFF               	dw	65535	; assembler added errata NOP
  5596                           
  5597                           ;incstack = 0
  5598                           ;SetDDRamAddr@DDaddr stored from wreg
  5599  00252E  0100               	movlb	0	; () banked
  5600  002530  6F80               	movwf	SetDDRamAddr@DDaddr& (0+255),b
  5601                           
  5602                           ;lcd_pic16.c: 217: void SetDDRamAddr(unsigned char DDaddr);lcd_pic16.c: 218: {;lcd_pic16
      +                          .c: 232:         TRISD &= 0x0f;
  5603  002532  0E0F               	movlw	15
  5604  002534  1695               	andwf	3989,f,c	;volatile
  5605                           
  5606                           ;lcd_pic16.c: 233:         PORTD &= 0x0f;
  5607  002536  0E0F               	movlw	15
  5608  002538  1683               	andwf	3971,f,c	;volatile
  5609                           
  5610                           ;lcd_pic16.c: 234:         PORTD |= ((DDaddr | 0b10000000) & 0xf0);
  5611  00253A  0100               	movlb	0	; () banked
  5612  00253C  5180               	movf	SetDDRamAddr@DDaddr& (0+255),w,b
  5613  00253E  0980               	iorlw	128
  5614  002540  0BF0               	andlw	240
  5615  002542  1283               	iorwf	3971,f,c	;volatile
  5616                           
  5617                           ; BSR set to: 0
  5618                           ;lcd_pic16.c: 240:         PORTDbits.RD2 = 0;
  5619  002544  9483               	bcf	3971,2,c	;volatile
  5620                           
  5621                           ; BSR set to: 0
  5622                           ;lcd_pic16.c: 241:         PORTDbits.RD3 = 0;
  5623  002546  9683               	bcf	3971,3,c	;volatile
  5624                           
  5625                           ; BSR set to: 0
  5626                           ;lcd_pic16.c: 242:         DelayFor18TCY();
  5627  002548  EC39  F015         	call	_DelayFor18TCY	;wreg free
  5628                           
  5629                           ;lcd_pic16.c: 243:         PORTDbits.RD1 = 1;
  5630  00254C  8283               	bsf	3971,1,c	;volatile
  5631                           
  5632                           ;lcd_pic16.c: 244:         DelayFor18TCY();
  5633  00254E  EC39  F015         	call	_DelayFor18TCY	;wreg free
  5634                           
  5635                           ;lcd_pic16.c: 245:         PORTDbits.RD1 = 0;
  5636  002552  9283               	bcf	3971,1,c	;volatile
  5637                           
  5638                           ;lcd_pic16.c: 247:         PORTD &= 0x0f;
  5639  002554  0E0F               	movlw	15
  5640  002556  1683               	andwf	3971,f,c	;volatile
  5641                           
  5642                           ;lcd_pic16.c: 248:         PORTD |= ((DDaddr<<4)&0xf0);
  5643  002558  0100               	movlb	0	; () banked
  5644  00255A  3980               	swapf	SetDDRamAddr@DDaddr& (0+255),w,b
  5645  00255C  0BF0               	andlw	240
  5646  00255E  0BF0               	andlw	240
  5647  002560  1283               	iorwf	3971,f,c	;volatile
  5648                           
  5649                           ; BSR set to: 0
  5650                           ;lcd_pic16.c: 253:         DelayFor18TCY();
  5651  002562  EC39  F015         	call	_DelayFor18TCY	;wreg free
  5652                           
  5653                           ;lcd_pic16.c: 254:         PORTDbits.RD1 = 1;
  5654  002566  8283               	bsf	3971,1,c	;volatile
  5655                           
  5656                           ;lcd_pic16.c: 255:         DelayFor18TCY();
  5657  002568  EC39  F015         	call	_DelayFor18TCY	;wreg free
  5658                           
  5659                           ;lcd_pic16.c: 256:         PORTDbits.RD1 = 0;
  5660  00256C  9283               	bcf	3971,1,c	;volatile
  5661                           
  5662                           ;lcd_pic16.c: 258:         TRISD |= 0xf0;
  5663  00256E  0EF0               	movlw	240
  5664  002570  1295               	iorwf	3989,f,c	;volatile
  5665  002572  0012               	return		;funcret
  5666  002574  FFFF               	dw	65535	; errata NOP
  5667  002576                     __end_of_SetDDRamAddr:
  5668                           	opt callstack 0
  5669                           
  5670 ;; *************** function _DelayFor18TCY *****************
  5671 ;; Defined at:
  5672 ;;		line 22 in file "lcd_pic16.c"
  5673 ;; Parameters:    Size  Location     Type
  5674 ;;		None
  5675 ;; Auto vars:     Size  Location     Type
  5676 ;;		None
  5677 ;; Return value:  Size  Location     Type
  5678 ;;                  1    wreg      void 
  5679 ;; Registers used:
  5680 ;;		wreg
  5681 ;; Tracked objects:
  5682 ;;		On entry : 0/0
  5683 ;;		On exit  : 0/0
  5684 ;;		Unchanged: 0/0
  5685 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5686 ;;      Params:         0       0       0       0       0       0       0
  5687 ;;      Locals:         0       0       0       0       0       0       0
  5688 ;;      Temps:          0       0       0       0       0       0       0
  5689 ;;      Totals:         0       0       0       0       0       0       0
  5690 ;;Total ram usage:        0 bytes
  5691 ;; Hardware stack levels used:    1
  5692 ;; Hardware stack levels required when called:   10
  5693 ;; This function calls:
  5694 ;;		Nothing
  5695 ;; This function is called by:
  5696 ;;		_WriteCmdXLCD
  5697 ;;		_SetDDRamAddr
  5698 ;;		_SetCGRamAddr
  5699 ;;		_ReadDataXLCD
  5700 ;;		_ReadAddrXLCD
  5701 ;; This function uses a non-reentrant model
  5702 ;;
  5703                           
  5704                           	psect	text31
  5705  002A72                     __ptext31:
  5706                           	opt callstack 0
  5707  002A72                     _DelayFor18TCY:
  5708                           	opt callstack 0
  5709  002A72  FFFF               	dw	65535	; assembler added errata NOP
  5710                           
  5711                           ;lcd_pic16.c: 24:    _delay((unsigned long)((18)*(12000000/4000000.0)));
  5712                           
  5713                           ;incstack = 0
  5714  002A74  0E0D               	movlw	13
  5715  002A76                     u3877:
  5716  002A76  FFFF               	dw	65535	; errata NOP
  5717  002A78  2EE8               	decfsz	wreg,f,c
  5718  002A7A  D7FD               	bra	u3877
  5719  002A7C  D000               	nop2	
  5720  002A7E  0012               	return		;funcret
  5721  002A80  FFFF               	dw	65535	; errata NOP
  5722  002A82                     __end_of_DelayFor18TCY:
  5723                           	opt callstack 0
  5724                           
  5725 ;; *************** function _DelayPORXLCD *****************
  5726 ;; Defined at:
  5727 ;;		line 27 in file "lcd_pic16.c"
  5728 ;; Parameters:    Size  Location     Type
  5729 ;;		None
  5730 ;; Auto vars:     Size  Location     Type
  5731 ;;		None
  5732 ;; Return value:  Size  Location     Type
  5733 ;;                  1    wreg      void 
  5734 ;; Registers used:
  5735 ;;		wreg
  5736 ;; Tracked objects:
  5737 ;;		On entry : 0/0
  5738 ;;		On exit  : 0/0
  5739 ;;		Unchanged: 0/0
  5740 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5741 ;;      Params:         0       0       0       0       0       0       0
  5742 ;;      Locals:         0       0       0       0       0       0       0
  5743 ;;      Temps:          0       1       0       0       0       0       0
  5744 ;;      Totals:         0       1       0       0       0       0       0
  5745 ;;Total ram usage:        1 bytes
  5746 ;; Hardware stack levels used:    1
  5747 ;; Hardware stack levels required when called:   10
  5748 ;; This function calls:
  5749 ;;		Nothing
  5750 ;; This function is called by:
  5751 ;;		_OpenXLCD
  5752 ;; This function uses a non-reentrant model
  5753 ;;
  5754                           
  5755                           	psect	text32
  5756  002A28                     __ptext32:
  5757                           	opt callstack 0
  5758  002A28                     _DelayPORXLCD:
  5759                           	opt callstack 0
  5760  002A28  FFFF               	dw	65535	; assembler added errata NOP
  5761                           
  5762                           ;lcd_pic16.c: 29:    _delay((unsigned long)((20)*(12000000/4000.0)));
  5763                           
  5764                           ;incstack = 0
  5765  002A2A  0E3B               	movlw	59
  5766  002A2C  0100               	movlb	0	; () banked
  5767  002A2E  6F80               	movwf	??_DelayPORXLCD& (0+255),b
  5768  002A30  0E79               	movlw	121
  5769  002A32                     u3887:
  5770  002A32  FFFF               	dw	65535	; errata NOP
  5771  002A34  2EE8               	decfsz	wreg,f,c
  5772  002A36  D7FD               	bra	u3887
  5773  002A38  2F80               	decfsz	??_DelayPORXLCD& (0+255),f,b
  5774  002A3A  D7FB               	bra	u3887
  5775  002A3C  D000               	nop2	
  5776  002A3E  F000               	nop	
  5777  002A40  0012               	return		;funcret
  5778  002A42  FFFF               	dw	65535	; errata NOP
  5779  002A44                     __end_of_DelayPORXLCD:
  5780                           	opt callstack 0
  5781                           
  5782 ;; *************** function _BusyXLCD *****************
  5783 ;; Defined at:
  5784 ;;		line 451 in file "lcd_pic16.c"
  5785 ;; Parameters:    Size  Location     Type
  5786 ;;		None
  5787 ;; Auto vars:     Size  Location     Type
  5788 ;;		None
  5789 ;; Return value:  Size  Location     Type
  5790 ;;                  1    wreg      unsigned char 
  5791 ;; Registers used:
  5792 ;;		wreg
  5793 ;; Tracked objects:
  5794 ;;		On entry : 0/0
  5795 ;;		On exit  : 0/0
  5796 ;;		Unchanged: 0/0
  5797 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5798 ;;      Params:         0       0       0       0       0       0       0
  5799 ;;      Locals:         0       0       0       0       0       0       0
  5800 ;;      Temps:          0       1       0       0       0       0       0
  5801 ;;      Totals:         0       1       0       0       0       0       0
  5802 ;;Total ram usage:        1 bytes
  5803 ;; Hardware stack levels used:    1
  5804 ;; Hardware stack levels required when called:   10
  5805 ;; This function calls:
  5806 ;;		Nothing
  5807 ;; This function is called by:
  5808 ;;		_OpenXLCD
  5809 ;;		_SendCMDLCD
  5810 ;;		_putrsXLCD
  5811 ;; This function uses a non-reentrant model
  5812 ;;
  5813                           
  5814                           	psect	text33
  5815  0029EE                     __ptext33:
  5816                           	opt callstack 0
  5817  0029EE                     _BusyXLCD:
  5818                           	opt callstack 0
  5819  0029EE  FFFF               	dw	65535	; assembler added errata NOP
  5820                           
  5821                           ;lcd_pic16.c: 504:         _delay((unsigned long)((5)*(12000000/4000.0)));
  5822                           
  5823                           ;incstack = 0
  5824  0029F0  0E0F               	movlw	15
  5825  0029F2  0100               	movlb	0	; () banked
  5826  0029F4  6F80               	movwf	??_BusyXLCD& (0+255),b
  5827  0029F6  0E9D               	movlw	157
  5828  0029F8                     u3897:
  5829  0029F8  FFFF               	dw	65535	; errata NOP
  5830  0029FA  2EE8               	decfsz	wreg,f,c
  5831  0029FC  D7FD               	bra	u3897
  5832  0029FE  2F80               	decfsz	??_BusyXLCD& (0+255),f,b
  5833  002A00  D7FB               	bra	u3897
  5834  002A02  D000               	nop2	
  5835  002A04  F000               	nop	
  5836                           
  5837                           ;lcd_pic16.c: 505:         return 0;
  5838  002A06  0E00               	movlw	0
  5839  002A08  0012               	return		;funcret
  5840  002A0A  FFFF               	dw	65535	; errata NOP
  5841  002A0C                     __end_of_BusyXLCD:
  5842                           	opt callstack 0
  5843                           
  5844 ;; *************** function _inter *****************
  5845 ;; Defined at:
  5846 ;;		line 62 in file "main.c"
  5847 ;; Parameters:    Size  Location     Type
  5848 ;;		None
  5849 ;; Auto vars:     Size  Location     Type
  5850 ;;		None
  5851 ;; Return value:  Size  Location     Type
  5852 ;;                  1    wreg      void 
  5853 ;; Registers used:
  5854 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5855 ;; Tracked objects:
  5856 ;;		On entry : 0/0
  5857 ;;		On exit  : 0/0
  5858 ;;		Unchanged: 0/0
  5859 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5860 ;;      Params:         0       0       0       0       0       0       0
  5861 ;;      Locals:         0       0       0       0       0       0       0
  5862 ;;      Temps:         10       0       0       0       0       0       0
  5863 ;;      Totals:        10       0       0       0       0       0       0
  5864 ;;Total ram usage:       10 bytes
  5865 ;; Hardware stack levels used:    1
  5866 ;; Hardware stack levels required when called:    9
  5867 ;; This function calls:
  5868 ;;		_time
  5869 ;;		_updateLCD
  5870 ;;		_vumeter
  5871 ;; This function is called by:
  5872 ;;		Interrupt level 2
  5873 ;; This function uses a non-reentrant model
  5874 ;;
  5875                           
  5876                           	psect	intcode
  5877  000008                     __pintcode:
  5878                           	opt callstack 0
  5879  000008                     _inter:
  5880                           	opt callstack 0
  5881  000008  FFFF               	dw	65535	; assembler added errata NOP
  5882                           
  5883                           ;incstack = 0
  5884  00000A  827F               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  5885  00000C  CFE1 F070          	movff	fsr1l,??_inter
  5886  000010  CFE2 F071          	movff	fsr1h,??_inter+1
  5887  000014  CFD9 F072          	movff	fsr2l,??_inter+2
  5888  000018  CFDA F073          	movff	fsr2h,??_inter+3
  5889  00001C  CFF3 F074          	movff	prodl,??_inter+4
  5890  000020  CFF4 F075          	movff	prodh,??_inter+5
  5891  000024  CFF6 F076          	movff	tblptrl,??_inter+6
  5892  000028  CFF7 F077          	movff	tblptrh,??_inter+7
  5893  00002C  CFF8 F078          	movff	tblptru,??_inter+8
  5894  000030  CFF5 F079          	movff	tablat,??_inter+9
  5895                           
  5896                           ;main.c: 64:     INTCONbits.GIE = 0;
  5897  000034  9EF2               	bcf	4082,7,c	;volatile
  5898                           
  5899                           ;main.c: 66:     if(PIR1bits.TMR1IF == 1){
  5900  000036  A09E               	btfss	3998,0,c	;volatile
  5901  000038  D011               	goto	i2l4082
  5902                           
  5903                           ;main.c: 67:         TMR1H = prTmr1H;
  5904  00003A  C07C  FFCF         	movff	_prTmr1H,4047	;volatile
  5905                           
  5906                           ;main.c: 68:         TMR1L = prTmr1L;
  5907  00003E  C07D  FFCE         	movff	_prTmr1L,4046	;volatile
  5908                           
  5909                           ;main.c: 69:         cntTmr1++;
  5910  000042  2A7E               	incf	_cntTmr1,f,c
  5911                           
  5912                           ;main.c: 70:         time();
  5913  000044  EC99  F010         	call	_time	;wreg free
  5914                           
  5915                           ;main.c: 71:         if(cntTmr1 == 3){
  5916  000048  0E03               	movlw	3
  5917  00004A  187E               	xorwf	_cntTmr1,w,c
  5918  00004C  A4D8               	btfss	status,2,c
  5919  00004E  D004               	goto	i2l4080
  5920                           
  5921                           ;main.c: 72:             cntTmr1 = 0;
  5922  000050  0E00               	movlw	0
  5923  000052  6E7E               	movwf	_cntTmr1,c
  5924                           
  5925                           ;main.c: 73:             updateLCD();
  5926  000054  ECE8  F00F         	call	_updateLCD	;wreg free
  5927  000058                     i2l4080:
  5928  000058  FFFF               	dw	65535	; assembler added errata NOP
  5929                           
  5930                           ;main.c: 75:         PIR1bits.TMR1IF = 0;
  5931  00005A  909E               	bcf	3998,0,c	;volatile
  5932  00005C                     i2l4082:
  5933  00005C  FFFF               	dw	65535	; assembler added errata NOP
  5934                           
  5935                           ;main.c: 78:     if(INTCONbits.TMR0IF == 1){
  5936  00005E  A4F2               	btfss	4082,2,c	;volatile
  5937  000060  D009               	goto	i2l4092
  5938                           
  5939                           ;main.c: 79:         TMR0H = prTmr0H;
  5940  000062  C07A  FFD7         	movff	_prTmr0H,4055	;volatile
  5941                           
  5942                           ;main.c: 80:         TMR0L = prTmr0L;
  5943  000066  C07B  FFD6         	movff	_prTmr0L,4054	;volatile
  5944                           
  5945                           ;main.c: 81:         vumeter(ADRESH);
  5946  00006A  50C4               	movf	4036,w,c	;volatile
  5947  00006C  ECA0  F00F         	call	_vumeter
  5948                           
  5949                           ;main.c: 82:         ADCON0bits.GO = 1;
  5950  000070  84C2               	bsf	4034,2,c	;volatile
  5951                           
  5952                           ;main.c: 83:         INTCONbits.TMR0IF = 0;
  5953  000072  94F2               	bcf	4082,2,c	;volatile
  5954  000074                     i2l4092:
  5955  000074  FFFF               	dw	65535	; assembler added errata NOP
  5956                           
  5957                           ;main.c: 86:     INTCONbits.GIE = 1;
  5958  000076  8EF2               	bsf	4082,7,c	;volatile
  5959  000078  C079  FFF5         	movff	??_inter+9,tablat
  5960  00007C  C078  FFF8         	movff	??_inter+8,tblptru
  5961  000080  C077  FFF7         	movff	??_inter+7,tblptrh
  5962  000084  C076  FFF6         	movff	??_inter+6,tblptrl
  5963  000088  C075  FFF4         	movff	??_inter+5,prodh
  5964  00008C  C074  FFF3         	movff	??_inter+4,prodl
  5965  000090  C073  FFDA         	movff	??_inter+3,fsr2h
  5966  000094  C072  FFD9         	movff	??_inter+2,fsr2l
  5967  000098  C071  FFE2         	movff	??_inter+1,fsr1h
  5968  00009C  C070  FFE1         	movff	??_inter,fsr1l
  5969  0000A0  927F               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  5970  0000A2  0011               	retfie		f
  5971  0000A4  FFFF               	dw	65535	; errata NOP
  5972  0000A6                     __end_of_inter:
  5973                           	opt callstack 0
  5974                           
  5975 ;; *************** function _vumeter *****************
  5976 ;; Defined at:
  5977 ;;		line 90 in file "main.c"
  5978 ;; Parameters:    Size  Location     Type
  5979 ;;  vumLevel        1    wreg     unsigned char 
  5980 ;; Auto vars:     Size  Location     Type
  5981 ;;  vumLevel        1    4[COMRAM] unsigned char 
  5982 ;;  level           1    3[COMRAM] unsigned char 
  5983 ;; Return value:  Size  Location     Type
  5984 ;;                  1    wreg      void 
  5985 ;; Registers used:
  5986 ;;		wreg, status,2, status,0
  5987 ;; Tracked objects:
  5988 ;;		On entry : 0/0
  5989 ;;		On exit  : 0/0
  5990 ;;		Unchanged: 0/0
  5991 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5992 ;;      Params:         0       0       0       0       0       0       0
  5993 ;;      Locals:         2       0       0       0       0       0       0
  5994 ;;      Temps:          3       0       0       0       0       0       0
  5995 ;;      Totals:         5       0       0       0       0       0       0
  5996 ;;Total ram usage:        5 bytes
  5997 ;; Hardware stack levels used:    1
  5998 ;; This function calls:
  5999 ;;		Nothing
  6000 ;; This function is called by:
  6001 ;;		_inter
  6002 ;; This function uses a non-reentrant model
  6003 ;;
  6004                           
  6005                           	psect	text35
  6006  001F40                     __ptext35:
  6007                           	opt callstack 0
  6008  001F40                     _vumeter:
  6009                           	opt callstack 0
  6010  001F40  FFFF               	dw	65535	; assembler added errata NOP
  6011                           
  6012                           ;incstack = 0
  6013                           ;vumeter@vumLevel stored from wreg
  6014  001F42  6E05               	movwf	vumeter@vumLevel,c
  6015                           
  6016                           ;main.c: 91:     unsigned char level = 0;
  6017  001F44  0E00               	movlw	0
  6018  001F46  6E04               	movwf	vumeter@level,c
  6019                           
  6020                           ;main.c: 93:     if (vumLevel >= 200) level = 8;
  6021  001F48  0EC7               	movlw	199
  6022  001F4A  6405               	cpfsgt	vumeter@vumLevel,c
  6023  001F4C  D002               	goto	i2l2586
  6024  001F4E  0E08               	movlw	8
  6025  001F50  D029               	goto	L10
  6026  001F52                     i2l2586:
  6027  001F52  FFFF               	dw	65535	; assembler added errata NOP
  6028  001F54  0E7C               	movlw	124
  6029  001F56  6405               	cpfsgt	vumeter@vumLevel,c
  6030  001F58  D002               	goto	i2l2590
  6031  001F5A  0E07               	movlw	7
  6032  001F5C  D023               	goto	L10
  6033  001F5E                     i2l2590:
  6034  001F5E  FFFF               	dw	65535	; assembler added errata NOP
  6035  001F60  0E4A               	movlw	74
  6036  001F62  6405               	cpfsgt	vumeter@vumLevel,c
  6037  001F64  D002               	goto	i2l2594
  6038  001F66  0E06               	movlw	6
  6039  001F68  D01D               	goto	L10
  6040  001F6A                     i2l2594:
  6041  001F6A  FFFF               	dw	65535	; assembler added errata NOP
  6042  001F6C  0E3B               	movlw	59
  6043  001F6E  6405               	cpfsgt	vumeter@vumLevel,c
  6044  001F70  D002               	goto	i2l2598
  6045  001F72  0E05               	movlw	5
  6046  001F74  D017               	goto	L10
  6047  001F76                     i2l2598:
  6048  001F76  FFFF               	dw	65535	; assembler added errata NOP
  6049  001F78  0E2C               	movlw	44
  6050  001F7A  6405               	cpfsgt	vumeter@vumLevel,c
  6051  001F7C  D002               	goto	i2l2602
  6052  001F7E  0E04               	movlw	4
  6053  001F80  D011               	goto	L10
  6054  001F82                     i2l2602:
  6055  001F82  FFFF               	dw	65535	; assembler added errata NOP
  6056  001F84  0E0E               	movlw	14
  6057  001F86  6405               	cpfsgt	vumeter@vumLevel,c
  6058  001F88  D002               	goto	i2l2606
  6059  001F8A  0E03               	movlw	3
  6060  001F8C  D00B               	goto	L10
  6061  001F8E                     i2l2606:
  6062  001F8E  FFFF               	dw	65535	; assembler added errata NOP
  6063  001F90  0E04               	movlw	4
  6064  001F92  6405               	cpfsgt	vumeter@vumLevel,c
  6065  001F94  D002               	goto	i2l2610
  6066  001F96  0E02               	movlw	2
  6067  001F98  D005               	goto	L10
  6068  001F9A                     i2l2610:
  6069  001F9A  FFFF               	dw	65535	; assembler added errata NOP
  6070  001F9C  5005               	movf	vumeter@vumLevel,w,c
  6071  001F9E  B4D8               	btfsc	status,2,c
  6072  001FA0  D003               	goto	i2l220
  6073  001FA2  0E01               	movlw	1
  6074  001FA4                     L10:
  6075  001FA4  FFFF               	dw	65535	; assembler added errata NOP
  6076  001FA6  6E04               	movwf	vumeter@level,c
  6077  001FA8                     i2l220:
  6078  001FA8  FFFF               	dw	65535	; assembler added errata NOP
  6079                           
  6080                           ;main.c: 102:     PORTB = 0x0100 >> level;
  6081  001FAA  C004  F001         	movff	vumeter@level,??_vumeter
  6082  001FAE  0E00               	movlw	0
  6083  001FB0  6E02               	movwf	(??_vumeter+1)& (0+255),c
  6084  001FB2  0E01               	movlw	1
  6085  001FB4  6E03               	movwf	(??_vumeter+2)& (0+255),c
  6086  001FB6  2A01               	incf	??_vumeter,f,c
  6087  001FB8  D004               	goto	i2u180_44
  6088  001FBA                     i2u180_45:
  6089  001FBA  FFFF               	dw	65535	; assembler added errata NOP
  6090  001FBC  3403               	rlcf	??_vumeter+2,w,c
  6091  001FBE  3203               	rrcf	??_vumeter+2,f,c
  6092  001FC0  3202               	rrcf	??_vumeter+1,f,c
  6093  001FC2                     i2u180_44:
  6094  001FC2  FFFF               	dw	65535	; assembler added errata NOP
  6095  001FC4  2E01               	decfsz	??_vumeter,f,c
  6096  001FC6  D7F9               	goto	i2u180_45
  6097  001FC8  5002               	movf	??_vumeter+1,w,c
  6098  001FCA  6E81               	movwf	3969,c	;volatile
  6099  001FCC  0012               	return		;funcret
  6100  001FCE  FFFF               	dw	65535	; errata NOP
  6101  001FD0                     __end_of_vumeter:
  6102                           	opt callstack 0
  6103                           
  6104 ;; *************** function _updateLCD *****************
  6105 ;; Defined at:
  6106 ;;		line 14 in file "lcd.c"
  6107 ;; Parameters:    Size  Location     Type
  6108 ;;		None
  6109 ;; Auto vars:     Size  Location     Type
  6110 ;;  decim           1  110[COMRAM] unsigned char 
  6111 ;;  integ           1  109[COMRAM] unsigned char 
  6112 ;; Return value:  Size  Location     Type
  6113 ;;                  1    wreg      void 
  6114 ;; Registers used:
  6115 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6116 ;; Tracked objects:
  6117 ;;		On entry : 0/0
  6118 ;;		On exit  : 0/0
  6119 ;;		Unchanged: 0/0
  6120 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6121 ;;      Params:         0       0       0       0       0       0       0
  6122 ;;      Locals:         2       0       0       0       0       0       0
  6123 ;;      Temps:          0       0       0       0       0       0       0
  6124 ;;      Totals:         2       0       0       0       0       0       0
  6125 ;;Total ram usage:        2 bytes
  6126 ;; Hardware stack levels used:    1
  6127 ;; Hardware stack levels required when called:    8
  6128 ;; This function calls:
  6129 ;;		___lwdiv
  6130 ;;		___lwmod
  6131 ;;		_putsXLCD
  6132 ;;		i2_SetDDRamAddr
  6133 ;;		i2_sprintf
  6134 ;; This function is called by:
  6135 ;;		_inter
  6136 ;; This function uses a non-reentrant model
  6137 ;;
  6138                           
  6139                           	psect	text36
  6140  001FD0                     __ptext36:
  6141                           	opt callstack 0
  6142  001FD0                     _updateLCD:
  6143                           	opt callstack 0
  6144  001FD0  FFFF               	dw	65535	; assembler added errata NOP
  6145                           
  6146                           ;lcd.c: 15:     unsigned char integ = frequency / 10;
  6147                           
  6148                           ;incstack = 0
  6149  001FD2  C0F6  F001         	movff	_frequency,___lwdiv@dividend
  6150  001FD6  C0F7  F002         	movff	_frequency+1,___lwdiv@dividend+1
  6151  001FDA  0E00               	movlw	0
  6152  001FDC  6E04               	movwf	___lwdiv@divisor+1,c
  6153  001FDE  0E0A               	movlw	10
  6154  001FE0  6E03               	movwf	___lwdiv@divisor,c
  6155  001FE2  EC99  F011         	call	___lwdiv	;wreg free
  6156  001FE6  5001               	movf	?___lwdiv,w,c
  6157  001FE8  6E6E               	movwf	updateLCD@integ,c
  6158                           
  6159                           ;lcd.c: 16:     unsigned char decim = frequency % 10;
  6160  001FEA  C0F6  F001         	movff	_frequency,___lwmod@dividend
  6161  001FEE  C0F7  F002         	movff	_frequency+1,___lwmod@dividend+1
  6162  001FF2  0E00               	movlw	0
  6163  001FF4  6E04               	movwf	___lwmod@divisor+1,c
  6164  001FF6  0E0A               	movlw	10
  6165  001FF8  6E03               	movwf	___lwmod@divisor,c
  6166  001FFA  EC49  F012         	call	___lwmod	;wreg free
  6167  001FFE  5001               	movf	?___lwmod,w,c
  6168  002000  6E6F               	movwf	updateLCD@decim,c
  6169                           
  6170                           ;lcd.c: 17:     sprintf(lineTwo,"Fcia.  %3d.%d MHz",integ, decim);
  6171  002002  0E20               	movlw	low _lineTwo
  6172  002004  6E5C               	movwf	i2sprintf@s,c
  6173  002006  0E01               	movlw	high _lineTwo
  6174  002008  6E5D               	movwf	i2sprintf@s+1,c
  6175  00200A  0E05               	movlw	low STR_4
  6176  00200C  6E5E               	movwf	i2sprintf@fmt,c
  6177  00200E  0E06               	movlw	high STR_4
  6178  002010  6E5F               	movwf	i2sprintf@fmt+1,c
  6179  002012  C06E  F060         	movff	updateLCD@integ,?i2_sprintf+4
  6180  002016  6A61               	clrf	?i2_sprintf+5,c
  6181  002018  C06F  F062         	movff	updateLCD@decim,?i2_sprintf+6
  6182  00201C  6A63               	clrf	?i2_sprintf+7,c
  6183  00201E  EC20  F012         	call	i2_sprintf	;wreg free
  6184                           
  6185                           ;lcd.c: 19:     SetDDRamAddr(0x00);
  6186  002022  0E00               	movlw	0
  6187  002024  EC47  F013         	call	i2_SetDDRamAddr
  6188                           
  6189                           ;lcd.c: 20:     putsXLCD(lineOne);
  6190  002028  0E31               	movlw	low _lineOne
  6191  00202A  6E02               	movwf	putsXLCD@buffer,c
  6192  00202C  0E01               	movlw	high _lineOne
  6193  00202E  6E03               	movwf	putsXLCD@buffer+1,c
  6194  002030  EC40  F014         	call	_putsXLCD	;wreg free
  6195                           
  6196                           ;lcd.c: 21:     SetDDRamAddr(0x40);
  6197  002034  0E40               	movlw	64
  6198  002036  EC47  F013         	call	i2_SetDDRamAddr
  6199                           
  6200                           ;lcd.c: 22:     putsXLCD(lineTwo);
  6201  00203A  0E20               	movlw	low _lineTwo
  6202  00203C  6E02               	movwf	putsXLCD@buffer,c
  6203  00203E  0E01               	movlw	high _lineTwo
  6204  002040  6E03               	movwf	putsXLCD@buffer+1,c
  6205  002042  EC40  F014         	call	_putsXLCD	;wreg free
  6206  002046  0012               	return		;funcret
  6207  002048  FFFF               	dw	65535	; errata NOP
  6208  00204A                     __end_of_updateLCD:
  6209                           	opt callstack 0
  6210                           
  6211 ;; *************** function i2_sprintf *****************
  6212 ;; Defined at:
  6213 ;;		line 9 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/nf_sprintf.c"
  6214 ;; Parameters:    Size  Location     Type
  6215 ;;  s               2   91[COMRAM] PTR unsigned char 
  6216 ;;		 -> lineTwo(17), lineOne(17), 
  6217 ;;  fmt             2   93[COMRAM] PTR const unsigned char 
  6218 ;;		 -> STR_4(18), STR_3(17), STR_2(17), STR_1(17), 
  6219 ;; Auto vars:     Size  Location     Type
  6220 ;;  sprintf         6  103[COMRAM] struct _IO_FILE
  6221 ;;  sprintf         2  101[COMRAM] PTR void [1]
  6222 ;;		 -> ?i2_sprintf(2), ?_sprintf(2), 
  6223 ;;  sprintf         2    0        int 
  6224 ;; Return value:  Size  Location     Type
  6225 ;;                  2   91[COMRAM] int 
  6226 ;; Registers used:
  6227 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6228 ;; Tracked objects:
  6229 ;;		On entry : 0/0
  6230 ;;		On exit  : 0/0
  6231 ;;		Unchanged: 0/0
  6232 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6233 ;;      Params:         8       0       0       0       0       0       0
  6234 ;;      Locals:        10       0       0       0       0       0       0
  6235 ;;      Temps:          0       0       0       0       0       0       0
  6236 ;;      Totals:        18       0       0       0       0       0       0
  6237 ;;Total ram usage:       18 bytes
  6238 ;; Hardware stack levels used:    1
  6239 ;; Hardware stack levels required when called:    7
  6240 ;; This function calls:
  6241 ;;		i2_vfprintf
  6242 ;; This function is called by:
  6243 ;;		_updateLCD
  6244 ;; This function uses a non-reentrant model
  6245 ;;
  6246                           
  6247                           	psect	text37
  6248  002440                     __ptext37:
  6249                           	opt callstack 0
  6250  002440                     i2_sprintf:
  6251                           	opt callstack 0
  6252  002440  FFFF               	dw	65535	; assembler added errata NOP
  6253                           
  6254                           ;incstack = 0
  6255  002442  0E60               	movlw	low (?i2_sprintf+4)
  6256  002444  6E66               	movwf	i2sprintf@ap,c
  6257  002446  0E00               	movlw	high (?i2_sprintf+4)
  6258  002448  6E67               	movwf	i2sprintf@ap+1,c
  6259  00244A  C05C  F068         	movff	i2sprintf@s,i2sprintf@f
  6260  00244E  C05D  F069         	movff	i2sprintf@s+1,i2sprintf@f+1
  6261  002452  0E00               	movlw	0
  6262  002454  6E6B               	movwf	i2sprintf@f+3,c
  6263  002456  0E00               	movlw	0
  6264  002458  6E6A               	movwf	i2sprintf@f+2,c
  6265  00245A  0E00               	movlw	0
  6266  00245C  6E6D               	movwf	i2sprintf@f+5,c
  6267  00245E  0E00               	movlw	0
  6268  002460  6E6C               	movwf	i2sprintf@f+4,c
  6269  002462  0E68               	movlw	low i2sprintf@f
  6270  002464  6E54               	movwf	i2vfprintf@fp,c
  6271  002466  0E00               	movlw	high i2sprintf@f
  6272  002468  6E55               	movwf	i2vfprintf@fp+1,c
  6273  00246A  C05E  F056         	movff	i2sprintf@fmt,i2vfprintf@fmt
  6274  00246E  C05F  F057         	movff	i2sprintf@fmt+1,i2vfprintf@fmt+1
  6275  002472  0E66               	movlw	low i2sprintf@ap
  6276  002474  6E58               	movwf	i2vfprintf@ap,c
  6277  002476  0E00               	movlw	high i2sprintf@ap
  6278  002478  6E59               	movwf	i2vfprintf@ap+1,c
  6279  00247A  EC69  F011         	call	i2_vfprintf	;wreg free
  6280  00247E  506A               	movf	i2sprintf@f+2,w,c
  6281  002480  245C               	addwf	i2sprintf@s,w,c
  6282  002482  6ED9               	movwf	fsr2l,c
  6283  002484  506B               	movf	i2sprintf@f+3,w,c
  6284  002486  205D               	addwfc	i2sprintf@s+1,w,c
  6285  002488  6EDA               	movwf	fsr2h,c
  6286  00248A  0E00               	movlw	0
  6287  00248C  6EDF               	movwf	indf2,c
  6288  00248E  0012               	return		;funcret
  6289  002490  FFFF               	dw	65535	; errata NOP
  6290  002492                     __end_ofi2_sprintf:
  6291                           	opt callstack 0
  6292                           
  6293 ;; *************** function i2_vfprintf *****************
  6294 ;; Defined at:
  6295 ;;		line 1368 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  6296 ;; Parameters:    Size  Location     Type
  6297 ;;  fp              2   83[COMRAM] PTR struct _IO_FILE
  6298 ;;		 -> i2sprintf@f(6), sprintf@f(6), 
  6299 ;;  fmt             2   85[COMRAM] PTR const unsigned char 
  6300 ;;		 -> STR_4(18), STR_3(17), STR_2(17), STR_1(17), 
  6301 ;;  ap              2   87[COMRAM] PTR PTR void 
  6302 ;;		 -> i2sprintf@ap(2), sprintf@ap(2), 
  6303 ;; Auto vars:     Size  Location     Type
  6304 ;;  vfprintf        2   89[COMRAM] PTR unsigned char 
  6305 ;;		 -> STR_4(18), STR_3(17), STR_2(17), STR_1(17), 
  6306 ;; Return value:  Size  Location     Type
  6307 ;;                  2   83[COMRAM] int 
  6308 ;; Registers used:
  6309 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6310 ;; Tracked objects:
  6311 ;;		On entry : 0/0
  6312 ;;		On exit  : 0/0
  6313 ;;		Unchanged: 0/0
  6314 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6315 ;;      Params:         6       0       0       0       0       0       0
  6316 ;;      Locals:         2       0       0       0       0       0       0
  6317 ;;      Temps:          0       0       0       0       0       0       0
  6318 ;;      Totals:         8       0       0       0       0       0       0
  6319 ;;Total ram usage:        8 bytes
  6320 ;; Hardware stack levels used:    1
  6321 ;; Hardware stack levels required when called:    6
  6322 ;; This function calls:
  6323 ;;		i2_vfpfcnvrt
  6324 ;; This function is called by:
  6325 ;;		i2_sprintf
  6326 ;; This function uses a non-reentrant model
  6327 ;;
  6328                           
  6329                           	psect	text38
  6330  0022D2                     __ptext38:
  6331                           	opt callstack 0
  6332  0022D2                     i2_vfprintf:
  6333                           	opt callstack 0
  6334  0022D2  FFFF               	dw	65535	; assembler added errata NOP
  6335                           
  6336                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1368: int vfprintf(FILE *fp, 
      +                          const char *fmt, va_list ap);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1
      +                          369: {;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1371:     char *cfmt;;/
      +                          opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1373:     cfmt = (char *)fmt;
  6337                           
  6338                           ;incstack = 0
  6339  0022D4  C056  F05A         	movff	i2vfprintf@fmt,i2vfprintf@cfmt
  6340  0022D8  C057  F05B         	movff	i2vfprintf@fmt+1,i2vfprintf@cfmt+1
  6341                           
  6342                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1374:     nout = 0;
  6343  0022DC  0E00               	movlw	0
  6344  0022DE  0100               	movlb	0	; () banked
  6345  0022E0  6FEF               	movwf	(_nout+1)& (0+255),b
  6346  0022E2  0E00               	movlw	0
  6347  0022E4  6FEE               	movwf	_nout& (0+255),b
  6348                           
  6349                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
  6350  0022E6  D014               	goto	i2l3678
  6351  0022E8                     i2l3676:
  6352  0022E8  FFFF               	dw	65535	; assembler added errata NOP
  6353                           
  6354                           ; BSR set to: 0
  6355                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1376:         nout += vfpfcnv
      +                          rt(fp, &cfmt, ap);
  6356  0022EA  C054  F040         	movff	i2vfprintf@fp,i2vfpfcnvrt@fp
  6357  0022EE  C055  F041         	movff	i2vfprintf@fp+1,i2vfpfcnvrt@fp+1
  6358  0022F2  0E5A               	movlw	low i2vfprintf@cfmt
  6359  0022F4  6E42               	movwf	i2vfpfcnvrt@fmt,c
  6360  0022F6  0E00               	movlw	high i2vfprintf@cfmt
  6361  0022F8  6E43               	movwf	i2vfpfcnvrt@fmt+1,c
  6362  0022FA  C058  F044         	movff	i2vfprintf@ap,i2vfpfcnvrt@ap
  6363  0022FE  C059  F045         	movff	i2vfprintf@ap+1,i2vfpfcnvrt@ap+1
  6364  002302  EC69  F004         	call	i2_vfpfcnvrt	;wreg free
  6365  002306  5040               	movf	?i2_vfpfcnvrt,w,c
  6366  002308  0100               	movlb	0	; () banked
  6367  00230A  27EE               	addwf	_nout& (0+255),f,b
  6368  00230C  5041               	movf	?i2_vfpfcnvrt+1,w,c
  6369  00230E  23EF               	addwfc	(_nout+1)& (0+255),f,b
  6370  002310                     i2l3678:
  6371  002310  FFFF               	dw	65535	; assembler added errata NOP
  6372                           
  6373                           ; BSR set to: 0
  6374                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
  6375  002312  C05A  FFF6         	movff	i2vfprintf@cfmt,tblptrl
  6376  002316  C05B  FFF7         	movff	i2vfprintf@cfmt+1,tblptrh
  6377  00231A                     	if	0	;tblptru may be non-zero
  6378  00231A                     	endif
  6379  00231A                     	if	0	;tblptru may be non-zero
  6380  00231A                     	endif
  6381  00231A  0008               	tblrd		*
  6382  00231C  FFFF               	dw	65535	; errata NOP
  6383  00231E  50F5               	movf	tablat,w,c
  6384  002320  0900               	iorlw	0
  6385  002322  A4D8               	btfss	status,2,c
  6386  002324  D7E1               	goto	i2l3676
  6387                           
  6388                           ; BSR set to: 0
  6389                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1378:     return nout;
  6390  002326  C0EE  F054         	movff	_nout,?i2_vfprintf
  6391  00232A  C0EF  F055         	movff	_nout+1,?i2_vfprintf+1
  6392                           
  6393                           ; BSR set to: 0
  6394  00232E  0012               	return		;funcret
  6395  002330  FFFF               	dw	65535	; errata NOP
  6396  002332                     __end_ofi2_vfprintf:
  6397                           	opt callstack 0
  6398                           
  6399 ;; *************** function i2_vfpfcnvrt *****************
  6400 ;; Defined at:
  6401 ;;		line 670 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  6402 ;; Parameters:    Size  Location     Type
  6403 ;;  fp              2   63[COMRAM] PTR struct _IO_FILE
  6404 ;;		 -> i2sprintf@f(6), sprintf@f(6), 
  6405 ;;  fmt             2   65[COMRAM] PTR PTR unsigned char 
  6406 ;;		 -> i2vfprintf@cfmt(2), vfprintf@cfmt(2), 
  6407 ;;  ap              2   67[COMRAM] PTR PTR void 
  6408 ;;		 -> i2sprintf@ap(2), sprintf@ap(2), 
  6409 ;; Auto vars:     Size  Location     Type
  6410 ;;  vfpfcnvrt       8   73[COMRAM] long long 
  6411 ;;  vfpfcnvrt       8    0        unsigned long long 
  6412 ;;  vfpfcnvrt       4    0        unsigned long long 
  6413 ;;  vfpfcnvrt       3    0        PTR void 
  6414 ;;  vfpfcnvrt       3    0        unsigned char [3]
  6415 ;;  vfpfcnvrt       3    0        PTR unsigned char 
  6416 ;;  vfpfcnvrt       2    0        int 
  6417 ;;  vfpfcnvrt       2    0        int 
  6418 ;;  vfpfcnvrt       1    0        unsigned char 
  6419 ;; Return value:  Size  Location     Type
  6420 ;;                  2   63[COMRAM] int 
  6421 ;; Registers used:
  6422 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6423 ;; Tracked objects:
  6424 ;;		On entry : 0/0
  6425 ;;		On exit  : 0/0
  6426 ;;		Unchanged: 0/0
  6427 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6428 ;;      Params:         6       0       0       0       0       0       0
  6429 ;;      Locals:        10       0       0       0       0       0       0
  6430 ;;      Temps:          4       0       0       0       0       0       0
  6431 ;;      Totals:        20       0       0       0       0       0       0
  6432 ;;Total ram usage:       20 bytes
  6433 ;; Hardware stack levels used:    1
  6434 ;; Hardware stack levels required when called:    5
  6435 ;; This function calls:
  6436 ;;		i2_atoi
  6437 ;;		i2_dtoa
  6438 ;;		i2_fputc
  6439 ;;		i2_isdigit
  6440 ;; This function is called by:
  6441 ;;		i2_vfprintf
  6442 ;; This function uses a non-reentrant model
  6443 ;;
  6444                           
  6445                           	psect	text39
  6446  0008D2                     __ptext39:
  6447                           	opt callstack 0
  6448  0008D2                     i2_vfpfcnvrt:
  6449                           	opt callstack 0
  6450  0008D2  FFFF               	dw	65535	; assembler added errata NOP
  6451                           
  6452                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 670: static int vfpfcnvrt(FIL
      +                          E *fp, char *fmt[], va_list ap);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c
      +                          : 671: {;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 672:     char c, *cp,
      +                           ct[3];;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 673:     int done, i;;
      +                          /opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 674:     long long ll;;/opt/mi
      +                          crochip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 675:     unsigned long long llu;
  6453                           
  6454                           ; BSR set to: 0
  6455                           ;incstack = 0
  6456  0008D4  C042  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
  6457  0008D8  C043  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
  6458  0008DC  CFDE FFF6          	movff	postinc2,tblptrl
  6459  0008E0  CFDD FFF7          	movff	postdec2,tblptrh
  6460  0008E4                     	if	0	;tblptru may be non-zero
  6461  0008E4                     	endif
  6462  0008E4                     	if	0	;tblptru may be non-zero
  6463  0008E4                     	endif
  6464  0008E4  0008               	tblrd		*
  6465  0008E6  FFFF               	dw	65535	; errata NOP
  6466  0008E8  50F5               	movf	tablat,w,c
  6467  0008EA  0A25               	xorlw	37
  6468  0008EC  A4D8               	btfss	status,2,c
  6469  0008EE  D112               	goto	i2l3516
  6470                           
  6471                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 681:         ++*fmt;
  6472  0008F0  C042  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
  6473  0008F4  C043  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
  6474  0008F8  2ADE               	incf	postinc2,f,c
  6475  0008FA  0E00               	movlw	0
  6476  0008FC  22DD               	addwfc	postdec2,f,c
  6477                           
  6478                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 683:         flags = width = 
      +                          0;
  6479  0008FE  0E00               	movlw	0
  6480  000900  0100               	movlb	0	; () banked
  6481  000902  6FF1               	movwf	(_width+1)& (0+255),b
  6482  000904  0E00               	movlw	0
  6483  000906  6FF0               	movwf	_width& (0+255),b
  6484  000908  C0F0  F0F4         	movff	_width,_flags
  6485  00090C  C0F1  F0F5         	movff	_width+1,_flags+1
  6486                           
  6487                           ; BSR set to: 0
  6488                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 684:         prec = -1;
  6489  000910  69F2               	setf	_prec& (0+255),b
  6490  000912  69F3               	setf	(_prec+1)& (0+255),b
  6491                           
  6492                           ; BSR set to: 0
  6493                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 723:         if ((*fmt)[0] ==
      +                           '*') {
  6494  000914  C042  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
  6495  000918  C043  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
  6496  00091C  CFDE FFF6          	movff	postinc2,tblptrl
  6497  000920  CFDD FFF7          	movff	postdec2,tblptrh
  6498  000924                     	if	0	;tblptru may be non-zero
  6499  000924                     	endif
  6500  000924                     	if	0	;tblptru may be non-zero
  6501  000924                     	endif
  6502  000924  0008               	tblrd		*
  6503  000926  FFFF               	dw	65535	; errata NOP
  6504  000928  50F5               	movf	tablat,w,c
  6505  00092A  0A2A               	xorlw	42
  6506  00092C  A4D8               	btfss	status,2,c
  6507  00092E  D023               	goto	i2l3480
  6508                           
  6509                           ; BSR set to: 0
  6510                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 724:             ++*fmt;
  6511  000930  C042  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
  6512  000934  C043  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
  6513  000938  2ADE               	incf	postinc2,f,c
  6514  00093A  0E00               	movlw	0
  6515  00093C  22DD               	addwfc	postdec2,f,c
  6516                           
  6517                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 725:             width = (*(i
      +                          nt *)__va_arg(*(int **)ap, (int)0));
  6518  00093E  C044  FFD9         	movff	i2vfpfcnvrt@ap,fsr2l
  6519  000942  C045  FFDA         	movff	i2vfpfcnvrt@ap+1,fsr2h
  6520  000946  CFDF F046          	movff	indf2,??i2_vfpfcnvrt
  6521  00094A  0E02               	movlw	2
  6522  00094C  26DE               	addwf	postinc2,f,c
  6523  00094E  CFDF F047          	movff	indf2,??i2_vfpfcnvrt+1
  6524  000952  0E00               	movlw	0
  6525  000954  22DD               	addwfc	postdec2,f,c
  6526  000956  C046  FFD9         	movff	??i2_vfpfcnvrt,fsr2l
  6527  00095A  C047  FFDA         	movff	??i2_vfpfcnvrt+1,fsr2h
  6528  00095E  CFDE F0F0          	movff	postinc2,_width
  6529  000962  CFDD F0F1          	movff	postdec2,_width+1
  6530                           
  6531                           ; BSR set to: 0
  6532                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 726:             if (width < 
      +                          0) {
  6533  000966  AFF1               	btfss	(_width+1)& (0+255),7,b
  6534  000968  D045               	goto	i2u304_40
  6535                           
  6536                           ; BSR set to: 0
  6537                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 727:                 flags |=
      +                           (1 << 0);
  6538  00096A  81F4               	bsf	_flags& (0+255),0,b
  6539                           
  6540                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 728:                 width = 
      +                          -width;
  6541  00096C  6DF0               	negf	_width& (0+255),b
  6542  00096E  1FF1               	comf	(_width+1)& (0+255),f,b
  6543  000970  B0D8               	btfsc	status,0,c
  6544  000972  2BF1               	incf	(_width+1)& (0+255),f,b
  6545  000974  D03F               	goto	i2u304_40
  6546  000976                     i2l3480:
  6547  000976  FFFF               	dw	65535	; assembler added errata NOP
  6548                           
  6549                           ; BSR set to: 0
  6550                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 731:             width = atoi
      +                          (*fmt);
  6551  000978  C042  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
  6552  00097C  C043  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
  6553  000980  CFDE F008          	movff	postinc2,i2atoi@s
  6554  000984  CFDD F009          	movff	postdec2,i2atoi@s+1
  6555  000988  ECA2  F009         	call	i2_atoi	;wreg free
  6556  00098C  C008  F0F0         	movff	?i2_atoi,_width
  6557  000990  C009  F0F1         	movff	?i2_atoi+1,_width+1
  6558                           
  6559                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 732:             while ((0 ? 
      +                          isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  6560  000994  D008               	goto	i2l3484
  6561  000996                     i2l3482:
  6562  000996  FFFF               	dw	65535	; assembler added errata NOP
  6563                           
  6564                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 733:                 ++*fmt;
  6565  000998  C042  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
  6566  00099C  C043  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
  6567  0009A0  2ADE               	incf	postinc2,f,c
  6568  0009A2  0E00               	movlw	0
  6569  0009A4  22DD               	addwfc	postdec2,f,c
  6570  0009A6                     i2l3484:
  6571  0009A6  FFFF               	dw	65535	; assembler added errata NOP
  6572  0009A8  0ED0               	movlw	208
  6573  0009AA  6E46               	movwf	??i2_vfpfcnvrt& (0+255),c
  6574  0009AC  0EFF               	movlw	255
  6575  0009AE  6E47               	movwf	(??i2_vfpfcnvrt+1)& (0+255),c
  6576  0009B0  C042  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
  6577  0009B4  C043  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
  6578  0009B8  CFDE FFF6          	movff	postinc2,tblptrl
  6579  0009BC  CFDD FFF7          	movff	postdec2,tblptrh
  6580  0009C0                     	if	0	;tblptru may be non-zero
  6581  0009C0                     	endif
  6582  0009C0                     	if	0	;tblptru may be non-zero
  6583  0009C0                     	endif
  6584  0009C0  0008               	tblrd		*
  6585  0009C2  FFFF               	dw	65535	; errata NOP
  6586  0009C4  50F5               	movf	tablat,w,c
  6587  0009C6  6E48               	movwf	(??i2_vfpfcnvrt+2)& (0+255),c
  6588  0009C8  6A49               	clrf	(??i2_vfpfcnvrt+3)& (0+255),c
  6589  0009CA  5046               	movf	??i2_vfpfcnvrt,w,c
  6590  0009CC  2648               	addwf	??i2_vfpfcnvrt+2,f,c
  6591  0009CE  5047               	movf	??i2_vfpfcnvrt+1,w,c
  6592  0009D0  2249               	addwfc	??i2_vfpfcnvrt+3,f,c
  6593  0009D2  5049               	movf	??i2_vfpfcnvrt+3,w,c
  6594  0009D4  E106               	bnz	i2u302_40
  6595  0009D6  0E0A               	movlw	10
  6596  0009D8  5C48               	subwf	??i2_vfpfcnvrt+2,w,c
  6597  0009DA  B0D8               	btfsc	status,0,c
  6598  0009DC  D002               	goto	i2u302_40
  6599  0009DE  0E01               	movlw	1
  6600  0009E0  D002               	goto	i2u303_40
  6601  0009E2                     i2u302_40:
  6602  0009E2  FFFF               	dw	65535	; assembler added errata NOP
  6603  0009E4  0E00               	movlw	0
  6604  0009E6                     i2u303_40:
  6605  0009E6  FFFF               	dw	65535	; assembler added errata NOP
  6606  0009E8  6E52               	movwf	i2_vfpfcnvrt$1042,c
  6607  0009EA  6A53               	clrf	i2_vfpfcnvrt$1042+1,c
  6608  0009EC  5052               	movf	i2_vfpfcnvrt$1042,w,c
  6609  0009EE  1053               	iorwf	i2_vfpfcnvrt$1042+1,w,c
  6610  0009F0  A4D8               	btfss	status,2,c
  6611  0009F2  D7D1               	goto	i2l3482
  6612  0009F4                     i2u304_40:
  6613  0009F4  FFFF               	dw	65535	; assembler added errata NOP
  6614                           
  6615                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 825:         if ((*fmt[0] == 
      +                          'd') || (*fmt[0] == 'i')) {
  6616  0009F6  C042  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
  6617  0009FA  C043  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
  6618  0009FE  CFDE FFF6          	movff	postinc2,tblptrl
  6619  000A02  CFDD FFF7          	movff	postdec2,tblptrh
  6620  000A06                     	if	0	;tblptru may be non-zero
  6621  000A06                     	endif
  6622  000A06                     	if	0	;tblptru may be non-zero
  6623  000A06                     	endif
  6624  000A06  0008               	tblrd		*
  6625  000A08  FFFF               	dw	65535	; errata NOP
  6626  000A0A  50F5               	movf	tablat,w,c
  6627  000A0C  0A64               	xorlw	100
  6628  000A0E  B4D8               	btfsc	status,2,c
  6629  000A10  D00E               	goto	i2u306_40
  6630  000A12  C042  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
  6631  000A16  C043  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
  6632  000A1A  CFDE FFF6          	movff	postinc2,tblptrl
  6633  000A1E  CFDD FFF7          	movff	postdec2,tblptrh
  6634  000A22                     	if	0	;tblptru may be non-zero
  6635  000A22                     	endif
  6636  000A22                     	if	0	;tblptru may be non-zero
  6637  000A22                     	endif
  6638  000A22  0008               	tblrd		*
  6639  000A24  FFFF               	dw	65535	; errata NOP
  6640  000A26  50F5               	movf	tablat,w,c
  6641  000A28  0A69               	xorlw	105
  6642  000A2A  A4D8               	btfss	status,2,c
  6643  000A2C  D040               	goto	i2l3500
  6644  000A2E                     i2u306_40:
  6645  000A2E  FFFF               	dw	65535	; assembler added errata NOP
  6646                           
  6647                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 827:             ++*fmt;
  6648  000A30  C042  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
  6649  000A34  C043  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
  6650  000A38  2ADE               	incf	postinc2,f,c
  6651  000A3A  0E00               	movlw	0
  6652  000A3C  22DD               	addwfc	postdec2,f,c
  6653                           
  6654                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 828:             ll = (long l
      +                          ong)(*(int *)__va_arg(*(int **)ap, (int)0));
  6655  000A3E  C044  FFD9         	movff	i2vfpfcnvrt@ap,fsr2l
  6656  000A42  C045  FFDA         	movff	i2vfpfcnvrt@ap+1,fsr2h
  6657  000A46  CFDF F046          	movff	indf2,??i2_vfpfcnvrt
  6658  000A4A  0E02               	movlw	2
  6659  000A4C  26DE               	addwf	postinc2,f,c
  6660  000A4E  CFDF F047          	movff	indf2,??i2_vfpfcnvrt+1
  6661  000A52  0E00               	movlw	0
  6662  000A54  22DD               	addwfc	postdec2,f,c
  6663  000A56  C046  FFD9         	movff	??i2_vfpfcnvrt,fsr2l
  6664  000A5A  C047  FFDA         	movff	??i2_vfpfcnvrt+1,fsr2h
  6665  000A5E  CFDE F04A          	movff	postinc2,i2vfpfcnvrt@ll
  6666  000A62  CFDD F04B          	movff	postdec2,i2vfpfcnvrt@ll+1
  6667  000A66  0E00               	movlw	0
  6668  000A68  BE4B               	btfsc	i2vfpfcnvrt@ll+1,7,c
  6669  000A6A  0EFF               	movlw	-1
  6670  000A6C  6E4C               	movwf	i2vfpfcnvrt@ll+2,c
  6671  000A6E  6E4D               	movwf	i2vfpfcnvrt@ll+3,c
  6672  000A70  6E4E               	movwf	i2vfpfcnvrt@ll+4,c
  6673  000A72  6E4F               	movwf	i2vfpfcnvrt@ll+5,c
  6674  000A74  6E50               	movwf	i2vfpfcnvrt@ll+6,c
  6675  000A76  6E51               	movwf	i2vfpfcnvrt@ll+7,c
  6676                           
  6677                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 830:             return dtoa(
      +                          fp, ll);
  6678  000A78  C040  F01C         	movff	i2vfpfcnvrt@fp,i2dtoa@fp
  6679  000A7C  C041  F01D         	movff	i2vfpfcnvrt@fp+1,i2dtoa@fp+1
  6680  000A80  C04A  F01E         	movff	i2vfpfcnvrt@ll,i2dtoa@d
  6681  000A84  C04B  F01F         	movff	i2vfpfcnvrt@ll+1,i2dtoa@d+1
  6682  000A88  C04C  F020         	movff	i2vfpfcnvrt@ll+2,i2dtoa@d+2
  6683  000A8C  C04D  F021         	movff	i2vfpfcnvrt@ll+3,i2dtoa@d+3
  6684  000A90  C04E  F022         	movff	i2vfpfcnvrt@ll+4,i2dtoa@d+4
  6685  000A94  C04F  F023         	movff	i2vfpfcnvrt@ll+5,i2dtoa@d+5
  6686  000A98  C050  F024         	movff	i2vfpfcnvrt@ll+6,i2dtoa@d+6
  6687  000A9C  C051  F025         	movff	i2vfpfcnvrt@ll+7,i2dtoa@d+7
  6688  000AA0  ECDF  F006         	call	i2_dtoa	;wreg free
  6689  000AA4  C01C  F040         	movff	?i2_dtoa,?i2_vfpfcnvrt
  6690  000AA8  C01D  F041         	movff	?i2_dtoa+1,?i2_vfpfcnvrt+1
  6691  000AAC  D04F               	goto	i2l605
  6692  000AAE                     i2l3500:
  6693  000AAE  FFFF               	dw	65535	; assembler added errata NOP
  6694                           
  6695                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1350:         if ((*fmt)[0] =
      +                          = '%') {
  6696  000AB0  C042  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
  6697  000AB4  C043  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
  6698  000AB8  CFDE FFF6          	movff	postinc2,tblptrl
  6699  000ABC  CFDD FFF7          	movff	postdec2,tblptrh
  6700  000AC0                     	if	0	;tblptru may be non-zero
  6701  000AC0                     	endif
  6702  000AC0                     	if	0	;tblptru may be non-zero
  6703  000AC0                     	endif
  6704  000AC0  0008               	tblrd		*
  6705  000AC2  FFFF               	dw	65535	; errata NOP
  6706  000AC4  50F5               	movf	tablat,w,c
  6707  000AC6  0A25               	xorlw	37
  6708  000AC8  A4D8               	btfss	status,2,c
  6709  000ACA  D016               	goto	i2l3510
  6710                           
  6711                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1351:             ++*fmt;
  6712  000ACC  C042  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
  6713  000AD0  C043  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
  6714  000AD4  2ADE               	incf	postinc2,f,c
  6715  000AD6  0E00               	movlw	0
  6716  000AD8  22DD               	addwfc	postdec2,f,c
  6717                           
  6718                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1352:             fputc((int)
      +                          '%', fp);
  6719  000ADA  0E00               	movlw	0
  6720  000ADC  6E02               	movwf	i2fputc@c+1,c
  6721  000ADE  0E25               	movlw	37
  6722  000AE0  6E01               	movwf	i2fputc@c,c
  6723  000AE2  C040  F003         	movff	i2vfpfcnvrt@fp,i2fputc@fp
  6724  000AE6  C041  F004         	movff	i2vfpfcnvrt@fp+1,i2fputc@fp+1
  6725  000AEA  ECF5  F00E         	call	i2_fputc	;wreg free
  6726  000AEE                     i2l3506:
  6727  000AEE  FFFF               	dw	65535	; assembler added errata NOP
  6728                           
  6729                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1353:             return 1;
  6730  000AF0  0E00               	movlw	0
  6731  000AF2  6E41               	movwf	?i2_vfpfcnvrt+1,c
  6732  000AF4  0E01               	movlw	1
  6733  000AF6  D00B               	goto	L11
  6734  000AF8                     i2l3510:
  6735  000AF8  FFFF               	dw	65535	; assembler added errata NOP
  6736                           
  6737                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1357:         ++*fmt;
  6738  000AFA  C042  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
  6739  000AFE  C043  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
  6740  000B02  2ADE               	incf	postinc2,f,c
  6741  000B04  0E00               	movlw	0
  6742  000B06  22DD               	addwfc	postdec2,f,c
  6743                           
  6744                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1358:         return 0;
  6745  000B08  0E00               	movlw	0
  6746  000B0A  6E41               	movwf	?i2_vfpfcnvrt+1,c
  6747  000B0C  0E00               	movlw	0
  6748  000B0E                     L11:
  6749  000B0E  FFFF               	dw	65535	; assembler added errata NOP
  6750  000B10  6E40               	movwf	?i2_vfpfcnvrt,c
  6751  000B12  D01C               	goto	i2l605
  6752  000B14                     i2l3516:
  6753  000B14  FFFF               	dw	65535	; assembler added errata NOP
  6754                           
  6755                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1362:     fputc((int)(*fmt)[0
      +                          ], fp);
  6756  000B16  C042  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
  6757  000B1A  C043  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
  6758  000B1E  CFDE FFF6          	movff	postinc2,tblptrl
  6759  000B22  CFDD FFF7          	movff	postdec2,tblptrh
  6760  000B26                     	if	0	;tblptru may be non-zero
  6761  000B26                     	endif
  6762  000B26                     	if	0	;tblptru may be non-zero
  6763  000B26                     	endif
  6764  000B26  0008               	tblrd		*
  6765  000B28  FFFF               	dw	65535	; errata NOP
  6766  000B2A  50F5               	movf	tablat,w,c
  6767  000B2C  6E01               	movwf	i2fputc@c,c
  6768  000B2E  6A02               	clrf	i2fputc@c+1,c
  6769  000B30  C040  F003         	movff	i2vfpfcnvrt@fp,i2fputc@fp
  6770  000B34  C041  F004         	movff	i2vfpfcnvrt@fp+1,i2fputc@fp+1
  6771  000B38  ECF5  F00E         	call	i2_fputc	;wreg free
  6772                           
  6773                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1363:     ++*fmt;
  6774  000B3C  C042  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
  6775  000B40  C043  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
  6776  000B44  2ADE               	incf	postinc2,f,c
  6777  000B46  0E00               	movlw	0
  6778  000B48  22DD               	addwfc	postdec2,f,c
  6779  000B4A  D7D1               	goto	i2l3506
  6780  000B4C                     i2l605:
  6781  000B4C  FFFF               	dw	65535	; assembler added errata NOP
  6782  000B4E  0012               	return		;funcret
  6783  000B50  FFFF               	dw	65535	; errata NOP
  6784  000B52                     __end_ofi2_vfpfcnvrt:
  6785                           	opt callstack 0
  6786                           
  6787 ;; *************** function i2_dtoa *****************
  6788 ;; Defined at:
  6789 ;;		line 274 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  6790 ;; Parameters:    Size  Location     Type
  6791 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  6792 ;;		 -> i2sprintf@f(6), sprintf@f(6), 
  6793 ;;  d               8   29[COMRAM] long long 
  6794 ;; Auto vars:     Size  Location     Type
  6795 ;;  dtoa            8   53[COMRAM] long long 
  6796 ;;  dtoa            2   61[COMRAM] int 
  6797 ;;  dtoa            2   51[COMRAM] int 
  6798 ;;  dtoa            2   49[COMRAM] int 
  6799 ;;  dtoa            2   47[COMRAM] int 
  6800 ;; Return value:  Size  Location     Type
  6801 ;;                  2   27[COMRAM] int 
  6802 ;; Registers used:
  6803 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6804 ;; Tracked objects:
  6805 ;;		On entry : 0/0
  6806 ;;		On exit  : 0/0
  6807 ;;		Unchanged: 0/0
  6808 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6809 ;;      Params:        10       0       0       0       0       0       0
  6810 ;;      Locals:        18       0       0       0       0       0       0
  6811 ;;      Temps:          8       0       0       0       0       0       0
  6812 ;;      Totals:        36       0       0       0       0       0       0
  6813 ;;Total ram usage:       36 bytes
  6814 ;; Hardware stack levels used:    1
  6815 ;; Hardware stack levels required when called:    4
  6816 ;; This function calls:
  6817 ;;		i2___aodiv
  6818 ;;		i2___aomod
  6819 ;;		i2_abs
  6820 ;;		i2_pad
  6821 ;; This function is called by:
  6822 ;;		i2_vfpfcnvrt
  6823 ;; This function uses a non-reentrant model
  6824 ;;
  6825                           
  6826                           	psect	text40
  6827  000DBE                     __ptext40:
  6828                           	opt callstack 0
  6829  000DBE                     i2_dtoa:
  6830                           	opt callstack 0
  6831  000DBE  FFFF               	dw	65535	; assembler added errata NOP
  6832                           
  6833                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 274: static int dtoa(FILE *fp
      +                          , long long d);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 275: {;/opt/mic
      +                          rochip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 276:     int i, p, s, w;;/opt/microchi
      +                          p/xc8/v2.05/pic/sources/c99/common/doprnt.c: 277:     long long n;;/opt/microchip/xc8/v2
      +                          .05/pic/sources/c99/common/doprnt.c: 280:     n = d;
  6834                           
  6835                           ;incstack = 0
  6836  000DC0  C01E  F036         	movff	i2dtoa@d,i2dtoa@n
  6837  000DC4  C01F  F037         	movff	i2dtoa@d+1,i2dtoa@n+1
  6838  000DC8  C020  F038         	movff	i2dtoa@d+2,i2dtoa@n+2
  6839  000DCC  C021  F039         	movff	i2dtoa@d+3,i2dtoa@n+3
  6840  000DD0  C022  F03A         	movff	i2dtoa@d+4,i2dtoa@n+4
  6841  000DD4  C023  F03B         	movff	i2dtoa@d+5,i2dtoa@n+5
  6842  000DD8  C024  F03C         	movff	i2dtoa@d+6,i2dtoa@n+6
  6843  000DDC  C025  F03D         	movff	i2dtoa@d+7,i2dtoa@n+7
  6844                           
  6845                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 281:     s = n < 0 ? 1 : 0;
  6846  000DE0  AE3D               	btfss	i2dtoa@n+7,7,c
  6847  000DE2  D002               	goto	i2u268_40
  6848  000DE4  0E01               	movlw	1
  6849  000DE6  D002               	goto	i2u269_40
  6850  000DE8                     i2u268_40:
  6851  000DE8  FFFF               	dw	65535	; assembler added errata NOP
  6852  000DEA  0E00               	movlw	0
  6853  000DEC                     i2u269_40:
  6854  000DEC  FFFF               	dw	65535	; assembler added errata NOP
  6855  000DEE  6E34               	movwf	i2dtoa@s,c
  6856  000DF0  6A35               	clrf	i2dtoa@s+1,c
  6857                           
  6858                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 282:     if (s) {
  6859  000DF2  5034               	movf	i2dtoa@s,w,c
  6860  000DF4  1035               	iorwf	i2dtoa@s+1,w,c
  6861  000DF6  B4D8               	btfsc	status,2,c
  6862  000DF8  D010               	goto	i2l3250
  6863                           
  6864                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 283:         n = -n;
  6865  000DFA  1E3D               	comf	i2dtoa@n+7,f,c
  6866  000DFC  1E3C               	comf	i2dtoa@n+6,f,c
  6867  000DFE  1E3B               	comf	i2dtoa@n+5,f,c
  6868  000E00  1E3A               	comf	i2dtoa@n+4,f,c
  6869  000E02  1E39               	comf	i2dtoa@n+3,f,c
  6870  000E04  1E38               	comf	i2dtoa@n+2,f,c
  6871  000E06  1E37               	comf	i2dtoa@n+1,f,c
  6872  000E08  6C36               	negf	i2dtoa@n,c
  6873  000E0A  0E00               	movlw	0
  6874  000E0C  2237               	addwfc	i2dtoa@n+1,f,c
  6875  000E0E  2238               	addwfc	i2dtoa@n+2,f,c
  6876  000E10  2239               	addwfc	i2dtoa@n+3,f,c
  6877  000E12  223A               	addwfc	i2dtoa@n+4,f,c
  6878  000E14  223B               	addwfc	i2dtoa@n+5,f,c
  6879  000E16  223C               	addwfc	i2dtoa@n+6,f,c
  6880  000E18  223D               	addwfc	i2dtoa@n+7,f,c
  6881  000E1A                     i2l3250:
  6882  000E1A  FFFF               	dw	65535	; assembler added errata NOP
  6883                           
  6884                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 287:     if (!(prec < 0)) {
  6885  000E1C  0100               	movlb	0	; () banked
  6886  000E1E  AFF3               	btfss	(_prec+1)& (0+255),7,b
  6887                           
  6888                           ; BSR set to: 0
  6889                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 288:         flags &= ~(1 << 
      +                          1);
  6890  000E20  93F4               	bcf	_flags& (0+255),1,b
  6891                           
  6892                           ; BSR set to: 0
  6893                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 290:     p = (0 < prec) ? pre
      +                          c : 1;
  6894  000E22  BFF3               	btfsc	(_prec+1)& (0+255),7,b
  6895  000E24  D005               	goto	i2u272_40
  6896  000E26  51F3               	movf	(_prec+1)& (0+255),w,b
  6897  000E28  E109               	bnz	i2l568
  6898  000E2A  05F2               	decf	_prec& (0+255),w,b
  6899  000E2C  B0D8               	btfsc	status,0,c
  6900  000E2E  D006               	goto	i2l568
  6901  000E30                     i2u272_40:
  6902  000E30  FFFF               	dw	65535	; assembler added errata NOP
  6903                           
  6904                           ; BSR set to: 0
  6905  000E32  0E00               	movlw	0
  6906  000E34  6E31               	movwf	i2dtoa@p+1,c
  6907  000E36  0E01               	movlw	1
  6908  000E38  6E30               	movwf	i2dtoa@p,c
  6909  000E3A  D005               	goto	i2l570
  6910  000E3C                     i2l568:
  6911  000E3C  FFFF               	dw	65535	; assembler added errata NOP
  6912                           
  6913                           ; BSR set to: 0
  6914  000E3E  C0F2  F030         	movff	_prec,i2dtoa@p
  6915  000E42  C0F3  F031         	movff	_prec+1,i2dtoa@p+1
  6916  000E46                     i2l570:
  6917  000E46  FFFF               	dw	65535	; assembler added errata NOP
  6918                           
  6919                           ; BSR set to: 0
  6920                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 291:     w = width;
  6921  000E48  C0F0  F032         	movff	_width,i2dtoa@w
  6922  000E4C  C0F1  F033         	movff	_width+1,i2dtoa@w+1
  6923                           
  6924                           ; BSR set to: 0
  6925                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 292:     if (s || (flags & (1
      +                           << 2))) {
  6926  000E50  5034               	movf	i2dtoa@s,w,c
  6927  000E52  1035               	iorwf	i2dtoa@s+1,w,c
  6928  000E54  A4D8               	btfss	status,2,c
  6929  000E56  D002               	goto	i2u274_40
  6930                           
  6931                           ; BSR set to: 0
  6932  000E58  A5F4               	btfss	_flags& (0+255),2,b
  6933  000E5A  D004               	goto	i2l3264
  6934  000E5C                     i2u274_40:
  6935  000E5C  FFFF               	dw	65535	; assembler added errata NOP
  6936                           
  6937                           ; BSR set to: 0
  6938                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 293:         --w;
  6939  000E5E  0632               	decf	i2dtoa@w,f,c
  6940  000E60  A0D8               	btfss	status,0,c
  6941  000E62  0633               	decf	i2dtoa@w+1,f,c
  6942  000E64                     i2l3264:
  6943  000E64  FFFF               	dw	65535	; assembler added errata NOP
  6944                           
  6945                           ; BSR set to: 0
  6946                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 297:     i = sizeof(dbuf) - 1
      +                          ;
  6947  000E66  0E00               	movlw	0
  6948  000E68  6E3F               	movwf	i2dtoa@i+1,c
  6949  000E6A  0E1F               	movlw	31
  6950  000E6C  6E3E               	movwf	i2dtoa@i,c
  6951                           
  6952                           ; BSR set to: 0
  6953                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 298:     dbuf[i] = '\0';
  6954  000E6E  0E00               	movlw	0
  6955  000E70  0101               	movlb	1	; () banked
  6956  000E72  6F1F               	movwf	(_dbuf+31)& (0+255),b
  6957                           
  6958                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  6959  000E74  D07D               	goto	i2l3278
  6960  000E76                     i2l3268:
  6961  000E76  FFFF               	dw	65535	; assembler added errata NOP
  6962                           
  6963                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 300:         --i;
  6964  000E78  063E               	decf	i2dtoa@i,f,c
  6965  000E7A  A0D8               	btfss	status,0,c
  6966  000E7C  063F               	decf	i2dtoa@i+1,f,c
  6967                           
  6968                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 301:         dbuf[i] = '0' + 
      +                          abs(n % 10);
  6969  000E7E  0E00               	movlw	low _dbuf
  6970  000E80  243E               	addwf	i2dtoa@i,w,c
  6971  000E82  6ED9               	movwf	fsr2l,c
  6972  000E84  0E01               	movlw	high _dbuf
  6973  000E86  203F               	addwfc	i2dtoa@i+1,w,c
  6974  000E88  6EDA               	movwf	fsr2h,c
  6975  000E8A  C036  F001         	movff	i2dtoa@n,i2___aomod@dividend
  6976  000E8E  C037  F002         	movff	i2dtoa@n+1,i2___aomod@dividend+1
  6977  000E92  C038  F003         	movff	i2dtoa@n+2,i2___aomod@dividend+2
  6978  000E96  C039  F004         	movff	i2dtoa@n+3,i2___aomod@dividend+3
  6979  000E9A  C03A  F005         	movff	i2dtoa@n+4,i2___aomod@dividend+4
  6980  000E9E  C03B  F006         	movff	i2dtoa@n+5,i2___aomod@dividend+5
  6981  000EA2  C03C  F007         	movff	i2dtoa@n+6,i2___aomod@dividend+6
  6982  000EA6  C03D  F008         	movff	i2dtoa@n+7,i2___aomod@dividend+7
  6983  000EAA  0E0A               	movlw	10
  6984  000EAC  6E09               	movwf	i2___aomod@divisor,c
  6985  000EAE  0E00               	movlw	0
  6986  000EB0  6E0A               	movwf	i2___aomod@divisor+1,c
  6987  000EB2  0E00               	movlw	0
  6988  000EB4  6E0B               	movwf	i2___aomod@divisor+2,c
  6989  000EB6  0E00               	movlw	0
  6990  000EB8  6E0C               	movwf	i2___aomod@divisor+3,c
  6991  000EBA  0E00               	movlw	0
  6992  000EBC  6E0D               	movwf	i2___aomod@divisor+4,c
  6993  000EBE  0E00               	movlw	0
  6994  000EC0  6E0E               	movwf	i2___aomod@divisor+5,c
  6995  000EC2  0E00               	movlw	0
  6996  000EC4  6E0F               	movwf	i2___aomod@divisor+6,c
  6997  000EC6  0E00               	movlw	0
  6998  000EC8  6E10               	movwf	i2___aomod@divisor+7,c
  6999  000ECA  EC4F  F00C         	call	i2___aomod	;wreg free
  7000  000ECE  C001  F026         	movff	?i2___aomod,??i2_dtoa
  7001  000ED2  C002  F027         	movff	?i2___aomod+1,??i2_dtoa+1
  7002  000ED6  C003  F028         	movff	?i2___aomod+2,??i2_dtoa+2
  7003  000EDA  C004  F029         	movff	?i2___aomod+3,??i2_dtoa+3
  7004  000EDE  C005  F02A         	movff	?i2___aomod+4,??i2_dtoa+4
  7005  000EE2  C006  F02B         	movff	?i2___aomod+5,??i2_dtoa+5
  7006  000EE6  C007  F02C         	movff	?i2___aomod+6,??i2_dtoa+6
  7007  000EEA  C008  F02D         	movff	?i2___aomod+7,??i2_dtoa+7
  7008  000EEE  C026  F013         	movff	??i2_dtoa,i2abs@a
  7009  000EF2  C028  F014         	movff	??i2_dtoa+2,i2abs@a+1
  7010  000EF6  ECE9  F013         	call	i2_abs	;wreg free
  7011  000EFA  5013               	movf	?i2_abs,w,c
  7012  000EFC  0F30               	addlw	48
  7013  000EFE  6EDF               	movwf	indf2,c
  7014                           
  7015                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 302:         --p;
  7016  000F00  0630               	decf	i2dtoa@p,f,c
  7017  000F02  A0D8               	btfss	status,0,c
  7018  000F04  0631               	decf	i2dtoa@p+1,f,c
  7019                           
  7020                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 303:         --w;
  7021  000F06  0632               	decf	i2dtoa@w,f,c
  7022  000F08  A0D8               	btfss	status,0,c
  7023  000F0A  0633               	decf	i2dtoa@w+1,f,c
  7024                           
  7025                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 304:         n = n / 10;
  7026  000F0C  C036  F001         	movff	i2dtoa@n,i2___aodiv@dividend
  7027  000F10  C037  F002         	movff	i2dtoa@n+1,i2___aodiv@dividend+1
  7028  000F14  C038  F003         	movff	i2dtoa@n+2,i2___aodiv@dividend+2
  7029  000F18  C039  F004         	movff	i2dtoa@n+3,i2___aodiv@dividend+3
  7030  000F1C  C03A  F005         	movff	i2dtoa@n+4,i2___aodiv@dividend+4
  7031  000F20  C03B  F006         	movff	i2dtoa@n+5,i2___aodiv@dividend+5
  7032  000F24  C03C  F007         	movff	i2dtoa@n+6,i2___aodiv@dividend+6
  7033  000F28  C03D  F008         	movff	i2dtoa@n+7,i2___aodiv@dividend+7
  7034  000F2C  0E0A               	movlw	10
  7035  000F2E  6E09               	movwf	i2___aodiv@divisor,c
  7036  000F30  0E00               	movlw	0
  7037  000F32  6E0A               	movwf	i2___aodiv@divisor+1,c
  7038  000F34  0E00               	movlw	0
  7039  000F36  6E0B               	movwf	i2___aodiv@divisor+2,c
  7040  000F38  0E00               	movlw	0
  7041  000F3A  6E0C               	movwf	i2___aodiv@divisor+3,c
  7042  000F3C  0E00               	movlw	0
  7043  000F3E  6E0D               	movwf	i2___aodiv@divisor+4,c
  7044  000F40  0E00               	movlw	0
  7045  000F42  6E0E               	movwf	i2___aodiv@divisor+5,c
  7046  000F44  0E00               	movlw	0
  7047  000F46  6E0F               	movwf	i2___aodiv@divisor+6,c
  7048  000F48  0E00               	movlw	0
  7049  000F4A  6E10               	movwf	i2___aodiv@divisor+7,c
  7050  000F4C  EC04  F00B         	call	i2___aodiv	;wreg free
  7051  000F50  C001  F036         	movff	?i2___aodiv,i2dtoa@n
  7052  000F54  C002  F037         	movff	?i2___aodiv+1,i2dtoa@n+1
  7053  000F58  C003  F038         	movff	?i2___aodiv+2,i2dtoa@n+2
  7054  000F5C  C004  F039         	movff	?i2___aodiv+3,i2dtoa@n+3
  7055  000F60  C005  F03A         	movff	?i2___aodiv+4,i2dtoa@n+4
  7056  000F64  C006  F03B         	movff	?i2___aodiv+5,i2dtoa@n+5
  7057  000F68  C007  F03C         	movff	?i2___aodiv+6,i2dtoa@n+6
  7058  000F6C  C008  F03D         	movff	?i2___aodiv+7,i2dtoa@n+7
  7059  000F70                     i2l3278:
  7060  000F70  FFFF               	dw	65535	; assembler added errata NOP
  7061                           
  7062                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  7063  000F72  BE3F               	btfsc	i2dtoa@i+1,7,c
  7064  000F74  D021               	goto	i2u279_40
  7065  000F76  503F               	movf	i2dtoa@i+1,w,c
  7066  000F78  E103               	bnz	i2u275_40
  7067  000F7A  043E               	decf	i2dtoa@i,w,c
  7068  000F7C  A0D8               	btfss	status,0,c
  7069  000F7E  D01C               	goto	i2u279_40
  7070  000F80                     i2u275_40:
  7071  000F80  5036               	movf	i2dtoa@n,w,c
  7072  000F82  1037               	iorwf	i2dtoa@n+1,w,c
  7073  000F84  1038               	iorwf	i2dtoa@n+2,w,c
  7074  000F86  1039               	iorwf	i2dtoa@n+3,w,c
  7075  000F88  103A               	iorwf	i2dtoa@n+4,w,c
  7076  000F8A  103B               	iorwf	i2dtoa@n+5,w,c
  7077  000F8C  103C               	iorwf	i2dtoa@n+6,w,c
  7078  000F8E  103D               	iorwf	i2dtoa@n+7,w,c
  7079  000F90  A4D8               	btfss	status,2,c
  7080  000F92  D771               	goto	i2l3268
  7081  000F94  BE31               	btfsc	i2dtoa@p+1,7,c
  7082  000F96  D005               	goto	i2u277_40
  7083  000F98  5031               	movf	i2dtoa@p+1,w,c
  7084  000F9A  E102               	bnz	i2u277_41
  7085  000F9C  0430               	decf	i2dtoa@p,w,c
  7086  000F9E  B0D8               	btfsc	status,0,c
  7087  000FA0                     i2u277_41:
  7088  000FA0  D76A               	goto	i2l3268
  7089  000FA2                     i2u277_40:
  7090  000FA2  FFFF               	dw	65535	; assembler added errata NOP
  7091  000FA4  BE33               	btfsc	i2dtoa@w+1,7,c
  7092  000FA6  D008               	goto	i2u279_40
  7093  000FA8  5033               	movf	i2dtoa@w+1,w,c
  7094  000FAA  E103               	bnz	i2u278_40
  7095  000FAC  0432               	decf	i2dtoa@w,w,c
  7096  000FAE  A0D8               	btfss	status,0,c
  7097  000FB0  D003               	goto	i2u279_40
  7098  000FB2                     i2u278_40:
  7099  000FB2  0100               	movlb	0	; () banked
  7100  000FB4  B3F4               	btfsc	_flags& (0+255),1,b
  7101  000FB6  D75F               	goto	i2l3268
  7102  000FB8                     i2u279_40:
  7103  000FB8  FFFF               	dw	65535	; assembler added errata NOP
  7104                           
  7105                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 308:     if (s || (flags & (1
      +                           << 2))) {
  7106  000FBA  5034               	movf	i2dtoa@s,w,c
  7107  000FBC  1035               	iorwf	i2dtoa@s+1,w,c
  7108  000FBE  A4D8               	btfss	status,2,c
  7109  000FC0  D003               	goto	i2u281_40
  7110  000FC2  0100               	movlb	0	; () banked
  7111  000FC4  A5F4               	btfss	_flags& (0+255),2,b
  7112  000FC6  D01A               	goto	i2l3302
  7113  000FC8                     i2u281_40:
  7114  000FC8  FFFF               	dw	65535	; assembler added errata NOP
  7115                           
  7116                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 309:         --i;
  7117  000FCA  063E               	decf	i2dtoa@i,f,c
  7118  000FCC  A0D8               	btfss	status,0,c
  7119  000FCE  063F               	decf	i2dtoa@i+1,f,c
  7120                           
  7121                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 310:         dbuf[i] = s ? '-
      +                          ' : '+';
  7122  000FD0  5034               	movf	i2dtoa@s,w,c
  7123  000FD2  1035               	iorwf	i2dtoa@s+1,w,c
  7124  000FD4  A4D8               	btfss	status,2,c
  7125  000FD6  D004               	goto	i2l3298
  7126  000FD8  0E00               	movlw	0
  7127  000FDA  6E2F               	movwf	i2_dtoa$1027+1,c
  7128  000FDC  0E2B               	movlw	43
  7129  000FDE  D004               	goto	L12
  7130  000FE0                     i2l3298:
  7131  000FE0  FFFF               	dw	65535	; assembler added errata NOP
  7132  000FE2  0E00               	movlw	0
  7133  000FE4  6E2F               	movwf	i2_dtoa$1027+1,c
  7134  000FE6  0E2D               	movlw	45
  7135  000FE8                     L12:
  7136  000FE8  FFFF               	dw	65535	; assembler added errata NOP
  7137  000FEA  6E2E               	movwf	i2_dtoa$1027,c
  7138  000FEC  0E00               	movlw	low _dbuf
  7139  000FEE  243E               	addwf	i2dtoa@i,w,c
  7140  000FF0  6ED9               	movwf	fsr2l,c
  7141  000FF2  0E01               	movlw	high _dbuf
  7142  000FF4  203F               	addwfc	i2dtoa@i+1,w,c
  7143  000FF6  6EDA               	movwf	fsr2h,c
  7144  000FF8  C02E  FFDF         	movff	i2_dtoa$1027,indf2
  7145  000FFC                     i2l3302:
  7146  000FFC  FFFF               	dw	65535	; assembler added errata NOP
  7147                           
  7148                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 314:     return pad(fp, &dbuf
      +                          [i], w);
  7149  000FFE  C01C  F011         	movff	i2dtoa@fp,i2pad@fp
  7150  001002  C01D  F012         	movff	i2dtoa@fp+1,i2pad@fp+1
  7151  001006  0E00               	movlw	low _dbuf
  7152  001008  243E               	addwf	i2dtoa@i,w,c
  7153  00100A  6E13               	movwf	i2pad@buf,c
  7154  00100C  0E01               	movlw	high _dbuf
  7155  00100E  203F               	addwfc	i2dtoa@i+1,w,c
  7156  001010  6E14               	movwf	i2pad@buf+1,c
  7157  001012  C032  F015         	movff	i2dtoa@w,i2pad@p
  7158  001016  C033  F016         	movff	i2dtoa@w+1,i2pad@p+1
  7159  00101A  EC4B  F00F         	call	i2_pad	;wreg free
  7160  00101E  C011  F01C         	movff	?i2_pad,?i2_dtoa
  7161  001022  C012  F01D         	movff	?i2_pad+1,?i2_dtoa+1
  7162  001026  0012               	return		;funcret
  7163  001028  FFFF               	dw	65535	; errata NOP
  7164  00102A                     __end_ofi2_dtoa:
  7165                           	opt callstack 0
  7166                           
  7167 ;; *************** function i2_pad *****************
  7168 ;; Defined at:
  7169 ;;		line 72 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  7170 ;; Parameters:    Size  Location     Type
  7171 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  7172 ;;		 -> i2sprintf@f(6), sprintf@f(6), 
  7173 ;;  buf             2   18[COMRAM] PTR unsigned char 
  7174 ;;		 -> dbuf(32), 
  7175 ;;  p               2   20[COMRAM] int 
  7176 ;; Auto vars:     Size  Location     Type
  7177 ;;  pad             2   25[COMRAM] int 
  7178 ;;  pad             2   23[COMRAM] int 
  7179 ;; Return value:  Size  Location     Type
  7180 ;;                  2   16[COMRAM] int 
  7181 ;; Registers used:
  7182 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7183 ;; Tracked objects:
  7184 ;;		On entry : 0/0
  7185 ;;		On exit  : 0/0
  7186 ;;		Unchanged: 0/0
  7187 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7188 ;;      Params:         6       0       0       0       0       0       0
  7189 ;;      Locals:         4       0       0       0       0       0       0
  7190 ;;      Temps:          1       0       0       0       0       0       0
  7191 ;;      Totals:        11       0       0       0       0       0       0
  7192 ;;Total ram usage:       11 bytes
  7193 ;; Hardware stack levels used:    1
  7194 ;; Hardware stack levels required when called:    3
  7195 ;; This function calls:
  7196 ;;		i2_fputc
  7197 ;;		i2_fputs
  7198 ;;		i2_strlen
  7199 ;; This function is called by:
  7200 ;;		i2_dtoa
  7201 ;; This function uses a non-reentrant model
  7202 ;;
  7203                           
  7204                           	psect	text41
  7205  001E96                     __ptext41:
  7206                           	opt callstack 0
  7207  001E96                     i2_pad:
  7208                           	opt callstack 0
  7209  001E96  FFFF               	dw	65535	; assembler added errata NOP
  7210                           
  7211                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 72: static int pad(FILE *fp, 
      +                          char *buf, int p);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 73: {;/opt/m
      +                          icrochip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 74:     int i, w;;/opt/microchip/xc8
      +                          /v2.05/pic/sources/c99/common/doprnt.c: 77:     if (flags & (1 << 0)) {
  7212                           
  7213                           ;incstack = 0
  7214  001E98  0100               	movlb	0	; () banked
  7215  001E9A  A1F4               	btfss	_flags& (0+255),0,b
  7216  001E9C  D00A               	goto	i2l3014
  7217                           
  7218                           ; BSR set to: 0
  7219                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 78:         fputs((const char
      +                           *)buf, fp);
  7220  001E9E  C013  F00A         	movff	i2pad@buf,i2fputs@s
  7221  001EA2  C014  F00B         	movff	i2pad@buf+1,i2fputs@s+1
  7222  001EA6  C011  F00C         	movff	i2pad@fp,i2fputs@fp
  7223  001EAA  C012  F00D         	movff	i2pad@fp+1,i2fputs@fp+1
  7224  001EAE  EC69  F013         	call	i2_fputs	;wreg free
  7225  001EB2                     i2l3014:
  7226  001EB2  FFFF               	dw	65535	; assembler added errata NOP
  7227                           
  7228                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 82:     w = (p < 0) ? 0 : p;
  7229  001EB4  BE16               	btfsc	i2pad@p+1,7,c
  7230  001EB6  D005               	goto	i2l3018
  7231  001EB8  C015  F01A         	movff	i2pad@p,i2pad@w
  7232  001EBC  C016  F01B         	movff	i2pad@p+1,i2pad@w+1
  7233  001EC0  D005               	goto	i2l557
  7234  001EC2                     i2l3018:
  7235  001EC2  FFFF               	dw	65535	; assembler added errata NOP
  7236  001EC4  0E00               	movlw	0
  7237  001EC6  6E1B               	movwf	i2pad@w+1,c
  7238  001EC8  0E00               	movlw	0
  7239  001ECA  6E1A               	movwf	i2pad@w,c
  7240  001ECC                     i2l557:
  7241  001ECC  FFFF               	dw	65535	; assembler added errata NOP
  7242                           
  7243                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 83:     i = 0;
  7244  001ECE  0E00               	movlw	0
  7245  001ED0  6E19               	movwf	i2pad@i+1,c
  7246  001ED2  0E00               	movlw	0
  7247  001ED4  6E18               	movwf	i2pad@i,c
  7248                           
  7249                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
  7250  001ED6  D00D               	goto	i2l3024
  7251  001ED8                     i2l3020:
  7252  001ED8  FFFF               	dw	65535	; assembler added errata NOP
  7253                           
  7254                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 85:         fputc(' ', fp);
  7255  001EDA  0E00               	movlw	0
  7256  001EDC  6E02               	movwf	i2fputc@c+1,c
  7257  001EDE  0E20               	movlw	32
  7258  001EE0  6E01               	movwf	i2fputc@c,c
  7259  001EE2  C011  F003         	movff	i2pad@fp,i2fputc@fp
  7260  001EE6  C012  F004         	movff	i2pad@fp+1,i2fputc@fp+1
  7261  001EEA  ECF5  F00E         	call	i2_fputc	;wreg free
  7262                           
  7263                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 86:         ++i;
  7264  001EEE  4A18               	infsnz	i2pad@i,f,c
  7265  001EF0  2A19               	incf	i2pad@i+1,f,c
  7266  001EF2                     i2l3024:
  7267  001EF2  FFFF               	dw	65535	; assembler added errata NOP
  7268                           
  7269                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
  7270  001EF4  501A               	movf	i2pad@w,w,c
  7271  001EF6  5C18               	subwf	i2pad@i,w,c
  7272  001EF8  5019               	movf	i2pad@i+1,w,c
  7273  001EFA  0A80               	xorlw	128
  7274  001EFC  6E17               	movwf	??i2_pad& (0+255),c
  7275  001EFE  501B               	movf	i2pad@w+1,w,c
  7276  001F00  0A80               	xorlw	128
  7277  001F02  5817               	subwfb	??i2_pad& (0+255),w,c
  7278  001F04  A0D8               	btfss	status,0,c
  7279  001F06  D7E8               	goto	i2l3020
  7280                           
  7281                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 90:     if (!(flags & (1 << 0
      +                          ))) {
  7282  001F08  0100               	movlb	0	; () banked
  7283  001F0A  B1F4               	btfsc	_flags& (0+255),0,b
  7284  001F0C  D00A               	goto	i2l3028
  7285                           
  7286                           ; BSR set to: 0
  7287                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 91:         fputs((const char
      +                           *)buf, fp);
  7288  001F0E  C013  F00A         	movff	i2pad@buf,i2fputs@s
  7289  001F12  C014  F00B         	movff	i2pad@buf+1,i2fputs@s+1
  7290  001F16  C011  F00C         	movff	i2pad@fp,i2fputs@fp
  7291  001F1A  C012  F00D         	movff	i2pad@fp+1,i2fputs@fp+1
  7292  001F1E  EC69  F013         	call	i2_fputs	;wreg free
  7293  001F22                     i2l3028:
  7294  001F22  FFFF               	dw	65535	; assembler added errata NOP
  7295                           
  7296                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 94:     return strlen(buf) + 
      +                          w;
  7297  001F24  C013  F001         	movff	i2pad@buf,i2strlen@s
  7298  001F28  C014  F002         	movff	i2pad@buf+1,i2strlen@s+1
  7299  001F2C  EC77  F014         	call	i2_strlen	;wreg free
  7300  001F30  501A               	movf	i2pad@w,w,c
  7301  001F32  2401               	addwf	?i2_strlen,w,c
  7302  001F34  6E11               	movwf	?i2_pad,c
  7303  001F36  501B               	movf	i2pad@w+1,w,c
  7304  001F38  2002               	addwfc	?i2_strlen+1,w,c
  7305  001F3A  6E12               	movwf	?i2_pad+1,c
  7306  001F3C  0012               	return		;funcret
  7307  001F3E  FFFF               	dw	65535	; errata NOP
  7308  001F40                     __end_ofi2_pad:
  7309                           	opt callstack 0
  7310                           
  7311 ;; *************** function i2_strlen *****************
  7312 ;; Defined at:
  7313 ;;		line 12 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/strlen.c"
  7314 ;; Parameters:    Size  Location     Type
  7315 ;;  s               2    0[COMRAM] PTR const unsigned char 
  7316 ;;		 -> dbuf(32), 
  7317 ;; Auto vars:     Size  Location     Type
  7318 ;;  strlen          2    2[COMRAM] PTR const unsigned char 
  7319 ;;		 -> dbuf(32), 
  7320 ;; Return value:  Size  Location     Type
  7321 ;;                  2    0[COMRAM] unsigned int 
  7322 ;; Registers used:
  7323 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7324 ;; Tracked objects:
  7325 ;;		On entry : 0/0
  7326 ;;		On exit  : 0/0
  7327 ;;		Unchanged: 0/0
  7328 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7329 ;;      Params:         2       0       0       0       0       0       0
  7330 ;;      Locals:         2       0       0       0       0       0       0
  7331 ;;      Temps:          0       0       0       0       0       0       0
  7332 ;;      Totals:         4       0       0       0       0       0       0
  7333 ;;Total ram usage:        4 bytes
  7334 ;; Hardware stack levels used:    1
  7335 ;; This function calls:
  7336 ;;		Nothing
  7337 ;; This function is called by:
  7338 ;;		i2_pad
  7339 ;; This function uses a non-reentrant model
  7340 ;;
  7341                           
  7342                           	psect	text42
  7343  0028EE                     __ptext42:
  7344                           	opt callstack 0
  7345  0028EE                     i2_strlen:
  7346                           	opt callstack 0
  7347  0028EE  FFFF               	dw	65535	; assembler added errata NOP
  7348                           
  7349                           ;incstack = 0
  7350  0028F0  C001  F003         	movff	i2strlen@s,i2strlen@a
  7351  0028F4  C002  F004         	movff	i2strlen@s+1,i2strlen@a+1
  7352  0028F8  D003               	goto	i2l2876
  7353  0028FA                     i2l2874:
  7354  0028FA  FFFF               	dw	65535	; assembler added errata NOP
  7355  0028FC  4A01               	infsnz	i2strlen@s,f,c
  7356  0028FE  2A02               	incf	i2strlen@s+1,f,c
  7357  002900                     i2l2876:
  7358  002900  FFFF               	dw	65535	; assembler added errata NOP
  7359  002902  C001  FFD9         	movff	i2strlen@s,fsr2l
  7360  002906  C002  FFDA         	movff	i2strlen@s+1,fsr2h
  7361  00290A  50DF               	movf	indf2,w,c
  7362  00290C  A4D8               	btfss	status,2,c
  7363  00290E  D7F5               	goto	i2l2874
  7364  002910  5003               	movf	i2strlen@a,w,c
  7365  002912  5C01               	subwf	i2strlen@s,w,c
  7366  002914  6E01               	movwf	?i2_strlen,c
  7367  002916  5004               	movf	i2strlen@a+1,w,c
  7368  002918  5802               	subwfb	i2strlen@s+1,w,c
  7369  00291A  6E02               	movwf	?i2_strlen+1,c
  7370  00291C  0012               	return		;funcret
  7371  00291E  FFFF               	dw	65535	; errata NOP
  7372  002920                     __end_ofi2_strlen:
  7373                           	opt callstack 0
  7374                           
  7375 ;; *************** function i2_fputs *****************
  7376 ;; Defined at:
  7377 ;;		line 8 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/nf_fputs.c"
  7378 ;; Parameters:    Size  Location     Type
  7379 ;;  s               2    9[COMRAM] PTR const unsigned char 
  7380 ;;		 -> dbuf(32), 
  7381 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  7382 ;;		 -> i2sprintf@f(6), sprintf@f(6), 
  7383 ;; Auto vars:     Size  Location     Type
  7384 ;;  fputs           2   14[COMRAM] int 
  7385 ;;  fputs           1   13[COMRAM] unsigned char 
  7386 ;; Return value:  Size  Location     Type
  7387 ;;                  2    9[COMRAM] int 
  7388 ;; Registers used:
  7389 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7390 ;; Tracked objects:
  7391 ;;		On entry : 0/0
  7392 ;;		On exit  : 0/0
  7393 ;;		Unchanged: 0/0
  7394 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7395 ;;      Params:         4       0       0       0       0       0       0
  7396 ;;      Locals:         3       0       0       0       0       0       0
  7397 ;;      Temps:          0       0       0       0       0       0       0
  7398 ;;      Totals:         7       0       0       0       0       0       0
  7399 ;;Total ram usage:        7 bytes
  7400 ;; Hardware stack levels used:    1
  7401 ;; Hardware stack levels required when called:    2
  7402 ;; This function calls:
  7403 ;;		i2_fputc
  7404 ;; This function is called by:
  7405 ;;		i2_pad
  7406 ;; This function uses a non-reentrant model
  7407 ;;
  7408                           
  7409                           	psect	text43
  7410  0026D2                     __ptext43:
  7411                           	opt callstack 0
  7412  0026D2                     i2_fputs:
  7413                           	opt callstack 0
  7414  0026D2  FFFF               	dw	65535	; assembler added errata NOP
  7415                           
  7416                           ;incstack = 0
  7417  0026D4  0E00               	movlw	0
  7418  0026D6  6E10               	movwf	i2fputs@i+1,c
  7419  0026D8  0E00               	movlw	0
  7420  0026DA  6E0F               	movwf	i2fputs@i,c
  7421  0026DC  D00C               	goto	i2l2870
  7422  0026DE                     i2l2866:
  7423  0026DE  FFFF               	dw	65535	; assembler added errata NOP
  7424  0026E0  C00E  F001         	movff	i2fputs@c,i2fputc@c
  7425  0026E4  6A02               	clrf	i2fputc@c+1,c
  7426  0026E6  C00C  F003         	movff	i2fputs@fp,i2fputc@fp
  7427  0026EA  C00D  F004         	movff	i2fputs@fp+1,i2fputc@fp+1
  7428  0026EE  ECF5  F00E         	call	i2_fputc	;wreg free
  7429  0026F2  4A0F               	infsnz	i2fputs@i,f,c
  7430  0026F4  2A10               	incf	i2fputs@i+1,f,c
  7431  0026F6                     i2l2870:
  7432  0026F6  FFFF               	dw	65535	; assembler added errata NOP
  7433  0026F8  500F               	movf	i2fputs@i,w,c
  7434  0026FA  240A               	addwf	i2fputs@s,w,c
  7435  0026FC  6ED9               	movwf	fsr2l,c
  7436  0026FE  5010               	movf	i2fputs@i+1,w,c
  7437  002700  200B               	addwfc	i2fputs@s+1,w,c
  7438  002702  6EDA               	movwf	fsr2h,c
  7439  002704  50DF               	movf	indf2,w,c
  7440  002706  6E0E               	movwf	i2fputs@c,c
  7441  002708  500E               	movf	i2fputs@c,w,c
  7442  00270A  B4D8               	btfsc	status,2,c
  7443  00270C  0012               	return		;funcret
  7444  00270E  FFFF               	dw	65535	; assembler added errata NOP
  7445  002710  D7E6               	goto	i2l2866
  7446  002712  FFFF               	dw	65535	; errata NOP
  7447  002714                     __end_ofi2_fputs:
  7448                           	opt callstack 0
  7449                           
  7450 ;; *************** function i2_fputc *****************
  7451 ;; Defined at:
  7452 ;;		line 8 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/nf_fputc.c"
  7453 ;; Parameters:    Size  Location     Type
  7454 ;;  c               2    0[COMRAM] int 
  7455 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  7456 ;;		 -> i2sprintf@f(6), sprintf@f(6), 
  7457 ;; Auto vars:     Size  Location     Type
  7458 ;;		None
  7459 ;; Return value:  Size  Location     Type
  7460 ;;                  2    0[COMRAM] int 
  7461 ;; Registers used:
  7462 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7463 ;; Tracked objects:
  7464 ;;		On entry : 0/0
  7465 ;;		On exit  : 0/0
  7466 ;;		Unchanged: 0/0
  7467 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7468 ;;      Params:         4       0       0       0       0       0       0
  7469 ;;      Locals:         0       0       0       0       0       0       0
  7470 ;;      Temps:          5       0       0       0       0       0       0
  7471 ;;      Totals:         9       0       0       0       0       0       0
  7472 ;;Total ram usage:        9 bytes
  7473 ;; Hardware stack levels used:    1
  7474 ;; Hardware stack levels required when called:    1
  7475 ;; This function calls:
  7476 ;;		i2_putch
  7477 ;; This function is called by:
  7478 ;;		i2_pad
  7479 ;;		i2_vfpfcnvrt
  7480 ;;		i2_fputs
  7481 ;; This function uses a non-reentrant model
  7482 ;;
  7483                           
  7484                           	psect	text44
  7485  001DEA                     __ptext44:
  7486                           	opt callstack 0
  7487  001DEA                     i2_fputc:
  7488                           	opt callstack 0
  7489  001DEA  FFFF               	dw	65535	; assembler added errata NOP
  7490                           
  7491                           ;incstack = 0
  7492  001DEC  5003               	movf	i2fputc@fp,w,c
  7493  001DEE  1004               	iorwf	i2fputc@fp+1,w,c
  7494  001DF0  B4D8               	btfsc	status,2,c
  7495  001DF2  D004               	goto	i2u195_40
  7496  001DF4  5003               	movf	i2fputc@fp,w,c
  7497  001DF6  1004               	iorwf	i2fputc@fp+1,w,c
  7498  001DF8  A4D8               	btfss	status,2,c
  7499  001DFA  D005               	goto	i2l2838
  7500  001DFC                     i2u195_40:
  7501  001DFC  FFFF               	dw	65535	; assembler added errata NOP
  7502  001DFE  5001               	movf	i2fputc@c,w,c
  7503  001E00  EC4C  F015         	call	i2_putch
  7504  001E04  D045               	goto	i2l1350
  7505  001E06                     i2l2838:
  7506  001E06  FFFF               	dw	65535	; assembler added errata NOP
  7507  001E08  EE20 F004          	lfsr	2,4
  7508  001E0C  5003               	movf	i2fputc@fp,w,c
  7509  001E0E  26D9               	addwf	fsr2l,f,c
  7510  001E10  5004               	movf	i2fputc@fp+1,w,c
  7511  001E12  22DA               	addwfc	fsr2h,f,c
  7512  001E14  50DE               	movf	postinc2,w,c
  7513  001E16  10DE               	iorwf	postinc2,w,c
  7514  001E18  B4D8               	btfsc	status,2,c
  7515  001E1A  D016               	goto	i2u197_40
  7516  001E1C  EE20 F004          	lfsr	2,4
  7517  001E20  5003               	movf	i2fputc@fp,w,c
  7518  001E22  26D9               	addwf	fsr2l,f,c
  7519  001E24  5004               	movf	i2fputc@fp+1,w,c
  7520  001E26  22DA               	addwfc	fsr2h,f,c
  7521  001E28  EE10 F002          	lfsr	1,2
  7522  001E2C  5003               	movf	i2fputc@fp,w,c
  7523  001E2E  26E1               	addwf	fsr1l,f,c
  7524  001E30  5004               	movf	i2fputc@fp+1,w,c
  7525  001E32  22E2               	addwfc	fsr1h,f,c
  7526  001E34  50DE               	movf	postinc2,w,c
  7527  001E36  5CE6               	subwf	postinc1,w,c
  7528  001E38  50E6               	movf	postinc1,w,c
  7529  001E3A  0A80               	xorlw	128
  7530  001E3C  6E09               	movwf	(??i2_fputc+4)& (0+255),c
  7531  001E3E  50DE               	movf	postinc2,w,c
  7532  001E40  0A80               	xorlw	128
  7533  001E42  5809               	subwfb	(??i2_fputc+4)& (0+255),w,c
  7534  001E44  B0D8               	btfsc	status,0,c
  7535  001E46  D024               	goto	i2l1350
  7536  001E48                     i2u197_40:
  7537  001E48  FFFF               	dw	65535	; assembler added errata NOP
  7538  001E4A  EE20 F002          	lfsr	2,2
  7539  001E4E  5003               	movf	i2fputc@fp,w,c
  7540  001E50  26D9               	addwf	fsr2l,f,c
  7541  001E52  5004               	movf	i2fputc@fp+1,w,c
  7542  001E54  22DA               	addwfc	fsr2h,f,c
  7543  001E56  CFDE F005          	movff	postinc2,??i2_fputc
  7544  001E5A  CFDD F006          	movff	postdec2,??i2_fputc+1
  7545  001E5E  C003  FFD9         	movff	i2fputc@fp,fsr2l
  7546  001E62  C004  FFDA         	movff	i2fputc@fp+1,fsr2h
  7547  001E66  CFDE F007          	movff	postinc2,??i2_fputc+2
  7548  001E6A  CFDD F008          	movff	postdec2,??i2_fputc+3
  7549  001E6E  5005               	movf	??i2_fputc,w,c
  7550  001E70  2407               	addwf	??i2_fputc+2,w,c
  7551  001E72  6ED9               	movwf	fsr2l,c
  7552  001E74  5006               	movf	??i2_fputc+1,w,c
  7553  001E76  2008               	addwfc	??i2_fputc+3,w,c
  7554  001E78  6EDA               	movwf	fsr2h,c
  7555  001E7A  C001  FFDF         	movff	i2fputc@c,indf2
  7556  001E7E  EE20 F002          	lfsr	2,2
  7557  001E82  5003               	movf	i2fputc@fp,w,c
  7558  001E84  26D9               	addwf	fsr2l,f,c
  7559  001E86  5004               	movf	i2fputc@fp+1,w,c
  7560  001E88  22DA               	addwfc	fsr2h,f,c
  7561  001E8A  2ADE               	incf	postinc2,f,c
  7562  001E8C  0E00               	movlw	0
  7563  001E8E  22DD               	addwfc	postdec2,f,c
  7564  001E90                     i2l1350:
  7565  001E90  FFFF               	dw	65535	; assembler added errata NOP
  7566  001E92  0012               	return		;funcret
  7567  001E94  FFFF               	dw	65535	; errata NOP
  7568  001E96                     __end_ofi2_fputc:
  7569                           	opt callstack 0
  7570                           
  7571 ;; *************** function i2_putch *****************
  7572 ;; Defined at:
  7573 ;;		line 7 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/putch.c"
  7574 ;; Parameters:    Size  Location     Type
  7575 ;;  c               1    wreg     unsigned char 
  7576 ;; Auto vars:     Size  Location     Type
  7577 ;;  c               1  (no storage) unsigned char 
  7578 ;; Return value:  Size  Location     Type
  7579 ;;                  1    wreg      void 
  7580 ;; Registers used:
  7581 ;;		wreg
  7582 ;; Tracked objects:
  7583 ;;		On entry : 0/0
  7584 ;;		On exit  : 0/0
  7585 ;;		Unchanged: 0/0
  7586 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7587 ;;      Params:         0       0       0       0       0       0       0
  7588 ;;      Locals:         0       0       0       0       0       0       0
  7589 ;;      Temps:          0       0       0       0       0       0       0
  7590 ;;      Totals:         0       0       0       0       0       0       0
  7591 ;;Total ram usage:        0 bytes
  7592 ;; Hardware stack levels used:    1
  7593 ;; This function calls:
  7594 ;;		Nothing
  7595 ;; This function is called by:
  7596 ;;		i2_fputc
  7597 ;; This function uses a non-reentrant model
  7598 ;;
  7599                           
  7600                           	psect	text45
  7601  002A98                     __ptext45:
  7602                           	opt callstack 0
  7603  002A98                     i2_putch:
  7604                           	opt callstack 0
  7605  002A98  FFFF               	dw	65535	; assembler added errata NOP
  7606                           
  7607                           ;incstack = 0
  7608  002A9A  0012               	return		;funcret
  7609  002A9C  FFFF               	dw	65535	; errata NOP
  7610  002A9E                     __end_ofi2_putch:
  7611                           	opt callstack 0
  7612                           
  7613 ;; *************** function i2_abs *****************
  7614 ;; Defined at:
  7615 ;;		line 1 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/abs.c"
  7616 ;; Parameters:    Size  Location     Type
  7617 ;;  a               2   18[COMRAM] int 
  7618 ;; Auto vars:     Size  Location     Type
  7619 ;;		None
  7620 ;; Return value:  Size  Location     Type
  7621 ;;                  2   18[COMRAM] int 
  7622 ;; Registers used:
  7623 ;;		wreg, status,2, status,0
  7624 ;; Tracked objects:
  7625 ;;		On entry : 0/0
  7626 ;;		On exit  : 0/0
  7627 ;;		Unchanged: 0/0
  7628 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7629 ;;      Params:         2       0       0       0       0       0       0
  7630 ;;      Locals:         0       0       0       0       0       0       0
  7631 ;;      Temps:          2       0       0       0       0       0       0
  7632 ;;      Totals:         4       0       0       0       0       0       0
  7633 ;;Total ram usage:        4 bytes
  7634 ;; Hardware stack levels used:    1
  7635 ;; This function calls:
  7636 ;;		Nothing
  7637 ;; This function is called by:
  7638 ;;		i2_dtoa
  7639 ;; This function uses a non-reentrant model
  7640 ;;
  7641                           
  7642                           	psect	text46
  7643  0027D2                     __ptext46:
  7644                           	opt callstack 0
  7645  0027D2                     i2_abs:
  7646                           	opt callstack 0
  7647  0027D2  FFFF               	dw	65535	; assembler added errata NOP
  7648                           
  7649                           ;incstack = 0
  7650  0027D4  BE14               	btfsc	i2abs@a+1,7,c
  7651  0027D6  D005               	goto	i2u241_40
  7652  0027D8  5014               	movf	i2abs@a+1,w,c
  7653  0027DA  E111               	bnz	i2l1290
  7654  0027DC  0413               	decf	i2abs@a,w,c
  7655  0027DE  B0D8               	btfsc	status,0,c
  7656  0027E0  D00E               	goto	i2l1290
  7657  0027E2                     i2u241_40:
  7658  0027E2  FFFF               	dw	65535	; assembler added errata NOP
  7659  0027E4  C013  F015         	movff	i2abs@a,??i2_abs
  7660  0027E8  C014  F016         	movff	i2abs@a+1,??i2_abs+1
  7661  0027EC  1E15               	comf	??i2_abs,f,c
  7662  0027EE  1E16               	comf	??i2_abs+1,f,c
  7663  0027F0  4A15               	infsnz	??i2_abs,f,c
  7664  0027F2  2A16               	incf	??i2_abs+1,f,c
  7665  0027F4  C015  F013         	movff	??i2_abs,?i2_abs
  7666  0027F8  C016  F014         	movff	??i2_abs+1,?i2_abs+1
  7667  0027FC  D005               	goto	i2l1293
  7668  0027FE                     i2l1290:
  7669  0027FE  FFFF               	dw	65535	; assembler added errata NOP
  7670  002800  C013  F013         	movff	i2abs@a,?i2_abs
  7671  002804  C014  F014         	movff	i2abs@a+1,?i2_abs+1
  7672  002808                     i2l1293:
  7673  002808  FFFF               	dw	65535	; assembler added errata NOP
  7674  00280A  0012               	return		;funcret
  7675  00280C  FFFF               	dw	65535	; errata NOP
  7676  00280E                     __end_ofi2_abs:
  7677                           	opt callstack 0
  7678                           
  7679 ;; *************** function i2___aomod *****************
  7680 ;; Defined at:
  7681 ;;		line 9 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/aomod.c"
  7682 ;; Parameters:    Size  Location     Type
  7683 ;;  dividend        8    0[COMRAM] long long 
  7684 ;;  divisor         8    8[COMRAM] long long 
  7685 ;; Auto vars:     Size  Location     Type
  7686 ;;  __aomod         1   17[COMRAM] unsigned char 
  7687 ;;  __aomod         1   16[COMRAM] unsigned char 
  7688 ;; Return value:  Size  Location     Type
  7689 ;;                  8    0[COMRAM] long long 
  7690 ;; Registers used:
  7691 ;;		wreg, status,2, status,0
  7692 ;; Tracked objects:
  7693 ;;		On entry : 0/0
  7694 ;;		On exit  : 0/0
  7695 ;;		Unchanged: 0/0
  7696 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7697 ;;      Params:        16       0       0       0       0       0       0
  7698 ;;      Locals:         2       0       0       0       0       0       0
  7699 ;;      Temps:          0       0       0       0       0       0       0
  7700 ;;      Totals:        18       0       0       0       0       0       0
  7701 ;;Total ram usage:       18 bytes
  7702 ;; Hardware stack levels used:    1
  7703 ;; This function calls:
  7704 ;;		Nothing
  7705 ;; This function is called by:
  7706 ;;		i2_dtoa
  7707 ;; This function uses a non-reentrant model
  7708 ;;
  7709                           
  7710                           	psect	text47
  7711  00189E                     __ptext47:
  7712                           	opt callstack 0
  7713  00189E                     i2___aomod:
  7714                           	opt callstack 0
  7715  00189E  FFFF               	dw	65535	; assembler added errata NOP
  7716                           
  7717                           ;incstack = 0
  7718  0018A0  0E00               	movlw	0
  7719  0018A2  6E12               	movwf	i2___aomod@sign,c
  7720  0018A4  AE08               	btfss	i2___aomod@dividend+7,7,c
  7721  0018A6  D012               	goto	i2l3090
  7722  0018A8  1E08               	comf	i2___aomod@dividend+7,f,c
  7723  0018AA  1E07               	comf	i2___aomod@dividend+6,f,c
  7724  0018AC  1E06               	comf	i2___aomod@dividend+5,f,c
  7725  0018AE  1E05               	comf	i2___aomod@dividend+4,f,c
  7726  0018B0  1E04               	comf	i2___aomod@dividend+3,f,c
  7727  0018B2  1E03               	comf	i2___aomod@dividend+2,f,c
  7728  0018B4  1E02               	comf	i2___aomod@dividend+1,f,c
  7729  0018B6  6C01               	negf	i2___aomod@dividend,c
  7730  0018B8  0E00               	movlw	0
  7731  0018BA  2202               	addwfc	i2___aomod@dividend+1,f,c
  7732  0018BC  2203               	addwfc	i2___aomod@dividend+2,f,c
  7733  0018BE  2204               	addwfc	i2___aomod@dividend+3,f,c
  7734  0018C0  2205               	addwfc	i2___aomod@dividend+4,f,c
  7735  0018C2  2206               	addwfc	i2___aomod@dividend+5,f,c
  7736  0018C4  2207               	addwfc	i2___aomod@dividend+6,f,c
  7737  0018C6  2208               	addwfc	i2___aomod@dividend+7,f,c
  7738  0018C8  0E01               	movlw	1
  7739  0018CA  6E12               	movwf	i2___aomod@sign,c
  7740  0018CC                     i2l3090:
  7741  0018CC  FFFF               	dw	65535	; assembler added errata NOP
  7742  0018CE  AE10               	btfss	i2___aomod@divisor+7,7,c
  7743  0018D0  D010               	goto	i2l3094
  7744  0018D2  1E10               	comf	i2___aomod@divisor+7,f,c
  7745  0018D4  1E0F               	comf	i2___aomod@divisor+6,f,c
  7746  0018D6  1E0E               	comf	i2___aomod@divisor+5,f,c
  7747  0018D8  1E0D               	comf	i2___aomod@divisor+4,f,c
  7748  0018DA  1E0C               	comf	i2___aomod@divisor+3,f,c
  7749  0018DC  1E0B               	comf	i2___aomod@divisor+2,f,c
  7750  0018DE  1E0A               	comf	i2___aomod@divisor+1,f,c
  7751  0018E0  6C09               	negf	i2___aomod@divisor,c
  7752  0018E2  0E00               	movlw	0
  7753  0018E4  220A               	addwfc	i2___aomod@divisor+1,f,c
  7754  0018E6  220B               	addwfc	i2___aomod@divisor+2,f,c
  7755  0018E8  220C               	addwfc	i2___aomod@divisor+3,f,c
  7756  0018EA  220D               	addwfc	i2___aomod@divisor+4,f,c
  7757  0018EC  220E               	addwfc	i2___aomod@divisor+5,f,c
  7758  0018EE  220F               	addwfc	i2___aomod@divisor+6,f,c
  7759  0018F0  2210               	addwfc	i2___aomod@divisor+7,f,c
  7760  0018F2                     i2l3094:
  7761  0018F2  FFFF               	dw	65535	; assembler added errata NOP
  7762  0018F4  5009               	movf	i2___aomod@divisor,w,c
  7763  0018F6  100A               	iorwf	i2___aomod@divisor+1,w,c
  7764  0018F8  100B               	iorwf	i2___aomod@divisor+2,w,c
  7765  0018FA  100C               	iorwf	i2___aomod@divisor+3,w,c
  7766  0018FC  100D               	iorwf	i2___aomod@divisor+4,w,c
  7767  0018FE  100E               	iorwf	i2___aomod@divisor+5,w,c
  7768  001900  100F               	iorwf	i2___aomod@divisor+6,w,c
  7769  001902  1010               	iorwf	i2___aomod@divisor+7,w,c
  7770  001904  B4D8               	btfsc	status,2,c
  7771  001906  D040               	goto	i2l3110
  7772  001908  0E01               	movlw	1
  7773  00190A  6E11               	movwf	i2___aomod@counter,c
  7774  00190C  D00B               	goto	i2l3100
  7775  00190E                     i2l3098:
  7776  00190E  FFFF               	dw	65535	; assembler added errata NOP
  7777  001910  90D8               	bcf	status,0,c
  7778  001912  3609               	rlcf	i2___aomod@divisor,f,c
  7779  001914  360A               	rlcf	i2___aomod@divisor+1,f,c
  7780  001916  360B               	rlcf	i2___aomod@divisor+2,f,c
  7781  001918  360C               	rlcf	i2___aomod@divisor+3,f,c
  7782  00191A  360D               	rlcf	i2___aomod@divisor+4,f,c
  7783  00191C  360E               	rlcf	i2___aomod@divisor+5,f,c
  7784  00191E  360F               	rlcf	i2___aomod@divisor+6,f,c
  7785  001920  3610               	rlcf	i2___aomod@divisor+7,f,c
  7786  001922  2A11               	incf	i2___aomod@counter,f,c
  7787  001924                     i2l3100:
  7788  001924  FFFF               	dw	65535	; assembler added errata NOP
  7789  001926  AE10               	btfss	i2___aomod@divisor+7,7,c
  7790  001928  D7F2               	goto	i2l3098
  7791  00192A                     i2u238_40:
  7792  00192A  FFFF               	dw	65535	; assembler added errata NOP
  7793  00192C  5009               	movf	i2___aomod@divisor,w,c
  7794  00192E  5C01               	subwf	i2___aomod@dividend,w,c
  7795  001930  500A               	movf	i2___aomod@divisor+1,w,c
  7796  001932  5802               	subwfb	i2___aomod@dividend+1,w,c
  7797  001934  500B               	movf	i2___aomod@divisor+2,w,c
  7798  001936  5803               	subwfb	i2___aomod@dividend+2,w,c
  7799  001938  500C               	movf	i2___aomod@divisor+3,w,c
  7800  00193A  5804               	subwfb	i2___aomod@dividend+3,w,c
  7801  00193C  500D               	movf	i2___aomod@divisor+4,w,c
  7802  00193E  5805               	subwfb	i2___aomod@dividend+4,w,c
  7803  001940  500E               	movf	i2___aomod@divisor+5,w,c
  7804  001942  5806               	subwfb	i2___aomod@dividend+5,w,c
  7805  001944  500F               	movf	i2___aomod@divisor+6,w,c
  7806  001946  5807               	subwfb	i2___aomod@dividend+6,w,c
  7807  001948  5010               	movf	i2___aomod@divisor+7,w,c
  7808  00194A  5808               	subwfb	i2___aomod@dividend+7,w,c
  7809  00194C  A0D8               	btfss	status,0,c
  7810  00194E  D010               	goto	i2l3106
  7811  001950  5009               	movf	i2___aomod@divisor,w,c
  7812  001952  5E01               	subwf	i2___aomod@dividend,f,c
  7813  001954  500A               	movf	i2___aomod@divisor+1,w,c
  7814  001956  5A02               	subwfb	i2___aomod@dividend+1,f,c
  7815  001958  500B               	movf	i2___aomod@divisor+2,w,c
  7816  00195A  5A03               	subwfb	i2___aomod@dividend+2,f,c
  7817  00195C  500C               	movf	i2___aomod@divisor+3,w,c
  7818  00195E  5A04               	subwfb	i2___aomod@dividend+3,f,c
  7819  001960  500D               	movf	i2___aomod@divisor+4,w,c
  7820  001962  5A05               	subwfb	i2___aomod@dividend+4,f,c
  7821  001964  500E               	movf	i2___aomod@divisor+5,w,c
  7822  001966  5A06               	subwfb	i2___aomod@dividend+5,f,c
  7823  001968  500F               	movf	i2___aomod@divisor+6,w,c
  7824  00196A  5A07               	subwfb	i2___aomod@dividend+6,f,c
  7825  00196C  5010               	movf	i2___aomod@divisor+7,w,c
  7826  00196E  5A08               	subwfb	i2___aomod@dividend+7,f,c
  7827  001970                     i2l3106:
  7828  001970  FFFF               	dw	65535	; assembler added errata NOP
  7829  001972  90D8               	bcf	status,0,c
  7830  001974  3210               	rrcf	i2___aomod@divisor+7,f,c
  7831  001976  320F               	rrcf	i2___aomod@divisor+6,f,c
  7832  001978  320E               	rrcf	i2___aomod@divisor+5,f,c
  7833  00197A  320D               	rrcf	i2___aomod@divisor+4,f,c
  7834  00197C  320C               	rrcf	i2___aomod@divisor+3,f,c
  7835  00197E  320B               	rrcf	i2___aomod@divisor+2,f,c
  7836  001980  320A               	rrcf	i2___aomod@divisor+1,f,c
  7837  001982  3209               	rrcf	i2___aomod@divisor,f,c
  7838  001984  2E11               	decfsz	i2___aomod@counter,f,c
  7839  001986  D7D1               	goto	i2u238_40
  7840  001988                     i2l3110:
  7841  001988  FFFF               	dw	65535	; assembler added errata NOP
  7842  00198A  5012               	movf	i2___aomod@sign,w,c
  7843  00198C  B4D8               	btfsc	status,2,c
  7844  00198E  D010               	goto	i2l3114
  7845  001990  1E08               	comf	i2___aomod@dividend+7,f,c
  7846  001992  1E07               	comf	i2___aomod@dividend+6,f,c
  7847  001994  1E06               	comf	i2___aomod@dividend+5,f,c
  7848  001996  1E05               	comf	i2___aomod@dividend+4,f,c
  7849  001998  1E04               	comf	i2___aomod@dividend+3,f,c
  7850  00199A  1E03               	comf	i2___aomod@dividend+2,f,c
  7851  00199C  1E02               	comf	i2___aomod@dividend+1,f,c
  7852  00199E  6C01               	negf	i2___aomod@dividend,c
  7853  0019A0  0E00               	movlw	0
  7854  0019A2  2202               	addwfc	i2___aomod@dividend+1,f,c
  7855  0019A4  2203               	addwfc	i2___aomod@dividend+2,f,c
  7856  0019A6  2204               	addwfc	i2___aomod@dividend+3,f,c
  7857  0019A8  2205               	addwfc	i2___aomod@dividend+4,f,c
  7858  0019AA  2206               	addwfc	i2___aomod@dividend+5,f,c
  7859  0019AC  2207               	addwfc	i2___aomod@dividend+6,f,c
  7860  0019AE  2208               	addwfc	i2___aomod@dividend+7,f,c
  7861  0019B0                     i2l3114:
  7862  0019B0  FFFF               	dw	65535	; assembler added errata NOP
  7863  0019B2  C001  F001         	movff	i2___aomod@dividend,?i2___aomod
  7864  0019B6  C002  F002         	movff	i2___aomod@dividend+1,?i2___aomod+1
  7865  0019BA  C003  F003         	movff	i2___aomod@dividend+2,?i2___aomod+2
  7866  0019BE  C004  F004         	movff	i2___aomod@dividend+3,?i2___aomod+3
  7867  0019C2  C005  F005         	movff	i2___aomod@dividend+4,?i2___aomod+4
  7868  0019C6  C006  F006         	movff	i2___aomod@dividend+5,?i2___aomod+5
  7869  0019CA  C007  F007         	movff	i2___aomod@dividend+6,?i2___aomod+6
  7870  0019CE  C008  F008         	movff	i2___aomod@dividend+7,?i2___aomod+7
  7871  0019D2  0012               	return		;funcret
  7872  0019D4  FFFF               	dw	65535	; errata NOP
  7873  0019D6                     __end_ofi2___aomod:
  7874                           	opt callstack 0
  7875                           
  7876 ;; *************** function i2___aodiv *****************
  7877 ;; Defined at:
  7878 ;;		line 9 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/aodiv.c"
  7879 ;; Parameters:    Size  Location     Type
  7880 ;;  dividend        8    0[COMRAM] long long 
  7881 ;;  divisor         8    8[COMRAM] long long 
  7882 ;; Auto vars:     Size  Location     Type
  7883 ;;  __aodiv         8   18[COMRAM] long long 
  7884 ;;  __aodiv         1   17[COMRAM] unsigned char 
  7885 ;;  __aodiv         1   16[COMRAM] unsigned char 
  7886 ;; Return value:  Size  Location     Type
  7887 ;;                  8    0[COMRAM] long long 
  7888 ;; Registers used:
  7889 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7890 ;; Tracked objects:
  7891 ;;		On entry : 0/0
  7892 ;;		On exit  : 0/0
  7893 ;;		Unchanged: 0/0
  7894 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7895 ;;      Params:        16       0       0       0       0       0       0
  7896 ;;      Locals:        10       0       0       0       0       0       0
  7897 ;;      Temps:          0       0       0       0       0       0       0
  7898 ;;      Totals:        26       0       0       0       0       0       0
  7899 ;;Total ram usage:       26 bytes
  7900 ;; Hardware stack levels used:    1
  7901 ;; This function calls:
  7902 ;;		Nothing
  7903 ;; This function is called by:
  7904 ;;		i2_dtoa
  7905 ;; This function uses a non-reentrant model
  7906 ;;
  7907                           
  7908                           	psect	text48
  7909  001608                     __ptext48:
  7910                           	opt callstack 0
  7911  001608                     i2___aodiv:
  7912                           	opt callstack 0
  7913  001608  FFFF               	dw	65535	; assembler added errata NOP
  7914                           
  7915                           ;incstack = 0
  7916  00160A  0E00               	movlw	0
  7917  00160C  6E12               	movwf	i2___aodiv@sign,c
  7918  00160E  AE10               	btfss	i2___aodiv@divisor+7,7,c
  7919  001610  D012               	goto	i2l3046
  7920  001612  1E10               	comf	i2___aodiv@divisor+7,f,c
  7921  001614  1E0F               	comf	i2___aodiv@divisor+6,f,c
  7922  001616  1E0E               	comf	i2___aodiv@divisor+5,f,c
  7923  001618  1E0D               	comf	i2___aodiv@divisor+4,f,c
  7924  00161A  1E0C               	comf	i2___aodiv@divisor+3,f,c
  7925  00161C  1E0B               	comf	i2___aodiv@divisor+2,f,c
  7926  00161E  1E0A               	comf	i2___aodiv@divisor+1,f,c
  7927  001620  6C09               	negf	i2___aodiv@divisor,c
  7928  001622  0E00               	movlw	0
  7929  001624  220A               	addwfc	i2___aodiv@divisor+1,f,c
  7930  001626  220B               	addwfc	i2___aodiv@divisor+2,f,c
  7931  001628  220C               	addwfc	i2___aodiv@divisor+3,f,c
  7932  00162A  220D               	addwfc	i2___aodiv@divisor+4,f,c
  7933  00162C  220E               	addwfc	i2___aodiv@divisor+5,f,c
  7934  00162E  220F               	addwfc	i2___aodiv@divisor+6,f,c
  7935  001630  2210               	addwfc	i2___aodiv@divisor+7,f,c
  7936  001632  0E01               	movlw	1
  7937  001634  6E12               	movwf	i2___aodiv@sign,c
  7938  001636                     i2l3046:
  7939  001636  FFFF               	dw	65535	; assembler added errata NOP
  7940  001638  AE08               	btfss	i2___aodiv@dividend+7,7,c
  7941  00163A  D012               	goto	i2l3052
  7942  00163C  1E08               	comf	i2___aodiv@dividend+7,f,c
  7943  00163E  1E07               	comf	i2___aodiv@dividend+6,f,c
  7944  001640  1E06               	comf	i2___aodiv@dividend+5,f,c
  7945  001642  1E05               	comf	i2___aodiv@dividend+4,f,c
  7946  001644  1E04               	comf	i2___aodiv@dividend+3,f,c
  7947  001646  1E03               	comf	i2___aodiv@dividend+2,f,c
  7948  001648  1E02               	comf	i2___aodiv@dividend+1,f,c
  7949  00164A  6C01               	negf	i2___aodiv@dividend,c
  7950  00164C  0E00               	movlw	0
  7951  00164E  2202               	addwfc	i2___aodiv@dividend+1,f,c
  7952  001650  2203               	addwfc	i2___aodiv@dividend+2,f,c
  7953  001652  2204               	addwfc	i2___aodiv@dividend+3,f,c
  7954  001654  2205               	addwfc	i2___aodiv@dividend+4,f,c
  7955  001656  2206               	addwfc	i2___aodiv@dividend+5,f,c
  7956  001658  2207               	addwfc	i2___aodiv@dividend+6,f,c
  7957  00165A  2208               	addwfc	i2___aodiv@dividend+7,f,c
  7958  00165C  0E01               	movlw	1
  7959  00165E  1A12               	xorwf	i2___aodiv@sign,f,c
  7960  001660                     i2l3052:
  7961  001660  FFFF               	dw	65535	; assembler added errata NOP
  7962  001662  EE20  F013         	lfsr	2,i2___aodiv@quotient
  7963  001666  0E07               	movlw	7
  7964  001668                     i2u230_41:
  7965  001668  6ADE               	clrf	postinc2,c
  7966  00166A  06E8               	decf	wreg,f,c
  7967  00166C  E2FD               	bc	i2u230_41
  7968  00166E  5009               	movf	i2___aodiv@divisor,w,c
  7969  001670  100A               	iorwf	i2___aodiv@divisor+1,w,c
  7970  001672  100B               	iorwf	i2___aodiv@divisor+2,w,c
  7971  001674  100C               	iorwf	i2___aodiv@divisor+3,w,c
  7972  001676  100D               	iorwf	i2___aodiv@divisor+4,w,c
  7973  001678  100E               	iorwf	i2___aodiv@divisor+5,w,c
  7974  00167A  100F               	iorwf	i2___aodiv@divisor+6,w,c
  7975  00167C  1010               	iorwf	i2___aodiv@divisor+7,w,c
  7976  00167E  B4D8               	btfsc	status,2,c
  7977  001680  D04A               	goto	i2l3074
  7978  001682  0E01               	movlw	1
  7979  001684  6E11               	movwf	i2___aodiv@counter,c
  7980  001686  D00B               	goto	i2l3060
  7981  001688                     i2l3058:
  7982  001688  FFFF               	dw	65535	; assembler added errata NOP
  7983  00168A  90D8               	bcf	status,0,c
  7984  00168C  3609               	rlcf	i2___aodiv@divisor,f,c
  7985  00168E  360A               	rlcf	i2___aodiv@divisor+1,f,c
  7986  001690  360B               	rlcf	i2___aodiv@divisor+2,f,c
  7987  001692  360C               	rlcf	i2___aodiv@divisor+3,f,c
  7988  001694  360D               	rlcf	i2___aodiv@divisor+4,f,c
  7989  001696  360E               	rlcf	i2___aodiv@divisor+5,f,c
  7990  001698  360F               	rlcf	i2___aodiv@divisor+6,f,c
  7991  00169A  3610               	rlcf	i2___aodiv@divisor+7,f,c
  7992  00169C  2A11               	incf	i2___aodiv@counter,f,c
  7993  00169E                     i2l3060:
  7994  00169E  FFFF               	dw	65535	; assembler added errata NOP
  7995  0016A0  AE10               	btfss	i2___aodiv@divisor+7,7,c
  7996  0016A2  D7F2               	goto	i2l3058
  7997  0016A4                     i2u232_40:
  7998  0016A4  FFFF               	dw	65535	; assembler added errata NOP
  7999  0016A6  90D8               	bcf	status,0,c
  8000  0016A8  3613               	rlcf	i2___aodiv@quotient,f,c
  8001  0016AA  3614               	rlcf	i2___aodiv@quotient+1,f,c
  8002  0016AC  3615               	rlcf	i2___aodiv@quotient+2,f,c
  8003  0016AE  3616               	rlcf	i2___aodiv@quotient+3,f,c
  8004  0016B0  3617               	rlcf	i2___aodiv@quotient+4,f,c
  8005  0016B2  3618               	rlcf	i2___aodiv@quotient+5,f,c
  8006  0016B4  3619               	rlcf	i2___aodiv@quotient+6,f,c
  8007  0016B6  361A               	rlcf	i2___aodiv@quotient+7,f,c
  8008  0016B8  5009               	movf	i2___aodiv@divisor,w,c
  8009  0016BA  5C01               	subwf	i2___aodiv@dividend,w,c
  8010  0016BC  500A               	movf	i2___aodiv@divisor+1,w,c
  8011  0016BE  5802               	subwfb	i2___aodiv@dividend+1,w,c
  8012  0016C0  500B               	movf	i2___aodiv@divisor+2,w,c
  8013  0016C2  5803               	subwfb	i2___aodiv@dividend+2,w,c
  8014  0016C4  500C               	movf	i2___aodiv@divisor+3,w,c
  8015  0016C6  5804               	subwfb	i2___aodiv@dividend+3,w,c
  8016  0016C8  500D               	movf	i2___aodiv@divisor+4,w,c
  8017  0016CA  5805               	subwfb	i2___aodiv@dividend+4,w,c
  8018  0016CC  500E               	movf	i2___aodiv@divisor+5,w,c
  8019  0016CE  5806               	subwfb	i2___aodiv@dividend+5,w,c
  8020  0016D0  500F               	movf	i2___aodiv@divisor+6,w,c
  8021  0016D2  5807               	subwfb	i2___aodiv@dividend+6,w,c
  8022  0016D4  5010               	movf	i2___aodiv@divisor+7,w,c
  8023  0016D6  5808               	subwfb	i2___aodiv@dividend+7,w,c
  8024  0016D8  A0D8               	btfss	status,0,c
  8025  0016DA  D011               	goto	i2l3070
  8026  0016DC  5009               	movf	i2___aodiv@divisor,w,c
  8027  0016DE  5E01               	subwf	i2___aodiv@dividend,f,c
  8028  0016E0  500A               	movf	i2___aodiv@divisor+1,w,c
  8029  0016E2  5A02               	subwfb	i2___aodiv@dividend+1,f,c
  8030  0016E4  500B               	movf	i2___aodiv@divisor+2,w,c
  8031  0016E6  5A03               	subwfb	i2___aodiv@dividend+2,f,c
  8032  0016E8  500C               	movf	i2___aodiv@divisor+3,w,c
  8033  0016EA  5A04               	subwfb	i2___aodiv@dividend+3,f,c
  8034  0016EC  500D               	movf	i2___aodiv@divisor+4,w,c
  8035  0016EE  5A05               	subwfb	i2___aodiv@dividend+4,f,c
  8036  0016F0  500E               	movf	i2___aodiv@divisor+5,w,c
  8037  0016F2  5A06               	subwfb	i2___aodiv@dividend+5,f,c
  8038  0016F4  500F               	movf	i2___aodiv@divisor+6,w,c
  8039  0016F6  5A07               	subwfb	i2___aodiv@dividend+6,f,c
  8040  0016F8  5010               	movf	i2___aodiv@divisor+7,w,c
  8041  0016FA  5A08               	subwfb	i2___aodiv@dividend+7,f,c
  8042  0016FC  8013               	bsf	i2___aodiv@quotient,0,c
  8043  0016FE                     i2l3070:
  8044  0016FE  FFFF               	dw	65535	; assembler added errata NOP
  8045  001700  90D8               	bcf	status,0,c
  8046  001702  3210               	rrcf	i2___aodiv@divisor+7,f,c
  8047  001704  320F               	rrcf	i2___aodiv@divisor+6,f,c
  8048  001706  320E               	rrcf	i2___aodiv@divisor+5,f,c
  8049  001708  320D               	rrcf	i2___aodiv@divisor+4,f,c
  8050  00170A  320C               	rrcf	i2___aodiv@divisor+3,f,c
  8051  00170C  320B               	rrcf	i2___aodiv@divisor+2,f,c
  8052  00170E  320A               	rrcf	i2___aodiv@divisor+1,f,c
  8053  001710  3209               	rrcf	i2___aodiv@divisor,f,c
  8054  001712  2E11               	decfsz	i2___aodiv@counter,f,c
  8055  001714  D7C7               	goto	i2u232_40
  8056  001716                     i2l3074:
  8057  001716  FFFF               	dw	65535	; assembler added errata NOP
  8058  001718  5012               	movf	i2___aodiv@sign,w,c
  8059  00171A  B4D8               	btfsc	status,2,c
  8060  00171C  D010               	goto	i2l3078
  8061  00171E  1E1A               	comf	i2___aodiv@quotient+7,f,c
  8062  001720  1E19               	comf	i2___aodiv@quotient+6,f,c
  8063  001722  1E18               	comf	i2___aodiv@quotient+5,f,c
  8064  001724  1E17               	comf	i2___aodiv@quotient+4,f,c
  8065  001726  1E16               	comf	i2___aodiv@quotient+3,f,c
  8066  001728  1E15               	comf	i2___aodiv@quotient+2,f,c
  8067  00172A  1E14               	comf	i2___aodiv@quotient+1,f,c
  8068  00172C  6C13               	negf	i2___aodiv@quotient,c
  8069  00172E  0E00               	movlw	0
  8070  001730  2214               	addwfc	i2___aodiv@quotient+1,f,c
  8071  001732  2215               	addwfc	i2___aodiv@quotient+2,f,c
  8072  001734  2216               	addwfc	i2___aodiv@quotient+3,f,c
  8073  001736  2217               	addwfc	i2___aodiv@quotient+4,f,c
  8074  001738  2218               	addwfc	i2___aodiv@quotient+5,f,c
  8075  00173A  2219               	addwfc	i2___aodiv@quotient+6,f,c
  8076  00173C  221A               	addwfc	i2___aodiv@quotient+7,f,c
  8077  00173E                     i2l3078:
  8078  00173E  FFFF               	dw	65535	; assembler added errata NOP
  8079  001740  C013  F001         	movff	i2___aodiv@quotient,?i2___aodiv
  8080  001744  C014  F002         	movff	i2___aodiv@quotient+1,?i2___aodiv+1
  8081  001748  C015  F003         	movff	i2___aodiv@quotient+2,?i2___aodiv+2
  8082  00174C  C016  F004         	movff	i2___aodiv@quotient+3,?i2___aodiv+3
  8083  001750  C017  F005         	movff	i2___aodiv@quotient+4,?i2___aodiv+4
  8084  001754  C018  F006         	movff	i2___aodiv@quotient+5,?i2___aodiv+5
  8085  001758  C019  F007         	movff	i2___aodiv@quotient+6,?i2___aodiv+6
  8086  00175C  C01A  F008         	movff	i2___aodiv@quotient+7,?i2___aodiv+7
  8087  001760  0012               	return		;funcret
  8088  001762  FFFF               	dw	65535	; errata NOP
  8089  001764                     __end_ofi2___aodiv:
  8090                           	opt callstack 0
  8091                           
  8092 ;; *************** function i2_atoi *****************
  8093 ;; Defined at:
  8094 ;;		line 4 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/atoi.c"
  8095 ;; Parameters:    Size  Location     Type
  8096 ;;  s               2    7[COMRAM] PTR const unsigned char 
  8097 ;;		 -> STR_4(18), STR_3(17), STR_2(17), STR_1(17), 
  8098 ;; Auto vars:     Size  Location     Type
  8099 ;;  atoi            2   20[COMRAM] int 
  8100 ;;  atoi            2   13[COMRAM] int 
  8101 ;; Return value:  Size  Location     Type
  8102 ;;                  2    7[COMRAM] int 
  8103 ;; Registers used:
  8104 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8105 ;; Tracked objects:
  8106 ;;		On entry : 0/0
  8107 ;;		On exit  : 0/0
  8108 ;;		Unchanged: 0/0
  8109 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8110 ;;      Params:         2       0       0       0       0       0       0
  8111 ;;      Locals:         9       0       0       0       0       0       0
  8112 ;;      Temps:          4       0       0       0       0       0       0
  8113 ;;      Totals:        15       0       0       0       0       0       0
  8114 ;;Total ram usage:       15 bytes
  8115 ;; Hardware stack levels used:    1
  8116 ;; Hardware stack levels required when called:    1
  8117 ;; This function calls:
  8118 ;;		i2___wmul
  8119 ;;		i2_isdigit
  8120 ;;		i2_isspace
  8121 ;; This function is called by:
  8122 ;;		i2_vfpfcnvrt
  8123 ;; This function uses a non-reentrant model
  8124 ;;
  8125                           
  8126                           	psect	text49
  8127  001344                     __ptext49:
  8128                           	opt callstack 0
  8129  001344                     i2_atoi:
  8130                           	opt callstack 0
  8131  001344  FFFF               	dw	65535	; assembler added errata NOP
  8132                           
  8133                           ;incstack = 0
  8134  001346  0E00               	movlw	0
  8135  001348  6E16               	movwf	i2atoi@n+1,c
  8136  00134A  0E00               	movlw	0
  8137  00134C  6E15               	movwf	i2atoi@n,c
  8138  00134E  0E00               	movlw	0
  8139  001350  6E0F               	movwf	i2atoi@neg+1,c
  8140  001352  0E00               	movlw	0
  8141  001354  6E0E               	movwf	i2atoi@neg,c
  8142  001356  D003               	goto	i2l3310
  8143  001358                     i2l3308:
  8144  001358  FFFF               	dw	65535	; assembler added errata NOP
  8145  00135A  4A08               	infsnz	i2atoi@s,f,c
  8146  00135C  2A09               	incf	i2atoi@s+1,f,c
  8147  00135E                     i2l3310:
  8148  00135E  FFFF               	dw	65535	; assembler added errata NOP
  8149  001360  0E01               	movlw	1
  8150  001362  6E14               	movwf	i2_atoi$1500,c
  8151  001364  C008  FFF6         	movff	i2atoi@s,tblptrl
  8152  001368  C009  FFF7         	movff	i2atoi@s+1,tblptrh
  8153  00136C                     	if	0	;tblptru may be non-zero
  8154  00136C                     	endif
  8155  00136C                     	if	0	;tblptru may be non-zero
  8156  00136C                     	endif
  8157  00136C  0008               	tblrd		*
  8158  00136E  FFFF               	dw	65535	; errata NOP
  8159  001370  50F5               	movf	tablat,w,c
  8160  001372  0A20               	xorlw	32
  8161  001374  B4D8               	btfsc	status,2,c
  8162  001376  D019               	goto	i2l3318
  8163  001378  0EF7               	movlw	247
  8164  00137A  6E0A               	movwf	??i2_atoi& (0+255),c
  8165  00137C  0EFF               	movlw	255
  8166  00137E  6E0B               	movwf	(??i2_atoi+1)& (0+255),c
  8167  001380  C008  FFF6         	movff	i2atoi@s,tblptrl
  8168  001384  C009  FFF7         	movff	i2atoi@s+1,tblptrh
  8169  001388                     	if	0	;tblptru may be non-zero
  8170  001388                     	endif
  8171  001388                     	if	0	;tblptru may be non-zero
  8172  001388                     	endif
  8173  001388  0008               	tblrd		*
  8174  00138A  FFFF               	dw	65535	; errata NOP
  8175  00138C  50F5               	movf	tablat,w,c
  8176  00138E  6E0C               	movwf	(??i2_atoi+2)& (0+255),c
  8177  001390  6A0D               	clrf	(??i2_atoi+3)& (0+255),c
  8178  001392  500A               	movf	??i2_atoi,w,c
  8179  001394  260C               	addwf	??i2_atoi+2,f,c
  8180  001396  500B               	movf	??i2_atoi+1,w,c
  8181  001398  220D               	addwfc	??i2_atoi+3,f,c
  8182  00139A  500D               	movf	??i2_atoi+3,w,c
  8183  00139C  E104               	bnz	i2u284_40
  8184  00139E  0E05               	movlw	5
  8185  0013A0  5C0C               	subwf	??i2_atoi+2,w,c
  8186  0013A2  A0D8               	btfss	status,0,c
  8187  0013A4  D002               	goto	i2l3318
  8188  0013A6                     i2u284_40:
  8189  0013A6  0E00               	movlw	0
  8190  0013A8  6E14               	movwf	i2_atoi$1500,c
  8191  0013AA                     i2l3318:
  8192  0013AA  FFFF               	dw	65535	; assembler added errata NOP
  8193  0013AC  C014  F010         	movff	i2_atoi$1500,i2_atoi$1499
  8194  0013B0  6A11               	clrf	i2_atoi$1499+1,c
  8195  0013B2  5010               	movf	i2_atoi$1499,w,c
  8196  0013B4  1011               	iorwf	i2_atoi$1499+1,w,c
  8197  0013B6  B4D8               	btfsc	status,2,c
  8198  0013B8  D00A               	goto	i2l3328
  8199  0013BA  D7CE               	goto	i2l3308
  8200  0013BC                     i2l3324:
  8201  0013BC  FFFF               	dw	65535	; assembler added errata NOP
  8202  0013BE  0E00               	movlw	0
  8203  0013C0  6E0F               	movwf	i2atoi@neg+1,c
  8204  0013C2  0E01               	movlw	1
  8205  0013C4  6E0E               	movwf	i2atoi@neg,c
  8206  0013C6                     i2l3326:
  8207  0013C6  FFFF               	dw	65535	; assembler added errata NOP
  8208  0013C8  4A08               	infsnz	i2atoi@s,f,c
  8209  0013CA  2A09               	incf	i2atoi@s+1,f,c
  8210  0013CC  D032               	goto	i2l3334
  8211  0013CE                     i2l3328:
  8212  0013CE  FFFF               	dw	65535	; assembler added errata NOP
  8213  0013D0  C008  FFF6         	movff	i2atoi@s,tblptrl
  8214  0013D4  C009  FFF7         	movff	i2atoi@s+1,tblptrh
  8215  0013D8                     	if	0	;tblptru may be non-zero
  8216  0013D8                     	endif
  8217  0013D8                     	if	0	;tblptru may be non-zero
  8218  0013D8                     	endif
  8219  0013D8  0008               	tblrd		*
  8220  0013DA  FFFF               	dw	65535	; errata NOP
  8221  0013DC  50F5               	movf	tablat,w,c
  8222  0013DE  6E0A               	movwf	??i2_atoi& (0+255),c
  8223  0013E0  6A0B               	clrf	(??i2_atoi+1)& (0+255),c
  8224                           
  8225                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8226                           ; Switch size 1, requested type "simple"
  8227                           ; Number of cases is 1, Range of values is 0 to 0
  8228                           ; switch strategies available:
  8229                           ; Name         Instructions Cycles
  8230                           ; simple_byte            4     3 (average)
  8231                           ;	Chosen strategy is simple_byte
  8232  0013E2  500B               	movf	??i2_atoi+1,w,c
  8233  0013E4  0A00               	xorlw	0	; case 0
  8234  0013E6  A4D8               	btfss	status,2,c
  8235  0013E8  D024               	goto	i2l3334
  8236                           
  8237                           ; Switch size 1, requested type "simple"
  8238                           ; Number of cases is 2, Range of values is 43 to 45
  8239                           ; switch strategies available:
  8240                           ; Name         Instructions Cycles
  8241                           ; simple_byte            7     4 (average)
  8242                           ;	Chosen strategy is simple_byte
  8243  0013EA  500A               	movf	??i2_atoi,w,c
  8244  0013EC  0A2B               	xorlw	43	; case 43
  8245  0013EE  B4D8               	btfsc	status,2,c
  8246  0013F0  D7EA               	goto	i2l3326
  8247  0013F2  0A06               	xorlw	6	; case 45
  8248  0013F4  B4D8               	btfsc	status,2,c
  8249  0013F6  D7E2               	goto	i2l3324
  8250  0013F8  D01C               	goto	i2l3334
  8251  0013FA                     i2l3330:
  8252  0013FA  FFFF               	dw	65535	; assembler added errata NOP
  8253  0013FC  C015  F001         	movff	i2atoi@n,i2___wmul@multiplier
  8254  001400  C016  F002         	movff	i2atoi@n+1,i2___wmul@multiplier+1
  8255  001404  0E00               	movlw	0
  8256  001406  6E04               	movwf	i2___wmul@multiplicand+1,c
  8257  001408  0E0A               	movlw	10
  8258  00140A  6E03               	movwf	i2___wmul@multiplicand,c
  8259  00140C  ECD3  F014         	call	i2___wmul	;wreg free
  8260  001410  C008  FFF6         	movff	i2atoi@s,tblptrl
  8261  001414  C009  FFF7         	movff	i2atoi@s+1,tblptrh
  8262  001418                     	if	0	;tblptru may be non-zero
  8263  001418                     	endif
  8264  001418                     	if	0	;tblptru may be non-zero
  8265  001418                     	endif
  8266  001418  0008               	tblrd		*
  8267  00141A  FFFF               	dw	65535	; errata NOP
  8268  00141C  50F5               	movf	tablat,w,c
  8269  00141E  5E01               	subwf	?i2___wmul,f,c
  8270  001420  0E00               	movlw	0
  8271  001422  5A02               	subwfb	?i2___wmul+1,f,c
  8272  001424  0E30               	movlw	48
  8273  001426  2401               	addwf	?i2___wmul,w,c
  8274  001428  6E15               	movwf	i2atoi@n,c
  8275  00142A  0E00               	movlw	0
  8276  00142C  2002               	addwfc	?i2___wmul+1,w,c
  8277  00142E  6E16               	movwf	i2atoi@n+1,c
  8278  001430  D7CA               	goto	i2l3326
  8279  001432                     i2l3334:
  8280  001432  FFFF               	dw	65535	; assembler added errata NOP
  8281  001434  0ED0               	movlw	208
  8282  001436  6E0A               	movwf	??i2_atoi& (0+255),c
  8283  001438  0EFF               	movlw	255
  8284  00143A  6E0B               	movwf	(??i2_atoi+1)& (0+255),c
  8285  00143C  C008  FFF6         	movff	i2atoi@s,tblptrl
  8286  001440  C009  FFF7         	movff	i2atoi@s+1,tblptrh
  8287  001444                     	if	0	;tblptru may be non-zero
  8288  001444                     	endif
  8289  001444                     	if	0	;tblptru may be non-zero
  8290  001444                     	endif
  8291  001444  0008               	tblrd		*
  8292  001446  FFFF               	dw	65535	; errata NOP
  8293  001448  50F5               	movf	tablat,w,c
  8294  00144A  6E0C               	movwf	(??i2_atoi+2)& (0+255),c
  8295  00144C  6A0D               	clrf	(??i2_atoi+3)& (0+255),c
  8296  00144E  500A               	movf	??i2_atoi,w,c
  8297  001450  260C               	addwf	??i2_atoi+2,f,c
  8298  001452  500B               	movf	??i2_atoi+1,w,c
  8299  001454  220D               	addwfc	??i2_atoi+3,f,c
  8300  001456  500D               	movf	??i2_atoi+3,w,c
  8301  001458  E106               	bnz	i2u286_40
  8302  00145A  0E0A               	movlw	10
  8303  00145C  5C0C               	subwf	??i2_atoi+2,w,c
  8304  00145E  B0D8               	btfsc	status,0,c
  8305  001460  D002               	goto	i2u286_40
  8306  001462  0E01               	movlw	1
  8307  001464  D002               	goto	i2u287_40
  8308  001466                     i2u286_40:
  8309  001466  FFFF               	dw	65535	; assembler added errata NOP
  8310  001468  0E00               	movlw	0
  8311  00146A                     i2u287_40:
  8312  00146A  FFFF               	dw	65535	; assembler added errata NOP
  8313  00146C  6E12               	movwf	i2_atoi$1501,c
  8314  00146E  6A13               	clrf	i2_atoi$1501+1,c
  8315  001470  5012               	movf	i2_atoi$1501,w,c
  8316  001472  1013               	iorwf	i2_atoi$1501+1,w,c
  8317  001474  A4D8               	btfss	status,2,c
  8318  001476  D7C1               	goto	i2l3330
  8319  001478  500E               	movf	i2atoi@neg,w,c
  8320  00147A  100F               	iorwf	i2atoi@neg+1,w,c
  8321  00147C  A4D8               	btfss	status,2,c
  8322  00147E  D00D               	goto	i2l1321
  8323  001480  C015  F00A         	movff	i2atoi@n,??i2_atoi
  8324  001484  C016  F00B         	movff	i2atoi@n+1,??i2_atoi+1
  8325  001488  1E0A               	comf	??i2_atoi,f,c
  8326  00148A  1E0B               	comf	??i2_atoi+1,f,c
  8327  00148C  4A0A               	infsnz	??i2_atoi,f,c
  8328  00148E  2A0B               	incf	??i2_atoi+1,f,c
  8329  001490  C00A  F008         	movff	??i2_atoi,?i2_atoi
  8330  001494  C00B  F009         	movff	??i2_atoi+1,?i2_atoi+1
  8331  001498  D005               	goto	i2l1324
  8332  00149A                     i2l1321:
  8333  00149A  FFFF               	dw	65535	; assembler added errata NOP
  8334  00149C  C015  F008         	movff	i2atoi@n,?i2_atoi
  8335  0014A0  C016  F009         	movff	i2atoi@n+1,?i2_atoi+1
  8336  0014A4                     i2l1324:
  8337  0014A4  FFFF               	dw	65535	; assembler added errata NOP
  8338  0014A6  0012               	return		;funcret
  8339  0014A8  FFFF               	dw	65535	; errata NOP
  8340  0014AA                     __end_ofi2_atoi:
  8341                           	opt callstack 0
  8342                           
  8343 ;; *************** function i2_isspace *****************
  8344 ;; Defined at:
  8345 ;;		line 5 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/isspace.c"
  8346 ;; Parameters:    Size  Location     Type
  8347 ;;  c               2    0[COMRAM] int 
  8348 ;; Auto vars:     Size  Location     Type
  8349 ;;		None
  8350 ;; Return value:  Size  Location     Type
  8351 ;;                  2    0[COMRAM] int 
  8352 ;; Registers used:
  8353 ;;		wreg, status,2, status,0
  8354 ;; Tracked objects:
  8355 ;;		On entry : 0/0
  8356 ;;		On exit  : 0/0
  8357 ;;		Unchanged: 0/0
  8358 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8359 ;;      Params:         2       0       0       0       0       0       0
  8360 ;;      Locals:         1       0       0       0       0       0       0
  8361 ;;      Temps:          4       0       0       0       0       0       0
  8362 ;;      Totals:         7       0       0       0       0       0       0
  8363 ;;Total ram usage:        7 bytes
  8364 ;; Hardware stack levels used:    1
  8365 ;; This function calls:
  8366 ;;		Nothing
  8367 ;; This function is called by:
  8368 ;;		i2_atoi
  8369 ;; This function uses a non-reentrant model
  8370 ;;
  8371                           
  8372                           	psect	text50
  8373  00264A                     __ptext50:
  8374                           	opt callstack 0
  8375  00264A                     i2_isspace:
  8376                           	opt callstack 0
  8377  00264A  FFFF               	dw	65535	; assembler added errata NOP
  8378                           
  8379                           ;incstack = 0
  8380  00264C  0E01               	movlw	1
  8381  00264E  6E07               	movwf	i2_isspace$1517,c
  8382  002650  0E20               	movlw	32
  8383  002652  1801               	xorwf	i2isspace@c,w,c
  8384  002654  1002               	iorwf	i2isspace@c+1,w,c
  8385  002656  B4D8               	btfsc	status,2,c
  8386  002658  D014               	goto	i2l3134
  8387  00265A  0EF7               	movlw	247
  8388  00265C  6E03               	movwf	??i2_isspace& (0+255),c
  8389  00265E  0EFF               	movlw	255
  8390  002660  6E04               	movwf	(??i2_isspace+1)& (0+255),c
  8391  002662  C001  F005         	movff	i2isspace@c,??i2_isspace+2
  8392  002666  C002  F006         	movff	i2isspace@c+1,??i2_isspace+3
  8393  00266A  5003               	movf	??i2_isspace,w,c
  8394  00266C  2605               	addwf	??i2_isspace+2,f,c
  8395  00266E  5004               	movf	??i2_isspace+1,w,c
  8396  002670  2206               	addwfc	??i2_isspace+3,f,c
  8397  002672  5006               	movf	??i2_isspace+3,w,c
  8398  002674  E104               	bnz	i2u245_40
  8399  002676  0E05               	movlw	5
  8400  002678  5C05               	subwf	??i2_isspace+2,w,c
  8401  00267A  A0D8               	btfss	status,0,c
  8402  00267C  D002               	goto	i2l3134
  8403  00267E                     i2u245_40:
  8404  00267E  0E00               	movlw	0
  8405  002680  6E07               	movwf	i2_isspace$1517,c
  8406  002682                     i2l3134:
  8407  002682  FFFF               	dw	65535	; assembler added errata NOP
  8408  002684  C007  F001         	movff	i2_isspace$1517,?i2_isspace
  8409  002688  6A02               	clrf	?i2_isspace+1,c
  8410  00268A  0012               	return		;funcret
  8411  00268C  FFFF               	dw	65535	; errata NOP
  8412  00268E                     __end_ofi2_isspace:
  8413                           	opt callstack 0
  8414                           
  8415 ;; *************** function i2_isdigit *****************
  8416 ;; Defined at:
  8417 ;;		line 5 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/isdigit.c"
  8418 ;; Parameters:    Size  Location     Type
  8419 ;;  c               2    0[COMRAM] int 
  8420 ;; Auto vars:     Size  Location     Type
  8421 ;;		None
  8422 ;; Return value:  Size  Location     Type
  8423 ;;                  2    0[COMRAM] int 
  8424 ;; Registers used:
  8425 ;;		wreg, status,2, status,0
  8426 ;; Tracked objects:
  8427 ;;		On entry : 0/0
  8428 ;;		On exit  : 0/0
  8429 ;;		Unchanged: 0/0
  8430 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8431 ;;      Params:         2       0       0       0       0       0       0
  8432 ;;      Locals:         0       0       0       0       0       0       0
  8433 ;;      Temps:          4       0       0       0       0       0       0
  8434 ;;      Totals:         6       0       0       0       0       0       0
  8435 ;;Total ram usage:        6 bytes
  8436 ;; Hardware stack levels used:    1
  8437 ;; This function calls:
  8438 ;;		Nothing
  8439 ;; This function is called by:
  8440 ;;		i2_vfpfcnvrt
  8441 ;;		i2_atoi
  8442 ;; This function uses a non-reentrant model
  8443 ;;
  8444                           
  8445                           	psect	text51
  8446  002848                     __ptext51:
  8447                           	opt callstack 0
  8448  002848                     i2_isdigit:
  8449                           	opt callstack 0
  8450  002848  FFFF               	dw	65535	; assembler added errata NOP
  8451                           
  8452                           ;incstack = 0
  8453  00284A  0ED0               	movlw	208
  8454  00284C  6E03               	movwf	??i2_isdigit& (0+255),c
  8455  00284E  0EFF               	movlw	255
  8456  002850  6E04               	movwf	(??i2_isdigit+1)& (0+255),c
  8457  002852  C001  F005         	movff	i2isdigit@c,??i2_isdigit+2
  8458  002856  C002  F006         	movff	i2isdigit@c+1,??i2_isdigit+3
  8459  00285A  5003               	movf	??i2_isdigit,w,c
  8460  00285C  2605               	addwf	??i2_isdigit+2,f,c
  8461  00285E  5004               	movf	??i2_isdigit+1,w,c
  8462  002860  2206               	addwfc	??i2_isdigit+3,f,c
  8463  002862  5006               	movf	??i2_isdigit+3,w,c
  8464  002864  E106               	bnz	i2u242_40
  8465  002866  0E0A               	movlw	10
  8466  002868  5C05               	subwf	??i2_isdigit+2,w,c
  8467  00286A  B0D8               	btfsc	status,0,c
  8468  00286C  D002               	goto	i2u242_40
  8469  00286E  0E01               	movlw	1
  8470  002870  D002               	goto	i2u243_40
  8471  002872                     i2u242_40:
  8472  002872  FFFF               	dw	65535	; assembler added errata NOP
  8473  002874  0E00               	movlw	0
  8474  002876                     i2u243_40:
  8475  002876  FFFF               	dw	65535	; assembler added errata NOP
  8476  002878  6E01               	movwf	?i2_isdigit,c
  8477  00287A  6A02               	clrf	?i2_isdigit+1,c
  8478  00287C  0012               	return		;funcret
  8479  00287E  FFFF               	dw	65535	; errata NOP
  8480  002880                     __end_ofi2_isdigit:
  8481                           	opt callstack 0
  8482                           
  8483 ;; *************** function i2___wmul *****************
  8484 ;; Defined at:
  8485 ;;		line 15 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/Umul16.c"
  8486 ;; Parameters:    Size  Location     Type
  8487 ;;  multiplier      2    0[COMRAM] unsigned int 
  8488 ;;  multiplicand    2    2[COMRAM] unsigned int 
  8489 ;; Auto vars:     Size  Location     Type
  8490 ;;  __wmul          2    4[COMRAM] unsigned int 
  8491 ;; Return value:  Size  Location     Type
  8492 ;;                  2    0[COMRAM] unsigned int 
  8493 ;; Registers used:
  8494 ;;		wreg, status,2, status,0, prodl, prodh
  8495 ;; Tracked objects:
  8496 ;;		On entry : 0/0
  8497 ;;		On exit  : 0/0
  8498 ;;		Unchanged: 0/0
  8499 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8500 ;;      Params:         4       0       0       0       0       0       0
  8501 ;;      Locals:         2       0       0       0       0       0       0
  8502 ;;      Temps:          0       0       0       0       0       0       0
  8503 ;;      Totals:         6       0       0       0       0       0       0
  8504 ;;Total ram usage:        6 bytes
  8505 ;; Hardware stack levels used:    1
  8506 ;; This function calls:
  8507 ;;		Nothing
  8508 ;; This function is called by:
  8509 ;;		i2_atoi
  8510 ;; This function uses a non-reentrant model
  8511 ;;
  8512                           
  8513                           	psect	text52
  8514  0029A6                     __ptext52:
  8515                           	opt callstack 0
  8516  0029A6                     i2___wmul:
  8517                           	opt callstack 0
  8518  0029A6  FFFF               	dw	65535	; assembler added errata NOP
  8519                           
  8520                           ;incstack = 0
  8521  0029A8  5001               	movf	i2___wmul@multiplier,w,c
  8522  0029AA  0203               	mulwf	i2___wmul@multiplicand,c
  8523  0029AC  CFF3 F005          	movff	prodl,i2___wmul@product
  8524  0029B0  CFF4 F006          	movff	prodh,i2___wmul@product+1
  8525  0029B4  5001               	movf	i2___wmul@multiplier,w,c
  8526  0029B6  0204               	mulwf	i2___wmul@multiplicand+1,c
  8527  0029B8  50F3               	movf	prodl,w,c
  8528  0029BA  2606               	addwf	i2___wmul@product+1,f,c
  8529  0029BC  5002               	movf	i2___wmul@multiplier+1,w,c
  8530  0029BE  0203               	mulwf	i2___wmul@multiplicand,c
  8531  0029C0  50F3               	movf	prodl,w,c
  8532  0029C2  2606               	addwf	i2___wmul@product+1,f,c
  8533  0029C4  C005  F001         	movff	i2___wmul@product,?i2___wmul
  8534  0029C8  C006  F002         	movff	i2___wmul@product+1,?i2___wmul+1
  8535  0029CC  0012               	return		;funcret
  8536  0029CE  FFFF               	dw	65535	; errata NOP
  8537  0029D0                     __end_ofi2___wmul:
  8538                           	opt callstack 0
  8539                           
  8540 ;; *************** function i2_SetDDRamAddr *****************
  8541 ;; Defined at:
  8542 ;;		line 217 in file "lcd_pic16.c"
  8543 ;; Parameters:    Size  Location     Type
  8544 ;;  DDaddr          1    wreg     unsigned char 
  8545 ;; Auto vars:     Size  Location     Type
  8546 ;;  DDaddr          1    0[COMRAM] unsigned char 
  8547 ;; Return value:  Size  Location     Type
  8548 ;;                  1    wreg      void 
  8549 ;; Registers used:
  8550 ;;		wreg, status,2, status,0, cstack
  8551 ;; Tracked objects:
  8552 ;;		On entry : 0/0
  8553 ;;		On exit  : 0/0
  8554 ;;		Unchanged: 0/0
  8555 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8556 ;;      Params:         0       0       0       0       0       0       0
  8557 ;;      Locals:         1       0       0       0       0       0       0
  8558 ;;      Temps:          0       0       0       0       0       0       0
  8559 ;;      Totals:         1       0       0       0       0       0       0
  8560 ;;Total ram usage:        1 bytes
  8561 ;; Hardware stack levels used:    1
  8562 ;; Hardware stack levels required when called:    1
  8563 ;; This function calls:
  8564 ;;		i2_DelayFor18TCY
  8565 ;; This function is called by:
  8566 ;;		_updateLCD
  8567 ;; This function uses a non-reentrant model
  8568 ;;
  8569                           
  8570                           	psect	text53
  8571  00268E                     __ptext53:
  8572                           	opt callstack 0
  8573  00268E                     i2_SetDDRamAddr:
  8574                           	opt callstack 0
  8575  00268E  FFFF               	dw	65535	; assembler added errata NOP
  8576                           
  8577                           ;incstack = 0
  8578                           ;i2SetDDRamAddr@DDaddr stored from wreg
  8579  002690  6E01               	movwf	i2SetDDRamAddr@DDaddr,c
  8580                           
  8581                           ;lcd_pic16.c: 217: void SetDDRamAddr(unsigned char DDaddr);lcd_pic16.c: 218: {;lcd_pic16
      +                          .c: 232:         TRISD &= 0x0f;
  8582  002692  0E0F               	movlw	15
  8583  002694  1695               	andwf	3989,f,c	;volatile
  8584                           
  8585                           ;lcd_pic16.c: 233:         PORTD &= 0x0f;
  8586  002696  0E0F               	movlw	15
  8587  002698  1683               	andwf	3971,f,c	;volatile
  8588                           
  8589                           ;lcd_pic16.c: 234:         PORTD |= ((DDaddr | 0b10000000) & 0xf0);
  8590  00269A  5001               	movf	i2SetDDRamAddr@DDaddr,w,c
  8591  00269C  0980               	iorlw	128
  8592  00269E  0BF0               	andlw	240
  8593  0026A0  1283               	iorwf	3971,f,c	;volatile
  8594                           
  8595                           ;lcd_pic16.c: 240:         PORTDbits.RD2 = 0;
  8596  0026A2  9483               	bcf	3971,2,c	;volatile
  8597                           
  8598                           ;lcd_pic16.c: 241:         PORTDbits.RD3 = 0;
  8599  0026A4  9683               	bcf	3971,3,c	;volatile
  8600                           
  8601                           ;lcd_pic16.c: 242:         DelayFor18TCY();
  8602  0026A6  EC41  F015         	call	i2_DelayFor18TCY	;wreg free
  8603                           
  8604                           ;lcd_pic16.c: 243:         PORTDbits.RD1 = 1;
  8605  0026AA  8283               	bsf	3971,1,c	;volatile
  8606                           
  8607                           ;lcd_pic16.c: 244:         DelayFor18TCY();
  8608  0026AC  EC41  F015         	call	i2_DelayFor18TCY	;wreg free
  8609                           
  8610                           ;lcd_pic16.c: 245:         PORTDbits.RD1 = 0;
  8611  0026B0  9283               	bcf	3971,1,c	;volatile
  8612                           
  8613                           ;lcd_pic16.c: 247:         PORTD &= 0x0f;
  8614  0026B2  0E0F               	movlw	15
  8615  0026B4  1683               	andwf	3971,f,c	;volatile
  8616                           
  8617                           ;lcd_pic16.c: 248:         PORTD |= ((DDaddr<<4)&0xf0);
  8618  0026B6  3801               	swapf	i2SetDDRamAddr@DDaddr,w,c
  8619  0026B8  0BF0               	andlw	240
  8620  0026BA  0BF0               	andlw	240
  8621  0026BC  1283               	iorwf	3971,f,c	;volatile
  8622                           
  8623                           ;lcd_pic16.c: 253:         DelayFor18TCY();
  8624  0026BE  EC41  F015         	call	i2_DelayFor18TCY	;wreg free
  8625                           
  8626                           ;lcd_pic16.c: 254:         PORTDbits.RD1 = 1;
  8627  0026C2  8283               	bsf	3971,1,c	;volatile
  8628                           
  8629                           ;lcd_pic16.c: 255:         DelayFor18TCY();
  8630  0026C4  EC41  F015         	call	i2_DelayFor18TCY	;wreg free
  8631                           
  8632                           ;lcd_pic16.c: 256:         PORTDbits.RD1 = 0;
  8633  0026C8  9283               	bcf	3971,1,c	;volatile
  8634                           
  8635                           ;lcd_pic16.c: 258:         TRISD |= 0xf0;
  8636  0026CA  0EF0               	movlw	240
  8637  0026CC  1295               	iorwf	3989,f,c	;volatile
  8638  0026CE  0012               	return		;funcret
  8639  0026D0  FFFF               	dw	65535	; errata NOP
  8640  0026D2                     __end_ofi2_SetDDRamAddr:
  8641                           	opt callstack 0
  8642                           
  8643 ;; *************** function _putsXLCD *****************
  8644 ;; Defined at:
  8645 ;;		line 419 in file "lcd_pic16.c"
  8646 ;; Parameters:    Size  Location     Type
  8647 ;;  buffer          2    1[COMRAM] PTR unsigned char 
  8648 ;;		 -> lineTwo(17), lineOne(17), 
  8649 ;; Auto vars:     Size  Location     Type
  8650 ;;		None
  8651 ;; Return value:  Size  Location     Type
  8652 ;;                  1    wreg      void 
  8653 ;; Registers used:
  8654 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  8655 ;; Tracked objects:
  8656 ;;		On entry : 0/0
  8657 ;;		On exit  : 0/0
  8658 ;;		Unchanged: 0/0
  8659 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8660 ;;      Params:         2       0       0       0       0       0       0
  8661 ;;      Locals:         0       0       0       0       0       0       0
  8662 ;;      Temps:          0       0       0       0       0       0       0
  8663 ;;      Totals:         2       0       0       0       0       0       0
  8664 ;;Total ram usage:        2 bytes
  8665 ;; Hardware stack levels used:    1
  8666 ;; Hardware stack levels required when called:    2
  8667 ;; This function calls:
  8668 ;;		_WriteDataXLCD
  8669 ;;		i2_BusyXLCD
  8670 ;; This function is called by:
  8671 ;;		_updateLCD
  8672 ;; This function uses a non-reentrant model
  8673 ;;
  8674                           
  8675                           	psect	text54
  8676  002880                     __ptext54:
  8677                           	opt callstack 0
  8678  002880                     _putsXLCD:
  8679                           	opt callstack 0
  8680  002880  FFFF               	dw	65535	; assembler added errata NOP
  8681                           
  8682                           ;lcd_pic16.c: 419: void putsXLCD(char *buffer);lcd_pic16.c: 420: {;lcd_pic16.c: 421:    
      +                               while(*buffer)
  8683                           
  8684                           ;incstack = 0
  8685  002882  D00F               	goto	i2l3780
  8686  002884                     i2l3774:
  8687  002884  FFFF               	dw	65535	; assembler added errata NOP
  8688  002886  EC22  F015         	call	i2_BusyXLCD	;wreg free
  8689  00288A  0900               	iorlw	0
  8690  00288C  A4D8               	btfss	status,2,c
  8691  00288E  D7FA               	goto	i2l3774
  8692                           
  8693                           ;lcd_pic16.c: 424:                 WriteDataXLCD(*buffer);
  8694  002890  C002  FFD9         	movff	putsXLCD@buffer,fsr2l
  8695  002894  C003  FFDA         	movff	putsXLCD@buffer+1,fsr2h
  8696  002898  50DF               	movf	indf2,w,c
  8697  00289A  EC8A  F013         	call	_WriteDataXLCD
  8698                           
  8699                           ;lcd_pic16.c: 425:                 buffer++;
  8700  00289E  4A02               	infsnz	putsXLCD@buffer,f,c
  8701  0028A0  2A03               	incf	putsXLCD@buffer+1,f,c
  8702  0028A2                     i2l3780:
  8703  0028A2  FFFF               	dw	65535	; assembler added errata NOP
  8704                           
  8705                           ;lcd_pic16.c: 421:         while(*buffer)
  8706  0028A4  C002  FFD9         	movff	putsXLCD@buffer,fsr2l
  8707  0028A8  C003  FFDA         	movff	putsXLCD@buffer+1,fsr2h
  8708  0028AC  50DF               	movf	indf2,w,c
  8709  0028AE  B4D8               	btfsc	status,2,c
  8710  0028B0  0012               	return		;funcret
  8711  0028B2  FFFF               	dw	65535	; assembler added errata NOP
  8712  0028B4  D7E7               	goto	i2l3774
  8713  0028B6  FFFF               	dw	65535	; errata NOP
  8714  0028B8                     __end_of_putsXLCD:
  8715                           	opt callstack 0
  8716                           
  8717 ;; *************** function i2_BusyXLCD *****************
  8718 ;; Defined at:
  8719 ;;		line 451 in file "lcd_pic16.c"
  8720 ;; Parameters:    Size  Location     Type
  8721 ;;		None
  8722 ;; Auto vars:     Size  Location     Type
  8723 ;;		None
  8724 ;; Return value:  Size  Location     Type
  8725 ;;                  1    wreg      unsigned char 
  8726 ;; Registers used:
  8727 ;;		wreg
  8728 ;; Tracked objects:
  8729 ;;		On entry : 0/0
  8730 ;;		On exit  : 0/0
  8731 ;;		Unchanged: 0/0
  8732 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8733 ;;      Params:         0       0       0       0       0       0       0
  8734 ;;      Locals:         0       0       0       0       0       0       0
  8735 ;;      Temps:          1       0       0       0       0       0       0
  8736 ;;      Totals:         1       0       0       0       0       0       0
  8737 ;;Total ram usage:        1 bytes
  8738 ;; Hardware stack levels used:    1
  8739 ;; This function calls:
  8740 ;;		Nothing
  8741 ;; This function is called by:
  8742 ;;		_putsXLCD
  8743 ;; This function uses a non-reentrant model
  8744 ;;
  8745                           
  8746                           	psect	text55
  8747  002A44                     __ptext55:
  8748                           	opt callstack 0
  8749  002A44                     i2_BusyXLCD:
  8750                           	opt callstack 0
  8751  002A44  FFFF               	dw	65535	; assembler added errata NOP
  8752                           
  8753                           ;lcd_pic16.c: 504:         _delay((unsigned long)((5)*(12000000/4000.0)));
  8754                           
  8755                           ;incstack = 0
  8756  002A46  0E0F               	movlw	15
  8757  002A48  6E01               	movwf	??i2_BusyXLCD& (0+255),c
  8758  002A4A  0E9E               	movlw	158
  8759  002A4C                     i2u390_47:
  8760  002A4C  FFFF               	dw	65535	; errata NOP
  8761  002A4E  2EE8               	decfsz	wreg,f,c
  8762  002A50  D7FD               	bra	i2u390_47
  8763  002A52  2E01               	decfsz	??i2_BusyXLCD& (0+255),f,c
  8764  002A54  D7FB               	bra	i2u390_47
  8765                           
  8766                           ;lcd_pic16.c: 505:         return 0;
  8767  002A56  0E00               	movlw	0
  8768  002A58  0012               	return		;funcret
  8769  002A5A  FFFF               	dw	65535	; errata NOP
  8770  002A5C                     __end_ofi2_BusyXLCD:
  8771                           	opt callstack 0
  8772                           
  8773 ;; *************** function _WriteDataXLCD *****************
  8774 ;; Defined at:
  8775 ;;		line 110 in file "lcd_pic16.c"
  8776 ;; Parameters:    Size  Location     Type
  8777 ;;  data            1    wreg     unsigned char 
  8778 ;; Auto vars:     Size  Location     Type
  8779 ;;  data            1    0[COMRAM] unsigned char 
  8780 ;; Return value:  Size  Location     Type
  8781 ;;                  1    wreg      void 
  8782 ;; Registers used:
  8783 ;;		wreg, status,2, status,0, cstack
  8784 ;; Tracked objects:
  8785 ;;		On entry : 0/0
  8786 ;;		On exit  : 0/0
  8787 ;;		Unchanged: 0/0
  8788 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8789 ;;      Params:         0       0       0       0       0       0       0
  8790 ;;      Locals:         1       0       0       0       0       0       0
  8791 ;;      Temps:          0       0       0       0       0       0       0
  8792 ;;      Totals:         1       0       0       0       0       0       0
  8793 ;;Total ram usage:        1 bytes
  8794 ;; Hardware stack levels used:    1
  8795 ;; Hardware stack levels required when called:    1
  8796 ;; This function calls:
  8797 ;;		i2_DelayFor18TCY
  8798 ;; This function is called by:
  8799 ;;		_putsXLCD
  8800 ;;		_putrsXLCD
  8801 ;; This function uses a non-reentrant model
  8802 ;;
  8803                           
  8804                           	psect	text56
  8805  002714                     __ptext56:
  8806                           	opt callstack 0
  8807  002714                     _WriteDataXLCD:
  8808                           	opt callstack 0
  8809  002714  FFFF               	dw	65535	; assembler added errata NOP
  8810                           
  8811                           ;incstack = 0
  8812                           ;WriteDataXLCD@data stored from wreg
  8813  002716  6E01               	movwf	WriteDataXLCD@data,c
  8814                           
  8815                           ;lcd_pic16.c: 110: void WriteDataXLCD(char data);lcd_pic16.c: 111: {;lcd_pic16.c: 125:  
      +                                 TRISD &= 0x0f;
  8816  002718  0E0F               	movlw	15
  8817  00271A  1695               	andwf	3989,f,c	;volatile
  8818                           
  8819                           ;lcd_pic16.c: 126:         PORTD &= 0x0f;
  8820  00271C  0E0F               	movlw	15
  8821  00271E  1683               	andwf	3971,f,c	;volatile
  8822                           
  8823                           ;lcd_pic16.c: 127:         PORTD |= data&0xf0;
  8824  002720  5001               	movf	WriteDataXLCD@data,w,c
  8825  002722  0BF0               	andlw	240
  8826  002724  1283               	iorwf	3971,f,c	;volatile
  8827                           
  8828                           ;lcd_pic16.c: 133:         PORTDbits.RD3 = 1;
  8829  002726  8683               	bsf	3971,3,c	;volatile
  8830                           
  8831                           ;lcd_pic16.c: 134:         PORTDbits.RD2 = 0;
  8832  002728  9483               	bcf	3971,2,c	;volatile
  8833                           
  8834                           ;lcd_pic16.c: 135:         DelayFor18TCY();
  8835  00272A  EC41  F015         	call	i2_DelayFor18TCY	;wreg free
  8836                           
  8837                           ;lcd_pic16.c: 136:         PORTDbits.RD1 = 1;
  8838  00272E  8283               	bsf	3971,1,c	;volatile
  8839                           
  8840                           ;lcd_pic16.c: 137:         DelayFor18TCY();
  8841  002730  EC41  F015         	call	i2_DelayFor18TCY	;wreg free
  8842                           
  8843                           ;lcd_pic16.c: 138:         PORTDbits.RD1 = 0;
  8844  002734  9283               	bcf	3971,1,c	;volatile
  8845                           
  8846                           ;lcd_pic16.c: 140:         PORTD &= 0x0f;
  8847  002736  0E0F               	movlw	15
  8848  002738  1683               	andwf	3971,f,c	;volatile
  8849                           
  8850                           ;lcd_pic16.c: 141:         PORTD |= ((data<<4)&0xf0);
  8851  00273A  3801               	swapf	WriteDataXLCD@data,w,c
  8852  00273C  0BF0               	andlw	240
  8853  00273E  0BF0               	andlw	240
  8854  002740  1283               	iorwf	3971,f,c	;volatile
  8855                           
  8856                           ;lcd_pic16.c: 146:         DelayFor18TCY();
  8857  002742  EC41  F015         	call	i2_DelayFor18TCY	;wreg free
  8858                           
  8859                           ;lcd_pic16.c: 147:         PORTDbits.RD1 = 1;
  8860  002746  8283               	bsf	3971,1,c	;volatile
  8861                           
  8862                           ;lcd_pic16.c: 148:         DelayFor18TCY();
  8863  002748  EC41  F015         	call	i2_DelayFor18TCY	;wreg free
  8864                           
  8865                           ;lcd_pic16.c: 149:         PORTDbits.RD1 = 0;
  8866  00274C  9283               	bcf	3971,1,c	;volatile
  8867                           
  8868                           ;lcd_pic16.c: 151:         TRISD |= 0xf0;
  8869  00274E  0EF0               	movlw	240
  8870  002750  1295               	iorwf	3989,f,c	;volatile
  8871  002752  0012               	return		;funcret
  8872  002754  FFFF               	dw	65535	; errata NOP
  8873  002756                     __end_of_WriteDataXLCD:
  8874                           	opt callstack 0
  8875                           
  8876 ;; *************** function i2_DelayFor18TCY *****************
  8877 ;; Defined at:
  8878 ;;		line 22 in file "lcd_pic16.c"
  8879 ;; Parameters:    Size  Location     Type
  8880 ;;		None
  8881 ;; Auto vars:     Size  Location     Type
  8882 ;;		None
  8883 ;; Return value:  Size  Location     Type
  8884 ;;                  1    wreg      void 
  8885 ;; Registers used:
  8886 ;;		wreg
  8887 ;; Tracked objects:
  8888 ;;		On entry : 0/0
  8889 ;;		On exit  : 0/0
  8890 ;;		Unchanged: 0/0
  8891 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8892 ;;      Params:         0       0       0       0       0       0       0
  8893 ;;      Locals:         0       0       0       0       0       0       0
  8894 ;;      Temps:          0       0       0       0       0       0       0
  8895 ;;      Totals:         0       0       0       0       0       0       0
  8896 ;;Total ram usage:        0 bytes
  8897 ;; Hardware stack levels used:    1
  8898 ;; This function calls:
  8899 ;;		Nothing
  8900 ;; This function is called by:
  8901 ;;		_WriteDataXLCD
  8902 ;;		i2_SetDDRamAddr
  8903 ;; This function uses a non-reentrant model
  8904 ;;
  8905                           
  8906                           	psect	text57
  8907  002A82                     __ptext57:
  8908                           	opt callstack 0
  8909  002A82                     i2_DelayFor18TCY:
  8910                           	opt callstack 0
  8911  002A82  FFFF               	dw	65535	; assembler added errata NOP
  8912                           
  8913                           ;lcd_pic16.c: 24:    _delay((unsigned long)((18)*(12000000/4000000.0)));
  8914                           
  8915                           ;incstack = 0
  8916  002A84  0E0D               	movlw	13
  8917  002A86                     i2u391_47:
  8918  002A86  FFFF               	dw	65535	; errata NOP
  8919  002A88  2EE8               	decfsz	wreg,f,c
  8920  002A8A  D7FD               	bra	i2u391_47
  8921  002A8C  D000               	nop2	
  8922  002A8E  0012               	return		;funcret
  8923  002A90  FFFF               	dw	65535	; errata NOP
  8924  002A92                     __end_ofi2_DelayFor18TCY:
  8925                           	opt callstack 0
  8926                           
  8927 ;; *************** function ___lwmod *****************
  8928 ;; Defined at:
  8929 ;;		line 7 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/lwmod.c"
  8930 ;; Parameters:    Size  Location     Type
  8931 ;;  dividend        2    0[COMRAM] unsigned int 
  8932 ;;  divisor         2    2[COMRAM] unsigned int 
  8933 ;; Auto vars:     Size  Location     Type
  8934 ;;  counter         1    4[COMRAM] unsigned char 
  8935 ;; Return value:  Size  Location     Type
  8936 ;;                  2    0[COMRAM] unsigned int 
  8937 ;; Registers used:
  8938 ;;		wreg, status,2, status,0
  8939 ;; Tracked objects:
  8940 ;;		On entry : 0/0
  8941 ;;		On exit  : 0/0
  8942 ;;		Unchanged: 0/0
  8943 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8944 ;;      Params:         4       0       0       0       0       0       0
  8945 ;;      Locals:         1       0       0       0       0       0       0
  8946 ;;      Temps:          0       0       0       0       0       0       0
  8947 ;;      Totals:         5       0       0       0       0       0       0
  8948 ;;Total ram usage:        5 bytes
  8949 ;; Hardware stack levels used:    1
  8950 ;; This function calls:
  8951 ;;		Nothing
  8952 ;; This function is called by:
  8953 ;;		_updateLCD
  8954 ;; This function uses a non-reentrant model
  8955 ;;
  8956                           
  8957                           	psect	text58
  8958  002492                     __ptext58:
  8959                           	opt callstack 0
  8960  002492                     ___lwmod:
  8961                           	opt callstack 0
  8962  002492  FFFF               	dw	65535	; assembler added errata NOP
  8963                           
  8964                           ;incstack = 0
  8965  002494  5003               	movf	___lwmod@divisor,w,c
  8966  002496  1004               	iorwf	___lwmod@divisor+1,w,c
  8967  002498  B4D8               	btfsc	status,2,c
  8968  00249A  D01C               	goto	i2l1116
  8969  00249C  0E01               	movlw	1
  8970  00249E  6E05               	movwf	___lwmod@counter,c
  8971  0024A0  D005               	goto	i2l3810
  8972  0024A2                     i2l3808:
  8973  0024A2  FFFF               	dw	65535	; assembler added errata NOP
  8974  0024A4  90D8               	bcf	status,0,c
  8975  0024A6  3603               	rlcf	___lwmod@divisor,f,c
  8976  0024A8  3604               	rlcf	___lwmod@divisor+1,f,c
  8977  0024AA  2A05               	incf	___lwmod@counter,f,c
  8978  0024AC                     i2l3810:
  8979  0024AC  FFFF               	dw	65535	; assembler added errata NOP
  8980  0024AE  AE04               	btfss	___lwmod@divisor+1,7,c
  8981  0024B0  D7F8               	goto	i2l3808
  8982  0024B2                     i2u335_40:
  8983  0024B2  FFFF               	dw	65535	; assembler added errata NOP
  8984  0024B4  5003               	movf	___lwmod@divisor,w,c
  8985  0024B6  5C01               	subwf	___lwmod@dividend,w,c
  8986  0024B8  5004               	movf	___lwmod@divisor+1,w,c
  8987  0024BA  5802               	subwfb	___lwmod@dividend+1,w,c
  8988  0024BC  A0D8               	btfss	status,0,c
  8989  0024BE  D004               	goto	i2l3816
  8990  0024C0  5003               	movf	___lwmod@divisor,w,c
  8991  0024C2  5E01               	subwf	___lwmod@dividend,f,c
  8992  0024C4  5004               	movf	___lwmod@divisor+1,w,c
  8993  0024C6  5A02               	subwfb	___lwmod@dividend+1,f,c
  8994  0024C8                     i2l3816:
  8995  0024C8  FFFF               	dw	65535	; assembler added errata NOP
  8996  0024CA  90D8               	bcf	status,0,c
  8997  0024CC  3204               	rrcf	___lwmod@divisor+1,f,c
  8998  0024CE  3203               	rrcf	___lwmod@divisor,f,c
  8999  0024D0  2E05               	decfsz	___lwmod@counter,f,c
  9000  0024D2  D7EF               	goto	i2u335_40
  9001  0024D4                     i2l1116:
  9002  0024D4  FFFF               	dw	65535	; assembler added errata NOP
  9003  0024D6  C001  F001         	movff	___lwmod@dividend,?___lwmod
  9004  0024DA  C002  F002         	movff	___lwmod@dividend+1,?___lwmod+1
  9005  0024DE  0012               	return		;funcret
  9006  0024E0  FFFF               	dw	65535	; errata NOP
  9007  0024E2                     __end_of___lwmod:
  9008                           	opt callstack 0
  9009                           
  9010 ;; *************** function ___lwdiv *****************
  9011 ;; Defined at:
  9012 ;;		line 7 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/lwdiv.c"
  9013 ;; Parameters:    Size  Location     Type
  9014 ;;  dividend        2    0[COMRAM] unsigned int 
  9015 ;;  divisor         2    2[COMRAM] unsigned int 
  9016 ;; Auto vars:     Size  Location     Type
  9017 ;;  quotient        2    4[COMRAM] unsigned int 
  9018 ;;  counter         1    6[COMRAM] unsigned char 
  9019 ;; Return value:  Size  Location     Type
  9020 ;;                  2    0[COMRAM] unsigned int 
  9021 ;; Registers used:
  9022 ;;		wreg, status,2, status,0
  9023 ;; Tracked objects:
  9024 ;;		On entry : 0/0
  9025 ;;		On exit  : 0/0
  9026 ;;		Unchanged: 0/0
  9027 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9028 ;;      Params:         4       0       0       0       0       0       0
  9029 ;;      Locals:         3       0       0       0       0       0       0
  9030 ;;      Temps:          0       0       0       0       0       0       0
  9031 ;;      Totals:         7       0       0       0       0       0       0
  9032 ;;Total ram usage:        7 bytes
  9033 ;; Hardware stack levels used:    1
  9034 ;; This function calls:
  9035 ;;		Nothing
  9036 ;; This function is called by:
  9037 ;;		_updateLCD
  9038 ;; This function uses a non-reentrant model
  9039 ;;
  9040                           
  9041                           	psect	text59
  9042  002332                     __ptext59:
  9043                           	opt callstack 0
  9044  002332                     ___lwdiv:
  9045                           	opt callstack 0
  9046  002332  FFFF               	dw	65535	; assembler added errata NOP
  9047                           
  9048                           ;incstack = 0
  9049  002334  0E00               	movlw	0
  9050  002336  6E06               	movwf	___lwdiv@quotient+1,c
  9051  002338  0E00               	movlw	0
  9052  00233A  6E05               	movwf	___lwdiv@quotient,c
  9053  00233C  5003               	movf	___lwdiv@divisor,w,c
  9054  00233E  1004               	iorwf	___lwdiv@divisor+1,w,c
  9055  002340  B4D8               	btfsc	status,2,c
  9056  002342  D020               	goto	i2l1106
  9057  002344  0E01               	movlw	1
  9058  002346  6E07               	movwf	___lwdiv@counter,c
  9059  002348  D005               	goto	i2l3790
  9060  00234A                     i2l3788:
  9061  00234A  FFFF               	dw	65535	; assembler added errata NOP
  9062  00234C  90D8               	bcf	status,0,c
  9063  00234E  3603               	rlcf	___lwdiv@divisor,f,c
  9064  002350  3604               	rlcf	___lwdiv@divisor+1,f,c
  9065  002352  2A07               	incf	___lwdiv@counter,f,c
  9066  002354                     i2l3790:
  9067  002354  FFFF               	dw	65535	; assembler added errata NOP
  9068  002356  AE04               	btfss	___lwdiv@divisor+1,7,c
  9069  002358  D7F8               	goto	i2l3788
  9070  00235A                     i2u332_40:
  9071  00235A  FFFF               	dw	65535	; assembler added errata NOP
  9072  00235C  90D8               	bcf	status,0,c
  9073  00235E  3605               	rlcf	___lwdiv@quotient,f,c
  9074  002360  3606               	rlcf	___lwdiv@quotient+1,f,c
  9075  002362  5003               	movf	___lwdiv@divisor,w,c
  9076  002364  5C01               	subwf	___lwdiv@dividend,w,c
  9077  002366  5004               	movf	___lwdiv@divisor+1,w,c
  9078  002368  5802               	subwfb	___lwdiv@dividend+1,w,c
  9079  00236A  A0D8               	btfss	status,0,c
  9080  00236C  D005               	goto	i2l3800
  9081  00236E  5003               	movf	___lwdiv@divisor,w,c
  9082  002370  5E01               	subwf	___lwdiv@dividend,f,c
  9083  002372  5004               	movf	___lwdiv@divisor+1,w,c
  9084  002374  5A02               	subwfb	___lwdiv@dividend+1,f,c
  9085  002376  8005               	bsf	___lwdiv@quotient,0,c
  9086  002378                     i2l3800:
  9087  002378  FFFF               	dw	65535	; assembler added errata NOP
  9088  00237A  90D8               	bcf	status,0,c
  9089  00237C  3204               	rrcf	___lwdiv@divisor+1,f,c
  9090  00237E  3203               	rrcf	___lwdiv@divisor,f,c
  9091  002380  2E07               	decfsz	___lwdiv@counter,f,c
  9092  002382  D7EB               	goto	i2u332_40
  9093  002384                     i2l1106:
  9094  002384  FFFF               	dw	65535	; assembler added errata NOP
  9095  002386  C005  F001         	movff	___lwdiv@quotient,?___lwdiv
  9096  00238A  C006  F002         	movff	___lwdiv@quotient+1,?___lwdiv+1
  9097  00238E  0012               	return		;funcret
  9098  002390  FFFF               	dw	65535	; errata NOP
  9099  002392                     __end_of___lwdiv:
  9100                           	opt callstack 0
  9101                           
  9102 ;; *************** function _time *****************
  9103 ;; Defined at:
  9104 ;;		line 106 in file "main.c"
  9105 ;; Parameters:    Size  Location     Type
  9106 ;;		None
  9107 ;; Auto vars:     Size  Location     Type
  9108 ;;		None
  9109 ;; Return value:  Size  Location     Type
  9110 ;;                  1    wreg      void 
  9111 ;; Registers used:
  9112 ;;		wreg, status,2, status,0, cstack
  9113 ;; Tracked objects:
  9114 ;;		On entry : 0/0
  9115 ;;		On exit  : 0/0
  9116 ;;		Unchanged: 0/0
  9117 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9118 ;;      Params:         0       0       0       0       0       0       0
  9119 ;;      Locals:         0       0       0       0       0       0       0
  9120 ;;      Temps:          0       0       0       0       0       0       0
  9121 ;;      Totals:         0       0       0       0       0       0       0
  9122 ;;Total ram usage:        0 bytes
  9123 ;; Hardware stack levels used:    1
  9124 ;; Hardware stack levels required when called:    2
  9125 ;; This function calls:
  9126 ;;		i2_setData
  9127 ;; This function is called by:
  9128 ;;		_inter
  9129 ;; This function uses a non-reentrant model
  9130 ;;
  9131                           
  9132                           	psect	text60
  9133  002132                     __ptext60:
  9134                           	opt callstack 0
  9135  002132                     _time:
  9136                           	opt callstack 0
  9137  002132  FFFF               	dw	65535	; assembler added errata NOP
  9138                           
  9139                           ;main.c: 107:     hundredMiliSeconds++;
  9140                           
  9141                           ;incstack = 0
  9142  002134  0100               	movlb	0	; () banked
  9143  002136  2BF9               	incf	_hundredMiliSeconds& (0+255),f,b
  9144                           
  9145                           ; BSR set to: 0
  9146                           ;main.c: 108:     if(hundredMiliSeconds >= 10){
  9147  002138  0E09               	movlw	9
  9148  00213A  65F9               	cpfsgt	_hundredMiliSeconds& (0+255),b
  9149  00213C  D02E               	goto	i2l236
  9150                           
  9151                           ; BSR set to: 0
  9152                           ;main.c: 109:         hundredMiliSeconds = 0;
  9153  00213E  0E00               	movlw	0
  9154  002140  6FF9               	movwf	_hundredMiliSeconds& (0+255),b
  9155                           
  9156                           ; BSR set to: 0
  9157                           ;main.c: 110:         seconds++;
  9158  002142  2BFA               	incf	_seconds& (0+255),f,b
  9159                           
  9160                           ; BSR set to: 0
  9161                           ;main.c: 111:         if(seconds >= 60){
  9162  002144  0E3B               	movlw	59
  9163  002146  65FA               	cpfsgt	_seconds& (0+255),b
  9164  002148  D028               	goto	i2l236
  9165                           
  9166                           ; BSR set to: 0
  9167                           ;main.c: 112:             seconds = 0;
  9168  00214A  0E00               	movlw	0
  9169  00214C  6FFA               	movwf	_seconds& (0+255),b
  9170                           
  9171                           ; BSR set to: 0
  9172                           ;main.c: 113:             minutes++;
  9173  00214E  2BFC               	incf	_minutes& (0+255),f,b
  9174                           
  9175                           ; BSR set to: 0
  9176                           ;main.c: 114:             setData(0);
  9177  002150  0E00               	movlw	0
  9178  002152  EC60  F010         	call	i2_setData
  9179                           
  9180                           ;main.c: 115:             if(minutes >= 60){
  9181  002156  0E3B               	movlw	59
  9182  002158  0100               	movlb	0	; () banked
  9183  00215A  65FC               	cpfsgt	_minutes& (0+255),b
  9184  00215C  D01E               	goto	i2l236
  9185                           
  9186                           ; BSR set to: 0
  9187                           ;main.c: 116:                 minutes = 0;
  9188  00215E  0E00               	movlw	0
  9189  002160  6FFC               	movwf	_minutes& (0+255),b
  9190                           
  9191                           ; BSR set to: 0
  9192                           ;main.c: 117:                 hours++;
  9193  002162  2BFD               	incf	_hours& (0+255),f,b
  9194                           
  9195                           ; BSR set to: 0
  9196                           ;main.c: 118:                 if(hours >= 24){
  9197  002164  0E17               	movlw	23
  9198  002166  65FD               	cpfsgt	_hours& (0+255),b
  9199  002168  D018               	goto	i2l236
  9200                           
  9201                           ; BSR set to: 0
  9202                           ;main.c: 119:                     hours = 0;
  9203  00216A  0E00               	movlw	0
  9204  00216C  6FFD               	movwf	_hours& (0+255),b
  9205                           
  9206                           ; BSR set to: 0
  9207                           ;main.c: 120:                     days++;
  9208  00216E  2BFE               	incf	_days& (0+255),f,b
  9209                           
  9210                           ; BSR set to: 0
  9211                           ;main.c: 121:                     if(days >= 30){
  9212  002170  0E1D               	movlw	29
  9213  002172  65FE               	cpfsgt	_days& (0+255),b
  9214  002174  D003               	goto	i2l4000
  9215                           
  9216                           ; BSR set to: 0
  9217                           ;main.c: 122:                         days = 0;
  9218  002176  0E00               	movlw	0
  9219  002178  6FFE               	movwf	_days& (0+255),b
  9220                           
  9221                           ; BSR set to: 0
  9222                           ;main.c: 123:                         months++;
  9223  00217A  2BFF               	incf	_months& (0+255),f,b
  9224  00217C                     i2l4000:
  9225  00217C  FFFF               	dw	65535	; assembler added errata NOP
  9226                           
  9227                           ; BSR set to: 0
  9228  00217E  0E0D               	movlw	13
  9229  002180  19FE               	xorwf	_days& (0+255),w,b
  9230  002182  A4D8               	btfss	status,2,c
  9231  002184  D006               	goto	i2l4006
  9232                           
  9233                           ; BSR set to: 0
  9234  002186  0E06               	movlw	6
  9235  002188  19FF               	xorwf	_months& (0+255),w,b
  9236  00218A  A4D8               	btfss	status,2,c
  9237  00218C  D002               	goto	i2l4006
  9238                           
  9239                           ; BSR set to: 0
  9240  00218E  0E00               	movlw	0
  9241  002190  D002               	goto	L13
  9242  002192                     i2l4006:
  9243  002192  FFFF               	dw	65535	; assembler added errata NOP
  9244                           
  9245                           ; BSR set to: 0
  9246  002194  0E01               	movlw	1
  9247  002196                     L13:
  9248  002196  FFFF               	dw	65535	; assembler added errata NOP
  9249  002198  6FF8               	movwf	_functionalStat& (0+255),b
  9250  00219A                     i2l236:
  9251  00219A  FFFF               	dw	65535	; assembler added errata NOP
  9252                           
  9253                           ; BSR set to: 0
  9254  00219C  0012               	return		;funcret
  9255  00219E  FFFF               	dw	65535	; errata NOP
  9256  0021A0                     __end_of_time:
  9257                           	opt callstack 0
  9258                           
  9259 ;; *************** function i2_setData *****************
  9260 ;; Defined at:
  9261 ;;		line 46 in file "eeprom.c"
  9262 ;; Parameters:    Size  Location     Type
  9263 ;;  full            1    wreg     unsigned char 
  9264 ;; Auto vars:     Size  Location     Type
  9265 ;;  full            1    4[COMRAM] unsigned char 
  9266 ;;  setData         1    3[COMRAM] unsigned char 
  9267 ;;  setData         1    2[COMRAM] unsigned char 
  9268 ;; Return value:  Size  Location     Type
  9269 ;;                  1    wreg      void 
  9270 ;; Registers used:
  9271 ;;		wreg, status,2, cstack
  9272 ;; Tracked objects:
  9273 ;;		On entry : 0/0
  9274 ;;		On exit  : 0/0
  9275 ;;		Unchanged: 0/0
  9276 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9277 ;;      Params:         0       0       0       0       0       0       0
  9278 ;;      Locals:         3       0       0       0       0       0       0
  9279 ;;      Temps:          0       0       0       0       0       0       0
  9280 ;;      Totals:         3       0       0       0       0       0       0
  9281 ;;Total ram usage:        3 bytes
  9282 ;; Hardware stack levels used:    1
  9283 ;; Hardware stack levels required when called:    1
  9284 ;; This function calls:
  9285 ;;		i2_writeEEPROM
  9286 ;; This function is called by:
  9287 ;;		_time
  9288 ;; This function uses a non-reentrant model
  9289 ;;
  9290                           
  9291                           	psect	text61
  9292  0020C0                     __ptext61:
  9293                           	opt callstack 0
  9294  0020C0                     i2_setData:
  9295                           	opt callstack 0
  9296  0020C0  FFFF               	dw	65535	; assembler added errata NOP
  9297                           
  9298                           ; BSR set to: 0
  9299                           ;incstack = 0
  9300                           ;i2setData@full stored from wreg
  9301  0020C2  6E05               	movwf	i2setData@full,c
  9302                           
  9303                           ;eeprom.c: 47:     unsigned char data0 = frequency & 0x00FF;
  9304  0020C4  C0F6  F003         	movff	_frequency,i2setData@data0
  9305                           
  9306                           ;eeprom.c: 48:     unsigned char data1 = frequency >> 8;
  9307  0020C8  0100               	movlb	0	; () banked
  9308  0020CA  51F7               	movf	(_frequency+1)& (0+255),w,b
  9309  0020CC  6E04               	movwf	i2setData@data1,c
  9310                           
  9311                           ; BSR set to: 0
  9312                           ;eeprom.c: 49:     if(full)writeEEPROM(data0 ,0);
  9313  0020CE  5005               	movf	i2setData@full,w,c
  9314  0020D0  B4D8               	btfsc	status,2,c
  9315  0020D2  D005               	goto	i2l3828
  9316                           
  9317                           ; BSR set to: 0
  9318  0020D4  0E00               	movlw	0
  9319  0020D6  6E01               	movwf	i2writeEEPROM@address,c
  9320  0020D8  5003               	movf	i2setData@data0,w,c
  9321  0020DA  ECBD  F014         	call	i2_writeEEPROM
  9322  0020DE                     i2l3828:
  9323  0020DE  FFFF               	dw	65535	; assembler added errata NOP
  9324                           
  9325                           ;eeprom.c: 50:     if(full)writeEEPROM(data1 ,1);
  9326  0020E0  5005               	movf	i2setData@full,w,c
  9327  0020E2  B4D8               	btfsc	status,2,c
  9328  0020E4  D005               	goto	i2l68
  9329  0020E6  0E01               	movlw	1
  9330  0020E8  6E01               	movwf	i2writeEEPROM@address,c
  9331  0020EA  5004               	movf	i2setData@data1,w,c
  9332  0020EC  ECBD  F014         	call	i2_writeEEPROM
  9333  0020F0                     i2l68:
  9334  0020F0  FFFF               	dw	65535	; assembler added errata NOP
  9335                           
  9336                           ;eeprom.c: 51:     writeEEPROM(months ,2);
  9337  0020F2  0E02               	movlw	2
  9338  0020F4  6E01               	movwf	i2writeEEPROM@address,c
  9339  0020F6  0100               	movlb	0	; () banked
  9340  0020F8  51FF               	movf	_months& (0+255),w,b
  9341  0020FA  ECBD  F014         	call	i2_writeEEPROM
  9342                           
  9343                           ;eeprom.c: 52:     writeEEPROM(days ,3);
  9344  0020FE  0E03               	movlw	3
  9345  002100  6E01               	movwf	i2writeEEPROM@address,c
  9346  002102  0100               	movlb	0	; () banked
  9347  002104  51FE               	movf	_days& (0+255),w,b
  9348  002106  ECBD  F014         	call	i2_writeEEPROM
  9349                           
  9350                           ;eeprom.c: 53:     writeEEPROM(hours ,4);
  9351  00210A  0E04               	movlw	4
  9352  00210C  6E01               	movwf	i2writeEEPROM@address,c
  9353  00210E  0100               	movlb	0	; () banked
  9354  002110  51FD               	movf	_hours& (0+255),w,b
  9355  002112  ECBD  F014         	call	i2_writeEEPROM
  9356                           
  9357                           ;eeprom.c: 54:     writeEEPROM(minutes ,5);
  9358  002116  0E05               	movlw	5
  9359  002118  6E01               	movwf	i2writeEEPROM@address,c
  9360  00211A  0100               	movlb	0	; () banked
  9361  00211C  51FC               	movf	_minutes& (0+255),w,b
  9362  00211E  ECBD  F014         	call	i2_writeEEPROM
  9363                           
  9364                           ;eeprom.c: 55:     writeEEPROM(functionalStat ,6);
  9365  002122  0E06               	movlw	6
  9366  002124  6E01               	movwf	i2writeEEPROM@address,c
  9367  002126  0100               	movlb	0	; () banked
  9368  002128  51F8               	movf	_functionalStat& (0+255),w,b
  9369  00212A  ECBD  F014         	call	i2_writeEEPROM
  9370  00212E  0012               	return		;funcret
  9371  002130  FFFF               	dw	65535	; errata NOP
  9372  002132                     __end_ofi2_setData:
  9373                           	opt callstack 0
  9374                           
  9375 ;; *************** function i2_writeEEPROM *****************
  9376 ;; Defined at:
  9377 ;;		line 15 in file "eeprom.c"
  9378 ;; Parameters:    Size  Location     Type
  9379 ;;  data            1    wreg     unsigned char 
  9380 ;;  address         1    0[COMRAM] unsigned char 
  9381 ;; Auto vars:     Size  Location     Type
  9382 ;;  data            1    1[COMRAM] unsigned char 
  9383 ;; Return value:  Size  Location     Type
  9384 ;;                  1    wreg      void 
  9385 ;; Registers used:
  9386 ;;		wreg, status,2
  9387 ;; Tracked objects:
  9388 ;;		On entry : 0/0
  9389 ;;		On exit  : 0/0
  9390 ;;		Unchanged: 0/0
  9391 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9392 ;;      Params:         1       0       0       0       0       0       0
  9393 ;;      Locals:         1       0       0       0       0       0       0
  9394 ;;      Temps:          0       0       0       0       0       0       0
  9395 ;;      Totals:         2       0       0       0       0       0       0
  9396 ;;Total ram usage:        2 bytes
  9397 ;; Hardware stack levels used:    1
  9398 ;; This function calls:
  9399 ;;		Nothing
  9400 ;; This function is called by:
  9401 ;;		i2_setData
  9402 ;; This function uses a non-reentrant model
  9403 ;;
  9404                           
  9405                           	psect	text62
  9406  00297A                     __ptext62:
  9407                           	opt callstack 0
  9408  00297A                     i2_writeEEPROM:
  9409                           	opt callstack 0
  9410  00297A  FFFF               	dw	65535	; assembler added errata NOP
  9411                           
  9412                           ;incstack = 0
  9413                           ;i2writeEEPROM@data stored from wreg
  9414  00297C  6E02               	movwf	i2writeEEPROM@data,c
  9415                           
  9416                           ;eeprom.c: 16:     EEADR = address;
  9417  00297E  C001  FFA9         	movff	i2writeEEPROM@address,4009	;volatile
  9418                           
  9419                           ;eeprom.c: 17:     EEDATA = data;
  9420  002982  C002  FFA8         	movff	i2writeEEPROM@data,4008	;volatile
  9421                           
  9422                           ;eeprom.c: 19:     EECON1bits.EEPGD = 0;
  9423  002986  9EA6               	bcf	4006,7,c	;volsfr
  9424                           
  9425                           ;eeprom.c: 20:     EECON1bits.CFGS = 0;
  9426  002988  9CA6               	bcf	4006,6,c	;volsfr
  9427                           
  9428                           ;eeprom.c: 21:     EECON1bits.WREN = 1;
  9429  00298A  84A6               	bsf	4006,2,c	;volsfr
  9430                           
  9431                           ;eeprom.c: 23:     INTCONbits.GIE = 0;
  9432  00298C  9EF2               	bcf	4082,7,c	;volatile
  9433                           
  9434                           ;eeprom.c: 24:     EECON2 = 0x55;
  9435  00298E  0E55               	movlw	85
  9436  002990  6EA7               	movwf	4007,c	;volsfr
  9437                           
  9438                           ;eeprom.c: 25:     EECON2 = 0xAA;
  9439  002992  0EAA               	movlw	170
  9440  002994  6EA7               	movwf	4007,c	;volsfr
  9441                           
  9442                           ;eeprom.c: 26:     EECON1bits.WR = 1;
  9443  002996  82A6               	bsf	4006,1,c	;volsfr
  9444                           
  9445                           ;eeprom.c: 27:     INTCONbits.GIE = 1;
  9446  002998  8EF2               	bsf	4082,7,c	;volatile
  9447  00299A                     i2l58:
  9448  00299A  FFFF               	dw	65535	; assembler added errata NOP
  9449  00299C  B8A1               	btfsc	4001,4,c	;volatile
  9450  00299E  0012               	return		;funcret
  9451  0029A0  FFFF               	dw	65535	; assembler added errata NOP
  9452  0029A2  D7FB               	goto	i2l58
  9453  0029A4  FFFF               	dw	65535	; errata NOP
  9454  0029A6                     __end_ofi2_writeEEPROM:
  9455                           	opt callstack 0
  9456                           
  9457                           	psect	rparam
  9458  0000                     
  9459                           	psect	temp
  9460  00007F                     btemp:
  9461                           	opt callstack 0
  9462  00007F                     	ds	1
  9463  0000                     int$flags	set	btemp
  9464  0000                     wtemp8	set	btemp+1
  9465  0000                     ttemp5	set	btemp+1
  9466  0000                     ttemp6	set	btemp+4
  9467  0000                     ttemp7	set	btemp+8
  9468                           tosu	equ	0xFFF
  9469                           tosh	equ	0xFFE
  9470                           tosl	equ	0xFFD
  9471                           stkptr	equ	0xFFC
  9472                           pclatu	equ	0xFFB
  9473                           pclath	equ	0xFFA
  9474                           pcl	equ	0xFF9
  9475                           tblptru	equ	0xFF8
  9476                           tblptrh	equ	0xFF7
  9477                           tblptrl	equ	0xFF6
  9478                           tablat	equ	0xFF5
  9479                           prodh	equ	0xFF4
  9480                           prodl	equ	0xFF3
  9481                           indf0	equ	0xFEF
  9482                           postinc0	equ	0xFEE
  9483                           postdec0	equ	0xFED
  9484                           preinc0	equ	0xFEC
  9485                           plusw0	equ	0xFEB
  9486                           fsr0h	equ	0xFEA
  9487                           fsr0l	equ	0xFE9
  9488                           wreg	equ	0xFE8
  9489                           indf1	equ	0xFE7
  9490                           postinc1	equ	0xFE6
  9491                           postdec1	equ	0xFE5
  9492                           preinc1	equ	0xFE4
  9493                           plusw1	equ	0xFE3
  9494                           fsr1h	equ	0xFE2
  9495                           fsr1l	equ	0xFE1
  9496                           bsr	equ	0xFE0
  9497                           indf2	equ	0xFDF
  9498                           postinc2	equ	0xFDE
  9499                           postdec2	equ	0xFDD
  9500                           preinc2	equ	0xFDC
  9501                           plusw2	equ	0xFDB
  9502                           fsr2h	equ	0xFDA
  9503                           fsr2l	equ	0xFD9
  9504                           status	equ	0xFD8


Data Sizes:
    Strings     69
    Constant    4
    Data        9
    BSS         80
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126    121     126
    BANK0           128    110     128
    BANK1           256      0      66
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    i2sprintf@f.buffer	PTR unsigned char  size(2) Largest target is 0
		 -> lineTwo(BANK1[17]), lineOne(BANK1[17]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 18
		 -> STR_4(CODE[18]), STR_3(CODE[17]), STR_2(CODE[17]), STR_1(CODE[17]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 17
		 -> lineTwo(BANK1[17]), lineOne(BANK1[17]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 17
		 -> lineTwo(BANK1[17]), lineOne(BANK1[17]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    S1521_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 17
		 -> lineTwo(BANK1[17]), lineOne(BANK1[17]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 17
		 -> lineTwo(BANK1[17]), lineOne(BANK1[17]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 18
		 -> STR_4(CODE[18]), STR_3(CODE[17]), STR_2(CODE[17]), STR_1(CODE[17]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 18
		 -> STR_4(CODE[18]), STR_3(CODE[17]), STR_2(CODE[17]), STR_1(CODE[17]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 18
		 -> STR_4(CODE[18]), STR_3(CODE[17]), STR_2(CODE[17]), STR_1(CODE[17]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    putsXLCD@buffer	PTR unsigned char  size(2) Largest target is 17
		 -> lineTwo(BANK1[17]), lineOne(BANK1[17]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _inter in COMRAM

    _inter->_updateLCD
    _updateLCD->i2_sprintf
    i2_sprintf->i2_vfprintf
    i2_vfprintf->i2_vfpfcnvrt
    i2_vfpfcnvrt->i2_dtoa
    i2_dtoa->i2_pad
    i2_pad->i2_fputs
    i2_fputs->i2_fputc
    i2_abs->i2___aomod
    i2_atoi->i2_isspace
    _putsXLCD->_WriteDataXLCD
    _putsXLCD->i2_BusyXLCD
    _time->i2_setData
    i2_setData->i2_writeEEPROM

Critical Paths under _main in BANK0

    _main->_setFrequency
    _setFrequency->_sprintf
    _writeFrequency->_codFreq
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _atoi->_isspace
    _setData->_writeEEPROM
    _beep->___wmul
    _getData->_readEEPROM
    _config->_initLCD
    _initLCD->_OpenXLCD
    _SendCMDLCD->_BusyXLCD
    _SendCMDLCD->_WriteCmdXLCD
    _OpenXLCD->_BusyXLCD
    _OpenXLCD->_DelayPORXLCD
    _OpenXLCD->_SetDDRamAddr
    _OpenXLCD->_WriteCmdXLCD

Critical Paths under _inter in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _inter in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _inter in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _inter in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _inter in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _inter in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0   21712
                                            107 BANK0      3     3      0
                               _beep
                             _config
                            _getData
                       _setFrequency
                            _sprintf
                     _writeFrequency
 ---------------------------------------------------------------------------------
 (1) _setFrequency                                         2     2      0   11044
                                            105 BANK0      2     2      0
                               _beep
                            _setData
                            _sprintf
                     _writeFrequency
 ---------------------------------------------------------------------------------
 (1) _writeFrequency                                      10     8      2     432
                                              2 BANK0     10     8      2
                            _codFreq
 ---------------------------------------------------------------------------------
 (2) _codFreq                                              2     0      2     144
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             14    10      4    8715
                                             91 BANK0     14    10      4
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6    7947
                                             83 BANK0      8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           46    40      6    7562
                                             63 BANK0     20    14      6
                               _atoi
                               _dtoa
                              _fputc
                            _isdigit
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                36    26     10    4358
                                             27 BANK0     36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    2709
                                             16 BANK0     11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               4     2      2     166
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    1235
                                              9 BANK0      7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4     834
                                              0 BANK0      9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     142
                                             18 BANK0      4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             18     2     16     448
                                              0 BANK0     18     2     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             26    10     16     452
                                              0 BANK0     26    10     16
 ---------------------------------------------------------------------------------
 (4) _atoi                                                15    13      2    1396
                                              7 BANK0     15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (5) _isspace                                              7     5      2     207
                                              0 BANK0      7     5      2
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              6     4      2     237
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (2) _setData                                              3     3      0     666
                                              2 BANK0      3     3      0
                        _writeEEPROM
 ---------------------------------------------------------------------------------
 (3) _writeEEPROM                                          2     1      1     576
                                              0 BANK0      2     1      1
 ---------------------------------------------------------------------------------
 (2) _beep                                                 2     0      2    1231
                                              6 BANK0      2     0      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     555
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) _getData                                              4     4      0      68
                                              1 BANK0      4     4      0
                         _readEEPROM
 ---------------------------------------------------------------------------------
 (2) _readEEPROM                                           1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _config                                               0     0      0     176
                            _initLCD
 ---------------------------------------------------------------------------------
 (2) _initLCD                                              2     2      0     176
                                              3 BANK0      2     2      0
                           _OpenXLCD
                         _SendCMDLCD
 ---------------------------------------------------------------------------------
 (3) _SendCMDLCD                                           1     1      0      66
                                              1 BANK0      1     1      0
                           _BusyXLCD
                       _WriteCmdXLCD
 ---------------------------------------------------------------------------------
 (3) _OpenXLCD                                             2     2      0     110
                                              1 BANK0      2     2      0
                           _BusyXLCD
                       _DelayPORXLCD
                       _SetDDRamAddr
                       _WriteCmdXLCD
 ---------------------------------------------------------------------------------
 (4) _WriteCmdXLCD                                         1     1      0      44
                                              0 BANK0      1     1      0
                      _DelayFor18TCY
 ---------------------------------------------------------------------------------
 (4) _SetDDRamAddr                                         1     1      0      44
                                              0 BANK0      1     1      0
                      _DelayFor18TCY
 ---------------------------------------------------------------------------------
 (5) _DelayFor18TCY                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _DelayPORXLCD                                         1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _BusyXLCD                                             1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _inter                                              10    10      0    6501
                                            111 COMRAM    10    10      0
                               _time
                          _updateLCD
                            _vumeter
 ---------------------------------------------------------------------------------
 (11) _vumeter                                             5     5      0     135
                                              0 COMRAM     5     5      0
 ---------------------------------------------------------------------------------
 (11) _updateLCD                                           2     2      0    6050
                                            109 COMRAM     2     2      0
                            ___lwdiv
                            ___lwmod
                           _putsXLCD
                     i2_SetDDRamAddr
                          i2_sprintf
 ---------------------------------------------------------------------------------
 (12) i2_sprintf                                          18    10      8    5094
                                             91 COMRAM    18    10      8
                         i2_vfprintf
 ---------------------------------------------------------------------------------
 (13) i2_vfprintf                                          8     2      6    4841
                                             83 COMRAM     8     2      6
                        i2_vfpfcnvrt
 ---------------------------------------------------------------------------------
 (14) i2_vfpfcnvrt                                        46    40      6    4629
                                             63 COMRAM    20    14      6
                             i2_atoi
                             i2_dtoa
                            i2_fputc
                          i2_isdigit
 ---------------------------------------------------------------------------------
 (15) i2_dtoa                                             36    26     10    2808
                                             27 COMRAM    36    26     10
                          i2___aodiv
                          i2___aomod
                              i2_abs
                              i2_pad
 ---------------------------------------------------------------------------------
 (16) i2_pad                                              11     5      6    1509
                                             16 COMRAM    11     5      6
                            i2_fputc
                            i2_fputs
                           i2_strlen
 ---------------------------------------------------------------------------------
 (17) i2_strlen                                            4     2      2     116
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (17) i2_fputs                                             7     3      4     635
                                              9 COMRAM     7     3      4
                            i2_fputc
 ---------------------------------------------------------------------------------
 (15) i2_fputc                                             9     5      4     434
                                              0 COMRAM     9     5      4
                            i2_putch
 ---------------------------------------------------------------------------------
 (16) i2_putch                                             1     1      0       0
 ---------------------------------------------------------------------------------
 (16) i2_abs                                               4     2      2      92
                                             18 COMRAM     4     2      2
                          i2___aomod (ARG)
 ---------------------------------------------------------------------------------
 (16) i2___aomod                                          18     2     16     348
                                              0 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (16) i2___aodiv                                          26    10     16     352
                                              0 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (15) i2_atoi                                             15    13      2     726
                                              7 COMRAM    15    13      2
                           i2___wmul
                          i2_isdigit
                          i2_isspace
 ---------------------------------------------------------------------------------
 (16) i2_isspace                                           7     5      2      94
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (15) i2_isdigit                                           6     4      2      74
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (16) i2___wmul                                            6     2      4     211
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (12) i2_SetDDRamAddr                                      1     1      0      44
                                              0 COMRAM     1     1      0
                    i2_DelayFor18TCY
 ---------------------------------------------------------------------------------
 (12) _putsXLCD                                            2     0      2     241
                                              1 COMRAM     2     0      2
                      _WriteDataXLCD
                         i2_BusyXLCD
 ---------------------------------------------------------------------------------
 (13) i2_BusyXLCD                                          1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (13) _WriteDataXLCD                                       1     1      0      44
                                              0 COMRAM     1     1      0
                    i2_DelayFor18TCY
 ---------------------------------------------------------------------------------
 (13) i2_DelayFor18TCY                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (12) ___lwmod                                             5     1      4     311
                                              0 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (12) ___lwdiv                                             7     3      4     314
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (11) _time                                                0     0      0     316
                          i2_setData
 ---------------------------------------------------------------------------------
 (12) i2_setData                                           3     3      0     316
                                              2 COMRAM     3     3      0
                      i2_writeEEPROM
 ---------------------------------------------------------------------------------
 (13) i2_writeEEPROM                                       2     1      1     226
                                              0 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 17
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _beep
     ___wmul
   _config
     _initLCD
       _OpenXLCD
         _BusyXLCD
         _DelayPORXLCD
         _SetDDRamAddr
           _DelayFor18TCY
         _WriteCmdXLCD
           _DelayFor18TCY
       _SendCMDLCD
         _BusyXLCD
         _WriteCmdXLCD
           _DelayFor18TCY
   _getData
     _readEEPROM
   _setFrequency
     _beep
       ___wmul
     _setData
       _writeEEPROM
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
           _fputc
             _putch
           _isdigit
     _writeFrequency
       _codFreq
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _atoi
           ___wmul
           _isdigit
           _isspace
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
             _fputs
               _fputc
                 _putch
             _strlen
         _fputc
           _putch
         _isdigit
   _writeFrequency
     _codFreq

 _inter (ROOT)
   _time
     i2_setData
       i2_writeEEPROM
   _updateLCD
     ___lwdiv
     ___lwmod
     _putsXLCD
       _WriteDataXLCD
         i2_DelayFor18TCY
       i2_BusyXLCD
     i2_SetDDRamAddr
       i2_DelayFor18TCY
     i2_sprintf
       i2_vfprintf
         i2_vfpfcnvrt
           i2_atoi
             i2___wmul
             i2_isdigit
             i2_isspace
           i2_dtoa
             i2___aodiv
             i2___aomod
             i2_abs
               i2___aomod (ARG)
             i2_pad
               i2_fputc
                 i2_putch
               i2_fputs
                 i2_fputc
                   i2_putch
               i2_strlen
           i2_fputc
             i2_putch
           i2_isdigit
   _vumeter

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      42       7       25.8%
BITBANK0            80      0       0       4        0.0%
BANK0               80     6E      80       5      100.0%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     79      7E       1      100.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     140      15        0.0%
DATA                 0      0     140       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Wed Aug  7 13:08:57 2019

                                                 _UN_BLOCKED 0603  
                                                         l58 2942  
                                                         l68 207E  
                                        ___wmul@multiplicand 0082  
                                               __CFG_CP0$OFF 000000  
                                               __CFG_CP1$OFF 000000  
                                               __CFG_CP2$OFF 000000  
                                               __CFG_CP3$OFF 000000  
                                                __CFG_OSC$HS 000000  
                                                        l244 1050  
                                                        l239 23B6  
                                                        l193 1BA0  
                                                        l524 1C32  
                                                        l605 08CC  
                                                        l570 0BDA  
                                                        l557 1CC6  
                                                        l568 0BD0  
                                               __CFG_CPB$OFF 000000  
                                               __CFG_CPD$OFF 000000  
                                         i2___aodiv@quotient 0013  
                                               __CFG_BOR$OFF 000000  
                                                        _abs 2756  
                                                        _pad 1C8E  
                                               __CFG_BORV$20 000000  
                                      __size_of_WriteCmdXLCD 0048  
                                                        wreg 000FE8  
                                            __end_of_BLOCKED 0605  
                                        __end_ofi2_vfpfcnvrt 0B52  
                                               __CFG_LVP$OFF 000000  
                                               __CFG_WDT$OFF 000000  
                                                       ?_abs 0092  
                                                       l1321 1334  
                                                       l1324 133E  
                                                       l3006 263E  
                                                       l1350 1DE4  
                                                       l1290 2784  
                                                       l3220 1254  
                                                       l3204 11F0  
                                                       l1293 278E  
                                                       l3230 12CC  
                                                       l3222 125E  
                                                       l3214 1242  
                                                       l3206 11F6  
                                                       l3224 1266  
                                                       l3160 0BF8  
                                                       l3226 1292  
                                                       l3146 0BB0  
                                                       l4042 1B2E  
                                                       l3164 0C0A  
                                                       l3420 0710  
                                                       l3174 0D06  
                                                       l3422 0720  
                                                       l4062 1BA4  
                                                       l4048 1B3E  
                                                       l3194 0D74  
                                                       l3418 06F0  
                                                       l4058 1B92  
                                                       l3700 206A  
                                                       l2900 1D1C  
                                                       l3444 086A  
                                                       l3198 0D90  
                                                       l3438 082A  
                                                       l3454 0892  
                                                       l2824 1D5A  
                                                       l3448 0876  
                                                       l3626 29D6  
                                                       l3580 1A76  
                                                       l3572 1A52  
                                                       l2940 1542  
                                                       l2932 1504  
                                                       l2852 25E6  
                                                       l3644 2288  
                                                       l3566 1A32  
                                                       l2950 15A2  
                                                       l2926 14DA  
                                                       l3646 22B0  
                                                       l3742 1BFC  
                                                       l3910 106E  
                                                       ?_pad 0090  
                                                       l3592 1AAC  
                                                       l3584 1A88  
                                                       l3576 1A64  
                                                       l2848 25CC  
                                                       l2856 28C4  
                                                       l2938 152C  
                                                       l2954 15BA  
                                                       l2970 1794  
                                                       l2858 28CC  
                                                       l2890 1CBC  
                                                       l3746 1C36  
                                                       l3922 10C6  
                                                       l3914 1084  
                                                       l3596 1ABE  
                                                       l3588 1A9A  
                                                       l2980 17EC  
                                                       l2892 1CD2  
                                                       l2958 15E2  
                                                       l2990 1850  
                                                       l2974 17BA  
                                                       l2886 1CAA  
                                                       l3950 117A  
                                                       l3942 114E  
                                                       l3934 110A  
                                                       l3926 10DC  
                                                       l3918 10B2  
                                                       l2896 1CEE  
                                                       l3952 1188  
                                                       l3928 10EA  
                                                       l2994 1878  
                                                       l2986 1838  
                                                       l2978 17D6  
                                                       l3946 1164  
                                                       l3938 1120  
                                                       STR_1 0617  
                                                       STR_2 0639  
                                                       STR_3 0628  
                                                       STR_4 0605  
                                                       u2111 150C  
                                                       u2130 1548  
                                                       u2060 2768  
                                                       u2070 283A  
                                                       u2230 263A  
                                                       u2080 283E  
                                                       u2500 0BC4  
                                                       u2190 17F2  
                                                       u2520 0BF0  
                                                       u3090 1A3E  
                                                       u3250 23E4  
                                                       u2530 0D18  
                                                       u2620 123E  
                                                       u2460 0B7E  
                                                       u1910 1D50  
                                                       u2550 0D3A  
                                                       u2470 0B82  
                                                       u3510 118E  
                                                       u2551 0D38  
                                                       _PIE1 000F9D  
                                                       u2640 1300  
                                                       u2560 0D4A  
                                                       u3264 1C16  
                                                       u3265 1C0E  
                                                       u2650 1304  
                                                       u1930 1D9C  
                                                       u2570 0D4E  
                                                       u3450 10F0  
                                                       u2590 0D5C  
                                                       u3390 1056  
                                                       u2930 075E  
                                                       u3707 1AEA  
                                                       u2940 0762  
                                                       u3717 1B1C  
                                                       u2950 0770  
                                                       u3807 1C7A  
                                                       u3727 1B62  
                                                       u3817 23BC  
                                                       u3737 1BBA  
                                                       u2970 07AA  
                                                       u3827 23C6  
                                                       u3747 109E  
                                                       u3837 24F6  
                                                       u3757 113A  
                                                       u3847 251A  
                                                       u3767 11A0  
                                                       u3857 1A02  
                                                       u3777 1BE8  
                                                       u3867 1A1E  
                                                       u3787 1C40  
                                                       u3877 2A76  
                                                       u3797 1C58  
                                                       u3887 2A32  
                                                       u3897 29F8  
                                                       i2l58 299A  
                                                       i2l68 20F0  
                                               __CFG_PWRT$ON 000000  
                                               _stereoEnable 00FB  
                                               __CFG_STVR$ON 000000  
                                                       abs@a 0092  
                                                       _beep 2392  
                                                       _dbuf 0100  
                                                       _days 00FE  
                                                       _atoi 11DA  
                                                       _main 1AD4  
                                                       _dtoa 0B52  
                                                       _prec 00F2  
                                                       _time 2132  
                                                       _nout 00EE  
                                                       pad@i 0097  
                                                       pad@p 0094  
                                                       fsr1h 000FE2  
                                                       fsr2h 000FDA  
                                                       indf2 000FDF  
                                                       fsr1l 000FE1  
                                                       pad@w 0099  
                                                       fsr2l 000FD9  
                                                       btemp 007F  
                                                i2_atoi$1500 0014  
                                                i2_atoi$1501 0012  
                                                i2_atoi$1499 0010  
                                     __size_of_WriteDataXLCD 0042  
                                                       prodh 000FF4  
                                                       prodl 000FF3  
                                                       start 00A6  
                                            __end_ofi2_fputc 1E96  
                                            __end_ofi2_fputs 2714  
                                            __end_ofi2_putch 2A9E  
                                                i2_dtoa$1027 002E  
                                               ___param_bank 000000  
                                                _writeEEPROM 2920  
                                                      ??_abs 0094  
                                                      ??_pad 0096  
                                               _WriteCmdXLCD 2576  
                                           ?i2_DelayFor18TCY 0001  
                                           ??_writeFrequency 0084  
                                                 i2_vfprintf 22D2  
                                              __CFG_OSCS$OFF 000000  
                                                      ?_beep 0086  
                                            __end_of___aodiv 1608  
                                         writeEEPROM@address 0080  
                                                      ?_atoi 0087  
                                              ?_SetDDRamAddr 0001  
                                                      ?_main 0001  
                                                      ?_dtoa 009B  
                                            __end_of___aomod 189E  
                                                      _EEADR 000FA9  
                                                      ?_time 0001  
                                                      _T0CON 000FD5  
                                                      _T1CON 000FCD  
                                            __end_of___lwdiv 2392  
                                            __end_of___lwmod 24E2  
                                                      i2l220 1FA8  
                                                      i2l236 219A  
                                                      i2l605 0B4C  
                                                      i2l570 0E46  
                                                      i2l557 1ECC  
                                                      i2l568 0E3C  
                                               vfpfcnvrt@fmt 00C1  
                                                      _TMR0H 000FD7  
                                                      _TMR1H 000FCF  
                                                      _TMR0L 000FD6  
                                                      _TMR1L 000FCE  
                                                      _PORTB 000F81  
                                                      _PORTD 000F83  
                                                      _TRISA 000F92  
                                                      _TRISB 000F93  
                                                      _TRISC 000F94  
                                                      _TRISD 000F95  
                                                      _TRISE 000F96  
                                                      i2_abs 27D2  
                                            __end_of_codFreq 2A28  
                                                      i2_pad 1E96  
                                              __CFG_WRT0$OFF 000000  
                                            __end_of_getData 220A  
                                              __CFG_WRT1$OFF 000000  
                                              __CFG_WRT2$OFF 000000  
                                              __CFG_WRT3$OFF 000000  
                                             __CFG_EBTR0$OFF 000000  
                                             __CFG_EBTR1$OFF 000000  
                                             __CFG_EBTR2$OFF 000000  
                                             __CFG_EBTR3$OFF 000000  
                                              __CFG_WRTB$OFF 000000  
                                              __CFG_WRTC$OFF 000000  
                                              __CFG_WRTD$OFF 000000  
                                            __end_of_initLCD 252C  
                                             __CFG_EBTRB$OFF 000000  
                                                 i2isdigit@c 0001  
                                                      _flags 00F4  
                                       writeFrequency@buffer 0087  
                                                      _fputc 1D3C  
                                                      _inter 0008  
                                                      _fputs 25BE  
                                            __end_of_isdigit 2848  
                                                      _hours 00FD  
                                                      atoi@n 0094  
                                                      pad@fp 0090  
                                                      atoi@s 0087  
                                            __end_of_setData 20C0  
                                                      _width 00F0  
                                                      _putch 2A92  
                                                      main@i 00ED  
                                                      dtoa@d 009D  
                                                      dtoa@i 00BD  
                                                      dtoa@n 00B5  
                                                      dtoa@p 00AF  
                                                      dtoa@s 00B3  
                                                      dtoa@w 00B1  
                                            __end_of_isspace 264A  
                                                ?i2_BusyXLCD 0001  
                                                      tablat 000FF5  
                                           __end_ofi2___wmul 29D0  
                                                      ttemp5 0080  
                                                      ttemp6 0083  
                                                      ttemp7 0087  
                                                      status 000FD8  
                                                 i2isspace@c 0001  
                                                      wtemp8 0080  
                                            __end_of_sprintf 2440  
                                            __end_of_vumeter 1FD0  
                                         __size_ofi2___aodiv 015C  
                                         __size_ofi2___aomod 0138  
                                           __end_ofi2_strlen 2920  
                                            __initialization 220A  
                                          __end_of_FINAL_DAY 0602  
                                               __end_of_beep 23EA  
                                               __end_of_atoi 1344  
                                               __end_of_main 1BC8  
                                               __end_of_dtoa 0DBE  
                                               __end_of_time 21A0  
                                           __end_of_BusyXLCD 2A0C  
                                           ??i2_SetDDRamAddr 0001  
                                      __size_of_DelayPORXLCD 001C  
                                         __size_ofi2_isdigit 0038  
                                         __size_ofi2_setData 0072  
                                                i2_vfpfcnvrt 08D2  
                                             ??_SetDDRamAddr 0080  
                                         __size_ofi2_isspace 0044  
                                              i2vfpfcnvrt@ap 0044  
                                              i2vfpfcnvrt@fp 0040  
                                              i2vfpfcnvrt@ll 004A  
                                                 _SendCMDLCD 29D0  
                                                     ??_beep 0088  
                                           __end_of_OpenXLCD 1AD4  
                                                     ??_atoi 0089  
                                                     ??_main 00EB  
                                                     ??_dtoa 00A5  
                                                     ??_time 0006  
                                              __activetblptr 000002  
                                                 i2sprintf@f 0068  
                                              _WriteDataXLCD 2714  
                                                 i2sprintf@s 005C  
                                         __size_ofi2_sprintf 0052  
                                                     ?i2_abs 0013  
                                                     ?i2_pad 0011  
                                         _hundredMiliSeconds 00F9  
                                                     _ADCON0 000FC2  
                                                     _ADCON1 000FC1  
                                                     ?_fputc 0080  
                                                     ?_inter 0001  
                                                     ?_fputs 0089  
                                                     _ADRESH 000FC4  
                                                     _EEDATA 000FA8  
                                                     _EECON2 000FA7  
                                                     ?_putch 0001  
                                                     i2l1106 2384  
                                                     i2l1116 24D4  
                                                     i2l1321 149A  
                                                     i2l1324 14A4  
                                                     i2l3100 1924  
                                                     i2l3020 1ED8  
                                                     i2l3110 1988  
                                                     i2l1350 1E90  
                                                     i2l3014 1EB2  
                                                     i2l4000 217C  
                                                     i2l3024 1EF2  
                                                     i2l3114 19B0  
                                                     i2l3106 1970  
                                                     i2l1290 27FE  
                                                     i2l3018 1EC2  
                                                     i2l3060 169E  
                                                     i2l3052 1660  
                                                     i2l3028 1F22  
                                                     i2l1293 2808  
                                                     i2l4006 2192  
                                                     i2l3134 2682  
                                                     i2l3310 135E  
                                                     i2l3070 16FE  
                                                     i2l3046 1636  
                                                     i2l3302 0FFC  
                                                     i2l3330 13FA  
                                                     i2l3058 1688  
                                                     i2l3074 1716  
                                                     i2l3090 18CC  
                                                     i2l3250 0E1A  
                                                     i2l2610 1F9A  
                                                     i2l2602 1F82  
                                                     i2l3324 13BC  
                                                     i2l3308 1358  
                                                     i2l3500 0AAE  
                                                     i2l3334 1432  
                                                     i2l3326 13C6  
                                                     i2l3318 13AA  
                                                     i2l3078 173E  
                                                     i2l3094 18F2  
                                                     i2l3510 0AF8  
                                                     i2l2606 1F8E  
                                                     i2l3328 13CE  
                                                     i2l3264 0E64  
                                                     i2l4080 0058  
                                                     i2l3098 190E  
                                                     i2l3506 0AEE  
                                                     i2l4082 005C  
                                                     i2l3268 0E76  
                                                     i2l3516 0B14  
                                                     i2l4092 0074  
                                                     i2l3278 0F70  
                                                     i2l2590 1F5E  
                                                     i2l3800 2378  
                                                     i2l3480 0976  
                                                     i2l3810 24AC  
                                                     i2l3298 0FE0  
                                                     i2l3482 0996  
                                                     i2l2594 1F6A  
                                                     i2l2586 1F52  
                                                     i2l3484 09A6  
                                                     i2l2838 1E06  
                                                     i2l2870 26F6  
                                                     i2l2598 1F76  
                                                     i2l3816 24C8  
                                                     i2l3808 24A2  
                                                     i2l2866 26DE  
                                                     i2l2874 28FA  
                                                     i2l3828 20DE  
                                                     i2l3780 28A2  
                                                     i2l2876 2900  
                                                     i2l3676 22E8  
                                                     i2l3790 2354  
                                                     i2l3774 2884  
                                                     i2l3678 2310  
                                                     _INTCON 000FF2  
                                                     i2l3788 234A  
                                                  ??i2_fputc 0005  
                                                  ??i2_fputs 000E  
                                                     _OSCCON 000FD3  
                                                  ??i2_putch 0001  
                                             __CFG_WDTPS$128 000000  
                                             i2___aodiv@sign 0012  
                                                     i2abs@a 0013  
                                                     i2_atoi 1344  
                                                     i2_dtoa 0DBE  
                                                     i2pad@i 0018  
                                                     i2pad@p 0015  
                                                     i2pad@w 001A  
                                               _DelayPORXLCD 2A28  
                                               vfprintf@cfmt 00D9  
                                      __end_ofi2_writeEEPROM 29A6  
                                             i2___aomod@sign 0012  
                                                  ??___aodiv 0090  
                                              i2vfprintf@fmt 0056  
                                                  ??___aomod 0090  
                                                     ___wmul 294E  
                                                  ??___lwdiv 0005  
                                                     beep@ms 0086  
                                                  ??___lwmod 0005  
                                                     _config 2794  
                                                ?i2_vfprintf 0054  
                                                  ??_codFreq 0082  
                                                     clear_0 2250  
                                                     clear_1 225C  
                                                  ??_getData 0081  
                                                     _months 00FF  
                                        __size_ofi2_BusyXLCD 0018  
                                                     pad@buf 0092  
                                             ?_WriteDataXLCD 0001  
                                                     dtoa@fp 009B  
                                                     _strlen 28B8  
                                                  ??_initLCD 0083  
                                                     fputc@c 0080  
                                                     fputs@c 008D  
                                                     fputs@i 008E  
                                               __pdataCOMRAM 007A  
                                          __end_ofi2___aodiv 1764  
                                                     fputs@s 0089  
                                                  ??_isdigit 0082  
                                          __end_ofi2___aomod 19D6  
                                                  ??_setData 0082  
                                               __mediumconst 0000  
                                                  ??_isspace 0082  
                                                     tblptrh 000FF7  
                                                     tblptrl 000FF6  
                                                     tblptru 000FF8  
                                                     putch@c 0001  
                                           __end_of_putsXLCD 28B8  
                                         i2___aomod@dividend 0001  
                                           __end_of_vfprintf 22D2  
                                                  ??_sprintf 00DF  
                                                  ??_vumeter 0001  
                                          __end_ofi2_isdigit 2880  
                                          __end_ofi2_setData 2132  
                                                 __accesstop 0080  
                                    __end_of__initialization 2264  
                                          __end_ofi2_isspace 268E  
                                              ___rparam_used 000001  
                                            writeEEPROM@data 0081  
                                          __end_ofi2_sprintf 2492  
                                              __end_ofi2_abs 280E  
                                              __end_ofi2_pad 1F40  
                                             __pcstackCOMRAM 0001  
                                               __pidataBANK0 2A9E  
                                              __end_of_fputc 1DEA  
                                              __end_of_inter 00A6  
                                              __end_of_fputs 2604  
                                              __end_of_putch 2A98  
                                                ?_SendCMDLCD 0001  
                                                  ?i2___wmul 0001  
                                                    ??i2_abs 0015  
                                                    ??i2_pad 0017  
                                                setData@full 0084  
                                             i2vfpfcnvrt@fmt 0042  
                                                  ?i2_strlen 0001  
                                                    ??_fputc 0084  
                                                    ??_inter 0070  
                                                    ??_fputs 008D  
                                     __size_of_DelayFor18TCY 0010  
                                                    ??_putch 0080  
                                              ?_setFrequency 0001  
                                                 __pbssBANK0 00EE  
                                                 __pbssBANK1 0100  
                                                  ?_BusyXLCD 0001  
                                                i2sprintf@ap 0066  
                                        __size_ofi2_vfprintf 0060  
                                            WriteCmdXLCD@cmd 0080  
                                       __end_of_SetDDRamAddr 2576  
                                                    ?i2_atoi 0008  
                                                    ?i2_dtoa 001C  
                                                  ?_OpenXLCD 0001  
                                               ?_writeEEPROM 0080  
                                          WriteDataXLCD@data 0001  
                                           __CFG_CCP2MUX$OFF 000000  
                                                    ?___wmul 0080  
                                                    ?_config 0001  
                                            ??_WriteDataXLCD 0001  
                                                    _BLOCKED 0604  
                                             updateLCD@decim 006F  
                                                    ?_strlen 0080  
                                             updateLCD@integ 006E  
                                                 ??i2___wmul 0005  
                                         __size_of_updateLCD 007A  
                                         __size_of_vfpfcnvrt 0286  
                                                 ??i2_strlen 0003  
                                             ??_setFrequency 00E9  
                                               ??i2_BusyXLCD 0001  
                                                 ??_BusyXLCD 0080  
                                                    i2_fputc 1DEA  
                                                    i2_fputs 26D2  
                                                    i2atoi@n 0015  
                                                    i2pad@fp 0011  
                                                    i2atoi@s 0008  
                                                    i2_putch 2A98  
                                                    i2dtoa@d 001E  
                                                    i2dtoa@i 003E  
                                                    i2dtoa@n 0036  
                                                    i2dtoa@p 0030  
                                                    i2dtoa@s 0034  
                                                    i2dtoa@w 0032  
                                                 _readEEPROM 2A5C  
                                        __size_of_SendCMDLCD 001E  
                                                 ??_OpenXLCD 0081  
                                            __size_ofi2_atoi 0166  
                                            __size_ofi2_dtoa 026C  
                                                    __Hparam 0000  
                                                    __Lparam 0000  
                                                    ___aodiv 14AA  
                                                    ___aomod 1764  
                                              _DelayFor18TCY 2A72  
                                            __size_of___wmul 002C  
                                                  ?_putsXLCD 0002  
                                                    ___lwdiv 2332  
                                                    ___lwmod 2492  
                                                  ?_vfprintf 00D3  
                                             i2vfprintf@cfmt 005A  
                                               __psmallconst 0600  
                                            __size_of_config 003E  
                                                  _FINAL_DAY 0601  
                                               ?i2_vfpfcnvrt 0040  
                                                    _codFreq 2A0C  
                                                    __pcinit 220A  
                                                    _getData 21A0  
                                                    __ramtop 0600  
                                                    __ptext0 1AD4  
                                                    __ptext1 102A  
                                                    __ptext2 1BC8  
                                                    __ptext3 2A0C  
                                                    __ptext4 23EA  
                                                    __ptext5 2272  
                                                    __ptext6 064C  
                                                    __ptext7 0B52  
                                                    __ptext8 1C8E  
                                                    __ptext9 28B8  
                                                    _cntTmr1 007E  
                                         __end_ofi2_BusyXLCD 2A5C  
                                            __size_of_strlen 0036  
                                                    _initLCD 24E2  
                                                  _T1CONbits 000FCD  
                                                    _lineOne 0131  
                                               __size_of_abs 003E  
                                                    _lineTwo 0120  
                                               __size_of_pad 00AE  
                                                    _isdigit 280E  
                                                    _prTmr0H 007A  
                                                    _prTmr1H 007C  
                                                    _prTmr0L 007B  
                                                    _prTmr1L 007D  
                                                    _setData 204A  
                                   __size_ofi2_DelayFor18TCY 0010  
                                                    _minutes 00FC  
                                                    _seconds 00FA  
                                                    _isspace 2604  
                                                    atoi@neg 008D  
                                                    _sprintf 23EA  
                                       end_of_initialization 2264  
                                                    _vumeter 1F40  
                                         __end_of_UN_BLOCKED 0604  
                                                    fputc@fp 0082  
                                              __Lmediumconst 0000  
                                                    fputs@fp 008B  
                                        i2___wmul@multiplier 0001  
                                          __end_of_updateLCD 204A  
                                          __end_of_vfpfcnvrt 08D2  
                                             ?_DelayFor18TCY 0001  
                                                    postdec1 000FE5  
                                                    postdec2 000FDD  
                                                    postinc0 000FEE  
                                                    postinc1 000FE6  
                                                    postinc2 000FDE  
                                                 ??_putsXLCD 0004  
                                               ??i2_vfprintf 005A  
                                                 ??_vfprintf 00D9  
                                                    strlen@a 0082  
                                                    strlen@s 0080  
                                       i2writeEEPROM@address 0001  
                                                  _PORTAbits 000F80  
                                                  _PORTCbits 000F82  
                                                  _PORTDbits 000F83  
                                                  _PORTEbits 000F84  
                                          i2___aodiv@divisor 0009  
                                          i2___aodiv@counter 0011  
                                                  _TRISDbits 000F95  
                                    __size_of_writeFrequency 00C6  
                                      __size_of_SetDDRamAddr 004A  
                                                  i2___aodiv 1608  
                                                  i2___aomod 189E  
                                          readEEPROM@address 0080  
                                         __end_ofi2_vfprintf 2332  
                                                ?_readEEPROM 0001  
                                                  i2_isdigit 2848  
                                                  i2_setData 20C0  
                                             __end_ofi2_atoi 14AA  
                                             __end_ofi2_dtoa 102A  
                                                  i2_isspace 264A  
                                                  i2atoi@neg 000E  
                                                  i2_sprintf 2440  
                                        __end_of_FINAL_MONTH 0603  
                                       __size_of_writeEEPROM 002E  
                                       __end_of_setFrequency 11DA  
                                                vfpfcnvrt@ap 00C3  
                                                vfpfcnvrt@fp 00BF  
                                                vfpfcnvrt@ll 00C9  
                                             __end_of___wmul 297A  
                                              __pidataCOMRAM 2AA3  
                                               ??_SendCMDLCD 0081  
                                             __end_of_config 27D2  
                                                  i2fputc@fp 0003  
                                                  i2fputs@fp 000C  
                                               _SetDDRamAddr 252C  
                                           i2___wmul@product 0005  
                                            vumeter@vumLevel 0005  
                                         SetDDRamAddr@DDaddr 0080  
                                             __end_of_strlen 28EE  
                                        start_initialization 220A  
                                          __size_ofi2___wmul 002A  
                                               vumeter@level 0004  
                                    __size_ofi2_SetDDRamAddr 0044  
                                                __end_of_abs 2794  
                                                __end_of_pad 1D3C  
                                                 ?i2___aodiv 0001  
                                                 ?i2___aomod 0001  
                                     __size_ofi2_writeEEPROM 002C  
                                          __size_ofi2_strlen 0032  
                                                  i2strlen@a 0003  
                                                  i2strlen@s 0001  
                                          ??i2_DelayFor18TCY 0001  
                                          __size_of_BusyXLCD 001E  
                                                   ??i2_atoi 000A  
                                               setData@data0 0082  
                                               setData@data1 0083  
                                                   ??i2_dtoa 0026  
                                         __end_of_SendCMDLCD 29EE  
                                                 ?i2_isdigit 0001  
                                            ??_DelayFor18TCY 0080  
                                                 ?i2_setData 0001  
                                                 ?i2_isspace 0001  
                                                vfprintf@fmt 00D5  
                                          __size_of_OpenXLCD 00FE  
                                               i2vfprintf@ap 0058  
                                               i2vfprintf@fp 0054  
                                                   ??___wmul 0084  
                                                 ?i2_sprintf 005C  
                                              ?_WriteCmdXLCD 0001  
                                                   ??_config 0085  
                                                __pdataBANK0 00FB  
                                          i2___aomod@divisor 0009  
                                                   ??_strlen 0082  
                                          i2___aomod@counter 0011  
                                       __size_ofi2_vfpfcnvrt 0280  
                                        __size_of_readEEPROM 0016  
                                               i2sprintf@fmt 005E  
                                                __pbssCOMRAM 007E  
                                              __pcstackBANK0 0080  
                                           ___aodiv@dividend 0080  
                                                   ?i2_fputc 0001  
                                                   ?i2_fputs 000A  
                                                   ?i2_putch 0001  
                                                  _atoi$1500 0093  
                                                  _atoi$1501 0091  
                                                  _atoi$1499 008F  
                                                _FINAL_MONTH 0602  
                                             putsXLCD@buffer 0002  
                                           ___lwdiv@dividend 0001  
                                                  _dtoa$1027 00AD  
                                                  __pintcode 0008  
                                             ??_WriteCmdXLCD 0080  
                                                   ?___aodiv 0080  
                                                   ?___aomod 0080  
                                              i2_writeEEPROM 297A  
                                           ___aodiv@quotient 0092  
                                                   ?___lwdiv 0001  
                                                   ?___lwmod 0001  
                                                   ?_codFreq 0080  
                                                   ?_getData 0001  
                                              SendCMDLCD@CMD 0081  
                                          __size_of_putsXLCD 0038  
                                      __end_of_WriteDataXLCD 2756  
                                          __size_of_vfprintf 0060  
                                                   ?_initLCD 0001  
                                                __smallconst 0600  
                                                   ?_isdigit 0080  
                                             __size_ofi2_abs 003C  
                                                   ?_setData 0001  
                                             __size_ofi2_pad 00AA  
                                                   ?_isspace 0080  
                                             _writeFrequency 1BC8  
                                                  _frequency 00F6  
                                           ___lwdiv@quotient 0005  
                                                ??i2___aodiv 0011  
                                                ??i2___aomod 0011  
                                                   ?_sprintf 00DB  
                                             __size_of_fputc 00AE  
                                             __size_of_inter 009E  
                                             __size_of_fputs 0046  
                                             __size_of_putch 0006  
                                                   ?_vumeter 0001  
                                             ___wmul@product 0084  
                                              ?_DelayPORXLCD 0001  
                                                ??i2_isdigit 0003  
                                                ??i2_setData 0003  
                                           i2_vfpfcnvrt$1042 0052  
                                      __size_of_setFrequency 01B0  
                                                   i2u302_40 09E2  
                                                   i2u230_41 1668  
                                                ??i2_isspace 0003  
                                                   i2u303_40 09E6  
                                                   i2u232_40 16A4  
                                                   i2u304_40 09F4  
                                                   i2u241_40 27E2  
                                                   i2u242_40 2872  
                                                   i2u306_40 0A2E  
                                                   i2u243_40 2876  
                                                   i2u332_40 235A  
                                                   i2u180_44 1FC2  
                                                   i2u180_45 1FBA  
                                                   i2u245_40 267E  
                                                   i2u238_40 192A  
                                                   i2u335_40 24B2  
                                                   i2u272_40 0E30  
                                                   i2u281_40 0FC8  
                                                   _PIR1bits 000F9E  
                                            OpenXLCD@lcdtype 0082  
                                                   i2u274_40 0E5C  
                                                   i2u195_40 1DFC  
                                                   i2u275_40 0F80  
                                                   _PIR2bits 000FA1  
                                                   i2u284_40 13A6  
                                                   i2u268_40 0DE8  
                                                   i2u197_40 1E48  
                                                   i2u277_40 0FA2  
                                                   i2u269_40 0DEC  
                                                   i2u277_41 0FA0  
                                                   i2u286_40 1466  
                                                   i2u278_40 0FB2  
                                                   i2u390_47 2A4C  
                                                   i2u287_40 146A  
                                                   i2u279_40 0FB8  
                                                   i2u391_47 2A86  
                                             ?i2_writeEEPROM 0001  
                                                ??i2_sprintf 0064  
                                                  _updateLCD 1FD0  
                                             _functionalStat 00F8  
                                                  _vfpfcnvrt 064C  
                                                 _ADCON0bits 000FC2  
                                          ___wmul@multiplier 0080  
                                                   i2___wmul 29A6  
                                     __end_of_writeFrequency 1C8E  
                                             i2_SetDDRamAddr 268E  
                                               _isspace$1517 0086  
                                                   i2pad@buf 0013  
                                                   i2dtoa@fp 001C  
                                                   i2_strlen 28EE  
                                                  copy_data0 221E  
                                                  copy_data1 223E  
                                                   i2fputc@c 0001  
                                                   i2fputs@c 000E  
                                                   i2fputs@i 000F  
                                                   i2fputs@s 000A  
                                               _setFrequency 102A  
                                                   _BusyXLCD 29EE  
                                               ??_readEEPROM 0080  
                                           __size_ofi2_fputc 00AC  
                                           __size_ofi2_fputs 0042  
                                             ??_DelayPORXLCD 0080  
                                           __size_ofi2_putch 0006  
                                                 _EECON1bits 000FA6  
                                                   _OpenXLCD 19D6  
                                                   __Hrparam 0000  
                                             i2setData@data0 0003  
                                             i2setData@data1 0004  
                                                 vfprintf@ap 00D7  
                                                   __Lrparam 0000  
                                                 vfprintf@fp 00D3  
                                           __size_of___aodiv 015E  
                                           __size_of___aomod 013A  
                                      i2___wmul@multiplicand 0003  
                                                 ?_updateLCD 0001  
                                                 ?_vfpfcnvrt 00BF  
                                           __size_of___lwdiv 0060  
                                           __size_of___lwmod 0050  
                                            ___aodiv@divisor 0088  
                                           __size_of_codFreq 001C  
                                            ___aodiv@counter 0090  
                                           __size_of_getData 006A  
                                     __end_ofi2_SetDDRamAddr 26D2  
                                            i2_DelayFor18TCY 2A82  
                                            ?_writeFrequency 0082  
                                                 sprintf@fmt 00DD  
                                           __size_of_initLCD 004A  
                                         __end_of_readEEPROM 2A72  
                                           __size_of_isdigit 003A  
                                            ___lwdiv@divisor 0003  
                                           __size_of_setData 0076  
                                           __size_of_isspace 0046  
                                            ___lwdiv@counter 0007  
                                                   __ptext10 25BE  
                                                   __ptext11 1D3C  
                                                   __ptext20 2920  
                                                   __ptext12 2A92  
                                                   __ptext21 2392  
                                                   __ptext13 2756  
                                                   __ptext30 252C  
                                                   __ptext22 294E  
                                                   __ptext14 1764  
                                                   __ptext31 2A72  
                                                   __ptext23 21A0  
                                                   __ptext15 14AA  
                                                   __ptext40 0DBE  
                                                   __ptext32 2A28  
                                                   __ptext24 2A5C  
                                                   __ptext16 11DA  
                                                   __ptext41 1E96  
                                                   __ptext33 29EE  
                                                   __ptext25 2794  
                                                   __ptext17 2604  
                                                   __ptext50 264A  
                                                   __ptext42 28EE  
                                                   __ptext26 24E2  
                                                   __ptext18 280E  
                                                   __ptext51 2848  
                                                   __ptext43 26D2  
                                                   __ptext35 1F40  
                                                   __ptext27 29D0  
                                                   __ptext19 204A  
                                                   __ptext60 2132  
                                                   __ptext52 29A6  
                                                   __ptext44 1DEA  
                                                   __ptext36 1FD0  
                                                   __ptext28 19D6  
                                                   __ptext61 20C0  
                                                   __ptext53 268E  
                                                   __ptext45 2A98  
                                                   __ptext37 2440  
                                                   __ptext29 2576  
                                                   __ptext62 297A  
                                                   __ptext54 2880  
                                                   __ptext46 27D2  
                                                   __ptext38 22D2  
                                                   __ptext55 2A44  
                                                   __ptext47 189E  
                                                   __ptext39 08D2  
                                                   __ptext56 2714  
                                                   __ptext48 1608  
                                                   __ptext57 2A82  
                                                   __ptext49 1344  
                                                   __ptext58 2492  
                                                   __ptext59 2332  
                                       __end_of_WriteCmdXLCD 25BE  
                                           __size_of_sprintf 0056  
                                           __size_of_vumeter 0090  
                                              __size_of_beep 0058  
                                                   codFreq@f 0080  
                                              __size_of_atoi 016A  
                                              __size_of_main 00F4  
                                              __size_of_dtoa 026C  
                                              __size_of_time 006E  
                                            ??i2_writeEEPROM 0002  
                                              ??_writeEEPROM 0081  
                                                   int$flags 007F  
                                                   _putsXLCD 2880  
                                                   _vfprintf 2272  
                                            writeFrequency@f 0082  
                                            writeFrequency@i 008B  
                                            writeFrequency@r 0089  
                                           ___aomod@dividend 0080  
                                                getData@aux0 0083  
                                                getData@aux1 0084  
                                            ?i2_SetDDRamAddr 0001  
                                             _vfpfcnvrt$1042 00D1  
                                                 _INTCONbits 000FF2  
                                              i2setData@full 0005  
                                                   isdigit@c 0080  
                                                   intlevel2 2AA8  
                                                  sprintf@ap 00E1  
                                           ___lwmod@dividend 0001  
                                                   isspace@c 0080  
                                          i2writeEEPROM@data 0002  
                                      __end_of_DelayFor18TCY 2A82  
                                    __end_ofi2_DelayFor18TCY 2A92  
                                            ___aomod@divisor 0088  
                                              ??i2_vfpfcnvrt 0046  
                                                ??_updateLCD 006E  
                                                ??_vfpfcnvrt 00C5  
                                            ___aomod@counter 0090  
                                        __end_of_writeEEPROM 294E  
                                                   sprintf@f 00E3  
                                                   sprintf@s 00DB  
                                       __end_of_DelayPORXLCD 2A44  
                                       i2SetDDRamAddr@DDaddr 0001  
                                            ___lwmod@divisor 0003  
                                            ___lwmod@counter 0005  
                                             i2_isspace$1517 0007  
                                               ___aodiv@sign 0091  
                                                 i2_BusyXLCD 2A44  
                                         i2___aodiv@dividend 0001  
                                               ___aomod@sign 0091  
